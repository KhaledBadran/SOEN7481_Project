[
  {
    "name": "PyCIM_\u0026_Test_\u0026_CIM14Test.py",
    "testCases": [
      {
        "name": "CIMTestCase",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "testInstantiation",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue]"
                ],
                [
                  "testOneToMany",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertNotEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertFalse, PyCallExpression: self.assertTrue]"
                ],
                [
                  "testManyToOne",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertFalse, PyCallExpression: self.assertNotEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertFalse, PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertFalse, PyCallExpression: self.assertEqual]"
                ],
                [
                  "testOneToOne",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertNotEqual, PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "testInstantiation",
                  "[]"
                ],
                [
                  "testOneToMany",
                  "[]"
                ],
                [
                  "testManyToOne",
                  "[]"
                ],
                [
                  "testOneToOne",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "testInstantiation",
                  "false"
                ],
                [
                  "testOneToMany",
                  "false"
                ],
                [
                  "testManyToOne",
                  "false"
                ],
                [
                  "testOneToOne",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "testInstantiation",
                  "false"
                ],
                [
                  "testOneToMany",
                  "false"
                ],
                [
                  "testManyToOne",
                  "false"
                ],
                [
                  "testOneToOne",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "testInstantiation",
                  "false"
                ],
                [
                  "testOneToMany",
                  "false"
                ],
                [
                  "testManyToOne",
                  "true"
                ],
                [
                  "testOneToOne",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "testInstantiation",
                  "false"
                ],
                [
                  "testOneToMany",
                  "false"
                ],
                [
                  "testManyToOne",
                  "false"
                ],
                [
                  "testOneToOne",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "testInstantiation",
                "false"
              ],
              [
                "testOneToMany",
                "false"
              ],
              [
                "testManyToOne",
                "false"
              ],
              [
                "testOneToOne",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "testInstantiation",
                "false"
              ],
              [
                "testOneToMany",
                "false"
              ],
              [
                "testManyToOne",
                "false"
              ],
              [
                "testOneToOne",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "testInstantiation",
                []
              ],
              [
                "testOneToMany",
                []
              ],
              [
                "testManyToOne",
                []
              ],
              [
                "testOneToOne",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "testInstantiation",
                "false"
              ],
              [
                "testOneToMany",
                "false"
              ],
              [
                "testManyToOne",
                "false"
              ],
              [
                "testOneToOne",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "testInstantiation",
                "false"
              ],
              [
                "testOneToMany",
                "false"
              ],
              [
                "testManyToOne",
                "false"
              ],
              [
                "testOneToOne",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "testInstantiation",
                  "0"
                ],
                [
                  "testOneToMany",
                  "0"
                ],
                [
                  "testManyToOne",
                  "0"
                ],
                [
                  "testOneToOne",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "testInstantiation",
                  "0"
                ],
                [
                  "testOneToMany",
                  "0"
                ],
                [
                  "testManyToOne",
                  "0"
                ],
                [
                  "testOneToOne",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "testInstantiation",
                "false"
              ],
              [
                "testOneToMany",
                "false"
              ],
              [
                "testManyToOne",
                "false"
              ],
              [
                "testOneToOne",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "testInstantiation",
                "false"
              ],
              [
                "testOneToMany",
                "false"
              ],
              [
                "testManyToOne",
                "false"
              ],
              [
                "testOneToOne",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "testInstantiation",
                "3"
              ],
              [
                "testOneToMany",
                "6"
              ],
              [
                "testManyToOne",
                "15"
              ],
              [
                "testOneToOne",
                "6"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "testInstantiation",
                [
                  "tw",
                  "pt",
                  "tn",
                  "cls",
                  "cn",
                  "clg"
                ]
              ],
              [
                "testOneToMany",
                [
                  "lg2",
                  "lg1",
                  "cl"
                ]
              ],
              [
                "testManyToOne",
                [
                  "tw3",
                  "pt1",
                  "tw2",
                  "tw1",
                  "pt2"
                ]
              ],
              [
                "testOneToOne",
                [
                  "sm1",
                  "tgu2",
                  "tgu1"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "testInstantiation",
                []
              ],
              [
                "testOneToMany",
                []
              ],
              [
                "testManyToOne",
                []
              ],
              [
                "testOneToOne",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5383520358678423,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "testInstantiation",
                  "testManyToOne",
                  0.6419693194132283
                ],
                [
                  "testInstantiation",
                  "testOneToOne",
                  0.6025667052048093
                ],
                [
                  "testInstantiation",
                  "testOneToMany",
                  0.607896986129799
                ],
                [
                  "testOneToOne",
                  "testManyToOne",
                  0.4826223023584149
                ],
                [
                  "testOneToOne",
                  "testOneToMany",
                  0.45109366734918155
                ],
                [
                  "testOneToMany",
                  "testManyToOne",
                  0.4439632347516204
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "testInstantiation",
                "true"
              ],
              [
                "testOneToMany",
                "true"
              ],
              [
                "testManyToOne",
                "true"
              ],
              [
                "testOneToOne",
                "true"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "PyCIM_\u0026_Test_\u0026_CIM15Test.py",
    "testCases": [
      {
        "name": "CIMTestCase",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_energy_consumer_phase_sets_attributes",
                  "[]"
                ],
                [
                  "test_xfmr_end_sets_base_voltage",
                  "[]"
                ],
                [
                  "test_base_voltage_set_xfmr_ends",
                  "[]"
                ],
                [
                  "test_base_voltage_remove_xfmr_end",
                  "[]"
                ],
                [
                  "test_base_voltage_add_xfmr_ends",
                  "[]"
                ],
                [
                  "testOneToMany",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertNotEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertFalse, PyCallExpression: self.assertTrue]"
                ],
                [
                  "testManyToOne",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertFalse, PyCallExpression: self.assertNotEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertFalse, PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertFalse, PyCallExpression: self.assertEqual]"
                ],
                [
                  "testInstantiation",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue]"
                ],
                [
                  "testOneToOne",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertNotEqual, PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_energy_consumer_phase_sets_attributes",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_xfmr_end_sets_base_voltage",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_base_voltage_set_xfmr_ends",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_base_voltage_remove_xfmr_end",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_base_voltage_add_xfmr_ends",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "testOneToMany",
                  "[]"
                ],
                [
                  "testManyToOne",
                  "[]"
                ],
                [
                  "testInstantiation",
                  "[]"
                ],
                [
                  "testOneToOne",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_energy_consumer_phase_sets_attributes",
                  "false"
                ],
                [
                  "test_xfmr_end_sets_base_voltage",
                  "false"
                ],
                [
                  "test_base_voltage_set_xfmr_ends",
                  "false"
                ],
                [
                  "test_base_voltage_remove_xfmr_end",
                  "false"
                ],
                [
                  "test_base_voltage_add_xfmr_ends",
                  "false"
                ],
                [
                  "testOneToMany",
                  "false"
                ],
                [
                  "testManyToOne",
                  "false"
                ],
                [
                  "testInstantiation",
                  "false"
                ],
                [
                  "testOneToOne",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_energy_consumer_phase_sets_attributes",
                  "false"
                ],
                [
                  "test_xfmr_end_sets_base_voltage",
                  "false"
                ],
                [
                  "test_base_voltage_set_xfmr_ends",
                  "false"
                ],
                [
                  "test_base_voltage_remove_xfmr_end",
                  "false"
                ],
                [
                  "test_base_voltage_add_xfmr_ends",
                  "false"
                ],
                [
                  "testOneToMany",
                  "false"
                ],
                [
                  "testManyToOne",
                  "false"
                ],
                [
                  "testInstantiation",
                  "false"
                ],
                [
                  "testOneToOne",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_energy_consumer_phase_sets_attributes",
                  "false"
                ],
                [
                  "test_xfmr_end_sets_base_voltage",
                  "false"
                ],
                [
                  "test_base_voltage_set_xfmr_ends",
                  "false"
                ],
                [
                  "test_base_voltage_remove_xfmr_end",
                  "false"
                ],
                [
                  "test_base_voltage_add_xfmr_ends",
                  "false"
                ],
                [
                  "testOneToMany",
                  "false"
                ],
                [
                  "testManyToOne",
                  "true"
                ],
                [
                  "testInstantiation",
                  "false"
                ],
                [
                  "testOneToOne",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_energy_consumer_phase_sets_attributes",
                  "false"
                ],
                [
                  "test_xfmr_end_sets_base_voltage",
                  "false"
                ],
                [
                  "test_base_voltage_set_xfmr_ends",
                  "false"
                ],
                [
                  "test_base_voltage_remove_xfmr_end",
                  "false"
                ],
                [
                  "test_base_voltage_add_xfmr_ends",
                  "false"
                ],
                [
                  "testOneToMany",
                  "false"
                ],
                [
                  "testManyToOne",
                  "false"
                ],
                [
                  "testInstantiation",
                  "false"
                ],
                [
                  "testOneToOne",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_energy_consumer_phase_sets_attributes",
                "false"
              ],
              [
                "test_xfmr_end_sets_base_voltage",
                "false"
              ],
              [
                "test_base_voltage_set_xfmr_ends",
                "false"
              ],
              [
                "test_base_voltage_remove_xfmr_end",
                "false"
              ],
              [
                "test_base_voltage_add_xfmr_ends",
                "false"
              ],
              [
                "testOneToMany",
                "false"
              ],
              [
                "testManyToOne",
                "false"
              ],
              [
                "testInstantiation",
                "false"
              ],
              [
                "testOneToOne",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_energy_consumer_phase_sets_attributes",
                "false"
              ],
              [
                "test_xfmr_end_sets_base_voltage",
                "false"
              ],
              [
                "test_base_voltage_set_xfmr_ends",
                "false"
              ],
              [
                "test_base_voltage_remove_xfmr_end",
                "false"
              ],
              [
                "test_base_voltage_add_xfmr_ends",
                "false"
              ],
              [
                "testOneToMany",
                "false"
              ],
              [
                "testManyToOne",
                "false"
              ],
              [
                "testInstantiation",
                "false"
              ],
              [
                "testOneToOne",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_energy_consumer_phase_sets_attributes",
                []
              ],
              [
                "test_xfmr_end_sets_base_voltage",
                []
              ],
              [
                "test_base_voltage_set_xfmr_ends",
                []
              ],
              [
                "test_base_voltage_remove_xfmr_end",
                []
              ],
              [
                "test_base_voltage_add_xfmr_ends",
                []
              ],
              [
                "testOneToMany",
                []
              ],
              [
                "testManyToOne",
                []
              ],
              [
                "testInstantiation",
                []
              ],
              [
                "testOneToOne",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_energy_consumer_phase_sets_attributes",
                "false"
              ],
              [
                "test_xfmr_end_sets_base_voltage",
                "false"
              ],
              [
                "test_base_voltage_set_xfmr_ends",
                "false"
              ],
              [
                "test_base_voltage_remove_xfmr_end",
                "false"
              ],
              [
                "test_base_voltage_add_xfmr_ends",
                "false"
              ],
              [
                "testOneToMany",
                "false"
              ],
              [
                "testManyToOne",
                "false"
              ],
              [
                "testInstantiation",
                "false"
              ],
              [
                "testOneToOne",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_energy_consumer_phase_sets_attributes",
                "false"
              ],
              [
                "test_xfmr_end_sets_base_voltage",
                "false"
              ],
              [
                "test_base_voltage_set_xfmr_ends",
                "false"
              ],
              [
                "test_base_voltage_remove_xfmr_end",
                "false"
              ],
              [
                "test_base_voltage_add_xfmr_ends",
                "false"
              ],
              [
                "testOneToMany",
                "false"
              ],
              [
                "testManyToOne",
                "false"
              ],
              [
                "testInstantiation",
                "false"
              ],
              [
                "testOneToOne",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_energy_consumer_phase_sets_attributes",
                  "0"
                ],
                [
                  "test_xfmr_end_sets_base_voltage",
                  "0"
                ],
                [
                  "test_base_voltage_set_xfmr_ends",
                  "0"
                ],
                [
                  "test_base_voltage_remove_xfmr_end",
                  "0"
                ],
                [
                  "test_base_voltage_add_xfmr_ends",
                  "0"
                ],
                [
                  "testOneToMany",
                  "0"
                ],
                [
                  "testManyToOne",
                  "0"
                ],
                [
                  "testInstantiation",
                  "0"
                ],
                [
                  "testOneToOne",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_energy_consumer_phase_sets_attributes",
                  "0"
                ],
                [
                  "test_xfmr_end_sets_base_voltage",
                  "0"
                ],
                [
                  "test_base_voltage_set_xfmr_ends",
                  "0"
                ],
                [
                  "test_base_voltage_remove_xfmr_end",
                  "0"
                ],
                [
                  "test_base_voltage_add_xfmr_ends",
                  "0"
                ],
                [
                  "testOneToMany",
                  "0"
                ],
                [
                  "testManyToOne",
                  "0"
                ],
                [
                  "testInstantiation",
                  "0"
                ],
                [
                  "testOneToOne",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_energy_consumer_phase_sets_attributes",
                "false"
              ],
              [
                "test_xfmr_end_sets_base_voltage",
                "false"
              ],
              [
                "test_base_voltage_set_xfmr_ends",
                "false"
              ],
              [
                "test_base_voltage_remove_xfmr_end",
                "false"
              ],
              [
                "test_base_voltage_add_xfmr_ends",
                "false"
              ],
              [
                "testOneToMany",
                "false"
              ],
              [
                "testManyToOne",
                "false"
              ],
              [
                "testInstantiation",
                "false"
              ],
              [
                "testOneToOne",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_energy_consumer_phase_sets_attributes",
                "false"
              ],
              [
                "test_xfmr_end_sets_base_voltage",
                "false"
              ],
              [
                "test_base_voltage_set_xfmr_ends",
                "false"
              ],
              [
                "test_base_voltage_remove_xfmr_end",
                "false"
              ],
              [
                "test_base_voltage_add_xfmr_ends",
                "false"
              ],
              [
                "testOneToMany",
                "false"
              ],
              [
                "testManyToOne",
                "false"
              ],
              [
                "testInstantiation",
                "false"
              ],
              [
                "testOneToOne",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_energy_consumer_phase_sets_attributes",
                "4"
              ],
              [
                "test_xfmr_end_sets_base_voltage",
                "3"
              ],
              [
                "test_base_voltage_set_xfmr_ends",
                "8"
              ],
              [
                "test_base_voltage_remove_xfmr_end",
                "3"
              ],
              [
                "test_base_voltage_add_xfmr_ends",
                "3"
              ],
              [
                "testOneToMany",
                "6"
              ],
              [
                "testManyToOne",
                "15"
              ],
              [
                "testInstantiation",
                "3"
              ],
              [
                "testOneToOne",
                "6"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_energy_consumer_phase_sets_attributes",
                [
                  "energy_consumer_phase",
                  "energy_consumer"
                ]
              ],
              [
                "test_xfmr_end_sets_base_voltage",
                [
                  "xfmr_end_2",
                  "base_voltage",
                  "xfmr_end_1"
                ]
              ],
              [
                "test_base_voltage_set_xfmr_ends",
                [
                  "xfmr_end_4",
                  "xfmr_end_2",
                  "xfmr_end_3",
                  "xfmr_end_1",
                  "base_voltage"
                ]
              ],
              [
                "test_base_voltage_remove_xfmr_end",
                [
                  "xfmr_end_2",
                  "xfmr_end_1",
                  "base_voltage"
                ]
              ],
              [
                "test_base_voltage_add_xfmr_ends",
                [
                  "xfmr_end_2",
                  "xfmr_end_1",
                  "base_voltage"
                ]
              ],
              [
                "testOneToMany",
                [
                  "lg2",
                  "lg1",
                  "cl"
                ]
              ],
              [
                "testManyToOne",
                [
                  "te2",
                  "te1",
                  "te3",
                  "pt1",
                  "pt2"
                ]
              ],
              [
                "testInstantiation",
                [
                  "te",
                  "pt",
                  "tn",
                  "cls",
                  "cn",
                  "clg"
                ]
              ],
              [
                "testOneToOne",
                [
                  "sm1",
                  "tgu2",
                  "tgu1"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_energy_consumer_phase_sets_attributes",
                []
              ],
              [
                "test_xfmr_end_sets_base_voltage",
                []
              ],
              [
                "test_base_voltage_set_xfmr_ends",
                []
              ],
              [
                "test_base_voltage_remove_xfmr_end",
                []
              ],
              [
                "test_base_voltage_add_xfmr_ends",
                []
              ],
              [
                "testOneToMany",
                []
              ],
              [
                "testManyToOne",
                []
              ],
              [
                "testInstantiation",
                []
              ],
              [
                "testOneToOne",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4573144325201721,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_energy_consumer_phase_sets_attributes",
                  "test_xfmr_end_sets_base_voltage",
                  0.22679249309430746
                ],
                [
                  "test_base_voltage_remove_xfmr_end",
                  "testInstantiation",
                  0.545555381072576
                ],
                [
                  "test_energy_consumer_phase_sets_attributes",
                  "test_base_voltage_set_xfmr_ends",
                  0.24208289035064703
                ],
                [
                  "test_energy_consumer_phase_sets_attributes",
                  "testInstantiation",
                  0.2044987403425306
                ],
                [
                  "test_base_voltage_set_xfmr_ends",
                  "testInstantiation",
                  0.5358095926076325
                ],
                [
                  "test_base_voltage_remove_xfmr_end",
                  "testOneToMany",
                  0.29656061067431677
                ],
                [
                  "test_base_voltage_set_xfmr_ends",
                  "testManyToOne",
                  0.3794145654819534
                ],
                [
                  "test_base_voltage_add_xfmr_ends",
                  "testOneToOne",
                  0.3016993617699048
                ],
                [
                  "test_base_voltage_set_xfmr_ends",
                  "test_base_voltage_remove_xfmr_end",
                  0.9788371106576729
                ],
                [
                  "test_base_voltage_remove_xfmr_end",
                  "testOneToOne",
                  0.30916056232227485
                ],
                [
                  "testInstantiation",
                  "testOneToMany",
                  0.6075056259456676
                ],
                [
                  "testOneToOne",
                  "testOneToMany",
                  0.45109366734918155
                ],
                [
                  "test_base_voltage_set_xfmr_ends",
                  "testOneToMany",
                  0.28166674400889186
                ],
                [
                  "testInstantiation",
                  "testManyToOne",
                  0.6193380018103863
                ],
                [
                  "testOneToOne",
                  "testManyToOne",
                  0.4269431777043315
                ],
                [
                  "test_energy_consumer_phase_sets_attributes",
                  "test_base_voltage_remove_xfmr_end",
                  0.23000157168277643
                ],
                [
                  "test_xfmr_end_sets_base_voltage",
                  "testManyToOne",
                  0.3434447754700006
                ],
                [
                  "test_base_voltage_remove_xfmr_end",
                  "testManyToOne",
                  0.38811731154064943
                ],
                [
                  "testOneToMany",
                  "testManyToOne",
                  0.3927441257946375
                ],
                [
                  "test_xfmr_end_sets_base_voltage",
                  "test_base_voltage_add_xfmr_ends",
                  0.9574394431116786
                ],
                [
                  "test_base_voltage_set_xfmr_ends",
                  "testOneToOne",
                  0.29616728021324396
                ],
                [
                  "testInstantiation",
                  "testOneToOne",
                  0.6018370421946952
                ],
                [
                  "test_energy_consumer_phase_sets_attributes",
                  "testOneToMany",
                  0.2330394104921182
                ],
                [
                  "test_energy_consumer_phase_sets_attributes",
                  "testManyToOne",
                  0.11270033446019947
                ],
                [
                  "test_xfmr_end_sets_base_voltage",
                  "testOneToOne",
                  0.29075783294148716
                ],
                [
                  "test_xfmr_end_sets_base_voltage",
                  "testOneToMany",
                  0.2753222985266148
                ],
                [
                  "test_base_voltage_add_xfmr_ends",
                  "test_base_voltage_set_xfmr_ends",
                  0.9829766182327249
                ],
                [
                  "test_base_voltage_add_xfmr_ends",
                  "testInstantiation",
                  0.5319745242113929
                ],
                [
                  "test_base_voltage_add_xfmr_ends",
                  "test_base_voltage_remove_xfmr_end",
                  0.984267624588667
                ],
                [
                  "test_xfmr_end_sets_base_voltage",
                  "testInstantiation",
                  0.49947038423956786
                ],
                [
                  "test_base_voltage_add_xfmr_ends",
                  "testManyToOne",
                  0.3910368460965523
                ],
                [
                  "test_xfmr_end_sets_base_voltage",
                  "test_base_voltage_remove_xfmr_end",
                  0.9490737392773158
                ],
                [
                  "test_energy_consumer_phase_sets_attributes",
                  "test_base_voltage_add_xfmr_ends",
                  0.2267811368327224
                ],
                [
                  "test_energy_consumer_phase_sets_attributes",
                  "testOneToOne",
                  0.1285445676987683
                ],
                [
                  "test_xfmr_end_sets_base_voltage",
                  "test_base_voltage_set_xfmr_ends",
                  0.9523585429274223
                ],
                [
                  "test_base_voltage_add_xfmr_ends",
                  "testOneToMany",
                  0.28830563500068423
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_energy_consumer_phase_sets_attributes",
                "false"
              ],
              [
                "test_xfmr_end_sets_base_voltage",
                "false"
              ],
              [
                "test_base_voltage_set_xfmr_ends",
                "false"
              ],
              [
                "test_base_voltage_remove_xfmr_end",
                "false"
              ],
              [
                "test_base_voltage_add_xfmr_ends",
                "false"
              ],
              [
                "testOneToMany",
                "true"
              ],
              [
                "testManyToOne",
                "true"
              ],
              [
                "testInstantiation",
                "true"
              ],
              [
                "testOneToOne",
                "true"
              ]
            ]
          }
        ],
        "numberOfMethods": 9
      },
      {
        "name": "ACLineSegmentTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_more_than_one_impedance_returns_error",
                  "[]"
                ],
                [
                  "test_sets_per_length_impedance_given_phase_via_generic",
                  "[]"
                ],
                [
                  "test_ac_line_segment_phases_sets_attributes",
                  "[]"
                ],
                [
                  "test_sets_per_length_impedance_given_sequence_via_generic",
                  "[]"
                ],
                [
                  "test_sets_per_length_impedance_given_sequence",
                  "[]"
                ],
                [
                  "test_sets_per_length_impedance_given_phase",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_more_than_one_impedance_returns_error",
                  "[]"
                ],
                [
                  "test_sets_per_length_impedance_given_phase_via_generic",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_ac_line_segment_phases_sets_attributes",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_sets_per_length_impedance_given_sequence_via_generic",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_sets_per_length_impedance_given_sequence",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_sets_per_length_impedance_given_phase",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_more_than_one_impedance_returns_error",
                  "false"
                ],
                [
                  "test_sets_per_length_impedance_given_phase_via_generic",
                  "false"
                ],
                [
                  "test_ac_line_segment_phases_sets_attributes",
                  "false"
                ],
                [
                  "test_sets_per_length_impedance_given_sequence_via_generic",
                  "false"
                ],
                [
                  "test_sets_per_length_impedance_given_sequence",
                  "false"
                ],
                [
                  "test_sets_per_length_impedance_given_phase",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_more_than_one_impedance_returns_error",
                  "false"
                ],
                [
                  "test_sets_per_length_impedance_given_phase_via_generic",
                  "false"
                ],
                [
                  "test_ac_line_segment_phases_sets_attributes",
                  "false"
                ],
                [
                  "test_sets_per_length_impedance_given_sequence_via_generic",
                  "false"
                ],
                [
                  "test_sets_per_length_impedance_given_sequence",
                  "false"
                ],
                [
                  "test_sets_per_length_impedance_given_phase",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_more_than_one_impedance_returns_error",
                  "false"
                ],
                [
                  "test_sets_per_length_impedance_given_phase_via_generic",
                  "false"
                ],
                [
                  "test_ac_line_segment_phases_sets_attributes",
                  "false"
                ],
                [
                  "test_sets_per_length_impedance_given_sequence_via_generic",
                  "false"
                ],
                [
                  "test_sets_per_length_impedance_given_sequence",
                  "false"
                ],
                [
                  "test_sets_per_length_impedance_given_phase",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_more_than_one_impedance_returns_error",
                  "false"
                ],
                [
                  "test_sets_per_length_impedance_given_phase_via_generic",
                  "false"
                ],
                [
                  "test_ac_line_segment_phases_sets_attributes",
                  "false"
                ],
                [
                  "test_sets_per_length_impedance_given_sequence_via_generic",
                  "false"
                ],
                [
                  "test_sets_per_length_impedance_given_sequence",
                  "false"
                ],
                [
                  "test_sets_per_length_impedance_given_phase",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_more_than_one_impedance_returns_error",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_phase_via_generic",
                "false"
              ],
              [
                "test_ac_line_segment_phases_sets_attributes",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_sequence_via_generic",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_sequence",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_phase",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_more_than_one_impedance_returns_error",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_phase_via_generic",
                "false"
              ],
              [
                "test_ac_line_segment_phases_sets_attributes",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_sequence_via_generic",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_sequence",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_phase",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_more_than_one_impedance_returns_error",
                []
              ],
              [
                "test_sets_per_length_impedance_given_phase_via_generic",
                []
              ],
              [
                "test_ac_line_segment_phases_sets_attributes",
                []
              ],
              [
                "test_sets_per_length_impedance_given_sequence_via_generic",
                []
              ],
              [
                "test_sets_per_length_impedance_given_sequence",
                []
              ],
              [
                "test_sets_per_length_impedance_given_phase",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_more_than_one_impedance_returns_error",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_phase_via_generic",
                "false"
              ],
              [
                "test_ac_line_segment_phases_sets_attributes",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_sequence_via_generic",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_sequence",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_phase",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_more_than_one_impedance_returns_error",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_phase_via_generic",
                "false"
              ],
              [
                "test_ac_line_segment_phases_sets_attributes",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_sequence_via_generic",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_sequence",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_phase",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_more_than_one_impedance_returns_error",
                  "0"
                ],
                [
                  "test_sets_per_length_impedance_given_phase_via_generic",
                  "0"
                ],
                [
                  "test_ac_line_segment_phases_sets_attributes",
                  "0"
                ],
                [
                  "test_sets_per_length_impedance_given_sequence_via_generic",
                  "0"
                ],
                [
                  "test_sets_per_length_impedance_given_sequence",
                  "0"
                ],
                [
                  "test_sets_per_length_impedance_given_phase",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_more_than_one_impedance_returns_error",
                  "0"
                ],
                [
                  "test_sets_per_length_impedance_given_phase_via_generic",
                  "0"
                ],
                [
                  "test_ac_line_segment_phases_sets_attributes",
                  "0"
                ],
                [
                  "test_sets_per_length_impedance_given_sequence_via_generic",
                  "0"
                ],
                [
                  "test_sets_per_length_impedance_given_sequence",
                  "0"
                ],
                [
                  "test_sets_per_length_impedance_given_phase",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_more_than_one_impedance_returns_error",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_phase_via_generic",
                "false"
              ],
              [
                "test_ac_line_segment_phases_sets_attributes",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_sequence_via_generic",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_sequence",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_phase",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_more_than_one_impedance_returns_error",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_phase_via_generic",
                "false"
              ],
              [
                "test_ac_line_segment_phases_sets_attributes",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_sequence_via_generic",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_sequence",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_phase",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_more_than_one_impedance_returns_error",
                "0"
              ],
              [
                "test_sets_per_length_impedance_given_phase_via_generic",
                "3"
              ],
              [
                "test_ac_line_segment_phases_sets_attributes",
                "2"
              ],
              [
                "test_sets_per_length_impedance_given_sequence_via_generic",
                "3"
              ],
              [
                "test_sets_per_length_impedance_given_sequence",
                "3"
              ],
              [
                "test_sets_per_length_impedance_given_phase",
                "3"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_more_than_one_impedance_returns_error",
                [
                  "per_length_phase_impedance",
                  "per_length_sequence_impedance",
                  "ac_line_segment"
                ]
              ],
              [
                "test_sets_per_length_impedance_given_phase_via_generic",
                [
                  "per_length_phase_impedance",
                  "ac_line_segment"
                ]
              ],
              [
                "test_ac_line_segment_phases_sets_attributes",
                [
                  "ac_line_segment",
                  "ac_line_segment_phase"
                ]
              ],
              [
                "test_sets_per_length_impedance_given_sequence_via_generic",
                [
                  "per_length_sequence_impedance",
                  "ac_line_segment"
                ]
              ],
              [
                "test_sets_per_length_impedance_given_sequence",
                [
                  "per_length_sequence_impedance",
                  "ac_line_segment"
                ]
              ],
              [
                "test_sets_per_length_impedance_given_phase",
                [
                  "per_length_phase_impedance",
                  "ac_line_segment"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_more_than_one_impedance_returns_error",
                []
              ],
              [
                "test_sets_per_length_impedance_given_phase_via_generic",
                []
              ],
              [
                "test_ac_line_segment_phases_sets_attributes",
                []
              ],
              [
                "test_sets_per_length_impedance_given_sequence_via_generic",
                []
              ],
              [
                "test_sets_per_length_impedance_given_sequence",
                []
              ],
              [
                "test_sets_per_length_impedance_given_phase",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7311945820816653,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_ac_line_segment_phases_sets_attributes",
                  "test_sets_per_length_impedance_given_phase",
                  0.5034718986226567
                ],
                [
                  "test_sets_per_length_impedance_given_phase",
                  "test_sets_per_length_impedance_given_sequence",
                  0.86553782516331
                ],
                [
                  "test_ac_line_segment_phases_sets_attributes",
                  "test_sets_per_length_impedance_given_sequence_via_generic",
                  0.4407154562687259
                ],
                [
                  "test_sets_per_length_impedance_given_phase",
                  "test_sets_per_length_impedance_given_sequence_via_generic",
                  0.8737316178684914
                ],
                [
                  "test_sets_per_length_impedance_given_phase",
                  "test_sets_per_length_impedance_given_phase_via_generic",
                  0.992876838486922
                ],
                [
                  "test_ac_line_segment_phases_sets_attributes",
                  "test_sets_per_length_impedance_given_sequence",
                  0.45919429866285627
                ],
                [
                  "test_sets_per_length_impedance_given_sequence",
                  "test_sets_per_length_impedance_given_phase_via_generic",
                  0.8677265184072449
                ],
                [
                  "test_ac_line_segment_phases_sets_attributes",
                  "test_sets_per_length_impedance_given_phase_via_generic",
                  0.4798901634926126
                ],
                [
                  "test_sets_per_length_impedance_given_phase",
                  "test_more_than_one_impedance_returns_error",
                  0.8156887281713674
                ],
                [
                  "test_sets_per_length_impedance_given_sequence",
                  "test_sets_per_length_impedance_given_sequence_via_generic",
                  0.9860528618264147
                ],
                [
                  "test_ac_line_segment_phases_sets_attributes",
                  "test_more_than_one_impedance_returns_error",
                  0.34218212635223466
                ],
                [
                  "test_sets_per_length_impedance_given_sequence",
                  "test_more_than_one_impedance_returns_error",
                  0.8100825536414399
                ],
                [
                  "test_sets_per_length_impedance_given_sequence_via_generic",
                  "test_more_than_one_impedance_returns_error",
                  0.8221662565152099
                ],
                [
                  "test_sets_per_length_impedance_given_phase_via_generic",
                  "test_more_than_one_impedance_returns_error",
                  0.8221662565152099
                ],
                [
                  "test_sets_per_length_impedance_given_phase_via_generic",
                  "test_sets_per_length_impedance_given_sequence_via_generic",
                  0.8864353312302837
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_more_than_one_impedance_returns_error",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_phase_via_generic",
                "false"
              ],
              [
                "test_ac_line_segment_phases_sets_attributes",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_sequence_via_generic",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_sequence",
                "false"
              ],
              [
                "test_sets_per_length_impedance_given_phase",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      }
    ]
  },
  {
    "name": "PyCIM_\u0026_Test_\u0026_RDFXMLReaderTest.py",
    "testCases": [
      {
        "name": "RDFXMLReaderTestCase",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "testProfile",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "testGetNamespaces",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "testCombined",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_cim_reads_are_independent",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "testProfile",
                  "[]"
                ],
                [
                  "testGetNamespaces",
                  "[]"
                ],
                [
                  "testCombined",
                  "[]"
                ],
                [
                  "test_cim_reads_are_independent",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "testProfile",
                  "false"
                ],
                [
                  "testGetNamespaces",
                  "false"
                ],
                [
                  "testCombined",
                  "false"
                ],
                [
                  "test_cim_reads_are_independent",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "testProfile",
                  "false"
                ],
                [
                  "testGetNamespaces",
                  "false"
                ],
                [
                  "testCombined",
                  "false"
                ],
                [
                  "test_cim_reads_are_independent",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "testProfile",
                  "false"
                ],
                [
                  "testGetNamespaces",
                  "false"
                ],
                [
                  "testCombined",
                  "false"
                ],
                [
                  "test_cim_reads_are_independent",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "testProfile",
                  "false"
                ],
                [
                  "testGetNamespaces",
                  "false"
                ],
                [
                  "testCombined",
                  "false"
                ],
                [
                  "test_cim_reads_are_independent",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "testProfile",
                "false"
              ],
              [
                "testGetNamespaces",
                "false"
              ],
              [
                "testCombined",
                "false"
              ],
              [
                "test_cim_reads_are_independent",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "testProfile",
                "false"
              ],
              [
                "testGetNamespaces",
                "false"
              ],
              [
                "testCombined",
                "false"
              ],
              [
                "test_cim_reads_are_independent",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "testProfile",
                []
              ],
              [
                "testGetNamespaces",
                []
              ],
              [
                "testCombined",
                []
              ],
              [
                "test_cim_reads_are_independent",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "testProfile",
                "false"
              ],
              [
                "testGetNamespaces",
                "false"
              ],
              [
                "testCombined",
                "false"
              ],
              [
                "test_cim_reads_are_independent",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "testProfile",
                "true"
              ],
              [
                "testGetNamespaces",
                "false"
              ],
              [
                "testCombined",
                "true"
              ],
              [
                "test_cim_reads_are_independent",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "testProfile",
                  "0"
                ],
                [
                  "testGetNamespaces",
                  "0"
                ],
                [
                  "testCombined",
                  "0"
                ],
                [
                  "test_cim_reads_are_independent",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "testProfile",
                  "0"
                ],
                [
                  "testGetNamespaces",
                  "0"
                ],
                [
                  "testCombined",
                  "0"
                ],
                [
                  "test_cim_reads_are_independent",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "testProfile",
                "false"
              ],
              [
                "testGetNamespaces",
                "false"
              ],
              [
                "testCombined",
                "false"
              ],
              [
                "test_cim_reads_are_independent",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "testProfile",
                "false"
              ],
              [
                "testGetNamespaces",
                "false"
              ],
              [
                "testCombined",
                "false"
              ],
              [
                "test_cim_reads_are_independent",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "testProfile",
                "1"
              ],
              [
                "testGetNamespaces",
                "3"
              ],
              [
                "testCombined",
                "1"
              ],
              [
                "test_cim_reads_are_independent",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "testProfile",
                [
                  "d"
                ]
              ],
              [
                "testGetNamespaces",
                [
                  "ns"
                ]
              ],
              [
                "testCombined",
                [
                  "d"
                ]
              ],
              [
                "test_cim_reads_are_independent",
                [
                  "sio",
                  "empty_cim_dict"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "testProfile",
                []
              ],
              [
                "testGetNamespaces",
                []
              ],
              [
                "testCombined",
                []
              ],
              [
                "test_cim_reads_are_independent",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.34456904087252793,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_cim_reads_are_independent",
                  "testProfile",
                  0.4345874132565307
                ],
                [
                  "testCombined",
                  "testProfile",
                  0.3759151294787383
                ],
                [
                  "testCombined",
                  "testGetNamespaces",
                  0.3327989614488284
                ],
                [
                  "testCombined",
                  "test_cim_reads_are_independent",
                  0.44958609806628597
                ],
                [
                  "test_cim_reads_are_independent",
                  "testGetNamespaces",
                  0.25843763125886643
                ],
                [
                  "testProfile",
                  "testGetNamespaces",
                  0.21608901172591757
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "testProfile",
                "false"
              ],
              [
                "testGetNamespaces",
                "false"
              ],
              [
                "testCombined",
                "false"
              ],
              [
                "test_cim_reads_are_independent",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "PyCIM_\u0026_Test_\u0026_RDFXMLWriterTest.py",
    "testCases": [
      {
        "name": "RDFXMLWriterTestCase",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "testSerialise",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "testSerialise",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "testSerialise",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "testSerialise",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "testSerialise",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "testSerialise",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "testSerialise",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "testSerialise",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "testSerialise",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "testSerialise",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "testSerialise",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "testSerialise",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "testSerialise",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "testSerialise",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "testSerialise",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "testSerialise",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "testSerialise",
                [
                  "output",
                  "dd",
                  "d"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "testSerialise",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "testSerialise",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  }
]