[
  {
    "name": "test_\u0026_test_ast.py",
    "testCases": [
      {
        "name": "AstParseTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_locate_identifiers_13",
                  "[]"
                ],
                [
                  "test_locate_identifiers_11",
                  "[]"
                ],
                [
                  "test_locate_identifiers_2",
                  "[]"
                ],
                [
                  "test_locate_identifiers_4",
                  "[]"
                ],
                [
                  "test_locate_identifiers_9",
                  "[]"
                ],
                [
                  "test_locate_identifiers_10",
                  "[]"
                ],
                [
                  "test_python_fragment",
                  "[]"
                ],
                [
                  "test_function_decl_2",
                  "[]"
                ],
                [
                  "test_locate_identifiers_3",
                  "[]"
                ],
                [
                  "test_locate_identifiers",
                  "[]"
                ],
                [
                  "test_locate_identifiers_14",
                  "[]"
                ],
                [
                  "test_locate_identifiers_8",
                  "[]"
                ],
                [
                  "test_function_decl_3",
                  "[]"
                ],
                [
                  "test_locate_identifiers_15",
                  "[]"
                ],
                [
                  "test_expr_generate",
                  "[]"
                ],
                [
                  "test_locate_identifiers_5",
                  "[]"
                ],
                [
                  "test_locate_identifiers_6",
                  "[]"
                ],
                [
                  "test_no_global_imports",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_locate_identifiers_16",
                  "[]"
                ],
                [
                  "test_locate_identifiers_17",
                  "[]"
                ],
                [
                  "test_locate_identifiers_12",
                  "[]"
                ],
                [
                  "test_argument_list",
                  "[]"
                ],
                [
                  "test_locate_identifiers_7",
                  "[]"
                ],
                [
                  "test_function_decl",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_locate_identifiers_13",
                  "[]"
                ],
                [
                  "test_locate_identifiers_11",
                  "[]"
                ],
                [
                  "test_locate_identifiers_2",
                  "[]"
                ],
                [
                  "test_locate_identifiers_4",
                  "[]"
                ],
                [
                  "test_locate_identifiers_9",
                  "[]"
                ],
                [
                  "test_locate_identifiers_10",
                  "[]"
                ],
                [
                  "test_python_fragment",
                  "[]"
                ],
                [
                  "test_function_decl_2",
                  "[]"
                ],
                [
                  "test_locate_identifiers_3",
                  "[]"
                ],
                [
                  "test_locate_identifiers",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_locate_identifiers_14",
                  "[]"
                ],
                [
                  "test_locate_identifiers_8",
                  "[]"
                ],
                [
                  "test_function_decl_3",
                  "[]"
                ],
                [
                  "test_locate_identifiers_15",
                  "[]"
                ],
                [
                  "test_expr_generate",
                  "[]"
                ],
                [
                  "test_locate_identifiers_5",
                  "[]"
                ],
                [
                  "test_locate_identifiers_6",
                  "[]"
                ],
                [
                  "test_no_global_imports",
                  "[]"
                ],
                [
                  "test_locate_identifiers_16",
                  "[]"
                ],
                [
                  "test_locate_identifiers_17",
                  "[]"
                ],
                [
                  "test_locate_identifiers_12",
                  "[]"
                ],
                [
                  "test_argument_list",
                  "[]"
                ],
                [
                  "test_locate_identifiers_7",
                  "[]"
                ],
                [
                  "test_function_decl",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_locate_identifiers_13",
                  "false"
                ],
                [
                  "test_locate_identifiers_11",
                  "false"
                ],
                [
                  "test_locate_identifiers_2",
                  "false"
                ],
                [
                  "test_locate_identifiers_4",
                  "false"
                ],
                [
                  "test_locate_identifiers_9",
                  "false"
                ],
                [
                  "test_locate_identifiers_10",
                  "false"
                ],
                [
                  "test_python_fragment",
                  "true"
                ],
                [
                  "test_function_decl_2",
                  "false"
                ],
                [
                  "test_locate_identifiers_3",
                  "false"
                ],
                [
                  "test_locate_identifiers",
                  "false"
                ],
                [
                  "test_locate_identifiers_14",
                  "false"
                ],
                [
                  "test_locate_identifiers_8",
                  "false"
                ],
                [
                  "test_function_decl_3",
                  "false"
                ],
                [
                  "test_locate_identifiers_15",
                  "false"
                ],
                [
                  "test_expr_generate",
                  "true"
                ],
                [
                  "test_locate_identifiers_5",
                  "false"
                ],
                [
                  "test_locate_identifiers_6",
                  "false"
                ],
                [
                  "test_no_global_imports",
                  "false"
                ],
                [
                  "test_locate_identifiers_16",
                  "false"
                ],
                [
                  "test_locate_identifiers_17",
                  "false"
                ],
                [
                  "test_locate_identifiers_12",
                  "false"
                ],
                [
                  "test_argument_list",
                  "false"
                ],
                [
                  "test_locate_identifiers_7",
                  "false"
                ],
                [
                  "test_function_decl",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_locate_identifiers_13",
                  "false"
                ],
                [
                  "test_locate_identifiers_11",
                  "false"
                ],
                [
                  "test_locate_identifiers_2",
                  "false"
                ],
                [
                  "test_locate_identifiers_4",
                  "false"
                ],
                [
                  "test_locate_identifiers_9",
                  "false"
                ],
                [
                  "test_locate_identifiers_10",
                  "false"
                ],
                [
                  "test_python_fragment",
                  "false"
                ],
                [
                  "test_function_decl_2",
                  "false"
                ],
                [
                  "test_locate_identifiers_3",
                  "false"
                ],
                [
                  "test_locate_identifiers",
                  "false"
                ],
                [
                  "test_locate_identifiers_14",
                  "false"
                ],
                [
                  "test_locate_identifiers_8",
                  "false"
                ],
                [
                  "test_function_decl_3",
                  "false"
                ],
                [
                  "test_locate_identifiers_15",
                  "false"
                ],
                [
                  "test_expr_generate",
                  "false"
                ],
                [
                  "test_locate_identifiers_5",
                  "false"
                ],
                [
                  "test_locate_identifiers_6",
                  "false"
                ],
                [
                  "test_no_global_imports",
                  "false"
                ],
                [
                  "test_locate_identifiers_16",
                  "false"
                ],
                [
                  "test_locate_identifiers_17",
                  "false"
                ],
                [
                  "test_locate_identifiers_12",
                  "false"
                ],
                [
                  "test_argument_list",
                  "true"
                ],
                [
                  "test_locate_identifiers_7",
                  "false"
                ],
                [
                  "test_function_decl",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_locate_identifiers_13",
                  "false"
                ],
                [
                  "test_locate_identifiers_11",
                  "false"
                ],
                [
                  "test_locate_identifiers_2",
                  "false"
                ],
                [
                  "test_locate_identifiers_4",
                  "false"
                ],
                [
                  "test_locate_identifiers_9",
                  "false"
                ],
                [
                  "test_locate_identifiers_10",
                  "false"
                ],
                [
                  "test_python_fragment",
                  "false"
                ],
                [
                  "test_function_decl_2",
                  "false"
                ],
                [
                  "test_locate_identifiers_3",
                  "false"
                ],
                [
                  "test_locate_identifiers",
                  "false"
                ],
                [
                  "test_locate_identifiers_14",
                  "false"
                ],
                [
                  "test_locate_identifiers_8",
                  "false"
                ],
                [
                  "test_function_decl_3",
                  "false"
                ],
                [
                  "test_locate_identifiers_15",
                  "false"
                ],
                [
                  "test_expr_generate",
                  "false"
                ],
                [
                  "test_locate_identifiers_5",
                  "false"
                ],
                [
                  "test_locate_identifiers_6",
                  "false"
                ],
                [
                  "test_no_global_imports",
                  "false"
                ],
                [
                  "test_locate_identifiers_16",
                  "false"
                ],
                [
                  "test_locate_identifiers_17",
                  "false"
                ],
                [
                  "test_locate_identifiers_12",
                  "false"
                ],
                [
                  "test_argument_list",
                  "false"
                ],
                [
                  "test_locate_identifiers_7",
                  "false"
                ],
                [
                  "test_function_decl",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_locate_identifiers_13",
                  "false"
                ],
                [
                  "test_locate_identifiers_11",
                  "false"
                ],
                [
                  "test_locate_identifiers_2",
                  "false"
                ],
                [
                  "test_locate_identifiers_4",
                  "false"
                ],
                [
                  "test_locate_identifiers_9",
                  "false"
                ],
                [
                  "test_locate_identifiers_10",
                  "false"
                ],
                [
                  "test_python_fragment",
                  "false"
                ],
                [
                  "test_function_decl_2",
                  "false"
                ],
                [
                  "test_locate_identifiers_3",
                  "false"
                ],
                [
                  "test_locate_identifiers",
                  "false"
                ],
                [
                  "test_locate_identifiers_14",
                  "false"
                ],
                [
                  "test_locate_identifiers_8",
                  "false"
                ],
                [
                  "test_function_decl_3",
                  "false"
                ],
                [
                  "test_locate_identifiers_15",
                  "false"
                ],
                [
                  "test_expr_generate",
                  "false"
                ],
                [
                  "test_locate_identifiers_5",
                  "false"
                ],
                [
                  "test_locate_identifiers_6",
                  "false"
                ],
                [
                  "test_no_global_imports",
                  "false"
                ],
                [
                  "test_locate_identifiers_16",
                  "false"
                ],
                [
                  "test_locate_identifiers_17",
                  "false"
                ],
                [
                  "test_locate_identifiers_12",
                  "false"
                ],
                [
                  "test_argument_list",
                  "false"
                ],
                [
                  "test_locate_identifiers_7",
                  "false"
                ],
                [
                  "test_function_decl",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_locate_identifiers_13",
                "false"
              ],
              [
                "test_locate_identifiers_11",
                "false"
              ],
              [
                "test_locate_identifiers_2",
                "false"
              ],
              [
                "test_locate_identifiers_4",
                "false"
              ],
              [
                "test_locate_identifiers_9",
                "false"
              ],
              [
                "test_locate_identifiers_10",
                "false"
              ],
              [
                "test_python_fragment",
                "false"
              ],
              [
                "test_function_decl_2",
                "false"
              ],
              [
                "test_locate_identifiers_3",
                "false"
              ],
              [
                "test_locate_identifiers",
                "false"
              ],
              [
                "test_locate_identifiers_14",
                "false"
              ],
              [
                "test_locate_identifiers_8",
                "false"
              ],
              [
                "test_function_decl_3",
                "false"
              ],
              [
                "test_locate_identifiers_15",
                "false"
              ],
              [
                "test_expr_generate",
                "false"
              ],
              [
                "test_locate_identifiers_5",
                "false"
              ],
              [
                "test_locate_identifiers_6",
                "false"
              ],
              [
                "test_no_global_imports",
                "false"
              ],
              [
                "test_locate_identifiers_16",
                "false"
              ],
              [
                "test_locate_identifiers_17",
                "false"
              ],
              [
                "test_locate_identifiers_12",
                "false"
              ],
              [
                "test_argument_list",
                "false"
              ],
              [
                "test_locate_identifiers_7",
                "false"
              ],
              [
                "test_function_decl",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_locate_identifiers_13",
                "false"
              ],
              [
                "test_locate_identifiers_11",
                "false"
              ],
              [
                "test_locate_identifiers_2",
                "false"
              ],
              [
                "test_locate_identifiers_4",
                "false"
              ],
              [
                "test_locate_identifiers_9",
                "false"
              ],
              [
                "test_locate_identifiers_10",
                "false"
              ],
              [
                "test_python_fragment",
                "false"
              ],
              [
                "test_function_decl_2",
                "false"
              ],
              [
                "test_locate_identifiers_3",
                "false"
              ],
              [
                "test_locate_identifiers",
                "false"
              ],
              [
                "test_locate_identifiers_14",
                "false"
              ],
              [
                "test_locate_identifiers_8",
                "false"
              ],
              [
                "test_function_decl_3",
                "false"
              ],
              [
                "test_locate_identifiers_15",
                "false"
              ],
              [
                "test_expr_generate",
                "false"
              ],
              [
                "test_locate_identifiers_5",
                "false"
              ],
              [
                "test_locate_identifiers_6",
                "false"
              ],
              [
                "test_no_global_imports",
                "false"
              ],
              [
                "test_locate_identifiers_16",
                "false"
              ],
              [
                "test_locate_identifiers_17",
                "false"
              ],
              [
                "test_locate_identifiers_12",
                "false"
              ],
              [
                "test_argument_list",
                "false"
              ],
              [
                "test_locate_identifiers_7",
                "false"
              ],
              [
                "test_function_decl",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_locate_identifiers_13",
                []
              ],
              [
                "test_locate_identifiers_11",
                []
              ],
              [
                "test_locate_identifiers_2",
                []
              ],
              [
                "test_locate_identifiers_4",
                []
              ],
              [
                "test_locate_identifiers_9",
                []
              ],
              [
                "test_locate_identifiers_10",
                []
              ],
              [
                "test_python_fragment",
                []
              ],
              [
                "test_function_decl_2",
                []
              ],
              [
                "test_locate_identifiers_3",
                []
              ],
              [
                "test_locate_identifiers",
                []
              ],
              [
                "test_locate_identifiers_14",
                []
              ],
              [
                "test_locate_identifiers_8",
                []
              ],
              [
                "test_function_decl_3",
                []
              ],
              [
                "test_locate_identifiers_15",
                []
              ],
              [
                "test_expr_generate",
                []
              ],
              [
                "test_locate_identifiers_5",
                []
              ],
              [
                "test_locate_identifiers_6",
                []
              ],
              [
                "test_no_global_imports",
                []
              ],
              [
                "test_locate_identifiers_16",
                []
              ],
              [
                "test_locate_identifiers_17",
                []
              ],
              [
                "test_locate_identifiers_12",
                []
              ],
              [
                "test_argument_list",
                []
              ],
              [
                "test_locate_identifiers_7",
                []
              ],
              [
                "test_function_decl",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_locate_identifiers_13",
                "false"
              ],
              [
                "test_locate_identifiers_11",
                "false"
              ],
              [
                "test_locate_identifiers_2",
                "false"
              ],
              [
                "test_locate_identifiers_4",
                "false"
              ],
              [
                "test_locate_identifiers_9",
                "false"
              ],
              [
                "test_locate_identifiers_10",
                "false"
              ],
              [
                "test_python_fragment",
                "false"
              ],
              [
                "test_function_decl_2",
                "false"
              ],
              [
                "test_locate_identifiers_3",
                "false"
              ],
              [
                "test_locate_identifiers",
                "false"
              ],
              [
                "test_locate_identifiers_14",
                "false"
              ],
              [
                "test_locate_identifiers_8",
                "false"
              ],
              [
                "test_function_decl_3",
                "false"
              ],
              [
                "test_locate_identifiers_15",
                "false"
              ],
              [
                "test_expr_generate",
                "false"
              ],
              [
                "test_locate_identifiers_5",
                "false"
              ],
              [
                "test_locate_identifiers_6",
                "false"
              ],
              [
                "test_no_global_imports",
                "false"
              ],
              [
                "test_locate_identifiers_16",
                "false"
              ],
              [
                "test_locate_identifiers_17",
                "false"
              ],
              [
                "test_locate_identifiers_12",
                "false"
              ],
              [
                "test_argument_list",
                "false"
              ],
              [
                "test_locate_identifiers_7",
                "false"
              ],
              [
                "test_function_decl",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_locate_identifiers_13",
                "false"
              ],
              [
                "test_locate_identifiers_11",
                "false"
              ],
              [
                "test_locate_identifiers_2",
                "false"
              ],
              [
                "test_locate_identifiers_4",
                "false"
              ],
              [
                "test_locate_identifiers_9",
                "false"
              ],
              [
                "test_locate_identifiers_10",
                "false"
              ],
              [
                "test_python_fragment",
                "false"
              ],
              [
                "test_function_decl_2",
                "false"
              ],
              [
                "test_locate_identifiers_3",
                "false"
              ],
              [
                "test_locate_identifiers",
                "false"
              ],
              [
                "test_locate_identifiers_14",
                "false"
              ],
              [
                "test_locate_identifiers_8",
                "false"
              ],
              [
                "test_function_decl_3",
                "false"
              ],
              [
                "test_locate_identifiers_15",
                "false"
              ],
              [
                "test_expr_generate",
                "false"
              ],
              [
                "test_locate_identifiers_5",
                "false"
              ],
              [
                "test_locate_identifiers_6",
                "false"
              ],
              [
                "test_no_global_imports",
                "false"
              ],
              [
                "test_locate_identifiers_16",
                "false"
              ],
              [
                "test_locate_identifiers_17",
                "false"
              ],
              [
                "test_locate_identifiers_12",
                "false"
              ],
              [
                "test_argument_list",
                "false"
              ],
              [
                "test_locate_identifiers_7",
                "false"
              ],
              [
                "test_function_decl",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_locate_identifiers_13",
                  "0"
                ],
                [
                  "test_locate_identifiers_11",
                  "0"
                ],
                [
                  "test_locate_identifiers_2",
                  "0"
                ],
                [
                  "test_locate_identifiers_4",
                  "0"
                ],
                [
                  "test_locate_identifiers_9",
                  "0"
                ],
                [
                  "test_locate_identifiers_10",
                  "0"
                ],
                [
                  "test_python_fragment",
                  "0"
                ],
                [
                  "test_function_decl_2",
                  "0"
                ],
                [
                  "test_locate_identifiers_3",
                  "0"
                ],
                [
                  "test_locate_identifiers",
                  "0"
                ],
                [
                  "test_locate_identifiers_14",
                  "0"
                ],
                [
                  "test_locate_identifiers_8",
                  "0"
                ],
                [
                  "test_function_decl_3",
                  "0"
                ],
                [
                  "test_locate_identifiers_15",
                  "0"
                ],
                [
                  "test_expr_generate",
                  "0"
                ],
                [
                  "test_locate_identifiers_5",
                  "0"
                ],
                [
                  "test_locate_identifiers_6",
                  "0"
                ],
                [
                  "test_no_global_imports",
                  "0"
                ],
                [
                  "test_locate_identifiers_16",
                  "0"
                ],
                [
                  "test_locate_identifiers_17",
                  "0"
                ],
                [
                  "test_locate_identifiers_12",
                  "0"
                ],
                [
                  "test_argument_list",
                  "0"
                ],
                [
                  "test_locate_identifiers_7",
                  "0"
                ],
                [
                  "test_function_decl",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_locate_identifiers_13",
                  "0"
                ],
                [
                  "test_locate_identifiers_11",
                  "0"
                ],
                [
                  "test_locate_identifiers_2",
                  "0"
                ],
                [
                  "test_locate_identifiers_4",
                  "0"
                ],
                [
                  "test_locate_identifiers_9",
                  "0"
                ],
                [
                  "test_locate_identifiers_10",
                  "0"
                ],
                [
                  "test_python_fragment",
                  "0"
                ],
                [
                  "test_function_decl_2",
                  "0"
                ],
                [
                  "test_locate_identifiers_3",
                  "0"
                ],
                [
                  "test_locate_identifiers",
                  "0"
                ],
                [
                  "test_locate_identifiers_14",
                  "0"
                ],
                [
                  "test_locate_identifiers_8",
                  "0"
                ],
                [
                  "test_function_decl_3",
                  "0"
                ],
                [
                  "test_locate_identifiers_15",
                  "0"
                ],
                [
                  "test_expr_generate",
                  "0"
                ],
                [
                  "test_locate_identifiers_5",
                  "0"
                ],
                [
                  "test_locate_identifiers_6",
                  "0"
                ],
                [
                  "test_no_global_imports",
                  "0"
                ],
                [
                  "test_locate_identifiers_16",
                  "0"
                ],
                [
                  "test_locate_identifiers_17",
                  "0"
                ],
                [
                  "test_locate_identifiers_12",
                  "0"
                ],
                [
                  "test_argument_list",
                  "0"
                ],
                [
                  "test_locate_identifiers_7",
                  "0"
                ],
                [
                  "test_function_decl",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_locate_identifiers_13",
                "false"
              ],
              [
                "test_locate_identifiers_11",
                "false"
              ],
              [
                "test_locate_identifiers_2",
                "false"
              ],
              [
                "test_locate_identifiers_4",
                "false"
              ],
              [
                "test_locate_identifiers_9",
                "false"
              ],
              [
                "test_locate_identifiers_10",
                "false"
              ],
              [
                "test_python_fragment",
                "false"
              ],
              [
                "test_function_decl_2",
                "false"
              ],
              [
                "test_locate_identifiers_3",
                "false"
              ],
              [
                "test_locate_identifiers",
                "false"
              ],
              [
                "test_locate_identifiers_14",
                "false"
              ],
              [
                "test_locate_identifiers_8",
                "false"
              ],
              [
                "test_function_decl_3",
                "false"
              ],
              [
                "test_locate_identifiers_15",
                "false"
              ],
              [
                "test_expr_generate",
                "false"
              ],
              [
                "test_locate_identifiers_5",
                "false"
              ],
              [
                "test_locate_identifiers_6",
                "false"
              ],
              [
                "test_no_global_imports",
                "false"
              ],
              [
                "test_locate_identifiers_16",
                "false"
              ],
              [
                "test_locate_identifiers_17",
                "false"
              ],
              [
                "test_locate_identifiers_12",
                "false"
              ],
              [
                "test_argument_list",
                "false"
              ],
              [
                "test_locate_identifiers_7",
                "false"
              ],
              [
                "test_function_decl",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_locate_identifiers_13",
                "false"
              ],
              [
                "test_locate_identifiers_11",
                "false"
              ],
              [
                "test_locate_identifiers_2",
                "false"
              ],
              [
                "test_locate_identifiers_4",
                "false"
              ],
              [
                "test_locate_identifiers_9",
                "false"
              ],
              [
                "test_locate_identifiers_10",
                "false"
              ],
              [
                "test_python_fragment",
                "false"
              ],
              [
                "test_function_decl_2",
                "false"
              ],
              [
                "test_locate_identifiers_3",
                "false"
              ],
              [
                "test_locate_identifiers",
                "false"
              ],
              [
                "test_locate_identifiers_14",
                "false"
              ],
              [
                "test_locate_identifiers_8",
                "false"
              ],
              [
                "test_function_decl_3",
                "false"
              ],
              [
                "test_locate_identifiers_15",
                "false"
              ],
              [
                "test_expr_generate",
                "false"
              ],
              [
                "test_locate_identifiers_5",
                "false"
              ],
              [
                "test_locate_identifiers_6",
                "false"
              ],
              [
                "test_no_global_imports",
                "false"
              ],
              [
                "test_locate_identifiers_16",
                "false"
              ],
              [
                "test_locate_identifiers_17",
                "false"
              ],
              [
                "test_locate_identifiers_12",
                "false"
              ],
              [
                "test_argument_list",
                "false"
              ],
              [
                "test_locate_identifiers_7",
                "false"
              ],
              [
                "test_function_decl",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_locate_identifiers_13",
                "0"
              ],
              [
                "test_locate_identifiers_11",
                "0"
              ],
              [
                "test_locate_identifiers_2",
                "0"
              ],
              [
                "test_locate_identifiers_4",
                "0"
              ],
              [
                "test_locate_identifiers_9",
                "0"
              ],
              [
                "test_locate_identifiers_10",
                "0"
              ],
              [
                "test_python_fragment",
                "0"
              ],
              [
                "test_function_decl_2",
                "0"
              ],
              [
                "test_locate_identifiers_3",
                "0"
              ],
              [
                "test_locate_identifiers",
                "2"
              ],
              [
                "test_locate_identifiers_14",
                "0"
              ],
              [
                "test_locate_identifiers_8",
                "0"
              ],
              [
                "test_function_decl_3",
                "0"
              ],
              [
                "test_locate_identifiers_15",
                "0"
              ],
              [
                "test_expr_generate",
                "0"
              ],
              [
                "test_locate_identifiers_5",
                "0"
              ],
              [
                "test_locate_identifiers_6",
                "0"
              ],
              [
                "test_no_global_imports",
                "1"
              ],
              [
                "test_locate_identifiers_16",
                "0"
              ],
              [
                "test_locate_identifiers_17",
                "0"
              ],
              [
                "test_locate_identifiers_12",
                "0"
              ],
              [
                "test_argument_list",
                "0"
              ],
              [
                "test_locate_identifiers_7",
                "0"
              ],
              [
                "test_function_decl",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_locate_identifiers_13",
                [
                  "code",
                  "parsed"
                ]
              ],
              [
                "test_locate_identifiers_11",
                [
                  "code",
                  "parsed"
                ]
              ],
              [
                "test_locate_identifiers_2",
                [
                  "code",
                  "parsed"
                ]
              ],
              [
                "test_locate_identifiers_4",
                [
                  "code",
                  "parsed"
                ]
              ],
              [
                "test_locate_identifiers_9",
                [
                  "code",
                  "parsed"
                ]
              ],
              [
                "test_locate_identifiers_10",
                [
                  "code",
                  "parsed"
                ]
              ],
              [
                "test_python_fragment",
                [
                  "parsed"
                ]
              ],
              [
                "test_function_decl_2",
                [
                  "code",
                  "parsed"
                ]
              ],
              [
                "test_locate_identifiers_3",
                [
                  "code",
                  "parsed"
                ]
              ],
              [
                "test_locate_identifiers",
                [
                  "code",
                  "parsed"
                ]
              ],
              [
                "test_locate_identifiers_14",
                [
                  "code",
                  "parsed"
                ]
              ],
              [
                "test_locate_identifiers_8",
                [
                  "code",
                  "parsed"
                ]
              ],
              [
                "test_function_decl_3",
                [
                  "code",
                  "parsed"
                ]
              ],
              [
                "test_locate_identifiers_15",
                [
                  "code",
                  "parsed"
                ]
              ],
              [
                "test_expr_generate",
                [
                  "a",
                  "code",
                  "astnode",
                  "local_dict",
                  "g",
                  "x",
                  "y",
                  "hoho",
                  "newcode"
                ]
              ],
              [
                "test_locate_identifiers_5",
                [
                  "code",
                  "parsed"
                ]
              ],
              [
                "test_locate_identifiers_6",
                [
                  "code",
                  "parsed"
                ]
              ],
              [
                "test_no_global_imports",
                [
                  "code"
                ]
              ],
              [
                "test_locate_identifiers_16",
                [
                  "code",
                  "parsed"
                ]
              ],
              [
                "test_locate_identifiers_17",
                [
                  "code",
                  "parsed"
                ]
              ],
              [
                "test_locate_identifiers_12",
                [
                  "code",
                  "parsed"
                ]
              ],
              [
                "test_argument_list",
                [
                  "parsed"
                ]
              ],
              [
                "test_locate_identifiers_7",
                [
                  "code",
                  "parsed"
                ]
              ],
              [
                "test_function_decl",
                [
                  "code",
                  "parsed"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_locate_identifiers_13",
                []
              ],
              [
                "test_locate_identifiers_11",
                []
              ],
              [
                "test_locate_identifiers_2",
                []
              ],
              [
                "test_locate_identifiers_4",
                []
              ],
              [
                "test_locate_identifiers_9",
                []
              ],
              [
                "test_locate_identifiers_10",
                []
              ],
              [
                "test_python_fragment",
                []
              ],
              [
                "test_function_decl_2",
                []
              ],
              [
                "test_locate_identifiers_3",
                []
              ],
              [
                "test_locate_identifiers",
                []
              ],
              [
                "test_locate_identifiers_14",
                []
              ],
              [
                "test_locate_identifiers_8",
                []
              ],
              [
                "test_function_decl_3",
                []
              ],
              [
                "test_locate_identifiers_15",
                []
              ],
              [
                "test_expr_generate",
                []
              ],
              [
                "test_locate_identifiers_5",
                []
              ],
              [
                "test_locate_identifiers_6",
                []
              ],
              [
                "test_no_global_imports",
                []
              ],
              [
                "test_locate_identifiers_16",
                []
              ],
              [
                "test_locate_identifiers_17",
                []
              ],
              [
                "test_locate_identifiers_12",
                []
              ],
              [
                "test_argument_list",
                []
              ],
              [
                "test_locate_identifiers_7",
                []
              ],
              [
                "test_function_decl",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5641685520471659,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_locate_identifiers_14",
                  "test_argument_list",
                  0.4539206495016019
                ],
                [
                  "test_locate_identifiers_6",
                  "test_python_fragment",
                  0.653811408838455
                ],
                [
                  "test_locate_identifiers_10",
                  "test_expr_generate",
                  0.4826570469501536
                ],
                [
                  "test_locate_identifiers",
                  "test_function_decl",
                  0.2685319737105378
                ],
                [
                  "test_locate_identifiers_6",
                  "test_locate_identifiers_9",
                  0.7957905488670743
                ],
                [
                  "test_locate_identifiers_15",
                  "test_function_decl",
                  0.28958149517537957
                ],
                [
                  "test_locate_identifiers_17",
                  "test_expr_generate",
                  0.4669272564287732
                ],
                [
                  "test_locate_identifiers_15",
                  "test_function_decl_2",
                  0.3837664504007079
                ],
                [
                  "test_locate_identifiers_10",
                  "test_locate_identifiers_11",
                  0.9263671131731709
                ],
                [
                  "test_locate_identifiers_16",
                  "test_argument_list",
                  0.401147778542877
                ],
                [
                  "test_locate_identifiers_6",
                  "test_locate_identifiers_12",
                  0.8445027717579436
                ],
                [
                  "test_locate_identifiers",
                  "test_locate_identifiers_13",
                  0.5823232315653921
                ],
                [
                  "test_locate_identifiers",
                  "test_locate_identifiers_16",
                  0.6171639180590253
                ],
                [
                  "test_locate_identifiers_2",
                  "test_function_decl_2",
                  0.38195770709508803
                ],
                [
                  "test_locate_identifiers_17",
                  "test_python_fragment",
                  0.5159592250377233
                ],
                [
                  "test_locate_identifiers_11",
                  "test_no_global_imports",
                  0.35176323534072423
                ],
                [
                  "test_locate_identifiers_2",
                  "test_locate_identifiers_16",
                  0.5014347231785963
                ],
                [
                  "test_locate_identifiers_8",
                  "test_function_decl_3",
                  0.5522015339891925
                ],
                [
                  "test_locate_identifiers_11",
                  "test_function_decl",
                  0.3568732135731649
                ],
                [
                  "test_locate_identifiers_13",
                  "test_locate_identifiers_16",
                  0.7315644116470257
                ],
                [
                  "test_locate_identifiers_4",
                  "test_locate_identifiers_17",
                  0.6896846880088012
                ],
                [
                  "test_locate_identifiers_5",
                  "test_function_decl_3",
                  0.43026527297494643
                ],
                [
                  "test_locate_identifiers_11",
                  "test_locate_identifiers_13",
                  0.8866450562554967
                ],
                [
                  "test_locate_identifiers_16",
                  "test_function_decl_3",
                  0.4885967564883422
                ],
                [
                  "test_locate_identifiers",
                  "test_no_global_imports",
                  0.231701630078744
                ],
                [
                  "test_locate_identifiers_4",
                  "test_locate_identifiers_6",
                  0.8138801294887597
                ],
                [
                  "test_function_decl",
                  "test_function_decl_2",
                  0.8463103529241024
                ],
                [
                  "test_locate_identifiers_8",
                  "test_argument_list",
                  0.47418652711070564
                ],
                [
                  "test_locate_identifiers_13",
                  "test_function_decl_2",
                  0.44008802640880307
                ],
                [
                  "test_locate_identifiers_6",
                  "test_expr_generate",
                  0.3644997305408262
                ],
                [
                  "test_function_decl_2",
                  "test_function_decl_3",
                  0.798943495435656
                ],
                [
                  "test_locate_identifiers_12",
                  "test_function_decl_3",
                  0.5114083119567588
                ],
                [
                  "test_locate_identifiers_15",
                  "test_locate_identifiers_16",
                  0.7197274920657463
                ],
                [
                  "test_locate_identifiers_7",
                  "test_locate_identifiers_17",
                  0.6440081861116378
                ],
                [
                  "test_locate_identifiers_12",
                  "test_argument_list",
                  0.4630991085218427
                ],
                [
                  "test_locate_identifiers_2",
                  "test_no_global_imports",
                  0.47483573524849143
                ],
                [
                  "test_argument_list",
                  "test_function_decl_3",
                  0.4330655695686135
                ],
                [
                  "test_locate_identifiers_11",
                  "test_locate_identifiers_16",
                  0.7391455924894308
                ],
                [
                  "test_locate_identifiers_2",
                  "test_function_decl",
                  0.3447071233648539
                ],
                [
                  "test_locate_identifiers_6",
                  "test_locate_identifiers_7",
                  0.8408015000144888
                ],
                [
                  "test_locate_identifiers_9",
                  "test_function_decl_3",
                  0.4056579896395541
                ],
                [
                  "test_locate_identifiers_9",
                  "test_locate_identifiers_17",
                  0.55745196041636
                ],
                [
                  "test_locate_identifiers_12",
                  "test_python_fragment",
                  0.5982430416161189
                ],
                [
                  "test_locate_identifiers_4",
                  "test_locate_identifiers_15",
                  0.7678988318681085
                ],
                [
                  "test_locate_identifiers_10",
                  "test_argument_list",
                  0.4774552605594228
                ],
                [
                  "test_locate_identifiers_3",
                  "test_argument_list",
                  0.4681408379492694
                ],
                [
                  "test_python_fragment",
                  "test_function_decl",
                  0.37867694201666724
                ],
                [
                  "test_locate_identifiers_14",
                  "test_python_fragment",
                  0.6036327274391503
                ],
                [
                  "test_locate_identifiers_6",
                  "test_function_decl_3",
                  0.4645493641116331
                ],
                [
                  "test_locate_identifiers_7",
                  "test_function_decl_2",
                  0.4497120149145933
                ],
                [
                  "test_locate_identifiers_6",
                  "test_locate_identifiers_10",
                  0.7767853703003673
                ],
                [
                  "test_locate_identifiers_8",
                  "test_python_fragment",
                  0.5690624324625664
                ],
                [
                  "test_locate_identifiers_2",
                  "test_locate_identifiers_13",
                  0.5767187099094085
                ],
                [
                  "test_locate_identifiers_5",
                  "test_argument_list",
                  0.4382504900892777
                ],
                [
                  "test_locate_identifiers_6",
                  "test_locate_identifiers_11",
                  0.836225005769364
                ],
                [
                  "test_locate_identifiers_15",
                  "test_no_global_imports",
                  0.2935903373670295
                ],
                [
                  "test_locate_identifiers_4",
                  "test_function_decl_3",
                  0.5092928600264823
                ],
                [
                  "test_locate_identifiers_13",
                  "test_function_decl",
                  0.35321287872520035
                ],
                [
                  "test_locate_identifiers",
                  "test_function_decl_2",
                  0.3552882360092772
                ],
                [
                  "test_locate_identifiers_10",
                  "test_python_fragment",
                  0.6031830462090614
                ],
                [
                  "test_locate_identifiers_13",
                  "test_no_global_imports",
                  0.3481553119113957
                ],
                [
                  "test_locate_identifiers_3",
                  "test_python_fragment",
                  0.380442955126341
                ],
                [
                  "test_locate_identifiers_6",
                  "test_locate_identifiers_8",
                  0.7443802074084643
                ],
                [
                  "test_locate_identifiers_4",
                  "test_argument_list",
                  0.476910483238266
                ],
                [
                  "test_locate_identifiers_5",
                  "test_locate_identifiers_15",
                  0.6543303050815759
                ],
                [
                  "test_locate_identifiers_8",
                  "test_expr_generate",
                  0.6281331427287306
                ],
                [
                  "test_locate_identifiers_3",
                  "test_expr_generate",
                  0.5237614420070885
                ],
                [
                  "test_locate_identifiers_11",
                  "test_locate_identifiers_15",
                  0.8063693207714946
                ],
                [
                  "test_locate_identifiers_10",
                  "test_locate_identifiers_13",
                  0.8751899489873673
                ],
                [
                  "test_locate_identifiers_5",
                  "test_expr_generate",
                  0.32377951977292224
                ],
                [
                  "test_locate_identifiers_8",
                  "test_locate_identifiers_15",
                  0.8156551865040222
                ],
                [
                  "test_locate_identifiers_10",
                  "test_no_global_imports",
                  0.33009386547736663
                ],
                [
                  "test_locate_identifiers_13",
                  "test_locate_identifiers_15",
                  0.7830401825178844
                ],
                [
                  "test_locate_identifiers_11",
                  "test_expr_generate",
                  0.4932108453270652
                ],
                [
                  "test_locate_identifiers_3",
                  "test_locate_identifiers_9",
                  0.5169842621131975
                ],
                [
                  "test_locate_identifiers",
                  "test_locate_identifiers_5",
                  0.5088036945017588
                ],
                [
                  "test_locate_identifiers_2",
                  "test_locate_identifiers_7",
                  0.6823827800460688
                ],
                [
                  "test_locate_identifiers_7",
                  "test_locate_identifiers_14",
                  0.820412654142367
                ],
                [
                  "test_locate_identifiers_7",
                  "test_locate_identifiers_13",
                  0.8693015191493314
                ],
                [
                  "test_locate_identifiers_10",
                  "test_function_decl_2",
                  0.4289288693579751
                ],
                [
                  "test_locate_identifiers_5",
                  "test_locate_identifiers_12",
                  0.752772652709081
                ],
                [
                  "test_locate_identifiers_6",
                  "test_locate_identifiers_16",
                  0.6608349880537457
                ],
                [
                  "test_locate_identifiers_8",
                  "test_locate_identifiers_9",
                  0.6386106434213022
                ],
                [
                  "test_locate_identifiers",
                  "test_expr_generate",
                  0.7610314304041136
                ],
                [
                  "test_locate_identifiers_17",
                  "test_function_decl_2",
                  0.3378879221640499
                ],
                [
                  "test_locate_identifiers_16",
                  "test_locate_identifiers_17",
                  0.933852284351098
                ],
                [
                  "test_locate_identifiers_6",
                  "test_no_global_imports",
                  0.4176720953624982
                ],
                [
                  "test_locate_identifiers_7",
                  "test_function_decl_3",
                  0.4612453281576441
                ],
                [
                  "test_locate_identifiers_7",
                  "test_locate_identifiers_16",
                  0.6658451424277129
                ],
                [
                  "test_locate_identifiers_3",
                  "test_locate_identifiers_15",
                  0.5427204202399745
                ],
                [
                  "test_locate_identifiers_2",
                  "test_locate_identifiers_5",
                  0.5976143046671969
                ],
                [
                  "test_locate_identifiers",
                  "test_locate_identifiers_2",
                  0.4946783866431771
                ],
                [
                  "test_locate_identifiers_11",
                  "test_locate_identifiers_12",
                  0.857671551467156
                ],
                [
                  "test_locate_identifiers_2",
                  "test_expr_generate",
                  0.33743687778248854
                ],
                [
                  "test_locate_identifiers_4",
                  "test_no_global_imports",
                  0.36891438072857313
                ],
                [
                  "test_locate_identifiers_6",
                  "test_locate_identifiers_14",
                  0.7953036546224646
                ],
                [
                  "test_locate_identifiers_5",
                  "test_python_fragment",
                  0.5695489135379689
                ],
                [
                  "test_locate_identifiers",
                  "test_python_fragment",
                  0.4254792577764904
                ],
                [
                  "test_locate_identifiers_6",
                  "test_argument_list",
                  0.47249873592088726
                ],
                [
                  "test_locate_identifiers",
                  "test_locate_identifiers_12",
                  0.6103332000659875
                ],
                [
                  "test_locate_identifiers_5",
                  "test_locate_identifiers_10",
                  0.7456730978078305
                ],
                [
                  "test_locate_identifiers_3",
                  "test_locate_identifiers_4",
                  0.5430435818039258
                ],
                [
                  "test_locate_identifiers",
                  "test_locate_identifiers_10",
                  0.637054299159843
                ],
                [
                  "test_locate_identifiers_4",
                  "test_python_fragment",
                  0.6053775635583415
                ],
                [
                  "test_locate_identifiers_7",
                  "test_function_decl",
                  0.3947089411806863
                ],
                [
                  "test_locate_identifiers_14",
                  "test_locate_identifiers_15",
                  0.7454993164109749
                ],
                [
                  "test_locate_identifiers_14",
                  "test_expr_generate",
                  0.44087128437470097
                ],
                [
                  "test_argument_list",
                  "test_function_decl_2",
                  0.4277926319464986
                ],
                [
                  "test_python_fragment",
                  "test_argument_list",
                  0.5224292591605754
                ],
                [
                  "test_locate_identifiers_2",
                  "test_locate_identifiers_15",
                  0.5290502621624716
                ],
                [
                  "test_locate_identifiers_7",
                  "test_locate_identifiers_8",
                  0.7525238433640895
                ],
                [
                  "test_locate_identifiers_12",
                  "test_locate_identifiers_16",
                  0.7006227308283302
                ],
                [
                  "test_locate_identifiers_2",
                  "test_locate_identifiers_12",
                  0.6086445426287076
                ],
                [
                  "test_locate_identifiers_9",
                  "test_locate_identifiers_11",
                  0.7329333926249312
                ],
                [
                  "test_locate_identifiers_12",
                  "test_locate_identifiers_17",
                  0.6776452139970672
                ],
                [
                  "test_function_decl_3",
                  "test_expr_generate",
                  0.4077397564647614
                ],
                [
                  "test_locate_identifiers_7",
                  "test_locate_identifiers_11",
                  0.8539125638299666
                ],
                [
                  "test_locate_identifiers",
                  "test_locate_identifiers_7",
                  0.48512220025925396
                ],
                [
                  "test_locate_identifiers",
                  "test_locate_identifiers_15",
                  0.6795892872793479
                ],
                [
                  "test_locate_identifiers_2",
                  "test_locate_identifiers_10",
                  0.5729463126713074
                ],
                [
                  "test_locate_identifiers_10",
                  "test_locate_identifiers_12",
                  0.8313702367707394
                ],
                [
                  "test_locate_identifiers_11",
                  "test_function_decl_2",
                  0.4446486458999438
                ],
                [
                  "test_locate_identifiers",
                  "test_locate_identifiers_4",
                  0.6280634265900772
                ],
                [
                  "test_locate_identifiers_3",
                  "test_locate_identifiers_12",
                  0.5087470190691683
                ],
                [
                  "test_locate_identifiers_8",
                  "test_locate_identifiers_12",
                  0.8483879196029503
                ],
                [
                  "test_locate_identifiers_12",
                  "test_locate_identifiers_14",
                  0.8408409924953907
                ],
                [
                  "test_no_global_imports",
                  "test_argument_list",
                  0.20892772350933625
                ],
                [
                  "test_locate_identifiers_15",
                  "test_expr_generate",
                  0.5904384873272801
                ],
                [
                  "test_locate_identifiers_13",
                  "test_expr_generate",
                  0.45416686334075723
                ],
                [
                  "test_locate_identifiers_5",
                  "test_locate_identifiers_7",
                  0.8023774198028778
                ],
                [
                  "test_argument_list",
                  "test_expr_generate",
                  0.4459830062999324
                ],
                [
                  "test_locate_identifiers_2",
                  "test_locate_identifiers_4",
                  0.635880644317688
                ],
                [
                  "test_locate_identifiers_9",
                  "test_function_decl",
                  0.37830768113701796
                ],
                [
                  "test_locate_identifiers",
                  "test_function_decl_3",
                  0.4694839985702334
                ],
                [
                  "test_locate_identifiers_16",
                  "test_function_decl_2",
                  0.349344987392638
                ],
                [
                  "test_locate_identifiers_10",
                  "test_locate_identifiers_15",
                  0.7995270469583671
                ],
                [
                  "test_locate_identifiers_7",
                  "test_python_fragment",
                  0.6621904866437631
                ],
                [
                  "test_locate_identifiers_16",
                  "test_function_decl",
                  0.2525085593478303
                ],
                [
                  "test_locate_identifiers_5",
                  "test_locate_identifiers_13",
                  0.7563787698880865
                ],
                [
                  "test_locate_identifiers_7",
                  "test_locate_identifiers_12",
                  0.8404180632330575
                ],
                [
                  "test_locate_identifiers_7",
                  "test_locate_identifiers_9",
                  0.8146801235477049
                ],
                [
                  "test_locate_identifiers_5",
                  "test_no_global_imports",
                  0.4131671220064233
                ],
                [
                  "test_locate_identifiers_3",
                  "test_no_global_imports",
                  0.28216010538144926
                ],
                [
                  "test_locate_identifiers_13",
                  "test_function_decl_3",
                  0.5138581861552922
                ],
                [
                  "test_locate_identifiers_5",
                  "test_locate_identifiers_16",
                  0.7671412823766146
                ],
                [
                  "test_locate_identifiers_8",
                  "test_locate_identifiers_16",
                  0.7655149725437685
                ],
                [
                  "test_locate_identifiers",
                  "test_argument_list",
                  0.49921672046559157
                ],
                [
                  "test_no_global_imports",
                  "test_python_fragment",
                  0.32835193318376904
                ],
                [
                  "test_locate_identifiers_4",
                  "test_locate_identifiers_7",
                  0.8059925931113611
                ],
                [
                  "test_locate_identifiers_14",
                  "test_function_decl_2",
                  0.4272046005593395
                ],
                [
                  "test_function_decl",
                  "test_function_decl_3",
                  0.7326116869731845
                ],
                [
                  "test_locate_identifiers_4",
                  "test_locate_identifiers_14",
                  0.8081901942077095
                ],
                [
                  "test_locate_identifiers_8",
                  "test_function_decl_2",
                  0.43044523694059716
                ],
                [
                  "test_locate_identifiers_13",
                  "test_argument_list",
                  0.4676097647914123
                ],
                [
                  "test_locate_identifiers_3",
                  "test_locate_identifiers_10",
                  0.5284918874007016
                ],
                [
                  "test_locate_identifiers_5",
                  "test_function_decl",
                  0.3510989038028634
                ],
                [
                  "test_locate_identifiers_12",
                  "test_function_decl_2",
                  0.4584840372976439
                ],
                [
                  "test_locate_identifiers_16",
                  "test_no_global_imports",
                  0.34286274066187084
                ],
                [
                  "test_locate_identifiers_11",
                  "test_function_decl_3",
                  0.5191832836785889
                ],
                [
                  "test_locate_identifiers_6",
                  "test_locate_identifiers_17",
                  0.6391623440007327
                ],
                [
                  "test_locate_identifiers_3",
                  "test_locate_identifiers_13",
                  0.5039730828869559
                ],
                [
                  "test_locate_identifiers_4",
                  "test_locate_identifiers_5",
                  0.7496587917803454
                ],
                [
                  "test_locate_identifiers_14",
                  "test_function_decl",
                  0.3428726929917567
                ],
                [
                  "test_locate_identifiers_12",
                  "test_locate_identifiers_13",
                  0.8835226340609272
                ],
                [
                  "test_locate_identifiers_5",
                  "test_locate_identifiers_14",
                  0.7342360411356583
                ],
                [
                  "test_locate_identifiers_3",
                  "test_function_decl_2",
                  0.3070763751548678
                ],
                [
                  "test_locate_identifiers_15",
                  "test_argument_list",
                  0.49454698419535387
                ],
                [
                  "test_locate_identifiers_8",
                  "test_locate_identifiers_13",
                  0.8631411308623217
                ],
                [
                  "test_locate_identifiers_9",
                  "test_locate_identifiers_10",
                  0.7281354579162193
                ],
                [
                  "test_locate_identifiers_9",
                  "test_locate_identifiers_13",
                  0.7254159283372622
                ],
                [
                  "test_locate_identifiers_15",
                  "test_function_decl_3",
                  0.5099019513592785
                ],
                [
                  "test_locate_identifiers_4",
                  "test_expr_generate",
                  0.4898406606012791
                ],
                [
                  "test_locate_identifiers_8",
                  "test_locate_identifiers_10",
                  0.8503911996520269
                ],
                [
                  "test_locate_identifiers_3",
                  "test_locate_identifiers_7",
                  0.48349377841522817
                ],
                [
                  "test_locate_identifiers_9",
                  "test_function_decl_2",
                  0.4097575314352394
                ],
                [
                  "test_locate_identifiers_12",
                  "test_no_global_imports",
                  0.3588702812826367
                ],
                [
                  "test_locate_identifiers_12",
                  "test_locate_identifiers_15",
                  0.792530488475616
                ],
                [
                  "test_locate_identifiers",
                  "test_locate_identifiers_3",
                  0.6623022178315379
                ],
                [
                  "test_locate_identifiers_2",
                  "test_python_fragment",
                  0.49076687981751027
                ],
                [
                  "test_no_global_imports",
                  "test_function_decl_3",
                  0.21591675854376527
                ],
                [
                  "test_locate_identifiers_2",
                  "test_locate_identifiers_3",
                  0.5097533568780934
                ],
                [
                  "test_locate_identifiers_7",
                  "test_argument_list",
                  0.46106944597707344
                ],
                [
                  "test_locate_identifiers_6",
                  "test_function_decl",
                  0.40995936859358145
                ],
                [
                  "test_locate_identifiers_9",
                  "test_locate_identifiers_16",
                  0.5763539780776887
                ],
                [
                  "test_locate_identifiers_14",
                  "test_no_global_imports",
                  0.33796318470968734
                ],
                [
                  "test_python_fragment",
                  "test_function_decl_3",
                  0.4409228452525306
                ],
                [
                  "test_no_global_imports",
                  "test_expr_generate",
                  0.12423761897345979
                ],
                [
                  "test_locate_identifiers_4",
                  "test_locate_identifiers_11",
                  0.8411910241920599
                ],
                [
                  "test_locate_identifiers_3",
                  "test_locate_identifiers_5",
                  0.5048252022715237
                ],
                [
                  "test_locate_identifiers",
                  "test_locate_identifiers_9",
                  0.44032597760219244
                ],
                [
                  "test_locate_identifiers_4",
                  "test_locate_identifiers_12",
                  0.8352403360642062
                ],
                [
                  "test_locate_identifiers_15",
                  "test_python_fragment",
                  0.5429505701603295
                ],
                [
                  "test_locate_identifiers_5",
                  "test_function_decl_2",
                  0.4090479940519309
                ],
                [
                  "test_locate_identifiers_12",
                  "test_function_decl",
                  0.3831205476753425
                ],
                [
                  "test_locate_identifiers_4",
                  "test_locate_identifiers_16",
                  0.713070437955314
                ],
                [
                  "test_locate_identifiers_10",
                  "test_function_decl",
                  0.340613657372866
                ],
                [
                  "test_locate_identifiers_3",
                  "test_function_decl",
                  0.24883950202922844
                ],
                [
                  "test_locate_identifiers_4",
                  "test_locate_identifiers_10",
                  0.8114521842083112
                ],
                [
                  "test_locate_identifiers_7",
                  "test_expr_generate",
                  0.31803973286757786
                ],
                [
                  "test_locate_identifiers_13",
                  "test_python_fragment",
                  0.6114728393784384
                ],
                [
                  "test_locate_identifiers_8",
                  "test_function_decl",
                  0.32032419448059457
                ],
                [
                  "test_locate_identifiers_9",
                  "test_locate_identifiers_14",
                  0.7041796261387758
                ],
                [
                  "test_locate_identifiers_6",
                  "test_locate_identifiers_15",
                  0.709390159772705
                ],
                [
                  "test_argument_list",
                  "test_function_decl",
                  0.38966892206461745
                ],
                [
                  "test_locate_identifiers_2",
                  "test_locate_identifiers_9",
                  0.6197797868009122
                ],
                [
                  "test_locate_identifiers_8",
                  "test_no_global_imports",
                  0.3321395032851292
                ],
                [
                  "test_locate_identifiers_2",
                  "test_argument_list",
                  0.38095238095238093
                ],
                [
                  "test_locate_identifiers_17",
                  "test_function_decl",
                  0.24422732692821814
                ],
                [
                  "test_locate_identifiers_9",
                  "test_expr_generate",
                  0.2903714168321799
                ],
                [
                  "test_locate_identifiers_17",
                  "test_no_global_imports",
                  0.3316182662140364
                ],
                [
                  "test_locate_identifiers_9",
                  "test_python_fragment",
                  0.6493661626966412
                ],
                [
                  "test_locate_identifiers_8",
                  "test_locate_identifiers_11",
                  0.8567860859069464
                ],
                [
                  "test_function_decl",
                  "test_expr_generate",
                  0.1990366335164129
                ],
                [
                  "test_locate_identifiers",
                  "test_locate_identifiers_17",
                  0.6180535393274313
                ],
                [
                  "test_locate_identifiers",
                  "test_locate_identifiers_6",
                  0.49899766812789836
                ],
                [
                  "test_locate_identifiers_4",
                  "test_locate_identifiers_8",
                  0.842400894293264
                ],
                [
                  "test_locate_identifiers_5",
                  "test_locate_identifiers_11",
                  0.7642171012073583
                ],
                [
                  "test_locate_identifiers_5",
                  "test_locate_identifiers_6",
                  0.7906416098657734
                ],
                [
                  "test_locate_identifiers_8",
                  "test_locate_identifiers_17",
                  0.7404092595940723
                ],
                [
                  "test_locate_identifiers_15",
                  "test_locate_identifiers_17",
                  0.6961234183821656
                ],
                [
                  "test_locate_identifiers_2",
                  "test_locate_identifiers_6",
                  0.6193564511395414
                ],
                [
                  "test_locate_identifiers_5",
                  "test_locate_identifiers_9",
                  0.7228202652129153
                ],
                [
                  "test_locate_identifiers_7",
                  "test_no_global_imports",
                  0.44136741475237473
                ],
                [
                  "test_locate_identifiers_7",
                  "test_locate_identifiers_10",
                  0.8629489272626915
                ],
                [
                  "test_locate_identifiers_9",
                  "test_locate_identifiers_12",
                  0.720157934747922
                ],
                [
                  "test_locate_identifiers_10",
                  "test_function_decl_3",
                  0.506585114176358
                ],
                [
                  "test_locate_identifiers_2",
                  "test_locate_identifiers_17",
                  0.4988465959263239
                ],
                [
                  "test_locate_identifiers_13",
                  "test_locate_identifiers_17",
                  0.7075721361439185
                ],
                [
                  "test_locate_identifiers_3",
                  "test_locate_identifiers_6",
                  0.4910151631171475
                ],
                [
                  "test_locate_identifiers_11",
                  "test_python_fragment",
                  0.6178095147302509
                ],
                [
                  "test_locate_identifiers_17",
                  "test_function_decl_3",
                  0.4725728113579319
                ],
                [
                  "test_locate_identifiers_2",
                  "test_locate_identifiers_11",
                  0.5826952292225587
                ],
                [
                  "test_locate_identifiers_9",
                  "test_locate_identifiers_15",
                  0.6259807120445899
                ],
                [
                  "test_python_fragment",
                  "test_expr_generate",
                  0.2745727274505656
                ],
                [
                  "test_locate_identifiers_16",
                  "test_expr_generate",
                  0.47708024598691146
                ],
                [
                  "test_locate_identifiers_2",
                  "test_locate_identifiers_14",
                  0.5598354677186423
                ],
                [
                  "test_locate_identifiers_5",
                  "test_locate_identifiers_17",
                  0.7419822332162693
                ],
                [
                  "test_locate_identifiers_3",
                  "test_locate_identifiers_11",
                  0.5367198354991009
                ],
                [
                  "test_locate_identifiers_11",
                  "test_locate_identifiers_17",
                  0.7149046857290974
                ],
                [
                  "test_locate_identifiers",
                  "test_locate_identifiers_14",
                  0.565275918927707
                ],
                [
                  "test_locate_identifiers_9",
                  "test_argument_list",
                  0.4695301415158426
                ],
                [
                  "test_locate_identifiers_3",
                  "test_locate_identifiers_8",
                  0.5457608945634794
                ],
                [
                  "test_locate_identifiers_4",
                  "test_function_decl",
                  0.3638770230694815
                ],
                [
                  "test_locate_identifiers_16",
                  "test_python_fragment",
                  0.5525062514530825
                ],
                [
                  "test_locate_identifiers_17",
                  "test_argument_list",
                  0.3879917968315853
                ],
                [
                  "test_locate_identifiers_4",
                  "test_locate_identifiers_9",
                  0.7295846059272207
                ],
                [
                  "test_python_fragment",
                  "test_function_decl_2",
                  0.406347977785749
                ],
                [
                  "test_locate_identifiers_13",
                  "test_locate_identifiers_14",
                  0.9509146221003928
                ],
                [
                  "test_no_global_imports",
                  "test_function_decl",
                  0.21520264493646468
                ],
                [
                  "test_locate_identifiers_11",
                  "test_locate_identifiers_14",
                  0.8406728074767076
                ],
                [
                  "test_no_global_imports",
                  "test_function_decl_2",
                  0.2193817272381392
                ],
                [
                  "test_locate_identifiers_11",
                  "test_argument_list",
                  0.48820411097025185
                ],
                [
                  "test_locate_identifiers_3",
                  "test_locate_identifiers_17",
                  0.520686440673719
                ],
                [
                  "test_locate_identifiers_3",
                  "test_function_decl_3",
                  0.35478743759344955
                ],
                [
                  "test_locate_identifiers_6",
                  "test_locate_identifiers_13",
                  0.8192880303729141
                ],
                [
                  "test_locate_identifiers_14",
                  "test_locate_identifiers_16",
                  0.7101481147109989
                ],
                [
                  "test_locate_identifiers_3",
                  "test_locate_identifiers_14",
                  0.4892194439468492
                ],
                [
                  "test_locate_identifiers_7",
                  "test_locate_identifiers_15",
                  0.7126966450997984
                ],
                [
                  "test_locate_identifiers_2",
                  "test_locate_identifiers_8",
                  0.5782762525740313
                ],
                [
                  "test_locate_identifiers_3",
                  "test_locate_identifiers_16",
                  0.5133026629820377
                ],
                [
                  "test_locate_identifiers_10",
                  "test_locate_identifiers_16",
                  0.7278144450826871
                ],
                [
                  "test_locate_identifiers_14",
                  "test_locate_identifiers_17",
                  0.6868582048344383
                ],
                [
                  "test_locate_identifiers_2",
                  "test_function_decl_3",
                  0.37893237337253677
                ],
                [
                  "test_locate_identifiers",
                  "test_locate_identifiers_11",
                  0.6363870410171982
                ],
                [
                  "test_locate_identifiers_4",
                  "test_function_decl_2",
                  0.44513190725972573
                ],
                [
                  "test_locate_identifiers_8",
                  "test_locate_identifiers_14",
                  0.8378729706539432
                ],
                [
                  "test_locate_identifiers_9",
                  "test_no_global_imports",
                  0.3595732599803958
                ],
                [
                  "test_locate_identifiers_10",
                  "test_locate_identifiers_17",
                  0.703945152914344
                ],
                [
                  "test_locate_identifiers_10",
                  "test_locate_identifiers_14",
                  0.809113394062735
                ],
                [
                  "test_locate_identifiers_5",
                  "test_locate_identifiers_8",
                  0.6967016997445653
                ],
                [
                  "test_locate_identifiers_4",
                  "test_locate_identifiers_13",
                  0.8325631958694562
                ],
                [
                  "test_locate_identifiers_6",
                  "test_function_decl_2",
                  0.450698565433964
                ],
                [
                  "test_locate_identifiers",
                  "test_locate_identifiers_8",
                  0.7230776293842429
                ],
                [
                  "test_locate_identifiers_12",
                  "test_expr_generate",
                  0.4956823983201362
                ],
                [
                  "test_locate_identifiers_14",
                  "test_function_decl_3",
                  0.4988151642114916
                ],
                [
                  "test_function_decl_2",
                  "test_expr_generate",
                  0.2876965585159317
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_locate_identifiers_13",
                "false"
              ],
              [
                "test_locate_identifiers_11",
                "false"
              ],
              [
                "test_locate_identifiers_2",
                "false"
              ],
              [
                "test_locate_identifiers_4",
                "false"
              ],
              [
                "test_locate_identifiers_9",
                "false"
              ],
              [
                "test_locate_identifiers_10",
                "false"
              ],
              [
                "test_python_fragment",
                "false"
              ],
              [
                "test_function_decl_2",
                "false"
              ],
              [
                "test_locate_identifiers_3",
                "false"
              ],
              [
                "test_locate_identifiers",
                "false"
              ],
              [
                "test_locate_identifiers_14",
                "false"
              ],
              [
                "test_locate_identifiers_8",
                "false"
              ],
              [
                "test_function_decl_3",
                "false"
              ],
              [
                "test_locate_identifiers_15",
                "false"
              ],
              [
                "test_expr_generate",
                "false"
              ],
              [
                "test_locate_identifiers_5",
                "false"
              ],
              [
                "test_locate_identifiers_6",
                "false"
              ],
              [
                "test_no_global_imports",
                "false"
              ],
              [
                "test_locate_identifiers_16",
                "false"
              ],
              [
                "test_locate_identifiers_17",
                "false"
              ],
              [
                "test_locate_identifiers_12",
                "false"
              ],
              [
                "test_argument_list",
                "false"
              ],
              [
                "test_locate_identifiers_7",
                "false"
              ],
              [
                "test_function_decl",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 24
      }
    ]
  },
  {
    "name": "test_\u0026_test_lru.py",
    "testCases": [
      {
        "name": "LRUTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "testlru",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "testlru",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "testlru",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "testlru",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "testlru",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "testlru",
                  "true"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "testlru",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "testlru",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "testlru",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "testlru",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "testlru",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "testlru",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "testlru",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "testlru",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "testlru",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "testlru",
                "6"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "testlru",
                [
                  "l"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "testlru",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "testlru",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "test_\u0026_test_loop.py",
    "testCases": [
      {
        "name": "TestLoop",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_no_loop",
                  "[]"
                ],
                [
                  "test_parent_loops",
                  "[]"
                ],
                [
                  "test__FOR_LOOP",
                  "[]"
                ],
                [
                  "test_nested_loops",
                  "[]"
                ],
                [
                  "test_loop_demo",
                  "[]"
                ],
                [
                  "test_out_of_context_access",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_no_loop",
                  "[PyAssertStatement]"
                ],
                [
                  "test_parent_loops",
                  "[PyAssertStatement]"
                ],
                [
                  "test__FOR_LOOP",
                  "[PyAssertStatement]"
                ],
                [
                  "test_nested_loops",
                  "[PyAssertStatement]"
                ],
                [
                  "test_loop_demo",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_out_of_context_access",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_no_loop",
                  "false"
                ],
                [
                  "test_parent_loops",
                  "true"
                ],
                [
                  "test__FOR_LOOP",
                  "true"
                ],
                [
                  "test_nested_loops",
                  "true"
                ],
                [
                  "test_loop_demo",
                  "true"
                ],
                [
                  "test_out_of_context_access",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_no_loop",
                  "false"
                ],
                [
                  "test_parent_loops",
                  "false"
                ],
                [
                  "test__FOR_LOOP",
                  "false"
                ],
                [
                  "test_nested_loops",
                  "false"
                ],
                [
                  "test_loop_demo",
                  "false"
                ],
                [
                  "test_out_of_context_access",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_no_loop",
                  "false"
                ],
                [
                  "test_parent_loops",
                  "false"
                ],
                [
                  "test__FOR_LOOP",
                  "false"
                ],
                [
                  "test_nested_loops",
                  "false"
                ],
                [
                  "test_loop_demo",
                  "false"
                ],
                [
                  "test_out_of_context_access",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_no_loop",
                  "false"
                ],
                [
                  "test_parent_loops",
                  "false"
                ],
                [
                  "test__FOR_LOOP",
                  "false"
                ],
                [
                  "test_nested_loops",
                  "false"
                ],
                [
                  "test_loop_demo",
                  "false"
                ],
                [
                  "test_out_of_context_access",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_no_loop",
                "false"
              ],
              [
                "test_parent_loops",
                "false"
              ],
              [
                "test__FOR_LOOP",
                "false"
              ],
              [
                "test_nested_loops",
                "false"
              ],
              [
                "test_loop_demo",
                "false"
              ],
              [
                "test_out_of_context_access",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_no_loop",
                "false"
              ],
              [
                "test_parent_loops",
                "false"
              ],
              [
                "test__FOR_LOOP",
                "false"
              ],
              [
                "test_nested_loops",
                "false"
              ],
              [
                "test_loop_demo",
                "false"
              ],
              [
                "test_out_of_context_access",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_no_loop",
                []
              ],
              [
                "test_parent_loops",
                []
              ],
              [
                "test__FOR_LOOP",
                []
              ],
              [
                "test_nested_loops",
                []
              ],
              [
                "test_loop_demo",
                []
              ],
              [
                "test_out_of_context_access",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_no_loop",
                "false"
              ],
              [
                "test_parent_loops",
                "false"
              ],
              [
                "test__FOR_LOOP",
                "false"
              ],
              [
                "test_nested_loops",
                "false"
              ],
              [
                "test_loop_demo",
                "false"
              ],
              [
                "test_out_of_context_access",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_no_loop",
                "false"
              ],
              [
                "test_parent_loops",
                "false"
              ],
              [
                "test__FOR_LOOP",
                "false"
              ],
              [
                "test_nested_loops",
                "false"
              ],
              [
                "test_loop_demo",
                "false"
              ],
              [
                "test_out_of_context_access",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_no_loop",
                  "0"
                ],
                [
                  "test_parent_loops",
                  "0"
                ],
                [
                  "test__FOR_LOOP",
                  "0"
                ],
                [
                  "test_nested_loops",
                  "0"
                ],
                [
                  "test_loop_demo",
                  "0"
                ],
                [
                  "test_out_of_context_access",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_no_loop",
                  "0"
                ],
                [
                  "test_parent_loops",
                  "0"
                ],
                [
                  "test__FOR_LOOP",
                  "0"
                ],
                [
                  "test_nested_loops",
                  "0"
                ],
                [
                  "test_loop_demo",
                  "0"
                ],
                [
                  "test_out_of_context_access",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_no_loop",
                "true"
              ],
              [
                "test_parent_loops",
                "true"
              ],
              [
                "test__FOR_LOOP",
                "false"
              ],
              [
                "test_nested_loops",
                "false"
              ],
              [
                "test_loop_demo",
                "true"
              ],
              [
                "test_out_of_context_access",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_no_loop",
                "false"
              ],
              [
                "test_parent_loops",
                "false"
              ],
              [
                "test__FOR_LOOP",
                "false"
              ],
              [
                "test_nested_loops",
                "false"
              ],
              [
                "test_loop_demo",
                "false"
              ],
              [
                "test_out_of_context_access",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_no_loop",
                "1"
              ],
              [
                "test_parent_loops",
                "1"
              ],
              [
                "test__FOR_LOOP",
                "1"
              ],
              [
                "test_nested_loops",
                "1"
              ],
              [
                "test_loop_demo",
                "2"
              ],
              [
                "test_out_of_context_access",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_no_loop",
                [
                  "template",
                  "code"
                ]
              ],
              [
                "test_parent_loops",
                [
                  "template",
                  "code",
                  "rendered",
                  "expected"
                ]
              ],
              [
                "test__FOR_LOOP",
                [
                  "match"
                ]
              ],
              [
                "test_nested_loops",
                [
                  "template",
                  "code",
                  "rendered",
                  "expected"
                ]
              ],
              [
                "test_loop_demo",
                [
                  "template",
                  "code",
                  "rendered",
                  "expected"
                ]
              ],
              [
                "test_out_of_context_access",
                [
                  "template"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_no_loop",
                []
              ],
              [
                "test_parent_loops",
                []
              ],
              [
                "test__FOR_LOOP",
                []
              ],
              [
                "test_nested_loops",
                []
              ],
              [
                "test_loop_demo",
                []
              ],
              [
                "test_out_of_context_access",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.45469558313776853,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_no_loop",
                  "test_nested_loops",
                  0.5746714949419336
                ],
                [
                  "test__FOR_LOOP",
                  "test_out_of_context_access",
                  0.15244540097646503
                ],
                [
                  "test_no_loop",
                  "test_out_of_context_access",
                  0.43126918666448416
                ],
                [
                  "test_loop_demo",
                  "test_parent_loops",
                  0.5219882874299387
                ],
                [
                  "test_nested_loops",
                  "test_out_of_context_access",
                  0.24678571710515176
                ],
                [
                  "test_parent_loops",
                  "test_out_of_context_access",
                  0.2787760720267345
                ],
                [
                  "test__FOR_LOOP",
                  "test_loop_demo",
                  0.3593901386508248
                ],
                [
                  "test_loop_demo",
                  "test_nested_loops",
                  0.44244728101518416
                ],
                [
                  "test_loop_demo",
                  "test_out_of_context_access",
                  0.31126587812744094
                ],
                [
                  "test__FOR_LOOP",
                  "test_no_loop",
                  0.4320907768794769
                ],
                [
                  "test__FOR_LOOP",
                  "test_parent_loops",
                  0.509066886777054
                ],
                [
                  "test_no_loop",
                  "test_parent_loops",
                  0.583008101071294
                ],
                [
                  "test_nested_loops",
                  "test_parent_loops",
                  0.8228843577756337
                ],
                [
                  "test__FOR_LOOP",
                  "test_nested_loops",
                  0.5810706711358189
                ],
                [
                  "test_no_loop",
                  "test_loop_demo",
                  0.573273496489093
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_no_loop",
                "false"
              ],
              [
                "test_parent_loops",
                "false"
              ],
              [
                "test__FOR_LOOP",
                "false"
              ],
              [
                "test_nested_loops",
                "false"
              ],
              [
                "test_loop_demo",
                "false"
              ],
              [
                "test_out_of_context_access",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      },
      {
        "name": "TestLoopStack",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_enter",
                  "[]"
                ],
                [
                  "test__top",
                  "[]"
                ],
                [
                  "test__pop",
                  "[]"
                ],
                [
                  "test__push",
                  "[]"
                ],
                [
                  "test_exit",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_enter",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test__top",
                  "[PyAssertStatement]"
                ],
                [
                  "test__pop",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test__push",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_exit",
                  "[PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_enter",
                  "false"
                ],
                [
                  "test__top",
                  "false"
                ],
                [
                  "test__pop",
                  "false"
                ],
                [
                  "test__push",
                  "false"
                ],
                [
                  "test_exit",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_enter",
                  "false"
                ],
                [
                  "test__top",
                  "false"
                ],
                [
                  "test__pop",
                  "false"
                ],
                [
                  "test__push",
                  "false"
                ],
                [
                  "test_exit",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_enter",
                  "false"
                ],
                [
                  "test__top",
                  "false"
                ],
                [
                  "test__pop",
                  "false"
                ],
                [
                  "test__push",
                  "false"
                ],
                [
                  "test_exit",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_enter",
                  "false"
                ],
                [
                  "test__top",
                  "false"
                ],
                [
                  "test__pop",
                  "false"
                ],
                [
                  "test__push",
                  "false"
                ],
                [
                  "test_exit",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_enter",
                "false"
              ],
              [
                "test__top",
                "false"
              ],
              [
                "test__pop",
                "false"
              ],
              [
                "test__push",
                "false"
              ],
              [
                "test_exit",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_enter",
                "false"
              ],
              [
                "test__top",
                "false"
              ],
              [
                "test__pop",
                "false"
              ],
              [
                "test__push",
                "false"
              ],
              [
                "test_exit",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_enter",
                [
                  "self.bottom"
                ]
              ],
              [
                "test__top",
                [
                  "self.stack.stack"
                ]
              ],
              [
                "test__pop",
                []
              ],
              [
                "test__push",
                [
                  "self.bottom"
                ]
              ],
              [
                "test_exit",
                [
                  "self.bottom"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_enter",
                "false"
              ],
              [
                "test__top",
                "false"
              ],
              [
                "test__pop",
                "false"
              ],
              [
                "test__push",
                "false"
              ],
              [
                "test_exit",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_enter",
                "false"
              ],
              [
                "test__top",
                "false"
              ],
              [
                "test__pop",
                "false"
              ],
              [
                "test__push",
                "false"
              ],
              [
                "test_exit",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_enter",
                  "0"
                ],
                [
                  "test__top",
                  "0"
                ],
                [
                  "test__pop",
                  "0"
                ],
                [
                  "test__push",
                  "0"
                ],
                [
                  "test_exit",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_enter",
                  "0"
                ],
                [
                  "test__top",
                  "0"
                ],
                [
                  "test__pop",
                  "0"
                ],
                [
                  "test__push",
                  "0"
                ],
                [
                  "test_exit",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_enter",
                "false"
              ],
              [
                "test__top",
                "false"
              ],
              [
                "test__pop",
                "false"
              ],
              [
                "test__push",
                "false"
              ],
              [
                "test_exit",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_enter",
                "false"
              ],
              [
                "test__top",
                "false"
              ],
              [
                "test__pop",
                "false"
              ],
              [
                "test__push",
                "false"
              ],
              [
                "test_exit",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_enter",
                "2"
              ],
              [
                "test__top",
                "1"
              ],
              [
                "test__pop",
                "3"
              ],
              [
                "test__push",
                "3"
              ],
              [
                "test_exit",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_enter",
                [
                  "s",
                  "iterable"
                ]
              ],
              [
                "test__top",
                []
              ],
              [
                "test__pop",
                [
                  "top"
                ]
              ],
              [
                "test__push",
                [
                  "iterable"
                ]
              ],
              [
                "test_exit",
                [
                  "before",
                  "iterable",
                  "after"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_enter",
                [
                  "self.stack.stack",
                  "self.stack"
                ]
              ],
              [
                "test__top",
                [
                  "self.bottom",
                  "self.stack"
                ]
              ],
              [
                "test__pop",
                [
                  "self.stack.stack",
                  "self.bottom",
                  "self.stack"
                ]
              ],
              [
                "test__push",
                [
                  "self.stack.stack",
                  "self.stack"
                ]
              ],
              [
                "test_exit",
                [
                  "self.stack.stack",
                  "self.stack"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4665070614052829,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_enter",
                  "test_exit",
                  0.4514960273942312
                ],
                [
                  "test__top",
                  "test_exit",
                  0.37038926633581065
                ],
                [
                  "test__top",
                  "test__pop",
                  0.5050762722761054
                ],
                [
                  "test_enter",
                  "test__pop",
                  0.28895745753230795
                ],
                [
                  "test__push",
                  "test_exit",
                  0.5248906591678238
                ],
                [
                  "test_enter",
                  "test__push",
                  0.3686449626698407
                ],
                [
                  "test__top",
                  "test__push",
                  0.3849001794597505
                ],
                [
                  "test__pop",
                  "test__push",
                  0.7581753965757455
                ],
                [
                  "test__pop",
                  "test_exit",
                  0.47619047619047616
                ],
                [
                  "test_enter",
                  "test__top",
                  0.5363499164507369
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_enter",
                "false"
              ],
              [
                "test__top",
                "false"
              ],
              [
                "test__pop",
                "false"
              ],
              [
                "test__push",
                "false"
              ],
              [
                "test_exit",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      },
      {
        "name": "TestLoopContext",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_odd",
                  "[]"
                ],
                [
                  "test_index",
                  "[]"
                ],
                [
                  "test_reverse_index",
                  "[]"
                ],
                [
                  "test_even",
                  "[]"
                ],
                [
                  "test_first",
                  "[]"
                ],
                [
                  "test_last",
                  "[]"
                ],
                [
                  "test___len__",
                  "[]"
                ],
                [
                  "test_cycle",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_odd",
                  "[PyAssertStatement]"
                ],
                [
                  "test_index",
                  "[PyAssertStatement]"
                ],
                [
                  "test_reverse_index",
                  "[PyAssertStatement]"
                ],
                [
                  "test_even",
                  "[PyAssertStatement]"
                ],
                [
                  "test_first",
                  "[PyAssertStatement]"
                ],
                [
                  "test_last",
                  "[PyAssertStatement]"
                ],
                [
                  "test___len__",
                  "[PyAssertStatement]"
                ],
                [
                  "test_cycle",
                  "[PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_odd",
                  "false"
                ],
                [
                  "test_index",
                  "false"
                ],
                [
                  "test_reverse_index",
                  "false"
                ],
                [
                  "test_even",
                  "false"
                ],
                [
                  "test_first",
                  "false"
                ],
                [
                  "test_last",
                  "false"
                ],
                [
                  "test___len__",
                  "false"
                ],
                [
                  "test_cycle",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_odd",
                  "true"
                ],
                [
                  "test_index",
                  "true"
                ],
                [
                  "test_reverse_index",
                  "true"
                ],
                [
                  "test_even",
                  "true"
                ],
                [
                  "test_first",
                  "true"
                ],
                [
                  "test_last",
                  "true"
                ],
                [
                  "test___len__",
                  "false"
                ],
                [
                  "test_cycle",
                  "true"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_odd",
                  "false"
                ],
                [
                  "test_index",
                  "false"
                ],
                [
                  "test_reverse_index",
                  "false"
                ],
                [
                  "test_even",
                  "false"
                ],
                [
                  "test_first",
                  "false"
                ],
                [
                  "test_last",
                  "false"
                ],
                [
                  "test___len__",
                  "false"
                ],
                [
                  "test_cycle",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_odd",
                  "false"
                ],
                [
                  "test_index",
                  "false"
                ],
                [
                  "test_reverse_index",
                  "false"
                ],
                [
                  "test_even",
                  "false"
                ],
                [
                  "test_first",
                  "false"
                ],
                [
                  "test_last",
                  "false"
                ],
                [
                  "test___len__",
                  "false"
                ],
                [
                  "test_cycle",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_odd",
                "false"
              ],
              [
                "test_index",
                "false"
              ],
              [
                "test_reverse_index",
                "false"
              ],
              [
                "test_even",
                "false"
              ],
              [
                "test_first",
                "false"
              ],
              [
                "test_last",
                "false"
              ],
              [
                "test___len__",
                "false"
              ],
              [
                "test_cycle",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_odd",
                "false"
              ],
              [
                "test_index",
                "false"
              ],
              [
                "test_reverse_index",
                "false"
              ],
              [
                "test_even",
                "false"
              ],
              [
                "test_first",
                "false"
              ],
              [
                "test_last",
                "false"
              ],
              [
                "test___len__",
                "false"
              ],
              [
                "test_cycle",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_odd",
                [
                  "self.iterable"
                ]
              ],
              [
                "test_index",
                []
              ],
              [
                "test_reverse_index",
                []
              ],
              [
                "test_even",
                [
                  "self.iterable"
                ]
              ],
              [
                "test_first",
                [
                  "self.iterable"
                ]
              ],
              [
                "test_last",
                [
                  "self.iterable"
                ]
              ],
              [
                "test___len__",
                []
              ],
              [
                "test_cycle",
                [
                  "self.iterable"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_odd",
                "false"
              ],
              [
                "test_index",
                "false"
              ],
              [
                "test_reverse_index",
                "false"
              ],
              [
                "test_even",
                "false"
              ],
              [
                "test_first",
                "false"
              ],
              [
                "test_last",
                "false"
              ],
              [
                "test___len__",
                "false"
              ],
              [
                "test_cycle",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_odd",
                "false"
              ],
              [
                "test_index",
                "false"
              ],
              [
                "test_reverse_index",
                "false"
              ],
              [
                "test_even",
                "false"
              ],
              [
                "test_first",
                "false"
              ],
              [
                "test_last",
                "false"
              ],
              [
                "test___len__",
                "false"
              ],
              [
                "test_cycle",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_odd",
                  "0"
                ],
                [
                  "test_index",
                  "0"
                ],
                [
                  "test_reverse_index",
                  "0"
                ],
                [
                  "test_even",
                  "0"
                ],
                [
                  "test_first",
                  "0"
                ],
                [
                  "test_last",
                  "0"
                ],
                [
                  "test___len__",
                  "0"
                ],
                [
                  "test_cycle",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_odd",
                  "0"
                ],
                [
                  "test_index",
                  "0"
                ],
                [
                  "test_reverse_index",
                  "0"
                ],
                [
                  "test_even",
                  "0"
                ],
                [
                  "test_first",
                  "0"
                ],
                [
                  "test_last",
                  "0"
                ],
                [
                  "test___len__",
                  "0"
                ],
                [
                  "test_cycle",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_odd",
                "false"
              ],
              [
                "test_index",
                "false"
              ],
              [
                "test_reverse_index",
                "true"
              ],
              [
                "test_even",
                "false"
              ],
              [
                "test_first",
                "false"
              ],
              [
                "test_last",
                "false"
              ],
              [
                "test___len__",
                "false"
              ],
              [
                "test_cycle",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_odd",
                "false"
              ],
              [
                "test_index",
                "false"
              ],
              [
                "test_reverse_index",
                "false"
              ],
              [
                "test_even",
                "false"
              ],
              [
                "test_first",
                "false"
              ],
              [
                "test_last",
                "false"
              ],
              [
                "test___len__",
                "false"
              ],
              [
                "test_cycle",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_odd",
                "1"
              ],
              [
                "test_index",
                "1"
              ],
              [
                "test_reverse_index",
                "1"
              ],
              [
                "test_even",
                "1"
              ],
              [
                "test_first",
                "1"
              ],
              [
                "test_last",
                "1"
              ],
              [
                "test___len__",
                "1"
              ],
              [
                "test_cycle",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_odd",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_index",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_reverse_index",
                [
                  "actual",
                  "expected",
                  "length"
                ]
              ],
              [
                "test_even",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_first",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_last",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test___len__",
                []
              ],
              [
                "test_cycle",
                [
                  "actual",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_odd",
                [
                  "self.ctx"
                ]
              ],
              [
                "test_index",
                [
                  "self.iterable",
                  "self.ctx"
                ]
              ],
              [
                "test_reverse_index",
                [
                  "self.iterable",
                  "self.ctx"
                ]
              ],
              [
                "test_even",
                [
                  "self.ctx"
                ]
              ],
              [
                "test_first",
                [
                  "self.ctx"
                ]
              ],
              [
                "test_last",
                [
                  "self.ctx"
                ]
              ],
              [
                "test___len__",
                [
                  "self.iterable",
                  "self.ctx"
                ]
              ],
              [
                "test_cycle",
                [
                  "self.ctx"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5777725519806423,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test___len__",
                  "test_even",
                  0.34401648061622603
                ],
                [
                  "test___len__",
                  "test_odd",
                  0.34401648061622603
                ],
                [
                  "test_index",
                  "test_even",
                  0.5588235294117647
                ],
                [
                  "test___len__",
                  "test_first",
                  0.41147559989891175
                ],
                [
                  "test___len__",
                  "test_last",
                  0.4005009394574071
                ],
                [
                  "test_index",
                  "test_last",
                  0.58423562827839
                ],
                [
                  "test___len__",
                  "test_reverse_index",
                  0.41785544701867244
                ],
                [
                  "test_first",
                  "test_cycle",
                  0.5781515884776753
                ],
                [
                  "test_odd",
                  "test_cycle",
                  0.5636018619766345
                ],
                [
                  "test_first",
                  "test_odd",
                  0.8289098281887926
                ],
                [
                  "test_index",
                  "test_reverse_index",
                  0.7599605956573483
                ],
                [
                  "test_reverse_index",
                  "test_cycle",
                  0.5843065474681431
                ],
                [
                  "test_last",
                  "test_cycle",
                  0.5627314338711378
                ],
                [
                  "test___len__",
                  "test_index",
                  0.34401648061622603
                ],
                [
                  "test_last",
                  "test_odd",
                  0.7789808377045201
                ],
                [
                  "test_index",
                  "test_first",
                  0.6002450479987809
                ],
                [
                  "test_last",
                  "test_even",
                  0.806801581908253
                ],
                [
                  "test_reverse_index",
                  "test_last",
                  0.579074221277382
                ],
                [
                  "test_index",
                  "test_cycle",
                  0.6262242910851494
                ],
                [
                  "test_even",
                  "test_cycle",
                  0.5636018619766345
                ],
                [
                  "test_reverse_index",
                  "test_first",
                  0.5949422064001082
                ],
                [
                  "test_reverse_index",
                  "test_even",
                  0.5488604301969737
                ],
                [
                  "test_reverse_index",
                  "test_odd",
                  0.5488604301969737
                ],
                [
                  "test_first",
                  "test_even",
                  0.8003267306650411
                ],
                [
                  "test_even",
                  "test_odd",
                  0.8529411764705882
                ],
                [
                  "test_first",
                  "test_last",
                  0.8381440091756065
                ],
                [
                  "test_index",
                  "test_odd",
                  0.5588235294117647
                ],
                [
                  "test___len__",
                  "test_cycle",
                  0.19720265943665385
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_odd",
                "false"
              ],
              [
                "test_index",
                "false"
              ],
              [
                "test_reverse_index",
                "false"
              ],
              [
                "test_even",
                "false"
              ],
              [
                "test_first",
                "false"
              ],
              [
                "test_last",
                "false"
              ],
              [
                "test___len__",
                "false"
              ],
              [
                "test_cycle",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 8
      }
    ]
  },
  {
    "name": "test_\u0026_test_util.py",
    "testCases": [
      {
        "name": "UtilTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_fast_buffer_truncate",
                  "[]"
                ],
                [
                  "test_load_plugin_failure",
                  "[]"
                ],
                [
                  "test_fast_buffer_write",
                  "[]"
                ],
                [
                  "test_load_module",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_read_file",
                  "[]"
                ],
                [
                  "test_fast_buffer_encoded",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_fast_buffer_truncate",
                  "[]"
                ],
                [
                  "test_load_plugin_failure",
                  "[]"
                ],
                [
                  "test_fast_buffer_write",
                  "[]"
                ],
                [
                  "test_load_module",
                  "[]"
                ],
                [
                  "test_read_file",
                  "[PyAssertStatement]"
                ],
                [
                  "test_fast_buffer_encoded",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_fast_buffer_truncate",
                  "false"
                ],
                [
                  "test_load_plugin_failure",
                  "false"
                ],
                [
                  "test_fast_buffer_write",
                  "false"
                ],
                [
                  "test_load_module",
                  "false"
                ],
                [
                  "test_read_file",
                  "false"
                ],
                [
                  "test_fast_buffer_encoded",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_fast_buffer_truncate",
                  "false"
                ],
                [
                  "test_load_plugin_failure",
                  "false"
                ],
                [
                  "test_fast_buffer_write",
                  "false"
                ],
                [
                  "test_load_module",
                  "false"
                ],
                [
                  "test_read_file",
                  "false"
                ],
                [
                  "test_fast_buffer_encoded",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_fast_buffer_truncate",
                  "false"
                ],
                [
                  "test_load_plugin_failure",
                  "false"
                ],
                [
                  "test_fast_buffer_write",
                  "false"
                ],
                [
                  "test_load_module",
                  "false"
                ],
                [
                  "test_read_file",
                  "false"
                ],
                [
                  "test_fast_buffer_encoded",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_fast_buffer_truncate",
                  "false"
                ],
                [
                  "test_load_plugin_failure",
                  "false"
                ],
                [
                  "test_fast_buffer_write",
                  "false"
                ],
                [
                  "test_load_module",
                  "false"
                ],
                [
                  "test_read_file",
                  "false"
                ],
                [
                  "test_fast_buffer_encoded",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_fast_buffer_truncate",
                "false"
              ],
              [
                "test_load_plugin_failure",
                "false"
              ],
              [
                "test_fast_buffer_write",
                "false"
              ],
              [
                "test_load_module",
                "false"
              ],
              [
                "test_read_file",
                "false"
              ],
              [
                "test_fast_buffer_encoded",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_fast_buffer_truncate",
                "false"
              ],
              [
                "test_load_plugin_failure",
                "false"
              ],
              [
                "test_fast_buffer_write",
                "false"
              ],
              [
                "test_load_module",
                "false"
              ],
              [
                "test_read_file",
                "false"
              ],
              [
                "test_fast_buffer_encoded",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_fast_buffer_truncate",
                []
              ],
              [
                "test_load_plugin_failure",
                []
              ],
              [
                "test_fast_buffer_write",
                []
              ],
              [
                "test_load_module",
                []
              ],
              [
                "test_read_file",
                []
              ],
              [
                "test_fast_buffer_encoded",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_fast_buffer_truncate",
                "false"
              ],
              [
                "test_load_plugin_failure",
                "false"
              ],
              [
                "test_fast_buffer_write",
                "false"
              ],
              [
                "test_load_module",
                "false"
              ],
              [
                "test_read_file",
                "false"
              ],
              [
                "test_fast_buffer_encoded",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_fast_buffer_truncate",
                "false"
              ],
              [
                "test_load_plugin_failure",
                "false"
              ],
              [
                "test_fast_buffer_write",
                "false"
              ],
              [
                "test_load_module",
                "false"
              ],
              [
                "test_read_file",
                "false"
              ],
              [
                "test_fast_buffer_encoded",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_fast_buffer_truncate",
                  "0"
                ],
                [
                  "test_load_plugin_failure",
                  "0"
                ],
                [
                  "test_fast_buffer_write",
                  "0"
                ],
                [
                  "test_load_module",
                  "0"
                ],
                [
                  "test_read_file",
                  "0"
                ],
                [
                  "test_fast_buffer_encoded",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_fast_buffer_truncate",
                  "0"
                ],
                [
                  "test_load_plugin_failure",
                  "0"
                ],
                [
                  "test_fast_buffer_write",
                  "0"
                ],
                [
                  "test_load_module",
                  "0"
                ],
                [
                  "test_read_file",
                  "0"
                ],
                [
                  "test_fast_buffer_encoded",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_fast_buffer_truncate",
                "false"
              ],
              [
                "test_load_plugin_failure",
                "false"
              ],
              [
                "test_fast_buffer_write",
                "false"
              ],
              [
                "test_load_module",
                "false"
              ],
              [
                "test_read_file",
                "false"
              ],
              [
                "test_fast_buffer_encoded",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_fast_buffer_truncate",
                "false"
              ],
              [
                "test_load_plugin_failure",
                "false"
              ],
              [
                "test_fast_buffer_write",
                "false"
              ],
              [
                "test_load_module",
                "false"
              ],
              [
                "test_read_file",
                "false"
              ],
              [
                "test_fast_buffer_encoded",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_fast_buffer_truncate",
                "0"
              ],
              [
                "test_load_plugin_failure",
                "1"
              ],
              [
                "test_fast_buffer_write",
                "0"
              ],
              [
                "test_load_module",
                "1"
              ],
              [
                "test_read_file",
                "1"
              ],
              [
                "test_fast_buffer_encoded",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_fast_buffer_truncate",
                [
                  "buf"
                ]
              ],
              [
                "test_load_plugin_failure",
                [
                  "loader"
                ]
              ],
              [
                "test_fast_buffer_write",
                [
                  "buf"
                ]
              ],
              [
                "test_load_module",
                [
                  "module",
                  "fn"
                ]
              ],
              [
                "test_read_file",
                [
                  "data",
                  "fn"
                ]
              ],
              [
                "test_fast_buffer_encoded",
                [
                  "q",
                  "buf",
                  "s"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_fast_buffer_truncate",
                []
              ],
              [
                "test_load_plugin_failure",
                []
              ],
              [
                "test_fast_buffer_write",
                []
              ],
              [
                "test_load_module",
                []
              ],
              [
                "test_read_file",
                []
              ],
              [
                "test_fast_buffer_encoded",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.25032050937733147,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_fast_buffer_truncate",
                  "test_load_plugin_failure",
                  0.10050378152592121
                ],
                [
                  "test_fast_buffer_encoded",
                  "test_load_module",
                  0.26082026547865056
                ],
                [
                  "test_load_module",
                  "test_load_plugin_failure",
                  0.20597146021777488
                ],
                [
                  "test_read_file",
                  "test_load_module",
                  0.4928053803045811
                ],
                [
                  "test_fast_buffer_truncate",
                  "test_fast_buffer_encoded",
                  0.33407655239053047
                ],
                [
                  "test_fast_buffer_encoded",
                  "test_load_plugin_failure",
                  0.16116459280507606
                ],
                [
                  "test_fast_buffer_encoded",
                  "test_read_file",
                  0.26462806201248157
                ],
                [
                  "test_read_file",
                  "test_load_plugin_failure",
                  0.14927035850663303
                ],
                [
                  "test_fast_buffer_write",
                  "test_load_module",
                  0.12344267996967351
                ],
                [
                  "test_fast_buffer_write",
                  "test_fast_buffer_encoded",
                  0.4225771273642583
                ],
                [
                  "test_fast_buffer_write",
                  "test_load_plugin_failure",
                  0.12712834523274563
                ],
                [
                  "test_fast_buffer_truncate",
                  "test_load_module",
                  0.09759000729485333
                ],
                [
                  "test_fast_buffer_write",
                  "test_read_file",
                  0.12524485821702988
                ],
                [
                  "test_fast_buffer_truncate",
                  "test_read_file",
                  0.09901475429766744
                ],
                [
                  "test_fast_buffer_write",
                  "test_fast_buffer_truncate",
                  0.7905694150420948
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_fast_buffer_truncate",
                "false"
              ],
              [
                "test_load_plugin_failure",
                "false"
              ],
              [
                "test_fast_buffer_write",
                "false"
              ],
              [
                "test_load_module",
                "false"
              ],
              [
                "test_read_file",
                "false"
              ],
              [
                "test_fast_buffer_encoded",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      }
    ]
  },
  {
    "name": "test_\u0026_test_pygen.py",
    "testCases": [
      {
        "name": "GeneratePythonTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_generate_combo",
                  "[]"
                ],
                [
                  "test_false_unindentor",
                  "[]"
                ],
                [
                  "test_generate_normal",
                  "[]"
                ],
                [
                  "test_generate_adjusted",
                  "[]"
                ],
                [
                  "test_multi_line",
                  "[]"
                ],
                [
                  "test_backslash_line",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_generate_combo",
                  "[]"
                ],
                [
                  "test_false_unindentor",
                  "[PyAssertStatement]"
                ],
                [
                  "test_generate_normal",
                  "[PyAssertStatement]"
                ],
                [
                  "test_generate_adjusted",
                  "[PyAssertStatement]"
                ],
                [
                  "test_multi_line",
                  "[PyAssertStatement]"
                ],
                [
                  "test_backslash_line",
                  "[PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_generate_combo",
                  "false"
                ],
                [
                  "test_false_unindentor",
                  "true"
                ],
                [
                  "test_generate_normal",
                  "false"
                ],
                [
                  "test_generate_adjusted",
                  "false"
                ],
                [
                  "test_multi_line",
                  "false"
                ],
                [
                  "test_backslash_line",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_generate_combo",
                  "false"
                ],
                [
                  "test_false_unindentor",
                  "false"
                ],
                [
                  "test_generate_normal",
                  "false"
                ],
                [
                  "test_generate_adjusted",
                  "false"
                ],
                [
                  "test_multi_line",
                  "false"
                ],
                [
                  "test_backslash_line",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_generate_combo",
                  "false"
                ],
                [
                  "test_false_unindentor",
                  "false"
                ],
                [
                  "test_generate_normal",
                  "false"
                ],
                [
                  "test_generate_adjusted",
                  "false"
                ],
                [
                  "test_multi_line",
                  "false"
                ],
                [
                  "test_backslash_line",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_generate_combo",
                  "false"
                ],
                [
                  "test_false_unindentor",
                  "false"
                ],
                [
                  "test_generate_normal",
                  "false"
                ],
                [
                  "test_generate_adjusted",
                  "false"
                ],
                [
                  "test_multi_line",
                  "false"
                ],
                [
                  "test_backslash_line",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_generate_combo",
                "false"
              ],
              [
                "test_false_unindentor",
                "false"
              ],
              [
                "test_generate_normal",
                "false"
              ],
              [
                "test_generate_adjusted",
                "false"
              ],
              [
                "test_multi_line",
                "false"
              ],
              [
                "test_backslash_line",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_generate_combo",
                "false"
              ],
              [
                "test_false_unindentor",
                "false"
              ],
              [
                "test_generate_normal",
                "false"
              ],
              [
                "test_generate_adjusted",
                "false"
              ],
              [
                "test_multi_line",
                "false"
              ],
              [
                "test_backslash_line",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_generate_combo",
                []
              ],
              [
                "test_false_unindentor",
                []
              ],
              [
                "test_generate_normal",
                []
              ],
              [
                "test_generate_adjusted",
                []
              ],
              [
                "test_multi_line",
                []
              ],
              [
                "test_backslash_line",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_generate_combo",
                "false"
              ],
              [
                "test_false_unindentor",
                "false"
              ],
              [
                "test_generate_normal",
                "false"
              ],
              [
                "test_generate_adjusted",
                "false"
              ],
              [
                "test_multi_line",
                "false"
              ],
              [
                "test_backslash_line",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_generate_combo",
                "false"
              ],
              [
                "test_false_unindentor",
                "false"
              ],
              [
                "test_generate_normal",
                "false"
              ],
              [
                "test_generate_adjusted",
                "false"
              ],
              [
                "test_multi_line",
                "false"
              ],
              [
                "test_backslash_line",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_generate_combo",
                  "0"
                ],
                [
                  "test_false_unindentor",
                  "0"
                ],
                [
                  "test_generate_normal",
                  "0"
                ],
                [
                  "test_generate_adjusted",
                  "0"
                ],
                [
                  "test_multi_line",
                  "0"
                ],
                [
                  "test_backslash_line",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_generate_combo",
                  "0"
                ],
                [
                  "test_false_unindentor",
                  "0"
                ],
                [
                  "test_generate_normal",
                  "0"
                ],
                [
                  "test_generate_adjusted",
                  "0"
                ],
                [
                  "test_multi_line",
                  "0"
                ],
                [
                  "test_backslash_line",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_generate_combo",
                "false"
              ],
              [
                "test_false_unindentor",
                "false"
              ],
              [
                "test_generate_normal",
                "false"
              ],
              [
                "test_generate_adjusted",
                "false"
              ],
              [
                "test_multi_line",
                "false"
              ],
              [
                "test_backslash_line",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_generate_combo",
                "false"
              ],
              [
                "test_false_unindentor",
                "false"
              ],
              [
                "test_generate_normal",
                "false"
              ],
              [
                "test_generate_adjusted",
                "false"
              ],
              [
                "test_multi_line",
                "false"
              ],
              [
                "test_backslash_line",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_generate_combo",
                "0"
              ],
              [
                "test_false_unindentor",
                "1"
              ],
              [
                "test_generate_normal",
                "1"
              ],
              [
                "test_generate_adjusted",
                "1"
              ],
              [
                "test_multi_line",
                "1"
              ],
              [
                "test_backslash_line",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_generate_combo",
                [
                  "stream",
                  "printer",
                  "block"
                ]
              ],
              [
                "test_false_unindentor",
                [
                  "stream",
                  "printer"
                ]
              ],
              [
                "test_generate_normal",
                [
                  "stream",
                  "printer"
                ]
              ],
              [
                "test_generate_adjusted",
                [
                  "stream",
                  "printer",
                  "block"
                ]
              ],
              [
                "test_multi_line",
                [
                  "stream",
                  "printer",
                  "block"
                ]
              ],
              [
                "test_backslash_line",
                [
                  "stream",
                  "printer",
                  "block"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_generate_combo",
                []
              ],
              [
                "test_false_unindentor",
                []
              ],
              [
                "test_generate_normal",
                []
              ],
              [
                "test_generate_adjusted",
                []
              ],
              [
                "test_multi_line",
                []
              ],
              [
                "test_backslash_line",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5211167703016585,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_generate_combo",
                  "test_false_unindentor",
                  0.5954913341754137
                ],
                [
                  "test_generate_adjusted",
                  "test_backslash_line",
                  0.5805050053104599
                ],
                [
                  "test_generate_normal",
                  "test_backslash_line",
                  0.39712353491016844
                ],
                [
                  "test_generate_normal",
                  "test_generate_combo",
                  0.7358888519570452
                ],
                [
                  "test_generate_adjusted",
                  "test_generate_combo",
                  0.8633230069054445
                ],
                [
                  "test_generate_combo",
                  "test_multi_line",
                  0.3094608723749997
                ],
                [
                  "test_generate_adjusted",
                  "test_false_unindentor",
                  0.7493942055998185
                ],
                [
                  "test_multi_line",
                  "test_false_unindentor",
                  0.3246663234343595
                ],
                [
                  "test_false_unindentor",
                  "test_backslash_line",
                  0.4680402823692413
                ],
                [
                  "test_generate_adjusted",
                  "test_multi_line",
                  0.3834273709983479
                ],
                [
                  "test_multi_line",
                  "test_backslash_line",
                  0.39770867157325085
                ],
                [
                  "test_generate_normal",
                  "test_multi_line",
                  0.3282644444995136
                ],
                [
                  "test_generate_normal",
                  "test_generate_adjusted",
                  0.6274792643644591
                ],
                [
                  "test_generate_combo",
                  "test_backslash_line",
                  0.5540225249946633
                ],
                [
                  "test_generate_normal",
                  "test_false_unindentor",
                  0.501955861057691
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_generate_combo",
                "false"
              ],
              [
                "test_false_unindentor",
                "false"
              ],
              [
                "test_generate_normal",
                "false"
              ],
              [
                "test_generate_adjusted",
                "false"
              ],
              [
                "test_multi_line",
                "false"
              ],
              [
                "test_backslash_line",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      },
      {
        "name": "WhitespaceTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_quote_with_comments",
                  "[]"
                ],
                [
                  "test_open_quotes_with_pound",
                  "[]"
                ],
                [
                  "test_blank_lines",
                  "[]"
                ],
                [
                  "test_quotes_with_pound",
                  "[]"
                ],
                [
                  "test_quotes",
                  "[]"
                ],
                [
                  "test_basic",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_quote_with_comments",
                  "[PyAssertStatement]"
                ],
                [
                  "test_open_quotes_with_pound",
                  "[PyAssertStatement]"
                ],
                [
                  "test_blank_lines",
                  "[PyAssertStatement]"
                ],
                [
                  "test_quotes_with_pound",
                  "[PyAssertStatement]"
                ],
                [
                  "test_quotes",
                  "[PyAssertStatement]"
                ],
                [
                  "test_basic",
                  "[PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_quote_with_comments",
                  "false"
                ],
                [
                  "test_open_quotes_with_pound",
                  "false"
                ],
                [
                  "test_blank_lines",
                  "false"
                ],
                [
                  "test_quotes_with_pound",
                  "false"
                ],
                [
                  "test_quotes",
                  "false"
                ],
                [
                  "test_basic",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_quote_with_comments",
                  "false"
                ],
                [
                  "test_open_quotes_with_pound",
                  "false"
                ],
                [
                  "test_blank_lines",
                  "false"
                ],
                [
                  "test_quotes_with_pound",
                  "false"
                ],
                [
                  "test_quotes",
                  "false"
                ],
                [
                  "test_basic",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_quote_with_comments",
                  "false"
                ],
                [
                  "test_open_quotes_with_pound",
                  "false"
                ],
                [
                  "test_blank_lines",
                  "false"
                ],
                [
                  "test_quotes_with_pound",
                  "false"
                ],
                [
                  "test_quotes",
                  "false"
                ],
                [
                  "test_basic",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_quote_with_comments",
                  "false"
                ],
                [
                  "test_open_quotes_with_pound",
                  "false"
                ],
                [
                  "test_blank_lines",
                  "false"
                ],
                [
                  "test_quotes_with_pound",
                  "false"
                ],
                [
                  "test_quotes",
                  "false"
                ],
                [
                  "test_basic",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_quote_with_comments",
                "false"
              ],
              [
                "test_open_quotes_with_pound",
                "false"
              ],
              [
                "test_blank_lines",
                "false"
              ],
              [
                "test_quotes_with_pound",
                "false"
              ],
              [
                "test_quotes",
                "false"
              ],
              [
                "test_basic",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_quote_with_comments",
                "false"
              ],
              [
                "test_open_quotes_with_pound",
                "false"
              ],
              [
                "test_blank_lines",
                "false"
              ],
              [
                "test_quotes_with_pound",
                "false"
              ],
              [
                "test_quotes",
                "false"
              ],
              [
                "test_basic",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_quote_with_comments",
                []
              ],
              [
                "test_open_quotes_with_pound",
                []
              ],
              [
                "test_blank_lines",
                []
              ],
              [
                "test_quotes_with_pound",
                []
              ],
              [
                "test_quotes",
                []
              ],
              [
                "test_basic",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_quote_with_comments",
                "false"
              ],
              [
                "test_open_quotes_with_pound",
                "false"
              ],
              [
                "test_blank_lines",
                "false"
              ],
              [
                "test_quotes_with_pound",
                "false"
              ],
              [
                "test_quotes",
                "false"
              ],
              [
                "test_basic",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_quote_with_comments",
                "false"
              ],
              [
                "test_open_quotes_with_pound",
                "false"
              ],
              [
                "test_blank_lines",
                "false"
              ],
              [
                "test_quotes_with_pound",
                "false"
              ],
              [
                "test_quotes",
                "false"
              ],
              [
                "test_basic",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_quote_with_comments",
                  "0"
                ],
                [
                  "test_open_quotes_with_pound",
                  "0"
                ],
                [
                  "test_blank_lines",
                  "0"
                ],
                [
                  "test_quotes_with_pound",
                  "0"
                ],
                [
                  "test_quotes",
                  "0"
                ],
                [
                  "test_basic",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_quote_with_comments",
                  "0"
                ],
                [
                  "test_open_quotes_with_pound",
                  "0"
                ],
                [
                  "test_blank_lines",
                  "0"
                ],
                [
                  "test_quotes_with_pound",
                  "0"
                ],
                [
                  "test_quotes",
                  "0"
                ],
                [
                  "test_basic",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_quote_with_comments",
                "false"
              ],
              [
                "test_open_quotes_with_pound",
                "false"
              ],
              [
                "test_blank_lines",
                "false"
              ],
              [
                "test_quotes_with_pound",
                "false"
              ],
              [
                "test_quotes",
                "false"
              ],
              [
                "test_basic",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_quote_with_comments",
                "false"
              ],
              [
                "test_open_quotes_with_pound",
                "false"
              ],
              [
                "test_blank_lines",
                "false"
              ],
              [
                "test_quotes_with_pound",
                "false"
              ],
              [
                "test_quotes",
                "false"
              ],
              [
                "test_basic",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_quote_with_comments",
                "1"
              ],
              [
                "test_open_quotes_with_pound",
                "1"
              ],
              [
                "test_blank_lines",
                "1"
              ],
              [
                "test_quotes_with_pound",
                "1"
              ],
              [
                "test_quotes",
                "1"
              ],
              [
                "test_basic",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_quote_with_comments",
                [
                  "text"
                ]
              ],
              [
                "test_open_quotes_with_pound",
                [
                  "text"
                ]
              ],
              [
                "test_blank_lines",
                [
                  "text"
                ]
              ],
              [
                "test_quotes_with_pound",
                [
                  "text"
                ]
              ],
              [
                "test_quotes",
                [
                  "text"
                ]
              ],
              [
                "test_basic",
                [
                  "text"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_quote_with_comments",
                []
              ],
              [
                "test_open_quotes_with_pound",
                []
              ],
              [
                "test_blank_lines",
                []
              ],
              [
                "test_quotes_with_pound",
                []
              ],
              [
                "test_quotes",
                []
              ],
              [
                "test_basic",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.3753654610317994,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_basic",
                  "test_quote_with_comments",
                  0.36235705581141114
                ],
                [
                  "test_blank_lines",
                  "test_quotes",
                  0.409795153621987
                ],
                [
                  "test_open_quotes_with_pound",
                  "test_quote_with_comments",
                  0.532588836129285
                ],
                [
                  "test_basic",
                  "test_quotes",
                  0.4316985480212278
                ],
                [
                  "test_basic",
                  "test_open_quotes_with_pound",
                  0.30370749550252657
                ],
                [
                  "test_open_quotes_with_pound",
                  "test_quotes_with_pound",
                  0.28844049655344633
                ],
                [
                  "test_blank_lines",
                  "test_open_quotes_with_pound",
                  0.4129675108495863
                ],
                [
                  "test_quote_with_comments",
                  "test_quotes",
                  0.36393689171285276
                ],
                [
                  "test_quote_with_comments",
                  "test_quotes_with_pound",
                  0.34918981481987454
                ],
                [
                  "test_quotes_with_pound",
                  "test_quotes",
                  0.3353105352955882
                ],
                [
                  "test_blank_lines",
                  "test_quote_with_comments",
                  0.7090032828922747
                ],
                [
                  "test_open_quotes_with_pound",
                  "test_quotes",
                  0.37561267546351507
                ],
                [
                  "test_basic",
                  "test_blank_lines",
                  0.5209366242614525
                ],
                [
                  "test_basic",
                  "test_quotes_with_pound",
                  0.12052610640125554
                ],
                [
                  "test_blank_lines",
                  "test_quotes_with_pound",
                  0.11441088814070734
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_quote_with_comments",
                "false"
              ],
              [
                "test_open_quotes_with_pound",
                "false"
              ],
              [
                "test_blank_lines",
                "false"
              ],
              [
                "test_quotes_with_pound",
                "false"
              ],
              [
                "test_quotes",
                "false"
              ],
              [
                "test_basic",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      }
    ]
  },
  {
    "name": "test_\u0026_test_lookup.py",
    "testCases": [
      {
        "name": "LookupTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_basic",
                  "[]"
                ],
                [
                  "test_uri_cache",
                  "[]"
                ],
                [
                  "test_subdir",
                  "[]"
                ],
                [
                  "test_uri_adjust",
                  "[]"
                ],
                [
                  "test_dont_accept_relative_outside_of_root",
                  "[]"
                ],
                [
                  "test_updir",
                  "[]"
                ],
                [
                  "test_directory_lookup",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_check_not_found",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_no_lookup",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_basic",
                  "[PyAssertStatement]"
                ],
                [
                  "test_uri_cache",
                  "[PyAssertStatement]"
                ],
                [
                  "test_subdir",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_uri_adjust",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_dont_accept_relative_outside_of_root",
                  "[]"
                ],
                [
                  "test_updir",
                  "[PyAssertStatement]"
                ],
                [
                  "test_directory_lookup",
                  "[]"
                ],
                [
                  "test_check_not_found",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_no_lookup",
                  "[PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_basic",
                  "false"
                ],
                [
                  "test_uri_cache",
                  "false"
                ],
                [
                  "test_subdir",
                  "false"
                ],
                [
                  "test_uri_adjust",
                  "false"
                ],
                [
                  "test_dont_accept_relative_outside_of_root",
                  "false"
                ],
                [
                  "test_updir",
                  "false"
                ],
                [
                  "test_directory_lookup",
                  "false"
                ],
                [
                  "test_check_not_found",
                  "false"
                ],
                [
                  "test_no_lookup",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_basic",
                  "false"
                ],
                [
                  "test_uri_cache",
                  "false"
                ],
                [
                  "test_subdir",
                  "false"
                ],
                [
                  "test_uri_adjust",
                  "false"
                ],
                [
                  "test_dont_accept_relative_outside_of_root",
                  "false"
                ],
                [
                  "test_updir",
                  "false"
                ],
                [
                  "test_directory_lookup",
                  "false"
                ],
                [
                  "test_check_not_found",
                  "false"
                ],
                [
                  "test_no_lookup",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_basic",
                  "false"
                ],
                [
                  "test_uri_cache",
                  "false"
                ],
                [
                  "test_subdir",
                  "false"
                ],
                [
                  "test_uri_adjust",
                  "false"
                ],
                [
                  "test_dont_accept_relative_outside_of_root",
                  "false"
                ],
                [
                  "test_updir",
                  "false"
                ],
                [
                  "test_directory_lookup",
                  "false"
                ],
                [
                  "test_check_not_found",
                  "false"
                ],
                [
                  "test_no_lookup",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_basic",
                  "false"
                ],
                [
                  "test_uri_cache",
                  "false"
                ],
                [
                  "test_subdir",
                  "false"
                ],
                [
                  "test_uri_adjust",
                  "false"
                ],
                [
                  "test_dont_accept_relative_outside_of_root",
                  "false"
                ],
                [
                  "test_updir",
                  "false"
                ],
                [
                  "test_directory_lookup",
                  "false"
                ],
                [
                  "test_check_not_found",
                  "false"
                ],
                [
                  "test_no_lookup",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_basic",
                "false"
              ],
              [
                "test_uri_cache",
                "false"
              ],
              [
                "test_subdir",
                "false"
              ],
              [
                "test_uri_adjust",
                "false"
              ],
              [
                "test_dont_accept_relative_outside_of_root",
                "false"
              ],
              [
                "test_updir",
                "false"
              ],
              [
                "test_directory_lookup",
                "false"
              ],
              [
                "test_check_not_found",
                "false"
              ],
              [
                "test_no_lookup",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_basic",
                "false"
              ],
              [
                "test_uri_cache",
                "false"
              ],
              [
                "test_subdir",
                "false"
              ],
              [
                "test_uri_adjust",
                "false"
              ],
              [
                "test_dont_accept_relative_outside_of_root",
                "false"
              ],
              [
                "test_updir",
                "false"
              ],
              [
                "test_directory_lookup",
                "false"
              ],
              [
                "test_check_not_found",
                "false"
              ],
              [
                "test_no_lookup",
                "true"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_basic",
                []
              ],
              [
                "test_uri_cache",
                []
              ],
              [
                "test_subdir",
                []
              ],
              [
                "test_uri_adjust",
                []
              ],
              [
                "test_dont_accept_relative_outside_of_root",
                []
              ],
              [
                "test_updir",
                []
              ],
              [
                "test_directory_lookup",
                []
              ],
              [
                "test_check_not_found",
                []
              ],
              [
                "test_no_lookup",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_basic",
                "false"
              ],
              [
                "test_uri_cache",
                "false"
              ],
              [
                "test_subdir",
                "false"
              ],
              [
                "test_uri_adjust",
                "false"
              ],
              [
                "test_dont_accept_relative_outside_of_root",
                "false"
              ],
              [
                "test_updir",
                "false"
              ],
              [
                "test_directory_lookup",
                "false"
              ],
              [
                "test_check_not_found",
                "false"
              ],
              [
                "test_no_lookup",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_basic",
                "false"
              ],
              [
                "test_uri_cache",
                "false"
              ],
              [
                "test_subdir",
                "false"
              ],
              [
                "test_uri_adjust",
                "false"
              ],
              [
                "test_dont_accept_relative_outside_of_root",
                "false"
              ],
              [
                "test_updir",
                "false"
              ],
              [
                "test_directory_lookup",
                "false"
              ],
              [
                "test_check_not_found",
                "false"
              ],
              [
                "test_no_lookup",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": true,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_basic",
                  "0"
                ],
                [
                  "test_uri_cache",
                  "0"
                ],
                [
                  "test_subdir",
                  "0"
                ],
                [
                  "test_uri_adjust",
                  "0"
                ],
                [
                  "test_dont_accept_relative_outside_of_root",
                  "0"
                ],
                [
                  "test_updir",
                  "0"
                ],
                [
                  "test_directory_lookup",
                  "0"
                ],
                [
                  "test_check_not_found",
                  "0"
                ],
                [
                  "test_no_lookup",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_basic",
                  "0"
                ],
                [
                  "test_uri_cache",
                  "0"
                ],
                [
                  "test_subdir",
                  "0"
                ],
                [
                  "test_uri_adjust",
                  "0"
                ],
                [
                  "test_dont_accept_relative_outside_of_root",
                  "0"
                ],
                [
                  "test_updir",
                  "0"
                ],
                [
                  "test_directory_lookup",
                  "0"
                ],
                [
                  "test_check_not_found",
                  "0"
                ],
                [
                  "test_no_lookup",
                  "1"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_basic",
                "false"
              ],
              [
                "test_uri_cache",
                "false"
              ],
              [
                "test_subdir",
                "false"
              ],
              [
                "test_uri_adjust",
                "false"
              ],
              [
                "test_dont_accept_relative_outside_of_root",
                "false"
              ],
              [
                "test_updir",
                "false"
              ],
              [
                "test_directory_lookup",
                "false"
              ],
              [
                "test_check_not_found",
                "false"
              ],
              [
                "test_no_lookup",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_basic",
                "false"
              ],
              [
                "test_uri_cache",
                "false"
              ],
              [
                "test_subdir",
                "false"
              ],
              [
                "test_uri_adjust",
                "false"
              ],
              [
                "test_dont_accept_relative_outside_of_root",
                "false"
              ],
              [
                "test_updir",
                "false"
              ],
              [
                "test_directory_lookup",
                "false"
              ],
              [
                "test_check_not_found",
                "false"
              ],
              [
                "test_no_lookup",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_basic",
                "1"
              ],
              [
                "test_uri_cache",
                "1"
              ],
              [
                "test_subdir",
                "2"
              ],
              [
                "test_uri_adjust",
                "2"
              ],
              [
                "test_dont_accept_relative_outside_of_root",
                "2"
              ],
              [
                "test_updir",
                "1"
              ],
              [
                "test_directory_lookup",
                "1"
              ],
              [
                "test_check_not_found",
                "3"
              ],
              [
                "test_no_lookup",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_basic",
                [
                  "t"
                ]
              ],
              [
                "test_uri_cache",
                []
              ],
              [
                "test_subdir",
                [
                  "t"
                ]
              ],
              [
                "test_uri_adjust",
                [
                  "tl"
                ]
              ],
              [
                "test_dont_accept_relative_outside_of_root",
                [
                  "t",
                  "ctx",
                  "tl",
                  "index"
                ]
              ],
              [
                "test_updir",
                [
                  "t"
                ]
              ],
              [
                "test_directory_lookup",
                []
              ],
              [
                "test_check_not_found",
                [
                  "f",
                  "tl"
                ]
              ],
              [
                "test_no_lookup",
                [
                  "t"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_basic",
                []
              ],
              [
                "test_uri_cache",
                []
              ],
              [
                "test_subdir",
                []
              ],
              [
                "test_uri_adjust",
                []
              ],
              [
                "test_dont_accept_relative_outside_of_root",
                []
              ],
              [
                "test_updir",
                []
              ],
              [
                "test_directory_lookup",
                []
              ],
              [
                "test_check_not_found",
                []
              ],
              [
                "test_no_lookup",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.2831004606119368,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_basic",
                  "test_subdir",
                  0.6943650748294136
                ],
                [
                  "test_subdir",
                  "test_dont_accept_relative_outside_of_root",
                  0.23739073260299884
                ],
                [
                  "test_directory_lookup",
                  "test_dont_accept_relative_outside_of_root",
                  0.2539433734142909
                ],
                [
                  "test_basic",
                  "test_dont_accept_relative_outside_of_root",
                  0.18518593674691167
                ],
                [
                  "test_no_lookup",
                  "test_uri_adjust",
                  0.28353794345988376
                ],
                [
                  "test_basic",
                  "test_updir",
                  0.7354355067681901
                ],
                [
                  "test_basic",
                  "test_no_lookup",
                  0.1717007049358613
                ],
                [
                  "test_uri_adjust",
                  "test_check_not_found",
                  0.37756016074551757
                ],
                [
                  "test_basic",
                  "test_uri_adjust",
                  0.29488391230979427
                ],
                [
                  "test_basic",
                  "test_uri_cache",
                  0.2211629342323457
                ],
                [
                  "test_subdir",
                  "test_updir",
                  0.8170571691028834
                ],
                [
                  "test_subdir",
                  "test_no_lookup",
                  0.23314714686961358
                ],
                [
                  "test_uri_adjust",
                  "test_uri_cache",
                  0.2608695652173913
                ],
                [
                  "test_subdir",
                  "test_uri_cache",
                  0.22750787759664504
                ],
                [
                  "test_updir",
                  "test_check_not_found",
                  0.32643127461868654
                ],
                [
                  "test_no_lookup",
                  "test_uri_cache",
                  0.14176897172994188
                ],
                [
                  "test_subdir",
                  "test_check_not_found",
                  0.33586083136977984
                ],
                [
                  "test_directory_lookup",
                  "test_check_not_found",
                  0.2615343689010108
                ],
                [
                  "test_basic",
                  "test_directory_lookup",
                  0.1392715036327889
                ],
                [
                  "test_uri_cache",
                  "test_dont_accept_relative_outside_of_root",
                  0.226834699289608
                ],
                [
                  "test_updir",
                  "test_directory_lookup",
                  0.14567140814584595
                ],
                [
                  "test_directory_lookup",
                  "test_no_lookup",
                  0.2805793801210661
                ],
                [
                  "test_updir",
                  "test_no_lookup",
                  0.2424476062981644
                ],
                [
                  "test_subdir",
                  "test_directory_lookup",
                  0.1432670637653132
                ],
                [
                  "test_updir",
                  "test_uri_cache",
                  0.23132597278649608
                ],
                [
                  "test_directory_lookup",
                  "test_uri_cache",
                  0.13689641954834839
                ],
                [
                  "test_no_lookup",
                  "test_check_not_found",
                  0.2813954885410108
                ],
                [
                  "test_no_lookup",
                  "test_dont_accept_relative_outside_of_root",
                  0.35220800363430516
                ],
                [
                  "test_uri_adjust",
                  "test_dont_accept_relative_outside_of_root",
                  0.2520385547662311
                ],
                [
                  "test_directory_lookup",
                  "test_uri_adjust",
                  0.054758567819339354
                ],
                [
                  "test_updir",
                  "test_dont_accept_relative_outside_of_root",
                  0.2570193398539127
                ],
                [
                  "test_check_not_found",
                  "test_dont_accept_relative_outside_of_root",
                  0.33559660284066434
                ],
                [
                  "test_basic",
                  "test_check_not_found",
                  0.35210141981546395
                ],
                [
                  "test_updir",
                  "test_uri_adjust",
                  0.23132597278649608
                ],
                [
                  "test_subdir",
                  "test_uri_adjust",
                  0.31851102863530306
                ],
                [
                  "test_uri_cache",
                  "test_check_not_found",
                  0.15102406429820703
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_basic",
                "false"
              ],
              [
                "test_uri_cache",
                "false"
              ],
              [
                "test_subdir",
                "false"
              ],
              [
                "test_uri_adjust",
                "false"
              ],
              [
                "test_dont_accept_relative_outside_of_root",
                "false"
              ],
              [
                "test_updir",
                "false"
              ],
              [
                "test_directory_lookup",
                "false"
              ],
              [
                "test_check_not_found",
                "false"
              ],
              [
                "test_no_lookup",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 9
      },
      {
        "name": "UILooupTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_ui_not_found",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_ui",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_ui_not_found",
                  "[]"
                ],
                [
                  "test_ui",
                  "[PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_ui_not_found",
                  "false"
                ],
                [
                  "test_ui",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_ui_not_found",
                  "false"
                ],
                [
                  "test_ui",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_ui_not_found",
                  "false"
                ],
                [
                  "test_ui",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_ui_not_found",
                  "false"
                ],
                [
                  "test_ui",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_ui_not_found",
                "false"
              ],
              [
                "test_ui",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_ui_not_found",
                "false"
              ],
              [
                "test_ui",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_ui_not_found",
                []
              ],
              [
                "test_ui",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_ui_not_found",
                "false"
              ],
              [
                "test_ui",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_ui_not_found",
                "false"
              ],
              [
                "test_ui",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_ui_not_found",
                  "0"
                ],
                [
                  "test_ui",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_ui_not_found",
                  "0"
                ],
                [
                  "test_ui",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_ui_not_found",
                "false"
              ],
              [
                "test_ui",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_ui_not_found",
                "false"
              ],
              [
                "test_ui",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_ui_not_found",
                "1"
              ],
              [
                "test_ui",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_ui_not_found",
                [
                  "t"
                ]
              ],
              [
                "test_ui",
                [
                  "t"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_ui_not_found",
                []
              ],
              [
                "test_ui",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.25015959146215216,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_ui",
                  "test_ui_not_found",
                  0.25015959146215216
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_ui_not_found",
                "false"
              ],
              [
                "test_ui",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "test_\u0026_test_runtime.py",
    "testCases": [
      {
        "name": "ContextTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_locals_kwargs",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_locals_kwargs",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_locals_kwargs",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_locals_kwargs",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_locals_kwargs",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_locals_kwargs",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_locals_kwargs",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_locals_kwargs",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_locals_kwargs",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_locals_kwargs",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_locals_kwargs",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_locals_kwargs",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_locals_kwargs",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_locals_kwargs",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_locals_kwargs",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_locals_kwargs",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_locals_kwargs",
                [
                  "c",
                  "d"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_locals_kwargs",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_locals_kwargs",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "test_\u0026_test_decorators.py",
    "testCases": [
      {
        "name": "DecoratorTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_toplevel_decorated_name",
                  "[]"
                ],
                [
                  "test_nested_decorated_name",
                  "[]"
                ],
                [
                  "test_toplevel",
                  "[]"
                ],
                [
                  "test_nested",
                  "[]"
                ],
                [
                  "test_toplevel_contextual",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_toplevel_decorated_name",
                  "[PyAssertStatement]"
                ],
                [
                  "test_nested_decorated_name",
                  "[PyAssertStatement]"
                ],
                [
                  "test_toplevel",
                  "[PyAssertStatement]"
                ],
                [
                  "test_nested",
                  "[PyAssertStatement]"
                ],
                [
                  "test_toplevel_contextual",
                  "[PyAssertStatement, PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_toplevel_decorated_name",
                  "false"
                ],
                [
                  "test_nested_decorated_name",
                  "false"
                ],
                [
                  "test_toplevel",
                  "false"
                ],
                [
                  "test_nested",
                  "false"
                ],
                [
                  "test_toplevel_contextual",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_toplevel_decorated_name",
                  "false"
                ],
                [
                  "test_nested_decorated_name",
                  "false"
                ],
                [
                  "test_toplevel",
                  "false"
                ],
                [
                  "test_nested",
                  "false"
                ],
                [
                  "test_toplevel_contextual",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_toplevel_decorated_name",
                  "false"
                ],
                [
                  "test_nested_decorated_name",
                  "false"
                ],
                [
                  "test_toplevel",
                  "false"
                ],
                [
                  "test_nested",
                  "false"
                ],
                [
                  "test_toplevel_contextual",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_toplevel_decorated_name",
                  "false"
                ],
                [
                  "test_nested_decorated_name",
                  "false"
                ],
                [
                  "test_toplevel",
                  "false"
                ],
                [
                  "test_nested",
                  "false"
                ],
                [
                  "test_toplevel_contextual",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_toplevel_decorated_name",
                "false"
              ],
              [
                "test_nested_decorated_name",
                "false"
              ],
              [
                "test_toplevel",
                "false"
              ],
              [
                "test_nested",
                "false"
              ],
              [
                "test_toplevel_contextual",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_toplevel_decorated_name",
                "false"
              ],
              [
                "test_nested_decorated_name",
                "false"
              ],
              [
                "test_toplevel",
                "false"
              ],
              [
                "test_nested",
                "false"
              ],
              [
                "test_toplevel_contextual",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_toplevel_decorated_name",
                []
              ],
              [
                "test_nested_decorated_name",
                []
              ],
              [
                "test_toplevel",
                []
              ],
              [
                "test_nested",
                []
              ],
              [
                "test_toplevel_contextual",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_toplevel_decorated_name",
                "false"
              ],
              [
                "test_nested_decorated_name",
                "false"
              ],
              [
                "test_toplevel",
                "false"
              ],
              [
                "test_nested",
                "false"
              ],
              [
                "test_toplevel_contextual",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_toplevel_decorated_name",
                "false"
              ],
              [
                "test_nested_decorated_name",
                "false"
              ],
              [
                "test_toplevel",
                "false"
              ],
              [
                "test_nested",
                "false"
              ],
              [
                "test_toplevel_contextual",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_toplevel_decorated_name",
                  "0"
                ],
                [
                  "test_nested_decorated_name",
                  "0"
                ],
                [
                  "test_toplevel",
                  "0"
                ],
                [
                  "test_nested",
                  "0"
                ],
                [
                  "test_toplevel_contextual",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_toplevel_decorated_name",
                  "0"
                ],
                [
                  "test_nested_decorated_name",
                  "0"
                ],
                [
                  "test_toplevel",
                  "0"
                ],
                [
                  "test_nested",
                  "0"
                ],
                [
                  "test_toplevel_contextual",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_toplevel_decorated_name",
                "false"
              ],
              [
                "test_nested_decorated_name",
                "false"
              ],
              [
                "test_toplevel",
                "false"
              ],
              [
                "test_nested",
                "false"
              ],
              [
                "test_toplevel_contextual",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_toplevel_decorated_name",
                "false"
              ],
              [
                "test_nested_decorated_name",
                "false"
              ],
              [
                "test_toplevel",
                "false"
              ],
              [
                "test_nested",
                "false"
              ],
              [
                "test_toplevel_contextual",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_toplevel_decorated_name",
                "1"
              ],
              [
                "test_nested_decorated_name",
                "1"
              ],
              [
                "test_toplevel",
                "1"
              ],
              [
                "test_nested",
                "1"
              ],
              [
                "test_toplevel_contextual",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_toplevel_decorated_name",
                [
                  "template"
                ]
              ],
              [
                "test_nested_decorated_name",
                [
                  "template"
                ]
              ],
              [
                "test_toplevel",
                [
                  "template"
                ]
              ],
              [
                "test_nested",
                [
                  "template"
                ]
              ],
              [
                "test_toplevel_contextual",
                [
                  "template"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_toplevel_decorated_name",
                []
              ],
              [
                "test_nested_decorated_name",
                []
              ],
              [
                "test_toplevel",
                []
              ],
              [
                "test_nested",
                []
              ],
              [
                "test_toplevel_contextual",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.74420409192777,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_toplevel",
                  "test_toplevel_contextual",
                  0.7437966814751025
                ],
                [
                  "test_nested",
                  "test_toplevel_decorated_name",
                  0.6444965023917926
                ],
                [
                  "test_toplevel",
                  "test_nested",
                  0.6607929894818237
                ],
                [
                  "test_toplevel",
                  "test_nested_decorated_name",
                  0.7640769328556085
                ],
                [
                  "test_toplevel_decorated_name",
                  "test_nested_decorated_name",
                  0.7973350884309829
                ],
                [
                  "test_toplevel_contextual",
                  "test_toplevel_decorated_name",
                  0.6803459690686197
                ],
                [
                  "test_toplevel_contextual",
                  "test_nested",
                  0.6746307784182412
                ],
                [
                  "test_toplevel_contextual",
                  "test_nested_decorated_name",
                  0.6995837874966482
                ],
                [
                  "test_nested",
                  "test_nested_decorated_name",
                  0.861365903383803
                ],
                [
                  "test_toplevel",
                  "test_toplevel_decorated_name",
                  0.9156162862750787
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_toplevel_decorated_name",
                "false"
              ],
              [
                "test_nested_decorated_name",
                "false"
              ],
              [
                "test_toplevel",
                "false"
              ],
              [
                "test_nested",
                "false"
              ],
              [
                "test_toplevel_contextual",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      }
    ]
  },
  {
    "name": "test_\u0026_test_inheritance.py",
    "testCases": [
      {
        "name": "InheritanceTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_pageargs_2",
                  "[]"
                ],
                [
                  "test_in_call",
                  "[]"
                ],
                [
                  "test_multilevel_nesting",
                  "[]"
                ],
                [
                  "test_basic",
                  "[]"
                ],
                [
                  "test_toplevel",
                  "[]"
                ],
                [
                  "test_includes",
                  "[]"
                ],
                [
                  "test_pageargs",
                  "[]"
                ],
                [
                  "test_pageargs_err",
                  "[]"
                ],
                [
                  "test_dynamic",
                  "[]"
                ],
                [
                  "test_namespaces",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_pageargs_2",
                  "[PyAssertStatement]"
                ],
                [
                  "test_in_call",
                  "[PyAssertStatement]"
                ],
                [
                  "test_multilevel_nesting",
                  "[PyAssertStatement]"
                ],
                [
                  "test_basic",
                  "[PyAssertStatement]"
                ],
                [
                  "test_toplevel",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_includes",
                  "[PyAssertStatement]"
                ],
                [
                  "test_pageargs",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_pageargs_err",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_dynamic",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_namespaces",
                  "[PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_pageargs_2",
                  "false"
                ],
                [
                  "test_in_call",
                  "false"
                ],
                [
                  "test_multilevel_nesting",
                  "false"
                ],
                [
                  "test_basic",
                  "false"
                ],
                [
                  "test_toplevel",
                  "false"
                ],
                [
                  "test_includes",
                  "false"
                ],
                [
                  "test_pageargs",
                  "true"
                ],
                [
                  "test_pageargs_err",
                  "false"
                ],
                [
                  "test_dynamic",
                  "false"
                ],
                [
                  "test_namespaces",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_pageargs_2",
                  "false"
                ],
                [
                  "test_in_call",
                  "false"
                ],
                [
                  "test_multilevel_nesting",
                  "false"
                ],
                [
                  "test_basic",
                  "false"
                ],
                [
                  "test_toplevel",
                  "false"
                ],
                [
                  "test_includes",
                  "false"
                ],
                [
                  "test_pageargs",
                  "false"
                ],
                [
                  "test_pageargs_err",
                  "false"
                ],
                [
                  "test_dynamic",
                  "false"
                ],
                [
                  "test_namespaces",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_pageargs_2",
                  "false"
                ],
                [
                  "test_in_call",
                  "false"
                ],
                [
                  "test_multilevel_nesting",
                  "false"
                ],
                [
                  "test_basic",
                  "false"
                ],
                [
                  "test_toplevel",
                  "false"
                ],
                [
                  "test_includes",
                  "false"
                ],
                [
                  "test_pageargs",
                  "false"
                ],
                [
                  "test_pageargs_err",
                  "false"
                ],
                [
                  "test_dynamic",
                  "false"
                ],
                [
                  "test_namespaces",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_pageargs_2",
                  "false"
                ],
                [
                  "test_in_call",
                  "false"
                ],
                [
                  "test_multilevel_nesting",
                  "false"
                ],
                [
                  "test_basic",
                  "false"
                ],
                [
                  "test_toplevel",
                  "false"
                ],
                [
                  "test_includes",
                  "false"
                ],
                [
                  "test_pageargs",
                  "false"
                ],
                [
                  "test_pageargs_err",
                  "false"
                ],
                [
                  "test_dynamic",
                  "false"
                ],
                [
                  "test_namespaces",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_pageargs_2",
                "false"
              ],
              [
                "test_in_call",
                "false"
              ],
              [
                "test_multilevel_nesting",
                "false"
              ],
              [
                "test_basic",
                "false"
              ],
              [
                "test_toplevel",
                "false"
              ],
              [
                "test_includes",
                "false"
              ],
              [
                "test_pageargs",
                "false"
              ],
              [
                "test_pageargs_err",
                "false"
              ],
              [
                "test_dynamic",
                "false"
              ],
              [
                "test_namespaces",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_pageargs_2",
                "false"
              ],
              [
                "test_in_call",
                "false"
              ],
              [
                "test_multilevel_nesting",
                "false"
              ],
              [
                "test_basic",
                "false"
              ],
              [
                "test_toplevel",
                "false"
              ],
              [
                "test_includes",
                "false"
              ],
              [
                "test_pageargs",
                "false"
              ],
              [
                "test_pageargs_err",
                "true"
              ],
              [
                "test_dynamic",
                "false"
              ],
              [
                "test_namespaces",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_pageargs_2",
                []
              ],
              [
                "test_in_call",
                []
              ],
              [
                "test_multilevel_nesting",
                []
              ],
              [
                "test_basic",
                []
              ],
              [
                "test_toplevel",
                []
              ],
              [
                "test_includes",
                []
              ],
              [
                "test_pageargs",
                []
              ],
              [
                "test_pageargs_err",
                []
              ],
              [
                "test_dynamic",
                []
              ],
              [
                "test_namespaces",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_pageargs_2",
                "false"
              ],
              [
                "test_in_call",
                "false"
              ],
              [
                "test_multilevel_nesting",
                "false"
              ],
              [
                "test_basic",
                "false"
              ],
              [
                "test_toplevel",
                "false"
              ],
              [
                "test_includes",
                "false"
              ],
              [
                "test_pageargs",
                "false"
              ],
              [
                "test_pageargs_err",
                "false"
              ],
              [
                "test_dynamic",
                "false"
              ],
              [
                "test_namespaces",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_pageargs_2",
                "false"
              ],
              [
                "test_in_call",
                "false"
              ],
              [
                "test_multilevel_nesting",
                "false"
              ],
              [
                "test_basic",
                "false"
              ],
              [
                "test_toplevel",
                "false"
              ],
              [
                "test_includes",
                "false"
              ],
              [
                "test_pageargs",
                "false"
              ],
              [
                "test_pageargs_err",
                "false"
              ],
              [
                "test_dynamic",
                "false"
              ],
              [
                "test_namespaces",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": true,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_pageargs_2",
                  "0"
                ],
                [
                  "test_in_call",
                  "0"
                ],
                [
                  "test_multilevel_nesting",
                  "0"
                ],
                [
                  "test_basic",
                  "0"
                ],
                [
                  "test_toplevel",
                  "0"
                ],
                [
                  "test_includes",
                  "0"
                ],
                [
                  "test_pageargs",
                  "0"
                ],
                [
                  "test_pageargs_err",
                  "0"
                ],
                [
                  "test_dynamic",
                  "0"
                ],
                [
                  "test_namespaces",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_pageargs_2",
                  "0"
                ],
                [
                  "test_in_call",
                  "0"
                ],
                [
                  "test_multilevel_nesting",
                  "0"
                ],
                [
                  "test_basic",
                  "0"
                ],
                [
                  "test_toplevel",
                  "0"
                ],
                [
                  "test_includes",
                  "0"
                ],
                [
                  "test_pageargs",
                  "0"
                ],
                [
                  "test_pageargs_err",
                  "2"
                ],
                [
                  "test_dynamic",
                  "0"
                ],
                [
                  "test_namespaces",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_pageargs_2",
                "false"
              ],
              [
                "test_in_call",
                "false"
              ],
              [
                "test_multilevel_nesting",
                "false"
              ],
              [
                "test_basic",
                "false"
              ],
              [
                "test_toplevel",
                "false"
              ],
              [
                "test_includes",
                "false"
              ],
              [
                "test_pageargs",
                "false"
              ],
              [
                "test_pageargs_err",
                "true"
              ],
              [
                "test_dynamic",
                "false"
              ],
              [
                "test_namespaces",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_pageargs_2",
                "false"
              ],
              [
                "test_in_call",
                "false"
              ],
              [
                "test_multilevel_nesting",
                "false"
              ],
              [
                "test_basic",
                "false"
              ],
              [
                "test_toplevel",
                "false"
              ],
              [
                "test_includes",
                "false"
              ],
              [
                "test_pageargs",
                "false"
              ],
              [
                "test_pageargs_err",
                "false"
              ],
              [
                "test_dynamic",
                "false"
              ],
              [
                "test_namespaces",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_pageargs_2",
                "1"
              ],
              [
                "test_in_call",
                "1"
              ],
              [
                "test_multilevel_nesting",
                "1"
              ],
              [
                "test_basic",
                "1"
              ],
              [
                "test_toplevel",
                "2"
              ],
              [
                "test_includes",
                "1"
              ],
              [
                "test_pageargs",
                "2"
              ],
              [
                "test_pageargs_err",
                "2"
              ],
              [
                "test_dynamic",
                "2"
              ],
              [
                "test_namespaces",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_pageargs_2",
                [
                  "collection"
                ]
              ],
              [
                "test_in_call",
                [
                  "collection"
                ]
              ],
              [
                "test_multilevel_nesting",
                [
                  "collection"
                ]
              ],
              [
                "test_basic",
                [
                  "collection"
                ]
              ],
              [
                "test_toplevel",
                [
                  "collection"
                ]
              ],
              [
                "test_includes",
                [
                  "collection"
                ]
              ],
              [
                "test_pageargs",
                [
                  "collection"
                ]
              ],
              [
                "test_pageargs_err",
                [
                  "collection"
                ]
              ],
              [
                "test_dynamic",
                [
                  "collection"
                ]
              ],
              [
                "test_namespaces",
                [
                  "collection"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_pageargs_2",
                []
              ],
              [
                "test_in_call",
                []
              ],
              [
                "test_multilevel_nesting",
                []
              ],
              [
                "test_basic",
                []
              ],
              [
                "test_toplevel",
                []
              ],
              [
                "test_includes",
                []
              ],
              [
                "test_pageargs",
                []
              ],
              [
                "test_pageargs_err",
                []
              ],
              [
                "test_dynamic",
                []
              ],
              [
                "test_namespaces",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.42982965771383075,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_multilevel_nesting",
                  "test_includes",
                  0.2719190117295018
                ],
                [
                  "test_multilevel_nesting",
                  "test_pageargs_2",
                  0.18877898290727277
                ],
                [
                  "test_pageargs_2",
                  "test_in_call",
                  0.4870191570744119
                ],
                [
                  "test_basic",
                  "test_dynamic",
                  0.6715914608563088
                ],
                [
                  "test_includes",
                  "test_dynamic",
                  0.6376502165640107
                ],
                [
                  "test_pageargs_2",
                  "test_toplevel",
                  0.32626156767993864
                ],
                [
                  "test_toplevel",
                  "test_dynamic",
                  0.7218393248156657
                ],
                [
                  "test_multilevel_nesting",
                  "test_pageargs",
                  0.20265847253351674
                ],
                [
                  "test_multilevel_nesting",
                  "test_toplevel",
                  0.38690646784532984
                ],
                [
                  "test_basic",
                  "test_includes",
                  0.6631908342846917
                ],
                [
                  "test_dynamic",
                  "test_in_call",
                  0.36117390011921485
                ],
                [
                  "test_includes",
                  "test_pageargs",
                  0.3684309132485305
                ],
                [
                  "test_namespaces",
                  "test_in_call",
                  0.1786869438667893
                ],
                [
                  "test_multilevel_nesting",
                  "test_namespaces",
                  0.239171540143425
                ],
                [
                  "test_namespaces",
                  "test_toplevel",
                  0.5119259880468797
                ],
                [
                  "test_pageargs_2",
                  "test_pageargs_err",
                  0.5462482007056807
                ],
                [
                  "test_namespaces",
                  "test_pageargs_2",
                  0.2359062756784535
                ],
                [
                  "test_pageargs_err",
                  "test_toplevel",
                  0.4714201010637307
                ],
                [
                  "test_pageargs_err",
                  "test_dynamic",
                  0.5170564885896575
                ],
                [
                  "test_includes",
                  "test_toplevel",
                  0.6036877005941698
                ],
                [
                  "test_multilevel_nesting",
                  "test_in_call",
                  0.24654560254401361
                ],
                [
                  "test_pageargs",
                  "test_pageargs_2",
                  0.7696553224809192
                ],
                [
                  "test_pageargs",
                  "test_in_call",
                  0.5524286208071436
                ],
                [
                  "test_basic",
                  "test_pageargs_err",
                  0.4294665511339632
                ],
                [
                  "test_namespaces",
                  "test_pageargs",
                  0.2733309097115907
                ],
                [
                  "test_pageargs",
                  "test_toplevel",
                  0.4458506054096642
                ],
                [
                  "test_includes",
                  "test_namespaces",
                  0.757422193193816
                ],
                [
                  "test_basic",
                  "test_namespaces",
                  0.5550633476974538
                ],
                [
                  "test_basic",
                  "test_pageargs_2",
                  0.33557802760701216
                ],
                [
                  "test_includes",
                  "test_in_call",
                  0.29632485214220095
                ],
                [
                  "test_basic",
                  "test_in_call",
                  0.25490943826654633
                ],
                [
                  "test_includes",
                  "test_pageargs_2",
                  0.311573180934828
                ],
                [
                  "test_namespaces",
                  "test_dynamic",
                  0.5325625983465783
                ],
                [
                  "test_includes",
                  "test_pageargs_err",
                  0.44001967522493407
                ],
                [
                  "test_pageargs_2",
                  "test_dynamic",
                  0.4141198331925648
                ],
                [
                  "test_toplevel",
                  "test_in_call",
                  0.23006676097743928
                ],
                [
                  "test_multilevel_nesting",
                  "test_dynamic",
                  0.2803142881817371
                ],
                [
                  "test_namespaces",
                  "test_pageargs_err",
                  0.31279657717408127
                ],
                [
                  "test_basic",
                  "test_pageargs",
                  0.3881204716440318
                ],
                [
                  "test_pageargs_err",
                  "test_in_call",
                  0.444842631190683
                ],
                [
                  "test_pageargs",
                  "test_dynamic",
                  0.5337245832961319
                ],
                [
                  "test_multilevel_nesting",
                  "test_pageargs_err",
                  0.31840616903455665
                ],
                [
                  "test_basic",
                  "test_multilevel_nesting",
                  0.34307481237187953
                ],
                [
                  "test_pageargs",
                  "test_pageargs_err",
                  0.5976258481969042
                ],
                [
                  "test_basic",
                  "test_toplevel",
                  0.6869881480145305
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_pageargs_2",
                "false"
              ],
              [
                "test_in_call",
                "false"
              ],
              [
                "test_multilevel_nesting",
                "false"
              ],
              [
                "test_basic",
                "false"
              ],
              [
                "test_toplevel",
                "false"
              ],
              [
                "test_includes",
                "false"
              ],
              [
                "test_pageargs",
                "false"
              ],
              [
                "test_pageargs_err",
                "false"
              ],
              [
                "test_dynamic",
                "false"
              ],
              [
                "test_namespaces",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 10
      }
    ]
  },
  {
    "name": "test_\u0026_ext_\u0026_test_babelplugin.py",
    "testCases": [
      {
        "name": "Test_extract",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_translator_comment",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_parse_python_expression",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_python_gettext_call",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_translator_comment",
                  "[]"
                ],
                [
                  "test_parse_python_expression",
                  "[]"
                ],
                [
                  "test_python_gettext_call",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_translator_comment",
                  "false"
                ],
                [
                  "test_parse_python_expression",
                  "false"
                ],
                [
                  "test_python_gettext_call",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_translator_comment",
                  "false"
                ],
                [
                  "test_parse_python_expression",
                  "false"
                ],
                [
                  "test_python_gettext_call",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_translator_comment",
                  "false"
                ],
                [
                  "test_parse_python_expression",
                  "false"
                ],
                [
                  "test_python_gettext_call",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_translator_comment",
                  "false"
                ],
                [
                  "test_parse_python_expression",
                  "false"
                ],
                [
                  "test_python_gettext_call",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_translator_comment",
                "false"
              ],
              [
                "test_parse_python_expression",
                "false"
              ],
              [
                "test_python_gettext_call",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_translator_comment",
                "false"
              ],
              [
                "test_parse_python_expression",
                "false"
              ],
              [
                "test_python_gettext_call",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_translator_comment",
                []
              ],
              [
                "test_parse_python_expression",
                []
              ],
              [
                "test_python_gettext_call",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_translator_comment",
                "false"
              ],
              [
                "test_parse_python_expression",
                "false"
              ],
              [
                "test_python_gettext_call",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_translator_comment",
                "false"
              ],
              [
                "test_parse_python_expression",
                "false"
              ],
              [
                "test_python_gettext_call",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_translator_comment",
                  "0"
                ],
                [
                  "test_parse_python_expression",
                  "0"
                ],
                [
                  "test_python_gettext_call",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_translator_comment",
                  "0"
                ],
                [
                  "test_parse_python_expression",
                  "0"
                ],
                [
                  "test_python_gettext_call",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_translator_comment",
                "false"
              ],
              [
                "test_parse_python_expression",
                "false"
              ],
              [
                "test_python_gettext_call",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_translator_comment",
                "false"
              ],
              [
                "test_parse_python_expression",
                "false"
              ],
              [
                "test_python_gettext_call",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_translator_comment",
                "1"
              ],
              [
                "test_parse_python_expression",
                "1"
              ],
              [
                "test_python_gettext_call",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_translator_comment",
                [
                  "input",
                  "messages"
                ]
              ],
              [
                "test_parse_python_expression",
                [
                  "input",
                  "messages"
                ]
              ],
              [
                "test_python_gettext_call",
                [
                  "input",
                  "messages"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_translator_comment",
                []
              ],
              [
                "test_parse_python_expression",
                []
              ],
              [
                "test_python_gettext_call",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6682646924725377,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_parse_python_expression",
                  "test_translator_comment",
                  0.5346551032249356
                ],
                [
                  "test_parse_python_expression",
                  "test_python_gettext_call",
                  0.935483870967742
                ],
                [
                  "test_python_gettext_call",
                  "test_translator_comment",
                  0.5346551032249356
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_translator_comment",
                "false"
              ],
              [
                "test_parse_python_expression",
                "false"
              ],
              [
                "test_python_gettext_call",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  }
]