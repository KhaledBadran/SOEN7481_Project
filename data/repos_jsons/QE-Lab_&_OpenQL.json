[
  {
    "name": "tests_\u0026_test_bugs.py",
    "testCases": [
      {
        "name": "Test_bugs",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_typecast",
                  "[]"
                ],
                [
                  "test_operation_order_190",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_stateful_behavior",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_typecast",
                  "[]"
                ],
                [
                  "test_operation_order_190",
                  "[]"
                ],
                [
                  "test_stateful_behavior",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_typecast",
                  "false"
                ],
                [
                  "test_operation_order_190",
                  "false"
                ],
                [
                  "test_stateful_behavior",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_typecast",
                  "false"
                ],
                [
                  "test_operation_order_190",
                  "false"
                ],
                [
                  "test_stateful_behavior",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_typecast",
                  "false"
                ],
                [
                  "test_operation_order_190",
                  "false"
                ],
                [
                  "test_stateful_behavior",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_typecast",
                  "false"
                ],
                [
                  "test_operation_order_190",
                  "false"
                ],
                [
                  "test_stateful_behavior",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_typecast",
                "false"
              ],
              [
                "test_operation_order_190",
                "false"
              ],
              [
                "test_stateful_behavior",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_typecast",
                "false"
              ],
              [
                "test_operation_order_190",
                "false"
              ],
              [
                "test_stateful_behavior",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_typecast",
                []
              ],
              [
                "test_operation_order_190",
                []
              ],
              [
                "test_stateful_behavior",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_typecast",
                "false"
              ],
              [
                "test_operation_order_190",
                "false"
              ],
              [
                "test_stateful_behavior",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_typecast",
                "false"
              ],
              [
                "test_operation_order_190",
                "false"
              ],
              [
                "test_stateful_behavior",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_typecast",
                  "0"
                ],
                [
                  "test_operation_order_190",
                  "0"
                ],
                [
                  "test_stateful_behavior",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_typecast",
                  "0"
                ],
                [
                  "test_operation_order_190",
                  "0"
                ],
                [
                  "test_stateful_behavior",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_typecast",
                "false"
              ],
              [
                "test_operation_order_190",
                "false"
              ],
              [
                "test_stateful_behavior",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_typecast",
                "false"
              ],
              [
                "test_operation_order_190",
                "false"
              ],
              [
                "test_stateful_behavior",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_typecast",
                "0"
              ],
              [
                "test_operation_order_190",
                "1"
              ],
              [
                "test_stateful_behavior",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": true,
            "detail": [
              [
                "test_typecast",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "qubit",
                  "config_fn",
                  "num_circuits",
                  "platf",
                  "k"
                ]
              ],
              [
                "test_operation_order_190",
                [
                  "p1",
                  "p2",
                  "sweep_points",
                  "k1",
                  "nqubits",
                  "k2",
                  "config_fn",
                  "platform",
                  "nregs"
                ]
              ],
              [
                "test_stateful_behavior",
                [
                  "sweep_points",
                  "QISA_fn_2",
                  "QISA_fn_1",
                  "nqubits",
                  "config_fn",
                  "k",
                  "NCOMPILES",
                  "platform",
                  "nregs",
                  "p",
                  "rs2",
                  "rs1",
                  "rd",
                  "QISA_fn",
                  "QISA_fn_i"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_typecast",
                []
              ],
              [
                "test_operation_order_190",
                []
              ],
              [
                "test_stateful_behavior",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6423229422082134,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_operation_order_190",
                  "test_stateful_behavior",
                  0.6801215010691202
                ],
                [
                  "test_typecast",
                  "test_operation_order_190",
                  0.5946837453780289
                ],
                [
                  "test_typecast",
                  "test_stateful_behavior",
                  0.6521635801774913
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_typecast",
                "false"
              ],
              [
                "test_operation_order_190",
                "false"
              ],
              [
                "test_stateful_behavior",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_skip.py",
    "testCases": [
      {
        "name": "Test_skip",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_skip_yes",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_skip_yes",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_skip_yes",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_skip_yes",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_skip_yes",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_skip_yes",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_skip_yes",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_skip_yes",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_skip_yes",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_skip_yes",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_skip_yes",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_skip_yes",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_skip_yes",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_skip_yes",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_skip_yes",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_skip_yes",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": true,
            "detail": [
              [
                "test_skip_yes",
                [
                  "qasm_rdr",
                  "starmon",
                  "num_qubits",
                  "QASM_fn",
                  "v",
                  "kernel_name",
                  "qasm_str",
                  "prog_name",
                  "config",
                  "prog",
                  "GOLD_fn"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_skip_yes",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_skip_yes",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_wait.py",
    "testCases": [
      {
        "name": "Test_wait",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_wait_sweep",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_wait_multi",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_wait_parallel",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_wait_simple",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_wait_sweep",
                  "[]"
                ],
                [
                  "test_wait_multi",
                  "[]"
                ],
                [
                  "test_wait_parallel",
                  "[]"
                ],
                [
                  "test_wait_simple",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_wait_sweep",
                  "true"
                ],
                [
                  "test_wait_multi",
                  "true"
                ],
                [
                  "test_wait_parallel",
                  "false"
                ],
                [
                  "test_wait_simple",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_wait_sweep",
                  "false"
                ],
                [
                  "test_wait_multi",
                  "false"
                ],
                [
                  "test_wait_parallel",
                  "false"
                ],
                [
                  "test_wait_simple",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_wait_sweep",
                  "false"
                ],
                [
                  "test_wait_multi",
                  "false"
                ],
                [
                  "test_wait_parallel",
                  "false"
                ],
                [
                  "test_wait_simple",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_wait_sweep",
                  "false"
                ],
                [
                  "test_wait_multi",
                  "false"
                ],
                [
                  "test_wait_parallel",
                  "false"
                ],
                [
                  "test_wait_simple",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_wait_sweep",
                "false"
              ],
              [
                "test_wait_multi",
                "false"
              ],
              [
                "test_wait_parallel",
                "false"
              ],
              [
                "test_wait_simple",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_wait_sweep",
                "false"
              ],
              [
                "test_wait_multi",
                "false"
              ],
              [
                "test_wait_parallel",
                "false"
              ],
              [
                "test_wait_simple",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_wait_sweep",
                []
              ],
              [
                "test_wait_multi",
                []
              ],
              [
                "test_wait_parallel",
                []
              ],
              [
                "test_wait_simple",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": true,
            "detail": [
              [
                "test_wait_sweep",
                "true"
              ],
              [
                "test_wait_multi",
                "true"
              ],
              [
                "test_wait_parallel",
                "true"
              ],
              [
                "test_wait_simple",
                "true"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_wait_sweep",
                "false"
              ],
              [
                "test_wait_multi",
                "false"
              ],
              [
                "test_wait_parallel",
                "false"
              ],
              [
                "test_wait_simple",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_wait_sweep",
                  "0"
                ],
                [
                  "test_wait_multi",
                  "0"
                ],
                [
                  "test_wait_parallel",
                  "0"
                ],
                [
                  "test_wait_simple",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_wait_sweep",
                  "0"
                ],
                [
                  "test_wait_multi",
                  "0"
                ],
                [
                  "test_wait_parallel",
                  "0"
                ],
                [
                  "test_wait_simple",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_wait_sweep",
                "false"
              ],
              [
                "test_wait_multi",
                "false"
              ],
              [
                "test_wait_parallel",
                "false"
              ],
              [
                "test_wait_simple",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_wait_sweep",
                "false"
              ],
              [
                "test_wait_multi",
                "false"
              ],
              [
                "test_wait_parallel",
                "false"
              ],
              [
                "test_wait_simple",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_wait_sweep",
                "1"
              ],
              [
                "test_wait_multi",
                "1"
              ],
              [
                "test_wait_parallel",
                "1"
              ],
              [
                "test_wait_simple",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_wait_sweep",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "waits",
                  "config_fn",
                  "qubit_idx",
                  "QISA_fn",
                  "k",
                  "gold_fn",
                  "platform"
                ]
              ],
              [
                "test_wait_multi",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "QISA_fn",
                  "k",
                  "gold_fn",
                  "platform"
                ]
              ],
              [
                "test_wait_parallel",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "QISA_fn",
                  "k",
                  "gold_fn",
                  "platform"
                ]
              ],
              [
                "test_wait_simple",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "QISA_fn",
                  "k",
                  "gold_fn",
                  "platform"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_wait_sweep",
                []
              ],
              [
                "test_wait_multi",
                []
              ],
              [
                "test_wait_parallel",
                []
              ],
              [
                "test_wait_simple",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8220287422543303,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_wait_simple",
                  "test_wait_parallel",
                  0.9686278743598322
                ],
                [
                  "test_wait_parallel",
                  "test_wait_sweep",
                  0.7251626814648132
                ],
                [
                  "test_wait_sweep",
                  "test_wait_multi",
                  0.8283222459595938
                ],
                [
                  "test_wait_simple",
                  "test_wait_sweep",
                  0.724819956934809
                ],
                [
                  "test_wait_simple",
                  "test_wait_multi",
                  0.8495483300820669
                ],
                [
                  "test_wait_parallel",
                  "test_wait_multi",
                  0.8356913647248662
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_wait_sweep",
                "false"
              ],
              [
                "test_wait_multi",
                "false"
              ],
              [
                "test_wait_parallel",
                "false"
              ],
              [
                "test_wait_simple",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "tests_\u0026_test_cqasm.py",
    "testCases": [
      {
        "name": "Test_cqasm",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_cqasm_default_gates",
                  "[]"
                ],
                [
                  "test_cqasm_custom_gates",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_cqasm_default_gates",
                  "[]"
                ],
                [
                  "test_cqasm_custom_gates",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_cqasm_default_gates",
                  "true"
                ],
                [
                  "test_cqasm_custom_gates",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_cqasm_default_gates",
                  "false"
                ],
                [
                  "test_cqasm_custom_gates",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_cqasm_default_gates",
                  "false"
                ],
                [
                  "test_cqasm_custom_gates",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_cqasm_default_gates",
                  "false"
                ],
                [
                  "test_cqasm_custom_gates",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cqasm_default_gates",
                "false"
              ],
              [
                "test_cqasm_custom_gates",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_cqasm_default_gates",
                "false"
              ],
              [
                "test_cqasm_custom_gates",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_cqasm_default_gates",
                []
              ],
              [
                "test_cqasm_custom_gates",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cqasm_default_gates",
                "false"
              ],
              [
                "test_cqasm_custom_gates",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cqasm_default_gates",
                "false"
              ],
              [
                "test_cqasm_custom_gates",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_cqasm_default_gates",
                  "0"
                ],
                [
                  "test_cqasm_custom_gates",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_cqasm_default_gates",
                  "0"
                ],
                [
                  "test_cqasm_custom_gates",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_cqasm_default_gates",
                "false"
              ],
              [
                "test_cqasm_custom_gates",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cqasm_default_gates",
                "false"
              ],
              [
                "test_cqasm_custom_gates",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_cqasm_default_gates",
                "0"
              ],
              [
                "test_cqasm_custom_gates",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_cqasm_default_gates",
                [
                  "p",
                  "qasm_files",
                  "sweep_points",
                  "nqubits",
                  "k"
                ]
              ],
              [
                "test_cqasm_custom_gates",
                [
                  "p",
                  "qasm_files",
                  "sweep_points",
                  "nqubits",
                  "k"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_cqasm_default_gates",
                []
              ],
              [
                "test_cqasm_custom_gates",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.991865718317965,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_cqasm_default_gates",
                  "test_cqasm_custom_gates",
                  0.991865718317965
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_cqasm_default_gates",
                "false"
              ],
              [
                "test_cqasm_custom_gates",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_basics.py",
    "testCases": [
      {
        "name": "Test_basic",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_compilation",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_compilation",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_compilation",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_compilation",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_compilation",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_compilation",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_compilation",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_compilation",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_compilation",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_compilation",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_compilation",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_compilation",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_compilation",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_compilation",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_compilation",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_compilation",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_compilation",
                [
                  "p",
                  "qasm_files",
                  "sweep_points",
                  "nqubits",
                  "config_fn",
                  "platf",
                  "k"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_compilation",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_compilation",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_hybrid.py",
    "testCases": [
      {
        "name": "Test_hybrid_classical_quantum",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_for",
                  "[]"
                ],
                [
                  "test_if",
                  "[]"
                ],
                [
                  "test_do_while",
                  "[]"
                ],
                [
                  "test_do_while_nested_for",
                  "[]"
                ],
                [
                  "test_classical",
                  "[]"
                ],
                [
                  "test_if_else",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_for",
                  "[]"
                ],
                [
                  "test_if",
                  "[]"
                ],
                [
                  "test_do_while",
                  "[]"
                ],
                [
                  "test_do_while_nested_for",
                  "[]"
                ],
                [
                  "test_classical",
                  "[]"
                ],
                [
                  "test_if_else",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_for",
                  "false"
                ],
                [
                  "test_if",
                  "false"
                ],
                [
                  "test_do_while",
                  "false"
                ],
                [
                  "test_do_while_nested_for",
                  "false"
                ],
                [
                  "test_classical",
                  "false"
                ],
                [
                  "test_if_else",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_for",
                  "false"
                ],
                [
                  "test_if",
                  "false"
                ],
                [
                  "test_do_while",
                  "false"
                ],
                [
                  "test_do_while_nested_for",
                  "false"
                ],
                [
                  "test_classical",
                  "false"
                ],
                [
                  "test_if_else",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_for",
                  "false"
                ],
                [
                  "test_if",
                  "false"
                ],
                [
                  "test_do_while",
                  "false"
                ],
                [
                  "test_do_while_nested_for",
                  "false"
                ],
                [
                  "test_classical",
                  "false"
                ],
                [
                  "test_if_else",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_for",
                  "false"
                ],
                [
                  "test_if",
                  "false"
                ],
                [
                  "test_do_while",
                  "false"
                ],
                [
                  "test_do_while_nested_for",
                  "false"
                ],
                [
                  "test_classical",
                  "false"
                ],
                [
                  "test_if_else",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_for",
                "false"
              ],
              [
                "test_if",
                "false"
              ],
              [
                "test_do_while",
                "false"
              ],
              [
                "test_do_while_nested_for",
                "false"
              ],
              [
                "test_classical",
                "false"
              ],
              [
                "test_if_else",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_for",
                "false"
              ],
              [
                "test_if",
                "false"
              ],
              [
                "test_do_while",
                "false"
              ],
              [
                "test_do_while_nested_for",
                "false"
              ],
              [
                "test_classical",
                "false"
              ],
              [
                "test_if_else",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_for",
                []
              ],
              [
                "test_if",
                []
              ],
              [
                "test_do_while",
                []
              ],
              [
                "test_do_while_nested_for",
                []
              ],
              [
                "test_classical",
                []
              ],
              [
                "test_if_else",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_for",
                "false"
              ],
              [
                "test_if",
                "false"
              ],
              [
                "test_do_while",
                "false"
              ],
              [
                "test_do_while_nested_for",
                "false"
              ],
              [
                "test_classical",
                "false"
              ],
              [
                "test_if_else",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_for",
                "false"
              ],
              [
                "test_if",
                "false"
              ],
              [
                "test_do_while",
                "false"
              ],
              [
                "test_do_while_nested_for",
                "false"
              ],
              [
                "test_classical",
                "false"
              ],
              [
                "test_if_else",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_for",
                  "0"
                ],
                [
                  "test_if",
                  "0"
                ],
                [
                  "test_do_while",
                  "0"
                ],
                [
                  "test_do_while_nested_for",
                  "0"
                ],
                [
                  "test_classical",
                  "0"
                ],
                [
                  "test_if_else",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_for",
                  "0"
                ],
                [
                  "test_if",
                  "0"
                ],
                [
                  "test_do_while",
                  "0"
                ],
                [
                  "test_do_while_nested_for",
                  "0"
                ],
                [
                  "test_classical",
                  "0"
                ],
                [
                  "test_if_else",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_for",
                "false"
              ],
              [
                "test_if",
                "false"
              ],
              [
                "test_do_while",
                "false"
              ],
              [
                "test_do_while_nested_for",
                "false"
              ],
              [
                "test_classical",
                "false"
              ],
              [
                "test_if_else",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_for",
                "false"
              ],
              [
                "test_if",
                "false"
              ],
              [
                "test_do_while",
                "false"
              ],
              [
                "test_do_while_nested_for",
                "false"
              ],
              [
                "test_classical",
                "false"
              ],
              [
                "test_if_else",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_for",
                "0"
              ],
              [
                "test_if",
                "0"
              ],
              [
                "test_do_while",
                "0"
              ],
              [
                "test_do_while_nested_for",
                "0"
              ],
              [
                "test_classical",
                "0"
              ],
              [
                "test_if_else",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": true,
            "detail": [
              [
                "test_for",
                [
                  "p",
                  "rs2",
                  "rs1",
                  "rd",
                  "sweep_points",
                  "num_qubits",
                  "num_cregs",
                  "k1",
                  "k2",
                  "config_fn",
                  "QISA_fn",
                  "platform"
                ]
              ],
              [
                "test_if",
                [
                  "p",
                  "rs2",
                  "rs1",
                  "rd",
                  "sweep_points",
                  "num_qubits",
                  "num_cregs",
                  "k1",
                  "k2",
                  "config_fn",
                  "QISA_fn",
                  "platform"
                ]
              ],
              [
                "test_do_while",
                [
                  "p",
                  "rs2",
                  "rs1",
                  "rd",
                  "sweep_points",
                  "num_qubits",
                  "num_cregs",
                  "k1",
                  "k2",
                  "config_fn",
                  "QISA_fn",
                  "platform"
                ]
              ],
              [
                "test_do_while_nested_for",
                [
                  "sweep_points",
                  "k1",
                  "k2",
                  "config_fn",
                  "platform",
                  "p",
                  "rs2",
                  "rs1",
                  "rd",
                  "num_qubits",
                  "num_cregs",
                  "sp2",
                  "sp1",
                  "QISA_fn"
                ]
              ],
              [
                "test_classical",
                [
                  "p",
                  "rs2",
                  "rs1",
                  "rd",
                  "sweep_points",
                  "num_qubits",
                  "num_cregs",
                  "k1",
                  "config_fn",
                  "QISA_fn",
                  "platform"
                ]
              ],
              [
                "test_if_else",
                [
                  "p",
                  "rs2",
                  "rs1",
                  "rd",
                  "sweep_points",
                  "num_qubits",
                  "num_cregs",
                  "k1",
                  "k2",
                  "config_fn",
                  "QISA_fn",
                  "platform"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_for",
                []
              ],
              [
                "test_if",
                []
              ],
              [
                "test_do_while",
                []
              ],
              [
                "test_do_while_nested_for",
                []
              ],
              [
                "test_classical",
                []
              ],
              [
                "test_if_else",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.938984879554125,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_if_else",
                  "test_do_while",
                  0.9654276547794437
                ],
                [
                  "test_if_else",
                  "test_for",
                  0.9644509897505358
                ],
                [
                  "test_do_while",
                  "test_do_while_nested_for",
                  0.9623102669778212
                ],
                [
                  "test_if",
                  "test_for",
                  0.9847467381968016
                ],
                [
                  "test_if",
                  "test_do_while",
                  0.9822079605893068
                ],
                [
                  "test_classical",
                  "test_do_while_nested_for",
                  0.8463504878388056
                ],
                [
                  "test_for",
                  "test_do_while",
                  0.9794019403833849
                ],
                [
                  "test_classical",
                  "test_if_else",
                  0.8967378345639858
                ],
                [
                  "test_classical",
                  "test_if",
                  0.904960806294092
                ],
                [
                  "test_if",
                  "test_if_else",
                  0.9828304939637299
                ],
                [
                  "test_if_else",
                  "test_do_while_nested_for",
                  0.9383050836794389
                ],
                [
                  "test_classical",
                  "test_do_while",
                  0.888318896788037
                ],
                [
                  "test_classical",
                  "test_for",
                  0.8793980786798294
                ],
                [
                  "test_if",
                  "test_do_while_nested_for",
                  0.9527654134444905
                ],
                [
                  "test_for",
                  "test_do_while_nested_for",
                  0.9565605473821721
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_for",
                "false"
              ],
              [
                "test_if",
                "false"
              ],
              [
                "test_do_while",
                "false"
              ],
              [
                "test_do_while_nested_for",
                "false"
              ],
              [
                "test_classical",
                "false"
              ],
              [
                "test_if_else",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      }
    ]
  },
  {
    "name": "tests_\u0026_test_Kernel.py",
    "testCases": [
      {
        "name": "Test_kernel",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_kernel_name",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_duplicate_kernel_name",
                  "[]"
                ],
                [
                  "test_simple_kernel",
                  "[]"
                ],
                [
                  "test_multi_kernel",
                  "[]"
                ],
                [
                  "test_allowed_operations",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_kernel_qubit_count",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_kernel_creg_count",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_kernel_name",
                  "[]"
                ],
                [
                  "test_duplicate_kernel_name",
                  "[]"
                ],
                [
                  "test_simple_kernel",
                  "[]"
                ],
                [
                  "test_multi_kernel",
                  "[]"
                ],
                [
                  "test_allowed_operations",
                  "[]"
                ],
                [
                  "test_kernel_qubit_count",
                  "[]"
                ],
                [
                  "test_kernel_creg_count",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_kernel_name",
                  "false"
                ],
                [
                  "test_duplicate_kernel_name",
                  "false"
                ],
                [
                  "test_simple_kernel",
                  "false"
                ],
                [
                  "test_multi_kernel",
                  "false"
                ],
                [
                  "test_allowed_operations",
                  "false"
                ],
                [
                  "test_kernel_qubit_count",
                  "false"
                ],
                [
                  "test_kernel_creg_count",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_kernel_name",
                  "false"
                ],
                [
                  "test_duplicate_kernel_name",
                  "false"
                ],
                [
                  "test_simple_kernel",
                  "false"
                ],
                [
                  "test_multi_kernel",
                  "false"
                ],
                [
                  "test_allowed_operations",
                  "false"
                ],
                [
                  "test_kernel_qubit_count",
                  "false"
                ],
                [
                  "test_kernel_creg_count",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_kernel_name",
                  "false"
                ],
                [
                  "test_duplicate_kernel_name",
                  "false"
                ],
                [
                  "test_simple_kernel",
                  "false"
                ],
                [
                  "test_multi_kernel",
                  "false"
                ],
                [
                  "test_allowed_operations",
                  "false"
                ],
                [
                  "test_kernel_qubit_count",
                  "false"
                ],
                [
                  "test_kernel_creg_count",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_kernel_name",
                  "false"
                ],
                [
                  "test_duplicate_kernel_name",
                  "false"
                ],
                [
                  "test_simple_kernel",
                  "false"
                ],
                [
                  "test_multi_kernel",
                  "false"
                ],
                [
                  "test_allowed_operations",
                  "false"
                ],
                [
                  "test_kernel_qubit_count",
                  "false"
                ],
                [
                  "test_kernel_creg_count",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_kernel_name",
                "false"
              ],
              [
                "test_duplicate_kernel_name",
                "false"
              ],
              [
                "test_simple_kernel",
                "false"
              ],
              [
                "test_multi_kernel",
                "false"
              ],
              [
                "test_allowed_operations",
                "false"
              ],
              [
                "test_kernel_qubit_count",
                "false"
              ],
              [
                "test_kernel_creg_count",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_kernel_name",
                "false"
              ],
              [
                "test_duplicate_kernel_name",
                "true"
              ],
              [
                "test_simple_kernel",
                "false"
              ],
              [
                "test_multi_kernel",
                "false"
              ],
              [
                "test_allowed_operations",
                "false"
              ],
              [
                "test_kernel_qubit_count",
                "false"
              ],
              [
                "test_kernel_creg_count",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_kernel_name",
                []
              ],
              [
                "test_duplicate_kernel_name",
                []
              ],
              [
                "test_simple_kernel",
                []
              ],
              [
                "test_multi_kernel",
                []
              ],
              [
                "test_allowed_operations",
                []
              ],
              [
                "test_kernel_qubit_count",
                []
              ],
              [
                "test_kernel_creg_count",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_kernel_name",
                "false"
              ],
              [
                "test_duplicate_kernel_name",
                "false"
              ],
              [
                "test_simple_kernel",
                "false"
              ],
              [
                "test_multi_kernel",
                "false"
              ],
              [
                "test_allowed_operations",
                "false"
              ],
              [
                "test_kernel_qubit_count",
                "false"
              ],
              [
                "test_kernel_creg_count",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_kernel_name",
                "false"
              ],
              [
                "test_duplicate_kernel_name",
                "false"
              ],
              [
                "test_simple_kernel",
                "false"
              ],
              [
                "test_multi_kernel",
                "false"
              ],
              [
                "test_allowed_operations",
                "false"
              ],
              [
                "test_kernel_qubit_count",
                "false"
              ],
              [
                "test_kernel_creg_count",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_kernel_name",
                  "0"
                ],
                [
                  "test_duplicate_kernel_name",
                  "0"
                ],
                [
                  "test_simple_kernel",
                  "0"
                ],
                [
                  "test_multi_kernel",
                  "0"
                ],
                [
                  "test_allowed_operations",
                  "0"
                ],
                [
                  "test_kernel_qubit_count",
                  "0"
                ],
                [
                  "test_kernel_creg_count",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_kernel_name",
                  "0"
                ],
                [
                  "test_duplicate_kernel_name",
                  "0"
                ],
                [
                  "test_simple_kernel",
                  "0"
                ],
                [
                  "test_multi_kernel",
                  "0"
                ],
                [
                  "test_allowed_operations",
                  "0"
                ],
                [
                  "test_kernel_qubit_count",
                  "0"
                ],
                [
                  "test_kernel_creg_count",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_kernel_name",
                "false"
              ],
              [
                "test_duplicate_kernel_name",
                "false"
              ],
              [
                "test_simple_kernel",
                "false"
              ],
              [
                "test_multi_kernel",
                "false"
              ],
              [
                "test_allowed_operations",
                "false"
              ],
              [
                "test_kernel_qubit_count",
                "false"
              ],
              [
                "test_kernel_creg_count",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_kernel_name",
                "false"
              ],
              [
                "test_duplicate_kernel_name",
                "false"
              ],
              [
                "test_simple_kernel",
                "false"
              ],
              [
                "test_multi_kernel",
                "false"
              ],
              [
                "test_allowed_operations",
                "false"
              ],
              [
                "test_kernel_qubit_count",
                "false"
              ],
              [
                "test_kernel_creg_count",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_kernel_name",
                "1"
              ],
              [
                "test_duplicate_kernel_name",
                "0"
              ],
              [
                "test_simple_kernel",
                "0"
              ],
              [
                "test_multi_kernel",
                "0"
              ],
              [
                "test_allowed_operations",
                "1"
              ],
              [
                "test_kernel_qubit_count",
                "1"
              ],
              [
                "test_kernel_creg_count",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_kernel_name",
                [
                  "nqubits",
                  "name",
                  "k"
                ]
              ],
              [
                "test_duplicate_kernel_name",
                [
                  "p",
                  "k1",
                  "nqubits",
                  "k2",
                  "k3"
                ]
              ],
              [
                "test_simple_kernel",
                [
                  "nqubits",
                  "k"
                ]
              ],
              [
                "test_multi_kernel",
                [
                  "p",
                  "sweep_points",
                  "k1",
                  "nqubits",
                  "k2"
                ]
              ],
              [
                "test_allowed_operations",
                [
                  "operations",
                  "nqubits",
                  "k"
                ]
              ],
              [
                "test_kernel_qubit_count",
                [
                  "nqubits",
                  "name",
                  "k"
                ]
              ],
              [
                "test_kernel_creg_count",
                [
                  "ncreg",
                  "nqubits",
                  "name",
                  "k"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_kernel_name",
                []
              ],
              [
                "test_duplicate_kernel_name",
                []
              ],
              [
                "test_simple_kernel",
                []
              ],
              [
                "test_multi_kernel",
                []
              ],
              [
                "test_allowed_operations",
                []
              ],
              [
                "test_kernel_qubit_count",
                []
              ],
              [
                "test_kernel_creg_count",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.47869309732800003,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_kernel_creg_count",
                  "test_simple_kernel",
                  0.3794733192202055
                ],
                [
                  "test_kernel_creg_count",
                  "test_multi_kernel",
                  0.3694655760669899
                ],
                [
                  "test_kernel_name",
                  "test_allowed_operations",
                  0.39312157973236495
                ],
                [
                  "test_kernel_name",
                  "test_multi_kernel",
                  0.3899745221357994
                ],
                [
                  "test_multi_kernel",
                  "test_duplicate_kernel_name",
                  0.5969103338288516
                ],
                [
                  "test_allowed_operations",
                  "test_multi_kernel",
                  0.272390542745098
                ],
                [
                  "test_kernel_qubit_count",
                  "test_multi_kernel",
                  0.33127976351534916
                ],
                [
                  "test_kernel_qubit_count",
                  "test_duplicate_kernel_name",
                  0.5366563145999494
                ],
                [
                  "test_kernel_name",
                  "test_duplicate_kernel_name",
                  0.5916990439578973
                ],
                [
                  "test_kernel_qubit_count",
                  "test_simple_kernel",
                  0.26666666666666666
                ],
                [
                  "test_kernel_creg_count",
                  "test_allowed_operations",
                  0.401677156202747
                ],
                [
                  "test_allowed_operations",
                  "test_simple_kernel",
                  0.43046164754030336
                ],
                [
                  "test_kernel_name",
                  "test_kernel_qubit_count",
                  0.7799204203436179
                ],
                [
                  "test_kernel_qubit_count",
                  "test_kernel_creg_count",
                  0.7273238618387272
                ],
                [
                  "test_simple_kernel",
                  "test_multi_kernel",
                  0.7079133041786331
                ],
                [
                  "test_simple_kernel",
                  "test_duplicate_kernel_name",
                  0.4658474953124561
                ],
                [
                  "test_kernel_name",
                  "test_kernel_creg_count",
                  0.7633862853691145
                ],
                [
                  "test_kernel_qubit_count",
                  "test_allowed_operations",
                  0.31755367441497784
                ],
                [
                  "test_kernel_creg_count",
                  "test_duplicate_kernel_name",
                  0.503813581595415
                ],
                [
                  "test_allowed_operations",
                  "test_duplicate_kernel_name",
                  0.4556292782687327
                ],
                [
                  "test_kernel_name",
                  "test_simple_kernel",
                  0.3713906763541037
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_kernel_name",
                "false"
              ],
              [
                "test_duplicate_kernel_name",
                "false"
              ],
              [
                "test_simple_kernel",
                "false"
              ],
              [
                "test_multi_kernel",
                "false"
              ],
              [
                "test_allowed_operations",
                "false"
              ],
              [
                "test_kernel_qubit_count",
                "false"
              ],
              [
                "test_kernel_creg_count",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      }
    ]
  },
  {
    "name": "tests_\u0026_test_mapper.py",
    "testCases": [
      {
        "name": "Test_mapper",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_mapper_maxcut",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_mapper_allDopt",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_mapper_allD",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_mapper_oneD4",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_mapper_allIP",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_mapper_lingling5",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_mapper_allNN",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_mapper_oneNN",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_mapper_oneD2",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_mapper_lingling7",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_mapper_maxcut",
                  "[]"
                ],
                [
                  "test_mapper_allDopt",
                  "[]"
                ],
                [
                  "test_mapper_allD",
                  "[]"
                ],
                [
                  "test_mapper_oneD4",
                  "[]"
                ],
                [
                  "test_mapper_allIP",
                  "[]"
                ],
                [
                  "test_mapper_lingling5",
                  "[]"
                ],
                [
                  "test_mapper_allNN",
                  "[]"
                ],
                [
                  "test_mapper_oneNN",
                  "[]"
                ],
                [
                  "test_mapper_oneD2",
                  "[]"
                ],
                [
                  "test_mapper_lingling7",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_mapper_maxcut",
                  "false"
                ],
                [
                  "test_mapper_allDopt",
                  "true"
                ],
                [
                  "test_mapper_allD",
                  "true"
                ],
                [
                  "test_mapper_oneD4",
                  "false"
                ],
                [
                  "test_mapper_allIP",
                  "true"
                ],
                [
                  "test_mapper_lingling5",
                  "false"
                ],
                [
                  "test_mapper_allNN",
                  "true"
                ],
                [
                  "test_mapper_oneNN",
                  "false"
                ],
                [
                  "test_mapper_oneD2",
                  "false"
                ],
                [
                  "test_mapper_lingling7",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_mapper_maxcut",
                  "false"
                ],
                [
                  "test_mapper_allDopt",
                  "false"
                ],
                [
                  "test_mapper_allD",
                  "false"
                ],
                [
                  "test_mapper_oneD4",
                  "false"
                ],
                [
                  "test_mapper_allIP",
                  "false"
                ],
                [
                  "test_mapper_lingling5",
                  "false"
                ],
                [
                  "test_mapper_allNN",
                  "false"
                ],
                [
                  "test_mapper_oneNN",
                  "false"
                ],
                [
                  "test_mapper_oneD2",
                  "false"
                ],
                [
                  "test_mapper_lingling7",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_mapper_maxcut",
                  "false"
                ],
                [
                  "test_mapper_allDopt",
                  "false"
                ],
                [
                  "test_mapper_allD",
                  "false"
                ],
                [
                  "test_mapper_oneD4",
                  "false"
                ],
                [
                  "test_mapper_allIP",
                  "false"
                ],
                [
                  "test_mapper_lingling5",
                  "false"
                ],
                [
                  "test_mapper_allNN",
                  "false"
                ],
                [
                  "test_mapper_oneNN",
                  "false"
                ],
                [
                  "test_mapper_oneD2",
                  "false"
                ],
                [
                  "test_mapper_lingling7",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_mapper_maxcut",
                  "false"
                ],
                [
                  "test_mapper_allDopt",
                  "false"
                ],
                [
                  "test_mapper_allD",
                  "false"
                ],
                [
                  "test_mapper_oneD4",
                  "false"
                ],
                [
                  "test_mapper_allIP",
                  "false"
                ],
                [
                  "test_mapper_lingling5",
                  "false"
                ],
                [
                  "test_mapper_allNN",
                  "false"
                ],
                [
                  "test_mapper_oneNN",
                  "false"
                ],
                [
                  "test_mapper_oneD2",
                  "false"
                ],
                [
                  "test_mapper_lingling7",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_mapper_maxcut",
                "false"
              ],
              [
                "test_mapper_allDopt",
                "false"
              ],
              [
                "test_mapper_allD",
                "false"
              ],
              [
                "test_mapper_oneD4",
                "false"
              ],
              [
                "test_mapper_allIP",
                "false"
              ],
              [
                "test_mapper_lingling5",
                "false"
              ],
              [
                "test_mapper_allNN",
                "false"
              ],
              [
                "test_mapper_oneNN",
                "false"
              ],
              [
                "test_mapper_oneD2",
                "false"
              ],
              [
                "test_mapper_lingling7",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_mapper_maxcut",
                "false"
              ],
              [
                "test_mapper_allDopt",
                "false"
              ],
              [
                "test_mapper_allD",
                "false"
              ],
              [
                "test_mapper_oneD4",
                "false"
              ],
              [
                "test_mapper_allIP",
                "false"
              ],
              [
                "test_mapper_lingling5",
                "false"
              ],
              [
                "test_mapper_allNN",
                "false"
              ],
              [
                "test_mapper_oneNN",
                "false"
              ],
              [
                "test_mapper_oneD2",
                "false"
              ],
              [
                "test_mapper_lingling7",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_mapper_maxcut",
                []
              ],
              [
                "test_mapper_allDopt",
                []
              ],
              [
                "test_mapper_allD",
                []
              ],
              [
                "test_mapper_oneD4",
                []
              ],
              [
                "test_mapper_allIP",
                []
              ],
              [
                "test_mapper_lingling5",
                []
              ],
              [
                "test_mapper_allNN",
                []
              ],
              [
                "test_mapper_oneNN",
                []
              ],
              [
                "test_mapper_oneD2",
                []
              ],
              [
                "test_mapper_lingling7",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_mapper_maxcut",
                "false"
              ],
              [
                "test_mapper_allDopt",
                "false"
              ],
              [
                "test_mapper_allD",
                "false"
              ],
              [
                "test_mapper_oneD4",
                "false"
              ],
              [
                "test_mapper_allIP",
                "false"
              ],
              [
                "test_mapper_lingling5",
                "false"
              ],
              [
                "test_mapper_allNN",
                "false"
              ],
              [
                "test_mapper_oneNN",
                "false"
              ],
              [
                "test_mapper_oneD2",
                "false"
              ],
              [
                "test_mapper_lingling7",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_mapper_maxcut",
                "false"
              ],
              [
                "test_mapper_allDopt",
                "false"
              ],
              [
                "test_mapper_allD",
                "false"
              ],
              [
                "test_mapper_oneD4",
                "false"
              ],
              [
                "test_mapper_allIP",
                "false"
              ],
              [
                "test_mapper_lingling5",
                "false"
              ],
              [
                "test_mapper_allNN",
                "false"
              ],
              [
                "test_mapper_oneNN",
                "false"
              ],
              [
                "test_mapper_oneD2",
                "false"
              ],
              [
                "test_mapper_lingling7",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_mapper_maxcut",
                  "0"
                ],
                [
                  "test_mapper_allDopt",
                  "0"
                ],
                [
                  "test_mapper_allD",
                  "0"
                ],
                [
                  "test_mapper_oneD4",
                  "0"
                ],
                [
                  "test_mapper_allIP",
                  "0"
                ],
                [
                  "test_mapper_lingling5",
                  "0"
                ],
                [
                  "test_mapper_allNN",
                  "0"
                ],
                [
                  "test_mapper_oneNN",
                  "0"
                ],
                [
                  "test_mapper_oneD2",
                  "0"
                ],
                [
                  "test_mapper_lingling7",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_mapper_maxcut",
                  "0"
                ],
                [
                  "test_mapper_allDopt",
                  "0"
                ],
                [
                  "test_mapper_allD",
                  "0"
                ],
                [
                  "test_mapper_oneD4",
                  "0"
                ],
                [
                  "test_mapper_allIP",
                  "0"
                ],
                [
                  "test_mapper_lingling5",
                  "0"
                ],
                [
                  "test_mapper_allNN",
                  "0"
                ],
                [
                  "test_mapper_oneNN",
                  "0"
                ],
                [
                  "test_mapper_oneD2",
                  "0"
                ],
                [
                  "test_mapper_lingling7",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_mapper_maxcut",
                "false"
              ],
              [
                "test_mapper_allDopt",
                "false"
              ],
              [
                "test_mapper_allD",
                "false"
              ],
              [
                "test_mapper_oneD4",
                "false"
              ],
              [
                "test_mapper_allIP",
                "false"
              ],
              [
                "test_mapper_lingling5",
                "false"
              ],
              [
                "test_mapper_allNN",
                "false"
              ],
              [
                "test_mapper_oneNN",
                "false"
              ],
              [
                "test_mapper_oneD2",
                "false"
              ],
              [
                "test_mapper_lingling7",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_mapper_maxcut",
                "false"
              ],
              [
                "test_mapper_allDopt",
                "false"
              ],
              [
                "test_mapper_allD",
                "false"
              ],
              [
                "test_mapper_oneD4",
                "false"
              ],
              [
                "test_mapper_allIP",
                "false"
              ],
              [
                "test_mapper_lingling5",
                "false"
              ],
              [
                "test_mapper_allNN",
                "false"
              ],
              [
                "test_mapper_oneNN",
                "false"
              ],
              [
                "test_mapper_oneD2",
                "false"
              ],
              [
                "test_mapper_lingling7",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_mapper_maxcut",
                "1"
              ],
              [
                "test_mapper_allDopt",
                "1"
              ],
              [
                "test_mapper_allD",
                "1"
              ],
              [
                "test_mapper_oneD4",
                "1"
              ],
              [
                "test_mapper_allIP",
                "1"
              ],
              [
                "test_mapper_lingling5",
                "1"
              ],
              [
                "test_mapper_allNN",
                "1"
              ],
              [
                "test_mapper_oneNN",
                "1"
              ],
              [
                "test_mapper_oneD2",
                "1"
              ],
              [
                "test_mapper_lingling7",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_mapper_maxcut",
                [
                  "starmon",
                  "num_qubits",
                  "v",
                  "kernel_name",
                  "QISA_fn",
                  "prog_name",
                  "k",
                  "config",
                  "prog",
                  "GOLD_fn"
                ]
              ],
              [
                "test_mapper_allDopt",
                [
                  "starmon",
                  "num_qubits",
                  "v",
                  "kernel_name",
                  "QISA_fn",
                  "prog_name",
                  "k",
                  "config",
                  "prog",
                  "GOLD_fn"
                ]
              ],
              [
                "test_mapper_allD",
                [
                  "starmon",
                  "num_qubits",
                  "v",
                  "kernel_name",
                  "QISA_fn",
                  "prog_name",
                  "k",
                  "config",
                  "prog",
                  "GOLD_fn"
                ]
              ],
              [
                "test_mapper_oneD4",
                [
                  "starmon",
                  "num_qubits",
                  "v",
                  "kernel_name",
                  "QISA_fn",
                  "prog_name",
                  "k",
                  "config",
                  "prog",
                  "GOLD_fn"
                ]
              ],
              [
                "test_mapper_allIP",
                [
                  "starmon",
                  "num_qubits",
                  "v",
                  "kernel_name",
                  "QISA_fn",
                  "prog_name",
                  "k",
                  "config",
                  "prog",
                  "GOLD_fn"
                ]
              ],
              [
                "test_mapper_lingling5",
                [
                  "starmon",
                  "num_qubits",
                  "v",
                  "kernel_name",
                  "QISA_fn",
                  "prog_name",
                  "k",
                  "config",
                  "prog",
                  "GOLD_fn"
                ]
              ],
              [
                "test_mapper_allNN",
                [
                  "starmon",
                  "num_qubits",
                  "v",
                  "kernel_name",
                  "QISA_fn",
                  "prog_name",
                  "k",
                  "config",
                  "prog",
                  "GOLD_fn"
                ]
              ],
              [
                "test_mapper_oneNN",
                [
                  "starmon",
                  "num_qubits",
                  "v",
                  "kernel_name",
                  "QISA_fn",
                  "prog_name",
                  "k",
                  "config",
                  "prog",
                  "GOLD_fn"
                ]
              ],
              [
                "test_mapper_oneD2",
                [
                  "starmon",
                  "num_qubits",
                  "v",
                  "kernel_name",
                  "QISA_fn",
                  "prog_name",
                  "k",
                  "config",
                  "prog",
                  "GOLD_fn"
                ]
              ],
              [
                "test_mapper_lingling7",
                [
                  "starmon",
                  "num_qubits",
                  "v",
                  "kernel_name",
                  "QISA_fn",
                  "prog_name",
                  "k",
                  "config",
                  "prog",
                  "GOLD_fn"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_mapper_maxcut",
                []
              ],
              [
                "test_mapper_allDopt",
                []
              ],
              [
                "test_mapper_allD",
                []
              ],
              [
                "test_mapper_oneD4",
                []
              ],
              [
                "test_mapper_allIP",
                []
              ],
              [
                "test_mapper_lingling5",
                []
              ],
              [
                "test_mapper_allNN",
                []
              ],
              [
                "test_mapper_oneNN",
                []
              ],
              [
                "test_mapper_oneD2",
                []
              ],
              [
                "test_mapper_lingling7",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5607579230162028,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_mapper_maxcut",
                  "test_mapper_allDopt",
                  0.4902128720592235
                ],
                [
                  "test_mapper_allNN",
                  "test_mapper_oneD4",
                  0.7587225199190972
                ],
                [
                  "test_mapper_allDopt",
                  "test_mapper_allIP",
                  0.6698628751509987
                ],
                [
                  "test_mapper_maxcut",
                  "test_mapper_allIP",
                  0.6476571234914797
                ],
                [
                  "test_mapper_allNN",
                  "test_mapper_lingling5",
                  0.31660274263670235
                ],
                [
                  "test_mapper_oneNN",
                  "test_mapper_oneD2",
                  0.8636210866200295
                ],
                [
                  "test_mapper_allNN",
                  "test_mapper_lingling7",
                  0.32824142950157364
                ],
                [
                  "test_mapper_oneD2",
                  "test_mapper_allIP",
                  0.8336111297393042
                ],
                [
                  "test_mapper_allIP",
                  "test_mapper_lingling7",
                  0.3982294149864613
                ],
                [
                  "test_mapper_maxcut",
                  "test_mapper_oneD2",
                  0.7107365678506791
                ],
                [
                  "test_mapper_oneNN",
                  "test_mapper_allDopt",
                  0.34031444761899904
                ],
                [
                  "test_mapper_oneD2",
                  "test_mapper_allDopt",
                  0.34512627945184843
                ],
                [
                  "test_mapper_allD",
                  "test_mapper_lingling5",
                  0.08370231928094411
                ],
                [
                  "test_mapper_allNN",
                  "test_mapper_allDopt",
                  0.6705345386684669
                ],
                [
                  "test_mapper_maxcut",
                  "test_mapper_oneD4",
                  0.7130272472031954
                ],
                [
                  "test_mapper_allNN",
                  "test_mapper_allD",
                  0.590603121405724
                ],
                [
                  "test_mapper_allDopt",
                  "test_mapper_lingling7",
                  0.6821785974246173
                ],
                [
                  "test_mapper_allDopt",
                  "test_mapper_lingling5",
                  0.6744111422472328
                ],
                [
                  "test_mapper_oneNN",
                  "test_mapper_allD",
                  0.7975186530971243
                ],
                [
                  "test_mapper_allNN",
                  "test_mapper_allIP",
                  0.7961308512282558
                ],
                [
                  "test_mapper_oneD2",
                  "test_mapper_oneD4",
                  0.9949946056814757
                ],
                [
                  "test_mapper_oneD4",
                  "test_mapper_allD",
                  0.7572121784594233
                ],
                [
                  "test_mapper_oneD2",
                  "test_mapper_lingling5",
                  0.2076077286780053
                ],
                [
                  "test_mapper_oneD4",
                  "test_mapper_allIP",
                  0.8348337339320852
                ],
                [
                  "test_mapper_allD",
                  "test_mapper_lingling7",
                  0.08521079491042023
                ],
                [
                  "test_mapper_allIP",
                  "test_mapper_lingling5",
                  0.3948330229957077
                ],
                [
                  "test_mapper_oneD4",
                  "test_mapper_allDopt",
                  0.34513892266463264
                ],
                [
                  "test_mapper_lingling5",
                  "test_mapper_lingling7",
                  0.9942104898829643
                ],
                [
                  "test_mapper_oneNN",
                  "test_mapper_lingling5",
                  0.19371935512543564
                ],
                [
                  "test_mapper_oneD4",
                  "test_mapper_lingling7",
                  0.2028159932560453
                ],
                [
                  "test_mapper_oneNN",
                  "test_mapper_lingling7",
                  0.19724745805202618
                ],
                [
                  "test_mapper_maxcut",
                  "test_mapper_allD",
                  0.5094763829516039
                ],
                [
                  "test_mapper_oneNN",
                  "test_mapper_oneD4",
                  0.8659039206847275
                ],
                [
                  "test_mapper_oneNN",
                  "test_mapper_allNN",
                  0.6958862613989032
                ],
                [
                  "test_mapper_allNN",
                  "test_mapper_oneD2",
                  0.7616577002768615
                ],
                [
                  "test_mapper_oneD2",
                  "test_mapper_allD",
                  0.7586541303743024
                ],
                [
                  "test_mapper_oneD4",
                  "test_mapper_lingling5",
                  0.20846664624143466
                ],
                [
                  "test_mapper_maxcut",
                  "test_mapper_allNN",
                  0.7843257696507135
                ],
                [
                  "test_mapper_oneNN",
                  "test_mapper_allIP",
                  0.8119081916185842
                ],
                [
                  "test_mapper_maxcut",
                  "test_mapper_lingling5",
                  0.42945219952300373
                ],
                [
                  "test_mapper_maxcut",
                  "test_mapper_oneNN",
                  0.7389568547762537
                ],
                [
                  "test_mapper_maxcut",
                  "test_mapper_lingling7",
                  0.4377364223354394
                ],
                [
                  "test_mapper_allD",
                  "test_mapper_allDopt",
                  0.29404757231812484
                ],
                [
                  "test_mapper_oneD2",
                  "test_mapper_lingling7",
                  0.2020034304999885
                ],
                [
                  "test_mapper_allD",
                  "test_mapper_allIP",
                  0.816761809859002
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_mapper_maxcut",
                "false"
              ],
              [
                "test_mapper_allDopt",
                "false"
              ],
              [
                "test_mapper_allD",
                "false"
              ],
              [
                "test_mapper_oneD4",
                "false"
              ],
              [
                "test_mapper_allIP",
                "false"
              ],
              [
                "test_mapper_lingling5",
                "false"
              ],
              [
                "test_mapper_allNN",
                "false"
              ],
              [
                "test_mapper_oneNN",
                "false"
              ],
              [
                "test_mapper_oneD2",
                "false"
              ],
              [
                "test_mapper_lingling7",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 10
      }
    ]
  },
  {
    "name": "tests_\u0026_test_qubits.py",
    "testCases": [
      {
        "name": "Test_qubits",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_3_qubit",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_2_qubit",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_1_qubit",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_3_qubit",
                  "[]"
                ],
                [
                  "test_2_qubit",
                  "[]"
                ],
                [
                  "test_1_qubit",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_3_qubit",
                  "false"
                ],
                [
                  "test_2_qubit",
                  "false"
                ],
                [
                  "test_1_qubit",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_3_qubit",
                  "false"
                ],
                [
                  "test_2_qubit",
                  "false"
                ],
                [
                  "test_1_qubit",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_3_qubit",
                  "false"
                ],
                [
                  "test_2_qubit",
                  "false"
                ],
                [
                  "test_1_qubit",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_3_qubit",
                  "false"
                ],
                [
                  "test_2_qubit",
                  "false"
                ],
                [
                  "test_1_qubit",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_3_qubit",
                "false"
              ],
              [
                "test_2_qubit",
                "false"
              ],
              [
                "test_1_qubit",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_3_qubit",
                "false"
              ],
              [
                "test_2_qubit",
                "false"
              ],
              [
                "test_1_qubit",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_3_qubit",
                []
              ],
              [
                "test_2_qubit",
                []
              ],
              [
                "test_1_qubit",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_3_qubit",
                "false"
              ],
              [
                "test_2_qubit",
                "false"
              ],
              [
                "test_1_qubit",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_3_qubit",
                "false"
              ],
              [
                "test_2_qubit",
                "false"
              ],
              [
                "test_1_qubit",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_3_qubit",
                  "0"
                ],
                [
                  "test_2_qubit",
                  "0"
                ],
                [
                  "test_1_qubit",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_3_qubit",
                  "0"
                ],
                [
                  "test_2_qubit",
                  "0"
                ],
                [
                  "test_1_qubit",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_3_qubit",
                "false"
              ],
              [
                "test_2_qubit",
                "false"
              ],
              [
                "test_1_qubit",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_3_qubit",
                "false"
              ],
              [
                "test_2_qubit",
                "false"
              ],
              [
                "test_1_qubit",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_3_qubit",
                "1"
              ],
              [
                "test_2_qubit",
                "1"
              ],
              [
                "test_1_qubit",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_3_qubit",
                [
                  "p",
                  "qasm_fn",
                  "sweep_points",
                  "nqubits",
                  "k",
                  "gold_fn"
                ]
              ],
              [
                "test_2_qubit",
                [
                  "p",
                  "qasm_fn",
                  "sweep_points",
                  "nqubits",
                  "k",
                  "gold_fn"
                ]
              ],
              [
                "test_1_qubit",
                [
                  "p",
                  "qasm_fn",
                  "sweep_points",
                  "nqubits",
                  "k",
                  "gold_fn"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_3_qubit",
                []
              ],
              [
                "test_2_qubit",
                []
              ],
              [
                "test_1_qubit",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9694277252413102,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_1_qubit",
                  "test_3_qubit",
                  0.9582186084796825
                ],
                [
                  "test_2_qubit",
                  "test_3_qubit",
                  0.9843819771659994
                ],
                [
                  "test_1_qubit",
                  "test_2_qubit",
                  0.9656825900782486
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_3_qubit",
                "false"
              ],
              [
                "test_2_qubit",
                "false"
              ],
              [
                "test_1_qubit",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_cc_\u0026_test_cc.py",
    "testCases": [
      {
        "name": "Test_central_controller",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_classical",
                  "[]"
                ],
                [
                  "test_angle",
                  "[]"
                ],
                [
                  "test_qi_example",
                  "[]"
                ],
                [
                  "test_gate_decomposition_builtin_gates",
                  "[]"
                ],
                [
                  "test_qec",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_classical",
                  "[]"
                ],
                [
                  "test_angle",
                  "[]"
                ],
                [
                  "test_qi_example",
                  "[]"
                ],
                [
                  "test_gate_decomposition_builtin_gates",
                  "[]"
                ],
                [
                  "test_qec",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_classical",
                  "true"
                ],
                [
                  "test_angle",
                  "false"
                ],
                [
                  "test_qi_example",
                  "false"
                ],
                [
                  "test_gate_decomposition_builtin_gates",
                  "false"
                ],
                [
                  "test_qec",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_classical",
                  "false"
                ],
                [
                  "test_angle",
                  "false"
                ],
                [
                  "test_qi_example",
                  "false"
                ],
                [
                  "test_gate_decomposition_builtin_gates",
                  "false"
                ],
                [
                  "test_qec",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_classical",
                  "false"
                ],
                [
                  "test_angle",
                  "false"
                ],
                [
                  "test_qi_example",
                  "false"
                ],
                [
                  "test_gate_decomposition_builtin_gates",
                  "false"
                ],
                [
                  "test_qec",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_classical",
                  "false"
                ],
                [
                  "test_angle",
                  "false"
                ],
                [
                  "test_qi_example",
                  "false"
                ],
                [
                  "test_gate_decomposition_builtin_gates",
                  "false"
                ],
                [
                  "test_qec",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_classical",
                "false"
              ],
              [
                "test_angle",
                "false"
              ],
              [
                "test_qi_example",
                "false"
              ],
              [
                "test_gate_decomposition_builtin_gates",
                "false"
              ],
              [
                "test_qec",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_classical",
                "false"
              ],
              [
                "test_angle",
                "false"
              ],
              [
                "test_qi_example",
                "false"
              ],
              [
                "test_gate_decomposition_builtin_gates",
                "false"
              ],
              [
                "test_qec",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_classical",
                []
              ],
              [
                "test_angle",
                []
              ],
              [
                "test_qi_example",
                []
              ],
              [
                "test_gate_decomposition_builtin_gates",
                []
              ],
              [
                "test_qec",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": true,
            "detail": [
              [
                "test_classical",
                "false"
              ],
              [
                "test_angle",
                "false"
              ],
              [
                "test_qi_example",
                "false"
              ],
              [
                "test_gate_decomposition_builtin_gates",
                "false"
              ],
              [
                "test_qec",
                "true"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_classical",
                "false"
              ],
              [
                "test_angle",
                "false"
              ],
              [
                "test_qi_example",
                "false"
              ],
              [
                "test_gate_decomposition_builtin_gates",
                "false"
              ],
              [
                "test_qec",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_classical",
                  "0"
                ],
                [
                  "test_angle",
                  "0"
                ],
                [
                  "test_qi_example",
                  "0"
                ],
                [
                  "test_gate_decomposition_builtin_gates",
                  "0"
                ],
                [
                  "test_qec",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_classical",
                  "0"
                ],
                [
                  "test_angle",
                  "0"
                ],
                [
                  "test_qi_example",
                  "0"
                ],
                [
                  "test_gate_decomposition_builtin_gates",
                  "0"
                ],
                [
                  "test_qec",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_classical",
                "false"
              ],
              [
                "test_angle",
                "false"
              ],
              [
                "test_qi_example",
                "false"
              ],
              [
                "test_gate_decomposition_builtin_gates",
                "false"
              ],
              [
                "test_qec",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_classical",
                "false"
              ],
              [
                "test_angle",
                "false"
              ],
              [
                "test_qi_example",
                "false"
              ],
              [
                "test_gate_decomposition_builtin_gates",
                "false"
              ],
              [
                "test_qec",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_classical",
                "0"
              ],
              [
                "test_angle",
                "0"
              ],
              [
                "test_qi_example",
                "0"
              ],
              [
                "test_gate_decomposition_builtin_gates",
                "0"
              ],
              [
                "test_qec",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": true,
            "detail": [
              [
                "test_classical",
                [
                  "p",
                  "rs2",
                  "rs1",
                  "rd",
                  "k1",
                  "platform"
                ]
              ],
              [
                "test_angle",
                [
                  "p",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_qi_example",
                [
                  "p",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_gate_decomposition_builtin_gates",
                [
                  "p",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_qec",
                [
                  "rdX",
                  "rdZ",
                  "k",
                  "zE",
                  "xE",
                  "platform",
                  "p",
                  "zN",
                  "xN",
                  "x",
                  "zS",
                  "z",
                  "xS",
                  "zW",
                  "xW"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_classical",
                []
              ],
              [
                "test_angle",
                []
              ],
              [
                "test_qi_example",
                []
              ],
              [
                "test_gate_decomposition_builtin_gates",
                []
              ],
              [
                "test_qec",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6077195208143251,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_qi_example",
                  "test_gate_decomposition_builtin_gates",
                  0.9111421349174207
                ],
                [
                  "test_angle",
                  "test_gate_decomposition_builtin_gates",
                  0.7248804549213638
                ],
                [
                  "test_classical",
                  "test_qec",
                  0.4820171868883469
                ],
                [
                  "test_qec",
                  "test_angle",
                  0.5731121677370686
                ],
                [
                  "test_classical",
                  "test_qi_example",
                  0.5105358511109169
                ],
                [
                  "test_classical",
                  "test_gate_decomposition_builtin_gates",
                  0.4867404678089882
                ],
                [
                  "test_qec",
                  "test_qi_example",
                  0.5970425799099257
                ],
                [
                  "test_qec",
                  "test_gate_decomposition_builtin_gates",
                  0.5509934061743841
                ],
                [
                  "test_angle",
                  "test_qi_example",
                  0.6931805229974329
                ],
                [
                  "test_classical",
                  "test_angle",
                  0.5475504356774025
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_classical",
                "false"
              ],
              [
                "test_angle",
                "false"
              ],
              [
                "test_qi_example",
                "false"
              ],
              [
                "test_gate_decomposition_builtin_gates",
                "false"
              ],
              [
                "test_qec",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      }
    ]
  },
  {
    "name": "tests_\u0026_test_barrier.py",
    "testCases": [
      {
        "name": "Test_barrier",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_barrier",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_barrier_all_2",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_barrier_all_3",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_wait_barrier",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_barrier_all_1",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_barrier",
                  "[]"
                ],
                [
                  "test_barrier_all_2",
                  "[]"
                ],
                [
                  "test_barrier_all_3",
                  "[]"
                ],
                [
                  "test_wait_barrier",
                  "[]"
                ],
                [
                  "test_barrier_all_1",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_barrier",
                  "false"
                ],
                [
                  "test_barrier_all_2",
                  "false"
                ],
                [
                  "test_barrier_all_3",
                  "false"
                ],
                [
                  "test_wait_barrier",
                  "false"
                ],
                [
                  "test_barrier_all_1",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_barrier",
                  "false"
                ],
                [
                  "test_barrier_all_2",
                  "false"
                ],
                [
                  "test_barrier_all_3",
                  "false"
                ],
                [
                  "test_wait_barrier",
                  "false"
                ],
                [
                  "test_barrier_all_1",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_barrier",
                  "false"
                ],
                [
                  "test_barrier_all_2",
                  "false"
                ],
                [
                  "test_barrier_all_3",
                  "false"
                ],
                [
                  "test_wait_barrier",
                  "false"
                ],
                [
                  "test_barrier_all_1",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_barrier",
                  "false"
                ],
                [
                  "test_barrier_all_2",
                  "false"
                ],
                [
                  "test_barrier_all_3",
                  "false"
                ],
                [
                  "test_wait_barrier",
                  "false"
                ],
                [
                  "test_barrier_all_1",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_barrier",
                "false"
              ],
              [
                "test_barrier_all_2",
                "false"
              ],
              [
                "test_barrier_all_3",
                "false"
              ],
              [
                "test_wait_barrier",
                "false"
              ],
              [
                "test_barrier_all_1",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_barrier",
                "false"
              ],
              [
                "test_barrier_all_2",
                "false"
              ],
              [
                "test_barrier_all_3",
                "false"
              ],
              [
                "test_wait_barrier",
                "false"
              ],
              [
                "test_barrier_all_1",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_barrier",
                []
              ],
              [
                "test_barrier_all_2",
                []
              ],
              [
                "test_barrier_all_3",
                []
              ],
              [
                "test_wait_barrier",
                []
              ],
              [
                "test_barrier_all_1",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_barrier",
                "false"
              ],
              [
                "test_barrier_all_2",
                "false"
              ],
              [
                "test_barrier_all_3",
                "false"
              ],
              [
                "test_wait_barrier",
                "false"
              ],
              [
                "test_barrier_all_1",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_barrier",
                "false"
              ],
              [
                "test_barrier_all_2",
                "false"
              ],
              [
                "test_barrier_all_3",
                "false"
              ],
              [
                "test_wait_barrier",
                "false"
              ],
              [
                "test_barrier_all_1",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_barrier",
                  "0"
                ],
                [
                  "test_barrier_all_2",
                  "0"
                ],
                [
                  "test_barrier_all_3",
                  "0"
                ],
                [
                  "test_wait_barrier",
                  "0"
                ],
                [
                  "test_barrier_all_1",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_barrier",
                  "0"
                ],
                [
                  "test_barrier_all_2",
                  "0"
                ],
                [
                  "test_barrier_all_3",
                  "0"
                ],
                [
                  "test_wait_barrier",
                  "0"
                ],
                [
                  "test_barrier_all_1",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_barrier",
                "false"
              ],
              [
                "test_barrier_all_2",
                "false"
              ],
              [
                "test_barrier_all_3",
                "false"
              ],
              [
                "test_wait_barrier",
                "false"
              ],
              [
                "test_barrier_all_1",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_barrier",
                "false"
              ],
              [
                "test_barrier_all_2",
                "false"
              ],
              [
                "test_barrier_all_3",
                "false"
              ],
              [
                "test_wait_barrier",
                "false"
              ],
              [
                "test_barrier_all_1",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_barrier",
                "1"
              ],
              [
                "test_barrier_all_2",
                "1"
              ],
              [
                "test_barrier_all_3",
                "1"
              ],
              [
                "test_wait_barrier",
                "1"
              ],
              [
                "test_barrier_all_1",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_barrier",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "QISA_fn",
                  "k",
                  "gold_fn",
                  "platform"
                ]
              ],
              [
                "test_barrier_all_2",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "QASM_fn",
                  "config_fn",
                  "k",
                  "gold_fn",
                  "platform"
                ]
              ],
              [
                "test_barrier_all_3",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "QASM_fn",
                  "config_fn",
                  "k",
                  "gold_fn",
                  "platform"
                ]
              ],
              [
                "test_wait_barrier",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "QISA_fn",
                  "k",
                  "gold_fn",
                  "platform"
                ]
              ],
              [
                "test_barrier_all_1",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "QASM_fn",
                  "config_fn",
                  "k",
                  "gold_fn",
                  "platform"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_barrier",
                []
              ],
              [
                "test_barrier_all_2",
                []
              ],
              [
                "test_barrier_all_3",
                []
              ],
              [
                "test_wait_barrier",
                []
              ],
              [
                "test_barrier_all_1",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8500204338075928,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_barrier",
                  "test_barrier_all_3",
                  0.7855972310315184
                ],
                [
                  "test_wait_barrier",
                  "test_barrier_all_2",
                  0.7415362601899017
                ],
                [
                  "test_barrier",
                  "test_barrier_all_1",
                  0.7723355913304764
                ],
                [
                  "test_wait_barrier",
                  "test_barrier_all_3",
                  0.7559691197461164
                ],
                [
                  "test_barrier",
                  "test_wait_barrier",
                  0.9534849549834883
                ],
                [
                  "test_barrier_all_1",
                  "test_barrier_all_3",
                  0.9888083808321901
                ],
                [
                  "test_wait_barrier",
                  "test_barrier_all_1",
                  0.7409374283995382
                ],
                [
                  "test_barrier_all_1",
                  "test_barrier_all_2",
                  0.9965136442394817
                ],
                [
                  "test_barrier",
                  "test_barrier_all_2",
                  0.7750376483002462
                ],
                [
                  "test_barrier_all_2",
                  "test_barrier_all_3",
                  0.9899840790229703
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_barrier",
                "false"
              ],
              [
                "test_barrier_all_2",
                "false"
              ],
              [
                "test_barrier_all_3",
                "false"
              ],
              [
                "test_wait_barrier",
                "false"
              ],
              [
                "test_barrier_all_1",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      }
    ]
  },
  {
    "name": "tests_\u0026_test_options.py",
    "testCases": [
      {
        "name": "Test_options",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_get_values",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_default_scheduler",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_nok",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual, PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_all_options",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_get_values",
                  "[]"
                ],
                [
                  "test_default_scheduler",
                  "[]"
                ],
                [
                  "test_nok",
                  "[]"
                ],
                [
                  "test_set_all_options",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_get_values",
                  "false"
                ],
                [
                  "test_default_scheduler",
                  "false"
                ],
                [
                  "test_nok",
                  "false"
                ],
                [
                  "test_set_all_options",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_get_values",
                  "false"
                ],
                [
                  "test_default_scheduler",
                  "false"
                ],
                [
                  "test_nok",
                  "false"
                ],
                [
                  "test_set_all_options",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_get_values",
                  "false"
                ],
                [
                  "test_default_scheduler",
                  "false"
                ],
                [
                  "test_nok",
                  "true"
                ],
                [
                  "test_set_all_options",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_get_values",
                  "false"
                ],
                [
                  "test_default_scheduler",
                  "false"
                ],
                [
                  "test_nok",
                  "false"
                ],
                [
                  "test_set_all_options",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_values",
                "false"
              ],
              [
                "test_default_scheduler",
                "false"
              ],
              [
                "test_nok",
                "false"
              ],
              [
                "test_set_all_options",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_get_values",
                "false"
              ],
              [
                "test_default_scheduler",
                "false"
              ],
              [
                "test_nok",
                "false"
              ],
              [
                "test_set_all_options",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_get_values",
                []
              ],
              [
                "test_default_scheduler",
                []
              ],
              [
                "test_nok",
                []
              ],
              [
                "test_set_all_options",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_values",
                "false"
              ],
              [
                "test_default_scheduler",
                "false"
              ],
              [
                "test_nok",
                "false"
              ],
              [
                "test_set_all_options",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_values",
                "false"
              ],
              [
                "test_default_scheduler",
                "false"
              ],
              [
                "test_nok",
                "false"
              ],
              [
                "test_set_all_options",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_get_values",
                  "0"
                ],
                [
                  "test_default_scheduler",
                  "0"
                ],
                [
                  "test_nok",
                  "0"
                ],
                [
                  "test_set_all_options",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_get_values",
                  "0"
                ],
                [
                  "test_default_scheduler",
                  "0"
                ],
                [
                  "test_nok",
                  "0"
                ],
                [
                  "test_set_all_options",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_get_values",
                "false"
              ],
              [
                "test_default_scheduler",
                "false"
              ],
              [
                "test_nok",
                "false"
              ],
              [
                "test_set_all_options",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_values",
                "false"
              ],
              [
                "test_default_scheduler",
                "false"
              ],
              [
                "test_nok",
                "false"
              ],
              [
                "test_set_all_options",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_get_values",
                "7"
              ],
              [
                "test_default_scheduler",
                "1"
              ],
              [
                "test_nok",
                "4"
              ],
              [
                "test_set_all_options",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_get_values",
                []
              ],
              [
                "test_default_scheduler",
                []
              ],
              [
                "test_nok",
                []
              ],
              [
                "test_set_all_options",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_get_values",
                []
              ],
              [
                "test_default_scheduler",
                []
              ],
              [
                "test_nok",
                []
              ],
              [
                "test_set_all_options",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.36371209934282095,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_get_values",
                  "test_default_scheduler",
                  0.31281884971873686
                ],
                [
                  "test_set_all_options",
                  "test_get_values",
                  0.6599098888579463
                ],
                [
                  "test_set_all_options",
                  "test_default_scheduler",
                  0.17661426034436992
                ],
                [
                  "test_set_all_options",
                  "test_nok",
                  0.3694417478123221
                ],
                [
                  "test_nok",
                  "test_default_scheduler",
                  0.29187909980844823
                ],
                [
                  "test_nok",
                  "test_get_values",
                  0.3716087495151026
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_get_values",
                "false"
              ],
              [
                "test_default_scheduler",
                "false"
              ],
              [
                "test_nok",
                "false"
              ],
              [
                "test_set_all_options",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "tests_\u0026_test_Program.py",
    "testCases": [
      {
        "name": "Test_program",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_simple_program",
                  "[]"
                ],
                [
                  "test_5qubit_program",
                  "[]"
                ],
                [
                  "test_program_qubit_count",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_empty_program",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_sweep_points",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_program_name",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_program_creg_count",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_program_methods",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_add_kernel",
                  "[]"
                ],
                [
                  "test_allxy_program",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_simple_program",
                  "[]"
                ],
                [
                  "test_5qubit_program",
                  "[]"
                ],
                [
                  "test_program_qubit_count",
                  "[]"
                ],
                [
                  "test_empty_program",
                  "[]"
                ],
                [
                  "test_sweep_points",
                  "[]"
                ],
                [
                  "test_program_name",
                  "[]"
                ],
                [
                  "test_program_creg_count",
                  "[]"
                ],
                [
                  "test_program_methods",
                  "[]"
                ],
                [
                  "test_add_kernel",
                  "[]"
                ],
                [
                  "test_allxy_program",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_simple_program",
                  "false"
                ],
                [
                  "test_5qubit_program",
                  "true"
                ],
                [
                  "test_program_qubit_count",
                  "false"
                ],
                [
                  "test_empty_program",
                  "false"
                ],
                [
                  "test_sweep_points",
                  "false"
                ],
                [
                  "test_program_name",
                  "false"
                ],
                [
                  "test_program_creg_count",
                  "false"
                ],
                [
                  "test_program_methods",
                  "false"
                ],
                [
                  "test_add_kernel",
                  "false"
                ],
                [
                  "test_allxy_program",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_simple_program",
                  "false"
                ],
                [
                  "test_5qubit_program",
                  "false"
                ],
                [
                  "test_program_qubit_count",
                  "false"
                ],
                [
                  "test_empty_program",
                  "false"
                ],
                [
                  "test_sweep_points",
                  "false"
                ],
                [
                  "test_program_name",
                  "false"
                ],
                [
                  "test_program_creg_count",
                  "false"
                ],
                [
                  "test_program_methods",
                  "false"
                ],
                [
                  "test_add_kernel",
                  "false"
                ],
                [
                  "test_allxy_program",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_simple_program",
                  "false"
                ],
                [
                  "test_5qubit_program",
                  "false"
                ],
                [
                  "test_program_qubit_count",
                  "false"
                ],
                [
                  "test_empty_program",
                  "false"
                ],
                [
                  "test_sweep_points",
                  "false"
                ],
                [
                  "test_program_name",
                  "false"
                ],
                [
                  "test_program_creg_count",
                  "false"
                ],
                [
                  "test_program_methods",
                  "false"
                ],
                [
                  "test_add_kernel",
                  "false"
                ],
                [
                  "test_allxy_program",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_simple_program",
                  "false"
                ],
                [
                  "test_5qubit_program",
                  "false"
                ],
                [
                  "test_program_qubit_count",
                  "false"
                ],
                [
                  "test_empty_program",
                  "false"
                ],
                [
                  "test_sweep_points",
                  "false"
                ],
                [
                  "test_program_name",
                  "false"
                ],
                [
                  "test_program_creg_count",
                  "false"
                ],
                [
                  "test_program_methods",
                  "false"
                ],
                [
                  "test_add_kernel",
                  "false"
                ],
                [
                  "test_allxy_program",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_program",
                "false"
              ],
              [
                "test_5qubit_program",
                "false"
              ],
              [
                "test_program_qubit_count",
                "false"
              ],
              [
                "test_empty_program",
                "false"
              ],
              [
                "test_sweep_points",
                "false"
              ],
              [
                "test_program_name",
                "false"
              ],
              [
                "test_program_creg_count",
                "false"
              ],
              [
                "test_program_methods",
                "false"
              ],
              [
                "test_add_kernel",
                "false"
              ],
              [
                "test_allxy_program",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_program",
                "false"
              ],
              [
                "test_5qubit_program",
                "false"
              ],
              [
                "test_program_qubit_count",
                "false"
              ],
              [
                "test_empty_program",
                "false"
              ],
              [
                "test_sweep_points",
                "false"
              ],
              [
                "test_program_name",
                "false"
              ],
              [
                "test_program_creg_count",
                "false"
              ],
              [
                "test_program_methods",
                "false"
              ],
              [
                "test_add_kernel",
                "false"
              ],
              [
                "test_allxy_program",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_program",
                []
              ],
              [
                "test_5qubit_program",
                []
              ],
              [
                "test_program_qubit_count",
                []
              ],
              [
                "test_empty_program",
                []
              ],
              [
                "test_sweep_points",
                []
              ],
              [
                "test_program_name",
                []
              ],
              [
                "test_program_creg_count",
                []
              ],
              [
                "test_program_methods",
                []
              ],
              [
                "test_add_kernel",
                []
              ],
              [
                "test_allxy_program",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_program",
                "false"
              ],
              [
                "test_5qubit_program",
                "false"
              ],
              [
                "test_program_qubit_count",
                "false"
              ],
              [
                "test_empty_program",
                "false"
              ],
              [
                "test_sweep_points",
                "false"
              ],
              [
                "test_program_name",
                "false"
              ],
              [
                "test_program_creg_count",
                "false"
              ],
              [
                "test_program_methods",
                "false"
              ],
              [
                "test_add_kernel",
                "false"
              ],
              [
                "test_allxy_program",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_program",
                "false"
              ],
              [
                "test_5qubit_program",
                "false"
              ],
              [
                "test_program_qubit_count",
                "false"
              ],
              [
                "test_empty_program",
                "false"
              ],
              [
                "test_sweep_points",
                "false"
              ],
              [
                "test_program_name",
                "false"
              ],
              [
                "test_program_creg_count",
                "false"
              ],
              [
                "test_program_methods",
                "false"
              ],
              [
                "test_add_kernel",
                "false"
              ],
              [
                "test_allxy_program",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_simple_program",
                  "0"
                ],
                [
                  "test_5qubit_program",
                  "0"
                ],
                [
                  "test_program_qubit_count",
                  "0"
                ],
                [
                  "test_empty_program",
                  "0"
                ],
                [
                  "test_sweep_points",
                  "0"
                ],
                [
                  "test_program_name",
                  "0"
                ],
                [
                  "test_program_creg_count",
                  "0"
                ],
                [
                  "test_program_methods",
                  "0"
                ],
                [
                  "test_add_kernel",
                  "0"
                ],
                [
                  "test_allxy_program",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_simple_program",
                  "0"
                ],
                [
                  "test_5qubit_program",
                  "0"
                ],
                [
                  "test_program_qubit_count",
                  "0"
                ],
                [
                  "test_empty_program",
                  "0"
                ],
                [
                  "test_sweep_points",
                  "0"
                ],
                [
                  "test_program_name",
                  "0"
                ],
                [
                  "test_program_creg_count",
                  "0"
                ],
                [
                  "test_program_methods",
                  "0"
                ],
                [
                  "test_add_kernel",
                  "0"
                ],
                [
                  "test_allxy_program",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_simple_program",
                "false"
              ],
              [
                "test_5qubit_program",
                "false"
              ],
              [
                "test_program_qubit_count",
                "false"
              ],
              [
                "test_empty_program",
                "false"
              ],
              [
                "test_sweep_points",
                "true"
              ],
              [
                "test_program_name",
                "false"
              ],
              [
                "test_program_creg_count",
                "false"
              ],
              [
                "test_program_methods",
                "false"
              ],
              [
                "test_add_kernel",
                "false"
              ],
              [
                "test_allxy_program",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_program",
                "false"
              ],
              [
                "test_5qubit_program",
                "false"
              ],
              [
                "test_program_qubit_count",
                "false"
              ],
              [
                "test_empty_program",
                "false"
              ],
              [
                "test_sweep_points",
                "false"
              ],
              [
                "test_program_name",
                "false"
              ],
              [
                "test_program_creg_count",
                "false"
              ],
              [
                "test_program_methods",
                "false"
              ],
              [
                "test_add_kernel",
                "false"
              ],
              [
                "test_allxy_program",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_simple_program",
                "0"
              ],
              [
                "test_5qubit_program",
                "0"
              ],
              [
                "test_program_qubit_count",
                "1"
              ],
              [
                "test_empty_program",
                "2"
              ],
              [
                "test_sweep_points",
                "1"
              ],
              [
                "test_program_name",
                "1"
              ],
              [
                "test_program_creg_count",
                "1"
              ],
              [
                "test_program_methods",
                "1"
              ],
              [
                "test_add_kernel",
                "0"
              ],
              [
                "test_allxy_program",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_program",
                [
                  "p",
                  "sweep_points",
                  "nqubits",
                  "k"
                ]
              ],
              [
                "test_5qubit_program",
                [
                  "p",
                  "nqubits",
                  "k"
                ]
              ],
              [
                "test_program_qubit_count",
                [
                  "p",
                  "nqubits",
                  "name"
                ]
              ],
              [
                "test_empty_program",
                [
                  "p"
                ]
              ],
              [
                "test_sweep_points",
                [
                  "p",
                  "lst"
                ]
              ],
              [
                "test_program_name",
                [
                  "p",
                  "nqubits",
                  "name"
                ]
              ],
              [
                "test_program_creg_count",
                [
                  "p",
                  "ncreg",
                  "nqubits",
                  "name"
                ]
              ],
              [
                "test_program_methods",
                [
                  "p",
                  "nqubits",
                  "program_methods"
                ]
              ],
              [
                "test_add_kernel",
                [
                  "p",
                  "nqubits",
                  "k"
                ]
              ],
              [
                "test_allxy_program",
                [
                  "p",
                  "q",
                  "nqubits",
                  "k",
                  "pulse_combinations",
                  "nr_sweep_pts"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_program",
                []
              ],
              [
                "test_5qubit_program",
                []
              ],
              [
                "test_program_qubit_count",
                []
              ],
              [
                "test_empty_program",
                []
              ],
              [
                "test_sweep_points",
                []
              ],
              [
                "test_program_name",
                []
              ],
              [
                "test_program_creg_count",
                []
              ],
              [
                "test_program_methods",
                []
              ],
              [
                "test_add_kernel",
                []
              ],
              [
                "test_allxy_program",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.3571833046223008,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_program_qubit_count",
                  "test_program_creg_count",
                  0.7273238618387272
                ],
                [
                  "test_empty_program",
                  "test_simple_program",
                  0.4307055216465324
                ],
                [
                  "test_simple_program",
                  "test_allxy_program",
                  0.17498409820518732
                ],
                [
                  "test_program_qubit_count",
                  "test_add_kernel",
                  0.43980999968269874
                ],
                [
                  "test_program_creg_count",
                  "test_program_methods",
                  0.32579188276750076
                ],
                [
                  "test_sweep_points",
                  "test_5qubit_program",
                  0.42772909995952224
                ],
                [
                  "test_add_kernel",
                  "test_empty_program",
                  0.2511169080180331
                ],
                [
                  "test_add_kernel",
                  "test_5qubit_program",
                  0.4699508198658441
                ],
                [
                  "test_program_qubit_count",
                  "test_sweep_points",
                  0.32549338848269393
                ],
                [
                  "test_program_creg_count",
                  "test_add_kernel",
                  0.3477003341788151
                ],
                [
                  "test_add_kernel",
                  "test_allxy_program",
                  0.23344593306729858
                ],
                [
                  "test_sweep_points",
                  "test_empty_program",
                  0.4043680421515942
                ],
                [
                  "test_simple_program",
                  "test_5qubit_program",
                  0.5338923542350191
                ],
                [
                  "test_program_qubit_count",
                  "test_empty_program",
                  0.3478505426185217
                ],
                [
                  "test_sweep_points",
                  "test_allxy_program",
                  0.15818371694938244
                ],
                [
                  "test_program_name",
                  "test_add_kernel",
                  0.4265529343797823
                ],
                [
                  "test_5qubit_program",
                  "test_allxy_program",
                  0.18400318975607294
                ],
                [
                  "test_program_methods",
                  "test_empty_program",
                  0.23693955110363693
                ],
                [
                  "test_program_name",
                  "test_sweep_points",
                  0.35514240260228874
                ],
                [
                  "test_program_qubit_count",
                  "test_5qubit_program",
                  0.38467132460326176
                ],
                [
                  "test_program_name",
                  "test_simple_program",
                  0.390094748802747
                ],
                [
                  "test_program_methods",
                  "test_5qubit_program",
                  0.3446134567133272
                ],
                [
                  "test_add_kernel",
                  "test_program_methods",
                  0.29749763730163026
                ],
                [
                  "test_add_kernel",
                  "test_simple_program",
                  0.395190641996395
                ],
                [
                  "test_empty_program",
                  "test_5qubit_program",
                  0.3834422668772602
                ],
                [
                  "test_sweep_points",
                  "test_simple_program",
                  0.5541567453293754
                ],
                [
                  "test_program_name",
                  "test_empty_program",
                  0.37953605763829484
                ],
                [
                  "test_sweep_points",
                  "test_program_methods",
                  0.3048524894165396
                ],
                [
                  "test_program_qubit_count",
                  "test_simple_program",
                  0.3915780041490244
                ],
                [
                  "test_program_creg_count",
                  "test_allxy_program",
                  0.16022040561004533
                ],
                [
                  "test_program_name",
                  "test_allxy_program",
                  0.15162868637534374
                ],
                [
                  "test_program_name",
                  "test_5qubit_program",
                  0.36496593430090596
                ],
                [
                  "test_program_creg_count",
                  "test_empty_program",
                  0.3499999999999999
                ],
                [
                  "test_program_methods",
                  "test_simple_program",
                  0.2710734281664659
                ],
                [
                  "test_add_kernel",
                  "test_sweep_points",
                  0.2272305509290384
                ],
                [
                  "test_empty_program",
                  "test_allxy_program",
                  0.13275405036260898
                ],
                [
                  "test_program_qubit_count",
                  "test_program_methods",
                  0.3371708921694099
                ],
                [
                  "test_program_creg_count",
                  "test_5qubit_program",
                  0.37022011974356156
                ],
                [
                  "test_program_name",
                  "test_program_creg_count",
                  0.724568837309472
                ],
                [
                  "test_program_qubit_count",
                  "test_allxy_program",
                  0.15634123488938967
                ],
                [
                  "test_program_creg_count",
                  "test_sweep_points",
                  0.44112877325628463
                ],
                [
                  "test_program_creg_count",
                  "test_simple_program",
                  0.4172459740950783
                ],
                [
                  "test_program_methods",
                  "test_allxy_program",
                  0.16540825785400667
                ],
                [
                  "test_program_name",
                  "test_program_qubit_count",
                  0.8292279828967711
                ],
                [
                  "test_program_name",
                  "test_program_methods",
                  0.3474456257081473
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_program",
                "false"
              ],
              [
                "test_5qubit_program",
                "false"
              ],
              [
                "test_program_qubit_count",
                "false"
              ],
              [
                "test_empty_program",
                "false"
              ],
              [
                "test_sweep_points",
                "false"
              ],
              [
                "test_program_name",
                "false"
              ],
              [
                "test_program_creg_count",
                "false"
              ],
              [
                "test_program_methods",
                "false"
              ],
              [
                "test_add_kernel",
                "false"
              ],
              [
                "test_allxy_program",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 10
      }
    ]
  },
  {
    "name": "tests_\u0026_test_unitary.py",
    "testCases": [
      {
        "name": "Test_conjugated_kernel",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_usingqx_10",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_extremelysparseunitary",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_decomposition_rotatedtoffoli",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_unitary_decompose_X",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_usingqx_fullyentangled_4qubit",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_usingqx_00",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_decomposition_controlled_U",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_adding2tothepower6unitary",
                  "[]"
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_usingqx_bellstate",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_unitary_decompose_Y",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_decomposition_toffoli",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_unitary_decompose_Z",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_unitary_decompose_I",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_usingqx_01",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_unitary_basic",
                  "[]"
                ],
                [
                  "test_unitary_undecomposed",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_usingqx_fullyentangled",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_usingqx_11",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_sparse2qubitunitary",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_usingqx_fullyentangled_5qubit_10011",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_sparse2qubit_multiplexor",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_usingqx_fullyentangled_5qubit",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_decomposition_mscthesisaritra",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_sparse2qubitunitaryotherqubit",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_usingqx_fullyentangled_3qubit",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_sparse2qubitunitaryotherqubitcheck",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_usingqx_sparseunitary",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_non_90_degree_angle",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_unitary_called_hadamard",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_usingqx_10",
                  "[]"
                ],
                [
                  "test_extremelysparseunitary",
                  "[]"
                ],
                [
                  "test_decomposition_rotatedtoffoli",
                  "[]"
                ],
                [
                  "test_unitary_decompose_X",
                  "[]"
                ],
                [
                  "test_usingqx_fullyentangled_4qubit",
                  "[]"
                ],
                [
                  "test_usingqx_00",
                  "[]"
                ],
                [
                  "test_decomposition_controlled_U",
                  "[]"
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "[]"
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "[]"
                ],
                [
                  "test_adding2tothepower6unitary",
                  "[]"
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "[]"
                ],
                [
                  "test_usingqx_bellstate",
                  "[]"
                ],
                [
                  "test_unitary_decompose_Y",
                  "[]"
                ],
                [
                  "test_decomposition_toffoli",
                  "[]"
                ],
                [
                  "test_unitary_decompose_Z",
                  "[]"
                ],
                [
                  "test_unitary_decompose_I",
                  "[]"
                ],
                [
                  "test_usingqx_01",
                  "[]"
                ],
                [
                  "test_unitary_basic",
                  "[]"
                ],
                [
                  "test_unitary_undecomposed",
                  "[]"
                ],
                [
                  "test_usingqx_fullyentangled",
                  "[]"
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "[]"
                ],
                [
                  "test_usingqx_11",
                  "[]"
                ],
                [
                  "test_sparse2qubitunitary",
                  "[]"
                ],
                [
                  "test_usingqx_fullyentangled_5qubit_10011",
                  "[]"
                ],
                [
                  "test_sparse2qubit_multiplexor",
                  "[]"
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "[]"
                ],
                [
                  "test_usingqx_fullyentangled_5qubit",
                  "[]"
                ],
                [
                  "test_decomposition_mscthesisaritra",
                  "[]"
                ],
                [
                  "test_sparse2qubitunitaryotherqubit",
                  "[]"
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "[]"
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "[]"
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "[]"
                ],
                [
                  "test_usingqx_fullyentangled_3qubit",
                  "[]"
                ],
                [
                  "test_sparse2qubitunitaryotherqubitcheck",
                  "[]"
                ],
                [
                  "test_usingqx_sparseunitary",
                  "[]"
                ],
                [
                  "test_non_90_degree_angle",
                  "[]"
                ],
                [
                  "test_unitary_called_hadamard",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_usingqx_10",
                  "false"
                ],
                [
                  "test_extremelysparseunitary",
                  "false"
                ],
                [
                  "test_decomposition_rotatedtoffoli",
                  "false"
                ],
                [
                  "test_unitary_decompose_X",
                  "false"
                ],
                [
                  "test_usingqx_fullyentangled_4qubit",
                  "false"
                ],
                [
                  "test_usingqx_00",
                  "false"
                ],
                [
                  "test_decomposition_controlled_U",
                  "false"
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "false"
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "false"
                ],
                [
                  "test_adding2tothepower6unitary",
                  "false"
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "false"
                ],
                [
                  "test_usingqx_bellstate",
                  "false"
                ],
                [
                  "test_unitary_decompose_Y",
                  "false"
                ],
                [
                  "test_decomposition_toffoli",
                  "false"
                ],
                [
                  "test_unitary_decompose_Z",
                  "false"
                ],
                [
                  "test_unitary_decompose_I",
                  "false"
                ],
                [
                  "test_usingqx_01",
                  "false"
                ],
                [
                  "test_unitary_basic",
                  "false"
                ],
                [
                  "test_unitary_undecomposed",
                  "false"
                ],
                [
                  "test_usingqx_fullyentangled",
                  "false"
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "false"
                ],
                [
                  "test_usingqx_11",
                  "false"
                ],
                [
                  "test_sparse2qubitunitary",
                  "false"
                ],
                [
                  "test_usingqx_fullyentangled_5qubit_10011",
                  "false"
                ],
                [
                  "test_sparse2qubit_multiplexor",
                  "false"
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "false"
                ],
                [
                  "test_usingqx_fullyentangled_5qubit",
                  "false"
                ],
                [
                  "test_decomposition_mscthesisaritra",
                  "false"
                ],
                [
                  "test_sparse2qubitunitaryotherqubit",
                  "false"
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "false"
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "false"
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "false"
                ],
                [
                  "test_usingqx_fullyentangled_3qubit",
                  "false"
                ],
                [
                  "test_sparse2qubitunitaryotherqubitcheck",
                  "false"
                ],
                [
                  "test_usingqx_sparseunitary",
                  "false"
                ],
                [
                  "test_non_90_degree_angle",
                  "false"
                ],
                [
                  "test_unitary_called_hadamard",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_usingqx_10",
                  "false"
                ],
                [
                  "test_extremelysparseunitary",
                  "false"
                ],
                [
                  "test_decomposition_rotatedtoffoli",
                  "false"
                ],
                [
                  "test_unitary_decompose_X",
                  "false"
                ],
                [
                  "test_usingqx_fullyentangled_4qubit",
                  "false"
                ],
                [
                  "test_usingqx_00",
                  "false"
                ],
                [
                  "test_decomposition_controlled_U",
                  "false"
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "false"
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "false"
                ],
                [
                  "test_adding2tothepower6unitary",
                  "false"
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "false"
                ],
                [
                  "test_usingqx_bellstate",
                  "false"
                ],
                [
                  "test_unitary_decompose_Y",
                  "false"
                ],
                [
                  "test_decomposition_toffoli",
                  "false"
                ],
                [
                  "test_unitary_decompose_Z",
                  "false"
                ],
                [
                  "test_unitary_decompose_I",
                  "false"
                ],
                [
                  "test_usingqx_01",
                  "false"
                ],
                [
                  "test_unitary_basic",
                  "false"
                ],
                [
                  "test_unitary_undecomposed",
                  "false"
                ],
                [
                  "test_usingqx_fullyentangled",
                  "false"
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "false"
                ],
                [
                  "test_usingqx_11",
                  "false"
                ],
                [
                  "test_sparse2qubitunitary",
                  "false"
                ],
                [
                  "test_usingqx_fullyentangled_5qubit_10011",
                  "false"
                ],
                [
                  "test_sparse2qubit_multiplexor",
                  "false"
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "false"
                ],
                [
                  "test_usingqx_fullyentangled_5qubit",
                  "false"
                ],
                [
                  "test_decomposition_mscthesisaritra",
                  "false"
                ],
                [
                  "test_sparse2qubitunitaryotherqubit",
                  "false"
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "false"
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "false"
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "false"
                ],
                [
                  "test_usingqx_fullyentangled_3qubit",
                  "false"
                ],
                [
                  "test_sparse2qubitunitaryotherqubitcheck",
                  "false"
                ],
                [
                  "test_usingqx_sparseunitary",
                  "false"
                ],
                [
                  "test_non_90_degree_angle",
                  "false"
                ],
                [
                  "test_unitary_called_hadamard",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_usingqx_10",
                  "false"
                ],
                [
                  "test_extremelysparseunitary",
                  "false"
                ],
                [
                  "test_decomposition_rotatedtoffoli",
                  "false"
                ],
                [
                  "test_unitary_decompose_X",
                  "false"
                ],
                [
                  "test_usingqx_fullyentangled_4qubit",
                  "false"
                ],
                [
                  "test_usingqx_00",
                  "false"
                ],
                [
                  "test_decomposition_controlled_U",
                  "false"
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "false"
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "false"
                ],
                [
                  "test_adding2tothepower6unitary",
                  "false"
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "false"
                ],
                [
                  "test_usingqx_bellstate",
                  "false"
                ],
                [
                  "test_unitary_decompose_Y",
                  "false"
                ],
                [
                  "test_decomposition_toffoli",
                  "false"
                ],
                [
                  "test_unitary_decompose_Z",
                  "false"
                ],
                [
                  "test_unitary_decompose_I",
                  "false"
                ],
                [
                  "test_usingqx_01",
                  "false"
                ],
                [
                  "test_unitary_basic",
                  "false"
                ],
                [
                  "test_unitary_undecomposed",
                  "false"
                ],
                [
                  "test_usingqx_fullyentangled",
                  "false"
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "false"
                ],
                [
                  "test_usingqx_11",
                  "false"
                ],
                [
                  "test_sparse2qubitunitary",
                  "false"
                ],
                [
                  "test_usingqx_fullyentangled_5qubit_10011",
                  "false"
                ],
                [
                  "test_sparse2qubit_multiplexor",
                  "false"
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "false"
                ],
                [
                  "test_usingqx_fullyentangled_5qubit",
                  "false"
                ],
                [
                  "test_decomposition_mscthesisaritra",
                  "false"
                ],
                [
                  "test_sparse2qubitunitaryotherqubit",
                  "false"
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "false"
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "false"
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "false"
                ],
                [
                  "test_usingqx_fullyentangled_3qubit",
                  "false"
                ],
                [
                  "test_sparse2qubitunitaryotherqubitcheck",
                  "false"
                ],
                [
                  "test_usingqx_sparseunitary",
                  "false"
                ],
                [
                  "test_non_90_degree_angle",
                  "false"
                ],
                [
                  "test_unitary_called_hadamard",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_usingqx_10",
                  "false"
                ],
                [
                  "test_extremelysparseunitary",
                  "false"
                ],
                [
                  "test_decomposition_rotatedtoffoli",
                  "false"
                ],
                [
                  "test_unitary_decompose_X",
                  "false"
                ],
                [
                  "test_usingqx_fullyentangled_4qubit",
                  "false"
                ],
                [
                  "test_usingqx_00",
                  "false"
                ],
                [
                  "test_decomposition_controlled_U",
                  "false"
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "false"
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "false"
                ],
                [
                  "test_adding2tothepower6unitary",
                  "false"
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "false"
                ],
                [
                  "test_usingqx_bellstate",
                  "false"
                ],
                [
                  "test_unitary_decompose_Y",
                  "false"
                ],
                [
                  "test_decomposition_toffoli",
                  "false"
                ],
                [
                  "test_unitary_decompose_Z",
                  "false"
                ],
                [
                  "test_unitary_decompose_I",
                  "false"
                ],
                [
                  "test_usingqx_01",
                  "false"
                ],
                [
                  "test_unitary_basic",
                  "false"
                ],
                [
                  "test_unitary_undecomposed",
                  "false"
                ],
                [
                  "test_usingqx_fullyentangled",
                  "false"
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "false"
                ],
                [
                  "test_usingqx_11",
                  "false"
                ],
                [
                  "test_sparse2qubitunitary",
                  "false"
                ],
                [
                  "test_usingqx_fullyentangled_5qubit_10011",
                  "false"
                ],
                [
                  "test_sparse2qubit_multiplexor",
                  "false"
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "false"
                ],
                [
                  "test_usingqx_fullyentangled_5qubit",
                  "false"
                ],
                [
                  "test_decomposition_mscthesisaritra",
                  "false"
                ],
                [
                  "test_sparse2qubitunitaryotherqubit",
                  "false"
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "false"
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "false"
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "false"
                ],
                [
                  "test_usingqx_fullyentangled_3qubit",
                  "false"
                ],
                [
                  "test_sparse2qubitunitaryotherqubitcheck",
                  "false"
                ],
                [
                  "test_usingqx_sparseunitary",
                  "false"
                ],
                [
                  "test_non_90_degree_angle",
                  "false"
                ],
                [
                  "test_unitary_called_hadamard",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_usingqx_10",
                "false"
              ],
              [
                "test_extremelysparseunitary",
                "false"
              ],
              [
                "test_decomposition_rotatedtoffoli",
                "false"
              ],
              [
                "test_unitary_decompose_X",
                "false"
              ],
              [
                "test_usingqx_fullyentangled_4qubit",
                "false"
              ],
              [
                "test_usingqx_00",
                "false"
              ],
              [
                "test_decomposition_controlled_U",
                "false"
              ],
              [
                "test_unitary_wrongnumberofqubits_toofew",
                "false"
              ],
              [
                "test_unitary_decompose_IYZ_differentorder",
                "false"
              ],
              [
                "test_adding2tothepower6unitary",
                "false"
              ],
              [
                "test_unitary_decompose_2qubit_CNOT_2",
                "false"
              ],
              [
                "test_usingqx_bellstate",
                "false"
              ],
              [
                "test_unitary_decompose_Y",
                "false"
              ],
              [
                "test_decomposition_toffoli",
                "false"
              ],
              [
                "test_unitary_decompose_Z",
                "false"
              ],
              [
                "test_unitary_decompose_I",
                "false"
              ],
              [
                "test_usingqx_01",
                "false"
              ],
              [
                "test_unitary_basic",
                "false"
              ],
              [
                "test_unitary_undecomposed",
                "false"
              ],
              [
                "test_usingqx_fullyentangled",
                "false"
              ],
              [
                "test_unitary_decompose_IYZ",
                "false"
              ],
              [
                "test_usingqx_11",
                "false"
              ],
              [
                "test_sparse2qubitunitary",
                "false"
              ],
              [
                "test_usingqx_fullyentangled_5qubit_10011",
                "false"
              ],
              [
                "test_sparse2qubit_multiplexor",
                "false"
              ],
              [
                "test_unitary_decompose_2qubit_CNOT",
                "false"
              ],
              [
                "test_usingqx_fullyentangled_5qubit",
                "false"
              ],
              [
                "test_decomposition_mscthesisaritra",
                "false"
              ],
              [
                "test_sparse2qubitunitaryotherqubit",
                "false"
              ],
              [
                "test_unitary_decompose_nonunitary",
                "false"
              ],
              [
                "test_unitary_decompose_matrixinsteadofarray",
                "false"
              ],
              [
                "test_unitary_wrongnumberofqubits",
                "false"
              ],
              [
                "test_usingqx_fullyentangled_3qubit",
                "false"
              ],
              [
                "test_sparse2qubitunitaryotherqubitcheck",
                "false"
              ],
              [
                "test_usingqx_sparseunitary",
                "false"
              ],
              [
                "test_non_90_degree_angle",
                "false"
              ],
              [
                "test_unitary_called_hadamard",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_usingqx_10",
                "false"
              ],
              [
                "test_extremelysparseunitary",
                "false"
              ],
              [
                "test_decomposition_rotatedtoffoli",
                "false"
              ],
              [
                "test_unitary_decompose_X",
                "false"
              ],
              [
                "test_usingqx_fullyentangled_4qubit",
                "false"
              ],
              [
                "test_usingqx_00",
                "false"
              ],
              [
                "test_decomposition_controlled_U",
                "false"
              ],
              [
                "test_unitary_wrongnumberofqubits_toofew",
                "false"
              ],
              [
                "test_unitary_decompose_IYZ_differentorder",
                "false"
              ],
              [
                "test_adding2tothepower6unitary",
                "false"
              ],
              [
                "test_unitary_decompose_2qubit_CNOT_2",
                "false"
              ],
              [
                "test_usingqx_bellstate",
                "false"
              ],
              [
                "test_unitary_decompose_Y",
                "false"
              ],
              [
                "test_decomposition_toffoli",
                "false"
              ],
              [
                "test_unitary_decompose_Z",
                "false"
              ],
              [
                "test_unitary_decompose_I",
                "false"
              ],
              [
                "test_usingqx_01",
                "false"
              ],
              [
                "test_unitary_basic",
                "false"
              ],
              [
                "test_unitary_undecomposed",
                "false"
              ],
              [
                "test_usingqx_fullyentangled",
                "false"
              ],
              [
                "test_unitary_decompose_IYZ",
                "false"
              ],
              [
                "test_usingqx_11",
                "false"
              ],
              [
                "test_sparse2qubitunitary",
                "false"
              ],
              [
                "test_usingqx_fullyentangled_5qubit_10011",
                "false"
              ],
              [
                "test_sparse2qubit_multiplexor",
                "false"
              ],
              [
                "test_unitary_decompose_2qubit_CNOT",
                "false"
              ],
              [
                "test_usingqx_fullyentangled_5qubit",
                "false"
              ],
              [
                "test_decomposition_mscthesisaritra",
                "false"
              ],
              [
                "test_sparse2qubitunitaryotherqubit",
                "false"
              ],
              [
                "test_unitary_decompose_nonunitary",
                "false"
              ],
              [
                "test_unitary_decompose_matrixinsteadofarray",
                "false"
              ],
              [
                "test_unitary_wrongnumberofqubits",
                "false"
              ],
              [
                "test_usingqx_fullyentangled_3qubit",
                "false"
              ],
              [
                "test_sparse2qubitunitaryotherqubitcheck",
                "false"
              ],
              [
                "test_usingqx_sparseunitary",
                "false"
              ],
              [
                "test_non_90_degree_angle",
                "false"
              ],
              [
                "test_unitary_called_hadamard",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_usingqx_10",
                []
              ],
              [
                "test_extremelysparseunitary",
                []
              ],
              [
                "test_decomposition_rotatedtoffoli",
                []
              ],
              [
                "test_unitary_decompose_X",
                []
              ],
              [
                "test_usingqx_fullyentangled_4qubit",
                []
              ],
              [
                "test_usingqx_00",
                []
              ],
              [
                "test_decomposition_controlled_U",
                []
              ],
              [
                "test_unitary_wrongnumberofqubits_toofew",
                []
              ],
              [
                "test_unitary_decompose_IYZ_differentorder",
                []
              ],
              [
                "test_adding2tothepower6unitary",
                []
              ],
              [
                "test_unitary_decompose_2qubit_CNOT_2",
                []
              ],
              [
                "test_usingqx_bellstate",
                []
              ],
              [
                "test_unitary_decompose_Y",
                []
              ],
              [
                "test_decomposition_toffoli",
                []
              ],
              [
                "test_unitary_decompose_Z",
                []
              ],
              [
                "test_unitary_decompose_I",
                []
              ],
              [
                "test_usingqx_01",
                []
              ],
              [
                "test_unitary_basic",
                []
              ],
              [
                "test_unitary_undecomposed",
                []
              ],
              [
                "test_usingqx_fullyentangled",
                []
              ],
              [
                "test_unitary_decompose_IYZ",
                []
              ],
              [
                "test_usingqx_11",
                []
              ],
              [
                "test_sparse2qubitunitary",
                []
              ],
              [
                "test_usingqx_fullyentangled_5qubit_10011",
                []
              ],
              [
                "test_sparse2qubit_multiplexor",
                []
              ],
              [
                "test_unitary_decompose_2qubit_CNOT",
                []
              ],
              [
                "test_usingqx_fullyentangled_5qubit",
                []
              ],
              [
                "test_decomposition_mscthesisaritra",
                []
              ],
              [
                "test_sparse2qubitunitaryotherqubit",
                []
              ],
              [
                "test_unitary_decompose_nonunitary",
                []
              ],
              [
                "test_unitary_decompose_matrixinsteadofarray",
                []
              ],
              [
                "test_unitary_wrongnumberofqubits",
                []
              ],
              [
                "test_usingqx_fullyentangled_3qubit",
                []
              ],
              [
                "test_sparse2qubitunitaryotherqubitcheck",
                []
              ],
              [
                "test_usingqx_sparseunitary",
                []
              ],
              [
                "test_non_90_degree_angle",
                []
              ],
              [
                "test_unitary_called_hadamard",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_usingqx_10",
                "false"
              ],
              [
                "test_extremelysparseunitary",
                "false"
              ],
              [
                "test_decomposition_rotatedtoffoli",
                "false"
              ],
              [
                "test_unitary_decompose_X",
                "false"
              ],
              [
                "test_usingqx_fullyentangled_4qubit",
                "false"
              ],
              [
                "test_usingqx_00",
                "false"
              ],
              [
                "test_decomposition_controlled_U",
                "false"
              ],
              [
                "test_unitary_wrongnumberofqubits_toofew",
                "false"
              ],
              [
                "test_unitary_decompose_IYZ_differentorder",
                "false"
              ],
              [
                "test_adding2tothepower6unitary",
                "false"
              ],
              [
                "test_unitary_decompose_2qubit_CNOT_2",
                "false"
              ],
              [
                "test_usingqx_bellstate",
                "false"
              ],
              [
                "test_unitary_decompose_Y",
                "false"
              ],
              [
                "test_decomposition_toffoli",
                "false"
              ],
              [
                "test_unitary_decompose_Z",
                "false"
              ],
              [
                "test_unitary_decompose_I",
                "false"
              ],
              [
                "test_usingqx_01",
                "false"
              ],
              [
                "test_unitary_basic",
                "false"
              ],
              [
                "test_unitary_undecomposed",
                "false"
              ],
              [
                "test_usingqx_fullyentangled",
                "false"
              ],
              [
                "test_unitary_decompose_IYZ",
                "false"
              ],
              [
                "test_usingqx_11",
                "false"
              ],
              [
                "test_sparse2qubitunitary",
                "false"
              ],
              [
                "test_usingqx_fullyentangled_5qubit_10011",
                "false"
              ],
              [
                "test_sparse2qubit_multiplexor",
                "false"
              ],
              [
                "test_unitary_decompose_2qubit_CNOT",
                "false"
              ],
              [
                "test_usingqx_fullyentangled_5qubit",
                "false"
              ],
              [
                "test_decomposition_mscthesisaritra",
                "false"
              ],
              [
                "test_sparse2qubitunitaryotherqubit",
                "false"
              ],
              [
                "test_unitary_decompose_nonunitary",
                "false"
              ],
              [
                "test_unitary_decompose_matrixinsteadofarray",
                "false"
              ],
              [
                "test_unitary_wrongnumberofqubits",
                "false"
              ],
              [
                "test_usingqx_fullyentangled_3qubit",
                "false"
              ],
              [
                "test_sparse2qubitunitaryotherqubitcheck",
                "false"
              ],
              [
                "test_usingqx_sparseunitary",
                "false"
              ],
              [
                "test_non_90_degree_angle",
                "false"
              ],
              [
                "test_unitary_called_hadamard",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_usingqx_10",
                "true"
              ],
              [
                "test_extremelysparseunitary",
                "true"
              ],
              [
                "test_decomposition_rotatedtoffoli",
                "true"
              ],
              [
                "test_unitary_decompose_X",
                "true"
              ],
              [
                "test_usingqx_fullyentangled_4qubit",
                "true"
              ],
              [
                "test_usingqx_00",
                "true"
              ],
              [
                "test_decomposition_controlled_U",
                "true"
              ],
              [
                "test_unitary_wrongnumberofqubits_toofew",
                "false"
              ],
              [
                "test_unitary_decompose_IYZ_differentorder",
                "true"
              ],
              [
                "test_adding2tothepower6unitary",
                "false"
              ],
              [
                "test_unitary_decompose_2qubit_CNOT_2",
                "true"
              ],
              [
                "test_usingqx_bellstate",
                "true"
              ],
              [
                "test_unitary_decompose_Y",
                "true"
              ],
              [
                "test_decomposition_toffoli",
                "true"
              ],
              [
                "test_unitary_decompose_Z",
                "true"
              ],
              [
                "test_unitary_decompose_I",
                "true"
              ],
              [
                "test_usingqx_01",
                "true"
              ],
              [
                "test_unitary_basic",
                "false"
              ],
              [
                "test_unitary_undecomposed",
                "false"
              ],
              [
                "test_usingqx_fullyentangled",
                "true"
              ],
              [
                "test_unitary_decompose_IYZ",
                "true"
              ],
              [
                "test_usingqx_11",
                "true"
              ],
              [
                "test_sparse2qubitunitary",
                "true"
              ],
              [
                "test_usingqx_fullyentangled_5qubit_10011",
                "true"
              ],
              [
                "test_sparse2qubit_multiplexor",
                "true"
              ],
              [
                "test_unitary_decompose_2qubit_CNOT",
                "true"
              ],
              [
                "test_usingqx_fullyentangled_5qubit",
                "true"
              ],
              [
                "test_decomposition_mscthesisaritra",
                "true"
              ],
              [
                "test_sparse2qubitunitaryotherqubit",
                "true"
              ],
              [
                "test_unitary_decompose_nonunitary",
                "false"
              ],
              [
                "test_unitary_decompose_matrixinsteadofarray",
                "false"
              ],
              [
                "test_unitary_wrongnumberofqubits",
                "false"
              ],
              [
                "test_usingqx_fullyentangled_3qubit",
                "true"
              ],
              [
                "test_sparse2qubitunitaryotherqubitcheck",
                "true"
              ],
              [
                "test_usingqx_sparseunitary",
                "true"
              ],
              [
                "test_non_90_degree_angle",
                "true"
              ],
              [
                "test_unitary_called_hadamard",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_usingqx_10",
                  "0"
                ],
                [
                  "test_extremelysparseunitary",
                  "0"
                ],
                [
                  "test_decomposition_rotatedtoffoli",
                  "0"
                ],
                [
                  "test_unitary_decompose_X",
                  "0"
                ],
                [
                  "test_usingqx_fullyentangled_4qubit",
                  "0"
                ],
                [
                  "test_usingqx_00",
                  "0"
                ],
                [
                  "test_decomposition_controlled_U",
                  "0"
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "0"
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "0"
                ],
                [
                  "test_adding2tothepower6unitary",
                  "0"
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "0"
                ],
                [
                  "test_usingqx_bellstate",
                  "0"
                ],
                [
                  "test_unitary_decompose_Y",
                  "0"
                ],
                [
                  "test_decomposition_toffoli",
                  "0"
                ],
                [
                  "test_unitary_decompose_Z",
                  "0"
                ],
                [
                  "test_unitary_decompose_I",
                  "0"
                ],
                [
                  "test_usingqx_01",
                  "0"
                ],
                [
                  "test_unitary_basic",
                  "0"
                ],
                [
                  "test_unitary_undecomposed",
                  "0"
                ],
                [
                  "test_usingqx_fullyentangled",
                  "0"
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "0"
                ],
                [
                  "test_usingqx_11",
                  "0"
                ],
                [
                  "test_sparse2qubitunitary",
                  "0"
                ],
                [
                  "test_usingqx_fullyentangled_5qubit_10011",
                  "0"
                ],
                [
                  "test_sparse2qubit_multiplexor",
                  "0"
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "0"
                ],
                [
                  "test_usingqx_fullyentangled_5qubit",
                  "0"
                ],
                [
                  "test_decomposition_mscthesisaritra",
                  "0"
                ],
                [
                  "test_sparse2qubitunitaryotherqubit",
                  "0"
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "0"
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "0"
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "0"
                ],
                [
                  "test_usingqx_fullyentangled_3qubit",
                  "0"
                ],
                [
                  "test_sparse2qubitunitaryotherqubitcheck",
                  "0"
                ],
                [
                  "test_usingqx_sparseunitary",
                  "0"
                ],
                [
                  "test_non_90_degree_angle",
                  "0"
                ],
                [
                  "test_unitary_called_hadamard",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_usingqx_10",
                  "0"
                ],
                [
                  "test_extremelysparseunitary",
                  "0"
                ],
                [
                  "test_decomposition_rotatedtoffoli",
                  "0"
                ],
                [
                  "test_unitary_decompose_X",
                  "0"
                ],
                [
                  "test_usingqx_fullyentangled_4qubit",
                  "0"
                ],
                [
                  "test_usingqx_00",
                  "0"
                ],
                [
                  "test_decomposition_controlled_U",
                  "0"
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "0"
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "0"
                ],
                [
                  "test_adding2tothepower6unitary",
                  "0"
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "0"
                ],
                [
                  "test_usingqx_bellstate",
                  "0"
                ],
                [
                  "test_unitary_decompose_Y",
                  "0"
                ],
                [
                  "test_decomposition_toffoli",
                  "0"
                ],
                [
                  "test_unitary_decompose_Z",
                  "0"
                ],
                [
                  "test_unitary_decompose_I",
                  "0"
                ],
                [
                  "test_usingqx_01",
                  "0"
                ],
                [
                  "test_unitary_basic",
                  "0"
                ],
                [
                  "test_unitary_undecomposed",
                  "0"
                ],
                [
                  "test_usingqx_fullyentangled",
                  "0"
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "0"
                ],
                [
                  "test_usingqx_11",
                  "0"
                ],
                [
                  "test_sparse2qubitunitary",
                  "0"
                ],
                [
                  "test_usingqx_fullyentangled_5qubit_10011",
                  "0"
                ],
                [
                  "test_sparse2qubit_multiplexor",
                  "0"
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "0"
                ],
                [
                  "test_usingqx_fullyentangled_5qubit",
                  "0"
                ],
                [
                  "test_decomposition_mscthesisaritra",
                  "0"
                ],
                [
                  "test_sparse2qubitunitaryotherqubit",
                  "0"
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "0"
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "0"
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "0"
                ],
                [
                  "test_usingqx_fullyentangled_3qubit",
                  "0"
                ],
                [
                  "test_sparse2qubitunitaryotherqubitcheck",
                  "0"
                ],
                [
                  "test_usingqx_sparseunitary",
                  "0"
                ],
                [
                  "test_non_90_degree_angle",
                  "0"
                ],
                [
                  "test_unitary_called_hadamard",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_usingqx_10",
                "false"
              ],
              [
                "test_extremelysparseunitary",
                "false"
              ],
              [
                "test_decomposition_rotatedtoffoli",
                "false"
              ],
              [
                "test_unitary_decompose_X",
                "false"
              ],
              [
                "test_usingqx_fullyentangled_4qubit",
                "false"
              ],
              [
                "test_usingqx_00",
                "false"
              ],
              [
                "test_decomposition_controlled_U",
                "false"
              ],
              [
                "test_unitary_wrongnumberofqubits_toofew",
                "false"
              ],
              [
                "test_unitary_decompose_IYZ_differentorder",
                "false"
              ],
              [
                "test_adding2tothepower6unitary",
                "false"
              ],
              [
                "test_unitary_decompose_2qubit_CNOT_2",
                "false"
              ],
              [
                "test_usingqx_bellstate",
                "false"
              ],
              [
                "test_unitary_decompose_Y",
                "false"
              ],
              [
                "test_decomposition_toffoli",
                "false"
              ],
              [
                "test_unitary_decompose_Z",
                "false"
              ],
              [
                "test_unitary_decompose_I",
                "false"
              ],
              [
                "test_usingqx_01",
                "false"
              ],
              [
                "test_unitary_basic",
                "false"
              ],
              [
                "test_unitary_undecomposed",
                "false"
              ],
              [
                "test_usingqx_fullyentangled",
                "false"
              ],
              [
                "test_unitary_decompose_IYZ",
                "false"
              ],
              [
                "test_usingqx_11",
                "false"
              ],
              [
                "test_sparse2qubitunitary",
                "false"
              ],
              [
                "test_usingqx_fullyentangled_5qubit_10011",
                "false"
              ],
              [
                "test_sparse2qubit_multiplexor",
                "false"
              ],
              [
                "test_unitary_decompose_2qubit_CNOT",
                "false"
              ],
              [
                "test_usingqx_fullyentangled_5qubit",
                "false"
              ],
              [
                "test_decomposition_mscthesisaritra",
                "false"
              ],
              [
                "test_sparse2qubitunitaryotherqubit",
                "false"
              ],
              [
                "test_unitary_decompose_nonunitary",
                "false"
              ],
              [
                "test_unitary_decompose_matrixinsteadofarray",
                "false"
              ],
              [
                "test_unitary_wrongnumberofqubits",
                "false"
              ],
              [
                "test_usingqx_fullyentangled_3qubit",
                "false"
              ],
              [
                "test_sparse2qubitunitaryotherqubitcheck",
                "false"
              ],
              [
                "test_usingqx_sparseunitary",
                "false"
              ],
              [
                "test_non_90_degree_angle",
                "false"
              ],
              [
                "test_unitary_called_hadamard",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_usingqx_10",
                "false"
              ],
              [
                "test_extremelysparseunitary",
                "false"
              ],
              [
                "test_decomposition_rotatedtoffoli",
                "false"
              ],
              [
                "test_unitary_decompose_X",
                "false"
              ],
              [
                "test_usingqx_fullyentangled_4qubit",
                "false"
              ],
              [
                "test_usingqx_00",
                "false"
              ],
              [
                "test_decomposition_controlled_U",
                "false"
              ],
              [
                "test_unitary_wrongnumberofqubits_toofew",
                "false"
              ],
              [
                "test_unitary_decompose_IYZ_differentorder",
                "false"
              ],
              [
                "test_adding2tothepower6unitary",
                "false"
              ],
              [
                "test_unitary_decompose_2qubit_CNOT_2",
                "false"
              ],
              [
                "test_usingqx_bellstate",
                "false"
              ],
              [
                "test_unitary_decompose_Y",
                "false"
              ],
              [
                "test_decomposition_toffoli",
                "false"
              ],
              [
                "test_unitary_decompose_Z",
                "false"
              ],
              [
                "test_unitary_decompose_I",
                "false"
              ],
              [
                "test_usingqx_01",
                "false"
              ],
              [
                "test_unitary_basic",
                "false"
              ],
              [
                "test_unitary_undecomposed",
                "false"
              ],
              [
                "test_usingqx_fullyentangled",
                "false"
              ],
              [
                "test_unitary_decompose_IYZ",
                "false"
              ],
              [
                "test_usingqx_11",
                "false"
              ],
              [
                "test_sparse2qubitunitary",
                "false"
              ],
              [
                "test_usingqx_fullyentangled_5qubit_10011",
                "false"
              ],
              [
                "test_sparse2qubit_multiplexor",
                "false"
              ],
              [
                "test_unitary_decompose_2qubit_CNOT",
                "false"
              ],
              [
                "test_usingqx_fullyentangled_5qubit",
                "false"
              ],
              [
                "test_decomposition_mscthesisaritra",
                "false"
              ],
              [
                "test_sparse2qubitunitaryotherqubit",
                "false"
              ],
              [
                "test_unitary_decompose_nonunitary",
                "false"
              ],
              [
                "test_unitary_decompose_matrixinsteadofarray",
                "false"
              ],
              [
                "test_unitary_wrongnumberofqubits",
                "false"
              ],
              [
                "test_usingqx_fullyentangled_3qubit",
                "false"
              ],
              [
                "test_sparse2qubitunitaryotherqubitcheck",
                "false"
              ],
              [
                "test_usingqx_sparseunitary",
                "false"
              ],
              [
                "test_non_90_degree_angle",
                "false"
              ],
              [
                "test_unitary_called_hadamard",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_usingqx_10",
                "4"
              ],
              [
                "test_extremelysparseunitary",
                "16"
              ],
              [
                "test_decomposition_rotatedtoffoli",
                "8"
              ],
              [
                "test_unitary_decompose_X",
                "2"
              ],
              [
                "test_usingqx_fullyentangled_4qubit",
                "16"
              ],
              [
                "test_usingqx_00",
                "4"
              ],
              [
                "test_decomposition_controlled_U",
                "8"
              ],
              [
                "test_unitary_wrongnumberofqubits_toofew",
                "2"
              ],
              [
                "test_unitary_decompose_IYZ_differentorder",
                "2"
              ],
              [
                "test_adding2tothepower6unitary",
                "0"
              ],
              [
                "test_unitary_decompose_2qubit_CNOT_2",
                "2"
              ],
              [
                "test_usingqx_bellstate",
                "4"
              ],
              [
                "test_unitary_decompose_Y",
                "2"
              ],
              [
                "test_decomposition_toffoli",
                "8"
              ],
              [
                "test_unitary_decompose_Z",
                "2"
              ],
              [
                "test_unitary_decompose_I",
                "2"
              ],
              [
                "test_usingqx_01",
                "4"
              ],
              [
                "test_unitary_basic",
                "0"
              ],
              [
                "test_unitary_undecomposed",
                "2"
              ],
              [
                "test_usingqx_fullyentangled",
                "4"
              ],
              [
                "test_unitary_decompose_IYZ",
                "2"
              ],
              [
                "test_usingqx_11",
                "4"
              ],
              [
                "test_sparse2qubitunitary",
                "4"
              ],
              [
                "test_usingqx_fullyentangled_5qubit_10011",
                "32"
              ],
              [
                "test_sparse2qubit_multiplexor",
                "4"
              ],
              [
                "test_unitary_decompose_2qubit_CNOT",
                "2"
              ],
              [
                "test_usingqx_fullyentangled_5qubit",
                "32"
              ],
              [
                "test_decomposition_mscthesisaritra",
                "16"
              ],
              [
                "test_sparse2qubitunitaryotherqubit",
                "4"
              ],
              [
                "test_unitary_decompose_nonunitary",
                "2"
              ],
              [
                "test_unitary_decompose_matrixinsteadofarray",
                "1"
              ],
              [
                "test_unitary_wrongnumberofqubits",
                "2"
              ],
              [
                "test_usingqx_fullyentangled_3qubit",
                "8"
              ],
              [
                "test_sparse2qubitunitaryotherqubitcheck",
                "2"
              ],
              [
                "test_usingqx_sparseunitary",
                "16"
              ],
              [
                "test_non_90_degree_angle",
                "4"
              ],
              [
                "test_unitary_called_hadamard",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_usingqx_10",
                [
                  "p",
                  "num_qubits",
                  "k",
                  "matrix",
                  "u1",
                  "c0"
                ]
              ],
              [
                "test_extremelysparseunitary",
                [
                  "p",
                  "num_qubits",
                  "k",
                  "matrix",
                  "u1",
                  "c0"
                ]
              ],
              [
                "test_decomposition_rotatedtoffoli",
                [
                  "p",
                  "num_qubits",
                  "k",
                  "matrix",
                  "u1",
                  "c0"
                ]
              ],
              [
                "test_unitary_decompose_X",
                [
                  "p",
                  "num_qubits",
                  "u",
                  "k",
                  "matrix",
                  "c0"
                ]
              ],
              [
                "test_usingqx_fullyentangled_4qubit",
                [
                  "p",
                  "num_qubits",
                  "k",
                  "matrix",
                  "u1",
                  "c0"
                ]
              ],
              [
                "test_usingqx_00",
                [
                  "p",
                  "num_qubits",
                  "k",
                  "matrix",
                  "u1",
                  "c0"
                ]
              ],
              [
                "test_decomposition_controlled_U",
                [
                  "p",
                  "num_qubits",
                  "k",
                  "matrix",
                  "u1",
                  "c0"
                ]
              ],
              [
                "test_unitary_wrongnumberofqubits_toofew",
                [
                  "p",
                  "num_qubits",
                  "u",
                  "k"
                ]
              ],
              [
                "test_unitary_decompose_IYZ_differentorder",
                [
                  "p",
                  "num_qubits",
                  "u",
                  "k",
                  "u1",
                  "u2",
                  "c0"
                ]
              ],
              [
                "test_adding2tothepower6unitary",
                [
                  "p",
                  "num_qubits",
                  "k",
                  "matrix",
                  "u1"
                ]
              ],
              [
                "test_unitary_decompose_2qubit_CNOT_2",
                [
                  "p",
                  "num_qubits",
                  "u",
                  "k",
                  "matrix",
                  "c0"
                ]
              ],
              [
                "test_usingqx_bellstate",
                [
                  "p",
                  "num_qubits",
                  "k",
                  "matrix",
                  "u1",
                  "c0"
                ]
              ],
              [
                "test_unitary_decompose_Y",
                [
                  "p",
                  "num_qubits",
                  "u",
                  "k",
                  "matrix",
                  "c0"
                ]
              ],
              [
                "test_decomposition_toffoli",
                [
                  "p",
                  "num_qubits",
                  "k",
                  "matrix",
                  "u1",
                  "c0"
                ]
              ],
              [
                "test_unitary_decompose_Z",
                [
                  "p",
                  "num_qubits",
                  "u",
                  "k",
                  "matrix",
                  "c0"
                ]
              ],
              [
                "test_unitary_decompose_I",
                [
                  "p",
                  "num_qubits",
                  "u",
                  "k",
                  "matrix",
                  "c0"
                ]
              ],
              [
                "test_usingqx_01",
                [
                  "p",
                  "num_qubits",
                  "k",
                  "matrix",
                  "u1",
                  "c0"
                ]
              ],
              [
                "test_unitary_basic",
                [
                  "p",
                  "num_qubits",
                  "u",
                  "k"
                ]
              ],
              [
                "test_unitary_undecomposed",
                [
                  "p",
                  "num_qubits",
                  "u",
                  "k"
                ]
              ],
              [
                "test_usingqx_fullyentangled",
                [
                  "p",
                  "num_qubits",
                  "k",
                  "matrix",
                  "u1",
                  "c0"
                ]
              ],
              [
                "test_unitary_decompose_IYZ",
                [
                  "p",
                  "num_qubits",
                  "u",
                  "k",
                  "c0"
                ]
              ],
              [
                "test_usingqx_11",
                [
                  "p",
                  "num_qubits",
                  "k",
                  "matrix",
                  "u1",
                  "c0"
                ]
              ],
              [
                "test_sparse2qubitunitary",
                [
                  "p",
                  "num_qubits",
                  "k",
                  "matrix",
                  "u1",
                  "c0"
                ]
              ],
              [
                "test_usingqx_fullyentangled_5qubit_10011",
                [
                  "p",
                  "num_qubits",
                  "k",
                  "matrix",
                  "u1",
                  "c0"
                ]
              ],
              [
                "test_sparse2qubit_multiplexor",
                [
                  "p",
                  "num_qubits",
                  "k",
                  "matrix",
                  "u1",
                  "c0"
                ]
              ],
              [
                "test_unitary_decompose_2qubit_CNOT",
                [
                  "p",
                  "num_qubits",
                  "u",
                  "k",
                  "matrix",
                  "c0"
                ]
              ],
              [
                "test_usingqx_fullyentangled_5qubit",
                [
                  "p",
                  "num_qubits",
                  "k",
                  "matrix",
                  "u1",
                  "c0"
                ]
              ],
              [
                "test_decomposition_mscthesisaritra",
                [
                  "p",
                  "num_qubits",
                  "k",
                  "matrix",
                  "u1",
                  "c0"
                ]
              ],
              [
                "test_sparse2qubitunitaryotherqubit",
                [
                  "p",
                  "num_qubits",
                  "k",
                  "matrix",
                  "u1",
                  "c0"
                ]
              ],
              [
                "test_unitary_decompose_nonunitary",
                [
                  "p",
                  "num_qubits",
                  "u",
                  "k"
                ]
              ],
              [
                "test_unitary_decompose_matrixinsteadofarray",
                [
                  "p",
                  "num_qubits",
                  "u",
                  "k"
                ]
              ],
              [
                "test_unitary_wrongnumberofqubits",
                [
                  "p",
                  "num_qubits",
                  "u",
                  "k"
                ]
              ],
              [
                "test_usingqx_fullyentangled_3qubit",
                [
                  "p",
                  "num_qubits",
                  "k",
                  "matrix",
                  "u1",
                  "c0"
                ]
              ],
              [
                "test_sparse2qubitunitaryotherqubitcheck",
                [
                  "p",
                  "num_qubits",
                  "k",
                  "matrix",
                  "u1",
                  "c0"
                ]
              ],
              [
                "test_usingqx_sparseunitary",
                [
                  "p",
                  "num_qubits",
                  "k",
                  "matrix",
                  "u1",
                  "c0"
                ]
              ],
              [
                "test_non_90_degree_angle",
                [
                  "p",
                  "num_qubits",
                  "k",
                  "matrix",
                  "u1",
                  "c0"
                ]
              ],
              [
                "test_unitary_called_hadamard",
                [
                  "p",
                  "num_qubits",
                  "u",
                  "k"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_usingqx_10",
                []
              ],
              [
                "test_extremelysparseunitary",
                []
              ],
              [
                "test_decomposition_rotatedtoffoli",
                []
              ],
              [
                "test_unitary_decompose_X",
                []
              ],
              [
                "test_usingqx_fullyentangled_4qubit",
                []
              ],
              [
                "test_usingqx_00",
                []
              ],
              [
                "test_decomposition_controlled_U",
                []
              ],
              [
                "test_unitary_wrongnumberofqubits_toofew",
                []
              ],
              [
                "test_unitary_decompose_IYZ_differentorder",
                []
              ],
              [
                "test_adding2tothepower6unitary",
                []
              ],
              [
                "test_unitary_decompose_2qubit_CNOT_2",
                []
              ],
              [
                "test_usingqx_bellstate",
                []
              ],
              [
                "test_unitary_decompose_Y",
                []
              ],
              [
                "test_decomposition_toffoli",
                []
              ],
              [
                "test_unitary_decompose_Z",
                []
              ],
              [
                "test_unitary_decompose_I",
                []
              ],
              [
                "test_usingqx_01",
                []
              ],
              [
                "test_unitary_basic",
                []
              ],
              [
                "test_unitary_undecomposed",
                []
              ],
              [
                "test_usingqx_fullyentangled",
                []
              ],
              [
                "test_unitary_decompose_IYZ",
                []
              ],
              [
                "test_usingqx_11",
                []
              ],
              [
                "test_sparse2qubitunitary",
                []
              ],
              [
                "test_usingqx_fullyentangled_5qubit_10011",
                []
              ],
              [
                "test_sparse2qubit_multiplexor",
                []
              ],
              [
                "test_unitary_decompose_2qubit_CNOT",
                []
              ],
              [
                "test_usingqx_fullyentangled_5qubit",
                []
              ],
              [
                "test_decomposition_mscthesisaritra",
                []
              ],
              [
                "test_sparse2qubitunitaryotherqubit",
                []
              ],
              [
                "test_unitary_decompose_nonunitary",
                []
              ],
              [
                "test_unitary_decompose_matrixinsteadofarray",
                []
              ],
              [
                "test_unitary_wrongnumberofqubits",
                []
              ],
              [
                "test_usingqx_fullyentangled_3qubit",
                []
              ],
              [
                "test_sparse2qubitunitaryotherqubitcheck",
                []
              ],
              [
                "test_usingqx_sparseunitary",
                []
              ],
              [
                "test_non_90_degree_angle",
                []
              ],
              [
                "test_unitary_called_hadamard",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6724422302107377,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_unitary_decompose_IYZ",
                  "test_unitary_decompose_nonunitary",
                  0.8816708948452654
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.5844259721125409
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_extremelysparseunitary",
                  0.5746664862549111
                ],
                [
                  "test_unitary_basic",
                  "test_sparse2qubitunitary",
                  0.7028399063792063
                ],
                [
                  "test_extremelysparseunitary",
                  "test_decomposition_toffoli",
                  0.692220554002098
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.7121751046520907
                ],
                [
                  "test_usingqx_00",
                  "test_sparse2qubit_multiplexor",
                  0.8318873679944235
                ],
                [
                  "test_usingqx_10",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.8263805863350062
                ],
                [
                  "test_usingqx_11",
                  "test_adding2tothepower6unitary",
                  0.7100706237449722
                ],
                [
                  "test_unitary_basic",
                  "test_usingqx_fullyentangled_5qubit_10011",
                  0.4704980580943823
                ],
                [
                  "test_usingqx_fullyentangled_3qubit",
                  "test_decomposition_rotatedtoffoli",
                  0.4809749070180476
                ],
                [
                  "test_unitary_basic",
                  "test_non_90_degree_angle",
                  0.6596113857984736
                ],
                [
                  "test_usingqx_sparseunitary",
                  "test_sparse2qubitunitary",
                  0.7102753102062656
                ],
                [
                  "test_unitary_basic",
                  "test_unitary_decompose_matrixinsteadofarray",
                  0.6015757458195959
                ],
                [
                  "test_unitary_basic",
                  "test_usingqx_11",
                  0.6256105515605641
                ],
                [
                  "test_usingqx_fullyentangled_4qubit",
                  "test_extremelysparseunitary",
                  0.8452675490742013
                ],
                [
                  "test_non_90_degree_angle",
                  "test_usingqx_00",
                  0.9861585802917933
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "test_usingqx_fullyentangled_4qubit",
                  0.5852101733188978
                ],
                [
                  "test_non_90_degree_angle",
                  "test_decomposition_controlled_U",
                  0.4986974500208453
                ],
                [
                  "test_usingqx_fullyentangled_3qubit",
                  "test_usingqx_fullyentangled_5qubit",
                  0.9202950593070981
                ],
                [
                  "test_unitary_basic",
                  "test_unitary_called_hadamard",
                  0.9542840239802591
                ],
                [
                  "test_unitary_decompose_I",
                  "test_decomposition_toffoli",
                  0.546778766754087
                ],
                [
                  "test_unitary_decompose_X",
                  "test_unitary_decompose_IYZ_differentorder",
                  0.8829123432457016
                ],
                [
                  "test_adding2tothepower6unitary",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.4561725615971311
                ],
                [
                  "test_sparse2qubitunitaryotherqubit",
                  "test_sparse2qubit_multiplexor",
                  0.8911976869567163
                ],
                [
                  "test_usingqx_fullyentangled_3qubit",
                  "test_usingqx_sparseunitary",
                  0.9416510955518298
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_unitary_wrongnumberofqubits",
                  0.8833153802454167
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_decomposition_toffoli",
                  0.32309174186408457
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_usingqx_11",
                  0.7225090015334329
                ],
                [
                  "test_non_90_degree_angle",
                  "test_usingqx_10",
                  0.9856879499173732
                ],
                [
                  "test_sparse2qubitunitary",
                  "test_decomposition_toffoli",
                  0.604232505057035
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_non_90_degree_angle",
                  0.7627415992316533
                ],
                [
                  "test_unitary_decompose_I",
                  "test_unitary_decompose_Z",
                  0.9123735380384211
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_usingqx_fullyentangled_5qubit_10011",
                  0.5723376252204204
                ],
                [
                  "test_unitary_undecomposed",
                  "test_usingqx_bellstate",
                  0.6160497505664226
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_unitary_decompose_IYZ",
                  0.8802240780281025
                ],
                [
                  "test_unitary_undecomposed",
                  "test_sparse2qubitunitary",
                  0.6984013999128695
                ],
                [
                  "test_unitary_decompose_X",
                  "test_unitary_decompose_IYZ",
                  0.8839364750195615
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_usingqx_fullyentangled_3qubit",
                  0.569729251754906
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_decomposition_mscthesisaritra",
                  0.48940219306973803
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_unitary_decompose_X",
                  0.8470451234983574
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_unitary_decompose_IYZ_differentorder",
                  0.8823402626000264
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_sparse2qubit_multiplexor",
                  0.6620847929973789
                ],
                [
                  "test_unitary_undecomposed",
                  "test_unitary_decompose_matrixinsteadofarray",
                  0.6310247986646063
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "test_usingqx_00",
                  0.592639505311114
                ],
                [
                  "test_unitary_undecomposed",
                  "test_non_90_degree_angle",
                  0.6490803498782969
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "test_unitary_decompose_2qubit_CNOT_2",
                  0.8572050794075827
                ],
                [
                  "test_usingqx_01",
                  "test_sparse2qubitunitaryotherqubit",
                  0.885000990566466
                ],
                [
                  "test_usingqx_11",
                  "test_decomposition_mscthesisaritra",
                  0.5720318557644891
                ],
                [
                  "test_usingqx_fullyentangled_5qubit",
                  "test_usingqx_fullyentangled_5qubit_10011",
                  0.9999369657048357
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_usingqx_fullyentangled_5qubit",
                  0.49134526490210406
                ],
                [
                  "test_usingqx_00",
                  "test_usingqx_sparseunitary",
                  0.8496215041565477
                ],
                [
                  "test_usingqx_11",
                  "test_usingqx_sparseunitary",
                  0.8463585593703418
                ],
                [
                  "test_unitary_basic",
                  "test_usingqx_fullyentangled",
                  0.5765937359669769
                ],
                [
                  "test_usingqx_00",
                  "test_usingqx_fullyentangled_5qubit",
                  0.8640240083509603
                ],
                [
                  "test_unitary_decompose_X",
                  "test_sparse2qubitunitaryotherqubit",
                  0.8200372979510081
                ],
                [
                  "test_unitary_undecomposed",
                  "test_usingqx_11",
                  0.6126877437000593
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_unitary_decompose_nonunitary",
                  0.6180499731162572
                ],
                [
                  "test_usingqx_fullyentangled_5qubit",
                  "test_sparse2qubitunitary",
                  0.7006364396062881
                ],
                [
                  "test_unitary_decompose_I",
                  "test_extremelysparseunitary",
                  0.48097145593546714
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_unitary_decompose_2qubit_CNOT",
                  0.8681383033043258
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_usingqx_sparseunitary",
                  0.4979536173053814
                ],
                [
                  "test_unitary_basic",
                  "test_unitary_decompose_nonunitary",
                  0.8793850117268964
                ],
                [
                  "test_unitary_decompose_X",
                  "test_extremelysparseunitary",
                  0.45718195886174473
                ],
                [
                  "test_sparse2qubit_multiplexor",
                  "test_decomposition_controlled_U",
                  0.7970580511146061
                ],
                [
                  "test_unitary_undecomposed",
                  "test_usingqx_fullyentangled_5qubit_10011",
                  0.4536664382069312
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_unitary_decompose_I",
                  0.8227867671267413
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_usingqx_01",
                  0.6318516355925617
                ],
                [
                  "test_usingqx_01",
                  "test_extremelysparseunitary",
                  0.688236951244367
                ],
                [
                  "test_usingqx_fullyentangled_5qubit",
                  "test_decomposition_toffoli",
                  0.21137351676997182
                ],
                [
                  "test_decomposition_controlled_U",
                  "test_decomposition_mscthesisaritra",
                  0.7328893692703513
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_unitary_decompose_Z",
                  0.5996040412497115
                ],
                [
                  "test_sparse2qubit_multiplexor",
                  "test_decomposition_mscthesisaritra",
                  0.7362846437629071
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.8841210764217927
                ],
                [
                  "test_usingqx_bellstate",
                  "test_usingqx_fullyentangled_5qubit_10011",
                  0.8608320086654414
                ],
                [
                  "test_unitary_undecomposed",
                  "test_unitary_wrongnumberofqubits_toofew",
                  0.6781486813847738
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.699448297451587
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "test_decomposition_controlled_U",
                  0.5619083468721574
                ],
                [
                  "test_unitary_undecomposed",
                  "test_unitary_decompose_nonunitary",
                  0.8888009275760673
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_sparse2qubitunitary",
                  0.8300152896045977
                ],
                [
                  "test_usingqx_fullyentangled_3qubit",
                  "test_sparse2qubit_multiplexor",
                  0.7846555589088446
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_usingqx_fullyentangled",
                  0.8814013551721103
                ],
                [
                  "test_usingqx_10",
                  "test_usingqx_fullyentangled_4qubit",
                  0.8488570856636048
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_unitary_decompose_IYZ_differentorder",
                  0.8792561045474044
                ],
                [
                  "test_usingqx_fullyentangled",
                  "test_decomposition_mscthesisaritra",
                  0.6760197630176314
                ],
                [
                  "test_non_90_degree_angle",
                  "test_usingqx_fullyentangled_5qubit",
                  0.8466984714091678
                ],
                [
                  "test_unitary_decompose_I",
                  "test_usingqx_fullyentangled",
                  0.6679499872297774
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "test_decomposition_controlled_U",
                  0.5691112187110994
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_unitary_decompose_matrixinsteadofarray",
                  0.28672635239414296
                ],
                [
                  "test_sparse2qubitunitaryotherqubit",
                  "test_decomposition_rotatedtoffoli",
                  0.6120386564809454
                ],
                [
                  "test_unitary_basic",
                  "test_decomposition_toffoli",
                  0.4396034060943825
                ],
                [
                  "test_extremelysparseunitary",
                  "test_sparse2qubitunitary",
                  0.7626353807011353
                ],
                [
                  "test_usingqx_fullyentangled_5qubit_10011",
                  "test_decomposition_mscthesisaritra",
                  0.4826809739160697
                ],
                [
                  "test_non_90_degree_angle",
                  "test_usingqx_fullyentangled_4qubit",
                  0.8406775828009886
                ],
                [
                  "test_unitary_decompose_I",
                  "test_non_90_degree_angle",
                  0.7533064320019756
                ],
                [
                  "test_usingqx_fullyentangled_5qubit_10011",
                  "test_sparse2qubitunitary",
                  0.7026493208874758
                ],
                [
                  "test_adding2tothepower6unitary",
                  "test_decomposition_controlled_U",
                  0.2097538568019419
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_unitary_decompose_2qubit_CNOT",
                  0.822507464877614
                ],
                [
                  "test_usingqx_fullyentangled_5qubit_10011",
                  "test_usingqx_sparseunitary",
                  0.8433115267919378
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_usingqx_bellstate",
                  0.6529990111183398
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "test_usingqx_01",
                  0.7118103197511437
                ],
                [
                  "test_unitary_undecomposed",
                  "test_sparse2qubit_multiplexor",
                  0.6376258925988956
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_usingqx_01",
                  0.6653645026124154
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "test_usingqx_10",
                  0.7118103197511437
                ],
                [
                  "test_usingqx_00",
                  "test_adding2tothepower6unitary",
                  0.7140616844444788
                ],
                [
                  "test_usingqx_fullyentangled_5qubit_10011",
                  "test_decomposition_rotatedtoffoli",
                  0.22435935186422756
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_unitary_decompose_IYZ",
                  0.8746903043711437
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "test_usingqx_01",
                  0.5936223130612331
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_usingqx_fullyentangled_3qubit",
                  0.5787140615210613
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_usingqx_fullyentangled_3qubit",
                  0.45865393363043944
                ],
                [
                  "test_usingqx_fullyentangled_3qubit",
                  "test_decomposition_controlled_U",
                  0.5314981863616036
                ],
                [
                  "test_usingqx_bellstate",
                  "test_usingqx_fullyentangled",
                  0.9556604271891651
                ],
                [
                  "test_unitary_decompose_X",
                  "test_unitary_decompose_Z",
                  0.9332133687101603
                ],
                [
                  "test_unitary_decompose_X",
                  "test_decomposition_toffoli",
                  0.5579861796921831
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "test_adding2tothepower6unitary",
                  0.34158519491289574
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "test_decomposition_mscthesisaritra",
                  0.46497153696918
                ],
                [
                  "test_usingqx_fullyentangled_5qubit",
                  "test_extremelysparseunitary",
                  0.6295799560599529
                ],
                [
                  "test_usingqx_fullyentangled",
                  "test_decomposition_rotatedtoffoli",
                  0.5416771474626711
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_sparse2qubitunitaryotherqubit",
                  0.8226943781155927
                ],
                [
                  "test_usingqx_00",
                  "test_usingqx_10",
                  0.9995341400298768
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.7010727239611693
                ],
                [
                  "test_non_90_degree_angle",
                  "test_usingqx_sparseunitary",
                  0.8400427454126268
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_usingqx_00",
                  0.6488405297285749
                ],
                [
                  "test_usingqx_fullyentangled",
                  "test_sparse2qubitunitary",
                  0.824816408964758
                ],
                [
                  "test_adding2tothepower6unitary",
                  "test_sparse2qubitunitaryotherqubit",
                  0.5690169033637494
                ],
                [
                  "test_usingqx_00",
                  "test_decomposition_rotatedtoffoli",
                  0.39648990731906125
                ],
                [
                  "test_usingqx_11",
                  "test_decomposition_controlled_U",
                  0.44799273139305
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "test_usingqx_fullyentangled_4qubit",
                  0.4436942790023281
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_sparse2qubitunitaryotherqubit",
                  0.7557236664404412
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_usingqx_bellstate",
                  0.7370187519714925
                ],
                [
                  "test_usingqx_fullyentangled",
                  "test_usingqx_sparseunitary",
                  0.9104232347892837
                ],
                [
                  "test_usingqx_00",
                  "test_decomposition_mscthesisaritra",
                  0.5737187618995974
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_unitary_decompose_matrixinsteadofarray",
                  0.46140901436785
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "test_usingqx_10",
                  0.5936223130612331
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "test_decomposition_controlled_U",
                  0.5735527268657227
                ],
                [
                  "test_usingqx_fullyentangled_5qubit_10011",
                  "test_sparse2qubit_multiplexor",
                  0.6600399098527514
                ],
                [
                  "test_sparse2qubitunitaryotherqubitcheck",
                  "test_decomposition_rotatedtoffoli",
                  0.5074335402853863
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "test_sparse2qubitunitaryotherqubit",
                  0.43171786590846556
                ],
                [
                  "test_unitary_basic",
                  "test_unitary_undecomposed",
                  0.9153631044228746
                ],
                [
                  "test_unitary_basic",
                  "test_sparse2qubit_multiplexor",
                  0.6428588872058654
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_extremelysparseunitary",
                  0.47347545162898524
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_unitary_decompose_Y",
                  0.8428163408314611
                ],
                [
                  "test_sparse2qubitunitaryotherqubit",
                  "test_decomposition_mscthesisaritra",
                  0.6125656245384645
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "test_decomposition_rotatedtoffoli",
                  0.366266325543087
                ],
                [
                  "test_usingqx_sparseunitary",
                  "test_sparse2qubit_multiplexor",
                  0.7898593160723735
                ],
                [
                  "test_unitary_undecomposed",
                  "test_usingqx_fullyentangled_5qubit",
                  0.45431366015770164
                ],
                [
                  "test_sparse2qubitunitaryotherqubitcheck",
                  "test_sparse2qubit_multiplexor",
                  0.7857350966047397
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "test_usingqx_fullyentangled_5qubit",
                  0.07969573430825981
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "test_usingqx_fullyentangled_5qubit",
                  0.5771500967368224
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "test_usingqx_00",
                  0.7118501822043773
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_sparse2qubitunitary",
                  0.8152374186520078
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_usingqx_fullyentangled",
                  0.6740308424348858
                ],
                [
                  "test_usingqx_fullyentangled",
                  "test_usingqx_fullyentangled_5qubit",
                  0.81148550202822
                ],
                [
                  "test_unitary_undecomposed",
                  "test_decomposition_toffoli",
                  0.44730576107184405
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "test_unitary_decompose_2qubit_CNOT",
                  0.8532979519394509
                ],
                [
                  "test_sparse2qubitunitaryotherqubitcheck",
                  "test_decomposition_toffoli",
                  0.5010627735919312
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_usingqx_fullyentangled",
                  0.6173231850839331
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_sparse2qubitunitaryotherqubit",
                  0.8256539433060268
                ],
                [
                  "test_usingqx_sparseunitary",
                  "test_decomposition_toffoli",
                  0.49231434676849406
                ],
                [
                  "test_usingqx_fullyentangled",
                  "test_sparse2qubit_multiplexor",
                  0.9218527187444224
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_unitary_wrongnumberofqubits_toofew",
                  0.670690547941066
                ],
                [
                  "test_usingqx_10",
                  "test_adding2tothepower6unitary",
                  0.7123905806221004
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "test_usingqx_fullyentangled_4qubit",
                  0.5921403285179414
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "test_sparse2qubitunitaryotherqubit",
                  0.8107526374252452
                ],
                [
                  "test_usingqx_10",
                  "test_decomposition_mscthesisaritra",
                  0.5731384546766172
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_decomposition_controlled_U",
                  0.480038782145995
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_non_90_degree_angle",
                  0.9364293391568239
                ],
                [
                  "test_usingqx_11",
                  "test_usingqx_fullyentangled_4qubit",
                  0.8468351267237306
                ],
                [
                  "test_usingqx_01",
                  "test_usingqx_fullyentangled_3qubit",
                  0.8333608688406928
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_decomposition_toffoli",
                  0.5594290070479705
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_usingqx_sparseunitary",
                  0.4816814673274982
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_usingqx_fullyentangled_5qubit",
                  0.467803052254795
                ],
                [
                  "test_usingqx_fullyentangled_5qubit",
                  "test_sparse2qubit_multiplexor",
                  0.6574340735050259
                ],
                [
                  "test_adding2tothepower6unitary",
                  "test_decomposition_mscthesisaritra",
                  0.390684157333418
                ],
                [
                  "test_unitary_undecomposed",
                  "test_usingqx_fullyentangled_3qubit",
                  0.4591280241892488
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_usingqx_00",
                  0.6333338136450745
                ],
                [
                  "test_usingqx_fullyentangled_5qubit",
                  "test_sparse2qubitunitaryotherqubit",
                  0.7035544260147734
                ],
                [
                  "test_unitary_basic",
                  "test_unitary_decompose_IYZ",
                  0.9130436846301206
                ],
                [
                  "test_unitary_decompose_X",
                  "test_usingqx_11",
                  0.7137014110405091
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_unitary_decompose_nonunitary",
                  0.8406106062909271
                ],
                [
                  "test_unitary_basic",
                  "test_decomposition_mscthesisaritra",
                  0.4698909219856299
                ],
                [
                  "test_unitary_undecomposed",
                  "test_adding2tothepower6unitary",
                  0.3689288601168594
                ],
                [
                  "test_usingqx_01",
                  "test_usingqx_11",
                  0.9995393342777845
                ],
                [
                  "test_unitary_undecomposed",
                  "test_extremelysparseunitary",
                  0.44902556610778294
                ],
                [
                  "test_usingqx_01",
                  "test_usingqx_fullyentangled_4qubit",
                  0.8488570856636048
                ],
                [
                  "test_usingqx_01",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.8263805863350062
                ],
                [
                  "test_adding2tothepower6unitary",
                  "test_usingqx_sparseunitary",
                  0.7077301667851784
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "test_decomposition_mscthesisaritra",
                  0.5795251951047621
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_usingqx_01",
                  0.719429448901755
                ],
                [
                  "test_usingqx_fullyentangled_4qubit",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.5833334154888425
                ],
                [
                  "test_usingqx_sparseunitary",
                  "test_decomposition_mscthesisaritra",
                  0.7162991688322166
                ],
                [
                  "test_unitary_undecomposed",
                  "test_usingqx_sparseunitary",
                  0.46203714740088764
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.8360902860864385
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_sparse2qubit_multiplexor",
                  0.776912154492112
                ],
                [
                  "test_usingqx_fullyentangled",
                  "test_decomposition_controlled_U",
                  0.5891688233764776
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_decomposition_controlled_U",
                  0.5337385670565772
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_usingqx_11",
                  0.6662122248719489
                ],
                [
                  "test_usingqx_bellstate",
                  "test_decomposition_controlled_U",
                  0.5089636132455375
                ],
                [
                  "test_usingqx_bellstate",
                  "test_usingqx_fullyentangled_3qubit",
                  0.8761565025608382
                ],
                [
                  "test_decomposition_rotatedtoffoli",
                  "test_decomposition_mscthesisaritra",
                  0.7081193918120655
                ],
                [
                  "test_unitary_decompose_X",
                  "test_unitary_decompose_nonunitary",
                  0.8432740427115679
                ],
                [
                  "test_unitary_decompose_I",
                  "test_usingqx_01",
                  0.7234031000794279
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_unitary_decompose_Y",
                  0.8728715609439694
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_decomposition_toffoli",
                  0.5066696079000267
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_sparse2qubitunitaryotherqubit",
                  0.833562967932843
                ],
                [
                  "test_usingqx_fullyentangled_5qubit_10011",
                  "test_decomposition_controlled_U",
                  0.27949609791372304
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_usingqx_fullyentangled_5qubit_10011",
                  0.49058743152989537
                ],
                [
                  "test_usingqx_sparseunitary",
                  "test_decomposition_rotatedtoffoli",
                  0.5031580367206279
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "test_decomposition_rotatedtoffoli",
                  0.5356298953672579
                ],
                [
                  "test_usingqx_bellstate",
                  "test_extremelysparseunitary",
                  0.7400431800866054
                ],
                [
                  "test_usingqx_00",
                  "test_decomposition_toffoli",
                  0.3856125833875734
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_usingqx_fullyentangled_3qubit",
                  0.4699971707311985
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_unitary_decompose_Z",
                  0.929599526410758
                ],
                [
                  "test_usingqx_fullyentangled",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.7244980807479835
                ],
                [
                  "test_usingqx_fullyentangled_5qubit_10011",
                  "test_adding2tothepower6unitary",
                  0.9545508357227889
                ],
                [
                  "test_adding2tothepower6unitary",
                  "test_sparse2qubit_multiplexor",
                  0.5346472914057488
                ],
                [
                  "test_usingqx_fullyentangled_5qubit",
                  "test_decomposition_mscthesisaritra",
                  0.48255766832481717
                ],
                [
                  "test_usingqx_fullyentangled",
                  "test_usingqx_fullyentangled_5qubit_10011",
                  0.8140056586502137
                ],
                [
                  "test_sparse2qubitunitaryotherqubit",
                  "test_decomposition_controlled_U",
                  0.6457401495996866
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_unitary_decompose_nonunitary",
                  0.8838212051224911
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_non_90_degree_angle",
                  0.7622855530127894
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_unitary_decompose_2qubit_CNOT_2",
                  0.8429043054655624
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_usingqx_11",
                  0.7180825229559525
                ],
                [
                  "test_non_90_degree_angle",
                  "test_usingqx_bellstate",
                  0.9572493847522763
                ],
                [
                  "test_unitary_undecomposed",
                  "test_decomposition_controlled_U",
                  0.4755193739269234
                ],
                [
                  "test_usingqx_01",
                  "test_usingqx_fullyentangled",
                  0.9213413780526145
                ],
                [
                  "test_sparse2qubitunitaryotherqubitcheck",
                  "test_decomposition_controlled_U",
                  0.5361057778300417
                ],
                [
                  "test_decomposition_rotatedtoffoli",
                  "test_decomposition_controlled_U",
                  0.9974034386754156
                ],
                [
                  "test_usingqx_bellstate",
                  "test_decomposition_mscthesisaritra",
                  0.6306198617461333
                ],
                [
                  "test_unitary_undecomposed",
                  "test_unitary_decompose_Z",
                  0.8298585236414627
                ],
                [
                  "test_adding2tothepower6unitary",
                  "test_decomposition_rotatedtoffoli",
                  0.1627728333450138
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_usingqx_sparseunitary",
                  0.8723679801924729
                ],
                [
                  "test_usingqx_fullyentangled_3qubit",
                  "test_usingqx_fullyentangled_4qubit",
                  0.9416401754971792
                ],
                [
                  "test_unitary_decompose_X",
                  "test_unitary_decompose_2qubit_CNOT",
                  0.8699665550133563
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "test_adding2tothepower6unitary",
                  0.47370781364992415
                ],
                [
                  "test_usingqx_fullyentangled_5qubit_10011",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.5740792719057496
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_extremelysparseunitary",
                  0.4689085063178491
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "test_decomposition_mscthesisaritra",
                  0.18929845337787554
                ],
                [
                  "test_usingqx_11",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.8259966651460582
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_sparse2qubitunitary",
                  0.7238790301840052
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_unitary_decompose_2qubit_CNOT",
                  0.8851416742396572
                ],
                [
                  "test_usingqx_fullyentangled_5qubit",
                  "test_usingqx_sparseunitary",
                  0.8427662158779732
                ],
                [
                  "test_unitary_decompose_I",
                  "test_unitary_decompose_2qubit_CNOT",
                  0.8579427466718833
                ],
                [
                  "test_usingqx_fullyentangled_5qubit_10011",
                  "test_extremelysparseunitary",
                  0.6329957340004068
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_adding2tothepower6unitary",
                  0.3662398703423103
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.737113376668608
                ],
                [
                  "test_usingqx_fullyentangled",
                  "test_usingqx_fullyentangled_3qubit",
                  0.8978062178981537
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_extremelysparseunitary",
                  0.6989727958493971
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_decomposition_controlled_U",
                  0.5687431344802754
                ],
                [
                  "test_usingqx_fullyentangled_4qubit",
                  "test_decomposition_toffoli",
                  0.4935180262460422
                ],
                [
                  "test_usingqx_00",
                  "test_usingqx_01",
                  0.9995341400298768
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_usingqx_fullyentangled_4qubit",
                  0.47826617102461827
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_usingqx_10",
                  0.6473220616284596
                ],
                [
                  "test_unitary_undecomposed",
                  "test_usingqx_fullyentangled",
                  0.5626598853062829
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "test_usingqx_10",
                  0.7168302562182403
                ],
                [
                  "test_usingqx_fullyentangled",
                  "test_adding2tothepower6unitary",
                  0.6760433949105341
                ],
                [
                  "test_unitary_undecomposed",
                  "test_unitary_decompose_2qubit_CNOT_2",
                  0.8245862305413721
                ],
                [
                  "test_sparse2qubitunitary",
                  "test_decomposition_mscthesisaritra",
                  0.6095692370945595
                ],
                [
                  "test_usingqx_01",
                  "test_decomposition_toffoli",
                  0.38666478959129486
                ],
                [
                  "test_unitary_basic",
                  "test_usingqx_10",
                  0.6276545588085222
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_usingqx_fullyentangled_5qubit_10011",
                  0.8884761626809311
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "test_unitary_decompose_2qubit_CNOT",
                  0.3823418305636444
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "test_usingqx_11",
                  0.5940511670154464
                ],
                [
                  "test_extremelysparseunitary",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.5067366487464675
                ],
                [
                  "test_unitary_basic",
                  "test_unitary_decompose_X",
                  0.86138821052049
                ],
                [
                  "test_usingqx_10",
                  "test_decomposition_toffoli",
                  0.38666478959129486
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "test_usingqx_10",
                  0.2956577821040646
                ],
                [
                  "test_unitary_decompose_I",
                  "test_unitary_decompose_IYZ",
                  0.8792229441259689
                ],
                [
                  "test_unitary_decompose_X",
                  "test_usingqx_01",
                  0.7137850884871834
                ],
                [
                  "test_unitary_undecomposed",
                  "test_unitary_wrongnumberofqubits",
                  0.9673946868118317
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "test_decomposition_toffoli",
                  0.5373957548591455
                ],
                [
                  "test_usingqx_bellstate",
                  "test_sparse2qubitunitary",
                  0.85754067907019
                ],
                [
                  "test_unitary_decompose_I",
                  "test_unitary_decompose_nonunitary",
                  0.8264806797801222
                ],
                [
                  "test_sparse2qubitunitary",
                  "test_sparse2qubitunitaryotherqubit",
                  0.9921291905109492
                ],
                [
                  "test_unitary_decompose_I",
                  "test_usingqx_11",
                  0.7251616725205039
                ],
                [
                  "test_usingqx_bellstate",
                  "test_usingqx_sparseunitary",
                  0.8914396594714982
                ],
                [
                  "test_sparse2qubit_multiplexor",
                  "test_decomposition_rotatedtoffoli",
                  0.7655037542640163
                ],
                [
                  "test_unitary_basic",
                  "test_unitary_wrongnumberofqubits_toofew",
                  0.6534736973460098
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_unitary_decompose_IYZ_differentorder",
                  0.7118868748814083
                ],
                [
                  "test_usingqx_11",
                  "test_decomposition_toffoli",
                  0.38735386670088967
                ],
                [
                  "test_non_90_degree_angle",
                  "test_adding2tothepower6unitary",
                  0.6961765773656179
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_usingqx_10",
                  0.719429448901755
                ],
                [
                  "test_usingqx_fullyentangled",
                  "test_usingqx_fullyentangled_4qubit",
                  0.9107084421686493
                ],
                [
                  "test_usingqx_bellstate",
                  "test_decomposition_rotatedtoffoli",
                  0.45854173644312457
                ],
                [
                  "test_usingqx_00",
                  "test_usingqx_11",
                  0.9981473923901326
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_adding2tothepower6unitary",
                  0.3769818830192633
                ],
                [
                  "test_decomposition_toffoli",
                  "test_decomposition_controlled_U",
                  0.9966888873695372
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "test_usingqx_01",
                  0.2956577821040646
                ],
                [
                  "test_unitary_undecomposed",
                  "test_unitary_decompose_IYZ_differentorder",
                  0.8674310043590181
                ],
                [
                  "test_unitary_decompose_I",
                  "test_unitary_decompose_X",
                  0.9503107713207739
                ],
                [
                  "test_usingqx_bellstate",
                  "test_sparse2qubitunitaryotherqubit",
                  0.8542779886895439
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_decomposition_rotatedtoffoli",
                  0.45681076224436373
                ],
                [
                  "test_unitary_basic",
                  "test_usingqx_01",
                  0.6276545588085222
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_unitary_decompose_Z",
                  0.8429954711626112
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_usingqx_00",
                  0.9350016865021241
                ],
                [
                  "test_usingqx_fullyentangled_3qubit",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.586629558025462
                ],
                [
                  "test_unitary_undecomposed",
                  "test_usingqx_00",
                  0.6161314490065176
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_usingqx_fullyentangled",
                  0.57683896401538
                ],
                [
                  "test_sparse2qubitunitary",
                  "test_sparse2qubit_multiplexor",
                  0.9011483867939775
                ],
                [
                  "test_unitary_undecomposed",
                  "test_usingqx_fullyentangled_4qubit",
                  0.46286291291558235
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_usingqx_fullyentangled_4qubit",
                  0.8727108095983044
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_usingqx_bellstate",
                  0.9317589650646664
                ],
                [
                  "test_usingqx_bellstate",
                  "test_sparse2qubit_multiplexor",
                  0.8674024016310612
                ],
                [
                  "test_usingqx_fullyentangled_5qubit",
                  "test_decomposition_rotatedtoffoli",
                  0.22296211610517708
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_non_90_degree_angle",
                  0.6822291079170275
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_unitary_decompose_2qubit_CNOT",
                  0.9573253335246311
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "test_decomposition_toffoli",
                  0.5471863923759052
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_usingqx_fullyentangled_3qubit",
                  0.49119770567377025
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_unitary_decompose_matrixinsteadofarray",
                  0.6072635433745392
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "test_usingqx_01",
                  0.7168302562182403
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_decomposition_toffoli",
                  0.5296859152488799
                ],
                [
                  "test_usingqx_10",
                  "test_usingqx_11",
                  0.9995393342777845
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_usingqx_fullyentangled_4qubit",
                  0.4827840724265314
                ],
                [
                  "test_sparse2qubitunitary",
                  "test_decomposition_rotatedtoffoli",
                  0.6123369082160027
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_decomposition_toffoli",
                  0.5981431240884794
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_usingqx_fullyentangled_3qubit",
                  0.8415985756104565
                ],
                [
                  "test_non_90_degree_angle",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.8516952520561664
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_usingqx_bellstate",
                  0.6929619638850355
                ],
                [
                  "test_usingqx_bellstate",
                  "test_usingqx_fullyentangled_5qubit",
                  0.8598481362531023
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_unitary_decompose_2qubit_CNOT_2",
                  0.8522075086102309
                ],
                [
                  "test_usingqx_fullyentangled_3qubit",
                  "test_adding2tothepower6unitary",
                  0.8720190396851284
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_usingqx_00",
                  0.7275080292553573
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_unitary_decompose_IYZ_differentorder",
                  0.8818511810991578
                ],
                [
                  "test_extremelysparseunitary",
                  "test_decomposition_controlled_U",
                  0.7340206880618444
                ],
                [
                  "test_usingqx_fullyentangled",
                  "test_sparse2qubitunitaryotherqubit",
                  0.8084186669803497
                ],
                [
                  "test_adding2tothepower6unitary",
                  "test_sparse2qubitunitary",
                  0.568743680934932
                ],
                [
                  "test_unitary_decompose_I",
                  "test_usingqx_00",
                  0.7209625186885816
                ],
                [
                  "test_usingqx_fullyentangled_4qubit",
                  "test_usingqx_sparseunitary",
                  0.9999914294041438
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "test_usingqx_11",
                  0.2946949489005854
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_sparse2qubitunitary",
                  0.8077259948762537
                ],
                [
                  "test_usingqx_fullyentangled_3qubit",
                  "test_extremelysparseunitary",
                  0.8093666717616099
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_decomposition_rotatedtoffoli",
                  0.5685552038215179
                ],
                [
                  "test_usingqx_11",
                  "test_usingqx_fullyentangled_3qubit",
                  0.8321384409992686
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_usingqx_11",
                  0.7280497233761224
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "test_usingqx_fullyentangled",
                  0.6640407674588457
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_usingqx_fullyentangled_5qubit",
                  0.5617256850219045
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "test_usingqx_11",
                  0.7153454200662971
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_decomposition_controlled_U",
                  0.389427696757428
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_unitary_decompose_matrixinsteadofarray",
                  0.6232519696370808
                ],
                [
                  "test_non_90_degree_angle",
                  "test_decomposition_toffoli",
                  0.43994338318456866
                ],
                [
                  "test_usingqx_fullyentangled_4qubit",
                  "test_decomposition_mscthesisaritra",
                  0.717201261764604
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_usingqx_sparseunitary",
                  0.5748830615774263
                ],
                [
                  "test_usingqx_sparseunitary",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.5822943301124628
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "test_non_90_degree_angle",
                  0.3287554600564606
                ],
                [
                  "test_usingqx_01",
                  "test_decomposition_mscthesisaritra",
                  0.5731384546766172
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_non_90_degree_angle",
                  0.7641808741770288
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "test_usingqx_fullyentangled_5qubit_10011",
                  0.5762962376330953
                ],
                [
                  "test_usingqx_fullyentangled_4qubit",
                  "test_usingqx_fullyentangled_5qubit",
                  0.8428401115509913
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_unitary_decompose_Y",
                  0.6359367770585252
                ],
                [
                  "test_sparse2qubitunitary",
                  "test_decomposition_controlled_U",
                  0.6454203971556767
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_unitary_decompose_2qubit_CNOT_2",
                  0.7098355261295494
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_decomposition_mscthesisaritra",
                  0.5673111385232535
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.754375205766744
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "test_sparse2qubitunitary",
                  0.8004927085881934
                ],
                [
                  "test_usingqx_10",
                  "test_sparse2qubitunitary",
                  0.8883810193826277
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_unitary_wrongnumberofqubits_toofew",
                  0.7012119444165323
                ],
                [
                  "test_unitary_decompose_X",
                  "test_decomposition_mscthesisaritra",
                  0.5314774839351194
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "test_sparse2qubitunitary",
                  0.4190009519712444
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_unitary_decompose_IYZ",
                  0.9163547909319827
                ],
                [
                  "test_unitary_undecomposed",
                  "test_unitary_decompose_2qubit_CNOT",
                  0.8273497321819399
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_usingqx_fullyentangled_4qubit",
                  0.5852086614577018
                ],
                [
                  "test_unitary_decompose_X",
                  "test_usingqx_fullyentangled_5qubit",
                  0.44848798827251074
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_sparse2qubit_multiplexor",
                  0.7510058357763995
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_unitary_decompose_2qubit_CNOT_2",
                  0.9608264810529411
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_unitary_decompose_IYZ_differentorder",
                  0.9087241589185545
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "test_usingqx_fullyentangled",
                  0.25570481503293574
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "test_non_90_degree_angle",
                  0.7570233526634818
                ],
                [
                  "test_usingqx_10",
                  "test_usingqx_fullyentangled",
                  0.9213413780526145
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_adding2tothepower6unitary",
                  0.4562643093570659
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_unitary_decompose_I",
                  0.8508287481987753
                ],
                [
                  "test_non_90_degree_angle",
                  "test_usingqx_fullyentangled",
                  0.9040192558779763
                ],
                [
                  "test_unitary_basic",
                  "test_unitary_decompose_2qubit_CNOT",
                  0.8563198803829424
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "test_sparse2qubitunitary",
                  0.7975374373854961
                ],
                [
                  "test_non_90_degree_angle",
                  "test_usingqx_fullyentangled_3qubit",
                  0.8232697283006344
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_unitary_decompose_nonunitary",
                  0.8435995683143938
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_decomposition_rotatedtoffoli",
                  0.6034797149359103
                ],
                [
                  "test_unitary_basic",
                  "test_unitary_decompose_Y",
                  0.8647363742554642
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "test_usingqx_fullyentangled_5qubit_10011",
                  0.5802953538409265
                ],
                [
                  "test_usingqx_fullyentangled_5qubit",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.5742258687606985
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_usingqx_10",
                  0.932813521352975
                ],
                [
                  "test_unitary_undecomposed",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.7186127439661844
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_decomposition_mscthesisaritra",
                  0.5125778254488332
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.7251959553955624
                ],
                [
                  "test_unitary_decompose_X",
                  "test_adding2tothepower6unitary",
                  0.34910580886317755
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_usingqx_fullyentangled",
                  0.6348751174564142
                ],
                [
                  "test_usingqx_fullyentangled_4qubit",
                  "test_sparse2qubit_multiplexor",
                  0.7908259923469493
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "test_usingqx_11",
                  0.7111130229626371
                ],
                [
                  "test_decomposition_toffoli",
                  "test_decomposition_mscthesisaritra",
                  0.7011698270979949
                ],
                [
                  "test_unitary_decompose_I",
                  "test_adding2tothepower6unitary",
                  0.379517980752379
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "test_non_90_degree_angle",
                  0.6414231113105036
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_sparse2qubit_multiplexor",
                  0.6779167927461976
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_sparse2qubitunitaryotherqubit",
                  0.7349043394794006
                ],
                [
                  "test_unitary_decompose_X",
                  "test_usingqx_sparseunitary",
                  0.46221004172010793
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_adding2tothepower6unitary",
                  0.7433576438938793
                ],
                [
                  "test_usingqx_01",
                  "test_usingqx_sparseunitary",
                  0.8483784756948783
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_decomposition_controlled_U",
                  0.5935510116283126
                ],
                [
                  "test_usingqx_10",
                  "test_usingqx_bellstate",
                  0.9682234852989395
                ],
                [
                  "test_unitary_basic",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.7297929127797133
                ],
                [
                  "test_usingqx_01",
                  "test_adding2tothepower6unitary",
                  0.7123905806221004
                ],
                [
                  "test_usingqx_fullyentangled",
                  "test_extremelysparseunitary",
                  0.8142419337950488
                ],
                [
                  "test_usingqx_bellstate",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.7824520622773987
                ],
                [
                  "test_unitary_decompose_I",
                  "test_usingqx_10",
                  0.7234031000794279
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "test_usingqx_fullyentangled_5qubit_10011",
                  0.07981705837013721
                ],
                [
                  "test_usingqx_fullyentangled_4qubit",
                  "test_decomposition_rotatedtoffoli",
                  0.5043526479780258
                ],
                [
                  "test_extremelysparseunitary",
                  "test_decomposition_rotatedtoffoli",
                  0.6998184891443403
                ],
                [
                  "test_unitary_decompose_X",
                  "test_usingqx_10",
                  0.7137850884871834
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_usingqx_fullyentangled_5qubit_10011",
                  0.46730805337813064
                ],
                [
                  "test_unitary_undecomposed",
                  "test_unitary_decompose_X",
                  0.8368745608616223
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_decomposition_controlled_U",
                  0.5659630075628481
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_usingqx_bellstate",
                  0.6315742585864784
                ],
                [
                  "test_usingqx_00",
                  "test_sparse2qubitunitaryotherqubit",
                  0.8851263069719366
                ],
                [
                  "test_usingqx_11",
                  "test_extremelysparseunitary",
                  0.6868600037900829
                ],
                [
                  "test_unitary_decompose_I",
                  "test_usingqx_sparseunitary",
                  0.5012787186083375
                ],
                [
                  "test_unitary_decompose_I",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.8456351372402027
                ],
                [
                  "test_adding2tothepower6unitary",
                  "test_decomposition_toffoli",
                  0.15282433627273584
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_decomposition_rotatedtoffoli",
                  0.33508456574379186
                ],
                [
                  "test_non_90_degree_angle",
                  "test_usingqx_11",
                  0.9843092513343964
                ],
                [
                  "test_usingqx_11",
                  "test_usingqx_fullyentangled",
                  0.9211189971212485
                ],
                [
                  "test_unitary_undecomposed",
                  "test_sparse2qubitunitaryotherqubit",
                  0.7107799167503145
                ],
                [
                  "test_non_90_degree_angle",
                  "test_usingqx_fullyentangled_5qubit_10011",
                  0.8473881151289623
                ],
                [
                  "test_unitary_undecomposed",
                  "test_unitary_decompose_I",
                  0.8146844263614547
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_usingqx_10",
                  0.6653645026124154
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_usingqx_fullyentangled_5qubit_10011",
                  0.4675125827100338
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_usingqx_fullyentangled_5qubit",
                  0.8878601987886563
                ],
                [
                  "test_unitary_undecomposed",
                  "test_unitary_decompose_Y",
                  0.8377241554800419
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_unitary_decompose_2qubit_CNOT",
                  0.957523852965386
                ],
                [
                  "test_usingqx_01",
                  "test_usingqx_10",
                  1.0
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_sparse2qubitunitary",
                  0.7419893920921136
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_usingqx_10",
                  0.7238296122510065
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "test_unitary_decompose_matrixinsteadofarray",
                  0.6447715386698235
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_usingqx_11",
                  0.6297939602285254
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "test_usingqx_fullyentangled_3qubit",
                  0.4461515893336744
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_unitary_decompose_nonunitary",
                  0.8842233381251402
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_usingqx_fullyentangled_5qubit",
                  0.46812849649434135
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_usingqx_01",
                  0.7238296122510065
                ],
                [
                  "test_unitary_decompose_I",
                  "test_usingqx_fullyentangled_5qubit",
                  0.48074116615807766
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_usingqx_fullyentangled_3qubit",
                  0.49375344865817944
                ],
                [
                  "test_usingqx_01",
                  "test_decomposition_controlled_U",
                  0.4475007177945661
                ],
                [
                  "test_usingqx_fullyentangled_3qubit",
                  "test_decomposition_toffoli",
                  0.4705579832349169
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_decomposition_mscthesisaritra",
                  0.5612859968072884
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "test_decomposition_toffoli",
                  0.36674839337219833
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_sparse2qubit_multiplexor",
                  0.7553632852241763
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "test_usingqx_bellstate",
                  0.5999432332334576
                ],
                [
                  "test_unitary_basic",
                  "test_sparse2qubitunitaryotherqubit",
                  0.7133764825988644
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_usingqx_01",
                  0.6473220616284596
                ],
                [
                  "test_unitary_decompose_I",
                  "test_sparse2qubit_multiplexor",
                  0.7618417142267788
                ],
                [
                  "test_usingqx_fullyentangled_3qubit",
                  "test_sparse2qubitunitaryotherqubit",
                  0.7012027594418189
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_usingqx_00",
                  0.724485124760551
                ],
                [
                  "test_non_90_degree_angle",
                  "test_sparse2qubitunitary",
                  0.9150351542992639
                ],
                [
                  "test_unitary_decompose_I",
                  "test_decomposition_mscthesisaritra",
                  0.5462341831610121
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_usingqx_bellstate",
                  0.6655593490319066
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_decomposition_toffoli",
                  0.5429571743680511
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_usingqx_00",
                  0.6638938155037575
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_adding2tothepower6unitary",
                  0.4671700079343348
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_extremelysparseunitary",
                  0.4817533186861321
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_adding2tothepower6unitary",
                  0.3281236033149827
                ],
                [
                  "test_sparse2qubitunitaryotherqubit",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.8780742973846459
                ],
                [
                  "test_unitary_basic",
                  "test_unitary_decompose_I",
                  0.8406158469723088
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_sparse2qubit_multiplexor",
                  0.7392393404864281
                ],
                [
                  "test_usingqx_fullyentangled_5qubit_10011",
                  "test_sparse2qubitunitaryotherqubit",
                  0.7045724487372653
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_unitary_decompose_X",
                  0.8701765379549183
                ],
                [
                  "test_unitary_decompose_X",
                  "test_sparse2qubit_multiplexor",
                  0.7394324499258758
                ],
                [
                  "test_unitary_decompose_I",
                  "test_decomposition_rotatedtoffoli",
                  0.5538944944070827
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_unitary_decompose_matrixinsteadofarray",
                  0.6227254654931961
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "test_sparse2qubit_multiplexor",
                  0.7304515084901294
                ],
                [
                  "test_usingqx_fullyentangled_5qubit",
                  "test_decomposition_controlled_U",
                  0.2781254206376904
                ],
                [
                  "test_usingqx_fullyentangled",
                  "test_decomposition_toffoli",
                  0.531493855919952
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_usingqx_sparseunitary",
                  0.4771843104000456
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "test_usingqx_fullyentangled",
                  0.5499674662738117
                ],
                [
                  "test_usingqx_01",
                  "test_usingqx_bellstate",
                  0.9682234852989395
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "test_usingqx_fullyentangled_3qubit",
                  0.5801205534176963
                ],
                [
                  "test_unitary_basic",
                  "test_decomposition_rotatedtoffoli",
                  0.4475919275880205
                ],
                [
                  "test_usingqx_fullyentangled_3qubit",
                  "test_usingqx_fullyentangled_5qubit_10011",
                  0.9210920086390703
                ],
                [
                  "test_non_90_degree_angle",
                  "test_extremelysparseunitary",
                  0.6992757088969273
                ],
                [
                  "test_usingqx_bellstate",
                  "test_usingqx_fullyentangled_4qubit",
                  0.891820577800482
                ],
                [
                  "test_usingqx_00",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.8259988628673827
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "test_decomposition_toffoli",
                  0.52596778494237
                ],
                [
                  "test_adding2tothepower6unitary",
                  "test_extremelysparseunitary",
                  0.5275882888601617
                ],
                [
                  "test_unitary_decompose_X",
                  "test_decomposition_rotatedtoffoli",
                  0.5640797278680848
                ],
                [
                  "test_usingqx_fullyentangled_4qubit",
                  "test_adding2tothepower6unitary",
                  0.7076938960576369
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "test_sparse2qubit_multiplexor",
                  0.38843727042346465
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "test_usingqx_bellstate",
                  0.72591329584561
                ],
                [
                  "test_unitary_decompose_X",
                  "test_non_90_degree_angle",
                  0.7498666418009946
                ],
                [
                  "test_usingqx_sparseunitary",
                  "test_sparse2qubitunitaryotherqubit",
                  0.7118091703387617
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_unitary_decompose_X",
                  0.6185105355248871
                ],
                [
                  "test_usingqx_11",
                  "test_usingqx_bellstate",
                  0.9676775120815256
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_unitary_decompose_nonunitary",
                  0.8948747402853656
                ],
                [
                  "test_usingqx_00",
                  "test_usingqx_fullyentangled",
                  0.9207089768758633
                ],
                [
                  "test_unitary_basic",
                  "test_usingqx_fullyentangled_5qubit",
                  0.4712019428001901
                ],
                [
                  "test_unitary_decompose_X",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.8765909411771254
                ],
                [
                  "test_usingqx_fullyentangled_5qubit_10011",
                  "test_decomposition_toffoli",
                  0.21279903112166293
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "test_sparse2qubit_multiplexor",
                  0.7399600511503874
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_decomposition_mscthesisaritra",
                  0.5188416221923187
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_unitary_decompose_IYZ",
                  0.88570215853934
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_usingqx_10",
                  0.6318516355925617
                ],
                [
                  "test_unitary_decompose_X",
                  "test_usingqx_fullyentangled_4qubit",
                  0.46342427880633846
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_decomposition_rotatedtoffoli",
                  0.5492628243335523
                ],
                [
                  "test_unitary_decompose_X",
                  "test_usingqx_fullyentangled_5qubit_10011",
                  0.4480576280035872
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "test_sparse2qubitunitaryotherqubit",
                  0.7447856011414405
                ],
                [
                  "test_usingqx_fullyentangled_4qubit",
                  "test_usingqx_fullyentangled_5qubit_10011",
                  0.8433846143186369
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_unitary_decompose_matrixinsteadofarray",
                  0.47025923897055516
                ],
                [
                  "test_unitary_basic",
                  "test_usingqx_sparseunitary",
                  0.47774530548612343
                ],
                [
                  "test_usingqx_01",
                  "test_usingqx_fullyentangled_5qubit_10011",
                  0.8634497394296007
                ],
                [
                  "test_usingqx_fullyentangled_4qubit",
                  "test_sparse2qubitunitary",
                  0.7113987182246211
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_usingqx_bellstate",
                  0.7314139010648862
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "test_sparse2qubit_multiplexor",
                  0.6659760559115226
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "test_usingqx_sparseunitary",
                  0.5842850767177088
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_unitary_decompose_I",
                  0.6400357191884828
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.7393608472764891
                ],
                [
                  "test_usingqx_fullyentangled_3qubit",
                  "test_sparse2qubitunitary",
                  0.7046624127425635
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_usingqx_fullyentangled_4qubit",
                  0.575794337250703
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_sparse2qubit_multiplexor",
                  0.7443656550595303
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_usingqx_11",
                  0.64521400558527
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "test_usingqx_sparseunitary",
                  0.09963866987357255
                ],
                [
                  "test_extremelysparseunitary",
                  "test_sparse2qubitunitaryotherqubit",
                  0.7397060729087497
                ],
                [
                  "test_usingqx_10",
                  "test_usingqx_sparseunitary",
                  0.8483784756948783
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_usingqx_fullyentangled_5qubit_10011",
                  0.5608826463402057
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "test_sparse2qubitunitaryotherqubit",
                  0.8076178416565499
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_unitary_decompose_2qubit_CNOT_2",
                  0.8826849898621326
                ],
                [
                  "test_sparse2qubitunitaryotherqubit",
                  "test_decomposition_toffoli",
                  0.6039677620031628
                ],
                [
                  "test_unitary_undecomposed",
                  "test_usingqx_10",
                  0.614689529292924
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_usingqx_fullyentangled_5qubit_10011",
                  0.41929816195693514
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_unitary_decompose_IYZ_differentorder",
                  0.9913533185237365
                ],
                [
                  "test_unitary_undecomposed",
                  "test_decomposition_rotatedtoffoli",
                  0.4546949092922003
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_unitary_decompose_2qubit_CNOT_2",
                  0.8257631781629046
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_usingqx_fullyentangled_4qubit",
                  0.4987110118891399
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_usingqx_fullyentangled_4qubit",
                  0.4443496131918931
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "test_usingqx_sparseunitary",
                  0.5912301742813965
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_unitary_decompose_matrixinsteadofarray",
                  0.6130516234112136
                ],
                [
                  "test_unitary_basic",
                  "test_unitary_decompose_Z",
                  0.8577016811881877
                ],
                [
                  "test_non_90_degree_angle",
                  "test_usingqx_01",
                  0.9856879499173732
                ],
                [
                  "test_usingqx_11",
                  "test_sparse2qubitunitary",
                  0.8874351327918115
                ],
                [
                  "test_non_90_degree_angle",
                  "test_sparse2qubitunitaryotherqubit",
                  0.9192017790537322
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "test_decomposition_mscthesisaritra",
                  0.5835152078383614
                ],
                [
                  "test_unitary_decompose_I",
                  "test_sparse2qubitunitaryotherqubit",
                  0.8043887862560344
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_decomposition_rotatedtoffoli",
                  0.539253655028922
                ],
                [
                  "test_usingqx_00",
                  "test_sparse2qubitunitary",
                  0.888506814401192
                ],
                [
                  "test_non_90_degree_angle",
                  "test_sparse2qubit_multiplexor",
                  0.8518975579435834
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_decomposition_toffoli",
                  0.44846506769823513
                ],
                [
                  "test_extremelysparseunitary",
                  "test_sparse2qubit_multiplexor",
                  0.835543522931078
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_extremelysparseunitary",
                  0.5700730360754471
                ],
                [
                  "test_unitary_undecomposed",
                  "test_unitary_decompose_IYZ",
                  0.8677693426419628
                ],
                [
                  "test_unitary_decompose_X",
                  "test_usingqx_fullyentangled",
                  0.6222646189382217
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_decomposition_mscthesisaritra",
                  0.5636681148336257
                ],
                [
                  "test_usingqx_10",
                  "test_decomposition_rotatedtoffoli",
                  0.3975140882843436
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "test_adding2tothepower6unitary",
                  0.46908462951798185
                ],
                [
                  "test_unitary_decompose_X",
                  "test_unitary_decompose_Y",
                  0.9920494756624602
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_usingqx_10",
                  0.7281169395776064
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.7643757014482517
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_non_90_degree_angle",
                  0.7032254098677467
                ],
                [
                  "test_usingqx_00",
                  "test_usingqx_fullyentangled_4qubit",
                  0.8501017235377747
                ],
                [
                  "test_usingqx_10",
                  "test_usingqx_fullyentangled_3qubit",
                  0.8333608688406928
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "test_extremelysparseunitary",
                  0.5715395375887424
                ],
                [
                  "test_usingqx_sparseunitary",
                  "test_extremelysparseunitary",
                  0.8451273395778424
                ],
                [
                  "test_usingqx_10",
                  "test_sparse2qubitunitaryotherqubit",
                  0.885000990566466
                ],
                [
                  "test_usingqx_01",
                  "test_sparse2qubitunitary",
                  0.8883810193826277
                ],
                [
                  "test_unitary_basic",
                  "test_extremelysparseunitary",
                  0.46227027139292876
                ],
                [
                  "test_unitary_decompose_I",
                  "test_sparse2qubitunitary",
                  0.792368210120789
                ],
                [
                  "test_usingqx_10",
                  "test_usingqx_fullyentangled_5qubit",
                  0.862246178577424
                ],
                [
                  "test_usingqx_bellstate",
                  "test_adding2tothepower6unitary",
                  0.714151931597615
                ],
                [
                  "test_unitary_decompose_I",
                  "test_unitary_decompose_matrixinsteadofarray",
                  0.5716776058181616
                ],
                [
                  "test_sparse2qubitunitaryotherqubitcheck",
                  "test_decomposition_mscthesisaritra",
                  0.5204337191250163
                ],
                [
                  "test_unitary_undecomposed",
                  "test_decomposition_mscthesisaritra",
                  0.4720516978708019
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_unitary_decompose_2qubit_CNOT",
                  0.7048568633571084
                ],
                [
                  "test_unitary_decompose_X",
                  "test_sparse2qubitunitary",
                  0.8067293162770034
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "test_extremelysparseunitary",
                  0.16547196121994426
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "test_extremelysparseunitary",
                  0.5831358064242074
                ],
                [
                  "test_usingqx_10",
                  "test_sparse2qubit_multiplexor",
                  0.8326264108044279
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "test_adding2tothepower6unitary",
                  0.051442899026501815
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_usingqx_fullyentangled",
                  0.5964069433729057
                ],
                [
                  "test_unitary_basic",
                  "test_adding2tothepower6unitary",
                  0.3857133273743409
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_decomposition_controlled_U",
                  0.618019295495383
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_decomposition_rotatedtoffoli",
                  0.5137683838529602
                ],
                [
                  "test_usingqx_11",
                  "test_usingqx_fullyentangled_5qubit_10011",
                  0.8609262790964389
                ],
                [
                  "test_unitary_decompose_X",
                  "test_unitary_decompose_matrixinsteadofarray",
                  0.6227053229438411
                ],
                [
                  "test_usingqx_fullyentangled_5qubit",
                  "test_adding2tothepower6unitary",
                  0.9547428214256354
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "test_usingqx_00",
                  0.7176574204225845
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "test_decomposition_rotatedtoffoli",
                  0.553663425307879
                ],
                [
                  "test_unitary_basic",
                  "test_decomposition_controlled_U",
                  0.46987905649992295
                ],
                [
                  "test_usingqx_11",
                  "test_sparse2qubit_multiplexor",
                  0.8325920411610657
                ],
                [
                  "test_non_90_degree_angle",
                  "test_decomposition_mscthesisaritra",
                  0.594325921433026
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_non_90_degree_angle",
                  0.6732527698714189
                ],
                [
                  "test_usingqx_fullyentangled_4qubit",
                  "test_decomposition_controlled_U",
                  0.5576487940267882
                ],
                [
                  "test_usingqx_00",
                  "test_usingqx_bellstate",
                  0.9678729363422355
                ],
                [
                  "test_extremelysparseunitary",
                  "test_decomposition_mscthesisaritra",
                  0.7010451976307169
                ],
                [
                  "test_usingqx_11",
                  "test_sparse2qubitunitaryotherqubit",
                  0.8840587027962729
                ],
                [
                  "test_unitary_decompose_I",
                  "test_usingqx_fullyentangled_4qubit",
                  0.5023433267436329
                ],
                [
                  "test_unitary_decompose_I",
                  "test_unitary_decompose_IYZ_differentorder",
                  0.8756274214377845
                ],
                [
                  "test_usingqx_sparseunitary",
                  "test_decomposition_controlled_U",
                  0.5564860969769824
                ],
                [
                  "test_sparse2qubitunitary",
                  "test_sparse2qubitunitaryotherqubitcheck",
                  0.8645005872890282
                ],
                [
                  "test_unitary_decompose_X",
                  "test_decomposition_controlled_U",
                  0.5813717963398057
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_decomposition_mscthesisaritra",
                  0.5169335263490499
                ],
                [
                  "test_unitary_decompose_X",
                  "test_usingqx_00",
                  0.713206047869963
                ],
                [
                  "test_non_90_degree_angle",
                  "test_decomposition_rotatedtoffoli",
                  0.45052358397862274
                ],
                [
                  "test_decomposition_rotatedtoffoli",
                  "test_decomposition_toffoli",
                  0.999494979441983
                ],
                [
                  "test_usingqx_10",
                  "test_decomposition_controlled_U",
                  0.4475007177945661
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_usingqx_01",
                  0.932813521352975
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_unitary_decompose_2qubit_CNOT_2",
                  0.9613821437956842
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "test_usingqx_fullyentangled_5qubit_10011",
                  0.4237736075640615
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_usingqx_11",
                  0.9297757395478715
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "test_usingqx_bellstate",
                  0.7173075159629247
                ],
                [
                  "test_unitary_wrongnumberofqubits_toofew",
                  "test_unitary_decompose_IYZ",
                  0.7199897043030714
                ],
                [
                  "test_unitary_decompose_I",
                  "test_unitary_decompose_2qubit_CNOT_2",
                  0.853359019508638
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_extremelysparseunitary",
                  0.47561825149481407
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "test_usingqx_fullyentangled_5qubit",
                  0.42425444214543306
                ],
                [
                  "test_usingqx_00",
                  "test_usingqx_fullyentangled_3qubit",
                  0.8338158794958926
                ],
                [
                  "test_unitary_decompose_I",
                  "test_usingqx_fullyentangled_5qubit_10011",
                  0.4802933808792591
                ],
                [
                  "test_unitary_decompose_I",
                  "test_unitary_decompose_Y",
                  0.9490228245463461
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_adding2tothepower6unitary",
                  0.4023098013064528
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "test_decomposition_controlled_U",
                  0.36258867915355686
                ],
                [
                  "test_usingqx_fullyentangled_4qubit",
                  "test_sparse2qubitunitaryotherqubit",
                  0.7129553575819216
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_unitary_decompose_Z",
                  0.8438705779531265
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "test_extremelysparseunitary",
                  0.4929011481590562
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "test_usingqx_fullyentangled_3qubit",
                  0.5721273873254037
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "test_usingqx_fullyentangled_5qubit",
                  0.581118303571302
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_usingqx_sparseunitary",
                  0.4431557145641711
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "test_usingqx_fullyentangled_3qubit",
                  0.12313565388459966
                ],
                [
                  "test_usingqx_00",
                  "test_usingqx_fullyentangled_5qubit_10011",
                  0.8651851392099028
                ],
                [
                  "test_unitary_basic",
                  "test_unitary_decompose_2qubit_CNOT_2",
                  0.8536087038673846
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_usingqx_00",
                  0.7201155128057817
                ],
                [
                  "test_unitary_basic",
                  "test_usingqx_bellstate",
                  0.6313057612544386
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_usingqx_fullyentangled_5qubit",
                  0.5732235233256087
                ],
                [
                  "test_unitary_decompose_X",
                  "test_usingqx_fullyentangled_3qubit",
                  0.4713130135033226
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_sparse2qubitunitary",
                  0.7856549949396662
                ],
                [
                  "test_unitary_decompose_I",
                  "test_usingqx_fullyentangled_3qubit",
                  0.5152658215296889
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_usingqx_fullyentangled_5qubit",
                  0.4191141227065975
                ],
                [
                  "test_unitary_basic",
                  "test_unitary_wrongnumberofqubits",
                  0.8948542208889474
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "test_decomposition_rotatedtoffoli",
                  0.5471824461374316
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "test_usingqx_fullyentangled",
                  0.6558680799530423
                ],
                [
                  "test_unitary_basic",
                  "test_usingqx_fullyentangled_3qubit",
                  0.4746624110122136
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_sparse2qubitunitary",
                  0.8017903503792085
                ],
                [
                  "test_unitary_decompose_Y",
                  "test_usingqx_01",
                  0.7281169395776064
                ],
                [
                  "test_unitary_decompose_X",
                  "test_unitary_decompose_2qubit_CNOT_2",
                  0.8542679182289006
                ],
                [
                  "test_usingqx_01",
                  "test_usingqx_fullyentangled_5qubit",
                  0.862246178577424
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT",
                  "test_unitary_decompose_2qubit_CNOT_2",
                  0.9950010636930698
                ],
                [
                  "test_unitary_decompose_2qubit_CNOT_2",
                  "test_non_90_degree_angle",
                  0.7520539008586441
                ],
                [
                  "test_usingqx_11",
                  "test_decomposition_rotatedtoffoli",
                  0.39816527289067233
                ],
                [
                  "test_usingqx_00",
                  "test_extremelysparseunitary",
                  0.6889821868127826
                ],
                [
                  "test_unitary_decompose_I",
                  "test_usingqx_bellstate",
                  0.7207456070277622
                ],
                [
                  "test_usingqx_00",
                  "test_decomposition_controlled_U",
                  0.44659015915815004
                ],
                [
                  "test_usingqx_bellstate",
                  "test_decomposition_toffoli",
                  0.4472150996027036
                ],
                [
                  "test_unitary_wrongnumberofqubits",
                  "test_unitary_decompose_2qubit_CNOT",
                  0.844304399284419
                ],
                [
                  "test_usingqx_01",
                  "test_sparse2qubit_multiplexor",
                  0.8326264108044279
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_usingqx_sparseunitary",
                  0.5843785533413962
                ],
                [
                  "test_unitary_decompose_IYZ",
                  "test_sparse2qubitunitaryotherqubit",
                  0.8117274122180191
                ],
                [
                  "test_unitary_basic",
                  "test_usingqx_00",
                  0.6291268914879385
                ],
                [
                  "test_usingqx_fullyentangled_3qubit",
                  "test_decomposition_mscthesisaritra",
                  0.6615542459714904
                ],
                [
                  "test_unitary_decompose_IYZ_differentorder",
                  "test_usingqx_fullyentangled",
                  0.6688770064341277
                ],
                [
                  "test_unitary_decompose_X",
                  "test_usingqx_bellstate",
                  0.6792139394019509
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "test_sparse2qubitunitary",
                  0.7315387374805512
                ],
                [
                  "test_unitary_called_hadamard",
                  "test_unitary_undecomposed",
                  0.8969086507468923
                ],
                [
                  "test_unitary_decompose_I",
                  "test_decomposition_controlled_U",
                  0.5745458996866988
                ],
                [
                  "test_sparse2qubit_multiplexor",
                  "test_decomposition_toffoli",
                  0.7583442395338902
                ],
                [
                  "test_unitary_decompose_Z",
                  "test_sparse2qubitunitaryotherqubit",
                  0.794206457121035
                ],
                [
                  "test_unitary_decompose_nonunitary",
                  "test_usingqx_sparseunitary",
                  0.4428210757480597
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "test_usingqx_bellstate",
                  0.2799682217151909
                ],
                [
                  "test_unitary_undecomposed",
                  "test_usingqx_01",
                  0.614689529292924
                ],
                [
                  "test_usingqx_11",
                  "test_usingqx_fullyentangled_5qubit",
                  0.8596816373985761
                ],
                [
                  "test_unitary_basic",
                  "test_usingqx_fullyentangled_4qubit",
                  0.4784712113812337
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "test_usingqx_00",
                  0.29635132699815714
                ],
                [
                  "test_unitary_basic",
                  "test_unitary_decompose_IYZ_differentorder",
                  0.9043747544788716
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "test_unitary_decompose_2qubit_CNOT_2",
                  0.3786536294026115
                ],
                [
                  "test_unitary_decompose_matrixinsteadofarray",
                  "test_usingqx_fullyentangled_4qubit",
                  0.10041641223588625
                ],
                [
                  "test_usingqx_01",
                  "test_decomposition_rotatedtoffoli",
                  0.3975140882843436
                ],
                [
                  "test_usingqx_10",
                  "test_usingqx_fullyentangled_5qubit_10011",
                  0.8634497394296007
                ],
                [
                  "test_usingqx_10",
                  "test_extremelysparseunitary",
                  0.688236951244367
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_usingqx_10",
                "false"
              ],
              [
                "test_extremelysparseunitary",
                "false"
              ],
              [
                "test_decomposition_rotatedtoffoli",
                "false"
              ],
              [
                "test_unitary_decompose_X",
                "false"
              ],
              [
                "test_usingqx_fullyentangled_4qubit",
                "false"
              ],
              [
                "test_usingqx_00",
                "false"
              ],
              [
                "test_decomposition_controlled_U",
                "false"
              ],
              [
                "test_unitary_wrongnumberofqubits_toofew",
                "false"
              ],
              [
                "test_unitary_decompose_IYZ_differentorder",
                "false"
              ],
              [
                "test_adding2tothepower6unitary",
                "false"
              ],
              [
                "test_unitary_decompose_2qubit_CNOT_2",
                "false"
              ],
              [
                "test_usingqx_bellstate",
                "false"
              ],
              [
                "test_unitary_decompose_Y",
                "false"
              ],
              [
                "test_decomposition_toffoli",
                "false"
              ],
              [
                "test_unitary_decompose_Z",
                "false"
              ],
              [
                "test_unitary_decompose_I",
                "false"
              ],
              [
                "test_usingqx_01",
                "false"
              ],
              [
                "test_unitary_basic",
                "false"
              ],
              [
                "test_unitary_undecomposed",
                "false"
              ],
              [
                "test_usingqx_fullyentangled",
                "false"
              ],
              [
                "test_unitary_decompose_IYZ",
                "false"
              ],
              [
                "test_usingqx_11",
                "false"
              ],
              [
                "test_sparse2qubitunitary",
                "false"
              ],
              [
                "test_usingqx_fullyentangled_5qubit_10011",
                "false"
              ],
              [
                "test_sparse2qubit_multiplexor",
                "false"
              ],
              [
                "test_unitary_decompose_2qubit_CNOT",
                "false"
              ],
              [
                "test_usingqx_fullyentangled_5qubit",
                "false"
              ],
              [
                "test_decomposition_mscthesisaritra",
                "false"
              ],
              [
                "test_sparse2qubitunitaryotherqubit",
                "false"
              ],
              [
                "test_unitary_decompose_nonunitary",
                "false"
              ],
              [
                "test_unitary_decompose_matrixinsteadofarray",
                "false"
              ],
              [
                "test_unitary_wrongnumberofqubits",
                "false"
              ],
              [
                "test_usingqx_fullyentangled_3qubit",
                "false"
              ],
              [
                "test_sparse2qubitunitaryotherqubitcheck",
                "false"
              ],
              [
                "test_usingqx_sparseunitary",
                "false"
              ],
              [
                "test_non_90_degree_angle",
                "false"
              ],
              [
                "test_unitary_called_hadamard",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 37
      }
    ]
  },
  {
    "name": "tests_\u0026_test_cc_light.py",
    "testCases": [
      {
        "name": "Test_basic",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_smis_multi_kernel",
                  "[]"
                ],
                [
                  "test_smis",
                  "[]"
                ],
                [
                  "test_smis_all_bundled",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_smit_all_bundled",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_smit",
                  "[]"
                ],
                [
                  "test_smis_with_custom_gates",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_smis_multi_kernel",
                  "[]"
                ],
                [
                  "test_smis",
                  "[]"
                ],
                [
                  "test_smis_all_bundled",
                  "[]"
                ],
                [
                  "test_smit_all_bundled",
                  "[]"
                ],
                [
                  "test_smit",
                  "[]"
                ],
                [
                  "test_smis_with_custom_gates",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_smis_multi_kernel",
                  "false"
                ],
                [
                  "test_smis",
                  "false"
                ],
                [
                  "test_smis_all_bundled",
                  "true"
                ],
                [
                  "test_smit_all_bundled",
                  "true"
                ],
                [
                  "test_smit",
                  "false"
                ],
                [
                  "test_smis_with_custom_gates",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_smis_multi_kernel",
                  "false"
                ],
                [
                  "test_smis",
                  "false"
                ],
                [
                  "test_smis_all_bundled",
                  "false"
                ],
                [
                  "test_smit_all_bundled",
                  "false"
                ],
                [
                  "test_smit",
                  "false"
                ],
                [
                  "test_smis_with_custom_gates",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_smis_multi_kernel",
                  "false"
                ],
                [
                  "test_smis",
                  "false"
                ],
                [
                  "test_smis_all_bundled",
                  "false"
                ],
                [
                  "test_smit_all_bundled",
                  "false"
                ],
                [
                  "test_smit",
                  "false"
                ],
                [
                  "test_smis_with_custom_gates",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_smis_multi_kernel",
                  "false"
                ],
                [
                  "test_smis",
                  "false"
                ],
                [
                  "test_smis_all_bundled",
                  "false"
                ],
                [
                  "test_smit_all_bundled",
                  "false"
                ],
                [
                  "test_smit",
                  "false"
                ],
                [
                  "test_smis_with_custom_gates",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_smis_multi_kernel",
                "false"
              ],
              [
                "test_smis",
                "false"
              ],
              [
                "test_smis_all_bundled",
                "false"
              ],
              [
                "test_smit_all_bundled",
                "false"
              ],
              [
                "test_smit",
                "false"
              ],
              [
                "test_smis_with_custom_gates",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_smis_multi_kernel",
                "false"
              ],
              [
                "test_smis",
                "false"
              ],
              [
                "test_smis_all_bundled",
                "false"
              ],
              [
                "test_smit_all_bundled",
                "false"
              ],
              [
                "test_smit",
                "false"
              ],
              [
                "test_smis_with_custom_gates",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_smis_multi_kernel",
                []
              ],
              [
                "test_smis",
                []
              ],
              [
                "test_smis_all_bundled",
                []
              ],
              [
                "test_smit_all_bundled",
                []
              ],
              [
                "test_smit",
                []
              ],
              [
                "test_smis_with_custom_gates",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_smis_multi_kernel",
                "false"
              ],
              [
                "test_smis",
                "false"
              ],
              [
                "test_smis_all_bundled",
                "false"
              ],
              [
                "test_smit_all_bundled",
                "false"
              ],
              [
                "test_smit",
                "false"
              ],
              [
                "test_smis_with_custom_gates",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_smis_multi_kernel",
                "false"
              ],
              [
                "test_smis",
                "false"
              ],
              [
                "test_smis_all_bundled",
                "false"
              ],
              [
                "test_smit_all_bundled",
                "false"
              ],
              [
                "test_smit",
                "false"
              ],
              [
                "test_smis_with_custom_gates",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_smis_multi_kernel",
                  "0"
                ],
                [
                  "test_smis",
                  "0"
                ],
                [
                  "test_smis_all_bundled",
                  "0"
                ],
                [
                  "test_smit_all_bundled",
                  "0"
                ],
                [
                  "test_smit",
                  "0"
                ],
                [
                  "test_smis_with_custom_gates",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_smis_multi_kernel",
                  "0"
                ],
                [
                  "test_smis",
                  "0"
                ],
                [
                  "test_smis_all_bundled",
                  "0"
                ],
                [
                  "test_smit_all_bundled",
                  "0"
                ],
                [
                  "test_smit",
                  "0"
                ],
                [
                  "test_smis_with_custom_gates",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_smis_multi_kernel",
                "false"
              ],
              [
                "test_smis",
                "false"
              ],
              [
                "test_smis_all_bundled",
                "false"
              ],
              [
                "test_smit_all_bundled",
                "false"
              ],
              [
                "test_smit",
                "false"
              ],
              [
                "test_smis_with_custom_gates",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_smis_multi_kernel",
                "false"
              ],
              [
                "test_smis",
                "false"
              ],
              [
                "test_smis_all_bundled",
                "false"
              ],
              [
                "test_smit_all_bundled",
                "false"
              ],
              [
                "test_smit",
                "false"
              ],
              [
                "test_smis_with_custom_gates",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_smis_multi_kernel",
                "0"
              ],
              [
                "test_smis",
                "0"
              ],
              [
                "test_smis_all_bundled",
                "1"
              ],
              [
                "test_smit_all_bundled",
                "1"
              ],
              [
                "test_smit",
                "0"
              ],
              [
                "test_smis_with_custom_gates",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_smis_multi_kernel",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "QISA_fn",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_smis",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "QISA_fn",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_smis_all_bundled",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "QISA_fn",
                  "k",
                  "platform",
                  "GOLD_fn"
                ]
              ],
              [
                "test_smit_all_bundled",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "QISA_fn",
                  "k",
                  "platform",
                  "GOLD_fn"
                ]
              ],
              [
                "test_smit",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "QISA_fn",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_smis_with_custom_gates",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "QISA_fn",
                  "k",
                  "platform"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_smis_multi_kernel",
                []
              ],
              [
                "test_smis",
                []
              ],
              [
                "test_smis_all_bundled",
                []
              ],
              [
                "test_smit_all_bundled",
                []
              ],
              [
                "test_smit",
                []
              ],
              [
                "test_smis_with_custom_gates",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7789482606280796,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_smis_multi_kernel",
                  "test_smit_all_bundled",
                  0.7676646167146344
                ],
                [
                  "test_smis",
                  "test_smis_all_bundled",
                  0.7061014897155439
                ],
                [
                  "test_smis",
                  "test_smit_all_bundled",
                  0.659951095590888
                ],
                [
                  "test_smis_all_bundled",
                  "test_smit_all_bundled",
                  0.7978184795480182
                ],
                [
                  "test_smis_multi_kernel",
                  "test_smis_all_bundled",
                  0.6720492380174531
                ],
                [
                  "test_smit",
                  "test_smit_all_bundled",
                  0.6987215686854997
                ],
                [
                  "test_smis",
                  "test_smis_with_custom_gates",
                  0.7839058211871468
                ],
                [
                  "test_smis",
                  "test_smis_multi_kernel",
                  0.8390284327503058
                ],
                [
                  "test_smis_with_custom_gates",
                  "test_smis_multi_kernel",
                  0.8793513346211803
                ],
                [
                  "test_smis_multi_kernel",
                  "test_smit",
                  0.8550072171377421
                ],
                [
                  "test_smis",
                  "test_smit",
                  0.9481530971030045
                ],
                [
                  "test_smis_with_custom_gates",
                  "test_smit_all_bundled",
                  0.856174443256483
                ],
                [
                  "test_smis_all_bundled",
                  "test_smit",
                  0.6673707094488532
                ],
                [
                  "test_smis_with_custom_gates",
                  "test_smis_all_bundled",
                  0.7882878598827504
                ],
                [
                  "test_smis_with_custom_gates",
                  "test_smit",
                  0.764638505761692
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_smis_multi_kernel",
                "false"
              ],
              [
                "test_smis",
                "false"
              ],
              [
                "test_smis_all_bundled",
                "false"
              ],
              [
                "test_smit_all_bundled",
                "false"
              ],
              [
                "test_smit",
                "false"
              ],
              [
                "test_smis_with_custom_gates",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      },
      {
        "name": "Test_advance",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_qwg_available_01",
                  "[]"
                ],
                [
                  "test_fast_feedback",
                  "[]"
                ],
                [
                  "test_ccl_buffers",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_edge_illegal",
                  "[]"
                ],
                [
                  "test_single_qubit_flux_auto",
                  "[]"
                ],
                [
                  "test_ccl_latencies",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_edge_available",
                  "[]"
                ],
                [
                  "test_qwg_available_02",
                  "[]"
                ],
                [
                  "test_measure_busy",
                  "[]"
                ],
                [
                  "test_single_qubit_flux_manual01",
                  "[]"
                ],
                [
                  "test_qubit_busy",
                  "[]"
                ],
                [
                  "test_single_qubit_flux_manual02",
                  "[]"
                ],
                [
                  "test_measure_available02",
                  "[]"
                ],
                [
                  "test_edge_busy",
                  "[]"
                ],
                [
                  "test_measure_available01",
                  "[]"
                ],
                [
                  "test_qwg_busy",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_qwg_available_01",
                  "[]"
                ],
                [
                  "test_fast_feedback",
                  "[]"
                ],
                [
                  "test_ccl_buffers",
                  "[]"
                ],
                [
                  "test_edge_illegal",
                  "[]"
                ],
                [
                  "test_single_qubit_flux_auto",
                  "[]"
                ],
                [
                  "test_ccl_latencies",
                  "[]"
                ],
                [
                  "test_edge_available",
                  "[]"
                ],
                [
                  "test_qwg_available_02",
                  "[]"
                ],
                [
                  "test_measure_busy",
                  "[]"
                ],
                [
                  "test_single_qubit_flux_manual01",
                  "[]"
                ],
                [
                  "test_qubit_busy",
                  "[]"
                ],
                [
                  "test_single_qubit_flux_manual02",
                  "[]"
                ],
                [
                  "test_measure_available02",
                  "[]"
                ],
                [
                  "test_edge_busy",
                  "[]"
                ],
                [
                  "test_measure_available01",
                  "[]"
                ],
                [
                  "test_qwg_busy",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_qwg_available_01",
                  "false"
                ],
                [
                  "test_fast_feedback",
                  "false"
                ],
                [
                  "test_ccl_buffers",
                  "true"
                ],
                [
                  "test_edge_illegal",
                  "false"
                ],
                [
                  "test_single_qubit_flux_auto",
                  "false"
                ],
                [
                  "test_ccl_latencies",
                  "true"
                ],
                [
                  "test_edge_available",
                  "false"
                ],
                [
                  "test_qwg_available_02",
                  "false"
                ],
                [
                  "test_measure_busy",
                  "false"
                ],
                [
                  "test_single_qubit_flux_manual01",
                  "false"
                ],
                [
                  "test_qubit_busy",
                  "false"
                ],
                [
                  "test_single_qubit_flux_manual02",
                  "false"
                ],
                [
                  "test_measure_available02",
                  "false"
                ],
                [
                  "test_edge_busy",
                  "false"
                ],
                [
                  "test_measure_available01",
                  "false"
                ],
                [
                  "test_qwg_busy",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_qwg_available_01",
                  "false"
                ],
                [
                  "test_fast_feedback",
                  "false"
                ],
                [
                  "test_ccl_buffers",
                  "false"
                ],
                [
                  "test_edge_illegal",
                  "false"
                ],
                [
                  "test_single_qubit_flux_auto",
                  "false"
                ],
                [
                  "test_ccl_latencies",
                  "false"
                ],
                [
                  "test_edge_available",
                  "false"
                ],
                [
                  "test_qwg_available_02",
                  "false"
                ],
                [
                  "test_measure_busy",
                  "false"
                ],
                [
                  "test_single_qubit_flux_manual01",
                  "false"
                ],
                [
                  "test_qubit_busy",
                  "false"
                ],
                [
                  "test_single_qubit_flux_manual02",
                  "false"
                ],
                [
                  "test_measure_available02",
                  "false"
                ],
                [
                  "test_edge_busy",
                  "false"
                ],
                [
                  "test_measure_available01",
                  "false"
                ],
                [
                  "test_qwg_busy",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_qwg_available_01",
                  "false"
                ],
                [
                  "test_fast_feedback",
                  "false"
                ],
                [
                  "test_ccl_buffers",
                  "false"
                ],
                [
                  "test_edge_illegal",
                  "false"
                ],
                [
                  "test_single_qubit_flux_auto",
                  "false"
                ],
                [
                  "test_ccl_latencies",
                  "false"
                ],
                [
                  "test_edge_available",
                  "false"
                ],
                [
                  "test_qwg_available_02",
                  "false"
                ],
                [
                  "test_measure_busy",
                  "false"
                ],
                [
                  "test_single_qubit_flux_manual01",
                  "false"
                ],
                [
                  "test_qubit_busy",
                  "false"
                ],
                [
                  "test_single_qubit_flux_manual02",
                  "false"
                ],
                [
                  "test_measure_available02",
                  "false"
                ],
                [
                  "test_edge_busy",
                  "false"
                ],
                [
                  "test_measure_available01",
                  "false"
                ],
                [
                  "test_qwg_busy",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_qwg_available_01",
                  "false"
                ],
                [
                  "test_fast_feedback",
                  "false"
                ],
                [
                  "test_ccl_buffers",
                  "false"
                ],
                [
                  "test_edge_illegal",
                  "false"
                ],
                [
                  "test_single_qubit_flux_auto",
                  "false"
                ],
                [
                  "test_ccl_latencies",
                  "false"
                ],
                [
                  "test_edge_available",
                  "false"
                ],
                [
                  "test_qwg_available_02",
                  "false"
                ],
                [
                  "test_measure_busy",
                  "false"
                ],
                [
                  "test_single_qubit_flux_manual01",
                  "false"
                ],
                [
                  "test_qubit_busy",
                  "false"
                ],
                [
                  "test_single_qubit_flux_manual02",
                  "false"
                ],
                [
                  "test_measure_available02",
                  "false"
                ],
                [
                  "test_edge_busy",
                  "false"
                ],
                [
                  "test_measure_available01",
                  "false"
                ],
                [
                  "test_qwg_busy",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_qwg_available_01",
                "false"
              ],
              [
                "test_fast_feedback",
                "false"
              ],
              [
                "test_ccl_buffers",
                "false"
              ],
              [
                "test_edge_illegal",
                "false"
              ],
              [
                "test_single_qubit_flux_auto",
                "false"
              ],
              [
                "test_ccl_latencies",
                "false"
              ],
              [
                "test_edge_available",
                "false"
              ],
              [
                "test_qwg_available_02",
                "false"
              ],
              [
                "test_measure_busy",
                "false"
              ],
              [
                "test_single_qubit_flux_manual01",
                "false"
              ],
              [
                "test_qubit_busy",
                "false"
              ],
              [
                "test_single_qubit_flux_manual02",
                "false"
              ],
              [
                "test_measure_available02",
                "false"
              ],
              [
                "test_edge_busy",
                "false"
              ],
              [
                "test_measure_available01",
                "false"
              ],
              [
                "test_qwg_busy",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_qwg_available_01",
                "false"
              ],
              [
                "test_fast_feedback",
                "false"
              ],
              [
                "test_ccl_buffers",
                "false"
              ],
              [
                "test_edge_illegal",
                "true"
              ],
              [
                "test_single_qubit_flux_auto",
                "false"
              ],
              [
                "test_ccl_latencies",
                "false"
              ],
              [
                "test_edge_available",
                "false"
              ],
              [
                "test_qwg_available_02",
                "false"
              ],
              [
                "test_measure_busy",
                "false"
              ],
              [
                "test_single_qubit_flux_manual01",
                "false"
              ],
              [
                "test_qubit_busy",
                "false"
              ],
              [
                "test_single_qubit_flux_manual02",
                "false"
              ],
              [
                "test_measure_available02",
                "false"
              ],
              [
                "test_edge_busy",
                "false"
              ],
              [
                "test_measure_available01",
                "false"
              ],
              [
                "test_qwg_busy",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_qwg_available_01",
                []
              ],
              [
                "test_fast_feedback",
                []
              ],
              [
                "test_ccl_buffers",
                []
              ],
              [
                "test_edge_illegal",
                []
              ],
              [
                "test_single_qubit_flux_auto",
                []
              ],
              [
                "test_ccl_latencies",
                []
              ],
              [
                "test_edge_available",
                []
              ],
              [
                "test_qwg_available_02",
                []
              ],
              [
                "test_measure_busy",
                []
              ],
              [
                "test_single_qubit_flux_manual01",
                []
              ],
              [
                "test_qubit_busy",
                []
              ],
              [
                "test_single_qubit_flux_manual02",
                []
              ],
              [
                "test_measure_available02",
                []
              ],
              [
                "test_edge_busy",
                []
              ],
              [
                "test_measure_available01",
                []
              ],
              [
                "test_qwg_busy",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": true,
            "detail": [
              [
                "test_qwg_available_01",
                "false"
              ],
              [
                "test_fast_feedback",
                "false"
              ],
              [
                "test_ccl_buffers",
                "true"
              ],
              [
                "test_edge_illegal",
                "false"
              ],
              [
                "test_single_qubit_flux_auto",
                "false"
              ],
              [
                "test_ccl_latencies",
                "false"
              ],
              [
                "test_edge_available",
                "false"
              ],
              [
                "test_qwg_available_02",
                "false"
              ],
              [
                "test_measure_busy",
                "false"
              ],
              [
                "test_single_qubit_flux_manual01",
                "false"
              ],
              [
                "test_qubit_busy",
                "false"
              ],
              [
                "test_single_qubit_flux_manual02",
                "false"
              ],
              [
                "test_measure_available02",
                "false"
              ],
              [
                "test_edge_busy",
                "false"
              ],
              [
                "test_measure_available01",
                "false"
              ],
              [
                "test_qwg_busy",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_qwg_available_01",
                "false"
              ],
              [
                "test_fast_feedback",
                "false"
              ],
              [
                "test_ccl_buffers",
                "false"
              ],
              [
                "test_edge_illegal",
                "false"
              ],
              [
                "test_single_qubit_flux_auto",
                "false"
              ],
              [
                "test_ccl_latencies",
                "false"
              ],
              [
                "test_edge_available",
                "false"
              ],
              [
                "test_qwg_available_02",
                "false"
              ],
              [
                "test_measure_busy",
                "false"
              ],
              [
                "test_single_qubit_flux_manual01",
                "false"
              ],
              [
                "test_qubit_busy",
                "false"
              ],
              [
                "test_single_qubit_flux_manual02",
                "false"
              ],
              [
                "test_measure_available02",
                "false"
              ],
              [
                "test_edge_busy",
                "false"
              ],
              [
                "test_measure_available01",
                "false"
              ],
              [
                "test_qwg_busy",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_qwg_available_01",
                  "0"
                ],
                [
                  "test_fast_feedback",
                  "0"
                ],
                [
                  "test_ccl_buffers",
                  "0"
                ],
                [
                  "test_edge_illegal",
                  "0"
                ],
                [
                  "test_single_qubit_flux_auto",
                  "0"
                ],
                [
                  "test_ccl_latencies",
                  "0"
                ],
                [
                  "test_edge_available",
                  "0"
                ],
                [
                  "test_qwg_available_02",
                  "0"
                ],
                [
                  "test_measure_busy",
                  "0"
                ],
                [
                  "test_single_qubit_flux_manual01",
                  "0"
                ],
                [
                  "test_qubit_busy",
                  "0"
                ],
                [
                  "test_single_qubit_flux_manual02",
                  "0"
                ],
                [
                  "test_measure_available02",
                  "0"
                ],
                [
                  "test_edge_busy",
                  "0"
                ],
                [
                  "test_measure_available01",
                  "0"
                ],
                [
                  "test_qwg_busy",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_qwg_available_01",
                  "0"
                ],
                [
                  "test_fast_feedback",
                  "0"
                ],
                [
                  "test_ccl_buffers",
                  "0"
                ],
                [
                  "test_edge_illegal",
                  "0"
                ],
                [
                  "test_single_qubit_flux_auto",
                  "0"
                ],
                [
                  "test_ccl_latencies",
                  "0"
                ],
                [
                  "test_edge_available",
                  "0"
                ],
                [
                  "test_qwg_available_02",
                  "0"
                ],
                [
                  "test_measure_busy",
                  "0"
                ],
                [
                  "test_single_qubit_flux_manual01",
                  "0"
                ],
                [
                  "test_qubit_busy",
                  "0"
                ],
                [
                  "test_single_qubit_flux_manual02",
                  "0"
                ],
                [
                  "test_measure_available02",
                  "0"
                ],
                [
                  "test_edge_busy",
                  "0"
                ],
                [
                  "test_measure_available01",
                  "0"
                ],
                [
                  "test_qwg_busy",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_qwg_available_01",
                "false"
              ],
              [
                "test_fast_feedback",
                "false"
              ],
              [
                "test_ccl_buffers",
                "true"
              ],
              [
                "test_edge_illegal",
                "false"
              ],
              [
                "test_single_qubit_flux_auto",
                "false"
              ],
              [
                "test_ccl_latencies",
                "true"
              ],
              [
                "test_edge_available",
                "false"
              ],
              [
                "test_qwg_available_02",
                "false"
              ],
              [
                "test_measure_busy",
                "false"
              ],
              [
                "test_single_qubit_flux_manual01",
                "false"
              ],
              [
                "test_qubit_busy",
                "false"
              ],
              [
                "test_single_qubit_flux_manual02",
                "false"
              ],
              [
                "test_measure_available02",
                "false"
              ],
              [
                "test_edge_busy",
                "false"
              ],
              [
                "test_measure_available01",
                "false"
              ],
              [
                "test_qwg_busy",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_qwg_available_01",
                "false"
              ],
              [
                "test_fast_feedback",
                "false"
              ],
              [
                "test_ccl_buffers",
                "false"
              ],
              [
                "test_edge_illegal",
                "false"
              ],
              [
                "test_single_qubit_flux_auto",
                "false"
              ],
              [
                "test_ccl_latencies",
                "false"
              ],
              [
                "test_edge_available",
                "false"
              ],
              [
                "test_qwg_available_02",
                "false"
              ],
              [
                "test_measure_busy",
                "false"
              ],
              [
                "test_single_qubit_flux_manual01",
                "false"
              ],
              [
                "test_qubit_busy",
                "false"
              ],
              [
                "test_single_qubit_flux_manual02",
                "false"
              ],
              [
                "test_measure_available02",
                "false"
              ],
              [
                "test_edge_busy",
                "false"
              ],
              [
                "test_measure_available01",
                "false"
              ],
              [
                "test_qwg_busy",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_qwg_available_01",
                "0"
              ],
              [
                "test_fast_feedback",
                "0"
              ],
              [
                "test_ccl_buffers",
                "1"
              ],
              [
                "test_edge_illegal",
                "0"
              ],
              [
                "test_single_qubit_flux_auto",
                "0"
              ],
              [
                "test_ccl_latencies",
                "1"
              ],
              [
                "test_edge_available",
                "0"
              ],
              [
                "test_qwg_available_02",
                "0"
              ],
              [
                "test_measure_busy",
                "0"
              ],
              [
                "test_single_qubit_flux_manual01",
                "0"
              ],
              [
                "test_qubit_busy",
                "0"
              ],
              [
                "test_single_qubit_flux_manual02",
                "0"
              ],
              [
                "test_measure_available02",
                "0"
              ],
              [
                "test_edge_busy",
                "0"
              ],
              [
                "test_measure_available01",
                "0"
              ],
              [
                "test_qwg_busy",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_qwg_available_01",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "QISA_fn",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_fast_feedback",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "QISA_fn",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_ccl_buffers",
                [
                  "p",
                  "tests",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "QISA_fn",
                  "k",
                  "gold_fn",
                  "platform"
                ]
              ],
              [
                "test_edge_illegal",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_single_qubit_flux_auto",
                [
                  "p",
                  "num_qubits",
                  "config_fn",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_ccl_latencies",
                [
                  "p",
                  "tests",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "QISA_fn",
                  "k",
                  "gold_fn",
                  "platform"
                ]
              ],
              [
                "test_edge_available",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_qwg_available_02",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "QISA_fn",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_measure_busy",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "QISA_fn",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_single_qubit_flux_manual01",
                [
                  "p",
                  "num_qubits",
                  "config_fn",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_qubit_busy",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "QISA_fn",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_single_qubit_flux_manual02",
                [
                  "p",
                  "num_qubits",
                  "config_fn",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_measure_available02",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "QISA_fn",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_edge_busy",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "QISA_fn",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_measure_available01",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "QISA_fn",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_qwg_busy",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "QISA_fn",
                  "k",
                  "platform"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_qwg_available_01",
                []
              ],
              [
                "test_fast_feedback",
                []
              ],
              [
                "test_ccl_buffers",
                []
              ],
              [
                "test_edge_illegal",
                []
              ],
              [
                "test_single_qubit_flux_auto",
                []
              ],
              [
                "test_ccl_latencies",
                []
              ],
              [
                "test_edge_available",
                []
              ],
              [
                "test_qwg_available_02",
                []
              ],
              [
                "test_measure_busy",
                []
              ],
              [
                "test_single_qubit_flux_manual01",
                []
              ],
              [
                "test_qubit_busy",
                []
              ],
              [
                "test_single_qubit_flux_manual02",
                []
              ],
              [
                "test_measure_available02",
                []
              ],
              [
                "test_edge_busy",
                []
              ],
              [
                "test_measure_available01",
                []
              ],
              [
                "test_qwg_busy",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7157518232089187,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_qwg_available_02",
                  "test_single_qubit_flux_manual02",
                  0.5482797267556777
                ],
                [
                  "test_ccl_buffers",
                  "test_single_qubit_flux_manual02",
                  0.4781388658970435
                ],
                [
                  "test_measure_busy",
                  "test_fast_feedback",
                  0.8912836073288314
                ],
                [
                  "test_edge_illegal",
                  "test_fast_feedback",
                  0.8745492238631349
                ],
                [
                  "test_qubit_busy",
                  "test_qwg_busy",
                  0.970596590232412
                ],
                [
                  "test_qwg_available_01",
                  "test_edge_illegal",
                  0.9113223768657671
                ],
                [
                  "test_edge_busy",
                  "test_ccl_buffers",
                  0.5056756964347127
                ],
                [
                  "test_measure_busy",
                  "test_edge_busy",
                  0.8705232158732847
                ],
                [
                  "test_qwg_available_02",
                  "test_ccl_latencies",
                  0.5204770009893785
                ],
                [
                  "test_qubit_busy",
                  "test_qwg_available_02",
                  0.9634036035203714
                ],
                [
                  "test_qwg_available_02",
                  "test_edge_illegal",
                  0.9143688384055806
                ],
                [
                  "test_ccl_buffers",
                  "test_single_qubit_flux_auto",
                  0.5132472164078532
                ],
                [
                  "test_qwg_busy",
                  "test_measure_available02",
                  0.8737765602134354
                ],
                [
                  "test_measure_busy",
                  "test_single_qubit_flux_manual01",
                  0.5529967206020813
                ],
                [
                  "test_measure_available01",
                  "test_edge_illegal",
                  0.8209506308948902
                ],
                [
                  "test_qwg_available_02",
                  "test_measure_available01",
                  0.8832454178796343
                ],
                [
                  "test_measure_available02",
                  "test_edge_illegal",
                  0.8279439860944663
                ],
                [
                  "test_ccl_buffers",
                  "test_ccl_latencies",
                  0.6082044494506532
                ],
                [
                  "test_qubit_busy",
                  "test_single_qubit_flux_manual02",
                  0.5734916461278076
                ],
                [
                  "test_qubit_busy",
                  "test_ccl_latencies",
                  0.5133832072674623
                ],
                [
                  "test_qubit_busy",
                  "test_single_qubit_flux_auto",
                  0.6163603055915152
                ],
                [
                  "test_qubit_busy",
                  "test_edge_available",
                  0.8921004423035089
                ],
                [
                  "test_qwg_busy",
                  "test_fast_feedback",
                  0.9240979713893086
                ],
                [
                  "test_edge_available",
                  "test_edge_busy",
                  0.9687954140680693
                ],
                [
                  "test_measure_busy",
                  "test_ccl_buffers",
                  0.3854627223030216
                ],
                [
                  "test_measure_available01",
                  "test_edge_available",
                  0.801806097871316
                ],
                [
                  "test_measure_available01",
                  "test_ccl_buffers",
                  0.37666205470536035
                ],
                [
                  "test_fast_feedback",
                  "test_single_qubit_flux_manual01",
                  0.6468349537219648
                ],
                [
                  "test_measure_busy",
                  "test_single_qubit_flux_auto",
                  0.5322276049108691
                ],
                [
                  "test_measure_busy",
                  "test_edge_available",
                  0.8370488695416395
                ],
                [
                  "test_edge_available",
                  "test_fast_feedback",
                  0.8648317086563841
                ],
                [
                  "test_fast_feedback",
                  "test_ccl_buffers",
                  0.40890069699168946
                ],
                [
                  "test_qubit_busy",
                  "test_ccl_buffers",
                  0.3896377380065525
                ],
                [
                  "test_qwg_available_02",
                  "test_single_qubit_flux_manual01",
                  0.6174417859430843
                ],
                [
                  "test_qwg_available_02",
                  "test_measure_busy",
                  0.909006678359122
                ],
                [
                  "test_qwg_available_02",
                  "test_single_qubit_flux_auto",
                  0.5885383172988153
                ],
                [
                  "test_qwg_available_01",
                  "test_qwg_busy",
                  0.9895857170070452
                ],
                [
                  "test_qwg_available_02",
                  "test_ccl_buffers",
                  0.3825665657233155
                ],
                [
                  "test_measure_available01",
                  "test_ccl_latencies",
                  0.4738980945292892
                ],
                [
                  "test_fast_feedback",
                  "test_single_qubit_flux_auto",
                  0.6307059974731641
                ],
                [
                  "test_fast_feedback",
                  "test_ccl_latencies",
                  0.5222132680248462
                ],
                [
                  "test_measure_available01",
                  "test_single_qubit_flux_manual02",
                  0.5090296664229909
                ],
                [
                  "test_measure_available01",
                  "test_single_qubit_flux_manual01",
                  0.5783135013771313
                ],
                [
                  "test_measure_available01",
                  "test_single_qubit_flux_auto",
                  0.546230404174834
                ],
                [
                  "test_qwg_available_02",
                  "test_edge_available",
                  0.8935081726263834
                ],
                [
                  "test_measure_available01",
                  "test_measure_busy",
                  0.9435634681832403
                ],
                [
                  "test_qubit_busy",
                  "test_qwg_available_01",
                  0.9606597022317859
                ],
                [
                  "test_qubit_busy",
                  "test_edge_illegal",
                  0.9130591980883946
                ],
                [
                  "test_qwg_available_01",
                  "test_edge_busy",
                  0.9553315707848502
                ],
                [
                  "test_qwg_available_02",
                  "test_measure_available02",
                  0.8856175035579994
                ],
                [
                  "test_qwg_busy",
                  "test_ccl_buffers",
                  0.43346033132099215
                ],
                [
                  "test_measure_available02",
                  "test_edge_busy",
                  0.8352086413453178
                ],
                [
                  "test_measure_busy",
                  "test_edge_illegal",
                  0.8660254037844387
                ],
                [
                  "test_edge_available",
                  "test_single_qubit_flux_auto",
                  0.7016574585635359
                ],
                [
                  "test_fast_feedback",
                  "test_single_qubit_flux_manual02",
                  0.5841269128324421
                ],
                [
                  "test_measure_available02",
                  "test_measure_busy",
                  0.9560273664911436
                ],
                [
                  "test_qwg_busy",
                  "test_measure_available01",
                  0.8697967824082514
                ],
                [
                  "test_edge_available",
                  "test_ccl_buffers",
                  0.5085813326223273
                ],
                [
                  "test_qwg_available_01",
                  "test_fast_feedback",
                  0.9185586535436919
                ],
                [
                  "test_qubit_busy",
                  "test_measure_available02",
                  0.8761978499671108
                ],
                [
                  "test_measure_available01",
                  "test_fast_feedback",
                  0.8451145677404114
                ],
                [
                  "test_measure_available02",
                  "test_fast_feedback",
                  0.8571446942325031
                ],
                [
                  "test_single_qubit_flux_manual01",
                  "test_single_qubit_flux_manual02",
                  0.9423526015542042
                ],
                [
                  "test_qwg_busy",
                  "test_single_qubit_flux_manual01",
                  0.6627640132335971
                ],
                [
                  "test_qwg_busy",
                  "test_ccl_latencies",
                  0.5351778195840883
                ],
                [
                  "test_qwg_busy",
                  "test_single_qubit_flux_auto",
                  0.6520768203809401
                ],
                [
                  "test_measure_available01",
                  "test_measure_available02",
                  0.9728102919902667
                ],
                [
                  "test_qubit_busy",
                  "test_fast_feedback",
                  0.9351718179520722
                ],
                [
                  "test_measure_available01",
                  "test_edge_busy",
                  0.8329715734817961
                ],
                [
                  "test_single_qubit_flux_manual02",
                  "test_single_qubit_flux_auto",
                  0.908840753592557
                ],
                [
                  "test_qwg_busy",
                  "test_single_qubit_flux_manual02",
                  0.6009341847573142
                ],
                [
                  "test_qwg_available_02",
                  "test_fast_feedback",
                  0.9161758774067177
                ],
                [
                  "test_measure_busy",
                  "test_single_qubit_flux_manual02",
                  0.4914716067014499
                ],
                [
                  "test_edge_available",
                  "test_single_qubit_flux_manual01",
                  0.6621033735095779
                ],
                [
                  "test_measure_busy",
                  "test_ccl_latencies",
                  0.49505608374878574
                ],
                [
                  "test_qwg_busy",
                  "test_edge_busy",
                  0.9558606620682333
                ],
                [
                  "test_qwg_available_02",
                  "test_edge_busy",
                  0.9284212657280109
                ],
                [
                  "test_edge_available",
                  "test_ccl_latencies",
                  0.5695722549304656
                ],
                [
                  "test_qubit_busy",
                  "test_measure_busy",
                  0.9138405084778106
                ],
                [
                  "test_edge_busy",
                  "test_edge_illegal",
                  0.9082460174376266
                ],
                [
                  "test_edge_available",
                  "test_single_qubit_flux_manual02",
                  0.6456245790548218
                ],
                [
                  "test_qubit_busy",
                  "test_single_qubit_flux_manual01",
                  0.6479390965872467
                ],
                [
                  "test_qwg_available_01",
                  "test_measure_available01",
                  0.880676930582723
                ],
                [
                  "test_measure_available02",
                  "test_ccl_latencies",
                  0.46948149237132514
                ],
                [
                  "test_ccl_buffers",
                  "test_single_qubit_flux_manual01",
                  0.4210979325430965
                ],
                [
                  "test_edge_illegal",
                  "test_ccl_buffers",
                  0.4167841464192021
                ],
                [
                  "test_qwg_busy",
                  "test_measure_busy",
                  0.9069782890465288
                ],
                [
                  "test_ccl_latencies",
                  "test_single_qubit_flux_auto",
                  0.4817810427043412
                ],
                [
                  "test_edge_available",
                  "test_edge_illegal",
                  0.9274321938229644
                ],
                [
                  "test_single_qubit_flux_manual01",
                  "test_single_qubit_flux_auto",
                  0.9257186055550579
                ],
                [
                  "test_measure_available02",
                  "test_single_qubit_flux_manual02",
                  0.4863466323813602
                ],
                [
                  "test_qwg_available_01",
                  "test_ccl_buffers",
                  0.43037416773743725
                ],
                [
                  "test_edge_busy",
                  "test_fast_feedback",
                  0.8858465293606894
                ],
                [
                  "test_qwg_available_01",
                  "test_edge_available",
                  0.9226533121591803
                ],
                [
                  "test_measure_available02",
                  "test_ccl_buffers",
                  0.38279104466384206
                ],
                [
                  "test_qwg_available_01",
                  "test_measure_available02",
                  0.8832720039254022
                ],
                [
                  "test_qwg_busy",
                  "test_edge_illegal",
                  0.9087581177793246
                ],
                [
                  "test_measure_available02",
                  "test_edge_available",
                  0.8091683659424022
                ],
                [
                  "test_qwg_available_01",
                  "test_single_qubit_flux_manual01",
                  0.6547619047619048
                ],
                [
                  "test_edge_illegal",
                  "test_ccl_latencies",
                  0.5196741149387697
                ],
                [
                  "test_qubit_busy",
                  "test_measure_available01",
                  0.8729266647324745
                ],
                [
                  "test_qubit_busy",
                  "test_edge_busy",
                  0.9283186600443807
                ],
                [
                  "test_qwg_available_01",
                  "test_qwg_available_02",
                  0.9870163164715171
                ],
                [
                  "test_ccl_latencies",
                  "test_single_qubit_flux_manual01",
                  0.4229293369324986
                ],
                [
                  "test_qwg_available_01",
                  "test_ccl_latencies",
                  0.5488577350079056
                ],
                [
                  "test_qwg_available_01",
                  "test_single_qubit_flux_auto",
                  0.6437116131343119
                ],
                [
                  "test_measure_available02",
                  "test_single_qubit_flux_auto",
                  0.5218896561403659
                ],
                [
                  "test_edge_busy",
                  "test_single_qubit_flux_auto",
                  0.6811842755166113
                ],
                [
                  "test_ccl_latencies",
                  "test_single_qubit_flux_manual02",
                  0.4446255826127113
                ],
                [
                  "test_qwg_available_02",
                  "test_qwg_busy",
                  0.9764055897257391
                ],
                [
                  "test_measure_available02",
                  "test_single_qubit_flux_manual01",
                  0.5525430881698756
                ],
                [
                  "test_edge_busy",
                  "test_single_qubit_flux_manual01",
                  0.6438864799429026
                ],
                [
                  "test_edge_illegal",
                  "test_single_qubit_flux_manual01",
                  0.5951493073409091
                ],
                [
                  "test_qwg_busy",
                  "test_edge_available",
                  0.9205790405377977
                ],
                [
                  "test_edge_busy",
                  "test_ccl_latencies",
                  0.5925421352097819
                ],
                [
                  "test_edge_illegal",
                  "test_single_qubit_flux_manual02",
                  0.5423917974909579
                ],
                [
                  "test_edge_illegal",
                  "test_single_qubit_flux_auto",
                  0.5866287972976582
                ],
                [
                  "test_qwg_available_01",
                  "test_measure_busy",
                  0.9019752336033948
                ],
                [
                  "test_qwg_available_01",
                  "test_single_qubit_flux_manual02",
                  0.5979254811031062
                ],
                [
                  "test_edge_busy",
                  "test_single_qubit_flux_manual02",
                  0.6259291973580818
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_qwg_available_01",
                "false"
              ],
              [
                "test_fast_feedback",
                "false"
              ],
              [
                "test_ccl_buffers",
                "false"
              ],
              [
                "test_edge_illegal",
                "false"
              ],
              [
                "test_single_qubit_flux_auto",
                "false"
              ],
              [
                "test_ccl_latencies",
                "false"
              ],
              [
                "test_edge_available",
                "false"
              ],
              [
                "test_qwg_available_02",
                "false"
              ],
              [
                "test_measure_busy",
                "false"
              ],
              [
                "test_single_qubit_flux_manual01",
                "false"
              ],
              [
                "test_qubit_busy",
                "false"
              ],
              [
                "test_single_qubit_flux_manual02",
                "false"
              ],
              [
                "test_measure_available02",
                "false"
              ],
              [
                "test_edge_busy",
                "false"
              ],
              [
                "test_measure_available01",
                "false"
              ],
              [
                "test_qwg_busy",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 16
      }
    ]
  },
  {
    "name": "tests_\u0026_test_Platform.py",
    "testCases": [
      {
        "name": "Test_platform",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_config_file",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_platform_name",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_config_file",
                  "[]"
                ],
                [
                  "test_platform_name",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_config_file",
                  "false"
                ],
                [
                  "test_platform_name",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_config_file",
                  "false"
                ],
                [
                  "test_platform_name",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_config_file",
                  "false"
                ],
                [
                  "test_platform_name",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_config_file",
                  "false"
                ],
                [
                  "test_platform_name",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_config_file",
                "false"
              ],
              [
                "test_platform_name",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_config_file",
                "false"
              ],
              [
                "test_platform_name",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_config_file",
                []
              ],
              [
                "test_platform_name",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_config_file",
                "false"
              ],
              [
                "test_platform_name",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_config_file",
                "false"
              ],
              [
                "test_platform_name",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_config_file",
                  "0"
                ],
                [
                  "test_platform_name",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_config_file",
                  "0"
                ],
                [
                  "test_platform_name",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_config_file",
                "false"
              ],
              [
                "test_platform_name",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_config_file",
                "false"
              ],
              [
                "test_platform_name",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_config_file",
                "1"
              ],
              [
                "test_platform_name",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_config_file",
                [
                  "platf_name",
                  "config_fn",
                  "platf"
                ]
              ],
              [
                "test_platform_name",
                [
                  "platf_name",
                  "config_fn",
                  "platf"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_config_file",
                []
              ],
              [
                "test_platform_name",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8829841544156682,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_platform_name",
                  "test_config_file",
                  0.8829841544156682
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_config_file",
                "false"
              ],
              [
                "test_platform_name",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_conjugate.py",
    "testCases": [
      {
        "name": "Test_conjugated_kernel",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_conjugate",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_conjugate",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_conjugate",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_conjugate",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_conjugate",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_conjugate",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_conjugate",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_conjugate",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_conjugate",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_conjugate",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_conjugate",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_conjugate",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_conjugate",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_conjugate",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_conjugate",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_conjugate",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_conjugate",
                [
                  "p",
                  "qasm_fn",
                  "num_qubits",
                  "config_fn",
                  "ck",
                  "k",
                  "gold_fn",
                  "platform"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_conjugate",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_conjugate",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_dependence.py",
    "testCases": [
      {
        "name": "Test_dependence",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_RAR_Control",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_independent",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_WAR",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_swap_single",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_swap_multi",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_WAW",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_RAW",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_RAR_Control",
                  "[]"
                ],
                [
                  "test_independent",
                  "[]"
                ],
                [
                  "test_WAR",
                  "[]"
                ],
                [
                  "test_swap_single",
                  "[]"
                ],
                [
                  "test_swap_multi",
                  "[]"
                ],
                [
                  "test_WAW",
                  "[]"
                ],
                [
                  "test_RAW",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_RAR_Control",
                  "true"
                ],
                [
                  "test_independent",
                  "true"
                ],
                [
                  "test_WAR",
                  "true"
                ],
                [
                  "test_swap_single",
                  "false"
                ],
                [
                  "test_swap_multi",
                  "false"
                ],
                [
                  "test_WAW",
                  "true"
                ],
                [
                  "test_RAW",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_RAR_Control",
                  "false"
                ],
                [
                  "test_independent",
                  "false"
                ],
                [
                  "test_WAR",
                  "false"
                ],
                [
                  "test_swap_single",
                  "false"
                ],
                [
                  "test_swap_multi",
                  "false"
                ],
                [
                  "test_WAW",
                  "false"
                ],
                [
                  "test_RAW",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_RAR_Control",
                  "false"
                ],
                [
                  "test_independent",
                  "false"
                ],
                [
                  "test_WAR",
                  "false"
                ],
                [
                  "test_swap_single",
                  "false"
                ],
                [
                  "test_swap_multi",
                  "false"
                ],
                [
                  "test_WAW",
                  "false"
                ],
                [
                  "test_RAW",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_RAR_Control",
                  "false"
                ],
                [
                  "test_independent",
                  "false"
                ],
                [
                  "test_WAR",
                  "false"
                ],
                [
                  "test_swap_single",
                  "false"
                ],
                [
                  "test_swap_multi",
                  "false"
                ],
                [
                  "test_WAW",
                  "false"
                ],
                [
                  "test_RAW",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_RAR_Control",
                "false"
              ],
              [
                "test_independent",
                "false"
              ],
              [
                "test_WAR",
                "false"
              ],
              [
                "test_swap_single",
                "false"
              ],
              [
                "test_swap_multi",
                "false"
              ],
              [
                "test_WAW",
                "false"
              ],
              [
                "test_RAW",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_RAR_Control",
                "false"
              ],
              [
                "test_independent",
                "false"
              ],
              [
                "test_WAR",
                "false"
              ],
              [
                "test_swap_single",
                "false"
              ],
              [
                "test_swap_multi",
                "false"
              ],
              [
                "test_WAW",
                "false"
              ],
              [
                "test_RAW",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_RAR_Control",
                []
              ],
              [
                "test_independent",
                []
              ],
              [
                "test_WAR",
                []
              ],
              [
                "test_swap_single",
                []
              ],
              [
                "test_swap_multi",
                []
              ],
              [
                "test_WAW",
                []
              ],
              [
                "test_RAW",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_RAR_Control",
                "false"
              ],
              [
                "test_independent",
                "false"
              ],
              [
                "test_WAR",
                "false"
              ],
              [
                "test_swap_single",
                "false"
              ],
              [
                "test_swap_multi",
                "false"
              ],
              [
                "test_WAW",
                "false"
              ],
              [
                "test_RAW",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_RAR_Control",
                "false"
              ],
              [
                "test_independent",
                "false"
              ],
              [
                "test_WAR",
                "false"
              ],
              [
                "test_swap_single",
                "false"
              ],
              [
                "test_swap_multi",
                "false"
              ],
              [
                "test_WAW",
                "false"
              ],
              [
                "test_RAW",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_RAR_Control",
                  "0"
                ],
                [
                  "test_independent",
                  "0"
                ],
                [
                  "test_WAR",
                  "0"
                ],
                [
                  "test_swap_single",
                  "0"
                ],
                [
                  "test_swap_multi",
                  "0"
                ],
                [
                  "test_WAW",
                  "0"
                ],
                [
                  "test_RAW",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_RAR_Control",
                  "0"
                ],
                [
                  "test_independent",
                  "0"
                ],
                [
                  "test_WAR",
                  "0"
                ],
                [
                  "test_swap_single",
                  "0"
                ],
                [
                  "test_swap_multi",
                  "0"
                ],
                [
                  "test_WAW",
                  "0"
                ],
                [
                  "test_RAW",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_RAR_Control",
                "false"
              ],
              [
                "test_independent",
                "false"
              ],
              [
                "test_WAR",
                "false"
              ],
              [
                "test_swap_single",
                "false"
              ],
              [
                "test_swap_multi",
                "false"
              ],
              [
                "test_WAW",
                "false"
              ],
              [
                "test_RAW",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_RAR_Control",
                "false"
              ],
              [
                "test_independent",
                "false"
              ],
              [
                "test_WAR",
                "false"
              ],
              [
                "test_swap_single",
                "false"
              ],
              [
                "test_swap_multi",
                "false"
              ],
              [
                "test_WAW",
                "false"
              ],
              [
                "test_RAW",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_RAR_Control",
                "1"
              ],
              [
                "test_independent",
                "1"
              ],
              [
                "test_WAR",
                "1"
              ],
              [
                "test_swap_single",
                "1"
              ],
              [
                "test_swap_multi",
                "1"
              ],
              [
                "test_WAW",
                "1"
              ],
              [
                "test_RAW",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_RAR_Control",
                [
                  "p",
                  "qasm_fn",
                  "sweep_points",
                  "nqubits",
                  "k",
                  "gold_fn"
                ]
              ],
              [
                "test_independent",
                [
                  "p",
                  "qasm_fn",
                  "sweep_points",
                  "nqubits",
                  "k",
                  "gold_fn"
                ]
              ],
              [
                "test_WAR",
                [
                  "p",
                  "qasm_fn",
                  "sweep_points",
                  "nqubits",
                  "k",
                  "gold_fn"
                ]
              ],
              [
                "test_swap_single",
                [
                  "p",
                  "qasm_fn",
                  "sweep_points",
                  "nqubits",
                  "k",
                  "gold_fn"
                ]
              ],
              [
                "test_swap_multi",
                [
                  "p",
                  "qasm_fn",
                  "sweep_points",
                  "nqubits",
                  "k",
                  "gold_fn"
                ]
              ],
              [
                "test_WAW",
                [
                  "p",
                  "qasm_fn",
                  "sweep_points",
                  "nqubits",
                  "k",
                  "gold_fn"
                ]
              ],
              [
                "test_RAW",
                [
                  "p",
                  "qasm_fn",
                  "sweep_points",
                  "nqubits",
                  "k",
                  "gold_fn"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_RAR_Control",
                []
              ],
              [
                "test_independent",
                []
              ],
              [
                "test_WAR",
                []
              ],
              [
                "test_swap_single",
                []
              ],
              [
                "test_swap_multi",
                []
              ],
              [
                "test_WAW",
                []
              ],
              [
                "test_RAW",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8679136728974592,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_independent",
                  "test_RAR_Control",
                  0.9015276282668876
                ],
                [
                  "test_RAR_Control",
                  "test_swap_single",
                  0.7659074181833901
                ],
                [
                  "test_independent",
                  "test_WAR",
                  0.9394720350184558
                ],
                [
                  "test_independent",
                  "test_swap_multi",
                  0.717441459620878
                ],
                [
                  "test_WAR",
                  "test_swap_single",
                  0.7896217306890471
                ],
                [
                  "test_RAW",
                  "test_swap_multi",
                  0.7671611951537325
                ],
                [
                  "test_swap_single",
                  "test_swap_multi",
                  0.9143396778383253
                ],
                [
                  "test_WAW",
                  "test_RAW",
                  0.985981308411215
                ],
                [
                  "test_RAW",
                  "test_WAR",
                  0.985981308411215
                ],
                [
                  "test_RAW",
                  "test_swap_single",
                  0.7896217306890471
                ],
                [
                  "test_independent",
                  "test_WAW",
                  0.9394720350184558
                ],
                [
                  "test_independent",
                  "test_RAW",
                  0.9394720350184558
                ],
                [
                  "test_WAW",
                  "test_RAR_Control",
                  0.9736483051647903
                ],
                [
                  "test_independent",
                  "test_swap_single",
                  0.7932436914974538
                ],
                [
                  "test_RAR_Control",
                  "test_WAR",
                  0.9736483051647903
                ],
                [
                  "test_WAR",
                  "test_swap_multi",
                  0.7671611951537325
                ],
                [
                  "test_RAR_Control",
                  "test_swap_multi",
                  0.766073532127985
                ],
                [
                  "test_WAW",
                  "test_swap_single",
                  0.7896217306890471
                ],
                [
                  "test_WAW",
                  "test_WAR",
                  0.985981308411215
                ],
                [
                  "test_WAW",
                  "test_swap_multi",
                  0.7671611951537325
                ],
                [
                  "test_RAR_Control",
                  "test_RAW",
                  0.9736483051647903
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_RAR_Control",
                "false"
              ],
              [
                "test_independent",
                "false"
              ],
              [
                "test_WAR",
                "false"
              ],
              [
                "test_swap_single",
                "false"
              ],
              [
                "test_swap_multi",
                "false"
              ],
              [
                "test_WAW",
                "false"
              ],
              [
                "test_RAW",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      }
    ]
  },
  {
    "name": "tests_\u0026_test_exceptions.py",
    "testCases": [
      {
        "name": "Test_basic",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_missing_config",
                  "[]"
                ],
                [
                  "test_config_exception_hardware",
                  "[]"
                ],
                [
                  "test_config_exception_compiler",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_missing_config",
                  "[]"
                ],
                [
                  "test_config_exception_hardware",
                  "[]"
                ],
                [
                  "test_config_exception_compiler",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_missing_config",
                  "false"
                ],
                [
                  "test_config_exception_hardware",
                  "false"
                ],
                [
                  "test_config_exception_compiler",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_missing_config",
                  "false"
                ],
                [
                  "test_config_exception_hardware",
                  "false"
                ],
                [
                  "test_config_exception_compiler",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_missing_config",
                  "false"
                ],
                [
                  "test_config_exception_hardware",
                  "false"
                ],
                [
                  "test_config_exception_compiler",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_missing_config",
                  "false"
                ],
                [
                  "test_config_exception_hardware",
                  "false"
                ],
                [
                  "test_config_exception_compiler",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_config",
                "false"
              ],
              [
                "test_config_exception_hardware",
                "false"
              ],
              [
                "test_config_exception_compiler",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_missing_config",
                "true"
              ],
              [
                "test_config_exception_hardware",
                "true"
              ],
              [
                "test_config_exception_compiler",
                "true"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_config",
                []
              ],
              [
                "test_config_exception_hardware",
                []
              ],
              [
                "test_config_exception_compiler",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_config",
                "false"
              ],
              [
                "test_config_exception_hardware",
                "false"
              ],
              [
                "test_config_exception_compiler",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_config",
                "false"
              ],
              [
                "test_config_exception_hardware",
                "false"
              ],
              [
                "test_config_exception_compiler",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_missing_config",
                  "0"
                ],
                [
                  "test_config_exception_hardware",
                  "0"
                ],
                [
                  "test_config_exception_compiler",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_missing_config",
                  "0"
                ],
                [
                  "test_config_exception_hardware",
                  "0"
                ],
                [
                  "test_config_exception_compiler",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_config",
                "false"
              ],
              [
                "test_config_exception_hardware",
                "false"
              ],
              [
                "test_config_exception_compiler",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_config",
                "false"
              ],
              [
                "test_config_exception_hardware",
                "false"
              ],
              [
                "test_config_exception_compiler",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_missing_config",
                "0"
              ],
              [
                "test_config_exception_hardware",
                "0"
              ],
              [
                "test_config_exception_compiler",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_config",
                [
                  "config_fn",
                  "platf"
                ]
              ],
              [
                "test_config_exception_hardware",
                [
                  "output_dir",
                  "config_fn",
                  "platf"
                ]
              ],
              [
                "test_config_exception_compiler",
                [
                  "output_dir",
                  "config_fn",
                  "platf"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_config",
                []
              ],
              [
                "test_config_exception_hardware",
                []
              ],
              [
                "test_config_exception_compiler",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8381217137311477,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_missing_config",
                  "test_config_exception_compiler",
                  0.7666165328608726
                ],
                [
                  "test_missing_config",
                  "test_config_exception_hardware",
                  0.7666165328608726
                ],
                [
                  "test_config_exception_compiler",
                  "test_config_exception_hardware",
                  0.9811320754716981
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_config",
                "false"
              ],
              [
                "test_config_exception_hardware",
                "false"
              ],
              [
                "test_config_exception_compiler",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_modularity.py",
    "testCases": [
      {
        "name": "Test_modularity",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_modularity",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_modularity",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_modularity",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_modularity",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_modularity",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_modularity",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_modularity",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_modularity",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_modularity",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_modularity",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_modularity",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_modularity",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_modularity",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_modularity",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_modularity",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_modularity",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_modularity",
                [
                  "p",
                  "c",
                  "nqubits",
                  "config_fn",
                  "k",
                  "platform"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_modularity",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_modularity",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_quantumsim.py",
    "testCases": [
      {
        "name": "Test_quantumsim",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "k",
                  "platform"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_commutation.py",
    "testCases": [
      {
        "name": "Test_commutation",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_cnot_mixedcommute",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_cnot_controlcommute",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_cz_anycommute",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_cnot_targetcommute",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_cnot_mixedcommute",
                  "[]"
                ],
                [
                  "test_cnot_controlcommute",
                  "[]"
                ],
                [
                  "test_cz_anycommute",
                  "[]"
                ],
                [
                  "test_cnot_targetcommute",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_cnot_mixedcommute",
                  "true"
                ],
                [
                  "test_cnot_controlcommute",
                  "false"
                ],
                [
                  "test_cz_anycommute",
                  "false"
                ],
                [
                  "test_cnot_targetcommute",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_cnot_mixedcommute",
                  "false"
                ],
                [
                  "test_cnot_controlcommute",
                  "false"
                ],
                [
                  "test_cz_anycommute",
                  "false"
                ],
                [
                  "test_cnot_targetcommute",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_cnot_mixedcommute",
                  "false"
                ],
                [
                  "test_cnot_controlcommute",
                  "false"
                ],
                [
                  "test_cz_anycommute",
                  "false"
                ],
                [
                  "test_cnot_targetcommute",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_cnot_mixedcommute",
                  "false"
                ],
                [
                  "test_cnot_controlcommute",
                  "false"
                ],
                [
                  "test_cz_anycommute",
                  "false"
                ],
                [
                  "test_cnot_targetcommute",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cnot_mixedcommute",
                "false"
              ],
              [
                "test_cnot_controlcommute",
                "false"
              ],
              [
                "test_cz_anycommute",
                "false"
              ],
              [
                "test_cnot_targetcommute",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_cnot_mixedcommute",
                "false"
              ],
              [
                "test_cnot_controlcommute",
                "false"
              ],
              [
                "test_cz_anycommute",
                "false"
              ],
              [
                "test_cnot_targetcommute",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_cnot_mixedcommute",
                []
              ],
              [
                "test_cnot_controlcommute",
                []
              ],
              [
                "test_cz_anycommute",
                []
              ],
              [
                "test_cnot_targetcommute",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cnot_mixedcommute",
                "false"
              ],
              [
                "test_cnot_controlcommute",
                "false"
              ],
              [
                "test_cz_anycommute",
                "false"
              ],
              [
                "test_cnot_targetcommute",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cnot_mixedcommute",
                "false"
              ],
              [
                "test_cnot_controlcommute",
                "false"
              ],
              [
                "test_cz_anycommute",
                "false"
              ],
              [
                "test_cnot_targetcommute",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_cnot_mixedcommute",
                  "0"
                ],
                [
                  "test_cnot_controlcommute",
                  "0"
                ],
                [
                  "test_cz_anycommute",
                  "0"
                ],
                [
                  "test_cnot_targetcommute",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_cnot_mixedcommute",
                  "0"
                ],
                [
                  "test_cnot_controlcommute",
                  "0"
                ],
                [
                  "test_cz_anycommute",
                  "0"
                ],
                [
                  "test_cnot_targetcommute",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_cnot_mixedcommute",
                "false"
              ],
              [
                "test_cnot_controlcommute",
                "false"
              ],
              [
                "test_cz_anycommute",
                "false"
              ],
              [
                "test_cnot_targetcommute",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cnot_mixedcommute",
                "false"
              ],
              [
                "test_cnot_controlcommute",
                "false"
              ],
              [
                "test_cz_anycommute",
                "false"
              ],
              [
                "test_cnot_targetcommute",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cnot_mixedcommute",
                "1"
              ],
              [
                "test_cnot_controlcommute",
                "1"
              ],
              [
                "test_cz_anycommute",
                "1"
              ],
              [
                "test_cnot_targetcommute",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_cnot_mixedcommute",
                [
                  "p",
                  "qasm_fn",
                  "sweep_points",
                  "nqubits",
                  "config_fn",
                  "platf",
                  "k",
                  "gold_fn"
                ]
              ],
              [
                "test_cnot_controlcommute",
                [
                  "p",
                  "qasm_fn",
                  "sweep_points",
                  "nqubits",
                  "config_fn",
                  "platf",
                  "k",
                  "gold_fn"
                ]
              ],
              [
                "test_cz_anycommute",
                [
                  "p",
                  "qasm_fn",
                  "sweep_points",
                  "nqubits",
                  "config_fn",
                  "platf",
                  "k",
                  "gold_fn"
                ]
              ],
              [
                "test_cnot_targetcommute",
                [
                  "p",
                  "qasm_fn",
                  "sweep_points",
                  "nqubits",
                  "config_fn",
                  "platf",
                  "k",
                  "gold_fn"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_cnot_mixedcommute",
                []
              ],
              [
                "test_cnot_controlcommute",
                []
              ],
              [
                "test_cz_anycommute",
                []
              ],
              [
                "test_cnot_targetcommute",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8960439787264626,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_cnot_targetcommute",
                  "test_cz_anycommute",
                  0.973747016706444
                ],
                [
                  "test_cnot_targetcommute",
                  "test_cnot_mixedcommute",
                  0.8323226781290007
                ],
                [
                  "test_cnot_controlcommute",
                  "test_cnot_mixedcommute",
                  0.8323226781290007
                ],
                [
                  "test_cz_anycommute",
                  "test_cnot_mixedcommute",
                  0.7665111175327542
                ],
                [
                  "test_cnot_controlcommute",
                  "test_cz_anycommute",
                  0.973747016706444
                ],
                [
                  "test_cnot_controlcommute",
                  "test_cnot_targetcommute",
                  0.9976133651551314
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_cnot_mixedcommute",
                "false"
              ],
              [
                "test_cnot_controlcommute",
                "false"
              ],
              [
                "test_cz_anycommute",
                "false"
              ],
              [
                "test_cnot_targetcommute",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "tests_\u0026_test_sweep_points.py",
    "testCases": [
      {
        "name": "Test_sweep_points",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_no_sweep_points",
                  "[]"
                ],
                [
                  "test_sweep_points",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_no_sweep_points",
                  "[]"
                ],
                [
                  "test_sweep_points",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_no_sweep_points",
                  "false"
                ],
                [
                  "test_sweep_points",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_no_sweep_points",
                  "false"
                ],
                [
                  "test_sweep_points",
                  "true"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_no_sweep_points",
                  "false"
                ],
                [
                  "test_sweep_points",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_no_sweep_points",
                  "false"
                ],
                [
                  "test_sweep_points",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_no_sweep_points",
                "false"
              ],
              [
                "test_sweep_points",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_no_sweep_points",
                "false"
              ],
              [
                "test_sweep_points",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_no_sweep_points",
                []
              ],
              [
                "test_sweep_points",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_no_sweep_points",
                "false"
              ],
              [
                "test_sweep_points",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_no_sweep_points",
                "false"
              ],
              [
                "test_sweep_points",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_no_sweep_points",
                  "0"
                ],
                [
                  "test_sweep_points",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_no_sweep_points",
                  "0"
                ],
                [
                  "test_sweep_points",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_no_sweep_points",
                "false"
              ],
              [
                "test_sweep_points",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_no_sweep_points",
                "false"
              ],
              [
                "test_sweep_points",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_no_sweep_points",
                "0"
              ],
              [
                "test_sweep_points",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_no_sweep_points",
                [
                  "p",
                  "nqubits",
                  "k"
                ]
              ],
              [
                "test_sweep_points",
                [
                  "p",
                  "sweep_points",
                  "nqubits",
                  "matched",
                  "k",
                  "config"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_no_sweep_points",
                []
              ],
              [
                "test_sweep_points",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.75620935243775,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_sweep_points",
                  "test_no_sweep_points",
                  0.75620935243775
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_no_sweep_points",
                "false"
              ],
              [
                "test_sweep_points",
                "true"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_configuration.py",
    "testCases": [
      {
        "name": "Test_Configuration",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_missing_instr",
                  "[]"
                ],
                [
                  "test_case_insensitivity",
                  "[]"
                ],
                [
                  "test_missing_cc_light_instr",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_missing_instr",
                  "[]"
                ],
                [
                  "test_case_insensitivity",
                  "[]"
                ],
                [
                  "test_missing_cc_light_instr",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_missing_instr",
                  "false"
                ],
                [
                  "test_case_insensitivity",
                  "false"
                ],
                [
                  "test_missing_cc_light_instr",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_missing_instr",
                  "false"
                ],
                [
                  "test_case_insensitivity",
                  "false"
                ],
                [
                  "test_missing_cc_light_instr",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_missing_instr",
                  "false"
                ],
                [
                  "test_case_insensitivity",
                  "false"
                ],
                [
                  "test_missing_cc_light_instr",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_missing_instr",
                  "false"
                ],
                [
                  "test_case_insensitivity",
                  "false"
                ],
                [
                  "test_missing_cc_light_instr",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_instr",
                "false"
              ],
              [
                "test_case_insensitivity",
                "false"
              ],
              [
                "test_missing_cc_light_instr",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_missing_instr",
                "true"
              ],
              [
                "test_case_insensitivity",
                "false"
              ],
              [
                "test_missing_cc_light_instr",
                "true"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_instr",
                []
              ],
              [
                "test_case_insensitivity",
                []
              ],
              [
                "test_missing_cc_light_instr",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_instr",
                "false"
              ],
              [
                "test_case_insensitivity",
                "false"
              ],
              [
                "test_missing_cc_light_instr",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_instr",
                "false"
              ],
              [
                "test_case_insensitivity",
                "false"
              ],
              [
                "test_missing_cc_light_instr",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_missing_instr",
                  "0"
                ],
                [
                  "test_case_insensitivity",
                  "0"
                ],
                [
                  "test_missing_cc_light_instr",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_missing_instr",
                  "0"
                ],
                [
                  "test_case_insensitivity",
                  "0"
                ],
                [
                  "test_missing_cc_light_instr",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_missing_instr",
                "true"
              ],
              [
                "test_case_insensitivity",
                "false"
              ],
              [
                "test_missing_cc_light_instr",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_instr",
                "false"
              ],
              [
                "test_case_insensitivity",
                "false"
              ],
              [
                "test_missing_cc_light_instr",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_missing_instr",
                "0"
              ],
              [
                "test_case_insensitivity",
                "0"
              ],
              [
                "test_missing_cc_light_instr",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_instr",
                [
                  "p",
                  "sweep_points",
                  "config_fn",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_case_insensitivity",
                [
                  "p",
                  "sweep_points",
                  "config_fn",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_missing_cc_light_instr",
                [
                  "p",
                  "sweep_points",
                  "config_fn",
                  "k",
                  "platform"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_instr",
                []
              ],
              [
                "test_case_insensitivity",
                []
              ],
              [
                "test_missing_cc_light_instr",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7649624280171364,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_case_insensitivity",
                  "test_missing_instr",
                  0.869199385042474
                ],
                [
                  "test_case_insensitivity",
                  "test_missing_cc_light_instr",
                  0.6573541657211764
                ],
                [
                  "test_missing_instr",
                  "test_missing_cc_light_instr",
                  0.7683337332877587
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_instr",
                "false"
              ],
              [
                "test_case_insensitivity",
                "false"
              ],
              [
                "test_missing_cc_light_instr",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_uniform_sched.py",
    "testCases": [
      {
        "name": "Test_uniform_scheduler",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_uniform_scheduler_0",
                  "[]"
                ],
                [
                  "test_uniform_scheduler_1",
                  "[]"
                ],
                [
                  "test_uniform_scheduler_2",
                  "[]"
                ],
                [
                  "test_uniform_scheduler_3",
                  "[]"
                ],
                [
                  "test_uniform_scheduler_4",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_uniform_scheduler_0",
                  "[]"
                ],
                [
                  "test_uniform_scheduler_1",
                  "[]"
                ],
                [
                  "test_uniform_scheduler_2",
                  "[]"
                ],
                [
                  "test_uniform_scheduler_3",
                  "[]"
                ],
                [
                  "test_uniform_scheduler_4",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_uniform_scheduler_0",
                  "true"
                ],
                [
                  "test_uniform_scheduler_1",
                  "true"
                ],
                [
                  "test_uniform_scheduler_2",
                  "true"
                ],
                [
                  "test_uniform_scheduler_3",
                  "true"
                ],
                [
                  "test_uniform_scheduler_4",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_uniform_scheduler_0",
                  "false"
                ],
                [
                  "test_uniform_scheduler_1",
                  "false"
                ],
                [
                  "test_uniform_scheduler_2",
                  "false"
                ],
                [
                  "test_uniform_scheduler_3",
                  "false"
                ],
                [
                  "test_uniform_scheduler_4",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_uniform_scheduler_0",
                  "false"
                ],
                [
                  "test_uniform_scheduler_1",
                  "false"
                ],
                [
                  "test_uniform_scheduler_2",
                  "false"
                ],
                [
                  "test_uniform_scheduler_3",
                  "false"
                ],
                [
                  "test_uniform_scheduler_4",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_uniform_scheduler_0",
                  "false"
                ],
                [
                  "test_uniform_scheduler_1",
                  "false"
                ],
                [
                  "test_uniform_scheduler_2",
                  "false"
                ],
                [
                  "test_uniform_scheduler_3",
                  "false"
                ],
                [
                  "test_uniform_scheduler_4",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_uniform_scheduler_0",
                "false"
              ],
              [
                "test_uniform_scheduler_1",
                "false"
              ],
              [
                "test_uniform_scheduler_2",
                "false"
              ],
              [
                "test_uniform_scheduler_3",
                "false"
              ],
              [
                "test_uniform_scheduler_4",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_uniform_scheduler_0",
                "false"
              ],
              [
                "test_uniform_scheduler_1",
                "false"
              ],
              [
                "test_uniform_scheduler_2",
                "false"
              ],
              [
                "test_uniform_scheduler_3",
                "false"
              ],
              [
                "test_uniform_scheduler_4",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_uniform_scheduler_0",
                []
              ],
              [
                "test_uniform_scheduler_1",
                []
              ],
              [
                "test_uniform_scheduler_2",
                []
              ],
              [
                "test_uniform_scheduler_3",
                []
              ],
              [
                "test_uniform_scheduler_4",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_uniform_scheduler_0",
                "false"
              ],
              [
                "test_uniform_scheduler_1",
                "false"
              ],
              [
                "test_uniform_scheduler_2",
                "false"
              ],
              [
                "test_uniform_scheduler_3",
                "false"
              ],
              [
                "test_uniform_scheduler_4",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_uniform_scheduler_0",
                "false"
              ],
              [
                "test_uniform_scheduler_1",
                "false"
              ],
              [
                "test_uniform_scheduler_2",
                "false"
              ],
              [
                "test_uniform_scheduler_3",
                "false"
              ],
              [
                "test_uniform_scheduler_4",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_uniform_scheduler_0",
                  "0"
                ],
                [
                  "test_uniform_scheduler_1",
                  "0"
                ],
                [
                  "test_uniform_scheduler_2",
                  "0"
                ],
                [
                  "test_uniform_scheduler_3",
                  "0"
                ],
                [
                  "test_uniform_scheduler_4",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_uniform_scheduler_0",
                  "0"
                ],
                [
                  "test_uniform_scheduler_1",
                  "0"
                ],
                [
                  "test_uniform_scheduler_2",
                  "0"
                ],
                [
                  "test_uniform_scheduler_3",
                  "0"
                ],
                [
                  "test_uniform_scheduler_4",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_uniform_scheduler_0",
                "false"
              ],
              [
                "test_uniform_scheduler_1",
                "false"
              ],
              [
                "test_uniform_scheduler_2",
                "false"
              ],
              [
                "test_uniform_scheduler_3",
                "false"
              ],
              [
                "test_uniform_scheduler_4",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_uniform_scheduler_0",
                "false"
              ],
              [
                "test_uniform_scheduler_1",
                "false"
              ],
              [
                "test_uniform_scheduler_2",
                "false"
              ],
              [
                "test_uniform_scheduler_3",
                "false"
              ],
              [
                "test_uniform_scheduler_4",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_uniform_scheduler_0",
                "0"
              ],
              [
                "test_uniform_scheduler_1",
                "0"
              ],
              [
                "test_uniform_scheduler_2",
                "0"
              ],
              [
                "test_uniform_scheduler_3",
                "0"
              ],
              [
                "test_uniform_scheduler_4",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_uniform_scheduler_0",
                [
                  "p",
                  "num_qubits",
                  "config_fn",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_uniform_scheduler_1",
                [
                  "p",
                  "num_qubits",
                  "config_fn",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_uniform_scheduler_2",
                [
                  "p",
                  "num_qubits",
                  "config_fn",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_uniform_scheduler_3",
                [
                  "p",
                  "num_qubits",
                  "config_fn",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_uniform_scheduler_4",
                [
                  "p",
                  "num_qubits",
                  "config_fn",
                  "k",
                  "platform"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_uniform_scheduler_0",
                []
              ],
              [
                "test_uniform_scheduler_1",
                []
              ],
              [
                "test_uniform_scheduler_2",
                []
              ],
              [
                "test_uniform_scheduler_3",
                []
              ],
              [
                "test_uniform_scheduler_4",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7765333461707801,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_uniform_scheduler_1",
                  "test_uniform_scheduler_4",
                  0.6304266957745491
                ],
                [
                  "test_uniform_scheduler_0",
                  "test_uniform_scheduler_1",
                  0.6613944399126516
                ],
                [
                  "test_uniform_scheduler_0",
                  "test_uniform_scheduler_2",
                  0.8010039738695918
                ],
                [
                  "test_uniform_scheduler_0",
                  "test_uniform_scheduler_3",
                  0.6604466602332442
                ],
                [
                  "test_uniform_scheduler_0",
                  "test_uniform_scheduler_4",
                  0.6069945746463089
                ],
                [
                  "test_uniform_scheduler_1",
                  "test_uniform_scheduler_3",
                  0.8531068005454402
                ],
                [
                  "test_uniform_scheduler_2",
                  "test_uniform_scheduler_3",
                  0.9278127762290449
                ],
                [
                  "test_uniform_scheduler_3",
                  "test_uniform_scheduler_4",
                  0.9283024390029996
                ],
                [
                  "test_uniform_scheduler_2",
                  "test_uniform_scheduler_4",
                  0.8592927630817114
                ],
                [
                  "test_uniform_scheduler_1",
                  "test_uniform_scheduler_2",
                  0.8365523384122594
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_uniform_scheduler_0",
                "false"
              ],
              [
                "test_uniform_scheduler_1",
                "false"
              ],
              [
                "test_uniform_scheduler_2",
                "false"
              ],
              [
                "test_uniform_scheduler_3",
                "false"
              ],
              [
                "test_uniform_scheduler_4",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      }
    ]
  },
  {
    "name": "tests_\u0026_test_alap_rc_schedule.py",
    "testCases": [
      {
        "name": "Test_Alap_Rc_Schedule",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_qwg2",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_qwg",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_detuned",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_1",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_adriaan",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_issue179",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_detuned2",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_edge",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_7",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_qwg2",
                  "[]"
                ],
                [
                  "test_qwg",
                  "[]"
                ],
                [
                  "test_detuned",
                  "[]"
                ],
                [
                  "test_1",
                  "[]"
                ],
                [
                  "test_adriaan",
                  "[]"
                ],
                [
                  "test_issue179",
                  "[]"
                ],
                [
                  "test_detuned2",
                  "[]"
                ],
                [
                  "test_edge",
                  "[]"
                ],
                [
                  "test_7",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_qwg2",
                  "true"
                ],
                [
                  "test_qwg",
                  "false"
                ],
                [
                  "test_detuned",
                  "false"
                ],
                [
                  "test_1",
                  "true"
                ],
                [
                  "test_adriaan",
                  "true"
                ],
                [
                  "test_issue179",
                  "false"
                ],
                [
                  "test_detuned2",
                  "false"
                ],
                [
                  "test_edge",
                  "false"
                ],
                [
                  "test_7",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_qwg2",
                  "false"
                ],
                [
                  "test_qwg",
                  "false"
                ],
                [
                  "test_detuned",
                  "false"
                ],
                [
                  "test_1",
                  "false"
                ],
                [
                  "test_adriaan",
                  "false"
                ],
                [
                  "test_issue179",
                  "false"
                ],
                [
                  "test_detuned2",
                  "false"
                ],
                [
                  "test_edge",
                  "false"
                ],
                [
                  "test_7",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_qwg2",
                  "false"
                ],
                [
                  "test_qwg",
                  "false"
                ],
                [
                  "test_detuned",
                  "false"
                ],
                [
                  "test_1",
                  "false"
                ],
                [
                  "test_adriaan",
                  "false"
                ],
                [
                  "test_issue179",
                  "false"
                ],
                [
                  "test_detuned2",
                  "false"
                ],
                [
                  "test_edge",
                  "false"
                ],
                [
                  "test_7",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_qwg2",
                  "false"
                ],
                [
                  "test_qwg",
                  "false"
                ],
                [
                  "test_detuned",
                  "false"
                ],
                [
                  "test_1",
                  "false"
                ],
                [
                  "test_adriaan",
                  "false"
                ],
                [
                  "test_issue179",
                  "false"
                ],
                [
                  "test_detuned2",
                  "false"
                ],
                [
                  "test_edge",
                  "false"
                ],
                [
                  "test_7",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_qwg2",
                "false"
              ],
              [
                "test_qwg",
                "false"
              ],
              [
                "test_detuned",
                "false"
              ],
              [
                "test_1",
                "false"
              ],
              [
                "test_adriaan",
                "false"
              ],
              [
                "test_issue179",
                "false"
              ],
              [
                "test_detuned2",
                "false"
              ],
              [
                "test_edge",
                "false"
              ],
              [
                "test_7",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_qwg2",
                "false"
              ],
              [
                "test_qwg",
                "false"
              ],
              [
                "test_detuned",
                "false"
              ],
              [
                "test_1",
                "false"
              ],
              [
                "test_adriaan",
                "false"
              ],
              [
                "test_issue179",
                "false"
              ],
              [
                "test_detuned2",
                "false"
              ],
              [
                "test_edge",
                "false"
              ],
              [
                "test_7",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_qwg2",
                []
              ],
              [
                "test_qwg",
                []
              ],
              [
                "test_detuned",
                []
              ],
              [
                "test_1",
                []
              ],
              [
                "test_adriaan",
                []
              ],
              [
                "test_issue179",
                []
              ],
              [
                "test_detuned2",
                []
              ],
              [
                "test_edge",
                []
              ],
              [
                "test_7",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_qwg2",
                "false"
              ],
              [
                "test_qwg",
                "false"
              ],
              [
                "test_detuned",
                "false"
              ],
              [
                "test_1",
                "false"
              ],
              [
                "test_adriaan",
                "false"
              ],
              [
                "test_issue179",
                "false"
              ],
              [
                "test_detuned2",
                "false"
              ],
              [
                "test_edge",
                "false"
              ],
              [
                "test_7",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_qwg2",
                "false"
              ],
              [
                "test_qwg",
                "false"
              ],
              [
                "test_detuned",
                "false"
              ],
              [
                "test_1",
                "false"
              ],
              [
                "test_adriaan",
                "false"
              ],
              [
                "test_issue179",
                "false"
              ],
              [
                "test_detuned2",
                "false"
              ],
              [
                "test_edge",
                "false"
              ],
              [
                "test_7",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_qwg2",
                  "0"
                ],
                [
                  "test_qwg",
                  "0"
                ],
                [
                  "test_detuned",
                  "0"
                ],
                [
                  "test_1",
                  "0"
                ],
                [
                  "test_adriaan",
                  "0"
                ],
                [
                  "test_issue179",
                  "0"
                ],
                [
                  "test_detuned2",
                  "0"
                ],
                [
                  "test_edge",
                  "0"
                ],
                [
                  "test_7",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_qwg2",
                  "0"
                ],
                [
                  "test_qwg",
                  "0"
                ],
                [
                  "test_detuned",
                  "0"
                ],
                [
                  "test_1",
                  "0"
                ],
                [
                  "test_adriaan",
                  "0"
                ],
                [
                  "test_issue179",
                  "0"
                ],
                [
                  "test_detuned2",
                  "0"
                ],
                [
                  "test_edge",
                  "0"
                ],
                [
                  "test_7",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_qwg2",
                "false"
              ],
              [
                "test_qwg",
                "false"
              ],
              [
                "test_detuned",
                "false"
              ],
              [
                "test_1",
                "false"
              ],
              [
                "test_adriaan",
                "false"
              ],
              [
                "test_issue179",
                "false"
              ],
              [
                "test_detuned2",
                "false"
              ],
              [
                "test_edge",
                "false"
              ],
              [
                "test_7",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_qwg2",
                "false"
              ],
              [
                "test_qwg",
                "false"
              ],
              [
                "test_detuned",
                "false"
              ],
              [
                "test_1",
                "false"
              ],
              [
                "test_adriaan",
                "false"
              ],
              [
                "test_issue179",
                "false"
              ],
              [
                "test_detuned2",
                "false"
              ],
              [
                "test_edge",
                "false"
              ],
              [
                "test_7",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_qwg2",
                "1"
              ],
              [
                "test_qwg",
                "1"
              ],
              [
                "test_detuned",
                "1"
              ],
              [
                "test_1",
                "1"
              ],
              [
                "test_adriaan",
                "1"
              ],
              [
                "test_issue179",
                "1"
              ],
              [
                "test_detuned2",
                "1"
              ],
              [
                "test_edge",
                "1"
              ],
              [
                "test_7",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_qwg2",
                [
                  "scheduler",
                  "starmon",
                  "v",
                  "kernel_name",
                  "QISA_fn",
                  "prog_name",
                  "k",
                  "prog",
                  "GOLD_fn"
                ]
              ],
              [
                "test_qwg",
                [
                  "starmon",
                  "v",
                  "kernel_name",
                  "QISA_fn",
                  "prog_name",
                  "k",
                  "prog",
                  "GOLD_fn"
                ]
              ],
              [
                "test_detuned",
                [
                  "scheduler",
                  "starmon",
                  "v",
                  "kernel_name",
                  "QISA_fn",
                  "prog_name",
                  "k",
                  "prog",
                  "GOLD_fn"
                ]
              ],
              [
                "test_1",
                [
                  "scheduler",
                  "starmon",
                  "v",
                  "kernel_name",
                  "QISA_fn",
                  "prog_name",
                  "k",
                  "prog",
                  "GOLD_fn"
                ]
              ],
              [
                "test_adriaan",
                [
                  "scheduler",
                  "starmon",
                  "v",
                  "kernel_name",
                  "QISA_fn",
                  "prog_name",
                  "k",
                  "prog",
                  "GOLD_fn"
                ]
              ],
              [
                "test_issue179",
                [
                  "scheduler",
                  "starmon",
                  "v",
                  "kernel_name",
                  "QISA_fn",
                  "prog_name",
                  "k",
                  "prog",
                  "GOLD_fn"
                ]
              ],
              [
                "test_detuned2",
                [
                  "scheduler",
                  "starmon",
                  "v",
                  "kernel_name",
                  "QISA_fn",
                  "prog_name",
                  "k",
                  "prog",
                  "GOLD_fn"
                ]
              ],
              [
                "test_edge",
                [
                  "scheduler",
                  "starmon",
                  "v",
                  "kernel_name",
                  "QISA_fn",
                  "prog_name",
                  "k",
                  "prog",
                  "GOLD_fn"
                ]
              ],
              [
                "test_7",
                [
                  "scheduler",
                  "starmon",
                  "v",
                  "kernel_name",
                  "QISA_fn",
                  "prog_name",
                  "k",
                  "prog",
                  "GOLD_fn"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_qwg2",
                []
              ],
              [
                "test_qwg",
                []
              ],
              [
                "test_detuned",
                []
              ],
              [
                "test_1",
                []
              ],
              [
                "test_adriaan",
                []
              ],
              [
                "test_issue179",
                []
              ],
              [
                "test_detuned2",
                []
              ],
              [
                "test_edge",
                []
              ],
              [
                "test_7",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8107986761138178,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_issue179",
                  "test_edge",
                  0.7550578089430997
                ],
                [
                  "test_issue179",
                  "test_detuned",
                  0.7781391519541311
                ],
                [
                  "test_adriaan",
                  "test_1",
                  0.7972917844072718
                ],
                [
                  "test_issue179",
                  "test_1",
                  0.6458800256426143
                ],
                [
                  "test_issue179",
                  "test_detuned2",
                  0.778565465476193
                ],
                [
                  "test_edge",
                  "test_7",
                  0.7400654137263629
                ],
                [
                  "test_detuned",
                  "test_adriaan",
                  0.9031801955645096
                ],
                [
                  "test_qwg",
                  "test_1",
                  0.6677489005340678
                ],
                [
                  "test_detuned2",
                  "test_7",
                  0.8196438540736651
                ],
                [
                  "test_qwg",
                  "test_detuned",
                  0.8456965014224496
                ],
                [
                  "test_qwg",
                  "test_detuned2",
                  0.8406293707192269
                ],
                [
                  "test_qwg2",
                  "test_7",
                  0.7563785988633772
                ],
                [
                  "test_detuned",
                  "test_7",
                  0.8193984226881709
                ],
                [
                  "test_qwg2",
                  "test_issue179",
                  0.6285196480756035
                ],
                [
                  "test_detuned",
                  "test_1",
                  0.8590024264582348
                ],
                [
                  "test_detuned",
                  "test_detuned2",
                  0.9964122238831021
                ],
                [
                  "test_qwg",
                  "test_edge",
                  0.9115473317298206
                ],
                [
                  "test_qwg",
                  "test_7",
                  0.6733786951480997
                ],
                [
                  "test_qwg2",
                  "test_detuned",
                  0.8097635705805802
                ],
                [
                  "test_qwg2",
                  "test_1",
                  0.7274881585734827
                ],
                [
                  "test_qwg2",
                  "test_edge",
                  0.833778349085491
                ],
                [
                  "test_edge",
                  "test_1",
                  0.7699207081030506
                ],
                [
                  "test_qwg",
                  "test_adriaan",
                  0.8791225761867086
                ],
                [
                  "test_edge",
                  "test_detuned",
                  0.9387433923716951
                ],
                [
                  "test_adriaan",
                  "test_7",
                  0.8516354855676143
                ],
                [
                  "test_qwg2",
                  "test_detuned2",
                  0.8079491407707149
                ],
                [
                  "test_1",
                  "test_7",
                  0.8218536808573027
                ],
                [
                  "test_qwg",
                  "test_issue179",
                  0.7047661723029206
                ],
                [
                  "test_detuned2",
                  "test_1",
                  0.8592257319251676
                ],
                [
                  "test_issue179",
                  "test_adriaan",
                  0.7204704398681011
                ],
                [
                  "test_edge",
                  "test_detuned2",
                  0.9395651720803403
                ],
                [
                  "test_qwg",
                  "test_qwg2",
                  0.8797267365847126
                ],
                [
                  "test_qwg2",
                  "test_adriaan",
                  0.9032898908872714
                ],
                [
                  "test_detuned2",
                  "test_adriaan",
                  0.9038552088468815
                ],
                [
                  "test_issue179",
                  "test_7",
                  0.6994618764401175
                ],
                [
                  "test_edge",
                  "test_adriaan",
                  0.9216002297552891
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_qwg2",
                "false"
              ],
              [
                "test_qwg",
                "false"
              ],
              [
                "test_detuned",
                "false"
              ],
              [
                "test_1",
                "false"
              ],
              [
                "test_adriaan",
                "false"
              ],
              [
                "test_issue179",
                "false"
              ],
              [
                "test_detuned2",
                "false"
              ],
              [
                "test_edge",
                "false"
              ],
              [
                "test_7",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 9
      }
    ]
  },
  {
    "name": "tests_\u0026_test_controlled_kernel.py",
    "testCases": [
      {
        "name": "Test_controlled_kernel",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_controlled_two_qubit_gates",
                  "[]"
                ],
                [
                  "test_decompose_toffoli",
                  "[]"
                ],
                [
                  "test_controlled_rotations",
                  "[]"
                ],
                [
                  "test_controlled_single_qubit_gates",
                  "[]"
                ],
                [
                  "test_multi_controlled",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_controlled_two_qubit_gates",
                  "[]"
                ],
                [
                  "test_decompose_toffoli",
                  "[]"
                ],
                [
                  "test_controlled_rotations",
                  "[]"
                ],
                [
                  "test_controlled_single_qubit_gates",
                  "[]"
                ],
                [
                  "test_multi_controlled",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_controlled_two_qubit_gates",
                  "false"
                ],
                [
                  "test_decompose_toffoli",
                  "false"
                ],
                [
                  "test_controlled_rotations",
                  "false"
                ],
                [
                  "test_controlled_single_qubit_gates",
                  "false"
                ],
                [
                  "test_multi_controlled",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_controlled_two_qubit_gates",
                  "false"
                ],
                [
                  "test_decompose_toffoli",
                  "false"
                ],
                [
                  "test_controlled_rotations",
                  "false"
                ],
                [
                  "test_controlled_single_qubit_gates",
                  "false"
                ],
                [
                  "test_multi_controlled",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_controlled_two_qubit_gates",
                  "false"
                ],
                [
                  "test_decompose_toffoli",
                  "false"
                ],
                [
                  "test_controlled_rotations",
                  "false"
                ],
                [
                  "test_controlled_single_qubit_gates",
                  "false"
                ],
                [
                  "test_multi_controlled",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_controlled_two_qubit_gates",
                  "false"
                ],
                [
                  "test_decompose_toffoli",
                  "false"
                ],
                [
                  "test_controlled_rotations",
                  "false"
                ],
                [
                  "test_controlled_single_qubit_gates",
                  "false"
                ],
                [
                  "test_multi_controlled",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_controlled_two_qubit_gates",
                "false"
              ],
              [
                "test_decompose_toffoli",
                "false"
              ],
              [
                "test_controlled_rotations",
                "false"
              ],
              [
                "test_controlled_single_qubit_gates",
                "false"
              ],
              [
                "test_multi_controlled",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_controlled_two_qubit_gates",
                "false"
              ],
              [
                "test_decompose_toffoli",
                "false"
              ],
              [
                "test_controlled_rotations",
                "false"
              ],
              [
                "test_controlled_single_qubit_gates",
                "false"
              ],
              [
                "test_multi_controlled",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_controlled_two_qubit_gates",
                []
              ],
              [
                "test_decompose_toffoli",
                []
              ],
              [
                "test_controlled_rotations",
                []
              ],
              [
                "test_controlled_single_qubit_gates",
                []
              ],
              [
                "test_multi_controlled",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_controlled_two_qubit_gates",
                "false"
              ],
              [
                "test_decompose_toffoli",
                "false"
              ],
              [
                "test_controlled_rotations",
                "false"
              ],
              [
                "test_controlled_single_qubit_gates",
                "false"
              ],
              [
                "test_multi_controlled",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_controlled_two_qubit_gates",
                "false"
              ],
              [
                "test_decompose_toffoli",
                "false"
              ],
              [
                "test_controlled_rotations",
                "false"
              ],
              [
                "test_controlled_single_qubit_gates",
                "false"
              ],
              [
                "test_multi_controlled",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_controlled_two_qubit_gates",
                  "0"
                ],
                [
                  "test_decompose_toffoli",
                  "0"
                ],
                [
                  "test_controlled_rotations",
                  "0"
                ],
                [
                  "test_controlled_single_qubit_gates",
                  "0"
                ],
                [
                  "test_multi_controlled",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_controlled_two_qubit_gates",
                  "0"
                ],
                [
                  "test_decompose_toffoli",
                  "0"
                ],
                [
                  "test_controlled_rotations",
                  "0"
                ],
                [
                  "test_controlled_single_qubit_gates",
                  "0"
                ],
                [
                  "test_multi_controlled",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_controlled_two_qubit_gates",
                "false"
              ],
              [
                "test_decompose_toffoli",
                "false"
              ],
              [
                "test_controlled_rotations",
                "false"
              ],
              [
                "test_controlled_single_qubit_gates",
                "false"
              ],
              [
                "test_multi_controlled",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_controlled_two_qubit_gates",
                "false"
              ],
              [
                "test_decompose_toffoli",
                "false"
              ],
              [
                "test_controlled_rotations",
                "false"
              ],
              [
                "test_controlled_single_qubit_gates",
                "false"
              ],
              [
                "test_multi_controlled",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_controlled_two_qubit_gates",
                "0"
              ],
              [
                "test_decompose_toffoli",
                "0"
              ],
              [
                "test_controlled_rotations",
                "0"
              ],
              [
                "test_controlled_single_qubit_gates",
                "0"
              ],
              [
                "test_multi_controlled",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_controlled_two_qubit_gates",
                [
                  "p",
                  "num_qubits",
                  "config_fn",
                  "ck",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_decompose_toffoli",
                [
                  "p",
                  "num_qubits",
                  "config_fn",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_controlled_rotations",
                [
                  "p",
                  "num_qubits",
                  "config_fn",
                  "ck",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_controlled_single_qubit_gates",
                [
                  "p",
                  "num_qubits",
                  "config_fn",
                  "ck",
                  "k",
                  "platform"
                ]
              ],
              [
                "test_multi_controlled",
                [
                  "p",
                  "num_qubits",
                  "config_fn",
                  "ck",
                  "k",
                  "platform"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_controlled_two_qubit_gates",
                []
              ],
              [
                "test_decompose_toffoli",
                []
              ],
              [
                "test_controlled_rotations",
                []
              ],
              [
                "test_controlled_single_qubit_gates",
                []
              ],
              [
                "test_multi_controlled",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7078606332868072,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_controlled_rotations",
                  "test_decompose_toffoli",
                  0.6560693088075521
                ],
                [
                  "test_controlled_single_qubit_gates",
                  "test_decompose_toffoli",
                  0.5497374848155273
                ],
                [
                  "test_controlled_single_qubit_gates",
                  "test_controlled_rotations",
                  0.7231441747925705
                ],
                [
                  "test_controlled_rotations",
                  "test_multi_controlled",
                  0.8026786425083374
                ],
                [
                  "test_multi_controlled",
                  "test_decompose_toffoli",
                  0.6328597264896964
                ],
                [
                  "test_controlled_single_qubit_gates",
                  "test_multi_controlled",
                  0.5946599345428082
                ],
                [
                  "test_controlled_two_qubit_gates",
                  "test_decompose_toffoli",
                  0.6914231825801697
                ],
                [
                  "test_controlled_single_qubit_gates",
                  "test_controlled_two_qubit_gates",
                  0.8839563751971387
                ],
                [
                  "test_controlled_two_qubit_gates",
                  "test_multi_controlled",
                  0.7094605392131448
                ],
                [
                  "test_controlled_rotations",
                  "test_controlled_two_qubit_gates",
                  0.8346169639211267
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_controlled_two_qubit_gates",
                "false"
              ],
              [
                "test_decompose_toffoli",
                "false"
              ],
              [
                "test_controlled_rotations",
                "false"
              ],
              [
                "test_controlled_single_qubit_gates",
                "false"
              ],
              [
                "test_multi_controlled",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      }
    ]
  },
  {
    "name": "tests_\u0026_test_gate_decomposition.py",
    "testCases": [
      {
        "name": "Tester",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_decomposition",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_decomposition",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_decomposition",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_decomposition",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_decomposition",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_decomposition",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_decomposition",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_decomposition",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_decomposition",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_decomposition",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_decomposition",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_decomposition",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_decomposition",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_decomposition",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_decomposition",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_decomposition",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_decomposition",
                [
                  "p",
                  "sweep_points",
                  "num_qubits",
                  "config_fn",
                  "k",
                  "platform"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_decomposition",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_decomposition",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_std_experiments_CCL.py",
    "testCases": [
      {
        "name": "Test_single_qubit_seqs_CCL",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_qasm_seq_echo",
                  "[]"
                ],
                [
                  "test_bug",
                  "[]"
                ],
                [
                  "test_qasm_seq_butterfly",
                  "[]"
                ],
                [
                  "test_allxy",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_qasm_seq_echo",
                  "[]"
                ],
                [
                  "test_bug",
                  "[]"
                ],
                [
                  "test_qasm_seq_butterfly",
                  "[]"
                ],
                [
                  "test_allxy",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_qasm_seq_echo",
                  "true"
                ],
                [
                  "test_bug",
                  "false"
                ],
                [
                  "test_qasm_seq_butterfly",
                  "false"
                ],
                [
                  "test_allxy",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_qasm_seq_echo",
                  "false"
                ],
                [
                  "test_bug",
                  "false"
                ],
                [
                  "test_qasm_seq_butterfly",
                  "false"
                ],
                [
                  "test_allxy",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_qasm_seq_echo",
                  "false"
                ],
                [
                  "test_bug",
                  "false"
                ],
                [
                  "test_qasm_seq_butterfly",
                  "false"
                ],
                [
                  "test_allxy",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_qasm_seq_echo",
                  "false"
                ],
                [
                  "test_bug",
                  "false"
                ],
                [
                  "test_qasm_seq_butterfly",
                  "false"
                ],
                [
                  "test_allxy",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_qasm_seq_echo",
                "false"
              ],
              [
                "test_bug",
                "false"
              ],
              [
                "test_qasm_seq_butterfly",
                "false"
              ],
              [
                "test_allxy",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_qasm_seq_echo",
                "false"
              ],
              [
                "test_bug",
                "false"
              ],
              [
                "test_qasm_seq_butterfly",
                "false"
              ],
              [
                "test_allxy",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_qasm_seq_echo",
                []
              ],
              [
                "test_bug",
                []
              ],
              [
                "test_qasm_seq_butterfly",
                []
              ],
              [
                "test_allxy",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_qasm_seq_echo",
                "false"
              ],
              [
                "test_bug",
                "false"
              ],
              [
                "test_qasm_seq_butterfly",
                "false"
              ],
              [
                "test_allxy",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_qasm_seq_echo",
                "false"
              ],
              [
                "test_bug",
                "false"
              ],
              [
                "test_qasm_seq_butterfly",
                "false"
              ],
              [
                "test_allxy",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_qasm_seq_echo",
                  "0"
                ],
                [
                  "test_bug",
                  "0"
                ],
                [
                  "test_qasm_seq_butterfly",
                  "0"
                ],
                [
                  "test_allxy",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_qasm_seq_echo",
                  "0"
                ],
                [
                  "test_bug",
                  "0"
                ],
                [
                  "test_qasm_seq_butterfly",
                  "0"
                ],
                [
                  "test_allxy",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_qasm_seq_echo",
                "false"
              ],
              [
                "test_bug",
                "false"
              ],
              [
                "test_qasm_seq_butterfly",
                "false"
              ],
              [
                "test_allxy",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_qasm_seq_echo",
                "false"
              ],
              [
                "test_bug",
                "false"
              ],
              [
                "test_qasm_seq_butterfly",
                "false"
              ],
              [
                "test_allxy",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_qasm_seq_echo",
                "0"
              ],
              [
                "test_bug",
                "0"
              ],
              [
                "test_qasm_seq_butterfly",
                "0"
              ],
              [
                "test_allxy",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_qasm_seq_echo",
                [
                  "p",
                  "times",
                  "nqubits",
                  "QISA_fn",
                  "k",
                  "n"
                ]
              ],
              [
                "test_bug",
                [
                  "p",
                  "QISA_fn",
                  "k"
                ]
              ],
              [
                "test_qasm_seq_butterfly",
                [
                  "p",
                  "nqubits",
                  "QISA_fn",
                  "k"
                ]
              ],
              [
                "test_allxy",
                [
                  "p",
                  "QISA_fn",
                  "allXY",
                  "k"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_qasm_seq_echo",
                []
              ],
              [
                "test_bug",
                []
              ],
              [
                "test_qasm_seq_butterfly",
                []
              ],
              [
                "test_allxy",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5062869127946432,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_bug",
                  "test_qasm_seq_butterfly",
                  0.6849174907329855
                ],
                [
                  "test_bug",
                  "test_allxy",
                  0.3530115573733898
                ],
                [
                  "test_allxy",
                  "test_qasm_seq_echo",
                  0.278719516719822
                ],
                [
                  "test_bug",
                  "test_qasm_seq_echo",
                  0.6937416234117972
                ],
                [
                  "test_qasm_seq_echo",
                  "test_qasm_seq_butterfly",
                  0.6926295689344454
                ],
                [
                  "test_allxy",
                  "test_qasm_seq_butterfly",
                  0.33470171959541967
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_qasm_seq_echo",
                "false"
              ],
              [
                "test_bug",
                "false"
              ],
              [
                "test_qasm_seq_butterfly",
                "false"
              ],
              [
                "test_allxy",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "tests_\u0026_cqasm_\u0026_test_cqasm_reader.py",
    "testCases": [
      {
        "name": "TestcQasmReader",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_single_bit_kernel_operations",
                  "[]"
                ],
                [
                  "test_invalid_qasm",
                  "[PyCallExpression: self.assertRaisesRegex]"
                ],
                [
                  "test_parallel_programs",
                  "[]"
                ],
                [
                  "test_multiple_programs",
                  "[]"
                ],
                [
                  "test_sub_circuit_programs",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_single_bit_kernel_operations",
                  "[]"
                ],
                [
                  "test_invalid_qasm",
                  "[]"
                ],
                [
                  "test_parallel_programs",
                  "[]"
                ],
                [
                  "test_multiple_programs",
                  "[]"
                ],
                [
                  "test_sub_circuit_programs",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_single_bit_kernel_operations",
                  "false"
                ],
                [
                  "test_invalid_qasm",
                  "false"
                ],
                [
                  "test_parallel_programs",
                  "false"
                ],
                [
                  "test_multiple_programs",
                  "false"
                ],
                [
                  "test_sub_circuit_programs",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_single_bit_kernel_operations",
                  "false"
                ],
                [
                  "test_invalid_qasm",
                  "false"
                ],
                [
                  "test_parallel_programs",
                  "false"
                ],
                [
                  "test_multiple_programs",
                  "false"
                ],
                [
                  "test_sub_circuit_programs",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_single_bit_kernel_operations",
                  "false"
                ],
                [
                  "test_invalid_qasm",
                  "false"
                ],
                [
                  "test_parallel_programs",
                  "false"
                ],
                [
                  "test_multiple_programs",
                  "false"
                ],
                [
                  "test_sub_circuit_programs",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_single_bit_kernel_operations",
                  "false"
                ],
                [
                  "test_invalid_qasm",
                  "false"
                ],
                [
                  "test_parallel_programs",
                  "false"
                ],
                [
                  "test_multiple_programs",
                  "false"
                ],
                [
                  "test_sub_circuit_programs",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_single_bit_kernel_operations",
                "false"
              ],
              [
                "test_invalid_qasm",
                "false"
              ],
              [
                "test_parallel_programs",
                "false"
              ],
              [
                "test_multiple_programs",
                "false"
              ],
              [
                "test_sub_circuit_programs",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_single_bit_kernel_operations",
                "false"
              ],
              [
                "test_invalid_qasm",
                "false"
              ],
              [
                "test_parallel_programs",
                "false"
              ],
              [
                "test_multiple_programs",
                "false"
              ],
              [
                "test_sub_circuit_programs",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_single_bit_kernel_operations",
                []
              ],
              [
                "test_invalid_qasm",
                []
              ],
              [
                "test_parallel_programs",
                []
              ],
              [
                "test_multiple_programs",
                []
              ],
              [
                "test_sub_circuit_programs",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_single_bit_kernel_operations",
                "false"
              ],
              [
                "test_invalid_qasm",
                "false"
              ],
              [
                "test_parallel_programs",
                "false"
              ],
              [
                "test_multiple_programs",
                "false"
              ],
              [
                "test_sub_circuit_programs",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_single_bit_kernel_operations",
                "false"
              ],
              [
                "test_invalid_qasm",
                "false"
              ],
              [
                "test_parallel_programs",
                "false"
              ],
              [
                "test_multiple_programs",
                "false"
              ],
              [
                "test_sub_circuit_programs",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_single_bit_kernel_operations",
                  "0"
                ],
                [
                  "test_invalid_qasm",
                  "0"
                ],
                [
                  "test_parallel_programs",
                  "0"
                ],
                [
                  "test_multiple_programs",
                  "0"
                ],
                [
                  "test_sub_circuit_programs",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_single_bit_kernel_operations",
                  "0"
                ],
                [
                  "test_invalid_qasm",
                  "0"
                ],
                [
                  "test_parallel_programs",
                  "0"
                ],
                [
                  "test_multiple_programs",
                  "0"
                ],
                [
                  "test_sub_circuit_programs",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_single_bit_kernel_operations",
                "false"
              ],
              [
                "test_invalid_qasm",
                "false"
              ],
              [
                "test_parallel_programs",
                "false"
              ],
              [
                "test_multiple_programs",
                "false"
              ],
              [
                "test_sub_circuit_programs",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_single_bit_kernel_operations",
                "false"
              ],
              [
                "test_invalid_qasm",
                "false"
              ],
              [
                "test_parallel_programs",
                "false"
              ],
              [
                "test_multiple_programs",
                "false"
              ],
              [
                "test_sub_circuit_programs",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_single_bit_kernel_operations",
                "0"
              ],
              [
                "test_invalid_qasm",
                "1"
              ],
              [
                "test_parallel_programs",
                "0"
              ],
              [
                "test_multiple_programs",
                "0"
              ],
              [
                "test_sub_circuit_programs",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_single_bit_kernel_operations",
                [
                  "qasm_rdr",
                  "number_qubits",
                  "qasm_str",
                  "config_fn",
                  "program",
                  "platform"
                ]
              ],
              [
                "test_invalid_qasm",
                [
                  "qasm_rdr",
                  "number_qubits",
                  "qasm_str",
                  "config_fn",
                  "program",
                  "platform"
                ]
              ],
              [
                "test_parallel_programs",
                [
                  "qasm_rdr",
                  "number_qubits",
                  "qasm_str",
                  "config_fn",
                  "program",
                  "platform"
                ]
              ],
              [
                "test_multiple_programs",
                [
                  "qasm_rdr",
                  "number_qubits",
                  "qasm_str",
                  "config_fn",
                  "program",
                  "platform"
                ]
              ],
              [
                "test_sub_circuit_programs",
                [
                  "qasm_rdr",
                  "number_qubits",
                  "qasm_str",
                  "config_fn",
                  "program",
                  "platform"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_single_bit_kernel_operations",
                []
              ],
              [
                "test_invalid_qasm",
                []
              ],
              [
                "test_parallel_programs",
                []
              ],
              [
                "test_multiple_programs",
                []
              ],
              [
                "test_sub_circuit_programs",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7504897289566509,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_invalid_qasm",
                  "test_sub_circuit_programs",
                  0.7496160144885784
                ],
                [
                  "test_parallel_programs",
                  "test_multiple_programs",
                  0.7340177458904186
                ],
                [
                  "test_sub_circuit_programs",
                  "test_parallel_programs",
                  0.8177786325274272
                ],
                [
                  "test_single_bit_kernel_operations",
                  "test_parallel_programs",
                  0.6202274584431249
                ],
                [
                  "test_invalid_qasm",
                  "test_parallel_programs",
                  0.6873225599382224
                ],
                [
                  "test_invalid_qasm",
                  "test_multiple_programs",
                  0.7678349771580084
                ],
                [
                  "test_sub_circuit_programs",
                  "test_multiple_programs",
                  0.8539567234507789
                ],
                [
                  "test_invalid_qasm",
                  "test_single_bit_kernel_operations",
                  0.636649828194884
                ],
                [
                  "test_single_bit_kernel_operations",
                  "test_sub_circuit_programs",
                  0.7527670208874644
                ],
                [
                  "test_single_bit_kernel_operations",
                  "test_multiple_programs",
                  0.8847263285876017
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_single_bit_kernel_operations",
                "false"
              ],
              [
                "test_invalid_qasm",
                "false"
              ],
              [
                "test_parallel_programs",
                "false"
              ],
              [
                "test_multiple_programs",
                "false"
              ],
              [
                "test_sub_circuit_programs",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      }
    ]
  },
  {
    "name": "tests_\u0026_test_cc_light_long_duration.py",
    "testCases": [
      {
        "name": "Test_CCL_long_duration",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_AllXY",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_AllXY",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_AllXY",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_AllXY",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_AllXY",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_AllXY",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_AllXY",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_AllXY",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_AllXY",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_AllXY",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_AllXY",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_AllXY",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_AllXY",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_AllXY",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_AllXY",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_AllXY",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_AllXY",
                [
                  "p",
                  "config_fn",
                  "qubit_idx",
                  "QISA_fn",
                  "platf",
                  "allXY",
                  "k"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_AllXY",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_AllXY",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_QISA_assembler_present.py",
    "testCases": [
      {
        "name": "Test_QISA_asssembler",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_QISA_assembler_present",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_QISA_assembler_present",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_QISA_assembler_present",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_QISA_assembler_present",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_QISA_assembler_present",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_QISA_assembler_present",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_QISA_assembler_present",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_QISA_assembler_present",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_QISA_assembler_present",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_QISA_assembler_present",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_QISA_assembler_present",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_QISA_assembler_present",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_QISA_assembler_present",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_QISA_assembler_present",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_QISA_assembler_present",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_QISA_assembler_present",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_QISA_assembler_present",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_QISA_assembler_present",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_QISA_assembler_present",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  }
]