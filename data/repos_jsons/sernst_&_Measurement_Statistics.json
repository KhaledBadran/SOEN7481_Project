[
  {
    "name": "measurement_stats_\u0026_test_\u0026_test_angle.py",
    "testCases": [
      {
        "name": "TestAngle",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_radians",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_differenceBetween",
                  "[PyCallExpression: self.assertLessEqual]"
                ],
                [
                  "test_constrainToRevolution",
                  "[PyCallExpression: self.assertLessEqual, PyCallExpression: self.assertGreaterEqual]"
                ],
                [
                  "test_degrees",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_radians",
                  "[]"
                ],
                [
                  "test_differenceBetween",
                  "[]"
                ],
                [
                  "test_constrainToRevolution",
                  "[]"
                ],
                [
                  "test_degrees",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_radians",
                  "true"
                ],
                [
                  "test_differenceBetween",
                  "true"
                ],
                [
                  "test_constrainToRevolution",
                  "true"
                ],
                [
                  "test_degrees",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_radians",
                  "false"
                ],
                [
                  "test_differenceBetween",
                  "false"
                ],
                [
                  "test_constrainToRevolution",
                  "false"
                ],
                [
                  "test_degrees",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_radians",
                  "true"
                ],
                [
                  "test_differenceBetween",
                  "false"
                ],
                [
                  "test_constrainToRevolution",
                  "false"
                ],
                [
                  "test_degrees",
                  "true"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_radians",
                  "false"
                ],
                [
                  "test_differenceBetween",
                  "false"
                ],
                [
                  "test_constrainToRevolution",
                  "false"
                ],
                [
                  "test_degrees",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_radians",
                "false"
              ],
              [
                "test_differenceBetween",
                "false"
              ],
              [
                "test_constrainToRevolution",
                "false"
              ],
              [
                "test_degrees",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_radians",
                "false"
              ],
              [
                "test_differenceBetween",
                "false"
              ],
              [
                "test_constrainToRevolution",
                "false"
              ],
              [
                "test_degrees",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_radians",
                []
              ],
              [
                "test_differenceBetween",
                []
              ],
              [
                "test_constrainToRevolution",
                []
              ],
              [
                "test_degrees",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_radians",
                "false"
              ],
              [
                "test_differenceBetween",
                "false"
              ],
              [
                "test_constrainToRevolution",
                "false"
              ],
              [
                "test_degrees",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_radians",
                "false"
              ],
              [
                "test_differenceBetween",
                "true"
              ],
              [
                "test_constrainToRevolution",
                "true"
              ],
              [
                "test_degrees",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_radians",
                  "0"
                ],
                [
                  "test_differenceBetween",
                  "0"
                ],
                [
                  "test_constrainToRevolution",
                  "0"
                ],
                [
                  "test_degrees",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_radians",
                  "0"
                ],
                [
                  "test_differenceBetween",
                  "0"
                ],
                [
                  "test_constrainToRevolution",
                  "0"
                ],
                [
                  "test_degrees",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_radians",
                "false"
              ],
              [
                "test_differenceBetween",
                "false"
              ],
              [
                "test_constrainToRevolution",
                "false"
              ],
              [
                "test_degrees",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_radians",
                "false"
              ],
              [
                "test_differenceBetween",
                "false"
              ],
              [
                "test_constrainToRevolution",
                "false"
              ],
              [
                "test_degrees",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_radians",
                "2"
              ],
              [
                "test_differenceBetween",
                "1"
              ],
              [
                "test_constrainToRevolution",
                "2"
              ],
              [
                "test_degrees",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_radians",
                [
                  "a",
                  "value"
                ]
              ],
              [
                "test_differenceBetween",
                [
                  "a",
                  "b",
                  "value"
                ]
              ],
              [
                "test_constrainToRevolution",
                [
                  "a",
                  "value"
                ]
              ],
              [
                "test_degrees",
                [
                  "a",
                  "value"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_radians",
                []
              ],
              [
                "test_differenceBetween",
                []
              ],
              [
                "test_constrainToRevolution",
                []
              ],
              [
                "test_degrees",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7920108691302571,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_radians",
                  "test_differenceBetween",
                  0.7691531958299739
                ],
                [
                  "test_constrainToRevolution",
                  "test_differenceBetween",
                  0.8481170999296184
                ],
                [
                  "test_degrees",
                  "test_radians",
                  0.9083648743279549
                ],
                [
                  "test_radians",
                  "test_constrainToRevolution",
                  0.7188526729585087
                ],
                [
                  "test_degrees",
                  "test_differenceBetween",
                  0.7627700713964739
                ],
                [
                  "test_degrees",
                  "test_constrainToRevolution",
                  0.7448073003390128
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_radians",
                "false"
              ],
              [
                "test_differenceBetween",
                "false"
              ],
              [
                "test_constrainToRevolution",
                "false"
              ],
              [
                "test_degrees",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "measurement_stats_\u0026_test_\u0026_test_value.py",
    "testCases": [
      {
        "name": "TestValue",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_roundingIssue",
                  "[]"
                ],
                [
                  "test_arithmetic",
                  "[PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_simple_arithmetic",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_roundingIssue",
                  "[]"
                ],
                [
                  "test_arithmetic",
                  "[]"
                ],
                [
                  "test_simple_arithmetic",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_roundingIssue",
                  "false"
                ],
                [
                  "test_arithmetic",
                  "false"
                ],
                [
                  "test_simple_arithmetic",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_roundingIssue",
                  "false"
                ],
                [
                  "test_arithmetic",
                  "false"
                ],
                [
                  "test_simple_arithmetic",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_roundingIssue",
                  "false"
                ],
                [
                  "test_arithmetic",
                  "false"
                ],
                [
                  "test_simple_arithmetic",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_roundingIssue",
                  "false"
                ],
                [
                  "test_arithmetic",
                  "false"
                ],
                [
                  "test_simple_arithmetic",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_roundingIssue",
                "false"
              ],
              [
                "test_arithmetic",
                "false"
              ],
              [
                "test_simple_arithmetic",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_roundingIssue",
                "false"
              ],
              [
                "test_arithmetic",
                "false"
              ],
              [
                "test_simple_arithmetic",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_roundingIssue",
                []
              ],
              [
                "test_arithmetic",
                []
              ],
              [
                "test_simple_arithmetic",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_roundingIssue",
                "false"
              ],
              [
                "test_arithmetic",
                "false"
              ],
              [
                "test_simple_arithmetic",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_roundingIssue",
                "false"
              ],
              [
                "test_arithmetic",
                "true"
              ],
              [
                "test_simple_arithmetic",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_roundingIssue",
                  "0"
                ],
                [
                  "test_arithmetic",
                  "0"
                ],
                [
                  "test_simple_arithmetic",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_roundingIssue",
                  "0"
                ],
                [
                  "test_arithmetic",
                  "0"
                ],
                [
                  "test_simple_arithmetic",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_roundingIssue",
                "true"
              ],
              [
                "test_arithmetic",
                "false"
              ],
              [
                "test_simple_arithmetic",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_roundingIssue",
                "false"
              ],
              [
                "test_arithmetic",
                "false"
              ],
              [
                "test_simple_arithmetic",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_roundingIssue",
                "0"
              ],
              [
                "test_arithmetic",
                "3"
              ],
              [
                "test_simple_arithmetic",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_roundingIssue",
                [
                  "summed",
                  "result",
                  "a",
                  "b",
                  "a_squared",
                  "y1",
                  "x1",
                  "y2",
                  "x2",
                  "b_squared"
                ]
              ],
              [
                "test_arithmetic",
                [
                  "T",
                  "g",
                  "l"
                ]
              ],
              [
                "test_simple_arithmetic",
                [
                  "area",
                  "width",
                  "length"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_roundingIssue",
                []
              ],
              [
                "test_arithmetic",
                []
              ],
              [
                "test_simple_arithmetic",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.770972197144259,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_arithmetic",
                  "test_roundingIssue",
                  0.8357208050974606
                ],
                [
                  "test_simple_arithmetic",
                  "test_arithmetic",
                  0.7834619939248904
                ],
                [
                  "test_simple_arithmetic",
                  "test_roundingIssue",
                  0.6937337924104262
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_roundingIssue",
                "false"
              ],
              [
                "test_arithmetic",
                "false"
              ],
              [
                "test_simple_arithmetic",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "measurement_stats_\u0026_test_\u0026_test_basics.py",
    "testCases": [
      {
        "name": "TestBasics",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_isNumber",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertFalse, PyCallExpression: self.assertFalse]"
                ],
                [
                  "test_roundToOrder",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_toValueUncertainty",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_linearSpace",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.fail]"
                ],
                [
                  "test_equivalent",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertFalse]"
                ],
                [
                  "test_sqrtSumOfSquares",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_weightedAverage",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_orderOfMagnitude",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_isNumber",
                  "[]"
                ],
                [
                  "test_roundToOrder",
                  "[]"
                ],
                [
                  "test_toValueUncertainty",
                  "[]"
                ],
                [
                  "test_linearSpace",
                  "[]"
                ],
                [
                  "test_equivalent",
                  "[]"
                ],
                [
                  "test_sqrtSumOfSquares",
                  "[]"
                ],
                [
                  "test_weightedAverage",
                  "[]"
                ],
                [
                  "test_orderOfMagnitude",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_isNumber",
                  "false"
                ],
                [
                  "test_roundToOrder",
                  "false"
                ],
                [
                  "test_toValueUncertainty",
                  "false"
                ],
                [
                  "test_linearSpace",
                  "false"
                ],
                [
                  "test_equivalent",
                  "false"
                ],
                [
                  "test_sqrtSumOfSquares",
                  "false"
                ],
                [
                  "test_weightedAverage",
                  "false"
                ],
                [
                  "test_orderOfMagnitude",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_isNumber",
                  "false"
                ],
                [
                  "test_roundToOrder",
                  "false"
                ],
                [
                  "test_toValueUncertainty",
                  "false"
                ],
                [
                  "test_linearSpace",
                  "false"
                ],
                [
                  "test_equivalent",
                  "false"
                ],
                [
                  "test_sqrtSumOfSquares",
                  "false"
                ],
                [
                  "test_weightedAverage",
                  "false"
                ],
                [
                  "test_orderOfMagnitude",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_isNumber",
                  "false"
                ],
                [
                  "test_roundToOrder",
                  "false"
                ],
                [
                  "test_toValueUncertainty",
                  "false"
                ],
                [
                  "test_linearSpace",
                  "false"
                ],
                [
                  "test_equivalent",
                  "false"
                ],
                [
                  "test_sqrtSumOfSquares",
                  "false"
                ],
                [
                  "test_weightedAverage",
                  "false"
                ],
                [
                  "test_orderOfMagnitude",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_isNumber",
                  "false"
                ],
                [
                  "test_roundToOrder",
                  "false"
                ],
                [
                  "test_toValueUncertainty",
                  "false"
                ],
                [
                  "test_linearSpace",
                  "false"
                ],
                [
                  "test_equivalent",
                  "false"
                ],
                [
                  "test_sqrtSumOfSquares",
                  "false"
                ],
                [
                  "test_weightedAverage",
                  "false"
                ],
                [
                  "test_orderOfMagnitude",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_isNumber",
                "false"
              ],
              [
                "test_roundToOrder",
                "false"
              ],
              [
                "test_toValueUncertainty",
                "false"
              ],
              [
                "test_linearSpace",
                "false"
              ],
              [
                "test_equivalent",
                "false"
              ],
              [
                "test_sqrtSumOfSquares",
                "false"
              ],
              [
                "test_weightedAverage",
                "false"
              ],
              [
                "test_orderOfMagnitude",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_isNumber",
                "false"
              ],
              [
                "test_roundToOrder",
                "false"
              ],
              [
                "test_toValueUncertainty",
                "false"
              ],
              [
                "test_linearSpace",
                "true"
              ],
              [
                "test_equivalent",
                "false"
              ],
              [
                "test_sqrtSumOfSquares",
                "false"
              ],
              [
                "test_weightedAverage",
                "false"
              ],
              [
                "test_orderOfMagnitude",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_isNumber",
                []
              ],
              [
                "test_roundToOrder",
                []
              ],
              [
                "test_toValueUncertainty",
                []
              ],
              [
                "test_linearSpace",
                []
              ],
              [
                "test_equivalent",
                []
              ],
              [
                "test_sqrtSumOfSquares",
                []
              ],
              [
                "test_weightedAverage",
                []
              ],
              [
                "test_orderOfMagnitude",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_isNumber",
                "false"
              ],
              [
                "test_roundToOrder",
                "false"
              ],
              [
                "test_toValueUncertainty",
                "false"
              ],
              [
                "test_linearSpace",
                "false"
              ],
              [
                "test_equivalent",
                "false"
              ],
              [
                "test_sqrtSumOfSquares",
                "false"
              ],
              [
                "test_weightedAverage",
                "false"
              ],
              [
                "test_orderOfMagnitude",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_isNumber",
                "false"
              ],
              [
                "test_roundToOrder",
                "true"
              ],
              [
                "test_toValueUncertainty",
                "true"
              ],
              [
                "test_linearSpace",
                "true"
              ],
              [
                "test_equivalent",
                "false"
              ],
              [
                "test_sqrtSumOfSquares",
                "true"
              ],
              [
                "test_weightedAverage",
                "true"
              ],
              [
                "test_orderOfMagnitude",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_isNumber",
                  "0"
                ],
                [
                  "test_roundToOrder",
                  "0"
                ],
                [
                  "test_toValueUncertainty",
                  "0"
                ],
                [
                  "test_linearSpace",
                  "0"
                ],
                [
                  "test_equivalent",
                  "0"
                ],
                [
                  "test_sqrtSumOfSquares",
                  "0"
                ],
                [
                  "test_weightedAverage",
                  "0"
                ],
                [
                  "test_orderOfMagnitude",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_isNumber",
                  "0"
                ],
                [
                  "test_roundToOrder",
                  "0"
                ],
                [
                  "test_toValueUncertainty",
                  "0"
                ],
                [
                  "test_linearSpace",
                  "0"
                ],
                [
                  "test_equivalent",
                  "0"
                ],
                [
                  "test_sqrtSumOfSquares",
                  "0"
                ],
                [
                  "test_weightedAverage",
                  "0"
                ],
                [
                  "test_orderOfMagnitude",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_isNumber",
                "false"
              ],
              [
                "test_roundToOrder",
                "false"
              ],
              [
                "test_toValueUncertainty",
                "false"
              ],
              [
                "test_linearSpace",
                "false"
              ],
              [
                "test_equivalent",
                "false"
              ],
              [
                "test_sqrtSumOfSquares",
                "false"
              ],
              [
                "test_weightedAverage",
                "false"
              ],
              [
                "test_orderOfMagnitude",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_isNumber",
                "false"
              ],
              [
                "test_roundToOrder",
                "false"
              ],
              [
                "test_toValueUncertainty",
                "false"
              ],
              [
                "test_linearSpace",
                "false"
              ],
              [
                "test_equivalent",
                "false"
              ],
              [
                "test_sqrtSumOfSquares",
                "false"
              ],
              [
                "test_weightedAverage",
                "false"
              ],
              [
                "test_orderOfMagnitude",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_isNumber",
                "5"
              ],
              [
                "test_roundToOrder",
                "6"
              ],
              [
                "test_toValueUncertainty",
                "6"
              ],
              [
                "test_linearSpace",
                "7"
              ],
              [
                "test_equivalent",
                "2"
              ],
              [
                "test_sqrtSumOfSquares",
                "3"
              ],
              [
                "test_weightedAverage",
                "2"
              ],
              [
                "test_orderOfMagnitude",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_isNumber",
                []
              ],
              [
                "test_roundToOrder",
                []
              ],
              [
                "test_toValueUncertainty",
                [
                  "v"
                ]
              ],
              [
                "test_linearSpace",
                [
                  "result"
                ]
              ],
              [
                "test_equivalent",
                []
              ],
              [
                "test_sqrtSumOfSquares",
                []
              ],
              [
                "test_weightedAverage",
                [
                  "result",
                  "values"
                ]
              ],
              [
                "test_orderOfMagnitude",
                [
                  "result",
                  "msg",
                  "v",
                  "testOrder"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_isNumber",
                []
              ],
              [
                "test_roundToOrder",
                []
              ],
              [
                "test_toValueUncertainty",
                []
              ],
              [
                "test_linearSpace",
                []
              ],
              [
                "test_equivalent",
                []
              ],
              [
                "test_sqrtSumOfSquares",
                []
              ],
              [
                "test_weightedAverage",
                []
              ],
              [
                "test_orderOfMagnitude",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.46932158440558014,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_linearSpace",
                  "test_sqrtSumOfSquares",
                  0.533336443286461
                ],
                [
                  "test_roundToOrder",
                  "test_orderOfMagnitude",
                  0.31579308846976806
                ],
                [
                  "test_orderOfMagnitude",
                  "test_equivalent",
                  0.44615070717722644
                ],
                [
                  "test_roundToOrder",
                  "test_toValueUncertainty",
                  0.4461835349577094
                ],
                [
                  "test_sqrtSumOfSquares",
                  "test_weightedAverage",
                  0.5031650978589124
                ],
                [
                  "test_linearSpace",
                  "test_weightedAverage",
                  0.6457592815564317
                ],
                [
                  "test_linearSpace",
                  "test_equivalent",
                  0.760773499570484
                ],
                [
                  "test_isNumber",
                  "test_sqrtSumOfSquares",
                  0.3374444381495626
                ],
                [
                  "test_isNumber",
                  "test_orderOfMagnitude",
                  0.16144414998448708
                ],
                [
                  "test_isNumber",
                  "test_roundToOrder",
                  0.3104416150808335
                ],
                [
                  "test_equivalent",
                  "test_toValueUncertainty",
                  0.5950231385992185
                ],
                [
                  "test_roundToOrder",
                  "test_equivalent",
                  0.694709351182984
                ],
                [
                  "test_orderOfMagnitude",
                  "test_sqrtSumOfSquares",
                  0.37466510511046786
                ],
                [
                  "test_equivalent",
                  "test_weightedAverage",
                  0.737043474095502
                ],
                [
                  "test_linearSpace",
                  "test_toValueUncertainty",
                  0.5502067969503645
                ],
                [
                  "test_isNumber",
                  "test_equivalent",
                  0.34918995107766476
                ],
                [
                  "test_roundToOrder",
                  "test_weightedAverage",
                  0.514769127338595
                ],
                [
                  "test_isNumber",
                  "test_linearSpace",
                  0.3352610386430423
                ],
                [
                  "test_isNumber",
                  "test_weightedAverage",
                  0.16303866268150616
                ],
                [
                  "test_equivalent",
                  "test_sqrtSumOfSquares",
                  0.6665936273164977
                ],
                [
                  "test_sqrtSumOfSquares",
                  "test_toValueUncertainty",
                  0.4060926408665381
                ],
                [
                  "test_linearSpace",
                  "test_orderOfMagnitude",
                  0.3950556362997747
                ],
                [
                  "test_toValueUncertainty",
                  "test_weightedAverage",
                  0.7096136041279676
                ],
                [
                  "test_orderOfMagnitude",
                  "test_toValueUncertainty",
                  0.36444804394907365
                ],
                [
                  "test_orderOfMagnitude",
                  "test_weightedAverage",
                  0.41897854864805995
                ],
                [
                  "test_linearSpace",
                  "test_roundToOrder",
                  0.6846690560040384
                ],
                [
                  "test_roundToOrder",
                  "test_sqrtSumOfSquares",
                  0.5084261939490469
                ],
                [
                  "test_isNumber",
                  "test_toValueUncertainty",
                  0.21272851042402488
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_isNumber",
                "false"
              ],
              [
                "test_roundToOrder",
                "false"
              ],
              [
                "test_toValueUncertainty",
                "false"
              ],
              [
                "test_linearSpace",
                "true"
              ],
              [
                "test_equivalent",
                "false"
              ],
              [
                "test_sqrtSumOfSquares",
                "false"
              ],
              [
                "test_weightedAverage",
                "false"
              ],
              [
                "test_orderOfMagnitude",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 8
      }
    ]
  },
  {
    "name": "measurement_stats_\u0026_test_\u0026_test_density.py",
    "testCases": [
      {
        "name": "TestDensity",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_compareAgainstGaussian3",
                  "[PyCallExpression: self.assertGreaterEqual, PyCallExpression: self.assertLess]"
                ],
                [
                  "test_doubleDensityOverlap",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_generalizedGetMedian",
                  "[]"
                ],
                [
                  "test_tukey_box",
                  "[]"
                ],
                [
                  "test_singleDensityMedian",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_fromValuesOnly",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_singleDensity",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_doubleDensityOffset",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_getAdaptiveRange",
                  "[]"
                ],
                [
                  "test_getAdaptiveRangeMulti",
                  "[]"
                ],
                [
                  "test_overlap",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_compareAgainstGaussian2",
                  "[PyCallExpression: self.assertLess]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_compareAgainstGaussian3",
                  "[]"
                ],
                [
                  "test_doubleDensityOverlap",
                  "[]"
                ],
                [
                  "test_generalizedGetMedian",
                  "[]"
                ],
                [
                  "test_tukey_box",
                  "[]"
                ],
                [
                  "test_singleDensityMedian",
                  "[]"
                ],
                [
                  "test_fromValuesOnly",
                  "[]"
                ],
                [
                  "test_singleDensity",
                  "[]"
                ],
                [
                  "test_doubleDensityOffset",
                  "[]"
                ],
                [
                  "test_getAdaptiveRange",
                  "[]"
                ],
                [
                  "test_getAdaptiveRangeMulti",
                  "[]"
                ],
                [
                  "test_overlap",
                  "[]"
                ],
                [
                  "test_compareAgainstGaussian2",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_compareAgainstGaussian3",
                  "false"
                ],
                [
                  "test_doubleDensityOverlap",
                  "false"
                ],
                [
                  "test_generalizedGetMedian",
                  "true"
                ],
                [
                  "test_tukey_box",
                  "true"
                ],
                [
                  "test_singleDensityMedian",
                  "true"
                ],
                [
                  "test_fromValuesOnly",
                  "false"
                ],
                [
                  "test_singleDensity",
                  "false"
                ],
                [
                  "test_doubleDensityOffset",
                  "false"
                ],
                [
                  "test_getAdaptiveRange",
                  "false"
                ],
                [
                  "test_getAdaptiveRangeMulti",
                  "false"
                ],
                [
                  "test_overlap",
                  "false"
                ],
                [
                  "test_compareAgainstGaussian2",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_compareAgainstGaussian3",
                  "false"
                ],
                [
                  "test_doubleDensityOverlap",
                  "false"
                ],
                [
                  "test_generalizedGetMedian",
                  "false"
                ],
                [
                  "test_tukey_box",
                  "false"
                ],
                [
                  "test_singleDensityMedian",
                  "false"
                ],
                [
                  "test_fromValuesOnly",
                  "false"
                ],
                [
                  "test_singleDensity",
                  "false"
                ],
                [
                  "test_doubleDensityOffset",
                  "false"
                ],
                [
                  "test_getAdaptiveRange",
                  "false"
                ],
                [
                  "test_getAdaptiveRangeMulti",
                  "false"
                ],
                [
                  "test_overlap",
                  "false"
                ],
                [
                  "test_compareAgainstGaussian2",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_compareAgainstGaussian3",
                  "false"
                ],
                [
                  "test_doubleDensityOverlap",
                  "false"
                ],
                [
                  "test_generalizedGetMedian",
                  "false"
                ],
                [
                  "test_tukey_box",
                  "false"
                ],
                [
                  "test_singleDensityMedian",
                  "false"
                ],
                [
                  "test_fromValuesOnly",
                  "false"
                ],
                [
                  "test_singleDensity",
                  "false"
                ],
                [
                  "test_doubleDensityOffset",
                  "false"
                ],
                [
                  "test_getAdaptiveRange",
                  "false"
                ],
                [
                  "test_getAdaptiveRangeMulti",
                  "false"
                ],
                [
                  "test_overlap",
                  "false"
                ],
                [
                  "test_compareAgainstGaussian2",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_compareAgainstGaussian3",
                  "false"
                ],
                [
                  "test_doubleDensityOverlap",
                  "false"
                ],
                [
                  "test_generalizedGetMedian",
                  "false"
                ],
                [
                  "test_tukey_box",
                  "false"
                ],
                [
                  "test_singleDensityMedian",
                  "false"
                ],
                [
                  "test_fromValuesOnly",
                  "false"
                ],
                [
                  "test_singleDensity",
                  "false"
                ],
                [
                  "test_doubleDensityOffset",
                  "false"
                ],
                [
                  "test_getAdaptiveRange",
                  "false"
                ],
                [
                  "test_getAdaptiveRangeMulti",
                  "false"
                ],
                [
                  "test_overlap",
                  "false"
                ],
                [
                  "test_compareAgainstGaussian2",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_compareAgainstGaussian3",
                "false"
              ],
              [
                "test_doubleDensityOverlap",
                "false"
              ],
              [
                "test_generalizedGetMedian",
                "false"
              ],
              [
                "test_tukey_box",
                "false"
              ],
              [
                "test_singleDensityMedian",
                "false"
              ],
              [
                "test_fromValuesOnly",
                "false"
              ],
              [
                "test_singleDensity",
                "false"
              ],
              [
                "test_doubleDensityOffset",
                "false"
              ],
              [
                "test_getAdaptiveRange",
                "false"
              ],
              [
                "test_getAdaptiveRangeMulti",
                "false"
              ],
              [
                "test_overlap",
                "false"
              ],
              [
                "test_compareAgainstGaussian2",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_compareAgainstGaussian3",
                "false"
              ],
              [
                "test_doubleDensityOverlap",
                "false"
              ],
              [
                "test_generalizedGetMedian",
                "false"
              ],
              [
                "test_tukey_box",
                "false"
              ],
              [
                "test_singleDensityMedian",
                "false"
              ],
              [
                "test_fromValuesOnly",
                "false"
              ],
              [
                "test_singleDensity",
                "false"
              ],
              [
                "test_doubleDensityOffset",
                "false"
              ],
              [
                "test_getAdaptiveRange",
                "false"
              ],
              [
                "test_getAdaptiveRangeMulti",
                "false"
              ],
              [
                "test_overlap",
                "false"
              ],
              [
                "test_compareAgainstGaussian2",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_compareAgainstGaussian3",
                []
              ],
              [
                "test_doubleDensityOverlap",
                []
              ],
              [
                "test_generalizedGetMedian",
                []
              ],
              [
                "test_tukey_box",
                []
              ],
              [
                "test_singleDensityMedian",
                []
              ],
              [
                "test_fromValuesOnly",
                []
              ],
              [
                "test_singleDensity",
                []
              ],
              [
                "test_doubleDensityOffset",
                []
              ],
              [
                "test_getAdaptiveRange",
                []
              ],
              [
                "test_getAdaptiveRangeMulti",
                []
              ],
              [
                "test_overlap",
                []
              ],
              [
                "test_compareAgainstGaussian2",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_compareAgainstGaussian3",
                "false"
              ],
              [
                "test_doubleDensityOverlap",
                "false"
              ],
              [
                "test_generalizedGetMedian",
                "false"
              ],
              [
                "test_tukey_box",
                "false"
              ],
              [
                "test_singleDensityMedian",
                "false"
              ],
              [
                "test_fromValuesOnly",
                "false"
              ],
              [
                "test_singleDensity",
                "false"
              ],
              [
                "test_doubleDensityOffset",
                "false"
              ],
              [
                "test_getAdaptiveRange",
                "false"
              ],
              [
                "test_getAdaptiveRangeMulti",
                "false"
              ],
              [
                "test_overlap",
                "false"
              ],
              [
                "test_compareAgainstGaussian2",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_compareAgainstGaussian3",
                "true"
              ],
              [
                "test_doubleDensityOverlap",
                "true"
              ],
              [
                "test_generalizedGetMedian",
                "false"
              ],
              [
                "test_tukey_box",
                "false"
              ],
              [
                "test_singleDensityMedian",
                "false"
              ],
              [
                "test_fromValuesOnly",
                "false"
              ],
              [
                "test_singleDensity",
                "true"
              ],
              [
                "test_doubleDensityOffset",
                "true"
              ],
              [
                "test_getAdaptiveRange",
                "false"
              ],
              [
                "test_getAdaptiveRangeMulti",
                "false"
              ],
              [
                "test_overlap",
                "true"
              ],
              [
                "test_compareAgainstGaussian2",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_compareAgainstGaussian3",
                  "0"
                ],
                [
                  "test_doubleDensityOverlap",
                  "0"
                ],
                [
                  "test_generalizedGetMedian",
                  "0"
                ],
                [
                  "test_tukey_box",
                  "0"
                ],
                [
                  "test_singleDensityMedian",
                  "0"
                ],
                [
                  "test_fromValuesOnly",
                  "0"
                ],
                [
                  "test_singleDensity",
                  "0"
                ],
                [
                  "test_doubleDensityOffset",
                  "0"
                ],
                [
                  "test_getAdaptiveRange",
                  "0"
                ],
                [
                  "test_getAdaptiveRangeMulti",
                  "0"
                ],
                [
                  "test_overlap",
                  "0"
                ],
                [
                  "test_compareAgainstGaussian2",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_compareAgainstGaussian3",
                  "0"
                ],
                [
                  "test_doubleDensityOverlap",
                  "0"
                ],
                [
                  "test_generalizedGetMedian",
                  "0"
                ],
                [
                  "test_tukey_box",
                  "0"
                ],
                [
                  "test_singleDensityMedian",
                  "0"
                ],
                [
                  "test_fromValuesOnly",
                  "0"
                ],
                [
                  "test_singleDensity",
                  "0"
                ],
                [
                  "test_doubleDensityOffset",
                  "0"
                ],
                [
                  "test_getAdaptiveRange",
                  "0"
                ],
                [
                  "test_getAdaptiveRangeMulti",
                  "0"
                ],
                [
                  "test_overlap",
                  "0"
                ],
                [
                  "test_compareAgainstGaussian2",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_compareAgainstGaussian3",
                "false"
              ],
              [
                "test_doubleDensityOverlap",
                "false"
              ],
              [
                "test_generalizedGetMedian",
                "false"
              ],
              [
                "test_tukey_box",
                "false"
              ],
              [
                "test_singleDensityMedian",
                "false"
              ],
              [
                "test_fromValuesOnly",
                "false"
              ],
              [
                "test_singleDensity",
                "false"
              ],
              [
                "test_doubleDensityOffset",
                "false"
              ],
              [
                "test_getAdaptiveRange",
                "false"
              ],
              [
                "test_getAdaptiveRangeMulti",
                "false"
              ],
              [
                "test_overlap",
                "false"
              ],
              [
                "test_compareAgainstGaussian2",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_compareAgainstGaussian3",
                "false"
              ],
              [
                "test_doubleDensityOverlap",
                "false"
              ],
              [
                "test_generalizedGetMedian",
                "false"
              ],
              [
                "test_tukey_box",
                "false"
              ],
              [
                "test_singleDensityMedian",
                "false"
              ],
              [
                "test_fromValuesOnly",
                "false"
              ],
              [
                "test_singleDensity",
                "false"
              ],
              [
                "test_doubleDensityOffset",
                "false"
              ],
              [
                "test_getAdaptiveRange",
                "false"
              ],
              [
                "test_getAdaptiveRangeMulti",
                "false"
              ],
              [
                "test_overlap",
                "false"
              ],
              [
                "test_compareAgainstGaussian2",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_compareAgainstGaussian3",
                "2"
              ],
              [
                "test_doubleDensityOverlap",
                "1"
              ],
              [
                "test_generalizedGetMedian",
                "0"
              ],
              [
                "test_tukey_box",
                "0"
              ],
              [
                "test_singleDensityMedian",
                "1"
              ],
              [
                "test_fromValuesOnly",
                "2"
              ],
              [
                "test_singleDensity",
                "1"
              ],
              [
                "test_doubleDensityOffset",
                "1"
              ],
              [
                "test_getAdaptiveRange",
                "0"
              ],
              [
                "test_getAdaptiveRangeMulti",
                "0"
              ],
              [
                "test_overlap",
                "1"
              ],
              [
                "test_compareAgainstGaussian2",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_compareAgainstGaussian3",
                [
                  "d1",
                  "d2"
                ]
              ],
              [
                "test_doubleDensityOverlap",
                [
                  "area",
                  "dist",
                  "x_values",
                  "measurements"
                ]
              ],
              [
                "test_generalizedGetMedian",
                [
                  "result",
                  "dist",
                  "measurements"
                ]
              ],
              [
                "test_tukey_box",
                [
                  "unweighted",
                  "dist",
                  "weighted",
                  "measurements"
                ]
              ],
              [
                "test_singleDensityMedian",
                [
                  "median",
                  "dist",
                  "measurements"
                ]
              ],
              [
                "test_fromValuesOnly",
                [
                  "dd",
                  "values"
                ]
              ],
              [
                "test_singleDensity",
                [
                  "area",
                  "dist",
                  "x_values",
                  "measurements"
                ]
              ],
              [
                "test_doubleDensityOffset",
                [
                  "area",
                  "dist",
                  "x_values",
                  "measurements"
                ]
              ],
              [
                "test_getAdaptiveRange",
                [
                  "result",
                  "dist"
                ]
              ],
              [
                "test_getAdaptiveRangeMulti",
                [
                  "result",
                  "dist",
                  "measurements"
                ]
              ],
              [
                "test_overlap",
                [
                  "d1",
                  "d2"
                ]
              ],
              [
                "test_compareAgainstGaussian2",
                [
                  "d1",
                  "d2"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_compareAgainstGaussian3",
                []
              ],
              [
                "test_doubleDensityOverlap",
                []
              ],
              [
                "test_generalizedGetMedian",
                []
              ],
              [
                "test_tukey_box",
                []
              ],
              [
                "test_singleDensityMedian",
                []
              ],
              [
                "test_fromValuesOnly",
                []
              ],
              [
                "test_singleDensity",
                []
              ],
              [
                "test_doubleDensityOffset",
                []
              ],
              [
                "test_getAdaptiveRange",
                []
              ],
              [
                "test_getAdaptiveRangeMulti",
                []
              ],
              [
                "test_overlap",
                []
              ],
              [
                "test_compareAgainstGaussian2",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5366633891030754,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_singleDensity",
                  "test_fromValuesOnly",
                  0.5937527876830188
                ],
                [
                  "test_generalizedGetMedian",
                  "test_fromValuesOnly",
                  0.2889564792077322
                ],
                [
                  "test_fromValuesOnly",
                  "test_getAdaptiveRange",
                  0.3247991771764601
                ],
                [
                  "test_doubleDensityOffset",
                  "test_compareAgainstGaussian2",
                  0.6066056393500904
                ],
                [
                  "test_tukey_box",
                  "test_generalizedGetMedian",
                  0.25682039620167874
                ],
                [
                  "test_tukey_box",
                  "test_overlap",
                  0.37927913601518615
                ],
                [
                  "test_singleDensityMedian",
                  "test_tukey_box",
                  0.42439671341384444
                ],
                [
                  "test_overlap",
                  "test_getAdaptiveRange",
                  0.5923057020691223
                ],
                [
                  "test_doubleDensityOverlap",
                  "test_compareAgainstGaussian2",
                  0.5933403626281915
                ],
                [
                  "test_compareAgainstGaussian3",
                  "test_fromValuesOnly",
                  0.4701524481395374
                ],
                [
                  "test_compareAgainstGaussian2",
                  "test_fromValuesOnly",
                  0.46829552560397086
                ],
                [
                  "test_singleDensityMedian",
                  "test_generalizedGetMedian",
                  0.4267028921060837
                ],
                [
                  "test_getAdaptiveRange",
                  "test_getAdaptiveRangeMulti",
                  0.7493633116627259
                ],
                [
                  "test_tukey_box",
                  "test_getAdaptiveRangeMulti",
                  0.47194655215415854
                ],
                [
                  "test_overlap",
                  "test_getAdaptiveRangeMulti",
                  0.5101963803808449
                ],
                [
                  "test_singleDensity",
                  "test_compareAgainstGaussian3",
                  0.586224086109577
                ],
                [
                  "test_doubleDensityOverlap",
                  "test_fromValuesOnly",
                  0.6014869911280526
                ],
                [
                  "test_singleDensity",
                  "test_getAdaptiveRangeMulti",
                  0.6575433730910857
                ],
                [
                  "test_overlap",
                  "test_compareAgainstGaussian3",
                  0.7580980435789034
                ],
                [
                  "test_doubleDensityOverlap",
                  "test_overlap",
                  0.5901317066594033
                ],
                [
                  "test_fromValuesOnly",
                  "test_getAdaptiveRangeMulti",
                  0.4429745084023906
                ],
                [
                  "test_doubleDensityOverlap",
                  "test_singleDensityMedian",
                  0.6202570240213391
                ],
                [
                  "test_compareAgainstGaussian3",
                  "test_getAdaptiveRange",
                  0.4632055558531008
                ],
                [
                  "test_doubleDensityOffset",
                  "test_fromValuesOnly",
                  0.6052838302860275
                ],
                [
                  "test_singleDensityMedian",
                  "test_getAdaptiveRangeMulti",
                  0.4976966782600022
                ],
                [
                  "test_compareAgainstGaussian2",
                  "test_getAdaptiveRange",
                  0.5590653920196746
                ],
                [
                  "test_doubleDensityOffset",
                  "test_singleDensityMedian",
                  0.5784466069071004
                ],
                [
                  "test_doubleDensityOverlap",
                  "test_compareAgainstGaussian3",
                  0.6195208477771773
                ],
                [
                  "test_generalizedGetMedian",
                  "test_overlap",
                  0.33280594477337255
                ],
                [
                  "test_doubleDensityOffset",
                  "test_overlap",
                  0.5664232612353888
                ],
                [
                  "test_tukey_box",
                  "test_fromValuesOnly",
                  0.3099355376904239
                ],
                [
                  "test_singleDensity",
                  "test_getAdaptiveRange",
                  0.5223032123987001
                ],
                [
                  "test_singleDensityMedian",
                  "test_compareAgainstGaussian3",
                  0.3605183418372233
                ],
                [
                  "test_overlap",
                  "test_fromValuesOnly",
                  0.5315774339537506
                ],
                [
                  "test_compareAgainstGaussian2",
                  "test_getAdaptiveRangeMulti",
                  0.574172534596893
                ],
                [
                  "test_singleDensity",
                  "test_generalizedGetMedian",
                  0.40999876757952136
                ],
                [
                  "test_singleDensity",
                  "test_tukey_box",
                  0.4456857636466765
                ],
                [
                  "test_singleDensity",
                  "test_doubleDensityOffset",
                  0.8914530882737611
                ],
                [
                  "test_singleDensity",
                  "test_singleDensityMedian",
                  0.6566776637795061
                ],
                [
                  "test_doubleDensityOffset",
                  "test_getAdaptiveRange",
                  0.5324466605117775
                ],
                [
                  "test_generalizedGetMedian",
                  "test_getAdaptiveRangeMulti",
                  0.6117663993556987
                ],
                [
                  "test_singleDensity",
                  "test_overlap",
                  0.5654958367089701
                ],
                [
                  "test_compareAgainstGaussian2",
                  "test_compareAgainstGaussian3",
                  0.8279975466775703
                ],
                [
                  "test_doubleDensityOverlap",
                  "test_getAdaptiveRangeMulti",
                  0.703114538875314
                ],
                [
                  "test_generalizedGetMedian",
                  "test_compareAgainstGaussian3",
                  0.5661898402388391
                ],
                [
                  "test_compareAgainstGaussian3",
                  "test_getAdaptiveRangeMulti",
                  0.6664497586841344
                ],
                [
                  "test_doubleDensityOffset",
                  "test_generalizedGetMedian",
                  0.5329005231493765
                ],
                [
                  "test_singleDensityMedian",
                  "test_getAdaptiveRange",
                  0.4200412794412906
                ],
                [
                  "test_singleDensity",
                  "test_doubleDensityOverlap",
                  0.9424384690291243
                ],
                [
                  "test_singleDensityMedian",
                  "test_fromValuesOnly",
                  0.393236707952427
                ],
                [
                  "test_doubleDensityOffset",
                  "test_tukey_box",
                  0.3929685442893713
                ],
                [
                  "test_singleDensityMedian",
                  "test_overlap",
                  0.4043846550516413
                ],
                [
                  "test_tukey_box",
                  "test_compareAgainstGaussian3",
                  0.24862954902683052
                ],
                [
                  "test_tukey_box",
                  "test_compareAgainstGaussian2",
                  0.35799391787126217
                ],
                [
                  "test_overlap",
                  "test_compareAgainstGaussian2",
                  0.8475655413823615
                ],
                [
                  "test_generalizedGetMedian",
                  "test_compareAgainstGaussian2",
                  0.3695633071416705
                ],
                [
                  "test_doubleDensityOverlap",
                  "test_doubleDensityOffset",
                  0.9312447606301204
                ],
                [
                  "test_doubleDensityOverlap",
                  "test_generalizedGetMedian",
                  0.47379457191955376
                ],
                [
                  "test_doubleDensityOverlap",
                  "test_getAdaptiveRange",
                  0.5291067161269939
                ],
                [
                  "test_doubleDensityOffset",
                  "test_compareAgainstGaussian3",
                  0.6936532069063643
                ],
                [
                  "test_tukey_box",
                  "test_getAdaptiveRange",
                  0.47711872361369795
                ],
                [
                  "test_doubleDensityOffset",
                  "test_getAdaptiveRangeMulti",
                  0.7750497160234496
                ],
                [
                  "test_doubleDensityOverlap",
                  "test_tukey_box",
                  0.4487941707625715
                ],
                [
                  "test_singleDensityMedian",
                  "test_compareAgainstGaussian2",
                  0.41222575117291
                ],
                [
                  "test_singleDensity",
                  "test_compareAgainstGaussian2",
                  0.5834122039277492
                ],
                [
                  "test_generalizedGetMedian",
                  "test_getAdaptiveRange",
                  0.37380108668021383
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_compareAgainstGaussian3",
                "false"
              ],
              [
                "test_doubleDensityOverlap",
                "false"
              ],
              [
                "test_generalizedGetMedian",
                "false"
              ],
              [
                "test_tukey_box",
                "false"
              ],
              [
                "test_singleDensityMedian",
                "false"
              ],
              [
                "test_fromValuesOnly",
                "false"
              ],
              [
                "test_singleDensity",
                "false"
              ],
              [
                "test_doubleDensityOffset",
                "false"
              ],
              [
                "test_getAdaptiveRange",
                "false"
              ],
              [
                "test_getAdaptiveRangeMulti",
                "false"
              ],
              [
                "test_overlap",
                "false"
              ],
              [
                "test_compareAgainstGaussian2",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 12
      }
    ]
  },
  {
    "name": "measurement_stats_\u0026_test_\u0026_test_value2D.py",
    "testCases": [
      {
        "name": "TestValue2D",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_angleBetween",
                  "[PyCallExpression: self.assertAlmostEquals]"
                ],
                [
                  "test_projection",
                  "[PyCallExpression: self.assertIsNotNone]"
                ],
                [
                  "test_rotate",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_angleBetween",
                  "[]"
                ],
                [
                  "test_projection",
                  "[]"
                ],
                [
                  "test_rotate",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_angleBetween",
                  "false"
                ],
                [
                  "test_projection",
                  "false"
                ],
                [
                  "test_rotate",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_angleBetween",
                  "false"
                ],
                [
                  "test_projection",
                  "false"
                ],
                [
                  "test_rotate",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_angleBetween",
                  "false"
                ],
                [
                  "test_projection",
                  "false"
                ],
                [
                  "test_rotate",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_angleBetween",
                  "false"
                ],
                [
                  "test_projection",
                  "false"
                ],
                [
                  "test_rotate",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_angleBetween",
                "false"
              ],
              [
                "test_projection",
                "false"
              ],
              [
                "test_rotate",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_angleBetween",
                "false"
              ],
              [
                "test_projection",
                "false"
              ],
              [
                "test_rotate",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_angleBetween",
                []
              ],
              [
                "test_projection",
                []
              ],
              [
                "test_rotate",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_angleBetween",
                "false"
              ],
              [
                "test_projection",
                "false"
              ],
              [
                "test_rotate",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_angleBetween",
                "true"
              ],
              [
                "test_projection",
                "false"
              ],
              [
                "test_rotate",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_angleBetween",
                  "0"
                ],
                [
                  "test_projection",
                  "0"
                ],
                [
                  "test_rotate",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_angleBetween",
                  "0"
                ],
                [
                  "test_projection",
                  "0"
                ],
                [
                  "test_rotate",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_angleBetween",
                "false"
              ],
              [
                "test_projection",
                "true"
              ],
              [
                "test_rotate",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_angleBetween",
                "false"
              ],
              [
                "test_projection",
                "false"
              ],
              [
                "test_rotate",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_angleBetween",
                "1"
              ],
              [
                "test_projection",
                "1"
              ],
              [
                "test_rotate",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_angleBetween",
                [
                  "p1",
                  "a",
                  "p2"
                ]
              ],
              [
                "test_projection",
                [
                  "result",
                  "line_start",
                  "line_end",
                  "point"
                ]
              ],
              [
                "test_rotate",
                [
                  "p",
                  "tests",
                  "radius"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_angleBetween",
                []
              ],
              [
                "test_projection",
                []
              ],
              [
                "test_rotate",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.65386239697215,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_angleBetween",
                  "test_projection",
                  0.6340426249482414
                ],
                [
                  "test_rotate",
                  "test_projection",
                  0.5181505587082262
                ],
                [
                  "test_angleBetween",
                  "test_rotate",
                  0.8093940072599823
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_angleBetween",
                "false"
              ],
              [
                "test_projection",
                "false"
              ],
              [
                "test_rotate",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "measurement_stats_\u0026_test_\u0026_test_normality.py",
    "testCases": [
      {
        "name": "TestDensity",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_low_overlap",
                  "[PyCallExpression: self.assertGreater]"
                ],
                [
                  "test_perfect_overlap",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_no_overlap",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_low_overlap",
                  "[]"
                ],
                [
                  "test_perfect_overlap",
                  "[]"
                ],
                [
                  "test_no_overlap",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_low_overlap",
                  "false"
                ],
                [
                  "test_perfect_overlap",
                  "false"
                ],
                [
                  "test_no_overlap",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_low_overlap",
                  "false"
                ],
                [
                  "test_perfect_overlap",
                  "false"
                ],
                [
                  "test_no_overlap",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_low_overlap",
                  "false"
                ],
                [
                  "test_perfect_overlap",
                  "false"
                ],
                [
                  "test_no_overlap",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_low_overlap",
                  "false"
                ],
                [
                  "test_perfect_overlap",
                  "false"
                ],
                [
                  "test_no_overlap",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_low_overlap",
                "false"
              ],
              [
                "test_perfect_overlap",
                "false"
              ],
              [
                "test_no_overlap",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_low_overlap",
                "false"
              ],
              [
                "test_perfect_overlap",
                "false"
              ],
              [
                "test_no_overlap",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_low_overlap",
                []
              ],
              [
                "test_perfect_overlap",
                []
              ],
              [
                "test_no_overlap",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_low_overlap",
                "false"
              ],
              [
                "test_perfect_overlap",
                "false"
              ],
              [
                "test_no_overlap",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_low_overlap",
                "true"
              ],
              [
                "test_perfect_overlap",
                "true"
              ],
              [
                "test_no_overlap",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_low_overlap",
                  "0"
                ],
                [
                  "test_perfect_overlap",
                  "0"
                ],
                [
                  "test_no_overlap",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_low_overlap",
                  "0"
                ],
                [
                  "test_perfect_overlap",
                  "0"
                ],
                [
                  "test_no_overlap",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_low_overlap",
                "false"
              ],
              [
                "test_perfect_overlap",
                "false"
              ],
              [
                "test_no_overlap",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_low_overlap",
                "false"
              ],
              [
                "test_perfect_overlap",
                "false"
              ],
              [
                "test_no_overlap",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_low_overlap",
                "1"
              ],
              [
                "test_perfect_overlap",
                "1"
              ],
              [
                "test_no_overlap",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_low_overlap",
                [
                  "result",
                  "comp",
                  "values",
                  "dist",
                  "uncertainties",
                  "measurements"
                ]
              ],
              [
                "test_perfect_overlap",
                [
                  "result",
                  "comp",
                  "values",
                  "dist",
                  "uncertainties",
                  "measurements"
                ]
              ],
              [
                "test_no_overlap",
                [
                  "result",
                  "comp",
                  "dist"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_low_overlap",
                []
              ],
              [
                "test_perfect_overlap",
                []
              ],
              [
                "test_no_overlap",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7649438556296463,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_low_overlap",
                  "test_perfect_overlap",
                  0.9020627077107787
                ],
                [
                  "test_no_overlap",
                  "test_low_overlap",
                  0.6474980550884176
                ],
                [
                  "test_no_overlap",
                  "test_perfect_overlap",
                  0.7452708040897426
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_low_overlap",
                "false"
              ],
              [
                "test_perfect_overlap",
                "false"
              ],
              [
                "test_no_overlap",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "measurement_stats_\u0026_test_\u0026_test_density_ops.py",
    "testCases": [
      {
        "name": "TestDensityOps",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_weighted_mad",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_percentiles",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_weighted_mad",
                  "[]"
                ],
                [
                  "test_percentiles",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_weighted_mad",
                  "true"
                ],
                [
                  "test_percentiles",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_weighted_mad",
                  "false"
                ],
                [
                  "test_percentiles",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_weighted_mad",
                  "false"
                ],
                [
                  "test_percentiles",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_weighted_mad",
                  "false"
                ],
                [
                  "test_percentiles",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_weighted_mad",
                "false"
              ],
              [
                "test_percentiles",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_weighted_mad",
                "false"
              ],
              [
                "test_percentiles",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_weighted_mad",
                []
              ],
              [
                "test_percentiles",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_weighted_mad",
                "false"
              ],
              [
                "test_percentiles",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_weighted_mad",
                "true"
              ],
              [
                "test_percentiles",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_weighted_mad",
                  "0"
                ],
                [
                  "test_percentiles",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_weighted_mad",
                  "0"
                ],
                [
                  "test_percentiles",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_weighted_mad",
                "false"
              ],
              [
                "test_percentiles",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_weighted_mad",
                "false"
              ],
              [
                "test_percentiles",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_weighted_mad",
                "2"
              ],
              [
                "test_percentiles",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_weighted_mad",
                [
                  "mad",
                  "median",
                  "delta",
                  "dist",
                  "measurements"
                ]
              ],
              [
                "test_percentiles",
                [
                  "dist",
                  "measurements"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_weighted_mad",
                []
              ],
              [
                "test_percentiles",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7332959212304938,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_weighted_mad",
                  "test_percentiles",
                  0.7332959212304938
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_weighted_mad",
                "false"
              ],
              [
                "test_percentiles",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  }
]