[
  {
    "name": "OpenKVK_\u0026_test_\u0026_test_openkvk.py",
    "testCases": [
      {
        "name": "TestBaseClient",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_client_urlencode_query",
                  "[]"
                ],
                [
                  "test_response_format",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_client_urlencode_query",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_response_format",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_client_urlencode_query",
                  "false"
                ],
                [
                  "test_response_format",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_client_urlencode_query",
                  "false"
                ],
                [
                  "test_response_format",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_client_urlencode_query",
                  "false"
                ],
                [
                  "test_response_format",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_client_urlencode_query",
                  "false"
                ],
                [
                  "test_response_format",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_client_urlencode_query",
                "false"
              ],
              [
                "test_response_format",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_client_urlencode_query",
                "false"
              ],
              [
                "test_response_format",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_client_urlencode_query",
                []
              ],
              [
                "test_response_format",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_client_urlencode_query",
                "false"
              ],
              [
                "test_response_format",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_client_urlencode_query",
                "false"
              ],
              [
                "test_response_format",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_client_urlencode_query",
                  "0"
                ],
                [
                  "test_response_format",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_client_urlencode_query",
                  "0"
                ],
                [
                  "test_response_format",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_client_urlencode_query",
                "false"
              ],
              [
                "test_response_format",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_client_urlencode_query",
                "false"
              ],
              [
                "test_response_format",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_client_urlencode_query",
                "3"
              ],
              [
                "test_response_format",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_client_urlencode_query",
                [
                  "query1",
                  "query2",
                  "query3"
                ]
              ],
              [
                "test_response_format",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_client_urlencode_query",
                [
                  "self.client"
                ]
              ],
              [
                "test_response_format",
                [
                  "self.client"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.02329521859382041,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_client_urlencode_query",
                  "test_response_format",
                  0.02329521859382041
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_client_urlencode_query",
                "false"
              ],
              [
                "test_response_format",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "TestQueryBuilder",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_query",
                  "[]"
                ],
                [
                  "test__do_query",
                  "[]"
                ],
                [
                  "test_parse_query_results_py",
                  "[]"
                ],
                [
                  "test_parse_query_results_csv",
                  "[]"
                ],
                [
                  "test__parse_query_results_json",
                  "[]"
                ],
                [
                  "test__query_divider",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_query",
                  "[]"
                ],
                [
                  "test__do_query",
                  "[]"
                ],
                [
                  "test_parse_query_results_py",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_parse_query_results_csv",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test__parse_query_results_json",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test__query_divider",
                  "[PyAssertStatement, PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_query",
                  "false"
                ],
                [
                  "test__do_query",
                  "false"
                ],
                [
                  "test_parse_query_results_py",
                  "false"
                ],
                [
                  "test_parse_query_results_csv",
                  "false"
                ],
                [
                  "test__parse_query_results_json",
                  "false"
                ],
                [
                  "test__query_divider",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_query",
                  "false"
                ],
                [
                  "test__do_query",
                  "false"
                ],
                [
                  "test_parse_query_results_py",
                  "false"
                ],
                [
                  "test_parse_query_results_csv",
                  "false"
                ],
                [
                  "test__parse_query_results_json",
                  "false"
                ],
                [
                  "test__query_divider",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_query",
                  "false"
                ],
                [
                  "test__do_query",
                  "false"
                ],
                [
                  "test_parse_query_results_py",
                  "false"
                ],
                [
                  "test_parse_query_results_csv",
                  "false"
                ],
                [
                  "test__parse_query_results_json",
                  "false"
                ],
                [
                  "test__query_divider",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_query",
                  "false"
                ],
                [
                  "test__do_query",
                  "false"
                ],
                [
                  "test_parse_query_results_py",
                  "false"
                ],
                [
                  "test_parse_query_results_csv",
                  "false"
                ],
                [
                  "test__parse_query_results_json",
                  "false"
                ],
                [
                  "test__query_divider",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": true,
            "detail": [
              [
                "test_query",
                "false"
              ],
              [
                "test__do_query",
                "true"
              ],
              [
                "test_parse_query_results_py",
                "false"
              ],
              [
                "test_parse_query_results_csv",
                "false"
              ],
              [
                "test__parse_query_results_json",
                "false"
              ],
              [
                "test__query_divider",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_query",
                "false"
              ],
              [
                "test__do_query",
                "false"
              ],
              [
                "test_parse_query_results_py",
                "false"
              ],
              [
                "test_parse_query_results_csv",
                "false"
              ],
              [
                "test__parse_query_results_json",
                "false"
              ],
              [
                "test__query_divider",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_query",
                [
                  "self.dir"
                ]
              ],
              [
                "test__do_query",
                [
                  "self.dir",
                  "self.client"
                ]
              ],
              [
                "test_parse_query_results_py",
                [
                  "self.dir"
                ]
              ],
              [
                "test_parse_query_results_csv",
                [
                  "self.dir"
                ]
              ],
              [
                "test__parse_query_results_json",
                [
                  "self.dir"
                ]
              ],
              [
                "test__query_divider",
                [
                  "self.dir"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_query",
                "false"
              ],
              [
                "test__do_query",
                "false"
              ],
              [
                "test_parse_query_results_py",
                "false"
              ],
              [
                "test_parse_query_results_csv",
                "false"
              ],
              [
                "test__parse_query_results_json",
                "false"
              ],
              [
                "test__query_divider",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_query",
                "false"
              ],
              [
                "test__do_query",
                "false"
              ],
              [
                "test_parse_query_results_py",
                "false"
              ],
              [
                "test_parse_query_results_csv",
                "false"
              ],
              [
                "test__parse_query_results_json",
                "false"
              ],
              [
                "test__query_divider",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_query",
                  "0"
                ],
                [
                  "test__do_query",
                  "0"
                ],
                [
                  "test_parse_query_results_py",
                  "0"
                ],
                [
                  "test_parse_query_results_csv",
                  "0"
                ],
                [
                  "test__parse_query_results_json",
                  "0"
                ],
                [
                  "test__query_divider",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_query",
                  "0"
                ],
                [
                  "test__do_query",
                  "0"
                ],
                [
                  "test_parse_query_results_py",
                  "0"
                ],
                [
                  "test_parse_query_results_csv",
                  "0"
                ],
                [
                  "test__parse_query_results_json",
                  "0"
                ],
                [
                  "test__query_divider",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_query",
                "false"
              ],
              [
                "test__do_query",
                "false"
              ],
              [
                "test_parse_query_results_py",
                "false"
              ],
              [
                "test_parse_query_results_csv",
                "false"
              ],
              [
                "test__parse_query_results_json",
                "false"
              ],
              [
                "test__query_divider",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_query",
                "false"
              ],
              [
                "test__do_query",
                "false"
              ],
              [
                "test_parse_query_results_py",
                "false"
              ],
              [
                "test_parse_query_results_csv",
                "false"
              ],
              [
                "test__parse_query_results_json",
                "false"
              ],
              [
                "test__query_divider",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_query",
                "0"
              ],
              [
                "test__do_query",
                "0"
              ],
              [
                "test_parse_query_results_py",
                "2"
              ],
              [
                "test_parse_query_results_csv",
                "2"
              ],
              [
                "test__parse_query_results_json",
                "2"
              ],
              [
                "test__query_divider",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_query",
                []
              ],
              [
                "test__do_query",
                []
              ],
              [
                "test_parse_query_results_py",
                [
                  "py_multiple_query_result",
                  "py_result"
                ]
              ],
              [
                "test_parse_query_results_csv",
                [
                  "csv_multiple_query_result",
                  "csv_result"
                ]
              ],
              [
                "test__parse_query_results_json",
                [
                  "json_multiple_query_result",
                  "json_result"
                ]
              ],
              [
                "test__query_divider",
                [
                  "query"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_query",
                [
                  "self.client"
                ]
              ],
              [
                "test__do_query",
                []
              ],
              [
                "test_parse_query_results_py",
                [
                  "self.client"
                ]
              ],
              [
                "test_parse_query_results_csv",
                [
                  "self.client"
                ]
              ],
              [
                "test__parse_query_results_json",
                [
                  "self.client"
                ]
              ],
              [
                "test__query_divider",
                [
                  "self.client"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.43976937840100455,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test__query_divider",
                  "test_query",
                  0.03274511149417343
                ],
                [
                  "test__query_divider",
                  "test__do_query",
                  0.40104407365634687
                ],
                [
                  "test_parse_query_results_py",
                  "test_parse_query_results_csv",
                  0.7997229442451119
                ],
                [
                  "test__query_divider",
                  "test_parse_query_results_py",
                  0.6630161782065148
                ],
                [
                  "test__query_divider",
                  "test_parse_query_results_csv",
                  0.7304165484483331
                ],
                [
                  "test__query_divider",
                  "test__parse_query_results_json",
                  0.7034124461813694
                ],
                [
                  "test_parse_query_results_csv",
                  "test_query",
                  0.05330017908890261
                ],
                [
                  "test__parse_query_results_json",
                  "test_parse_query_results_py",
                  0.8981969950532971
                ],
                [
                  "test__parse_query_results_json",
                  "test_query",
                  0.04805693313322127
                ],
                [
                  "test_parse_query_results_csv",
                  "test__do_query",
                  0.3481553119113957
                ],
                [
                  "test__do_query",
                  "test_query",
                  0.4082482904638631
                ],
                [
                  "test__parse_query_results_json",
                  "test_parse_query_results_csv",
                  0.806854589876195
                ],
                [
                  "test__parse_query_results_json",
                  "test__do_query",
                  0.3335257335417539
                ],
                [
                  "test_parse_query_results_py",
                  "test__do_query",
                  0.317927927549473
                ],
                [
                  "test_parse_query_results_py",
                  "test_query",
                  0.0519174131651165
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_query",
                "false"
              ],
              [
                "test__do_query",
                "false"
              ],
              [
                "test_parse_query_results_py",
                "false"
              ],
              [
                "test_parse_query_results_csv",
                "false"
              ],
              [
                "test__parse_query_results_json",
                "false"
              ],
              [
                "test__query_divider",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      },
      {
        "name": "TestApiClient",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_get_by_kvk",
                  "[]"
                ],
                [
                  "test_get_banktruptcies",
                  "[]"
                ],
                [
                  "test_get_by_name",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_get_by_kvk",
                  "[PyAssertStatement]"
                ],
                [
                  "test_get_banktruptcies",
                  "[]"
                ],
                [
                  "test_get_by_name",
                  "[PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_get_by_kvk",
                  "false"
                ],
                [
                  "test_get_banktruptcies",
                  "false"
                ],
                [
                  "test_get_by_name",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_get_by_kvk",
                  "false"
                ],
                [
                  "test_get_banktruptcies",
                  "false"
                ],
                [
                  "test_get_by_name",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_get_by_kvk",
                  "false"
                ],
                [
                  "test_get_banktruptcies",
                  "false"
                ],
                [
                  "test_get_by_name",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_get_by_kvk",
                  "false"
                ],
                [
                  "test_get_banktruptcies",
                  "false"
                ],
                [
                  "test_get_by_name",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_by_kvk",
                "false"
              ],
              [
                "test_get_banktruptcies",
                "false"
              ],
              [
                "test_get_by_name",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_get_by_kvk",
                "false"
              ],
              [
                "test_get_banktruptcies",
                "false"
              ],
              [
                "test_get_by_name",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_get_by_kvk",
                []
              ],
              [
                "test_get_banktruptcies",
                []
              ],
              [
                "test_get_by_name",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_by_kvk",
                "false"
              ],
              [
                "test_get_banktruptcies",
                "false"
              ],
              [
                "test_get_by_name",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_by_kvk",
                "false"
              ],
              [
                "test_get_banktruptcies",
                "false"
              ],
              [
                "test_get_by_name",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_get_by_kvk",
                  "0"
                ],
                [
                  "test_get_banktruptcies",
                  "0"
                ],
                [
                  "test_get_by_name",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_get_by_kvk",
                  "0"
                ],
                [
                  "test_get_banktruptcies",
                  "0"
                ],
                [
                  "test_get_by_name",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_get_by_kvk",
                "false"
              ],
              [
                "test_get_banktruptcies",
                "false"
              ],
              [
                "test_get_by_name",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_by_kvk",
                "false"
              ],
              [
                "test_get_banktruptcies",
                "false"
              ],
              [
                "test_get_by_name",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_get_by_kvk",
                "1"
              ],
              [
                "test_get_banktruptcies",
                "0"
              ],
              [
                "test_get_by_name",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_get_by_kvk",
                []
              ],
              [
                "test_get_banktruptcies",
                []
              ],
              [
                "test_get_by_name",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_get_by_kvk",
                [
                  "self.client"
                ]
              ],
              [
                "test_get_banktruptcies",
                [
                  "self.client"
                ]
              ],
              [
                "test_get_by_name",
                [
                  "self.client"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.44401264351262504,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_get_by_kvk",
                  "test_get_by_name",
                  0.8153742483272114
                ],
                [
                  "test_get_by_name",
                  "test_get_banktruptcies",
                  0.253546276418555
                ],
                [
                  "test_get_by_kvk",
                  "test_get_banktruptcies",
                  0.2631174057921088
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_get_by_kvk",
                "false"
              ],
              [
                "test_get_banktruptcies",
                "false"
              ],
              [
                "test_get_by_name",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  }
]