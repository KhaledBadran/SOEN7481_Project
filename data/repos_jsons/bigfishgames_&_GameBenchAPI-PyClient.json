[
  {
    "name": "tests_\u0026_test_unit_\u0026_test_singleton.py",
    "testCases": [
      {
        "name": "TestSingleton",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_singleton_pattern",
                  "[PyCallExpression: self.assertIs]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_singleton_pattern",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_singleton_pattern",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_singleton_pattern",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_singleton_pattern",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_singleton_pattern",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_singleton_pattern",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_singleton_pattern",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_singleton_pattern",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_singleton_pattern",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_singleton_pattern",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_singleton_pattern",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_singleton_pattern",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_singleton_pattern",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_singleton_pattern",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_singleton_pattern",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_singleton_pattern",
                [
                  "singleton_1",
                  "singleton_2"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_singleton_pattern",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_singleton_pattern",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_unit_\u0026_test_global_settings.py",
    "testCases": [
      {
        "name": "TestSetAPIEndpoint",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_endpoint_returned",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_get_username_and_password",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_endpoint_returned",
                  "[]"
                ],
                [
                  "test_get_username_and_password",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_endpoint_returned",
                  "false"
                ],
                [
                  "test_get_username_and_password",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_endpoint_returned",
                  "false"
                ],
                [
                  "test_get_username_and_password",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_endpoint_returned",
                  "false"
                ],
                [
                  "test_get_username_and_password",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_endpoint_returned",
                  "false"
                ],
                [
                  "test_get_username_and_password",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_endpoint_returned",
                "false"
              ],
              [
                "test_get_username_and_password",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_endpoint_returned",
                "false"
              ],
              [
                "test_get_username_and_password",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_endpoint_returned",
                []
              ],
              [
                "test_get_username_and_password",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_endpoint_returned",
                "false"
              ],
              [
                "test_get_username_and_password",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_endpoint_returned",
                "false"
              ],
              [
                "test_get_username_and_password",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_endpoint_returned",
                  "0"
                ],
                [
                  "test_get_username_and_password",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_endpoint_returned",
                  "0"
                ],
                [
                  "test_get_username_and_password",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_endpoint_returned",
                "false"
              ],
              [
                "test_get_username_and_password",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_endpoint_returned",
                "false"
              ],
              [
                "test_get_username_and_password",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_endpoint_returned",
                "1"
              ],
              [
                "test_get_username_and_password",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_endpoint_returned",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_get_username_and_password",
                [
                  "actual",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_endpoint_returned",
                []
              ],
              [
                "test_get_username_and_password",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4713392712648793,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_endpoint_returned",
                  "test_get_username_and_password",
                  0.4713392712648793
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_endpoint_returned",
                "false"
              ],
              [
                "test_get_username_and_password",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_unit_\u0026_test_models_\u0026_test_creator_\u0026_test_model_creator.py",
    "testCases": [
      {
        "name": "TestModelCreator",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_init_creates_imported_module",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_init_creates_model_class",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_init_creates_module_path",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_init_creates_instance",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_init_creates_imported_module",
                  "[]"
                ],
                [
                  "test_init_creates_model_class",
                  "[]"
                ],
                [
                  "test_init_creates_module_path",
                  "[]"
                ],
                [
                  "test_init_creates_instance",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_init_creates_imported_module",
                  "false"
                ],
                [
                  "test_init_creates_model_class",
                  "false"
                ],
                [
                  "test_init_creates_module_path",
                  "false"
                ],
                [
                  "test_init_creates_instance",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_init_creates_imported_module",
                  "false"
                ],
                [
                  "test_init_creates_model_class",
                  "false"
                ],
                [
                  "test_init_creates_module_path",
                  "false"
                ],
                [
                  "test_init_creates_instance",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_init_creates_imported_module",
                  "false"
                ],
                [
                  "test_init_creates_model_class",
                  "false"
                ],
                [
                  "test_init_creates_module_path",
                  "false"
                ],
                [
                  "test_init_creates_instance",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_init_creates_imported_module",
                  "false"
                ],
                [
                  "test_init_creates_model_class",
                  "false"
                ],
                [
                  "test_init_creates_module_path",
                  "false"
                ],
                [
                  "test_init_creates_instance",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_imported_module",
                "false"
              ],
              [
                "test_init_creates_model_class",
                "false"
              ],
              [
                "test_init_creates_module_path",
                "false"
              ],
              [
                "test_init_creates_instance",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_imported_module",
                "false"
              ],
              [
                "test_init_creates_model_class",
                "false"
              ],
              [
                "test_init_creates_module_path",
                "false"
              ],
              [
                "test_init_creates_instance",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_imported_module",
                []
              ],
              [
                "test_init_creates_model_class",
                []
              ],
              [
                "test_init_creates_module_path",
                []
              ],
              [
                "test_init_creates_instance",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_imported_module",
                "false"
              ],
              [
                "test_init_creates_model_class",
                "false"
              ],
              [
                "test_init_creates_module_path",
                "false"
              ],
              [
                "test_init_creates_instance",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_imported_module",
                "false"
              ],
              [
                "test_init_creates_model_class",
                "false"
              ],
              [
                "test_init_creates_module_path",
                "false"
              ],
              [
                "test_init_creates_instance",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_init_creates_imported_module",
                  "0"
                ],
                [
                  "test_init_creates_model_class",
                  "0"
                ],
                [
                  "test_init_creates_module_path",
                  "0"
                ],
                [
                  "test_init_creates_instance",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_init_creates_imported_module",
                  "0"
                ],
                [
                  "test_init_creates_model_class",
                  "0"
                ],
                [
                  "test_init_creates_module_path",
                  "0"
                ],
                [
                  "test_init_creates_instance",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_imported_module",
                "false"
              ],
              [
                "test_init_creates_model_class",
                "false"
              ],
              [
                "test_init_creates_module_path",
                "false"
              ],
              [
                "test_init_creates_instance",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_imported_module",
                "false"
              ],
              [
                "test_init_creates_model_class",
                "false"
              ],
              [
                "test_init_creates_module_path",
                "false"
              ],
              [
                "test_init_creates_instance",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_imported_module",
                "1"
              ],
              [
                "test_init_creates_model_class",
                "1"
              ],
              [
                "test_init_creates_module_path",
                "1"
              ],
              [
                "test_init_creates_instance",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_imported_module",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_init_creates_model_class",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_init_creates_module_path",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_init_creates_instance",
                [
                  "actual",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_imported_module",
                [
                  "self.creator"
                ]
              ],
              [
                "test_init_creates_model_class",
                [
                  "self.creator"
                ]
              ],
              [
                "test_init_creates_module_path",
                [
                  "self.creator"
                ]
              ],
              [
                "test_init_creates_instance",
                [
                  "self.creator"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6276220908428506,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init_creates_module_path",
                  "test_init_creates_model_class",
                  0.5276448530110863
                ],
                [
                  "test_init_creates_model_class",
                  "test_init_creates_instance",
                  0.6499336836196816
                ],
                [
                  "test_init_creates_imported_module",
                  "test_init_creates_instance",
                  0.6571028138320723
                ],
                [
                  "test_init_creates_module_path",
                  "test_init_creates_instance",
                  0.5878871365036471
                ],
                [
                  "test_init_creates_module_path",
                  "test_init_creates_imported_module",
                  0.7779698928301774
                ],
                [
                  "test_init_creates_imported_module",
                  "test_init_creates_model_class",
                  0.5651941652604391
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_imported_module",
                "false"
              ],
              [
                "test_init_creates_model_class",
                "false"
              ],
              [
                "test_init_creates_module_path",
                "false"
              ],
              [
                "test_init_creates_instance",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      },
      {
        "name": "TestFindGeneric",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_find_generic_frame_model",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_find_generic_frame_model",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_find_generic_frame_model",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_find_generic_frame_model",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_find_generic_frame_model",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_find_generic_frame_model",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_generic_frame_model",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_find_generic_frame_model",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_find_generic_frame_model",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_generic_frame_model",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_generic_frame_model",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_find_generic_frame_model",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_find_generic_frame_model",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_find_generic_frame_model",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_generic_frame_model",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_generic_frame_model",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_find_generic_frame_model",
                [
                  "actual",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_find_generic_frame_model",
                [
                  "self.creator"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_find_generic_frame_model",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      },
      {
        "name": "TestFindSessionDetail",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_find_session_detail_model",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_find_session_detail_model",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_find_session_detail_model",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_find_session_detail_model",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_find_session_detail_model",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_find_session_detail_model",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_session_detail_model",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_find_session_detail_model",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_find_session_detail_model",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_session_detail_model",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_session_detail_model",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_find_session_detail_model",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_find_session_detail_model",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_find_session_detail_model",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_session_detail_model",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_session_detail_model",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_find_session_detail_model",
                [
                  "actual",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_find_session_detail_model",
                [
                  "self.creator"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_find_session_detail_model",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      },
      {
        "name": "TestFindTimeSeries",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_find_time_series_model",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_find_time_series_model",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_find_time_series_model",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_find_time_series_model",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_find_time_series_model",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_find_time_series_model",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_time_series_model",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_find_time_series_model",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_find_time_series_model",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_time_series_model",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_time_series_model",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_find_time_series_model",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_find_time_series_model",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_find_time_series_model",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_time_series_model",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_time_series_model",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_find_time_series_model",
                [
                  "actual",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_find_time_series_model",
                [
                  "self.creator"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_find_time_series_model",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      },
      {
        "name": "TestModelNotFound",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_error_raise_when_module_not_found",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_error_raise_when_module_not_found",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_error_raise_when_module_not_found",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_error_raise_when_module_not_found",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_error_raise_when_module_not_found",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_error_raise_when_module_not_found",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_error_raise_when_module_not_found",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_error_raise_when_module_not_found",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_error_raise_when_module_not_found",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_error_raise_when_module_not_found",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_error_raise_when_module_not_found",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_error_raise_when_module_not_found",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_error_raise_when_module_not_found",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_error_raise_when_module_not_found",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_error_raise_when_module_not_found",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_error_raise_when_module_not_found",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_error_raise_when_module_not_found",
                [
                  "actual",
                  "expected",
                  "mock_class_object"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_error_raise_when_module_not_found",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_error_raise_when_module_not_found",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_unit_\u0026_test_api_\u0026_test_response_\u0026_test_response_mediator.py",
    "testCases": [
      {
        "name": "TestResponseMediator",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_set_data_attributes",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_set_data_attributes",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_set_data_attributes",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_set_data_attributes",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_set_data_attributes",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_set_data_attributes",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_attributes",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_attributes",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_attributes",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_attributes",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_attributes",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_set_data_attributes",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_set_data_attributes",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_attributes",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_attributes",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_set_data_attributes",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_attributes",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_attributes",
                [
                  "self.mediator"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_attributes",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      },
      {
        "name": "TestSessionDetailMediator",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_init_creates_retriever",
                  "[PyCallExpression: self.assertIsNotNone]"
                ],
                [
                  "test_set_data",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_init_creates_retriever",
                  "[]"
                ],
                [
                  "test_set_data",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_init_creates_retriever",
                  "false"
                ],
                [
                  "test_set_data",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_init_creates_retriever",
                  "false"
                ],
                [
                  "test_set_data",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_init_creates_retriever",
                  "false"
                ],
                [
                  "test_set_data",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_init_creates_retriever",
                  "false"
                ],
                [
                  "test_set_data",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                []
              ],
              [
                "test_set_data",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_init_creates_retriever",
                  "0"
                ],
                [
                  "test_set_data",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_init_creates_retriever",
                  "0"
                ],
                [
                  "test_set_data",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "2"
              ],
              [
                "test_set_data",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                [
                  "mediator"
                ]
              ],
              [
                "test_set_data",
                [
                  "mediator"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                []
              ],
              [
                "test_set_data",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8990303817962627,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init_creates_retriever",
                  "test_set_data",
                  0.8990303817962627
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "TestGenericFrameMediator",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_init_creates_retriever",
                  "[PyCallExpression: self.assertIsNotNone]"
                ],
                [
                  "test_set_data",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_init_creates_retriever",
                  "[]"
                ],
                [
                  "test_set_data",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_init_creates_retriever",
                  "false"
                ],
                [
                  "test_set_data",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_init_creates_retriever",
                  "false"
                ],
                [
                  "test_set_data",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_init_creates_retriever",
                  "false"
                ],
                [
                  "test_set_data",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_init_creates_retriever",
                  "false"
                ],
                [
                  "test_set_data",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                []
              ],
              [
                "test_set_data",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_init_creates_retriever",
                  "0"
                ],
                [
                  "test_set_data",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_init_creates_retriever",
                  "0"
                ],
                [
                  "test_set_data",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "2"
              ],
              [
                "test_set_data",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                [
                  "mediator"
                ]
              ],
              [
                "test_set_data",
                [
                  "mediator"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                []
              ],
              [
                "test_set_data",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7651691780042778,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init_creates_retriever",
                  "test_set_data",
                  0.7651691780042778
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "TestTimeSeriesMediator",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_init_creates_retriever",
                  "[PyCallExpression: self.assertIsNotNone]"
                ],
                [
                  "test_set_data",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_init_creates_retriever",
                  "[]"
                ],
                [
                  "test_set_data",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_init_creates_retriever",
                  "false"
                ],
                [
                  "test_set_data",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_init_creates_retriever",
                  "false"
                ],
                [
                  "test_set_data",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_init_creates_retriever",
                  "false"
                ],
                [
                  "test_set_data",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_init_creates_retriever",
                  "false"
                ],
                [
                  "test_set_data",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                []
              ],
              [
                "test_set_data",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_init_creates_retriever",
                  "0"
                ],
                [
                  "test_set_data",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_init_creates_retriever",
                  "0"
                ],
                [
                  "test_set_data",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "2"
              ],
              [
                "test_set_data",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                [
                  "mediator"
                ]
              ],
              [
                "test_set_data",
                [
                  "mediator"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                []
              ],
              [
                "test_set_data",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7701401683006572,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init_creates_retriever",
                  "test_set_data",
                  0.7701401683006572
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "TestAuthenticationMediator",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_init_creates_retriever",
                  "[PyCallExpression: self.assertIsNotNone]"
                ],
                [
                  "test_set_data",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_init_creates_retriever",
                  "[]"
                ],
                [
                  "test_set_data",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_init_creates_retriever",
                  "false"
                ],
                [
                  "test_set_data",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_init_creates_retriever",
                  "false"
                ],
                [
                  "test_set_data",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_init_creates_retriever",
                  "false"
                ],
                [
                  "test_set_data",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_init_creates_retriever",
                  "false"
                ],
                [
                  "test_set_data",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                []
              ],
              [
                "test_set_data",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_init_creates_retriever",
                  "0"
                ],
                [
                  "test_set_data",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_init_creates_retriever",
                  "0"
                ],
                [
                  "test_set_data",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "2"
              ],
              [
                "test_set_data",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                [
                  "mediator"
                ]
              ],
              [
                "test_set_data",
                [
                  "mediator"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                []
              ],
              [
                "test_set_data",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6667768868321989,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init_creates_retriever",
                  "test_set_data",
                  0.6667768868321989
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_retriever",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_unit_\u0026_test_api_\u0026_test_response_\u0026_test_response_retriever.py",
    "testCases": [
      {
        "name": "TestAbstractRetriever",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_init",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertIsNone, PyCallExpression: self.assertIsNone, PyCallExpression: self.assertIsNone]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_init",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_init",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_init",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_init",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_init",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_init",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_init",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "5"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                [
                  "retriever",
                  "test_data"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_unit_\u0026_test_api_\u0026_test_utilities_\u0026_test_dataframe_utilities.py",
    "testCases": [
      {
        "name": "TestDataFrameUtilities",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_json_to_normalized_dataframe",
                  "[]"
                ],
                [
                  "test_to_dataframe",
                  "[]"
                ],
                [
                  "test_session_metric_to_dataframe",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_json_to_normalized_dataframe",
                  "[]"
                ],
                [
                  "test_to_dataframe",
                  "[]"
                ],
                [
                  "test_session_metric_to_dataframe",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_json_to_normalized_dataframe",
                  "false"
                ],
                [
                  "test_to_dataframe",
                  "false"
                ],
                [
                  "test_session_metric_to_dataframe",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_json_to_normalized_dataframe",
                  "false"
                ],
                [
                  "test_to_dataframe",
                  "false"
                ],
                [
                  "test_session_metric_to_dataframe",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_json_to_normalized_dataframe",
                  "false"
                ],
                [
                  "test_to_dataframe",
                  "false"
                ],
                [
                  "test_session_metric_to_dataframe",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_json_to_normalized_dataframe",
                  "false"
                ],
                [
                  "test_to_dataframe",
                  "false"
                ],
                [
                  "test_session_metric_to_dataframe",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_json_to_normalized_dataframe",
                "false"
              ],
              [
                "test_to_dataframe",
                "false"
              ],
              [
                "test_session_metric_to_dataframe",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_json_to_normalized_dataframe",
                "false"
              ],
              [
                "test_to_dataframe",
                "false"
              ],
              [
                "test_session_metric_to_dataframe",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_json_to_normalized_dataframe",
                [
                  "self.data_frame",
                  "self.session_json"
                ]
              ],
              [
                "test_to_dataframe",
                [
                  "self.data_frame",
                  "self.session_json"
                ]
              ],
              [
                "test_session_metric_to_dataframe",
                [
                  "self.data_frame",
                  "self.test_json"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_json_to_normalized_dataframe",
                "false"
              ],
              [
                "test_to_dataframe",
                "false"
              ],
              [
                "test_session_metric_to_dataframe",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_json_to_normalized_dataframe",
                "false"
              ],
              [
                "test_to_dataframe",
                "false"
              ],
              [
                "test_session_metric_to_dataframe",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_json_to_normalized_dataframe",
                  "0"
                ],
                [
                  "test_to_dataframe",
                  "0"
                ],
                [
                  "test_session_metric_to_dataframe",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_json_to_normalized_dataframe",
                  "0"
                ],
                [
                  "test_to_dataframe",
                  "0"
                ],
                [
                  "test_session_metric_to_dataframe",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_json_to_normalized_dataframe",
                "false"
              ],
              [
                "test_to_dataframe",
                "false"
              ],
              [
                "test_session_metric_to_dataframe",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_json_to_normalized_dataframe",
                "false"
              ],
              [
                "test_to_dataframe",
                "false"
              ],
              [
                "test_session_metric_to_dataframe",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_json_to_normalized_dataframe",
                "1"
              ],
              [
                "test_to_dataframe",
                "1"
              ],
              [
                "test_session_metric_to_dataframe",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_json_to_normalized_dataframe",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_to_dataframe",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_session_metric_to_dataframe",
                [
                  "actual",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_json_to_normalized_dataframe",
                [
                  "self.test_json"
                ]
              ],
              [
                "test_to_dataframe",
                [
                  "self.test_json"
                ]
              ],
              [
                "test_session_metric_to_dataframe",
                [
                  "self.session_json"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7047996593570018,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_json_to_normalized_dataframe",
                  "test_session_metric_to_dataframe",
                  0.65243825430126
                ],
                [
                  "test_session_metric_to_dataframe",
                  "test_to_dataframe",
                  0.7908046685557212
                ],
                [
                  "test_json_to_normalized_dataframe",
                  "test_to_dataframe",
                  0.6711560552140243
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_json_to_normalized_dataframe",
                "false"
              ],
              [
                "test_to_dataframe",
                "false"
              ],
              [
                "test_session_metric_to_dataframe",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_integration_\u0026_test_models_\u0026_test_creator_\u0026_test_model_creator.py",
    "testCases": [
      {
        "name": "TestModelCreator",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_keyword_search",
                  "[]"
                ],
                [
                  "test_time_series_model_creation",
                  "[]"
                ],
                [
                  "test_session_summary_details",
                  "[]"
                ],
                [
                  "test_fps_stability",
                  "[]"
                ],
                [
                  "test_generic_model_creation",
                  "[]"
                ],
                [
                  "test_filter_using_apps",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_keyword_search",
                  "[]"
                ],
                [
                  "test_time_series_model_creation",
                  "[]"
                ],
                [
                  "test_session_summary_details",
                  "[]"
                ],
                [
                  "test_fps_stability",
                  "[]"
                ],
                [
                  "test_generic_model_creation",
                  "[]"
                ],
                [
                  "test_filter_using_apps",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_keyword_search",
                  "false"
                ],
                [
                  "test_time_series_model_creation",
                  "false"
                ],
                [
                  "test_session_summary_details",
                  "false"
                ],
                [
                  "test_fps_stability",
                  "false"
                ],
                [
                  "test_generic_model_creation",
                  "false"
                ],
                [
                  "test_filter_using_apps",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_keyword_search",
                  "false"
                ],
                [
                  "test_time_series_model_creation",
                  "false"
                ],
                [
                  "test_session_summary_details",
                  "false"
                ],
                [
                  "test_fps_stability",
                  "false"
                ],
                [
                  "test_generic_model_creation",
                  "false"
                ],
                [
                  "test_filter_using_apps",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_keyword_search",
                  "false"
                ],
                [
                  "test_time_series_model_creation",
                  "false"
                ],
                [
                  "test_session_summary_details",
                  "false"
                ],
                [
                  "test_fps_stability",
                  "false"
                ],
                [
                  "test_generic_model_creation",
                  "false"
                ],
                [
                  "test_filter_using_apps",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_keyword_search",
                  "false"
                ],
                [
                  "test_time_series_model_creation",
                  "false"
                ],
                [
                  "test_session_summary_details",
                  "false"
                ],
                [
                  "test_fps_stability",
                  "false"
                ],
                [
                  "test_generic_model_creation",
                  "false"
                ],
                [
                  "test_filter_using_apps",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_keyword_search",
                "false"
              ],
              [
                "test_time_series_model_creation",
                "false"
              ],
              [
                "test_session_summary_details",
                "false"
              ],
              [
                "test_fps_stability",
                "false"
              ],
              [
                "test_generic_model_creation",
                "false"
              ],
              [
                "test_filter_using_apps",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_keyword_search",
                "false"
              ],
              [
                "test_time_series_model_creation",
                "false"
              ],
              [
                "test_session_summary_details",
                "false"
              ],
              [
                "test_fps_stability",
                "false"
              ],
              [
                "test_generic_model_creation",
                "false"
              ],
              [
                "test_filter_using_apps",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_keyword_search",
                []
              ],
              [
                "test_time_series_model_creation",
                []
              ],
              [
                "test_session_summary_details",
                []
              ],
              [
                "test_fps_stability",
                []
              ],
              [
                "test_generic_model_creation",
                []
              ],
              [
                "test_filter_using_apps",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_keyword_search",
                "false"
              ],
              [
                "test_time_series_model_creation",
                "false"
              ],
              [
                "test_session_summary_details",
                "false"
              ],
              [
                "test_fps_stability",
                "false"
              ],
              [
                "test_generic_model_creation",
                "false"
              ],
              [
                "test_filter_using_apps",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_keyword_search",
                "false"
              ],
              [
                "test_time_series_model_creation",
                "false"
              ],
              [
                "test_session_summary_details",
                "false"
              ],
              [
                "test_fps_stability",
                "false"
              ],
              [
                "test_generic_model_creation",
                "false"
              ],
              [
                "test_filter_using_apps",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_keyword_search",
                  "0"
                ],
                [
                  "test_time_series_model_creation",
                  "0"
                ],
                [
                  "test_session_summary_details",
                  "0"
                ],
                [
                  "test_fps_stability",
                  "0"
                ],
                [
                  "test_generic_model_creation",
                  "0"
                ],
                [
                  "test_filter_using_apps",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_keyword_search",
                  "0"
                ],
                [
                  "test_time_series_model_creation",
                  "0"
                ],
                [
                  "test_session_summary_details",
                  "0"
                ],
                [
                  "test_fps_stability",
                  "0"
                ],
                [
                  "test_generic_model_creation",
                  "0"
                ],
                [
                  "test_filter_using_apps",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_keyword_search",
                "false"
              ],
              [
                "test_time_series_model_creation",
                "false"
              ],
              [
                "test_session_summary_details",
                "false"
              ],
              [
                "test_fps_stability",
                "false"
              ],
              [
                "test_generic_model_creation",
                "false"
              ],
              [
                "test_filter_using_apps",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_keyword_search",
                "false"
              ],
              [
                "test_time_series_model_creation",
                "false"
              ],
              [
                "test_session_summary_details",
                "false"
              ],
              [
                "test_fps_stability",
                "false"
              ],
              [
                "test_generic_model_creation",
                "false"
              ],
              [
                "test_filter_using_apps",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_keyword_search",
                "1"
              ],
              [
                "test_time_series_model_creation",
                "1"
              ],
              [
                "test_session_summary_details",
                "1"
              ],
              [
                "test_fps_stability",
                "1"
              ],
              [
                "test_generic_model_creation",
                "1"
              ],
              [
                "test_filter_using_apps",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_keyword_search",
                [
                  "actual",
                  "creator",
                  "expected",
                  "model"
                ]
              ],
              [
                "test_time_series_model_creation",
                [
                  "actual",
                  "creator",
                  "expected",
                  "model"
                ]
              ],
              [
                "test_session_summary_details",
                [
                  "actual",
                  "creator",
                  "df",
                  "expected",
                  "model"
                ]
              ],
              [
                "test_fps_stability",
                [
                  "actual",
                  "creator",
                  "expected",
                  "model"
                ]
              ],
              [
                "test_generic_model_creation",
                [
                  "actual",
                  "creator",
                  "expected",
                  "model"
                ]
              ],
              [
                "test_filter_using_apps",
                [
                  "actual",
                  "creator",
                  "expected",
                  "model"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_keyword_search",
                []
              ],
              [
                "test_time_series_model_creation",
                []
              ],
              [
                "test_session_summary_details",
                []
              ],
              [
                "test_fps_stability",
                []
              ],
              [
                "test_generic_model_creation",
                []
              ],
              [
                "test_filter_using_apps",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8986670613667324,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_time_series_model_creation",
                  "test_session_summary_details",
                  0.9122137404580153
                ],
                [
                  "test_session_summary_details",
                  "test_filter_using_apps",
                  0.9041594370396481
                ],
                [
                  "test_session_summary_details",
                  "test_fps_stability",
                  0.8620738450546204
                ],
                [
                  "test_filter_using_apps",
                  "test_fps_stability",
                  0.8621002018726515
                ],
                [
                  "test_time_series_model_creation",
                  "test_filter_using_apps",
                  0.8939081962568857
                ],
                [
                  "test_session_summary_details",
                  "test_keyword_search",
                  0.8857072036306757
                ],
                [
                  "test_generic_model_creation",
                  "test_keyword_search",
                  0.9135624537480286
                ],
                [
                  "test_time_series_model_creation",
                  "test_generic_model_creation",
                  0.9476501801446926
                ],
                [
                  "test_generic_model_creation",
                  "test_session_summary_details",
                  0.9379207121760612
                ],
                [
                  "test_time_series_model_creation",
                  "test_fps_stability",
                  0.8717419629430835
                ],
                [
                  "test_generic_model_creation",
                  "test_filter_using_apps",
                  0.9177435176095757
                ],
                [
                  "test_keyword_search",
                  "test_filter_using_apps",
                  0.9251101321585903
                ],
                [
                  "test_generic_model_creation",
                  "test_fps_stability",
                  0.8921561874354722
                ],
                [
                  "test_keyword_search",
                  "test_fps_stability",
                  0.8621002018726515
                ],
                [
                  "test_time_series_model_creation",
                  "test_keyword_search",
                  0.8918579481003331
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_keyword_search",
                "false"
              ],
              [
                "test_time_series_model_creation",
                "false"
              ],
              [
                "test_session_summary_details",
                "false"
              ],
              [
                "test_fps_stability",
                "false"
              ],
              [
                "test_generic_model_creation",
                "false"
              ],
              [
                "test_filter_using_apps",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      }
    ]
  },
  {
    "name": "tests_\u0026_test_unit_\u0026_test_models_\u0026_test_authentication_\u0026_test_authentication.py",
    "testCases": [
      {
        "name": "TestAuthenticator",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_init_sets_attributes",
                  "[]"
                ],
                [
                  "test_get_data",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_init_sets_attributes",
                  "[]"
                ],
                [
                  "test_get_data",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_init_sets_attributes",
                  "false"
                ],
                [
                  "test_get_data",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_init_sets_attributes",
                  "false"
                ],
                [
                  "test_get_data",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_init_sets_attributes",
                  "false"
                ],
                [
                  "test_get_data",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_init_sets_attributes",
                  "false"
                ],
                [
                  "test_get_data",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_sets_attributes",
                "false"
              ],
              [
                "test_get_data",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_init_sets_attributes",
                "false"
              ],
              [
                "test_get_data",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_init_sets_attributes",
                []
              ],
              [
                "test_get_data",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_sets_attributes",
                "false"
              ],
              [
                "test_get_data",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_sets_attributes",
                "false"
              ],
              [
                "test_get_data",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_init_sets_attributes",
                  "0"
                ],
                [
                  "test_get_data",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_init_sets_attributes",
                  "0"
                ],
                [
                  "test_get_data",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_init_sets_attributes",
                "false"
              ],
              [
                "test_get_data",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_sets_attributes",
                "false"
              ],
              [
                "test_get_data",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_sets_attributes",
                "2"
              ],
              [
                "test_get_data",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_init_sets_attributes",
                []
              ],
              [
                "test_get_data",
                [
                  "actual",
                  "mock_instance",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_init_sets_attributes",
                []
              ],
              [
                "test_get_data",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4790505047653036,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init_sets_attributes",
                  "test_get_data",
                  0.4790505047653036
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_init_sets_attributes",
                "false"
              ],
              [
                "test_get_data",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_integration_\u0026_test_api_\u0026_test_response_\u0026_test_response_mediator.py",
    "testCases": [
      {
        "name": "TestTimeSeriesMediator",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_set_data",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_set_data",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_set_data",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_set_data",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_set_data",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_set_data",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_set_data",
                [
                  "self.error_message"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_set_data",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_set_data",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                [
                  "actual",
                  "adapter",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                [
                  "self.time_series_json"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      },
      {
        "name": "TestSessionDetailMediator",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_set_data",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_set_data",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_set_data",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_set_data",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_set_data",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_set_data",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_set_data",
                [
                  "self.error_message"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_set_data",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_set_data",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                [
                  "actual",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                [
                  "self.session_app_json"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      },
      {
        "name": "TestGenericFrameMediator",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_set_data",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_set_data",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_set_data",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_set_data",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_set_data",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_set_data",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_set_data",
                [
                  "self.error_message"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_set_data",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_set_data",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                [
                  "actual",
                  "adapter",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                [
                  "self.generic_frame_json"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      },
      {
        "name": "TestResponseRetriever",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_get_response_json_creates_expected_json_with_time_series_data",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_get_response_json_gets_expected_request_dict",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_get_response_json_creates_expected_json_with_time_series_data",
                  "[]"
                ],
                [
                  "test_get_response_json_gets_expected_request_dict",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_get_response_json_creates_expected_json_with_time_series_data",
                  "true"
                ],
                [
                  "test_get_response_json_gets_expected_request_dict",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_get_response_json_creates_expected_json_with_time_series_data",
                  "false"
                ],
                [
                  "test_get_response_json_gets_expected_request_dict",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_get_response_json_creates_expected_json_with_time_series_data",
                  "false"
                ],
                [
                  "test_get_response_json_gets_expected_request_dict",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_get_response_json_creates_expected_json_with_time_series_data",
                  "false"
                ],
                [
                  "test_get_response_json_gets_expected_request_dict",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_response_json_creates_expected_json_with_time_series_data",
                "false"
              ],
              [
                "test_get_response_json_gets_expected_request_dict",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_get_response_json_creates_expected_json_with_time_series_data",
                "false"
              ],
              [
                "test_get_response_json_gets_expected_request_dict",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_get_response_json_creates_expected_json_with_time_series_data",
                [
                  "self.session_id_json"
                ]
              ],
              [
                "test_get_response_json_gets_expected_request_dict",
                [
                  "self.session_id_json",
                  "self.time_series_json"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_response_json_creates_expected_json_with_time_series_data",
                "false"
              ],
              [
                "test_get_response_json_gets_expected_request_dict",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_response_json_creates_expected_json_with_time_series_data",
                "false"
              ],
              [
                "test_get_response_json_gets_expected_request_dict",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_get_response_json_creates_expected_json_with_time_series_data",
                  "0"
                ],
                [
                  "test_get_response_json_gets_expected_request_dict",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_get_response_json_creates_expected_json_with_time_series_data",
                  "0"
                ],
                [
                  "test_get_response_json_gets_expected_request_dict",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_get_response_json_creates_expected_json_with_time_series_data",
                "false"
              ],
              [
                "test_get_response_json_gets_expected_request_dict",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_response_json_creates_expected_json_with_time_series_data",
                "false"
              ],
              [
                "test_get_response_json_gets_expected_request_dict",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_response_json_creates_expected_json_with_time_series_data",
                "1"
              ],
              [
                "test_get_response_json_gets_expected_request_dict",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_get_response_json_creates_expected_json_with_time_series_data",
                [
                  "actual",
                  "expected_request_parameters",
                  "adapter",
                  "session_parameters",
                  "expected",
                  "actual_json",
                  "expected_json"
                ]
              ],
              [
                "test_get_response_json_gets_expected_request_dict",
                [
                  "actual",
                  "session_parameters",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_get_response_json_creates_expected_json_with_time_series_data",
                [
                  "self.error_message",
                  "self.test_params",
                  "self.time_series_json"
                ]
              ],
              [
                "test_get_response_json_gets_expected_request_dict",
                [
                  "self.error_message",
                  "self.test_params"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7643979562173868,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_get_response_json_gets_expected_request_dict",
                  "test_get_response_json_creates_expected_json_with_time_series_data",
                  0.7643979562173868
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_get_response_json_creates_expected_json_with_time_series_data",
                "false"
              ],
              [
                "test_get_response_json_gets_expected_request_dict",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "TestAuthenticationMediator",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_set_data",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_set_data",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_set_data",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_set_data",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_set_data",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_set_data",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_set_data",
                [
                  "self.error_message"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_set_data",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_set_data",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                [
                  "actual",
                  "adapter",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                [
                  "self.auth_json"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_integration_\u0026_test_models_\u0026_test_authentication_\u0026_test_authentication.py",
    "testCases": [
      {
        "name": "TestAuthentication",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_auth_token_returned",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_auth_token_returned",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_auth_token_returned",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_auth_token_returned",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_auth_token_returned",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_auth_token_returned",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_auth_token_returned",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_auth_token_returned",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_auth_token_returned",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_auth_token_returned",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_auth_token_returned",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_auth_token_returned",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_auth_token_returned",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_auth_token_returned",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_auth_token_returned",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_auth_token_returned",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_auth_token_returned",
                [
                  "actual",
                  "expected",
                  "authenticator"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_auth_token_returned",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_auth_token_returned",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_unit_\u0026_test_models_\u0026_test_dataframes_\u0026_test_generic_\u0026_test_generic_models.py",
    "testCases": [
      {
        "name": "GenericModelsTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_session_detail_attributes",
                  "[PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertIsNotNone]"
                ],
                [
                  "test_generic_models_create",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_session_detail_attributes",
                  "[]"
                ],
                [
                  "test_generic_models_create",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_session_detail_attributes",
                  "false"
                ],
                [
                  "test_generic_models_create",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_session_detail_attributes",
                  "false"
                ],
                [
                  "test_generic_models_create",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_session_detail_attributes",
                  "false"
                ],
                [
                  "test_generic_models_create",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_session_detail_attributes",
                  "false"
                ],
                [
                  "test_generic_models_create",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_session_detail_attributes",
                "false"
              ],
              [
                "test_generic_models_create",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_session_detail_attributes",
                "false"
              ],
              [
                "test_generic_models_create",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_session_detail_attributes",
                []
              ],
              [
                "test_generic_models_create",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_session_detail_attributes",
                "false"
              ],
              [
                "test_generic_models_create",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_session_detail_attributes",
                "false"
              ],
              [
                "test_generic_models_create",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_session_detail_attributes",
                  "0"
                ],
                [
                  "test_generic_models_create",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_session_detail_attributes",
                  "0"
                ],
                [
                  "test_generic_models_create",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_session_detail_attributes",
                "false"
              ],
              [
                "test_generic_models_create",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_session_detail_attributes",
                "false"
              ],
              [
                "test_generic_models_create",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_session_detail_attributes",
                "5"
              ],
              [
                "test_generic_models_create",
                "5"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_session_detail_attributes",
                [
                  "summary"
                ]
              ],
              [
                "test_generic_models_create",
                [
                  "summary",
                  "fps_stability",
                  "notes",
                  "keyword",
                  "markers"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_session_detail_attributes",
                []
              ],
              [
                "test_generic_models_create",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7618714932360677,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_generic_models_create",
                  "test_session_detail_attributes",
                  0.7618714932360677
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_session_detail_attributes",
                "false"
              ],
              [
                "test_generic_models_create",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_unit_\u0026_test_models_\u0026_test_dataframes_\u0026_test_generic_\u0026_test_abstract_generic.py",
    "testCases": [
      {
        "name": "TestGenericFrameModel",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_get_data",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_init_sets_attributes",
                  "[]"
                ],
                [
                  "test_auth_token_added_to_request_parameters",
                  "[PyCallExpression: self.assertDictEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_get_data",
                  "[]"
                ],
                [
                  "test_init_sets_attributes",
                  "[]"
                ],
                [
                  "test_auth_token_added_to_request_parameters",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_get_data",
                  "false"
                ],
                [
                  "test_init_sets_attributes",
                  "false"
                ],
                [
                  "test_auth_token_added_to_request_parameters",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_get_data",
                  "false"
                ],
                [
                  "test_init_sets_attributes",
                  "false"
                ],
                [
                  "test_auth_token_added_to_request_parameters",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_get_data",
                  "false"
                ],
                [
                  "test_init_sets_attributes",
                  "false"
                ],
                [
                  "test_auth_token_added_to_request_parameters",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_get_data",
                  "false"
                ],
                [
                  "test_init_sets_attributes",
                  "false"
                ],
                [
                  "test_auth_token_added_to_request_parameters",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data",
                "false"
              ],
              [
                "test_init_sets_attributes",
                "false"
              ],
              [
                "test_auth_token_added_to_request_parameters",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data",
                "false"
              ],
              [
                "test_init_sets_attributes",
                "false"
              ],
              [
                "test_auth_token_added_to_request_parameters",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data",
                []
              ],
              [
                "test_init_sets_attributes",
                []
              ],
              [
                "test_auth_token_added_to_request_parameters",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data",
                "false"
              ],
              [
                "test_init_sets_attributes",
                "false"
              ],
              [
                "test_auth_token_added_to_request_parameters",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data",
                "false"
              ],
              [
                "test_init_sets_attributes",
                "false"
              ],
              [
                "test_auth_token_added_to_request_parameters",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_get_data",
                  "0"
                ],
                [
                  "test_init_sets_attributes",
                  "0"
                ],
                [
                  "test_auth_token_added_to_request_parameters",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_get_data",
                  "0"
                ],
                [
                  "test_init_sets_attributes",
                  "0"
                ],
                [
                  "test_auth_token_added_to_request_parameters",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data",
                "false"
              ],
              [
                "test_init_sets_attributes",
                "false"
              ],
              [
                "test_auth_token_added_to_request_parameters",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data",
                "false"
              ],
              [
                "test_init_sets_attributes",
                "false"
              ],
              [
                "test_auth_token_added_to_request_parameters",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data",
                "1"
              ],
              [
                "test_init_sets_attributes",
                "3"
              ],
              [
                "test_auth_token_added_to_request_parameters",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data",
                [
                  "actual",
                  "mock_instance",
                  "expected"
                ]
              ],
              [
                "test_init_sets_attributes",
                [
                  "generic_model"
                ]
              ],
              [
                "test_auth_token_added_to_request_parameters",
                [
                  "actual",
                  "mock_dict",
                  "expected_dict"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data",
                []
              ],
              [
                "test_init_sets_attributes",
                []
              ],
              [
                "test_auth_token_added_to_request_parameters",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.652560229104512,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init_sets_attributes",
                  "test_get_data",
                  0.6795579506639858
                ],
                [
                  "test_init_sets_attributes",
                  "test_auth_token_added_to_request_parameters",
                  0.5861179025369158
                ],
                [
                  "test_get_data",
                  "test_auth_token_added_to_request_parameters",
                  0.6920048341126344
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data",
                "false"
              ],
              [
                "test_init_sets_attributes",
                "false"
              ],
              [
                "test_auth_token_added_to_request_parameters",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_unit_\u0026_test_api_\u0026_test_requests_retriever_\u0026_test_builder_\u0026_test_request_builder.py",
    "testCases": [
      {
        "name": "TestRequestBuilder",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_set_method",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_params",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_init_creates_request",
                  "[]"
                ],
                [
                  "test_set_data",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_headers",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_url",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_set_method",
                  "[]"
                ],
                [
                  "test_set_params",
                  "[]"
                ],
                [
                  "test_init_creates_request",
                  "[]"
                ],
                [
                  "test_set_data",
                  "[]"
                ],
                [
                  "test_set_headers",
                  "[]"
                ],
                [
                  "test_set_url",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_set_method",
                  "false"
                ],
                [
                  "test_set_params",
                  "false"
                ],
                [
                  "test_init_creates_request",
                  "false"
                ],
                [
                  "test_set_data",
                  "false"
                ],
                [
                  "test_set_headers",
                  "false"
                ],
                [
                  "test_set_url",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_set_method",
                  "false"
                ],
                [
                  "test_set_params",
                  "false"
                ],
                [
                  "test_init_creates_request",
                  "false"
                ],
                [
                  "test_set_data",
                  "false"
                ],
                [
                  "test_set_headers",
                  "false"
                ],
                [
                  "test_set_url",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_set_method",
                  "false"
                ],
                [
                  "test_set_params",
                  "false"
                ],
                [
                  "test_init_creates_request",
                  "false"
                ],
                [
                  "test_set_data",
                  "false"
                ],
                [
                  "test_set_headers",
                  "false"
                ],
                [
                  "test_set_url",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_set_method",
                  "false"
                ],
                [
                  "test_set_params",
                  "false"
                ],
                [
                  "test_init_creates_request",
                  "false"
                ],
                [
                  "test_set_data",
                  "false"
                ],
                [
                  "test_set_headers",
                  "false"
                ],
                [
                  "test_set_url",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_method",
                "false"
              ],
              [
                "test_set_params",
                "false"
              ],
              [
                "test_init_creates_request",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ],
              [
                "test_set_headers",
                "false"
              ],
              [
                "test_set_url",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_set_method",
                "false"
              ],
              [
                "test_set_params",
                "false"
              ],
              [
                "test_init_creates_request",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ],
              [
                "test_set_headers",
                "false"
              ],
              [
                "test_set_url",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_set_method",
                [
                  "self.mock_attributes",
                  "self.mock_request",
                  "self.mock_method"
                ]
              ],
              [
                "test_set_params",
                [
                  "self.mock_attributes",
                  "self.mock_request",
                  "self.mock_method"
                ]
              ],
              [
                "test_init_creates_request",
                [
                  "self.builder"
                ]
              ],
              [
                "test_set_data",
                [
                  "self.mock_attributes",
                  "self.mock_request",
                  "self.mock_method"
                ]
              ],
              [
                "test_set_headers",
                [
                  "self.mock_attributes",
                  "self.mock_request",
                  "self.mock_method"
                ]
              ],
              [
                "test_set_url",
                [
                  "self.mock_attributes",
                  "self.mock_request",
                  "self.mock_method"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_method",
                "false"
              ],
              [
                "test_set_params",
                "false"
              ],
              [
                "test_init_creates_request",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ],
              [
                "test_set_headers",
                "false"
              ],
              [
                "test_set_url",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_method",
                "false"
              ],
              [
                "test_set_params",
                "false"
              ],
              [
                "test_init_creates_request",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ],
              [
                "test_set_headers",
                "false"
              ],
              [
                "test_set_url",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_set_method",
                  "0"
                ],
                [
                  "test_set_params",
                  "0"
                ],
                [
                  "test_init_creates_request",
                  "0"
                ],
                [
                  "test_set_data",
                  "0"
                ],
                [
                  "test_set_headers",
                  "0"
                ],
                [
                  "test_set_url",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_set_method",
                  "0"
                ],
                [
                  "test_set_params",
                  "0"
                ],
                [
                  "test_init_creates_request",
                  "0"
                ],
                [
                  "test_set_data",
                  "0"
                ],
                [
                  "test_set_headers",
                  "0"
                ],
                [
                  "test_set_url",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_set_method",
                "false"
              ],
              [
                "test_set_params",
                "false"
              ],
              [
                "test_init_creates_request",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ],
              [
                "test_set_headers",
                "false"
              ],
              [
                "test_set_url",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_method",
                "false"
              ],
              [
                "test_set_params",
                "false"
              ],
              [
                "test_init_creates_request",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ],
              [
                "test_set_headers",
                "false"
              ],
              [
                "test_set_url",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_method",
                "1"
              ],
              [
                "test_set_params",
                "1"
              ],
              [
                "test_init_creates_request",
                "3"
              ],
              [
                "test_set_data",
                "1"
              ],
              [
                "test_set_headers",
                "1"
              ],
              [
                "test_set_url",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_set_method",
                []
              ],
              [
                "test_set_params",
                []
              ],
              [
                "test_init_creates_request",
                []
              ],
              [
                "test_set_data",
                []
              ],
              [
                "test_set_headers",
                []
              ],
              [
                "test_set_url",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_set_method",
                [
                  "self.builder"
                ]
              ],
              [
                "test_set_params",
                [
                  "self.builder"
                ]
              ],
              [
                "test_init_creates_request",
                [
                  "self.mock_attributes",
                  "self.mock_request",
                  "self.mock_method"
                ]
              ],
              [
                "test_set_data",
                [
                  "self.builder"
                ]
              ],
              [
                "test_set_headers",
                [
                  "self.builder"
                ]
              ],
              [
                "test_set_url",
                [
                  "self.builder"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7001524889688902,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init_creates_request",
                  "test_set_method",
                  0.3131841170745085
                ],
                [
                  "test_init_creates_request",
                  "test_set_data",
                  0.3131841170745085
                ],
                [
                  "test_set_method",
                  "test_set_headers",
                  0.9
                ],
                [
                  "test_set_method",
                  "test_set_data",
                  0.9
                ],
                [
                  "test_set_url",
                  "test_set_params",
                  0.8853648783083365
                ],
                [
                  "test_init_creates_request",
                  "test_set_headers",
                  0.3131841170745085
                ],
                [
                  "test_set_headers",
                  "test_set_data",
                  0.9
                ],
                [
                  "test_set_method",
                  "test_set_params",
                  0.9
                ],
                [
                  "test_set_url",
                  "test_set_headers",
                  0.8853648783083365
                ],
                [
                  "test_init_creates_request",
                  "test_set_params",
                  0.3131841170745085
                ],
                [
                  "test_set_method",
                  "test_set_url",
                  0.8853648783083365
                ],
                [
                  "test_set_headers",
                  "test_set_params",
                  0.9
                ],
                [
                  "test_init_creates_request",
                  "test_set_url",
                  0.3080913530019734
                ],
                [
                  "test_set_url",
                  "test_set_data",
                  0.8853648783083365
                ],
                [
                  "test_set_params",
                  "test_set_data",
                  0.9
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_set_method",
                "true"
              ],
              [
                "test_set_params",
                "true"
              ],
              [
                "test_init_creates_request",
                "false"
              ],
              [
                "test_set_data",
                "true"
              ],
              [
                "test_set_headers",
                "true"
              ],
              [
                "test_set_url",
                "true"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      },
      {
        "name": "TestAuthRequest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_no_params_set",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_auth_headers",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_auth_url",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_data",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_auth_method",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_no_params_set",
                  "[]"
                ],
                [
                  "test_set_auth_headers",
                  "[]"
                ],
                [
                  "test_set_auth_url",
                  "[]"
                ],
                [
                  "test_set_data",
                  "[]"
                ],
                [
                  "test_set_auth_method",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_no_params_set",
                  "false"
                ],
                [
                  "test_set_auth_headers",
                  "false"
                ],
                [
                  "test_set_auth_url",
                  "false"
                ],
                [
                  "test_set_data",
                  "false"
                ],
                [
                  "test_set_auth_method",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_no_params_set",
                  "false"
                ],
                [
                  "test_set_auth_headers",
                  "false"
                ],
                [
                  "test_set_auth_url",
                  "false"
                ],
                [
                  "test_set_data",
                  "false"
                ],
                [
                  "test_set_auth_method",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_no_params_set",
                  "false"
                ],
                [
                  "test_set_auth_headers",
                  "false"
                ],
                [
                  "test_set_auth_url",
                  "false"
                ],
                [
                  "test_set_data",
                  "false"
                ],
                [
                  "test_set_auth_method",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_no_params_set",
                  "false"
                ],
                [
                  "test_set_auth_headers",
                  "false"
                ],
                [
                  "test_set_auth_url",
                  "false"
                ],
                [
                  "test_set_data",
                  "false"
                ],
                [
                  "test_set_auth_method",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_no_params_set",
                "false"
              ],
              [
                "test_set_auth_headers",
                "false"
              ],
              [
                "test_set_auth_url",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ],
              [
                "test_set_auth_method",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_no_params_set",
                "false"
              ],
              [
                "test_set_auth_headers",
                "false"
              ],
              [
                "test_set_auth_url",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ],
              [
                "test_set_auth_method",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_no_params_set",
                [
                  "self.mock_get_method.get_method.return_value",
                  "self.mock_attributes",
                  "self.mock_attributes.get_params.return_value",
                  "self.mock_get_method",
                  "self.mock_attributes.get_headers.return_value",
                  "self.mock_attributes.get_data.return_value"
                ]
              ],
              [
                "test_set_auth_headers",
                [
                  "self.mock_get_method.get_method.return_value",
                  "self.mock_attributes",
                  "self.mock_attributes.get_params.return_value",
                  "self.mock_get_method",
                  "self.mock_attributes.get_headers.return_value",
                  "self.mock_attributes.get_data.return_value"
                ]
              ],
              [
                "test_set_auth_url",
                [
                  "self.mock_get_method.get_method.return_value",
                  "self.mock_attributes",
                  "self.mock_attributes.get_params.return_value",
                  "self.mock_get_method",
                  "self.mock_attributes.get_headers.return_value",
                  "self.mock_attributes.get_data.return_value"
                ]
              ],
              [
                "test_set_data",
                [
                  "self.mock_get_method.get_method.return_value",
                  "self.mock_attributes",
                  "self.mock_attributes.get_params.return_value",
                  "self.mock_get_method",
                  "self.mock_attributes.get_headers.return_value",
                  "self.mock_attributes.get_data.return_value"
                ]
              ],
              [
                "test_set_auth_method",
                [
                  "self.mock_get_method.get_method.return_value",
                  "self.mock_attributes",
                  "self.mock_attributes.get_params.return_value",
                  "self.mock_get_method",
                  "self.mock_attributes.get_headers.return_value",
                  "self.mock_attributes.get_data.return_value"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_no_params_set",
                "false"
              ],
              [
                "test_set_auth_headers",
                "false"
              ],
              [
                "test_set_auth_url",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ],
              [
                "test_set_auth_method",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_no_params_set",
                "false"
              ],
              [
                "test_set_auth_headers",
                "false"
              ],
              [
                "test_set_auth_url",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ],
              [
                "test_set_auth_method",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_no_params_set",
                  "0"
                ],
                [
                  "test_set_auth_headers",
                  "0"
                ],
                [
                  "test_set_auth_url",
                  "0"
                ],
                [
                  "test_set_data",
                  "0"
                ],
                [
                  "test_set_auth_method",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_no_params_set",
                  "0"
                ],
                [
                  "test_set_auth_headers",
                  "0"
                ],
                [
                  "test_set_auth_url",
                  "0"
                ],
                [
                  "test_set_data",
                  "0"
                ],
                [
                  "test_set_auth_method",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_no_params_set",
                "false"
              ],
              [
                "test_set_auth_headers",
                "false"
              ],
              [
                "test_set_auth_url",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ],
              [
                "test_set_auth_method",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_no_params_set",
                "false"
              ],
              [
                "test_set_auth_headers",
                "false"
              ],
              [
                "test_set_auth_url",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ],
              [
                "test_set_auth_method",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_no_params_set",
                "1"
              ],
              [
                "test_set_auth_headers",
                "1"
              ],
              [
                "test_set_auth_url",
                "1"
              ],
              [
                "test_set_data",
                "1"
              ],
              [
                "test_set_auth_method",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_no_params_set",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_set_auth_headers",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_set_auth_url",
                [
                  "actual",
                  "expected",
                  "url_director"
                ]
              ],
              [
                "test_set_data",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_set_auth_method",
                [
                  "actual",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_no_params_set",
                [
                  "self.auth_request"
                ]
              ],
              [
                "test_set_auth_headers",
                [
                  "self.auth_request"
                ]
              ],
              [
                "test_set_auth_url",
                [
                  "self.auth_request"
                ]
              ],
              [
                "test_set_data",
                [
                  "self.auth_request"
                ]
              ],
              [
                "test_set_auth_method",
                [
                  "self.auth_request"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6044752534696393,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_set_auth_method",
                  "test_set_data",
                  0.6254627916220946
                ],
                [
                  "test_set_auth_url",
                  "test_set_data",
                  0.6262242910851495
                ],
                [
                  "test_set_auth_method",
                  "test_no_params_set",
                  0.5677749739576688
                ],
                [
                  "test_set_auth_url",
                  "test_no_params_set",
                  0.4838730483659785
                ],
                [
                  "test_no_params_set",
                  "test_set_data",
                  0.5619514869490164
                ],
                [
                  "test_set_auth_method",
                  "test_set_auth_headers",
                  0.7234780434144717
                ],
                [
                  "test_set_auth_headers",
                  "test_set_data",
                  0.7073955730226379
                ],
                [
                  "test_set_auth_url",
                  "test_set_auth_headers",
                  0.6379031393753392
                ],
                [
                  "test_set_auth_headers",
                  "test_no_params_set",
                  0.6587507331151692
                ],
                [
                  "test_set_auth_method",
                  "test_set_auth_url",
                  0.45193845378886705
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_no_params_set",
                "false"
              ],
              [
                "test_set_auth_headers",
                "false"
              ],
              [
                "test_set_auth_url",
                "false"
              ],
              [
                "test_set_data",
                "false"
              ],
              [
                "test_set_auth_method",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      },
      {
        "name": "TestSessionRequest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_set_session_params",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_session_method",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_session_data",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_session_url",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_session_headers",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_set_session_params",
                  "[]"
                ],
                [
                  "test_set_session_method",
                  "[]"
                ],
                [
                  "test_set_session_data",
                  "[]"
                ],
                [
                  "test_set_session_url",
                  "[]"
                ],
                [
                  "test_set_session_headers",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_set_session_params",
                  "false"
                ],
                [
                  "test_set_session_method",
                  "false"
                ],
                [
                  "test_set_session_data",
                  "false"
                ],
                [
                  "test_set_session_url",
                  "false"
                ],
                [
                  "test_set_session_headers",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_set_session_params",
                  "false"
                ],
                [
                  "test_set_session_method",
                  "false"
                ],
                [
                  "test_set_session_data",
                  "false"
                ],
                [
                  "test_set_session_url",
                  "false"
                ],
                [
                  "test_set_session_headers",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_set_session_params",
                  "false"
                ],
                [
                  "test_set_session_method",
                  "false"
                ],
                [
                  "test_set_session_data",
                  "false"
                ],
                [
                  "test_set_session_url",
                  "false"
                ],
                [
                  "test_set_session_headers",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_set_session_params",
                  "false"
                ],
                [
                  "test_set_session_method",
                  "false"
                ],
                [
                  "test_set_session_data",
                  "false"
                ],
                [
                  "test_set_session_url",
                  "false"
                ],
                [
                  "test_set_session_headers",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_session_params",
                "false"
              ],
              [
                "test_set_session_method",
                "false"
              ],
              [
                "test_set_session_data",
                "false"
              ],
              [
                "test_set_session_url",
                "false"
              ],
              [
                "test_set_session_headers",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_set_session_params",
                "false"
              ],
              [
                "test_set_session_method",
                "false"
              ],
              [
                "test_set_session_data",
                "false"
              ],
              [
                "test_set_session_url",
                "false"
              ],
              [
                "test_set_session_headers",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_set_session_params",
                [
                  "self.mock_get_method.get_method.return_value",
                  "self.mock_attributes",
                  "self.mock_attributes.get_params.return_value",
                  "self.mock_get_method",
                  "self.mock_attributes.get_headers.return_value",
                  "self.mock_attributes.get_data.return_value"
                ]
              ],
              [
                "test_set_session_method",
                [
                  "self.mock_get_method.get_method.return_value",
                  "self.mock_attributes",
                  "self.mock_attributes.get_params.return_value",
                  "self.mock_get_method",
                  "self.mock_attributes.get_headers.return_value",
                  "self.mock_attributes.get_data.return_value"
                ]
              ],
              [
                "test_set_session_data",
                [
                  "self.mock_get_method.get_method.return_value",
                  "self.mock_attributes",
                  "self.mock_attributes.get_params.return_value",
                  "self.mock_get_method",
                  "self.mock_attributes.get_headers.return_value",
                  "self.mock_attributes.get_data.return_value"
                ]
              ],
              [
                "test_set_session_url",
                [
                  "self.mock_get_method.get_method.return_value",
                  "self.mock_attributes",
                  "self.mock_attributes.get_params.return_value",
                  "self.mock_get_method",
                  "self.mock_attributes.get_headers.return_value",
                  "self.mock_attributes.get_data.return_value"
                ]
              ],
              [
                "test_set_session_headers",
                [
                  "self.mock_get_method.get_method.return_value",
                  "self.mock_attributes",
                  "self.mock_attributes.get_params.return_value",
                  "self.mock_get_method",
                  "self.mock_attributes.get_headers.return_value",
                  "self.mock_attributes.get_data.return_value"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_session_params",
                "false"
              ],
              [
                "test_set_session_method",
                "false"
              ],
              [
                "test_set_session_data",
                "false"
              ],
              [
                "test_set_session_url",
                "false"
              ],
              [
                "test_set_session_headers",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_session_params",
                "false"
              ],
              [
                "test_set_session_method",
                "false"
              ],
              [
                "test_set_session_data",
                "false"
              ],
              [
                "test_set_session_url",
                "false"
              ],
              [
                "test_set_session_headers",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_set_session_params",
                  "0"
                ],
                [
                  "test_set_session_method",
                  "0"
                ],
                [
                  "test_set_session_data",
                  "0"
                ],
                [
                  "test_set_session_url",
                  "0"
                ],
                [
                  "test_set_session_headers",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_set_session_params",
                  "0"
                ],
                [
                  "test_set_session_method",
                  "0"
                ],
                [
                  "test_set_session_data",
                  "0"
                ],
                [
                  "test_set_session_url",
                  "0"
                ],
                [
                  "test_set_session_headers",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_set_session_params",
                "false"
              ],
              [
                "test_set_session_method",
                "false"
              ],
              [
                "test_set_session_data",
                "false"
              ],
              [
                "test_set_session_url",
                "false"
              ],
              [
                "test_set_session_headers",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_session_params",
                "false"
              ],
              [
                "test_set_session_method",
                "false"
              ],
              [
                "test_set_session_data",
                "false"
              ],
              [
                "test_set_session_url",
                "false"
              ],
              [
                "test_set_session_headers",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_session_params",
                "1"
              ],
              [
                "test_set_session_method",
                "1"
              ],
              [
                "test_set_session_data",
                "1"
              ],
              [
                "test_set_session_url",
                "1"
              ],
              [
                "test_set_session_headers",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_set_session_params",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_set_session_method",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_set_session_data",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_set_session_url",
                [
                  "mock_session_url",
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_set_session_headers",
                [
                  "actual",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_set_session_params",
                [
                  "self.session"
                ]
              ],
              [
                "test_set_session_method",
                [
                  "self.session"
                ]
              ],
              [
                "test_set_session_data",
                [
                  "self.session"
                ]
              ],
              [
                "test_set_session_url",
                [
                  "self.session"
                ]
              ],
              [
                "test_set_session_headers",
                [
                  "self.session"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6321387465251895,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_set_session_headers",
                  "test_set_session_params",
                  0.7003859939637147
                ],
                [
                  "test_set_session_method",
                  "test_set_session_url",
                  0.5261166341623486
                ],
                [
                  "test_set_session_url",
                  "test_set_session_headers",
                  0.7487387124630166
                ],
                [
                  "test_set_session_headers",
                  "test_set_session_data",
                  0.7006490497453707
                ],
                [
                  "test_set_session_params",
                  "test_set_session_data",
                  0.7930905553545756
                ],
                [
                  "test_set_session_method",
                  "test_set_session_headers",
                  0.6722214816785518
                ],
                [
                  "test_set_session_method",
                  "test_set_session_params",
                  0.6472394602609756
                ],
                [
                  "test_set_session_method",
                  "test_set_session_data",
                  0.6701096334340481
                ],
                [
                  "test_set_session_url",
                  "test_set_session_params",
                  0.3926035028270217
                ],
                [
                  "test_set_session_url",
                  "test_set_session_data",
                  0.4702324413622722
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_set_session_params",
                "false"
              ],
              [
                "test_set_session_method",
                "false"
              ],
              [
                "test_set_session_data",
                "false"
              ],
              [
                "test_set_session_url",
                "false"
              ],
              [
                "test_set_session_headers",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      },
      {
        "name": "TestRequest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_can_call_request_object",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_can_call_request_object",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_can_call_request_object",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_can_call_request_object",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_can_call_request_object",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_can_call_request_object",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_can_call_request_object",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_can_call_request_object",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_can_call_request_object",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_can_call_request_object",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_can_call_request_object",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_can_call_request_object",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_can_call_request_object",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_can_call_request_object",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_can_call_request_object",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_can_call_request_object",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_can_call_request_object",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_can_call_request_object",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_can_call_request_object",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_unit_\u0026_test_api_\u0026_test_requests_retriever_\u0026_test_request_adapter_\u0026_test_adapter.py",
    "testCases": [
      {
        "name": "TestAdapterInterface",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_request",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_init_sets_http_library",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_request",
                  "[]"
                ],
                [
                  "test_init_sets_http_library",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_request",
                  "false"
                ],
                [
                  "test_init_sets_http_library",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_request",
                  "false"
                ],
                [
                  "test_init_sets_http_library",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_request",
                  "false"
                ],
                [
                  "test_init_sets_http_library",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_request",
                  "false"
                ],
                [
                  "test_init_sets_http_library",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_request",
                "false"
              ],
              [
                "test_init_sets_http_library",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_request",
                "false"
              ],
              [
                "test_init_sets_http_library",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_request",
                []
              ],
              [
                "test_init_sets_http_library",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_request",
                "false"
              ],
              [
                "test_init_sets_http_library",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_request",
                "false"
              ],
              [
                "test_init_sets_http_library",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_request",
                  "0"
                ],
                [
                  "test_init_sets_http_library",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_request",
                  "0"
                ],
                [
                  "test_init_sets_http_library",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_request",
                "false"
              ],
              [
                "test_init_sets_http_library",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_request",
                "false"
              ],
              [
                "test_init_sets_http_library",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_request",
                "1"
              ],
              [
                "test_init_sets_http_library",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_request",
                []
              ],
              [
                "test_init_sets_http_library",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_request",
                [
                  "self.adapter"
                ]
              ],
              [
                "test_init_sets_http_library",
                [
                  "self.adapter"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5037397678898836,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init_sets_http_library",
                  "test_request",
                  0.5037397678898836
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_request",
                "true"
              ],
              [
                "test_init_sets_http_library",
                "true"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "TestRequestsAdapter",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_session_request",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_auth_request",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_session_request",
                  "[]"
                ],
                [
                  "test_auth_request",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_session_request",
                  "false"
                ],
                [
                  "test_auth_request",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_session_request",
                  "false"
                ],
                [
                  "test_auth_request",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_session_request",
                  "false"
                ],
                [
                  "test_auth_request",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_session_request",
                  "false"
                ],
                [
                  "test_auth_request",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_session_request",
                "false"
              ],
              [
                "test_auth_request",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_session_request",
                "false"
              ],
              [
                "test_auth_request",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_session_request",
                []
              ],
              [
                "test_auth_request",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_session_request",
                "false"
              ],
              [
                "test_auth_request",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_session_request",
                "false"
              ],
              [
                "test_auth_request",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_session_request",
                  "0"
                ],
                [
                  "test_auth_request",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_session_request",
                  "0"
                ],
                [
                  "test_auth_request",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_session_request",
                "false"
              ],
              [
                "test_auth_request",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_session_request",
                "false"
              ],
              [
                "test_auth_request",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_session_request",
                "1"
              ],
              [
                "test_auth_request",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_session_request",
                [
                  "adapter",
                  "response",
                  "json_response"
                ]
              ],
              [
                "test_auth_request",
                [
                  "adapter",
                  "response",
                  "json_response"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_session_request",
                []
              ],
              [
                "test_auth_request",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6825121133065161,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_auth_request",
                  "test_session_request",
                  0.6825121133065161
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_session_request",
                "false"
              ],
              [
                "test_auth_request",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_unit_\u0026_test_api_\u0026_test_requests_retriever_\u0026_test_builder_\u0026_test_request_director.py",
    "testCases": [
      {
        "name": "TestRequestDirector",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_init_creates_builder_object",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_session_to_dict",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_auth_to_dict",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_init_creates_builder_object",
                  "[]"
                ],
                [
                  "test_session_to_dict",
                  "[]"
                ],
                [
                  "test_auth_to_dict",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_init_creates_builder_object",
                  "false"
                ],
                [
                  "test_session_to_dict",
                  "false"
                ],
                [
                  "test_auth_to_dict",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_init_creates_builder_object",
                  "false"
                ],
                [
                  "test_session_to_dict",
                  "false"
                ],
                [
                  "test_auth_to_dict",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_init_creates_builder_object",
                  "false"
                ],
                [
                  "test_session_to_dict",
                  "false"
                ],
                [
                  "test_auth_to_dict",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_init_creates_builder_object",
                  "false"
                ],
                [
                  "test_session_to_dict",
                  "false"
                ],
                [
                  "test_auth_to_dict",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_builder_object",
                "false"
              ],
              [
                "test_session_to_dict",
                "false"
              ],
              [
                "test_auth_to_dict",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_builder_object",
                "false"
              ],
              [
                "test_session_to_dict",
                "false"
              ],
              [
                "test_auth_to_dict",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_builder_object",
                []
              ],
              [
                "test_session_to_dict",
                []
              ],
              [
                "test_auth_to_dict",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_builder_object",
                "false"
              ],
              [
                "test_session_to_dict",
                "false"
              ],
              [
                "test_auth_to_dict",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_builder_object",
                "false"
              ],
              [
                "test_session_to_dict",
                "false"
              ],
              [
                "test_auth_to_dict",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_init_creates_builder_object",
                  "0"
                ],
                [
                  "test_session_to_dict",
                  "0"
                ],
                [
                  "test_auth_to_dict",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_init_creates_builder_object",
                  "0"
                ],
                [
                  "test_session_to_dict",
                  "0"
                ],
                [
                  "test_auth_to_dict",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_builder_object",
                "false"
              ],
              [
                "test_session_to_dict",
                "false"
              ],
              [
                "test_auth_to_dict",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_builder_object",
                "false"
              ],
              [
                "test_session_to_dict",
                "false"
              ],
              [
                "test_auth_to_dict",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_builder_object",
                "1"
              ],
              [
                "test_session_to_dict",
                "1"
              ],
              [
                "test_auth_to_dict",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_builder_object",
                []
              ],
              [
                "test_session_to_dict",
                [
                  "actual",
                  "expected",
                  "mock"
                ]
              ],
              [
                "test_auth_to_dict",
                [
                  "actual",
                  "expected",
                  "mock"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_init_creates_builder_object",
                [
                  "self.director"
                ]
              ],
              [
                "test_session_to_dict",
                [
                  "self.director"
                ]
              ],
              [
                "test_auth_to_dict",
                [
                  "self.director"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.539328385686109,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_auth_to_dict",
                  "test_session_to_dict",
                  0.8308185851328133
                ],
                [
                  "test_init_creates_builder_object",
                  "test_auth_to_dict",
                  0.3814392212544808
                ],
                [
                  "test_init_creates_builder_object",
                  "test_session_to_dict",
                  0.405727350671033
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_init_creates_builder_object",
                "true"
              ],
              [
                "test_session_to_dict",
                "false"
              ],
              [
                "test_auth_to_dict",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      },
      {
        "name": "TestDirectorLoader",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_set_url_director",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_set_url_director",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_set_url_director",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_set_url_director",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_set_url_director",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_set_url_director",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_url_director",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_set_url_director",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_set_url_director",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_url_director",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_url_director",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_set_url_director",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_set_url_director",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_set_url_director",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_url_director",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_url_director",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_set_url_director",
                [
                  "loader"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_set_url_director",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_set_url_director",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_unit_\u0026_test_models_\u0026_test_dataframes_\u0026_test_time_series_\u0026_test_time_series_models.py",
    "testCases": [
      {
        "name": "TimeSeriesModelsTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_time_series_models_create",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_time_series_models_create",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_time_series_models_create",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_time_series_models_create",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_time_series_models_create",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_time_series_models_create",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_time_series_models_create",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_time_series_models_create",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_time_series_models_create",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_time_series_models_create",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_time_series_models_create",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_time_series_models_create",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_time_series_models_create",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_time_series_models_create",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_time_series_models_create",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_time_series_models_create",
                "11"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": true,
            "detail": [
              [
                "test_time_series_models_create",
                [
                  "core_frequency",
                  "memory",
                  "fps",
                  "cpu",
                  "power",
                  "battery",
                  "janks",
                  "gpu",
                  "gpu_img",
                  "energy",
                  "network"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_time_series_models_create",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_time_series_models_create",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_unit_\u0026_test_models_\u0026_test_dataframes_\u0026_test_time_series_\u0026_test_abstract_time_series.py",
    "testCases": [
      {
        "name": "TestAbstractTimeSeriesModel",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_get_data",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_init_sets_attributes",
                  "[]"
                ],
                [
                  "test_auth_token_added_to_request_parameters",
                  "[PyCallExpression: self.assertDictEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_get_data",
                  "[]"
                ],
                [
                  "test_init_sets_attributes",
                  "[]"
                ],
                [
                  "test_auth_token_added_to_request_parameters",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_get_data",
                  "false"
                ],
                [
                  "test_init_sets_attributes",
                  "false"
                ],
                [
                  "test_auth_token_added_to_request_parameters",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_get_data",
                  "false"
                ],
                [
                  "test_init_sets_attributes",
                  "false"
                ],
                [
                  "test_auth_token_added_to_request_parameters",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_get_data",
                  "false"
                ],
                [
                  "test_init_sets_attributes",
                  "false"
                ],
                [
                  "test_auth_token_added_to_request_parameters",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_get_data",
                  "false"
                ],
                [
                  "test_init_sets_attributes",
                  "false"
                ],
                [
                  "test_auth_token_added_to_request_parameters",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data",
                "false"
              ],
              [
                "test_init_sets_attributes",
                "false"
              ],
              [
                "test_auth_token_added_to_request_parameters",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data",
                "false"
              ],
              [
                "test_init_sets_attributes",
                "false"
              ],
              [
                "test_auth_token_added_to_request_parameters",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data",
                []
              ],
              [
                "test_init_sets_attributes",
                []
              ],
              [
                "test_auth_token_added_to_request_parameters",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data",
                "false"
              ],
              [
                "test_init_sets_attributes",
                "false"
              ],
              [
                "test_auth_token_added_to_request_parameters",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data",
                "false"
              ],
              [
                "test_init_sets_attributes",
                "false"
              ],
              [
                "test_auth_token_added_to_request_parameters",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_get_data",
                  "0"
                ],
                [
                  "test_init_sets_attributes",
                  "0"
                ],
                [
                  "test_auth_token_added_to_request_parameters",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_get_data",
                  "0"
                ],
                [
                  "test_init_sets_attributes",
                  "0"
                ],
                [
                  "test_auth_token_added_to_request_parameters",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data",
                "false"
              ],
              [
                "test_init_sets_attributes",
                "false"
              ],
              [
                "test_auth_token_added_to_request_parameters",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data",
                "false"
              ],
              [
                "test_init_sets_attributes",
                "false"
              ],
              [
                "test_auth_token_added_to_request_parameters",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data",
                "1"
              ],
              [
                "test_init_sets_attributes",
                "3"
              ],
              [
                "test_auth_token_added_to_request_parameters",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data",
                [
                  "actual",
                  "mock_instance",
                  "expected"
                ]
              ],
              [
                "test_init_sets_attributes",
                [
                  "time_series_model"
                ]
              ],
              [
                "test_auth_token_added_to_request_parameters",
                [
                  "actual",
                  "mock_dict",
                  "expected_dict"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data",
                []
              ],
              [
                "test_init_sets_attributes",
                []
              ],
              [
                "test_auth_token_added_to_request_parameters",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7472934872693678,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_get_data",
                  "test_auth_token_added_to_request_parameters",
                  0.7740473226188412
                ],
                [
                  "test_init_sets_attributes",
                  "test_get_data",
                  0.7684441595459713
                ],
                [
                  "test_init_sets_attributes",
                  "test_auth_token_added_to_request_parameters",
                  0.6993889796432908
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data",
                "false"
              ],
              [
                "test_init_sets_attributes",
                "false"
              ],
              [
                "test_auth_token_added_to_request_parameters",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_integration_\u0026_test_api_\u0026_test_requests_retriever_\u0026_test_builder_\u0026_test_request_builder.py",
    "testCases": [
      {
        "name": "TestRequestBuilder",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_auth_request",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_basic_session_request",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_auth_request",
                  "[]"
                ],
                [
                  "test_basic_session_request",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_auth_request",
                  "false"
                ],
                [
                  "test_basic_session_request",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_auth_request",
                  "false"
                ],
                [
                  "test_basic_session_request",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_auth_request",
                  "false"
                ],
                [
                  "test_basic_session_request",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_auth_request",
                  "false"
                ],
                [
                  "test_basic_session_request",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_auth_request",
                "false"
              ],
              [
                "test_basic_session_request",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_auth_request",
                "false"
              ],
              [
                "test_basic_session_request",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_auth_request",
                []
              ],
              [
                "test_basic_session_request",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_auth_request",
                "false"
              ],
              [
                "test_basic_session_request",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_auth_request",
                "false"
              ],
              [
                "test_basic_session_request",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_auth_request",
                  "0"
                ],
                [
                  "test_basic_session_request",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_auth_request",
                  "0"
                ],
                [
                  "test_basic_session_request",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_auth_request",
                "false"
              ],
              [
                "test_basic_session_request",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_auth_request",
                "false"
              ],
              [
                "test_basic_session_request",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_auth_request",
                "1"
              ],
              [
                "test_basic_session_request",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_auth_request",
                [
                  "actual",
                  "auth",
                  "expected"
                ]
              ],
              [
                "test_basic_session_request",
                [
                  "actual",
                  "session",
                  "expected",
                  "request_parameters"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_auth_request",
                [
                  "self.request_director"
                ]
              ],
              [
                "test_basic_session_request",
                [
                  "self.request_director"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7440238091428449,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_auth_request",
                  "test_basic_session_request",
                  0.7440238091428449
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_auth_request",
                "false"
              ],
              [
                "test_basic_session_request",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_integration_\u0026_test_api_\u0026_test_requests_retriever_\u0026_test_builder_\u0026_test_request_director.py",
    "testCases": [
      {
        "name": "TestRequestDirector",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_init",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_init",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_init",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_init",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_init",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_init",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_init",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_init",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                [
                  "self.director"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_init",
                "true"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      },
      {
        "name": "TestGetAuthRequest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_get_session_request",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_get_auth_request",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_get_session_request_no_metric",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_get_session_request",
                  "[]"
                ],
                [
                  "test_get_auth_request",
                  "[]"
                ],
                [
                  "test_get_session_request_no_metric",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_get_session_request",
                  "true"
                ],
                [
                  "test_get_auth_request",
                  "false"
                ],
                [
                  "test_get_session_request_no_metric",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_get_session_request",
                  "false"
                ],
                [
                  "test_get_auth_request",
                  "false"
                ],
                [
                  "test_get_session_request_no_metric",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_get_session_request",
                  "false"
                ],
                [
                  "test_get_auth_request",
                  "false"
                ],
                [
                  "test_get_session_request_no_metric",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_get_session_request",
                  "false"
                ],
                [
                  "test_get_auth_request",
                  "false"
                ],
                [
                  "test_get_session_request_no_metric",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_session_request",
                "false"
              ],
              [
                "test_get_auth_request",
                "false"
              ],
              [
                "test_get_session_request_no_metric",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_get_session_request",
                "false"
              ],
              [
                "test_get_auth_request",
                "false"
              ],
              [
                "test_get_session_request_no_metric",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_get_session_request",
                []
              ],
              [
                "test_get_auth_request",
                []
              ],
              [
                "test_get_session_request_no_metric",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_session_request",
                "false"
              ],
              [
                "test_get_auth_request",
                "false"
              ],
              [
                "test_get_session_request_no_metric",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_session_request",
                "false"
              ],
              [
                "test_get_auth_request",
                "false"
              ],
              [
                "test_get_session_request_no_metric",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_get_session_request",
                  "0"
                ],
                [
                  "test_get_auth_request",
                  "0"
                ],
                [
                  "test_get_session_request_no_metric",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_get_session_request",
                  "0"
                ],
                [
                  "test_get_auth_request",
                  "0"
                ],
                [
                  "test_get_session_request_no_metric",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_get_session_request",
                "false"
              ],
              [
                "test_get_auth_request",
                "false"
              ],
              [
                "test_get_session_request_no_metric",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_session_request",
                "false"
              ],
              [
                "test_get_auth_request",
                "false"
              ],
              [
                "test_get_session_request_no_metric",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_session_request",
                "1"
              ],
              [
                "test_get_auth_request",
                "1"
              ],
              [
                "test_get_session_request_no_metric",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_get_session_request",
                [
                  "error_message",
                  "actual",
                  "expected",
                  "test_params",
                  "request_parameters"
                ]
              ],
              [
                "test_get_auth_request",
                [
                  "actual",
                  "data",
                  "expected"
                ]
              ],
              [
                "test_get_session_request_no_metric",
                [
                  "actual",
                  "expected",
                  "test_params"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_get_session_request",
                []
              ],
              [
                "test_get_auth_request",
                []
              ],
              [
                "test_get_session_request_no_metric",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7483789572423762,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_get_session_request",
                  "test_get_session_request_no_metric",
                  0.8236415771038741
                ],
                [
                  "test_get_auth_request",
                  "test_get_session_request",
                  0.710200177974147
                ],
                [
                  "test_get_auth_request",
                  "test_get_session_request_no_metric",
                  0.7112951166491076
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_get_session_request",
                "false"
              ],
              [
                "test_get_auth_request",
                "false"
              ],
              [
                "test_get_session_request_no_metric",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_unit_\u0026_test_api_\u0026_test_requests_retriever_\u0026_test_builder_\u0026_request_url_\u0026_test_url_builder.py",
    "testCases": [
      {
        "name": "TestURLBuilder",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_build_url",
                  "[PyCallExpression: self.assertIsNone]"
                ],
                [
                  "test_set_suffix",
                  "[PyCallExpression: self.assertIsNone]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_build_url",
                  "[]"
                ],
                [
                  "test_set_suffix",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_build_url",
                  "false"
                ],
                [
                  "test_set_suffix",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_build_url",
                  "false"
                ],
                [
                  "test_set_suffix",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_build_url",
                  "false"
                ],
                [
                  "test_set_suffix",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_build_url",
                  "false"
                ],
                [
                  "test_set_suffix",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_build_url",
                "false"
              ],
              [
                "test_set_suffix",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_build_url",
                "false"
              ],
              [
                "test_set_suffix",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_build_url",
                []
              ],
              [
                "test_set_suffix",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_build_url",
                "false"
              ],
              [
                "test_set_suffix",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_build_url",
                "false"
              ],
              [
                "test_set_suffix",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_build_url",
                  "0"
                ],
                [
                  "test_set_suffix",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_build_url",
                  "0"
                ],
                [
                  "test_set_suffix",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_build_url",
                "false"
              ],
              [
                "test_set_suffix",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_build_url",
                "false"
              ],
              [
                "test_set_suffix",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_build_url",
                "1"
              ],
              [
                "test_set_suffix",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_build_url",
                []
              ],
              [
                "test_set_suffix",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_build_url",
                [
                  "self.default_url_builder"
                ]
              ],
              [
                "test_set_suffix",
                [
                  "self.default_url_builder"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9050184656361279,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_set_suffix",
                  "test_build_url",
                  0.9050184656361279
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_build_url",
                "false"
              ],
              [
                "test_set_suffix",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "TestAuthURL",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_set_suffix",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_build_url",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_set_suffix",
                  "[]"
                ],
                [
                  "test_build_url",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_set_suffix",
                  "false"
                ],
                [
                  "test_build_url",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_set_suffix",
                  "false"
                ],
                [
                  "test_build_url",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_set_suffix",
                  "false"
                ],
                [
                  "test_build_url",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_set_suffix",
                  "false"
                ],
                [
                  "test_build_url",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_suffix",
                "false"
              ],
              [
                "test_build_url",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_set_suffix",
                "false"
              ],
              [
                "test_build_url",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_set_suffix",
                []
              ],
              [
                "test_build_url",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_suffix",
                "false"
              ],
              [
                "test_build_url",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_suffix",
                "false"
              ],
              [
                "test_build_url",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_set_suffix",
                  "0"
                ],
                [
                  "test_build_url",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_set_suffix",
                  "0"
                ],
                [
                  "test_build_url",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_set_suffix",
                "false"
              ],
              [
                "test_build_url",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_suffix",
                "false"
              ],
              [
                "test_build_url",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_suffix",
                "1"
              ],
              [
                "test_build_url",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_set_suffix",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_build_url",
                [
                  "actual",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_set_suffix",
                [
                  "self.auth_url"
                ]
              ],
              [
                "test_build_url",
                [
                  "self.auth_url"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7513926833493686,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_set_suffix",
                  "test_build_url",
                  0.7513926833493686
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_set_suffix",
                "false"
              ],
              [
                "test_build_url",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "TestSessionURL",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_set_url",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_build_url",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_session_id_with_empty_session",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_session_id",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_suffix",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_metric",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_set_url",
                  "[]"
                ],
                [
                  "test_build_url",
                  "[]"
                ],
                [
                  "test_set_session_id_with_empty_session",
                  "[]"
                ],
                [
                  "test_set_session_id",
                  "[]"
                ],
                [
                  "test_set_suffix",
                  "[]"
                ],
                [
                  "test_set_metric",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_set_url",
                  "false"
                ],
                [
                  "test_build_url",
                  "false"
                ],
                [
                  "test_set_session_id_with_empty_session",
                  "false"
                ],
                [
                  "test_set_session_id",
                  "false"
                ],
                [
                  "test_set_suffix",
                  "false"
                ],
                [
                  "test_set_metric",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_set_url",
                  "false"
                ],
                [
                  "test_build_url",
                  "false"
                ],
                [
                  "test_set_session_id_with_empty_session",
                  "false"
                ],
                [
                  "test_set_session_id",
                  "false"
                ],
                [
                  "test_set_suffix",
                  "false"
                ],
                [
                  "test_set_metric",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_set_url",
                  "false"
                ],
                [
                  "test_build_url",
                  "false"
                ],
                [
                  "test_set_session_id_with_empty_session",
                  "false"
                ],
                [
                  "test_set_session_id",
                  "false"
                ],
                [
                  "test_set_suffix",
                  "false"
                ],
                [
                  "test_set_metric",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_set_url",
                  "false"
                ],
                [
                  "test_build_url",
                  "false"
                ],
                [
                  "test_set_session_id_with_empty_session",
                  "false"
                ],
                [
                  "test_set_session_id",
                  "false"
                ],
                [
                  "test_set_suffix",
                  "false"
                ],
                [
                  "test_set_metric",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_url",
                "false"
              ],
              [
                "test_build_url",
                "false"
              ],
              [
                "test_set_session_id_with_empty_session",
                "false"
              ],
              [
                "test_set_session_id",
                "false"
              ],
              [
                "test_set_suffix",
                "false"
              ],
              [
                "test_set_metric",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_set_url",
                "false"
              ],
              [
                "test_build_url",
                "false"
              ],
              [
                "test_set_session_id_with_empty_session",
                "false"
              ],
              [
                "test_set_session_id",
                "false"
              ],
              [
                "test_set_suffix",
                "false"
              ],
              [
                "test_set_metric",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_set_url",
                []
              ],
              [
                "test_build_url",
                []
              ],
              [
                "test_set_session_id_with_empty_session",
                []
              ],
              [
                "test_set_session_id",
                []
              ],
              [
                "test_set_suffix",
                []
              ],
              [
                "test_set_metric",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_url",
                "false"
              ],
              [
                "test_build_url",
                "false"
              ],
              [
                "test_set_session_id_with_empty_session",
                "false"
              ],
              [
                "test_set_session_id",
                "false"
              ],
              [
                "test_set_suffix",
                "false"
              ],
              [
                "test_set_metric",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_url",
                "false"
              ],
              [
                "test_build_url",
                "false"
              ],
              [
                "test_set_session_id_with_empty_session",
                "false"
              ],
              [
                "test_set_session_id",
                "false"
              ],
              [
                "test_set_suffix",
                "false"
              ],
              [
                "test_set_metric",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_set_url",
                  "0"
                ],
                [
                  "test_build_url",
                  "0"
                ],
                [
                  "test_set_session_id_with_empty_session",
                  "0"
                ],
                [
                  "test_set_session_id",
                  "0"
                ],
                [
                  "test_set_suffix",
                  "0"
                ],
                [
                  "test_set_metric",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_set_url",
                  "0"
                ],
                [
                  "test_build_url",
                  "0"
                ],
                [
                  "test_set_session_id_with_empty_session",
                  "0"
                ],
                [
                  "test_set_session_id",
                  "0"
                ],
                [
                  "test_set_suffix",
                  "0"
                ],
                [
                  "test_set_metric",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_set_url",
                "false"
              ],
              [
                "test_build_url",
                "false"
              ],
              [
                "test_set_session_id_with_empty_session",
                "false"
              ],
              [
                "test_set_session_id",
                "false"
              ],
              [
                "test_set_suffix",
                "false"
              ],
              [
                "test_set_metric",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_url",
                "false"
              ],
              [
                "test_build_url",
                "false"
              ],
              [
                "test_set_session_id_with_empty_session",
                "false"
              ],
              [
                "test_set_session_id",
                "false"
              ],
              [
                "test_set_suffix",
                "false"
              ],
              [
                "test_set_metric",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_url",
                "2"
              ],
              [
                "test_build_url",
                "1"
              ],
              [
                "test_set_session_id_with_empty_session",
                "1"
              ],
              [
                "test_set_session_id",
                "1"
              ],
              [
                "test_set_suffix",
                "3"
              ],
              [
                "test_set_metric",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_set_url",
                [
                  "actual"
                ]
              ],
              [
                "test_build_url",
                [
                  "actual"
                ]
              ],
              [
                "test_set_session_id_with_empty_session",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_set_session_id",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_set_suffix",
                [
                  "actual",
                  "expected",
                  "test_parameters"
                ]
              ],
              [
                "test_set_metric",
                [
                  "actual"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_set_url",
                [
                  "self.session"
                ]
              ],
              [
                "test_build_url",
                [
                  "self.session"
                ]
              ],
              [
                "test_set_session_id_with_empty_session",
                [
                  "self.session"
                ]
              ],
              [
                "test_set_session_id",
                [
                  "self.session"
                ]
              ],
              [
                "test_set_suffix",
                [
                  "self.session"
                ]
              ],
              [
                "test_set_metric",
                [
                  "self.session"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6098965805179797,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_set_url",
                  "test_set_metric",
                  0.45374260648651504
                ],
                [
                  "test_set_suffix",
                  "test_build_url",
                  0.6045175283091717
                ],
                [
                  "test_build_url",
                  "test_set_session_id_with_empty_session",
                  0.5455569437000953
                ],
                [
                  "test_set_suffix",
                  "test_set_session_id_with_empty_session",
                  0.6406874037664375
                ],
                [
                  "test_set_url",
                  "test_set_session_id",
                  0.5863223287455782
                ],
                [
                  "test_build_url",
                  "test_set_session_id",
                  0.684762383262326
                ],
                [
                  "test_set_session_id_with_empty_session",
                  "test_set_metric",
                  0.49618606177797414
                ],
                [
                  "test_set_suffix",
                  "test_set_metric",
                  0.5298335995093724
                ],
                [
                  "test_set_url",
                  "test_build_url",
                  0.778128716204942
                ],
                [
                  "test_build_url",
                  "test_set_metric",
                  0.5098387521252538
                ],
                [
                  "test_set_suffix",
                  "test_set_session_id",
                  0.7401788965895353
                ],
                [
                  "test_set_url",
                  "test_set_session_id_with_empty_session",
                  0.4752971536105469
                ],
                [
                  "test_set_session_id",
                  "test_set_metric",
                  0.538413115317435
                ],
                [
                  "test_set_session_id",
                  "test_set_session_id_with_empty_session",
                  0.8477657843353927
                ],
                [
                  "test_set_suffix",
                  "test_set_url",
                  0.7172174340291197
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_set_url",
                "false"
              ],
              [
                "test_build_url",
                "false"
              ],
              [
                "test_set_session_id_with_empty_session",
                "false"
              ],
              [
                "test_set_session_id",
                "false"
              ],
              [
                "test_set_suffix",
                "false"
              ],
              [
                "test_set_metric",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      },
      {
        "name": "TestURL",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_version_attribute",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_base_url_attribute",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_version_attribute",
                  "[]"
                ],
                [
                  "test_base_url_attribute",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_version_attribute",
                  "false"
                ],
                [
                  "test_base_url_attribute",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_version_attribute",
                  "false"
                ],
                [
                  "test_base_url_attribute",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_version_attribute",
                  "false"
                ],
                [
                  "test_base_url_attribute",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_version_attribute",
                  "false"
                ],
                [
                  "test_base_url_attribute",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_version_attribute",
                "false"
              ],
              [
                "test_base_url_attribute",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_version_attribute",
                "false"
              ],
              [
                "test_base_url_attribute",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_version_attribute",
                []
              ],
              [
                "test_base_url_attribute",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_version_attribute",
                "false"
              ],
              [
                "test_base_url_attribute",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_version_attribute",
                "false"
              ],
              [
                "test_base_url_attribute",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_version_attribute",
                  "0"
                ],
                [
                  "test_base_url_attribute",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_version_attribute",
                  "0"
                ],
                [
                  "test_base_url_attribute",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_version_attribute",
                "false"
              ],
              [
                "test_base_url_attribute",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_version_attribute",
                "false"
              ],
              [
                "test_base_url_attribute",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_version_attribute",
                "1"
              ],
              [
                "test_base_url_attribute",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_version_attribute",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_base_url_attribute",
                [
                  "actual",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_version_attribute",
                [
                  "self.url"
                ]
              ],
              [
                "test_base_url_attribute",
                [
                  "self.url"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.872281099726396,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_base_url_attribute",
                  "test_version_attribute",
                  0.872281099726396
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_version_attribute",
                "false"
              ],
              [
                "test_base_url_attribute",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_unit_\u0026_test_api_\u0026_test_requests_retriever_\u0026_test_builder_\u0026_request_url_\u0026_test_url_director.py",
    "testCases": [
      {
        "name": "TestURLDirector",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_init_sets_builder_to_none",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_init_sets_builder_to_none",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_init_sets_builder_to_none",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_init_sets_builder_to_none",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_init_sets_builder_to_none",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_init_sets_builder_to_none",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_sets_builder_to_none",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_init_sets_builder_to_none",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_init_sets_builder_to_none",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_sets_builder_to_none",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_sets_builder_to_none",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_init_sets_builder_to_none",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_init_sets_builder_to_none",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_init_sets_builder_to_none",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_sets_builder_to_none",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init_sets_builder_to_none",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_init_sets_builder_to_none",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_init_sets_builder_to_none",
                [
                  "self.url_director"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_init_sets_builder_to_none",
                "true"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_integration_\u0026_test_api_\u0026_test_requests_retriever_\u0026_test_builder_\u0026_test_url_\u0026_test_url_builder.py",
    "testCases": [
      {
        "name": "TestUrlDirector",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_build_auth_url",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_build_session_url",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_build_auth_url",
                  "[]"
                ],
                [
                  "test_build_session_url",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_build_auth_url",
                  "false"
                ],
                [
                  "test_build_session_url",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_build_auth_url",
                  "false"
                ],
                [
                  "test_build_session_url",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_build_auth_url",
                  "false"
                ],
                [
                  "test_build_session_url",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_build_auth_url",
                  "false"
                ],
                [
                  "test_build_session_url",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_build_auth_url",
                "false"
              ],
              [
                "test_build_session_url",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_build_auth_url",
                "false"
              ],
              [
                "test_build_session_url",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_build_auth_url",
                []
              ],
              [
                "test_build_session_url",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_build_auth_url",
                "false"
              ],
              [
                "test_build_session_url",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_build_auth_url",
                "false"
              ],
              [
                "test_build_session_url",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_build_auth_url",
                  "0"
                ],
                [
                  "test_build_session_url",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_build_auth_url",
                  "0"
                ],
                [
                  "test_build_session_url",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_build_auth_url",
                "false"
              ],
              [
                "test_build_session_url",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_build_auth_url",
                "false"
              ],
              [
                "test_build_session_url",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_build_auth_url",
                "1"
              ],
              [
                "test_build_session_url",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_build_auth_url",
                [
                  "actual",
                  "auth",
                  "expected",
                  "url_director"
                ]
              ],
              [
                "test_build_session_url",
                [
                  "actual",
                  "session_parameters",
                  "session",
                  "expected",
                  "url_director"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_build_auth_url",
                []
              ],
              [
                "test_build_session_url",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7441440136477843,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_build_auth_url",
                  "test_build_session_url",
                  0.7441440136477843
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_build_auth_url",
                "false"
              ],
              [
                "test_build_session_url",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_integration_\u0026_test_api_\u0026_test_requests_retriever_\u0026_test_builder_\u0026_test_url_\u0026_test_url_director.py",
    "testCases": [
      {
        "name": "TestGetUrl",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_get_auth_url",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_get_session_url",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_get_auth_url",
                  "[]"
                ],
                [
                  "test_get_session_url",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_get_auth_url",
                  "false"
                ],
                [
                  "test_get_session_url",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_get_auth_url",
                  "false"
                ],
                [
                  "test_get_session_url",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_get_auth_url",
                  "false"
                ],
                [
                  "test_get_session_url",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_get_auth_url",
                  "false"
                ],
                [
                  "test_get_session_url",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_auth_url",
                "false"
              ],
              [
                "test_get_session_url",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_get_auth_url",
                "false"
              ],
              [
                "test_get_session_url",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_get_auth_url",
                []
              ],
              [
                "test_get_session_url",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_auth_url",
                "false"
              ],
              [
                "test_get_session_url",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_auth_url",
                "false"
              ],
              [
                "test_get_session_url",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_get_auth_url",
                  "0"
                ],
                [
                  "test_get_session_url",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_get_auth_url",
                  "0"
                ],
                [
                  "test_get_session_url",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_get_auth_url",
                "false"
              ],
              [
                "test_get_session_url",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_auth_url",
                "false"
              ],
              [
                "test_get_session_url",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_auth_url",
                "1"
              ],
              [
                "test_get_session_url",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_get_auth_url",
                [
                  "actual",
                  "url_builder",
                  "expected"
                ]
              ],
              [
                "test_get_session_url",
                [
                  "actual",
                  "session_parameters",
                  "url_builder",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_get_auth_url",
                []
              ],
              [
                "test_get_session_url",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7323662747289503,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_get_auth_url",
                  "test_get_session_url",
                  0.7323662747289503
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_get_auth_url",
                "false"
              ],
              [
                "test_get_session_url",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_unit_\u0026_test_api_\u0026_test_requests_retriever_\u0026_test_builder_\u0026_request_attributes_\u0026_test_attributes_creator.py",
    "testCases": [
      {
        "name": "TestAttributes",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_get_headers_for_auth",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_is_auth_request",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_get_data_without_username",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_get_headers_includes_metric",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_get_params",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_get_parameters_no_key",
                  "[]"
                ],
                [
                  "test_get_session_headers",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_get_headers_includes_empty_metric",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_get_data_with_username",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_get_headers_for_auth",
                  "[]"
                ],
                [
                  "test_is_auth_request",
                  "[]"
                ],
                [
                  "test_get_data_without_username",
                  "[]"
                ],
                [
                  "test_get_headers_includes_metric",
                  "[]"
                ],
                [
                  "test_get_params",
                  "[]"
                ],
                [
                  "test_get_parameters_no_key",
                  "[]"
                ],
                [
                  "test_get_session_headers",
                  "[]"
                ],
                [
                  "test_get_headers_includes_empty_metric",
                  "[]"
                ],
                [
                  "test_get_data_with_username",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_get_headers_for_auth",
                  "false"
                ],
                [
                  "test_is_auth_request",
                  "false"
                ],
                [
                  "test_get_data_without_username",
                  "false"
                ],
                [
                  "test_get_headers_includes_metric",
                  "false"
                ],
                [
                  "test_get_params",
                  "false"
                ],
                [
                  "test_get_parameters_no_key",
                  "false"
                ],
                [
                  "test_get_session_headers",
                  "true"
                ],
                [
                  "test_get_headers_includes_empty_metric",
                  "false"
                ],
                [
                  "test_get_data_with_username",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_get_headers_for_auth",
                  "false"
                ],
                [
                  "test_is_auth_request",
                  "false"
                ],
                [
                  "test_get_data_without_username",
                  "false"
                ],
                [
                  "test_get_headers_includes_metric",
                  "false"
                ],
                [
                  "test_get_params",
                  "false"
                ],
                [
                  "test_get_parameters_no_key",
                  "false"
                ],
                [
                  "test_get_session_headers",
                  "false"
                ],
                [
                  "test_get_headers_includes_empty_metric",
                  "false"
                ],
                [
                  "test_get_data_with_username",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_get_headers_for_auth",
                  "false"
                ],
                [
                  "test_is_auth_request",
                  "false"
                ],
                [
                  "test_get_data_without_username",
                  "false"
                ],
                [
                  "test_get_headers_includes_metric",
                  "false"
                ],
                [
                  "test_get_params",
                  "false"
                ],
                [
                  "test_get_parameters_no_key",
                  "false"
                ],
                [
                  "test_get_session_headers",
                  "false"
                ],
                [
                  "test_get_headers_includes_empty_metric",
                  "false"
                ],
                [
                  "test_get_data_with_username",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_get_headers_for_auth",
                  "false"
                ],
                [
                  "test_is_auth_request",
                  "false"
                ],
                [
                  "test_get_data_without_username",
                  "false"
                ],
                [
                  "test_get_headers_includes_metric",
                  "false"
                ],
                [
                  "test_get_params",
                  "false"
                ],
                [
                  "test_get_parameters_no_key",
                  "false"
                ],
                [
                  "test_get_session_headers",
                  "false"
                ],
                [
                  "test_get_headers_includes_empty_metric",
                  "false"
                ],
                [
                  "test_get_data_with_username",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_headers_for_auth",
                "false"
              ],
              [
                "test_is_auth_request",
                "false"
              ],
              [
                "test_get_data_without_username",
                "false"
              ],
              [
                "test_get_headers_includes_metric",
                "false"
              ],
              [
                "test_get_params",
                "false"
              ],
              [
                "test_get_parameters_no_key",
                "false"
              ],
              [
                "test_get_session_headers",
                "false"
              ],
              [
                "test_get_headers_includes_empty_metric",
                "false"
              ],
              [
                "test_get_data_with_username",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_get_headers_for_auth",
                "false"
              ],
              [
                "test_is_auth_request",
                "false"
              ],
              [
                "test_get_data_without_username",
                "false"
              ],
              [
                "test_get_headers_includes_metric",
                "false"
              ],
              [
                "test_get_params",
                "false"
              ],
              [
                "test_get_parameters_no_key",
                "false"
              ],
              [
                "test_get_session_headers",
                "false"
              ],
              [
                "test_get_headers_includes_empty_metric",
                "false"
              ],
              [
                "test_get_data_with_username",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_get_headers_for_auth",
                []
              ],
              [
                "test_is_auth_request",
                []
              ],
              [
                "test_get_data_without_username",
                []
              ],
              [
                "test_get_headers_includes_metric",
                []
              ],
              [
                "test_get_params",
                []
              ],
              [
                "test_get_parameters_no_key",
                []
              ],
              [
                "test_get_session_headers",
                []
              ],
              [
                "test_get_headers_includes_empty_metric",
                []
              ],
              [
                "test_get_data_with_username",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_headers_for_auth",
                "false"
              ],
              [
                "test_is_auth_request",
                "false"
              ],
              [
                "test_get_data_without_username",
                "false"
              ],
              [
                "test_get_headers_includes_metric",
                "false"
              ],
              [
                "test_get_params",
                "false"
              ],
              [
                "test_get_parameters_no_key",
                "false"
              ],
              [
                "test_get_session_headers",
                "false"
              ],
              [
                "test_get_headers_includes_empty_metric",
                "false"
              ],
              [
                "test_get_data_with_username",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_headers_for_auth",
                "false"
              ],
              [
                "test_is_auth_request",
                "false"
              ],
              [
                "test_get_data_without_username",
                "false"
              ],
              [
                "test_get_headers_includes_metric",
                "false"
              ],
              [
                "test_get_params",
                "false"
              ],
              [
                "test_get_parameters_no_key",
                "false"
              ],
              [
                "test_get_session_headers",
                "false"
              ],
              [
                "test_get_headers_includes_empty_metric",
                "false"
              ],
              [
                "test_get_data_with_username",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_get_headers_for_auth",
                  "0"
                ],
                [
                  "test_is_auth_request",
                  "0"
                ],
                [
                  "test_get_data_without_username",
                  "0"
                ],
                [
                  "test_get_headers_includes_metric",
                  "0"
                ],
                [
                  "test_get_params",
                  "0"
                ],
                [
                  "test_get_parameters_no_key",
                  "0"
                ],
                [
                  "test_get_session_headers",
                  "0"
                ],
                [
                  "test_get_headers_includes_empty_metric",
                  "0"
                ],
                [
                  "test_get_data_with_username",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_get_headers_for_auth",
                  "0"
                ],
                [
                  "test_is_auth_request",
                  "0"
                ],
                [
                  "test_get_data_without_username",
                  "0"
                ],
                [
                  "test_get_headers_includes_metric",
                  "0"
                ],
                [
                  "test_get_params",
                  "0"
                ],
                [
                  "test_get_parameters_no_key",
                  "0"
                ],
                [
                  "test_get_session_headers",
                  "0"
                ],
                [
                  "test_get_headers_includes_empty_metric",
                  "0"
                ],
                [
                  "test_get_data_with_username",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_get_headers_for_auth",
                "false"
              ],
              [
                "test_is_auth_request",
                "false"
              ],
              [
                "test_get_data_without_username",
                "false"
              ],
              [
                "test_get_headers_includes_metric",
                "false"
              ],
              [
                "test_get_params",
                "false"
              ],
              [
                "test_get_parameters_no_key",
                "false"
              ],
              [
                "test_get_session_headers",
                "false"
              ],
              [
                "test_get_headers_includes_empty_metric",
                "false"
              ],
              [
                "test_get_data_with_username",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_headers_for_auth",
                "false"
              ],
              [
                "test_is_auth_request",
                "false"
              ],
              [
                "test_get_data_without_username",
                "false"
              ],
              [
                "test_get_headers_includes_metric",
                "false"
              ],
              [
                "test_get_params",
                "false"
              ],
              [
                "test_get_parameters_no_key",
                "false"
              ],
              [
                "test_get_session_headers",
                "false"
              ],
              [
                "test_get_headers_includes_empty_metric",
                "false"
              ],
              [
                "test_get_data_with_username",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_headers_for_auth",
                "1"
              ],
              [
                "test_is_auth_request",
                "1"
              ],
              [
                "test_get_data_without_username",
                "1"
              ],
              [
                "test_get_headers_includes_metric",
                "1"
              ],
              [
                "test_get_params",
                "1"
              ],
              [
                "test_get_parameters_no_key",
                "1"
              ],
              [
                "test_get_session_headers",
                "1"
              ],
              [
                "test_get_headers_includes_empty_metric",
                "1"
              ],
              [
                "test_get_data_with_username",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_get_headers_for_auth",
                [
                  "actual",
                  "expected",
                  "test_parameters"
                ]
              ],
              [
                "test_is_auth_request",
                [
                  "actual",
                  "test_parameters",
                  "attributes"
                ]
              ],
              [
                "test_get_data_without_username",
                [
                  "actual",
                  "expected",
                  "test_parameters",
                  "attributes"
                ]
              ],
              [
                "test_get_headers_includes_metric",
                [
                  "actual",
                  "expected",
                  "test_parameters",
                  "attributes"
                ]
              ],
              [
                "test_get_params",
                [
                  "actual",
                  "expected",
                  "test_parameters",
                  "attributes"
                ]
              ],
              [
                "test_get_parameters_no_key",
                [
                  "actual",
                  "expected",
                  "test_parameters",
                  "attributes"
                ]
              ],
              [
                "test_get_session_headers",
                [
                  "error_message",
                  "actual",
                  "expected",
                  "test_params",
                  "attributes",
                  "request_parameters"
                ]
              ],
              [
                "test_get_headers_includes_empty_metric",
                [
                  "actual",
                  "expected",
                  "test_parameters",
                  "attributes"
                ]
              ],
              [
                "test_get_data_with_username",
                [
                  "actual",
                  "expected",
                  "test_parameters",
                  "attributes"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_get_headers_for_auth",
                []
              ],
              [
                "test_is_auth_request",
                []
              ],
              [
                "test_get_data_without_username",
                []
              ],
              [
                "test_get_headers_includes_metric",
                []
              ],
              [
                "test_get_params",
                []
              ],
              [
                "test_get_parameters_no_key",
                []
              ],
              [
                "test_get_session_headers",
                []
              ],
              [
                "test_get_headers_includes_empty_metric",
                []
              ],
              [
                "test_get_data_with_username",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.617583367039846,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_get_headers_includes_empty_metric",
                  "test_get_data_with_username",
                  0.5342657856955441
                ],
                [
                  "test_get_params",
                  "test_get_parameters_no_key",
                  0.5195976703260781
                ],
                [
                  "test_get_headers_includes_empty_metric",
                  "test_get_parameters_no_key",
                  0.592520982633225
                ],
                [
                  "test_get_headers_includes_empty_metric",
                  "test_get_params",
                  0.7319233546535533
                ],
                [
                  "test_get_parameters_no_key",
                  "test_get_data_without_username",
                  0.5657245767937634
                ],
                [
                  "test_get_headers_includes_metric",
                  "test_is_auth_request",
                  0.6032997499048828
                ],
                [
                  "test_get_params",
                  "test_get_data_without_username",
                  0.5212438356215101
                ],
                [
                  "test_get_data_with_username",
                  "test_get_session_headers",
                  0.4100431453840172
                ],
                [
                  "test_get_headers_for_auth",
                  "test_get_data_with_username",
                  0.5779621933350904
                ],
                [
                  "test_get_headers_for_auth",
                  "test_get_params",
                  0.6637134795350373
                ],
                [
                  "test_get_params",
                  "test_get_data_with_username",
                  0.5143705883459369
                ],
                [
                  "test_get_headers_for_auth",
                  "test_get_parameters_no_key",
                  0.5521774451993557
                ],
                [
                  "test_get_parameters_no_key",
                  "test_get_data_with_username",
                  0.39415282762362486
                ],
                [
                  "test_get_headers_includes_empty_metric",
                  "test_get_headers_for_auth",
                  0.786091001071174
                ],
                [
                  "test_get_data_with_username",
                  "test_get_data_without_username",
                  0.7951620181564949
                ],
                [
                  "test_get_data_with_username",
                  "test_is_auth_request",
                  0.701504838712782
                ],
                [
                  "test_get_headers_includes_metric",
                  "test_get_parameters_no_key",
                  0.5413127381832803
                ],
                [
                  "test_get_headers_includes_metric",
                  "test_get_session_headers",
                  0.8429870737628976
                ],
                [
                  "test_is_auth_request",
                  "test_get_session_headers",
                  0.519775958852932
                ],
                [
                  "test_get_headers_for_auth",
                  "test_get_session_headers",
                  0.6156122740240678
                ],
                [
                  "test_get_headers_includes_empty_metric",
                  "test_get_data_without_username",
                  0.6406445512184747
                ],
                [
                  "test_get_data_without_username",
                  "test_get_session_headers",
                  0.5118450930334656
                ],
                [
                  "test_get_headers_for_auth",
                  "test_get_data_without_username",
                  0.6486095158188672
                ],
                [
                  "test_get_headers_includes_metric",
                  "test_get_data_without_username",
                  0.5840250605220888
                ],
                [
                  "test_get_data_without_username",
                  "test_is_auth_request",
                  0.6833302748143714
                ],
                [
                  "test_get_headers_includes_empty_metric",
                  "test_get_headers_includes_metric",
                  0.929729488601745
                ],
                [
                  "test_get_headers_for_auth",
                  "test_is_auth_request",
                  0.6219555004188635
                ],
                [
                  "test_get_headers_includes_empty_metric",
                  "test_get_session_headers",
                  0.7737894387741692
                ],
                [
                  "test_get_headers_includes_metric",
                  "test_get_params",
                  0.7320526250597003
                ],
                [
                  "test_get_params",
                  "test_is_auth_request",
                  0.5323965832080034
                ],
                [
                  "test_get_headers_includes_metric",
                  "test_get_data_with_username",
                  0.49833425411548193
                ],
                [
                  "test_get_parameters_no_key",
                  "test_get_session_headers",
                  0.5400082189747976
                ],
                [
                  "test_get_headers_includes_empty_metric",
                  "test_is_auth_request",
                  0.6133643620776932
                ],
                [
                  "test_get_params",
                  "test_get_session_headers",
                  0.6455998169423929
                ],
                [
                  "test_get_headers_includes_metric",
                  "test_get_headers_for_auth",
                  0.75913410210597
                ],
                [
                  "test_get_parameters_no_key",
                  "test_is_auth_request",
                  0.5347407899331232
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_get_headers_for_auth",
                "false"
              ],
              [
                "test_is_auth_request",
                "false"
              ],
              [
                "test_get_data_without_username",
                "false"
              ],
              [
                "test_get_headers_includes_metric",
                "false"
              ],
              [
                "test_get_params",
                "false"
              ],
              [
                "test_get_parameters_no_key",
                "false"
              ],
              [
                "test_get_session_headers",
                "false"
              ],
              [
                "test_get_headers_includes_empty_metric",
                "false"
              ],
              [
                "test_get_data_with_username",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 9
      }
    ]
  }
]