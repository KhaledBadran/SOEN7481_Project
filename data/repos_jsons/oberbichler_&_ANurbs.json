[
  {
    "name": "tests_\u0026_TestCurve.py",
    "testCases": [
      {
        "name": "TestCurve",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_bspline_3d",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_bspline_3d",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_bspline_3d",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_bspline_3d",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_bspline_3d",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_bspline_3d",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bspline_3d",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_bspline_3d",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_bspline_3d",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bspline_3d",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bspline_3d",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_bspline_3d",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_bspline_3d",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_bspline_3d",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bspline_3d",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bspline_3d",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_bspline_3d",
                [
                  "curve_geometry",
                  "curve",
                  "model",
                  "curve_geometry_ptr"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_bspline_3d",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_bspline_3d",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_TestNurbs.py",
    "testCases": [
      {
        "name": "TestNurbs",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_knot_vector",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_knot_vector",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_knot_vector",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_knot_vector",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_knot_vector",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_knot_vector",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_knot_vector",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_knot_vector",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_knot_vector",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_knot_vector",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_knot_vector",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_knot_vector",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_knot_vector",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_knot_vector",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_knot_vector",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_knot_vector",
                "12"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_knot_vector",
                [
                  "nb_knots",
                  "degree",
                  "knots",
                  "nb_poles"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_knot_vector",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_knot_vector",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_TestRTree.py",
    "testCases": [
      {
        "name": "TestRTree",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_create_2d",
                  "[]"
                ],
                [
                  "test_by_box_2d",
                  "[]"
                ],
                [
                  "test_by_ray_2d",
                  "[]"
                ],
                [
                  "test_by_box_3d",
                  "[]"
                ],
                [
                  "test_by_ray_3d",
                  "[]"
                ],
                [
                  "test_create_3d",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_create_2d",
                  "[]"
                ],
                [
                  "test_by_box_2d",
                  "[]"
                ],
                [
                  "test_by_ray_2d",
                  "[]"
                ],
                [
                  "test_by_box_3d",
                  "[]"
                ],
                [
                  "test_by_ray_3d",
                  "[]"
                ],
                [
                  "test_create_3d",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_create_2d",
                  "false"
                ],
                [
                  "test_by_box_2d",
                  "false"
                ],
                [
                  "test_by_ray_2d",
                  "false"
                ],
                [
                  "test_by_box_3d",
                  "false"
                ],
                [
                  "test_by_ray_3d",
                  "false"
                ],
                [
                  "test_create_3d",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_create_2d",
                  "false"
                ],
                [
                  "test_by_box_2d",
                  "false"
                ],
                [
                  "test_by_ray_2d",
                  "false"
                ],
                [
                  "test_by_box_3d",
                  "false"
                ],
                [
                  "test_by_ray_3d",
                  "false"
                ],
                [
                  "test_create_3d",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_create_2d",
                  "false"
                ],
                [
                  "test_by_box_2d",
                  "false"
                ],
                [
                  "test_by_ray_2d",
                  "false"
                ],
                [
                  "test_by_box_3d",
                  "false"
                ],
                [
                  "test_by_ray_3d",
                  "false"
                ],
                [
                  "test_create_3d",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_create_2d",
                  "false"
                ],
                [
                  "test_by_box_2d",
                  "false"
                ],
                [
                  "test_by_ray_2d",
                  "false"
                ],
                [
                  "test_by_box_3d",
                  "false"
                ],
                [
                  "test_by_ray_3d",
                  "false"
                ],
                [
                  "test_create_3d",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_create_2d",
                "false"
              ],
              [
                "test_by_box_2d",
                "false"
              ],
              [
                "test_by_ray_2d",
                "false"
              ],
              [
                "test_by_box_3d",
                "false"
              ],
              [
                "test_by_ray_3d",
                "false"
              ],
              [
                "test_create_3d",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_create_2d",
                "false"
              ],
              [
                "test_by_box_2d",
                "false"
              ],
              [
                "test_by_ray_2d",
                "false"
              ],
              [
                "test_by_box_3d",
                "false"
              ],
              [
                "test_by_ray_3d",
                "false"
              ],
              [
                "test_create_3d",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_create_2d",
                []
              ],
              [
                "test_by_box_2d",
                []
              ],
              [
                "test_by_ray_2d",
                []
              ],
              [
                "test_by_box_3d",
                []
              ],
              [
                "test_by_ray_3d",
                []
              ],
              [
                "test_create_3d",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_create_2d",
                "false"
              ],
              [
                "test_by_box_2d",
                "false"
              ],
              [
                "test_by_ray_2d",
                "false"
              ],
              [
                "test_by_box_3d",
                "false"
              ],
              [
                "test_by_ray_3d",
                "false"
              ],
              [
                "test_create_3d",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_create_2d",
                "false"
              ],
              [
                "test_by_box_2d",
                "false"
              ],
              [
                "test_by_ray_2d",
                "false"
              ],
              [
                "test_by_box_3d",
                "false"
              ],
              [
                "test_by_ray_3d",
                "false"
              ],
              [
                "test_create_3d",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_create_2d",
                  "0"
                ],
                [
                  "test_by_box_2d",
                  "0"
                ],
                [
                  "test_by_ray_2d",
                  "0"
                ],
                [
                  "test_by_box_3d",
                  "0"
                ],
                [
                  "test_by_ray_3d",
                  "0"
                ],
                [
                  "test_create_3d",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_create_2d",
                  "0"
                ],
                [
                  "test_by_box_2d",
                  "0"
                ],
                [
                  "test_by_ray_2d",
                  "0"
                ],
                [
                  "test_by_box_3d",
                  "0"
                ],
                [
                  "test_by_ray_3d",
                  "0"
                ],
                [
                  "test_create_3d",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_create_2d",
                "false"
              ],
              [
                "test_by_box_2d",
                "false"
              ],
              [
                "test_by_ray_2d",
                "false"
              ],
              [
                "test_by_box_3d",
                "false"
              ],
              [
                "test_by_ray_3d",
                "false"
              ],
              [
                "test_create_3d",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_create_2d",
                "false"
              ],
              [
                "test_by_box_2d",
                "false"
              ],
              [
                "test_by_ray_2d",
                "false"
              ],
              [
                "test_by_box_3d",
                "false"
              ],
              [
                "test_by_ray_3d",
                "false"
              ],
              [
                "test_create_3d",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_create_2d",
                "8"
              ],
              [
                "test_by_box_2d",
                "1"
              ],
              [
                "test_by_ray_2d",
                "1"
              ],
              [
                "test_by_box_3d",
                "1"
              ],
              [
                "test_by_ray_3d",
                "1"
              ],
              [
                "test_create_3d",
                "8"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_create_2d",
                [
                  "index"
                ]
              ],
              [
                "test_by_box_2d",
                [
                  "index",
                  "ids"
                ]
              ],
              [
                "test_by_ray_2d",
                [
                  "index",
                  "ids"
                ]
              ],
              [
                "test_by_box_3d",
                [
                  "index",
                  "ids"
                ]
              ],
              [
                "test_by_ray_3d",
                [
                  "index",
                  "ids"
                ]
              ],
              [
                "test_create_3d",
                [
                  "index"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_create_2d",
                []
              ],
              [
                "test_by_box_2d",
                []
              ],
              [
                "test_by_ray_2d",
                []
              ],
              [
                "test_by_box_3d",
                []
              ],
              [
                "test_by_ray_3d",
                []
              ],
              [
                "test_create_3d",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8018702953044465,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_by_box_3d",
                  "test_by_ray_3d",
                  0.9047372630251854
                ],
                [
                  "test_create_2d",
                  "test_create_3d",
                  0.9839425759279966
                ],
                [
                  "test_create_2d",
                  "test_by_box_2d",
                  0.7224548744428465
                ],
                [
                  "test_by_box_2d",
                  "test_create_3d",
                  0.7647790840824139
                ],
                [
                  "test_by_ray_2d",
                  "test_by_box_3d",
                  0.9452713150243336
                ],
                [
                  "test_by_ray_2d",
                  "test_by_ray_3d",
                  0.9296696802013682
                ],
                [
                  "test_create_2d",
                  "test_by_box_3d",
                  0.606809888473381
                ],
                [
                  "test_create_3d",
                  "test_by_ray_3d",
                  0.6897489428726739
                ],
                [
                  "test_by_box_2d",
                  "test_by_ray_3d",
                  0.8994686091253232
                ],
                [
                  "test_create_2d",
                  "test_by_ray_3d",
                  0.6048093377051724
                ],
                [
                  "test_by_box_2d",
                  "test_by_box_3d",
                  0.9117611698759849
                ],
                [
                  "test_create_2d",
                  "test_by_ray_2d",
                  0.6784165697752331
                ],
                [
                  "test_by_box_2d",
                  "test_by_ray_2d",
                  0.9571697002754778
                ],
                [
                  "test_by_ray_2d",
                  "test_create_3d",
                  0.7336853941304219
                ],
                [
                  "test_create_3d",
                  "test_by_box_3d",
                  0.6953300246288852
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_create_2d",
                "false"
              ],
              [
                "test_by_box_2d",
                "false"
              ],
              [
                "test_by_ray_2d",
                "false"
              ],
              [
                "test_by_box_3d",
                "false"
              ],
              [
                "test_by_ray_3d",
                "false"
              ],
              [
                "test_create_3d",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      }
    ]
  },
  {
    "name": "tests_\u0026_TestSurface.py",
    "testCases": [
      {
        "name": "TestNurbsSurfaceGeometry",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_bspline_3d",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_bspline_3d",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_bspline_3d",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_bspline_3d",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_bspline_3d",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_bspline_3d",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bspline_3d",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_bspline_3d",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_bspline_3d",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bspline_3d",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bspline_3d",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_bspline_3d",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_bspline_3d",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_bspline_3d",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bspline_3d",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bspline_3d",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_bspline_3d",
                [
                  "surface",
                  "surface_geometry",
                  "model",
                  "surface_geometry_ptr"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_bspline_3d",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_bspline_3d",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_TestHilbertCurve.py",
    "testCases": [
      {
        "name": "TestHilbertCurve",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_bit_3d",
                  "[]"
                ],
                [
                  "test_rol_2d",
                  "[]"
                ],
                [
                  "test_g_2d",
                  "[]"
                ],
                [
                  "test_evaluate_3d",
                  "[]"
                ],
                [
                  "test_inverse_gc_3d",
                  "[]"
                ],
                [
                  "test_evaluate_2d",
                  "[]"
                ],
                [
                  "test_inverse_gc_2d",
                  "[]"
                ],
                [
                  "test_t_2d",
                  "[]"
                ],
                [
                  "test_ror_2d",
                  "[]"
                ],
                [
                  "test_rol_3d",
                  "[]"
                ],
                [
                  "test_ror_3d",
                  "[]"
                ],
                [
                  "test_inverse_t_3d",
                  "[]"
                ],
                [
                  "test_e_2d",
                  "[]"
                ],
                [
                  "test_gc_3d",
                  "[]"
                ],
                [
                  "test_t_3d",
                  "[]"
                ],
                [
                  "test_project_2d",
                  "[]"
                ],
                [
                  "test_bit_2d",
                  "[]"
                ],
                [
                  "test_g_3d",
                  "[]"
                ],
                [
                  "test_project_3d",
                  "[]"
                ],
                [
                  "test_end_point_2d",
                  "[]"
                ],
                [
                  "test_e_3d",
                  "[]"
                ],
                [
                  "test_gc_2d",
                  "[]"
                ],
                [
                  "test_end_point_3d",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_bit_3d",
                  "[]"
                ],
                [
                  "test_rol_2d",
                  "[]"
                ],
                [
                  "test_g_2d",
                  "[]"
                ],
                [
                  "test_evaluate_3d",
                  "[]"
                ],
                [
                  "test_inverse_gc_3d",
                  "[]"
                ],
                [
                  "test_evaluate_2d",
                  "[]"
                ],
                [
                  "test_inverse_gc_2d",
                  "[]"
                ],
                [
                  "test_t_2d",
                  "[]"
                ],
                [
                  "test_ror_2d",
                  "[]"
                ],
                [
                  "test_rol_3d",
                  "[]"
                ],
                [
                  "test_ror_3d",
                  "[]"
                ],
                [
                  "test_inverse_t_3d",
                  "[]"
                ],
                [
                  "test_e_2d",
                  "[]"
                ],
                [
                  "test_gc_3d",
                  "[]"
                ],
                [
                  "test_t_3d",
                  "[]"
                ],
                [
                  "test_project_2d",
                  "[]"
                ],
                [
                  "test_bit_2d",
                  "[]"
                ],
                [
                  "test_g_3d",
                  "[]"
                ],
                [
                  "test_project_3d",
                  "[]"
                ],
                [
                  "test_end_point_2d",
                  "[]"
                ],
                [
                  "test_e_3d",
                  "[]"
                ],
                [
                  "test_gc_2d",
                  "[]"
                ],
                [
                  "test_end_point_3d",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_bit_3d",
                  "false"
                ],
                [
                  "test_rol_2d",
                  "false"
                ],
                [
                  "test_g_2d",
                  "false"
                ],
                [
                  "test_evaluate_3d",
                  "false"
                ],
                [
                  "test_inverse_gc_3d",
                  "false"
                ],
                [
                  "test_evaluate_2d",
                  "false"
                ],
                [
                  "test_inverse_gc_2d",
                  "false"
                ],
                [
                  "test_t_2d",
                  "true"
                ],
                [
                  "test_ror_2d",
                  "false"
                ],
                [
                  "test_rol_3d",
                  "false"
                ],
                [
                  "test_ror_3d",
                  "false"
                ],
                [
                  "test_inverse_t_3d",
                  "true"
                ],
                [
                  "test_e_2d",
                  "false"
                ],
                [
                  "test_gc_3d",
                  "false"
                ],
                [
                  "test_t_3d",
                  "true"
                ],
                [
                  "test_project_2d",
                  "true"
                ],
                [
                  "test_bit_2d",
                  "false"
                ],
                [
                  "test_g_3d",
                  "false"
                ],
                [
                  "test_project_3d",
                  "true"
                ],
                [
                  "test_end_point_2d",
                  "true"
                ],
                [
                  "test_e_3d",
                  "false"
                ],
                [
                  "test_gc_2d",
                  "false"
                ],
                [
                  "test_end_point_3d",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_bit_3d",
                  "false"
                ],
                [
                  "test_rol_2d",
                  "false"
                ],
                [
                  "test_g_2d",
                  "false"
                ],
                [
                  "test_evaluate_3d",
                  "true"
                ],
                [
                  "test_inverse_gc_3d",
                  "true"
                ],
                [
                  "test_evaluate_2d",
                  "true"
                ],
                [
                  "test_inverse_gc_2d",
                  "true"
                ],
                [
                  "test_t_2d",
                  "false"
                ],
                [
                  "test_ror_2d",
                  "false"
                ],
                [
                  "test_rol_3d",
                  "false"
                ],
                [
                  "test_ror_3d",
                  "false"
                ],
                [
                  "test_inverse_t_3d",
                  "false"
                ],
                [
                  "test_e_2d",
                  "false"
                ],
                [
                  "test_gc_3d",
                  "false"
                ],
                [
                  "test_t_3d",
                  "false"
                ],
                [
                  "test_project_2d",
                  "false"
                ],
                [
                  "test_bit_2d",
                  "false"
                ],
                [
                  "test_g_3d",
                  "false"
                ],
                [
                  "test_project_3d",
                  "false"
                ],
                [
                  "test_end_point_2d",
                  "false"
                ],
                [
                  "test_e_3d",
                  "false"
                ],
                [
                  "test_gc_2d",
                  "false"
                ],
                [
                  "test_end_point_3d",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_bit_3d",
                  "false"
                ],
                [
                  "test_rol_2d",
                  "false"
                ],
                [
                  "test_g_2d",
                  "false"
                ],
                [
                  "test_evaluate_3d",
                  "false"
                ],
                [
                  "test_inverse_gc_3d",
                  "false"
                ],
                [
                  "test_evaluate_2d",
                  "false"
                ],
                [
                  "test_inverse_gc_2d",
                  "false"
                ],
                [
                  "test_t_2d",
                  "false"
                ],
                [
                  "test_ror_2d",
                  "false"
                ],
                [
                  "test_rol_3d",
                  "false"
                ],
                [
                  "test_ror_3d",
                  "false"
                ],
                [
                  "test_inverse_t_3d",
                  "false"
                ],
                [
                  "test_e_2d",
                  "false"
                ],
                [
                  "test_gc_3d",
                  "false"
                ],
                [
                  "test_t_3d",
                  "false"
                ],
                [
                  "test_project_2d",
                  "false"
                ],
                [
                  "test_bit_2d",
                  "false"
                ],
                [
                  "test_g_3d",
                  "false"
                ],
                [
                  "test_project_3d",
                  "false"
                ],
                [
                  "test_end_point_2d",
                  "false"
                ],
                [
                  "test_e_3d",
                  "false"
                ],
                [
                  "test_gc_2d",
                  "false"
                ],
                [
                  "test_end_point_3d",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_bit_3d",
                  "false"
                ],
                [
                  "test_rol_2d",
                  "false"
                ],
                [
                  "test_g_2d",
                  "false"
                ],
                [
                  "test_evaluate_3d",
                  "false"
                ],
                [
                  "test_inverse_gc_3d",
                  "false"
                ],
                [
                  "test_evaluate_2d",
                  "false"
                ],
                [
                  "test_inverse_gc_2d",
                  "false"
                ],
                [
                  "test_t_2d",
                  "false"
                ],
                [
                  "test_ror_2d",
                  "false"
                ],
                [
                  "test_rol_3d",
                  "false"
                ],
                [
                  "test_ror_3d",
                  "false"
                ],
                [
                  "test_inverse_t_3d",
                  "false"
                ],
                [
                  "test_e_2d",
                  "false"
                ],
                [
                  "test_gc_3d",
                  "false"
                ],
                [
                  "test_t_3d",
                  "false"
                ],
                [
                  "test_project_2d",
                  "false"
                ],
                [
                  "test_bit_2d",
                  "false"
                ],
                [
                  "test_g_3d",
                  "false"
                ],
                [
                  "test_project_3d",
                  "false"
                ],
                [
                  "test_end_point_2d",
                  "false"
                ],
                [
                  "test_e_3d",
                  "false"
                ],
                [
                  "test_gc_2d",
                  "false"
                ],
                [
                  "test_end_point_3d",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bit_3d",
                "false"
              ],
              [
                "test_rol_2d",
                "false"
              ],
              [
                "test_g_2d",
                "false"
              ],
              [
                "test_evaluate_3d",
                "false"
              ],
              [
                "test_inverse_gc_3d",
                "false"
              ],
              [
                "test_evaluate_2d",
                "false"
              ],
              [
                "test_inverse_gc_2d",
                "false"
              ],
              [
                "test_t_2d",
                "false"
              ],
              [
                "test_ror_2d",
                "false"
              ],
              [
                "test_rol_3d",
                "false"
              ],
              [
                "test_ror_3d",
                "false"
              ],
              [
                "test_inverse_t_3d",
                "false"
              ],
              [
                "test_e_2d",
                "false"
              ],
              [
                "test_gc_3d",
                "false"
              ],
              [
                "test_t_3d",
                "false"
              ],
              [
                "test_project_2d",
                "false"
              ],
              [
                "test_bit_2d",
                "false"
              ],
              [
                "test_g_3d",
                "false"
              ],
              [
                "test_project_3d",
                "false"
              ],
              [
                "test_end_point_2d",
                "false"
              ],
              [
                "test_e_3d",
                "false"
              ],
              [
                "test_gc_2d",
                "false"
              ],
              [
                "test_end_point_3d",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_bit_3d",
                "false"
              ],
              [
                "test_rol_2d",
                "false"
              ],
              [
                "test_g_2d",
                "false"
              ],
              [
                "test_evaluate_3d",
                "false"
              ],
              [
                "test_inverse_gc_3d",
                "false"
              ],
              [
                "test_evaluate_2d",
                "false"
              ],
              [
                "test_inverse_gc_2d",
                "false"
              ],
              [
                "test_t_2d",
                "false"
              ],
              [
                "test_ror_2d",
                "false"
              ],
              [
                "test_rol_3d",
                "false"
              ],
              [
                "test_ror_3d",
                "false"
              ],
              [
                "test_inverse_t_3d",
                "false"
              ],
              [
                "test_e_2d",
                "false"
              ],
              [
                "test_gc_3d",
                "false"
              ],
              [
                "test_t_3d",
                "false"
              ],
              [
                "test_project_2d",
                "false"
              ],
              [
                "test_bit_2d",
                "false"
              ],
              [
                "test_g_3d",
                "false"
              ],
              [
                "test_project_3d",
                "false"
              ],
              [
                "test_end_point_2d",
                "false"
              ],
              [
                "test_e_3d",
                "false"
              ],
              [
                "test_gc_2d",
                "false"
              ],
              [
                "test_end_point_3d",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_bit_3d",
                []
              ],
              [
                "test_rol_2d",
                []
              ],
              [
                "test_g_2d",
                []
              ],
              [
                "test_evaluate_3d",
                []
              ],
              [
                "test_inverse_gc_3d",
                []
              ],
              [
                "test_evaluate_2d",
                []
              ],
              [
                "test_inverse_gc_2d",
                []
              ],
              [
                "test_t_2d",
                []
              ],
              [
                "test_ror_2d",
                []
              ],
              [
                "test_rol_3d",
                []
              ],
              [
                "test_ror_3d",
                []
              ],
              [
                "test_inverse_t_3d",
                []
              ],
              [
                "test_e_2d",
                []
              ],
              [
                "test_gc_3d",
                []
              ],
              [
                "test_t_3d",
                []
              ],
              [
                "test_project_2d",
                []
              ],
              [
                "test_bit_2d",
                []
              ],
              [
                "test_g_3d",
                []
              ],
              [
                "test_project_3d",
                []
              ],
              [
                "test_end_point_2d",
                []
              ],
              [
                "test_e_3d",
                []
              ],
              [
                "test_gc_2d",
                []
              ],
              [
                "test_end_point_3d",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bit_3d",
                "false"
              ],
              [
                "test_rol_2d",
                "false"
              ],
              [
                "test_g_2d",
                "false"
              ],
              [
                "test_evaluate_3d",
                "false"
              ],
              [
                "test_inverse_gc_3d",
                "false"
              ],
              [
                "test_evaluate_2d",
                "false"
              ],
              [
                "test_inverse_gc_2d",
                "false"
              ],
              [
                "test_t_2d",
                "false"
              ],
              [
                "test_ror_2d",
                "false"
              ],
              [
                "test_rol_3d",
                "false"
              ],
              [
                "test_ror_3d",
                "false"
              ],
              [
                "test_inverse_t_3d",
                "false"
              ],
              [
                "test_e_2d",
                "false"
              ],
              [
                "test_gc_3d",
                "false"
              ],
              [
                "test_t_3d",
                "false"
              ],
              [
                "test_project_2d",
                "false"
              ],
              [
                "test_bit_2d",
                "false"
              ],
              [
                "test_g_3d",
                "false"
              ],
              [
                "test_project_3d",
                "false"
              ],
              [
                "test_end_point_2d",
                "false"
              ],
              [
                "test_e_3d",
                "false"
              ],
              [
                "test_gc_2d",
                "false"
              ],
              [
                "test_end_point_3d",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bit_3d",
                "false"
              ],
              [
                "test_rol_2d",
                "false"
              ],
              [
                "test_g_2d",
                "false"
              ],
              [
                "test_evaluate_3d",
                "false"
              ],
              [
                "test_inverse_gc_3d",
                "false"
              ],
              [
                "test_evaluate_2d",
                "false"
              ],
              [
                "test_inverse_gc_2d",
                "false"
              ],
              [
                "test_t_2d",
                "false"
              ],
              [
                "test_ror_2d",
                "false"
              ],
              [
                "test_rol_3d",
                "false"
              ],
              [
                "test_ror_3d",
                "false"
              ],
              [
                "test_inverse_t_3d",
                "false"
              ],
              [
                "test_e_2d",
                "false"
              ],
              [
                "test_gc_3d",
                "false"
              ],
              [
                "test_t_3d",
                "false"
              ],
              [
                "test_project_2d",
                "false"
              ],
              [
                "test_bit_2d",
                "false"
              ],
              [
                "test_g_3d",
                "false"
              ],
              [
                "test_project_3d",
                "false"
              ],
              [
                "test_end_point_2d",
                "false"
              ],
              [
                "test_e_3d",
                "false"
              ],
              [
                "test_gc_2d",
                "false"
              ],
              [
                "test_end_point_3d",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_bit_3d",
                  "0"
                ],
                [
                  "test_rol_2d",
                  "0"
                ],
                [
                  "test_g_2d",
                  "0"
                ],
                [
                  "test_evaluate_3d",
                  "0"
                ],
                [
                  "test_inverse_gc_3d",
                  "0"
                ],
                [
                  "test_evaluate_2d",
                  "0"
                ],
                [
                  "test_inverse_gc_2d",
                  "0"
                ],
                [
                  "test_t_2d",
                  "0"
                ],
                [
                  "test_ror_2d",
                  "0"
                ],
                [
                  "test_rol_3d",
                  "0"
                ],
                [
                  "test_ror_3d",
                  "0"
                ],
                [
                  "test_inverse_t_3d",
                  "0"
                ],
                [
                  "test_e_2d",
                  "0"
                ],
                [
                  "test_gc_3d",
                  "0"
                ],
                [
                  "test_t_3d",
                  "0"
                ],
                [
                  "test_project_2d",
                  "0"
                ],
                [
                  "test_bit_2d",
                  "0"
                ],
                [
                  "test_g_3d",
                  "0"
                ],
                [
                  "test_project_3d",
                  "0"
                ],
                [
                  "test_end_point_2d",
                  "0"
                ],
                [
                  "test_e_3d",
                  "0"
                ],
                [
                  "test_gc_2d",
                  "0"
                ],
                [
                  "test_end_point_3d",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_bit_3d",
                  "0"
                ],
                [
                  "test_rol_2d",
                  "0"
                ],
                [
                  "test_g_2d",
                  "0"
                ],
                [
                  "test_evaluate_3d",
                  "0"
                ],
                [
                  "test_inverse_gc_3d",
                  "0"
                ],
                [
                  "test_evaluate_2d",
                  "0"
                ],
                [
                  "test_inverse_gc_2d",
                  "0"
                ],
                [
                  "test_t_2d",
                  "0"
                ],
                [
                  "test_ror_2d",
                  "0"
                ],
                [
                  "test_rol_3d",
                  "0"
                ],
                [
                  "test_ror_3d",
                  "0"
                ],
                [
                  "test_inverse_t_3d",
                  "0"
                ],
                [
                  "test_e_2d",
                  "0"
                ],
                [
                  "test_gc_3d",
                  "0"
                ],
                [
                  "test_t_3d",
                  "0"
                ],
                [
                  "test_project_2d",
                  "0"
                ],
                [
                  "test_bit_2d",
                  "0"
                ],
                [
                  "test_g_3d",
                  "0"
                ],
                [
                  "test_project_3d",
                  "0"
                ],
                [
                  "test_end_point_2d",
                  "0"
                ],
                [
                  "test_e_3d",
                  "0"
                ],
                [
                  "test_gc_2d",
                  "0"
                ],
                [
                  "test_end_point_3d",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_bit_3d",
                "false"
              ],
              [
                "test_rol_2d",
                "false"
              ],
              [
                "test_g_2d",
                "false"
              ],
              [
                "test_evaluate_3d",
                "false"
              ],
              [
                "test_inverse_gc_3d",
                "false"
              ],
              [
                "test_evaluate_2d",
                "false"
              ],
              [
                "test_inverse_gc_2d",
                "false"
              ],
              [
                "test_t_2d",
                "false"
              ],
              [
                "test_ror_2d",
                "false"
              ],
              [
                "test_rol_3d",
                "false"
              ],
              [
                "test_ror_3d",
                "false"
              ],
              [
                "test_inverse_t_3d",
                "false"
              ],
              [
                "test_e_2d",
                "false"
              ],
              [
                "test_gc_3d",
                "false"
              ],
              [
                "test_t_3d",
                "false"
              ],
              [
                "test_project_2d",
                "false"
              ],
              [
                "test_bit_2d",
                "false"
              ],
              [
                "test_g_3d",
                "false"
              ],
              [
                "test_project_3d",
                "false"
              ],
              [
                "test_end_point_2d",
                "false"
              ],
              [
                "test_e_3d",
                "false"
              ],
              [
                "test_gc_2d",
                "false"
              ],
              [
                "test_end_point_3d",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bit_3d",
                "false"
              ],
              [
                "test_rol_2d",
                "false"
              ],
              [
                "test_g_2d",
                "false"
              ],
              [
                "test_evaluate_3d",
                "false"
              ],
              [
                "test_inverse_gc_3d",
                "false"
              ],
              [
                "test_evaluate_2d",
                "false"
              ],
              [
                "test_inverse_gc_2d",
                "false"
              ],
              [
                "test_t_2d",
                "false"
              ],
              [
                "test_ror_2d",
                "false"
              ],
              [
                "test_rol_3d",
                "false"
              ],
              [
                "test_ror_3d",
                "false"
              ],
              [
                "test_inverse_t_3d",
                "false"
              ],
              [
                "test_e_2d",
                "false"
              ],
              [
                "test_gc_3d",
                "false"
              ],
              [
                "test_t_3d",
                "false"
              ],
              [
                "test_project_2d",
                "false"
              ],
              [
                "test_bit_2d",
                "false"
              ],
              [
                "test_g_3d",
                "false"
              ],
              [
                "test_project_3d",
                "false"
              ],
              [
                "test_end_point_2d",
                "false"
              ],
              [
                "test_e_3d",
                "false"
              ],
              [
                "test_gc_2d",
                "false"
              ],
              [
                "test_end_point_3d",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_bit_3d",
                "0"
              ],
              [
                "test_rol_2d",
                "7"
              ],
              [
                "test_g_2d",
                "0"
              ],
              [
                "test_evaluate_3d",
                "1"
              ],
              [
                "test_inverse_gc_3d",
                "1"
              ],
              [
                "test_evaluate_2d",
                "1"
              ],
              [
                "test_inverse_gc_2d",
                "1"
              ],
              [
                "test_t_2d",
                "1"
              ],
              [
                "test_ror_2d",
                "7"
              ],
              [
                "test_rol_3d",
                "9"
              ],
              [
                "test_ror_3d",
                "9"
              ],
              [
                "test_inverse_t_3d",
                "1"
              ],
              [
                "test_e_2d",
                "0"
              ],
              [
                "test_gc_3d",
                "0"
              ],
              [
                "test_t_3d",
                "1"
              ],
              [
                "test_project_2d",
                "1"
              ],
              [
                "test_bit_2d",
                "0"
              ],
              [
                "test_g_3d",
                "0"
              ],
              [
                "test_project_3d",
                "1"
              ],
              [
                "test_end_point_2d",
                "1"
              ],
              [
                "test_e_3d",
                "0"
              ],
              [
                "test_gc_2d",
                "0"
              ],
              [
                "test_end_point_3d",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_bit_3d",
                []
              ],
              [
                "test_rol_2d",
                [
                  "actual",
                  "b"
                ]
              ],
              [
                "test_g_2d",
                []
              ],
              [
                "test_evaluate_3d",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_inverse_gc_3d",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_evaluate_2d",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_inverse_gc_2d",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_t_2d",
                [
                  "actual",
                  "data"
                ]
              ],
              [
                "test_ror_2d",
                [
                  "actual",
                  "b"
                ]
              ],
              [
                "test_rol_3d",
                [
                  "actual",
                  "b"
                ]
              ],
              [
                "test_ror_3d",
                [
                  "actual",
                  "b"
                ]
              ],
              [
                "test_inverse_t_3d",
                [
                  "actual",
                  "data"
                ]
              ],
              [
                "test_e_2d",
                []
              ],
              [
                "test_gc_3d",
                []
              ],
              [
                "test_t_3d",
                [
                  "actual",
                  "data"
                ]
              ],
              [
                "test_project_2d",
                [
                  "p",
                  "h"
                ]
              ],
              [
                "test_bit_2d",
                []
              ],
              [
                "test_g_3d",
                []
              ],
              [
                "test_project_3d",
                [
                  "p",
                  "h"
                ]
              ],
              [
                "test_end_point_2d",
                [
                  "p",
                  "n"
                ]
              ],
              [
                "test_e_3d",
                []
              ],
              [
                "test_gc_2d",
                []
              ],
              [
                "test_end_point_3d",
                [
                  "p",
                  "n"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_bit_3d",
                []
              ],
              [
                "test_rol_2d",
                []
              ],
              [
                "test_g_2d",
                []
              ],
              [
                "test_evaluate_3d",
                []
              ],
              [
                "test_inverse_gc_3d",
                []
              ],
              [
                "test_evaluate_2d",
                []
              ],
              [
                "test_inverse_gc_2d",
                []
              ],
              [
                "test_t_2d",
                []
              ],
              [
                "test_ror_2d",
                []
              ],
              [
                "test_rol_3d",
                []
              ],
              [
                "test_ror_3d",
                []
              ],
              [
                "test_inverse_t_3d",
                []
              ],
              [
                "test_e_2d",
                []
              ],
              [
                "test_gc_3d",
                []
              ],
              [
                "test_t_3d",
                []
              ],
              [
                "test_project_2d",
                []
              ],
              [
                "test_bit_2d",
                []
              ],
              [
                "test_g_3d",
                []
              ],
              [
                "test_project_3d",
                []
              ],
              [
                "test_end_point_2d",
                []
              ],
              [
                "test_e_3d",
                []
              ],
              [
                "test_gc_2d",
                []
              ],
              [
                "test_end_point_3d",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5437781853287437,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_ror_3d",
                  "test_e_3d",
                  0.4049667383805315
                ],
                [
                  "test_g_2d",
                  "test_evaluate_3d",
                  0.3729304618546006
                ],
                [
                  "test_rol_3d",
                  "test_e_2d",
                  0.4049667383805315
                ],
                [
                  "test_inverse_t_3d",
                  "test_evaluate_2d",
                  0.8353491280125767
                ],
                [
                  "test_e_3d",
                  "test_end_point_2d",
                  0.5744849896214261
                ],
                [
                  "test_g_3d",
                  "test_end_point_3d",
                  0.5773502691896257
                ],
                [
                  "test_inverse_gc_2d",
                  "test_end_point_2d",
                  0.6561436742998653
                ],
                [
                  "test_ror_2d",
                  "test_evaluate_3d",
                  0.29185900942685983
                ],
                [
                  "test_bit_2d",
                  "test_e_2d",
                  0.8333333333333335
                ],
                [
                  "test_e_2d",
                  "test_end_point_2d",
                  0.5744849896214261
                ],
                [
                  "test_rol_3d",
                  "test_inverse_gc_3d",
                  0.3325882380417094
                ],
                [
                  "test_rol_2d",
                  "test_project_2d",
                  0.5023310149673528
                ],
                [
                  "test_rol_3d",
                  "test_evaluate_2d",
                  0.2836352450422547
                ],
                [
                  "test_gc_2d",
                  "test_t_3d",
                  0.3927809746045827
                ],
                [
                  "test_bit_2d",
                  "test_end_point_2d",
                  0.5744849896214261
                ],
                [
                  "test_g_2d",
                  "test_gc_2d",
                  0.8333333333333335
                ],
                [
                  "test_evaluate_2d",
                  "test_project_2d",
                  0.4408401602605981
                ],
                [
                  "test_rol_2d",
                  "test_ror_2d",
                  0.9415887850467289
                ],
                [
                  "test_ror_3d",
                  "test_gc_3d",
                  0.4049667383805315
                ],
                [
                  "test_bit_2d",
                  "test_evaluate_2d",
                  0.3400593455341454
                ],
                [
                  "test_inverse_gc_3d",
                  "test_end_point_2d",
                  0.6561436742998653
                ],
                [
                  "test_bit_3d",
                  "test_evaluate_3d",
                  0.3729304618546006
                ],
                [
                  "test_e_3d",
                  "test_inverse_gc_3d",
                  0.42655263047237835
                ],
                [
                  "test_g_3d",
                  "test_inverse_gc_2d",
                  0.42655263047237835
                ],
                [
                  "test_inverse_gc_3d",
                  "test_t_2d",
                  0.8813315333468581
                ],
                [
                  "test_evaluate_2d",
                  "test_project_3d",
                  0.4408401602605981
                ],
                [
                  "test_ror_3d",
                  "test_end_point_3d",
                  0.5444611835930716
                ],
                [
                  "test_rol_2d",
                  "test_gc_3d",
                  0.4144019449310257
                ],
                [
                  "test_rol_2d",
                  "test_project_3d",
                  0.5023310149673528
                ],
                [
                  "test_t_2d",
                  "test_end_point_3d",
                  0.7104629631284652
                ],
                [
                  "test_project_2d",
                  "test_project_3d",
                  1.0
                ],
                [
                  "test_gc_2d",
                  "test_inverse_gc_2d",
                  0.4297358590579931
                ],
                [
                  "test_ror_2d",
                  "test_gc_2d",
                  0.4144019449310257
                ],
                [
                  "test_inverse_gc_3d",
                  "test_evaluate_2d",
                  0.7352249187630152
                ],
                [
                  "test_e_3d",
                  "test_t_2d",
                  0.4288850530420697
                ],
                [
                  "test_inverse_gc_2d",
                  "test_t_2d",
                  0.8813315333468581
                ],
                [
                  "test_ror_3d",
                  "test_inverse_gc_2d",
                  0.3325882380417094
                ],
                [
                  "test_e_2d",
                  "test_t_2d",
                  0.4288850530420697
                ],
                [
                  "test_evaluate_2d",
                  "test_end_point_2d",
                  0.5216085022049061
                ],
                [
                  "test_end_point_2d",
                  "test_end_point_3d",
                  0.9950371902099892
                ],
                [
                  "test_ror_2d",
                  "test_bit_3d",
                  0.4144019449310257
                ],
                [
                  "test_bit_3d",
                  "test_t_3d",
                  0.3927809746045827
                ],
                [
                  "test_g_3d",
                  "test_t_3d",
                  0.3927809746045827
                ],
                [
                  "test_g_3d",
                  "test_gc_3d",
                  0.8333333333333335
                ],
                [
                  "test_inverse_gc_3d",
                  "test_inverse_t_3d",
                  0.8372427297547953
                ],
                [
                  "test_project_2d",
                  "test_end_point_3d",
                  0.6433003364885114
                ],
                [
                  "test_g_2d",
                  "test_end_point_3d",
                  0.5773502691896257
                ],
                [
                  "test_e_2d",
                  "test_project_2d",
                  0.4714045207910317
                ],
                [
                  "test_ror_2d",
                  "test_end_point_3d",
                  0.5561903678973397
                ],
                [
                  "test_e_3d",
                  "test_project_3d",
                  0.4714045207910317
                ],
                [
                  "test_gc_3d",
                  "test_project_2d",
                  0.4714045207910317
                ],
                [
                  "test_bit_3d",
                  "test_t_2d",
                  0.4288850530420697
                ],
                [
                  "test_bit_2d",
                  "test_inverse_gc_3d",
                  0.42655263047237835
                ],
                [
                  "test_t_3d",
                  "test_end_point_3d",
                  0.6561684919039595
                ],
                [
                  "test_inverse_t_3d",
                  "test_end_point_2d",
                  0.6253531244702978
                ],
                [
                  "test_rol_2d",
                  "test_inverse_gc_2d",
                  0.341844702329768
                ],
                [
                  "test_rol_2d",
                  "test_e_2d",
                  0.4144019449310257
                ],
                [
                  "test_ror_2d",
                  "test_t_2d",
                  0.3474300334951245
                ],
                [
                  "test_rol_3d",
                  "test_bit_3d",
                  0.4049667383805315
                ],
                [
                  "test_gc_2d",
                  "test_gc_3d",
                  1.0000000000000002
                ],
                [
                  "test_inverse_t_3d",
                  "test_project_2d",
                  0.4350536890026052
                ],
                [
                  "test_gc_3d",
                  "test_t_3d",
                  0.3927809746045827
                ],
                [
                  "test_bit_3d",
                  "test_end_point_3d",
                  0.5773502691896257
                ],
                [
                  "test_bit_2d",
                  "test_project_3d",
                  0.4714045207910317
                ],
                [
                  "test_bit_3d",
                  "test_inverse_gc_3d",
                  0.42655263047237835
                ],
                [
                  "test_gc_3d",
                  "test_end_point_2d",
                  0.5744849896214261
                ],
                [
                  "test_e_3d",
                  "test_gc_3d",
                  0.8333333333333335
                ],
                [
                  "test_project_3d",
                  "test_end_point_3d",
                  0.6433003364885114
                ],
                [
                  "test_bit_3d",
                  "test_g_2d",
                  0.8333333333333335
                ],
                [
                  "test_rol_2d",
                  "test_end_point_3d",
                  0.5561903678973397
                ],
                [
                  "test_rol_3d",
                  "test_gc_3d",
                  0.4049667383805315
                ],
                [
                  "test_rol_2d",
                  "test_inverse_gc_3d",
                  0.341844702329768
                ],
                [
                  "test_rol_3d",
                  "test_g_3d",
                  0.4049667383805315
                ],
                [
                  "test_inverse_gc_2d",
                  "test_project_3d",
                  0.5071988609378739
                ],
                [
                  "test_inverse_t_3d",
                  "test_evaluate_3d",
                  0.8948572859210967
                ],
                [
                  "test_g_2d",
                  "test_evaluate_2d",
                  0.3400593455341454
                ],
                [
                  "test_t_3d",
                  "test_inverse_t_3d",
                  0.9962687717084533
                ],
                [
                  "test_gc_2d",
                  "test_project_3d",
                  0.4714045207910317
                ],
                [
                  "test_e_2d",
                  "test_e_3d",
                  1.0000000000000002
                ],
                [
                  "test_gc_3d",
                  "test_inverse_gc_2d",
                  0.4297358590579931
                ],
                [
                  "test_ror_2d",
                  "test_ror_3d",
                  0.9995373645863538
                ],
                [
                  "test_rol_3d",
                  "test_inverse_t_3d",
                  0.32514707164043144
                ],
                [
                  "test_ror_3d",
                  "test_t_3d",
                  0.30308969217233894
                ],
                [
                  "test_inverse_gc_3d",
                  "test_evaluate_3d",
                  0.8957381931784792
                ],
                [
                  "test_g_3d",
                  "test_inverse_t_3d",
                  0.42045022370018065
                ],
                [
                  "test_rol_2d",
                  "test_t_3d",
                  0.311364677160891
                ],
                [
                  "test_bit_2d",
                  "test_evaluate_3d",
                  0.3729304618546006
                ],
                [
                  "test_project_3d",
                  "test_end_point_2d",
                  0.6364148299002036
                ],
                [
                  "test_g_3d",
                  "test_project_3d",
                  0.4714045207910317
                ],
                [
                  "test_inverse_gc_2d",
                  "test_inverse_t_3d",
                  0.8372427297547953
                ],
                [
                  "test_t_2d",
                  "test_project_2d",
                  0.4549012940333994
                ],
                [
                  "test_ror_2d",
                  "test_bit_2d",
                  0.4144019449310257
                ],
                [
                  "test_gc_2d",
                  "test_inverse_t_3d",
                  0.42045022370018065
                ],
                [
                  "test_ror_2d",
                  "test_end_point_2d",
                  0.5645605386777807
                ],
                [
                  "test_gc_3d",
                  "test_evaluate_2d",
                  0.3400593455341454
                ],
                [
                  "test_ror_3d",
                  "test_bit_3d",
                  0.4049667383805315
                ],
                [
                  "test_g_2d",
                  "test_inverse_t_3d",
                  0.42045022370018065
                ],
                [
                  "test_e_2d",
                  "test_inverse_gc_3d",
                  0.42655263047237835
                ],
                [
                  "test_bit_2d",
                  "test_t_2d",
                  0.4288850530420697
                ],
                [
                  "test_g_2d",
                  "test_g_3d",
                  1.0000000000000002
                ],
                [
                  "test_g_2d",
                  "test_inverse_gc_2d",
                  0.42655263047237835
                ],
                [
                  "test_rol_2d",
                  "test_e_3d",
                  0.4144019449310257
                ],
                [
                  "test_inverse_gc_2d",
                  "test_evaluate_2d",
                  0.7352249187630152
                ],
                [
                  "test_bit_3d",
                  "test_gc_2d",
                  0.8333333333333335
                ],
                [
                  "test_rol_3d",
                  "test_e_3d",
                  0.4049667383805315
                ],
                [
                  "test_gc_3d",
                  "test_project_3d",
                  0.4714045207910317
                ],
                [
                  "test_rol_2d",
                  "test_g_2d",
                  0.4144019449310257
                ],
                [
                  "test_e_3d",
                  "test_evaluate_2d",
                  0.3400593455341454
                ],
                [
                  "test_e_2d",
                  "test_end_point_3d",
                  0.5773502691896257
                ],
                [
                  "test_t_2d",
                  "test_evaluate_3d",
                  0.8697156826343139
                ],
                [
                  "test_g_2d",
                  "test_t_3d",
                  0.3927809746045827
                ],
                [
                  "test_e_3d",
                  "test_g_3d",
                  0.8333333333333335
                ],
                [
                  "test_e_3d",
                  "test_inverse_gc_2d",
                  0.42655263047237835
                ],
                [
                  "test_g_2d",
                  "test_gc_3d",
                  0.8333333333333335
                ],
                [
                  "test_ror_3d",
                  "test_g_2d",
                  0.4049667383805315
                ],
                [
                  "test_evaluate_3d",
                  "test_end_point_3d",
                  0.6428204982880281
                ],
                [
                  "test_ror_2d",
                  "test_project_2d",
                  0.5023310149673528
                ],
                [
                  "test_bit_2d",
                  "test_project_2d",
                  0.4714045207910317
                ],
                [
                  "test_e_3d",
                  "test_inverse_t_3d",
                  0.42045022370018065
                ],
                [
                  "test_rol_3d",
                  "test_ror_3d",
                  0.9403202328966522
                ],
                [
                  "test_g_3d",
                  "test_inverse_gc_3d",
                  0.42655263047237835
                ],
                [
                  "test_e_2d",
                  "test_t_3d",
                  0.3927809746045827
                ],
                [
                  "test_bit_2d",
                  "test_inverse_gc_2d",
                  0.42655263047237835
                ],
                [
                  "test_gc_2d",
                  "test_end_point_2d",
                  0.5744849896214261
                ],
                [
                  "test_inverse_gc_3d",
                  "test_end_point_3d",
                  0.727783800795531
                ],
                [
                  "test_rol_3d",
                  "test_inverse_gc_2d",
                  0.3325882380417094
                ],
                [
                  "test_inverse_gc_2d",
                  "test_t_3d",
                  0.8251635279872603
                ],
                [
                  "test_gc_3d",
                  "test_inverse_t_3d",
                  0.42045022370018065
                ],
                [
                  "test_e_3d",
                  "test_t_3d",
                  0.3927809746045827
                ],
                [
                  "test_t_3d",
                  "test_end_point_2d",
                  0.6022106744119631
                ],
                [
                  "test_inverse_t_3d",
                  "test_end_point_3d",
                  0.6785883438545212
                ],
                [
                  "test_evaluate_3d",
                  "test_end_point_2d",
                  0.5774821401694361
                ],
                [
                  "test_rol_2d",
                  "test_bit_3d",
                  0.4144019449310257
                ],
                [
                  "test_rol_3d",
                  "test_g_2d",
                  0.4049667383805315
                ],
                [
                  "test_rol_3d",
                  "test_end_point_3d",
                  0.5444611835930716
                ],
                [
                  "test_g_3d",
                  "test_evaluate_2d",
                  0.3400593455341454
                ],
                [
                  "test_evaluate_2d",
                  "test_evaluate_3d",
                  0.9524356731818611
                ],
                [
                  "test_bit_3d",
                  "test_project_2d",
                  0.4714045207910317
                ],
                [
                  "test_ror_2d",
                  "test_project_3d",
                  0.5023310149673528
                ],
                [
                  "test_rol_3d",
                  "test_t_3d",
                  0.30308969217233894
                ],
                [
                  "test_e_3d",
                  "test_end_point_3d",
                  0.5773502691896257
                ],
                [
                  "test_rol_2d",
                  "test_g_3d",
                  0.4144019449310257
                ],
                [
                  "test_bit_2d",
                  "test_g_2d",
                  0.8333333333333335
                ],
                [
                  "test_gc_2d",
                  "test_evaluate_2d",
                  0.3400593455341454
                ],
                [
                  "test_t_3d",
                  "test_evaluate_2d",
                  0.8351241716323073
                ],
                [
                  "test_rol_2d",
                  "test_inverse_t_3d",
                  0.33428304195959613
                ],
                [
                  "test_e_2d",
                  "test_gc_2d",
                  0.8333333333333335
                ],
                [
                  "test_gc_3d",
                  "test_t_2d",
                  0.4288850530420697
                ],
                [
                  "test_bit_3d",
                  "test_project_3d",
                  0.4714045207910317
                ],
                [
                  "test_e_2d",
                  "test_inverse_gc_2d",
                  0.42655263047237835
                ],
                [
                  "test_e_2d",
                  "test_evaluate_3d",
                  0.3729304618546006
                ],
                [
                  "test_ror_3d",
                  "test_inverse_gc_3d",
                  0.3325882380417094
                ],
                [
                  "test_bit_2d",
                  "test_gc_2d",
                  0.8333333333333335
                ],
                [
                  "test_ror_3d",
                  "test_e_2d",
                  0.4049667383805315
                ],
                [
                  "test_g_2d",
                  "test_end_point_2d",
                  0.5744849896214261
                ],
                [
                  "test_rol_3d",
                  "test_gc_2d",
                  0.4049667383805315
                ],
                [
                  "test_rol_2d",
                  "test_evaluate_3d",
                  0.29185900942685983
                ],
                [
                  "test_bit_3d",
                  "test_gc_3d",
                  0.8333333333333335
                ],
                [
                  "test_inverse_gc_3d",
                  "test_t_3d",
                  0.8251635279872603
                ],
                [
                  "test_e_2d",
                  "test_g_2d",
                  0.8333333333333335
                ],
                [
                  "test_rol_3d",
                  "test_evaluate_3d",
                  0.283698868919778
                ],
                [
                  "test_t_2d",
                  "test_end_point_2d",
                  0.6539339323101602
                ],
                [
                  "test_ror_3d",
                  "test_inverse_t_3d",
                  0.32514707164043144
                ],
                [
                  "test_gc_2d",
                  "test_t_2d",
                  0.4288850530420697
                ],
                [
                  "test_bit_3d",
                  "test_e_3d",
                  0.8333333333333335
                ],
                [
                  "test_rol_2d",
                  "test_gc_2d",
                  0.4144019449310257
                ],
                [
                  "test_rol_2d",
                  "test_evaluate_2d",
                  0.29090173184572804
                ],
                [
                  "test_ror_3d",
                  "test_g_3d",
                  0.4049667383805315
                ],
                [
                  "test_g_2d",
                  "test_inverse_gc_3d",
                  0.42655263047237835
                ],
                [
                  "test_g_2d",
                  "test_project_3d",
                  0.4714045207910317
                ],
                [
                  "test_e_3d",
                  "test_g_2d",
                  0.8333333333333335
                ],
                [
                  "test_g_3d",
                  "test_t_2d",
                  0.4288850530420697
                ],
                [
                  "test_g_3d",
                  "test_end_point_2d",
                  0.5744849896214261
                ],
                [
                  "test_bit_2d",
                  "test_end_point_3d",
                  0.5773502691896257
                ],
                [
                  "test_inverse_gc_3d",
                  "test_project_2d",
                  0.5071988609378739
                ],
                [
                  "test_bit_3d",
                  "test_end_point_2d",
                  0.5744849896214261
                ],
                [
                  "test_evaluate_3d",
                  "test_project_2d",
                  0.44616189693747693
                ],
                [
                  "test_ror_2d",
                  "test_inverse_gc_3d",
                  0.341844702329768
                ],
                [
                  "test_ror_3d",
                  "test_evaluate_2d",
                  0.2836352450422547
                ],
                [
                  "test_bit_3d",
                  "test_evaluate_2d",
                  0.3400593455341454
                ],
                [
                  "test_e_2d",
                  "test_gc_3d",
                  0.8333333333333335
                ],
                [
                  "test_g_2d",
                  "test_t_2d",
                  0.4288850530420697
                ],
                [
                  "test_t_3d",
                  "test_project_2d",
                  0.41374653768386027
                ],
                [
                  "test_t_3d",
                  "test_project_3d",
                  0.41374653768386027
                ],
                [
                  "test_ror_3d",
                  "test_gc_2d",
                  0.4049667383805315
                ],
                [
                  "test_rol_2d",
                  "test_ror_3d",
                  0.9405240884484141
                ],
                [
                  "test_gc_2d",
                  "test_project_2d",
                  0.4714045207910317
                ],
                [
                  "test_ror_3d",
                  "test_evaluate_3d",
                  0.283698868919778
                ],
                [
                  "test_g_3d",
                  "test_project_2d",
                  0.4714045207910317
                ],
                [
                  "test_inverse_gc_2d",
                  "test_project_2d",
                  0.5071988609378739
                ],
                [
                  "test_inverse_gc_3d",
                  "test_project_3d",
                  0.5071988609378739
                ],
                [
                  "test_t_2d",
                  "test_project_3d",
                  0.4549012940333994
                ],
                [
                  "test_rol_3d",
                  "test_project_2d",
                  0.49561395034131733
                ],
                [
                  "test_bit_2d",
                  "test_g_3d",
                  0.8333333333333335
                ],
                [
                  "test_bit_3d",
                  "test_inverse_gc_2d",
                  0.42655263047237835
                ],
                [
                  "test_g_3d",
                  "test_evaluate_3d",
                  0.3729304618546006
                ],
                [
                  "test_e_2d",
                  "test_project_3d",
                  0.4714045207910317
                ],
                [
                  "test_bit_2d",
                  "test_inverse_t_3d",
                  0.42045022370018065
                ],
                [
                  "test_bit_3d",
                  "test_e_2d",
                  0.8333333333333335
                ],
                [
                  "test_e_3d",
                  "test_project_2d",
                  0.4714045207910317
                ],
                [
                  "test_evaluate_2d",
                  "test_end_point_3d",
                  0.5702591529247771
                ],
                [
                  "test_evaluate_3d",
                  "test_project_3d",
                  0.44616189693747693
                ],
                [
                  "test_rol_3d",
                  "test_ror_2d",
                  0.9405240884484141
                ],
                [
                  "test_gc_3d",
                  "test_evaluate_3d",
                  0.3729304618546006
                ],
                [
                  "test_t_3d",
                  "test_evaluate_3d",
                  0.892561008108601
                ],
                [
                  "test_ror_2d",
                  "test_inverse_gc_2d",
                  0.341844702329768
                ],
                [
                  "test_e_2d",
                  "test_g_3d",
                  0.8333333333333335
                ],
                [
                  "test_inverse_t_3d",
                  "test_project_3d",
                  0.4350536890026052
                ],
                [
                  "test_rol_3d",
                  "test_project_3d",
                  0.49561395034131733
                ],
                [
                  "test_ror_2d",
                  "test_g_2d",
                  0.4144019449310257
                ],
                [
                  "test_ror_2d",
                  "test_evaluate_2d",
                  0.29090173184572804
                ],
                [
                  "test_bit_2d",
                  "test_bit_3d",
                  1.0000000000000002
                ],
                [
                  "test_ror_2d",
                  "test_e_3d",
                  0.4144019449310257
                ],
                [
                  "test_e_2d",
                  "test_inverse_t_3d",
                  0.42045022370018065
                ],
                [
                  "test_bit_2d",
                  "test_e_3d",
                  0.8333333333333335
                ],
                [
                  "test_rol_3d",
                  "test_bit_2d",
                  0.4049667383805315
                ],
                [
                  "test_bit_3d",
                  "test_g_3d",
                  0.8333333333333335
                ],
                [
                  "test_gc_3d",
                  "test_inverse_gc_3d",
                  0.4297358590579931
                ],
                [
                  "test_inverse_gc_2d",
                  "test_evaluate_3d",
                  0.8957381931784792
                ],
                [
                  "test_ror_2d",
                  "test_inverse_t_3d",
                  0.33428304195959613
                ],
                [
                  "test_gc_2d",
                  "test_evaluate_3d",
                  0.3729304618546006
                ],
                [
                  "test_t_2d",
                  "test_inverse_t_3d",
                  0.8814571438051377
                ],
                [
                  "test_ror_2d",
                  "test_t_3d",
                  0.311364677160891
                ],
                [
                  "test_rol_2d",
                  "test_rol_3d",
                  0.9995373645863538
                ],
                [
                  "test_ror_3d",
                  "test_project_2d",
                  0.49561395034131733
                ],
                [
                  "test_bit_3d",
                  "test_inverse_t_3d",
                  0.42045022370018065
                ],
                [
                  "test_t_2d",
                  "test_t_3d",
                  0.8746985648696098
                ],
                [
                  "test_ror_2d",
                  "test_g_3d",
                  0.4144019449310257
                ],
                [
                  "test_ror_2d",
                  "test_gc_3d",
                  0.4144019449310257
                ],
                [
                  "test_e_2d",
                  "test_evaluate_2d",
                  0.3400593455341454
                ],
                [
                  "test_ror_3d",
                  "test_end_point_2d",
                  0.5529847658548367
                ],
                [
                  "test_g_3d",
                  "test_gc_2d",
                  0.8333333333333335
                ],
                [
                  "test_rol_2d",
                  "test_bit_2d",
                  0.4144019449310257
                ],
                [
                  "test_ror_3d",
                  "test_project_3d",
                  0.49561395034131733
                ],
                [
                  "test_g_2d",
                  "test_project_2d",
                  0.4714045207910317
                ],
                [
                  "test_inverse_gc_2d",
                  "test_inverse_gc_3d",
                  1.0
                ],
                [
                  "test_inverse_gc_2d",
                  "test_end_point_3d",
                  0.727783800795531
                ],
                [
                  "test_bit_2d",
                  "test_t_3d",
                  0.3927809746045827
                ],
                [
                  "test_ror_2d",
                  "test_e_2d",
                  0.4144019449310257
                ],
                [
                  "test_bit_2d",
                  "test_gc_3d",
                  0.8333333333333335
                ],
                [
                  "test_gc_2d",
                  "test_inverse_gc_3d",
                  0.4297358590579931
                ],
                [
                  "test_rol_3d",
                  "test_t_2d",
                  0.3384387594252628
                ],
                [
                  "test_e_3d",
                  "test_gc_2d",
                  0.8333333333333335
                ],
                [
                  "test_gc_2d",
                  "test_end_point_3d",
                  0.5773502691896257
                ],
                [
                  "test_rol_2d",
                  "test_t_2d",
                  0.3474300334951245
                ],
                [
                  "test_ror_3d",
                  "test_t_2d",
                  0.3384387594252628
                ],
                [
                  "test_t_2d",
                  "test_evaluate_2d",
                  0.7694884269341913
                ],
                [
                  "test_ror_3d",
                  "test_bit_2d",
                  0.4049667383805315
                ],
                [
                  "test_rol_3d",
                  "test_end_point_2d",
                  0.5529847658548367
                ],
                [
                  "test_gc_3d",
                  "test_end_point_3d",
                  0.5773502691896257
                ],
                [
                  "test_e_3d",
                  "test_evaluate_3d",
                  0.3729304618546006
                ],
                [
                  "test_project_2d",
                  "test_end_point_2d",
                  0.6364148299002036
                ],
                [
                  "test_rol_2d",
                  "test_end_point_2d",
                  0.5645605386777807
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_bit_3d",
                "false"
              ],
              [
                "test_rol_2d",
                "false"
              ],
              [
                "test_g_2d",
                "false"
              ],
              [
                "test_evaluate_3d",
                "false"
              ],
              [
                "test_inverse_gc_3d",
                "false"
              ],
              [
                "test_evaluate_2d",
                "false"
              ],
              [
                "test_inverse_gc_2d",
                "false"
              ],
              [
                "test_t_2d",
                "false"
              ],
              [
                "test_ror_2d",
                "false"
              ],
              [
                "test_rol_3d",
                "false"
              ],
              [
                "test_ror_3d",
                "false"
              ],
              [
                "test_inverse_t_3d",
                "false"
              ],
              [
                "test_e_2d",
                "false"
              ],
              [
                "test_gc_3d",
                "false"
              ],
              [
                "test_t_3d",
                "false"
              ],
              [
                "test_project_2d",
                "false"
              ],
              [
                "test_bit_2d",
                "false"
              ],
              [
                "test_g_3d",
                "false"
              ],
              [
                "test_project_3d",
                "false"
              ],
              [
                "test_end_point_2d",
                "false"
              ],
              [
                "test_e_3d",
                "false"
              ],
              [
                "test_gc_2d",
                "false"
              ],
              [
                "test_end_point_3d",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 23
      }
    ]
  },
  {
    "name": "tests_\u0026_TestCurveOnSurface.py",
    "testCases": [
      {
        "name": "TestNurbsCurveGeometry",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_curve_on_surface_3d",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_curve_on_surface_3d",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_curve_on_surface_3d",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_curve_on_surface_3d",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_curve_on_surface_3d",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_curve_on_surface_3d",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_curve_on_surface_3d",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_curve_on_surface_3d",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_curve_on_surface_3d",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_curve_on_surface_3d",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_curve_on_surface_3d",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_curve_on_surface_3d",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_curve_on_surface_3d",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_curve_on_surface_3d",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_curve_on_surface_3d",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_curve_on_surface_3d",
                "5"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_curve_on_surface_3d",
                [
                  "spans",
                  "surface",
                  "curve",
                  "curve_on_surface"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_curve_on_surface_3d",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_curve_on_surface_3d",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_TestPolylineMapper.py",
    "testCases": [
      {
        "name": "TestPolylineMapper",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_map_2d",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_map_2d",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_map_2d",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_map_2d",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_map_2d",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_map_2d",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_map_2d",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_map_2d",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_map_2d",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_map_2d",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_map_2d",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_map_2d",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_map_2d",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_map_2d",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_map_2d",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_map_2d",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_map_2d",
                [
                  "i0",
                  "i1",
                  "mapper",
                  "t0",
                  "t1",
                  "polyline"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_map_2d",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_map_2d",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_TestCurveTessellation.py",
    "testCases": [
      {
        "name": "TestCurveTessellation",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_tessellation_3d",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_tessellation_2d",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_tessellation_3d",
                  "[]"
                ],
                [
                  "test_tessellation_2d",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_tessellation_3d",
                  "false"
                ],
                [
                  "test_tessellation_2d",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_tessellation_3d",
                  "false"
                ],
                [
                  "test_tessellation_2d",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_tessellation_3d",
                  "false"
                ],
                [
                  "test_tessellation_2d",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_tessellation_3d",
                  "false"
                ],
                [
                  "test_tessellation_2d",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_tessellation_3d",
                "false"
              ],
              [
                "test_tessellation_2d",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_tessellation_3d",
                "false"
              ],
              [
                "test_tessellation_2d",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_tessellation_3d",
                []
              ],
              [
                "test_tessellation_2d",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_tessellation_3d",
                "false"
              ],
              [
                "test_tessellation_2d",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_tessellation_3d",
                "true"
              ],
              [
                "test_tessellation_2d",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_tessellation_3d",
                  "0"
                ],
                [
                  "test_tessellation_2d",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_tessellation_3d",
                  "0"
                ],
                [
                  "test_tessellation_2d",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_tessellation_3d",
                "false"
              ],
              [
                "test_tessellation_2d",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_tessellation_3d",
                "false"
              ],
              [
                "test_tessellation_2d",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_tessellation_3d",
                "2"
              ],
              [
                "test_tessellation_2d",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_tessellation_3d",
                [
                  "curve",
                  "ts",
                  "points"
                ]
              ],
              [
                "test_tessellation_2d",
                [
                  "curve",
                  "ts",
                  "points"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_tessellation_3d",
                []
              ],
              [
                "test_tessellation_2d",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8779167420176598,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_tessellation_2d",
                  "test_tessellation_3d",
                  0.8779167420176598
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_tessellation_3d",
                "false"
              ],
              [
                "test_tessellation_2d",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_TestIntegrationPoints.py",
    "testCases": [
      {
        "name": "TestIntegrationPoints",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_integration_points_0_to_1",
                  "[]"
                ],
                [
                  "test_integration_points_surface_3d",
                  "[]"
                ],
                [
                  "test_throw_exception_for_unsupported_degree",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_integration_points_0_to_1_x_0_to_1",
                  "[]"
                ],
                [
                  "test_integration_points_minus_1_to_1_x_minus_1_to_1",
                  "[]"
                ],
                [
                  "test_integration_points_minus_1_to_1",
                  "[]"
                ],
                [
                  "test_integration_points_curve_2d",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_integration_points_0_to_1",
                  "[]"
                ],
                [
                  "test_integration_points_surface_3d",
                  "[]"
                ],
                [
                  "test_throw_exception_for_unsupported_degree",
                  "[]"
                ],
                [
                  "test_integration_points_0_to_1_x_0_to_1",
                  "[]"
                ],
                [
                  "test_integration_points_minus_1_to_1_x_minus_1_to_1",
                  "[]"
                ],
                [
                  "test_integration_points_minus_1_to_1",
                  "[]"
                ],
                [
                  "test_integration_points_curve_2d",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_integration_points_0_to_1",
                  "false"
                ],
                [
                  "test_integration_points_surface_3d",
                  "false"
                ],
                [
                  "test_throw_exception_for_unsupported_degree",
                  "false"
                ],
                [
                  "test_integration_points_0_to_1_x_0_to_1",
                  "false"
                ],
                [
                  "test_integration_points_minus_1_to_1_x_minus_1_to_1",
                  "false"
                ],
                [
                  "test_integration_points_minus_1_to_1",
                  "false"
                ],
                [
                  "test_integration_points_curve_2d",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_integration_points_0_to_1",
                  "false"
                ],
                [
                  "test_integration_points_surface_3d",
                  "false"
                ],
                [
                  "test_throw_exception_for_unsupported_degree",
                  "false"
                ],
                [
                  "test_integration_points_0_to_1_x_0_to_1",
                  "false"
                ],
                [
                  "test_integration_points_minus_1_to_1_x_minus_1_to_1",
                  "false"
                ],
                [
                  "test_integration_points_minus_1_to_1",
                  "false"
                ],
                [
                  "test_integration_points_curve_2d",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_integration_points_0_to_1",
                  "false"
                ],
                [
                  "test_integration_points_surface_3d",
                  "false"
                ],
                [
                  "test_throw_exception_for_unsupported_degree",
                  "false"
                ],
                [
                  "test_integration_points_0_to_1_x_0_to_1",
                  "false"
                ],
                [
                  "test_integration_points_minus_1_to_1_x_minus_1_to_1",
                  "false"
                ],
                [
                  "test_integration_points_minus_1_to_1",
                  "false"
                ],
                [
                  "test_integration_points_curve_2d",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_integration_points_0_to_1",
                  "false"
                ],
                [
                  "test_integration_points_surface_3d",
                  "false"
                ],
                [
                  "test_throw_exception_for_unsupported_degree",
                  "false"
                ],
                [
                  "test_integration_points_0_to_1_x_0_to_1",
                  "false"
                ],
                [
                  "test_integration_points_minus_1_to_1_x_minus_1_to_1",
                  "false"
                ],
                [
                  "test_integration_points_minus_1_to_1",
                  "false"
                ],
                [
                  "test_integration_points_curve_2d",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_integration_points_0_to_1",
                "false"
              ],
              [
                "test_integration_points_surface_3d",
                "false"
              ],
              [
                "test_throw_exception_for_unsupported_degree",
                "false"
              ],
              [
                "test_integration_points_0_to_1_x_0_to_1",
                "false"
              ],
              [
                "test_integration_points_minus_1_to_1_x_minus_1_to_1",
                "false"
              ],
              [
                "test_integration_points_minus_1_to_1",
                "false"
              ],
              [
                "test_integration_points_curve_2d",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_integration_points_0_to_1",
                "false"
              ],
              [
                "test_integration_points_surface_3d",
                "false"
              ],
              [
                "test_throw_exception_for_unsupported_degree",
                "false"
              ],
              [
                "test_integration_points_0_to_1_x_0_to_1",
                "false"
              ],
              [
                "test_integration_points_minus_1_to_1_x_minus_1_to_1",
                "false"
              ],
              [
                "test_integration_points_minus_1_to_1",
                "false"
              ],
              [
                "test_integration_points_curve_2d",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_integration_points_0_to_1",
                []
              ],
              [
                "test_integration_points_surface_3d",
                []
              ],
              [
                "test_throw_exception_for_unsupported_degree",
                []
              ],
              [
                "test_integration_points_0_to_1_x_0_to_1",
                []
              ],
              [
                "test_integration_points_minus_1_to_1_x_minus_1_to_1",
                []
              ],
              [
                "test_integration_points_minus_1_to_1",
                []
              ],
              [
                "test_integration_points_curve_2d",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_integration_points_0_to_1",
                "false"
              ],
              [
                "test_integration_points_surface_3d",
                "false"
              ],
              [
                "test_throw_exception_for_unsupported_degree",
                "false"
              ],
              [
                "test_integration_points_0_to_1_x_0_to_1",
                "false"
              ],
              [
                "test_integration_points_minus_1_to_1_x_minus_1_to_1",
                "false"
              ],
              [
                "test_integration_points_minus_1_to_1",
                "false"
              ],
              [
                "test_integration_points_curve_2d",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_integration_points_0_to_1",
                "false"
              ],
              [
                "test_integration_points_surface_3d",
                "false"
              ],
              [
                "test_throw_exception_for_unsupported_degree",
                "false"
              ],
              [
                "test_integration_points_0_to_1_x_0_to_1",
                "false"
              ],
              [
                "test_integration_points_minus_1_to_1_x_minus_1_to_1",
                "false"
              ],
              [
                "test_integration_points_minus_1_to_1",
                "false"
              ],
              [
                "test_integration_points_curve_2d",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_integration_points_0_to_1",
                  "0"
                ],
                [
                  "test_integration_points_surface_3d",
                  "0"
                ],
                [
                  "test_throw_exception_for_unsupported_degree",
                  "0"
                ],
                [
                  "test_integration_points_0_to_1_x_0_to_1",
                  "0"
                ],
                [
                  "test_integration_points_minus_1_to_1_x_minus_1_to_1",
                  "0"
                ],
                [
                  "test_integration_points_minus_1_to_1",
                  "0"
                ],
                [
                  "test_integration_points_curve_2d",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_integration_points_0_to_1",
                  "0"
                ],
                [
                  "test_integration_points_surface_3d",
                  "0"
                ],
                [
                  "test_throw_exception_for_unsupported_degree",
                  "0"
                ],
                [
                  "test_integration_points_0_to_1_x_0_to_1",
                  "0"
                ],
                [
                  "test_integration_points_minus_1_to_1_x_minus_1_to_1",
                  "0"
                ],
                [
                  "test_integration_points_minus_1_to_1",
                  "0"
                ],
                [
                  "test_integration_points_curve_2d",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_integration_points_0_to_1",
                "false"
              ],
              [
                "test_integration_points_surface_3d",
                "false"
              ],
              [
                "test_throw_exception_for_unsupported_degree",
                "false"
              ],
              [
                "test_integration_points_0_to_1_x_0_to_1",
                "false"
              ],
              [
                "test_integration_points_minus_1_to_1_x_minus_1_to_1",
                "false"
              ],
              [
                "test_integration_points_minus_1_to_1",
                "false"
              ],
              [
                "test_integration_points_curve_2d",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_integration_points_0_to_1",
                "false"
              ],
              [
                "test_integration_points_surface_3d",
                "false"
              ],
              [
                "test_throw_exception_for_unsupported_degree",
                "false"
              ],
              [
                "test_integration_points_0_to_1_x_0_to_1",
                "false"
              ],
              [
                "test_integration_points_minus_1_to_1_x_minus_1_to_1",
                "false"
              ],
              [
                "test_integration_points_minus_1_to_1",
                "false"
              ],
              [
                "test_integration_points_curve_2d",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_integration_points_0_to_1",
                "1"
              ],
              [
                "test_integration_points_surface_3d",
                "1"
              ],
              [
                "test_throw_exception_for_unsupported_degree",
                "2"
              ],
              [
                "test_integration_points_0_to_1_x_0_to_1",
                "1"
              ],
              [
                "test_integration_points_minus_1_to_1_x_minus_1_to_1",
                "1"
              ],
              [
                "test_integration_points_minus_1_to_1",
                "1"
              ],
              [
                "test_integration_points_curve_2d",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_integration_points_0_to_1",
                [
                  "integration_points"
                ]
              ],
              [
                "test_integration_points_surface_3d",
                [
                  "surface",
                  "integration_points",
                  "model"
                ]
              ],
              [
                "test_throw_exception_for_unsupported_degree",
                []
              ],
              [
                "test_integration_points_0_to_1_x_0_to_1",
                [
                  "integration_points"
                ]
              ],
              [
                "test_integration_points_minus_1_to_1_x_minus_1_to_1",
                [
                  "integration_points"
                ]
              ],
              [
                "test_integration_points_minus_1_to_1",
                [
                  "integration_points"
                ]
              ],
              [
                "test_integration_points_curve_2d",
                [
                  "curve",
                  "integration_points",
                  "model"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_integration_points_0_to_1",
                []
              ],
              [
                "test_integration_points_surface_3d",
                []
              ],
              [
                "test_throw_exception_for_unsupported_degree",
                []
              ],
              [
                "test_integration_points_0_to_1_x_0_to_1",
                []
              ],
              [
                "test_integration_points_minus_1_to_1_x_minus_1_to_1",
                []
              ],
              [
                "test_integration_points_minus_1_to_1",
                []
              ],
              [
                "test_integration_points_curve_2d",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7126298255073733,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_throw_exception_for_unsupported_degree",
                  "test_integration_points_0_to_1_x_0_to_1",
                  0.36076248009288736
                ],
                [
                  "test_throw_exception_for_unsupported_degree",
                  "test_integration_points_surface_3d",
                  0.28885195788131246
                ],
                [
                  "test_throw_exception_for_unsupported_degree",
                  "test_integration_points_minus_1_to_1_x_minus_1_to_1",
                  0.34905902704025593
                ],
                [
                  "test_integration_points_0_to_1",
                  "test_integration_points_curve_2d",
                  0.8729149771123552
                ],
                [
                  "test_integration_points_minus_1_to_1",
                  "test_integration_points_0_to_1_x_0_to_1",
                  0.8304475209510795
                ],
                [
                  "test_integration_points_minus_1_to_1",
                  "test_integration_points_surface_3d",
                  0.6321680726686253
                ],
                [
                  "test_integration_points_minus_1_to_1",
                  "test_integration_points_minus_1_to_1_x_minus_1_to_1",
                  0.8432140250490556
                ],
                [
                  "test_integration_points_0_to_1_x_0_to_1",
                  "test_integration_points_surface_3d",
                  0.889413554498584
                ],
                [
                  "test_integration_points_0_to_1_x_0_to_1",
                  "test_integration_points_minus_1_to_1_x_minus_1_to_1",
                  0.9885650536420995
                ],
                [
                  "test_throw_exception_for_unsupported_degree",
                  "test_integration_points_minus_1_to_1",
                  0.3601621094320772
                ],
                [
                  "test_integration_points_0_to_1",
                  "test_integration_points_0_to_1_x_0_to_1",
                  0.8978287247574812
                ],
                [
                  "test_throw_exception_for_unsupported_degree",
                  "test_integration_points_curve_2d",
                  0.36008222276259483
                ],
                [
                  "test_integration_points_minus_1_to_1_x_minus_1_to_1",
                  "test_integration_points_surface_3d",
                  0.877401075165151
                ],
                [
                  "test_integration_points_0_to_1_x_0_to_1",
                  "test_integration_points_curve_2d",
                  0.9063957704030353
                ],
                [
                  "test_integration_points_minus_1_to_1",
                  "test_integration_points_curve_2d",
                  0.8556015677425323
                ],
                [
                  "test_integration_points_minus_1_to_1_x_minus_1_to_1",
                  "test_integration_points_curve_2d",
                  0.9088462136639334
                ],
                [
                  "test_throw_exception_for_unsupported_degree",
                  "test_integration_points_0_to_1",
                  0.3602907451927637
                ],
                [
                  "test_integration_points_0_to_1",
                  "test_integration_points_surface_3d",
                  0.7427410871564859
                ],
                [
                  "test_integration_points_0_to_1",
                  "test_integration_points_minus_1_to_1",
                  0.9574769568755637
                ],
                [
                  "test_integration_points_curve_2d",
                  "test_integration_points_surface_3d",
                  0.7972656774406538
                ],
                [
                  "test_integration_points_0_to_1",
                  "test_integration_points_minus_1_to_1_x_minus_1_to_1",
                  0.8857375161263138
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_integration_points_0_to_1",
                "false"
              ],
              [
                "test_integration_points_surface_3d",
                "false"
              ],
              [
                "test_throw_exception_for_unsupported_degree",
                "false"
              ],
              [
                "test_integration_points_0_to_1_x_0_to_1",
                "false"
              ],
              [
                "test_integration_points_minus_1_to_1_x_minus_1_to_1",
                "false"
              ],
              [
                "test_integration_points_minus_1_to_1",
                "false"
              ],
              [
                "test_integration_points_curve_2d",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      }
    ]
  },
  {
    "name": "tests_\u0026_TestCurveSpanIntersection.py",
    "testCases": [
      {
        "name": "TestCurveSpanIntersection",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_example_3",
                  "[]"
                ],
                [
                  "test_example_1",
                  "[]"
                ],
                [
                  "test_example_4",
                  "[]"
                ],
                [
                  "test_example_2",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_example_3",
                  "[]"
                ],
                [
                  "test_example_1",
                  "[]"
                ],
                [
                  "test_example_4",
                  "[]"
                ],
                [
                  "test_example_2",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_example_3",
                  "false"
                ],
                [
                  "test_example_1",
                  "false"
                ],
                [
                  "test_example_4",
                  "false"
                ],
                [
                  "test_example_2",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_example_3",
                  "false"
                ],
                [
                  "test_example_1",
                  "false"
                ],
                [
                  "test_example_4",
                  "false"
                ],
                [
                  "test_example_2",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_example_3",
                  "false"
                ],
                [
                  "test_example_1",
                  "false"
                ],
                [
                  "test_example_4",
                  "false"
                ],
                [
                  "test_example_2",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_example_3",
                  "false"
                ],
                [
                  "test_example_1",
                  "false"
                ],
                [
                  "test_example_4",
                  "false"
                ],
                [
                  "test_example_2",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_example_3",
                "false"
              ],
              [
                "test_example_1",
                "false"
              ],
              [
                "test_example_4",
                "false"
              ],
              [
                "test_example_2",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_example_3",
                "false"
              ],
              [
                "test_example_1",
                "false"
              ],
              [
                "test_example_4",
                "false"
              ],
              [
                "test_example_2",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_example_3",
                []
              ],
              [
                "test_example_1",
                []
              ],
              [
                "test_example_4",
                []
              ],
              [
                "test_example_2",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_example_3",
                "false"
              ],
              [
                "test_example_1",
                "false"
              ],
              [
                "test_example_4",
                "false"
              ],
              [
                "test_example_2",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_example_3",
                "false"
              ],
              [
                "test_example_1",
                "false"
              ],
              [
                "test_example_4",
                "false"
              ],
              [
                "test_example_2",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_example_3",
                  "0"
                ],
                [
                  "test_example_1",
                  "0"
                ],
                [
                  "test_example_4",
                  "0"
                ],
                [
                  "test_example_2",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_example_3",
                  "0"
                ],
                [
                  "test_example_1",
                  "0"
                ],
                [
                  "test_example_4",
                  "0"
                ],
                [
                  "test_example_2",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_example_3",
                "false"
              ],
              [
                "test_example_1",
                "false"
              ],
              [
                "test_example_4",
                "false"
              ],
              [
                "test_example_2",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_example_3",
                "false"
              ],
              [
                "test_example_1",
                "false"
              ],
              [
                "test_example_4",
                "false"
              ],
              [
                "test_example_2",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_example_3",
                "1"
              ],
              [
                "test_example_1",
                "1"
              ],
              [
                "test_example_4",
                "1"
              ],
              [
                "test_example_2",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_example_3",
                [
                  "curve_geometry",
                  "intersections"
                ]
              ],
              [
                "test_example_1",
                [
                  "curve_geometry",
                  "intersections"
                ]
              ],
              [
                "test_example_4",
                [
                  "curve_geometry",
                  "intersections"
                ]
              ],
              [
                "test_example_2",
                [
                  "curve_geometry",
                  "intersections"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_example_3",
                []
              ],
              [
                "test_example_1",
                []
              ],
              [
                "test_example_4",
                []
              ],
              [
                "test_example_2",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9893640019775635,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_example_1",
                  "test_example_4",
                  0.9796927807764634
                ],
                [
                  "test_example_2",
                  "test_example_4",
                  0.997277216319156
                ],
                [
                  "test_example_2",
                  "test_example_3",
                  0.997433743049123
                ],
                [
                  "test_example_1",
                  "test_example_2",
                  0.9814732639145094
                ],
                [
                  "test_example_1",
                  "test_example_3",
                  0.9809912029397182
                ],
                [
                  "test_example_3",
                  "test_example_4",
                  0.9993158048664107
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_example_3",
                "false"
              ],
              [
                "test_example_1",
                "false"
              ],
              [
                "test_example_4",
                "false"
              ],
              [
                "test_example_2",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "tests_\u0026_TestNurbsCurveShapeFunction.py",
    "testCases": [
      {
        "name": "TestNurbsCurveShapeFunction",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_line_2d",
                  "[]"
                ],
                [
                  "test_with_equal_weights",
                  "[]"
                ],
                [
                  "test_without_weights",
                  "[]"
                ],
                [
                  "test_with_weights",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_line_2d",
                  "[]"
                ],
                [
                  "test_with_equal_weights",
                  "[]"
                ],
                [
                  "test_without_weights",
                  "[]"
                ],
                [
                  "test_with_weights",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_line_2d",
                  "false"
                ],
                [
                  "test_with_equal_weights",
                  "false"
                ],
                [
                  "test_without_weights",
                  "false"
                ],
                [
                  "test_with_weights",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_line_2d",
                  "false"
                ],
                [
                  "test_with_equal_weights",
                  "false"
                ],
                [
                  "test_without_weights",
                  "false"
                ],
                [
                  "test_with_weights",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_line_2d",
                  "false"
                ],
                [
                  "test_with_equal_weights",
                  "false"
                ],
                [
                  "test_without_weights",
                  "false"
                ],
                [
                  "test_with_weights",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_line_2d",
                  "false"
                ],
                [
                  "test_with_equal_weights",
                  "false"
                ],
                [
                  "test_without_weights",
                  "false"
                ],
                [
                  "test_with_weights",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_line_2d",
                "false"
              ],
              [
                "test_with_equal_weights",
                "false"
              ],
              [
                "test_without_weights",
                "false"
              ],
              [
                "test_with_weights",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_line_2d",
                "false"
              ],
              [
                "test_with_equal_weights",
                "false"
              ],
              [
                "test_without_weights",
                "false"
              ],
              [
                "test_with_weights",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_line_2d",
                []
              ],
              [
                "test_with_equal_weights",
                []
              ],
              [
                "test_without_weights",
                []
              ],
              [
                "test_with_weights",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_line_2d",
                "false"
              ],
              [
                "test_with_equal_weights",
                "false"
              ],
              [
                "test_without_weights",
                "false"
              ],
              [
                "test_with_weights",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_line_2d",
                "false"
              ],
              [
                "test_with_equal_weights",
                "false"
              ],
              [
                "test_without_weights",
                "false"
              ],
              [
                "test_with_weights",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_line_2d",
                  "0"
                ],
                [
                  "test_with_equal_weights",
                  "0"
                ],
                [
                  "test_without_weights",
                  "0"
                ],
                [
                  "test_with_weights",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_line_2d",
                  "0"
                ],
                [
                  "test_with_equal_weights",
                  "0"
                ],
                [
                  "test_without_weights",
                  "0"
                ],
                [
                  "test_with_weights",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_line_2d",
                "false"
              ],
              [
                "test_with_equal_weights",
                "false"
              ],
              [
                "test_without_weights",
                "false"
              ],
              [
                "test_with_weights",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_line_2d",
                "false"
              ],
              [
                "test_with_equal_weights",
                "false"
              ],
              [
                "test_without_weights",
                "false"
              ],
              [
                "test_with_weights",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_line_2d",
                "4"
              ],
              [
                "test_with_equal_weights",
                "2"
              ],
              [
                "test_without_weights",
                "2"
              ],
              [
                "test_with_weights",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_line_2d",
                [
                  "nonzero_pole_indices",
                  "shape_functions"
                ]
              ],
              [
                "test_with_equal_weights",
                [
                  "nonzero_pole_indices",
                  "shape_functions"
                ]
              ],
              [
                "test_without_weights",
                [
                  "nonzero_pole_indices",
                  "shape_functions"
                ]
              ],
              [
                "test_with_weights",
                [
                  "nonzero_pole_indices",
                  "shape_functions"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_line_2d",
                []
              ],
              [
                "test_with_equal_weights",
                []
              ],
              [
                "test_without_weights",
                []
              ],
              [
                "test_with_weights",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9705542773897987,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_with_equal_weights",
                  "test_with_weights",
                  0.9985189724924444
                ],
                [
                  "test_without_weights",
                  "test_with_weights",
                  0.9962425507720489
                ],
                [
                  "test_with_equal_weights",
                  "test_line_2d",
                  0.9398170529887119
                ],
                [
                  "test_without_weights",
                  "test_line_2d",
                  0.952599130724759
                ],
                [
                  "test_with_weights",
                  "test_line_2d",
                  0.9417414500582818
                ],
                [
                  "test_without_weights",
                  "test_with_equal_weights",
                  0.9944065073025468
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_line_2d",
                "false"
              ],
              [
                "test_with_equal_weights",
                "false"
              ],
              [
                "test_without_weights",
                "false"
              ],
              [
                "test_with_weights",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "tests_\u0026_TestPointOnSurfaceProjection.py",
    "testCases": [
      {
        "name": "TestPointOnSurfaceProjection",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_point_inversion",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_point_inversion",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_point_inversion",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_point_inversion",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_point_inversion",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_point_inversion",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_point_inversion",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_point_inversion",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_point_inversion",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_point_inversion",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_point_inversion",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_point_inversion",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_point_inversion",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_point_inversion",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_point_inversion",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_point_inversion",
                "3"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_point_inversion",
                [
                  "expected_point",
                  "surface",
                  "u",
                  "test_data",
                  "success",
                  "v",
                  "model",
                  "projection",
                  "point"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_point_inversion",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_point_inversion",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_TestNurbsSurfaceShapeFunction.py",
    "testCases": [
      {
        "name": "TestNurbsSurfaceShapeFunction",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_with_equal_weights",
                  "[]"
                ],
                [
                  "test_with_weights",
                  "[]"
                ],
                [
                  "test_without_weights",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_with_equal_weights",
                  "[]"
                ],
                [
                  "test_with_weights",
                  "[]"
                ],
                [
                  "test_without_weights",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_with_equal_weights",
                  "false"
                ],
                [
                  "test_with_weights",
                  "false"
                ],
                [
                  "test_without_weights",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_with_equal_weights",
                  "false"
                ],
                [
                  "test_with_weights",
                  "false"
                ],
                [
                  "test_without_weights",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_with_equal_weights",
                  "false"
                ],
                [
                  "test_with_weights",
                  "false"
                ],
                [
                  "test_without_weights",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_with_equal_weights",
                  "false"
                ],
                [
                  "test_with_weights",
                  "false"
                ],
                [
                  "test_without_weights",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_with_equal_weights",
                "false"
              ],
              [
                "test_with_weights",
                "false"
              ],
              [
                "test_without_weights",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_with_equal_weights",
                "false"
              ],
              [
                "test_with_weights",
                "false"
              ],
              [
                "test_without_weights",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_with_equal_weights",
                []
              ],
              [
                "test_with_weights",
                []
              ],
              [
                "test_without_weights",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_with_equal_weights",
                "false"
              ],
              [
                "test_with_weights",
                "false"
              ],
              [
                "test_without_weights",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_with_equal_weights",
                "false"
              ],
              [
                "test_with_weights",
                "false"
              ],
              [
                "test_without_weights",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_with_equal_weights",
                  "0"
                ],
                [
                  "test_with_weights",
                  "0"
                ],
                [
                  "test_without_weights",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_with_equal_weights",
                  "0"
                ],
                [
                  "test_with_weights",
                  "0"
                ],
                [
                  "test_without_weights",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_with_equal_weights",
                "false"
              ],
              [
                "test_with_weights",
                "false"
              ],
              [
                "test_without_weights",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_with_equal_weights",
                "false"
              ],
              [
                "test_with_weights",
                "false"
              ],
              [
                "test_without_weights",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_with_equal_weights",
                "2"
              ],
              [
                "test_with_weights",
                "2"
              ],
              [
                "test_without_weights",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_with_equal_weights",
                [
                  "nonzero_pole_indices",
                  "shape_functions"
                ]
              ],
              [
                "test_with_weights",
                [
                  "nonzero_pole_indices",
                  "shape_functions"
                ]
              ],
              [
                "test_without_weights",
                [
                  "nonzero_pole_indices",
                  "shape_functions"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_with_equal_weights",
                []
              ],
              [
                "test_with_weights",
                []
              ],
              [
                "test_without_weights",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9930512109493917,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_without_weights",
                  "test_with_equal_weights",
                  0.9895341362835116
                ],
                [
                  "test_with_equal_weights",
                  "test_with_weights",
                  0.9995110894426191
                ],
                [
                  "test_without_weights",
                  "test_with_weights",
                  0.9901084071220445
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_with_equal_weights",
                "false"
              ],
              [
                "test_with_weights",
                "false"
              ],
              [
                "test_without_weights",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  }
]