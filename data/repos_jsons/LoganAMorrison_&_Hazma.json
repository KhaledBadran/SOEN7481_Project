[
  {
    "name": "test_\u0026_test_gamma_ray.py",
    "testCases": [
      {
        "name": "TestGammaRay",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_ck_mu_mu",
                  "[]"
                ],
                [
                  "test_mu_mu_mu",
                  "[]"
                ],
                [
                  "test_sk_mu_mu",
                  "[]"
                ],
                [
                  "test_lk_mu_mu",
                  "[]"
                ],
                [
                  "test_cp_mu_mu",
                  "[]"
                ],
                [
                  "test_np_mu_mu",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_ck_mu_mu",
                  "[]"
                ],
                [
                  "test_mu_mu_mu",
                  "[]"
                ],
                [
                  "test_sk_mu_mu",
                  "[]"
                ],
                [
                  "test_lk_mu_mu",
                  "[]"
                ],
                [
                  "test_cp_mu_mu",
                  "[]"
                ],
                [
                  "test_np_mu_mu",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_ck_mu_mu",
                  "false"
                ],
                [
                  "test_mu_mu_mu",
                  "false"
                ],
                [
                  "test_sk_mu_mu",
                  "false"
                ],
                [
                  "test_lk_mu_mu",
                  "false"
                ],
                [
                  "test_cp_mu_mu",
                  "false"
                ],
                [
                  "test_np_mu_mu",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_ck_mu_mu",
                  "false"
                ],
                [
                  "test_mu_mu_mu",
                  "false"
                ],
                [
                  "test_sk_mu_mu",
                  "false"
                ],
                [
                  "test_lk_mu_mu",
                  "false"
                ],
                [
                  "test_cp_mu_mu",
                  "false"
                ],
                [
                  "test_np_mu_mu",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_ck_mu_mu",
                  "false"
                ],
                [
                  "test_mu_mu_mu",
                  "false"
                ],
                [
                  "test_sk_mu_mu",
                  "false"
                ],
                [
                  "test_lk_mu_mu",
                  "false"
                ],
                [
                  "test_cp_mu_mu",
                  "false"
                ],
                [
                  "test_np_mu_mu",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_ck_mu_mu",
                  "false"
                ],
                [
                  "test_mu_mu_mu",
                  "false"
                ],
                [
                  "test_sk_mu_mu",
                  "false"
                ],
                [
                  "test_lk_mu_mu",
                  "false"
                ],
                [
                  "test_cp_mu_mu",
                  "false"
                ],
                [
                  "test_np_mu_mu",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_ck_mu_mu",
                "false"
              ],
              [
                "test_mu_mu_mu",
                "false"
              ],
              [
                "test_sk_mu_mu",
                "false"
              ],
              [
                "test_lk_mu_mu",
                "false"
              ],
              [
                "test_cp_mu_mu",
                "false"
              ],
              [
                "test_np_mu_mu",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_ck_mu_mu",
                "false"
              ],
              [
                "test_mu_mu_mu",
                "false"
              ],
              [
                "test_sk_mu_mu",
                "false"
              ],
              [
                "test_lk_mu_mu",
                "false"
              ],
              [
                "test_cp_mu_mu",
                "false"
              ],
              [
                "test_np_mu_mu",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_ck_mu_mu",
                []
              ],
              [
                "test_mu_mu_mu",
                []
              ],
              [
                "test_sk_mu_mu",
                []
              ],
              [
                "test_lk_mu_mu",
                []
              ],
              [
                "test_cp_mu_mu",
                []
              ],
              [
                "test_np_mu_mu",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_ck_mu_mu",
                "false"
              ],
              [
                "test_mu_mu_mu",
                "false"
              ],
              [
                "test_sk_mu_mu",
                "false"
              ],
              [
                "test_lk_mu_mu",
                "false"
              ],
              [
                "test_cp_mu_mu",
                "false"
              ],
              [
                "test_np_mu_mu",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_ck_mu_mu",
                "false"
              ],
              [
                "test_mu_mu_mu",
                "false"
              ],
              [
                "test_sk_mu_mu",
                "false"
              ],
              [
                "test_lk_mu_mu",
                "false"
              ],
              [
                "test_cp_mu_mu",
                "false"
              ],
              [
                "test_np_mu_mu",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_ck_mu_mu",
                  "0"
                ],
                [
                  "test_mu_mu_mu",
                  "0"
                ],
                [
                  "test_sk_mu_mu",
                  "0"
                ],
                [
                  "test_lk_mu_mu",
                  "0"
                ],
                [
                  "test_cp_mu_mu",
                  "0"
                ],
                [
                  "test_np_mu_mu",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_ck_mu_mu",
                  "0"
                ],
                [
                  "test_mu_mu_mu",
                  "0"
                ],
                [
                  "test_sk_mu_mu",
                  "0"
                ],
                [
                  "test_lk_mu_mu",
                  "0"
                ],
                [
                  "test_cp_mu_mu",
                  "0"
                ],
                [
                  "test_np_mu_mu",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_ck_mu_mu",
                "false"
              ],
              [
                "test_mu_mu_mu",
                "false"
              ],
              [
                "test_sk_mu_mu",
                "false"
              ],
              [
                "test_lk_mu_mu",
                "false"
              ],
              [
                "test_cp_mu_mu",
                "false"
              ],
              [
                "test_np_mu_mu",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_ck_mu_mu",
                "false"
              ],
              [
                "test_mu_mu_mu",
                "false"
              ],
              [
                "test_sk_mu_mu",
                "false"
              ],
              [
                "test_lk_mu_mu",
                "false"
              ],
              [
                "test_cp_mu_mu",
                "false"
              ],
              [
                "test_np_mu_mu",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_ck_mu_mu",
                "0"
              ],
              [
                "test_mu_mu_mu",
                "0"
              ],
              [
                "test_sk_mu_mu",
                "0"
              ],
              [
                "test_lk_mu_mu",
                "0"
              ],
              [
                "test_cp_mu_mu",
                "0"
              ],
              [
                "test_np_mu_mu",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_ck_mu_mu",
                [
                  "particles"
                ]
              ],
              [
                "test_mu_mu_mu",
                [
                  "particles"
                ]
              ],
              [
                "test_sk_mu_mu",
                [
                  "particles"
                ]
              ],
              [
                "test_lk_mu_mu",
                [
                  "particles"
                ]
              ],
              [
                "test_cp_mu_mu",
                [
                  "particles"
                ]
              ],
              [
                "test_np_mu_mu",
                [
                  "particles"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_ck_mu_mu",
                [
                  "self.cme",
                  "self.eng_gams"
                ]
              ],
              [
                "test_mu_mu_mu",
                [
                  "self.cme",
                  "self.eng_gams"
                ]
              ],
              [
                "test_sk_mu_mu",
                [
                  "self.cme",
                  "self.eng_gams"
                ]
              ],
              [
                "test_lk_mu_mu",
                [
                  "self.cme",
                  "self.eng_gams"
                ]
              ],
              [
                "test_cp_mu_mu",
                [
                  "self.cme",
                  "self.eng_gams"
                ]
              ],
              [
                "test_np_mu_mu",
                [
                  "self.cme",
                  "self.eng_gams"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8624677116398743,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_mu_mu_mu",
                  "test_ck_mu_mu",
                  0.8651809126974003
                ],
                [
                  "test_ck_mu_mu",
                  "test_lk_mu_mu",
                  0.8888888888888891
                ],
                [
                  "test_sk_mu_mu",
                  "test_cp_mu_mu",
                  0.8333333333333335
                ],
                [
                  "test_lk_mu_mu",
                  "test_cp_mu_mu",
                  0.8333333333333335
                ],
                [
                  "test_sk_mu_mu",
                  "test_np_mu_mu",
                  0.8333333333333335
                ],
                [
                  "test_mu_mu_mu",
                  "test_cp_mu_mu",
                  0.8651809126974003
                ],
                [
                  "test_mu_mu_mu",
                  "test_np_mu_mu",
                  0.8651809126974003
                ],
                [
                  "test_cp_mu_mu",
                  "test_np_mu_mu",
                  0.8888888888888891
                ],
                [
                  "test_mu_mu_mu",
                  "test_sk_mu_mu",
                  0.8651809126974003
                ],
                [
                  "test_sk_mu_mu",
                  "test_lk_mu_mu",
                  0.8888888888888891
                ],
                [
                  "test_ck_mu_mu",
                  "test_np_mu_mu",
                  0.8333333333333335
                ],
                [
                  "test_lk_mu_mu",
                  "test_np_mu_mu",
                  0.8333333333333335
                ],
                [
                  "test_mu_mu_mu",
                  "test_lk_mu_mu",
                  0.8651809126974003
                ],
                [
                  "test_ck_mu_mu",
                  "test_cp_mu_mu",
                  0.8888888888888891
                ],
                [
                  "test_ck_mu_mu",
                  "test_sk_mu_mu",
                  0.8888888888888891
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_ck_mu_mu",
                "false"
              ],
              [
                "test_mu_mu_mu",
                "false"
              ],
              [
                "test_sk_mu_mu",
                "false"
              ],
              [
                "test_lk_mu_mu",
                "false"
              ],
              [
                "test_cp_mu_mu",
                "false"
              ],
              [
                "test_np_mu_mu",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      }
    ]
  },
  {
    "name": "test_\u0026_decay_\u0026_test_decay.py",
    "testCases": [
      {
        "name": "TestDecay",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_dnde_neutral_pion",
                  "[]"
                ],
                [
                  "test_dnde_charged_pion",
                  "[]"
                ],
                [
                  "test_dnde_muon",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_dnde_neutral_pion",
                  "[]"
                ],
                [
                  "test_dnde_charged_pion",
                  "[]"
                ],
                [
                  "test_dnde_muon",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_dnde_neutral_pion",
                  "false"
                ],
                [
                  "test_dnde_charged_pion",
                  "false"
                ],
                [
                  "test_dnde_muon",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_dnde_neutral_pion",
                  "false"
                ],
                [
                  "test_dnde_charged_pion",
                  "false"
                ],
                [
                  "test_dnde_muon",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_dnde_neutral_pion",
                  "false"
                ],
                [
                  "test_dnde_charged_pion",
                  "false"
                ],
                [
                  "test_dnde_muon",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_dnde_neutral_pion",
                  "false"
                ],
                [
                  "test_dnde_charged_pion",
                  "false"
                ],
                [
                  "test_dnde_muon",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_dnde_neutral_pion",
                "false"
              ],
              [
                "test_dnde_charged_pion",
                "false"
              ],
              [
                "test_dnde_muon",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_dnde_neutral_pion",
                "false"
              ],
              [
                "test_dnde_charged_pion",
                "false"
              ],
              [
                "test_dnde_muon",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_dnde_neutral_pion",
                [
                  "self.base_dir"
                ]
              ],
              [
                "test_dnde_charged_pion",
                [
                  "self.base_dir"
                ]
              ],
              [
                "test_dnde_muon",
                [
                  "self.base_dir"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_dnde_neutral_pion",
                "false"
              ],
              [
                "test_dnde_charged_pion",
                "false"
              ],
              [
                "test_dnde_muon",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_dnde_neutral_pion",
                "false"
              ],
              [
                "test_dnde_charged_pion",
                "false"
              ],
              [
                "test_dnde_muon",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_dnde_neutral_pion",
                  "0"
                ],
                [
                  "test_dnde_charged_pion",
                  "0"
                ],
                [
                  "test_dnde_muon",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_dnde_neutral_pion",
                  "0"
                ],
                [
                  "test_dnde_charged_pion",
                  "0"
                ],
                [
                  "test_dnde_muon",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_dnde_neutral_pion",
                "false"
              ],
              [
                "test_dnde_charged_pion",
                "false"
              ],
              [
                "test_dnde_muon",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_dnde_neutral_pion",
                "false"
              ],
              [
                "test_dnde_charged_pion",
                "false"
              ],
              [
                "test_dnde_muon",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_dnde_neutral_pion",
                "0"
              ],
              [
                "test_dnde_charged_pion",
                "0"
              ],
              [
                "test_dnde_muon",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_dnde_neutral_pion",
                []
              ],
              [
                "test_dnde_charged_pion",
                []
              ],
              [
                "test_dnde_muon",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_dnde_neutral_pion",
                []
              ],
              [
                "test_dnde_charged_pion",
                []
              ],
              [
                "test_dnde_muon",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5470377720485458,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_dnde_neutral_pion",
                  "test_dnde_charged_pion",
                  0.6405126152203486
                ],
                [
                  "test_dnde_muon",
                  "test_dnde_neutral_pion",
                  0.49029033784546
                ],
                [
                  "test_dnde_muon",
                  "test_dnde_charged_pion",
                  0.5103103630798287
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_dnde_neutral_pion",
                "false"
              ],
              [
                "test_dnde_charged_pion",
                "false"
              ],
              [
                "test_dnde_muon",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "test_\u0026_rambo_\u0026_test_rambo.py",
    "testCases": [
      {
        "name": "TestRambo",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_compute_annihilation_cross_section",
                  "[]"
                ],
                [
                  "test_compute_decay_width_muon",
                  "[]"
                ],
                [
                  "test_compute_decay_width_Zee",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_compute_annihilation_cross_section",
                  "[]"
                ],
                [
                  "test_compute_decay_width_muon",
                  "[]"
                ],
                [
                  "test_compute_decay_width_Zee",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_compute_annihilation_cross_section",
                  "false"
                ],
                [
                  "test_compute_decay_width_muon",
                  "false"
                ],
                [
                  "test_compute_decay_width_Zee",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_compute_annihilation_cross_section",
                  "false"
                ],
                [
                  "test_compute_decay_width_muon",
                  "false"
                ],
                [
                  "test_compute_decay_width_Zee",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_compute_annihilation_cross_section",
                  "false"
                ],
                [
                  "test_compute_decay_width_muon",
                  "false"
                ],
                [
                  "test_compute_decay_width_Zee",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_compute_annihilation_cross_section",
                  "false"
                ],
                [
                  "test_compute_decay_width_muon",
                  "false"
                ],
                [
                  "test_compute_decay_width_Zee",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_compute_annihilation_cross_section",
                "false"
              ],
              [
                "test_compute_decay_width_muon",
                "false"
              ],
              [
                "test_compute_decay_width_Zee",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_compute_annihilation_cross_section",
                "false"
              ],
              [
                "test_compute_decay_width_muon",
                "false"
              ],
              [
                "test_compute_decay_width_Zee",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_compute_annihilation_cross_section",
                []
              ],
              [
                "test_compute_decay_width_muon",
                []
              ],
              [
                "test_compute_decay_width_Zee",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_compute_annihilation_cross_section",
                "false"
              ],
              [
                "test_compute_decay_width_muon",
                "false"
              ],
              [
                "test_compute_decay_width_Zee",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_compute_annihilation_cross_section",
                "false"
              ],
              [
                "test_compute_decay_width_muon",
                "false"
              ],
              [
                "test_compute_decay_width_Zee",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_compute_annihilation_cross_section",
                  "0"
                ],
                [
                  "test_compute_decay_width_muon",
                  "0"
                ],
                [
                  "test_compute_decay_width_Zee",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_compute_annihilation_cross_section",
                  "0"
                ],
                [
                  "test_compute_decay_width_muon",
                  "0"
                ],
                [
                  "test_compute_decay_width_Zee",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_compute_annihilation_cross_section",
                "false"
              ],
              [
                "test_compute_decay_width_muon",
                "false"
              ],
              [
                "test_compute_decay_width_Zee",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_compute_annihilation_cross_section",
                "false"
              ],
              [
                "test_compute_decay_width_muon",
                "false"
              ],
              [
                "test_compute_decay_width_Zee",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_compute_annihilation_cross_section",
                "1"
              ],
              [
                "test_compute_decay_width_muon",
                "1"
              ],
              [
                "test_compute_decay_width_Zee",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": true,
            "detail": [
              [
                "test_compute_annihilation_cross_section",
                [
                  "P",
                  "Q",
                  "p1",
                  "p2",
                  "p3",
                  "p4",
                  "isp_masses",
                  "cme",
                  "analytic",
                  "pi_mag",
                  "fsp_masses",
                  "rambo"
                ]
              ],
              [
                "test_compute_decay_width_muon",
                [
                  "r",
                  "pe",
                  "corr_fac",
                  "pmu",
                  "pvmu",
                  "analytic",
                  "pve",
                  "fsp_masses",
                  "rambo"
                ]
              ],
              [
                "test_compute_decay_width_Zee",
                [
                  "p1",
                  "p2",
                  "sw",
                  "cw",
                  "num",
                  "den",
                  "analytic",
                  "fsp_masses",
                  "rambo"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_compute_annihilation_cross_section",
                []
              ],
              [
                "test_compute_decay_width_muon",
                []
              ],
              [
                "test_compute_decay_width_Zee",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9067640105234824,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_compute_annihilation_cross_section",
                  "test_compute_decay_width_muon",
                  0.8909567098750687
                ],
                [
                  "test_compute_decay_width_muon",
                  "test_compute_decay_width_Zee",
                  0.9262189078612139
                ],
                [
                  "test_compute_annihilation_cross_section",
                  "test_compute_decay_width_Zee",
                  0.903116413834165
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_compute_annihilation_cross_section",
                "false"
              ],
              [
                "test_compute_decay_width_muon",
                "false"
              ],
              [
                "test_compute_decay_width_Zee",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "test_\u0026_test_relic_density.py",
    "testCases": [
      {
        "name": "TestRelicDensity",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_relic_density",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_relic_density",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_relic_density",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_relic_density",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_relic_density",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_relic_density",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_relic_density",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_relic_density",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_relic_density",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_relic_density",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_relic_density",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_relic_density",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_relic_density",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_relic_density",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_relic_density",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_relic_density",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_relic_density",
                [
                  "rd_numeric",
                  "rd_semianalytic"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_relic_density",
                [
                  "self.models"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_relic_density",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "test_\u0026_scalar_mediator_\u0026_test_scalar_mediator.py",
    "testCases": [
      {
        "name": "TestScalarMediator",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_cross_sections",
                  "[]"
                ],
                [
                  "test_branching_fractions",
                  "[]"
                ],
                [
                  "test_spectra",
                  "[]"
                ],
                [
                  "test_partial_widths",
                  "[]"
                ],
                [
                  "test_list_final_states",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_positron_spectra",
                  "[]"
                ],
                [
                  "test_positron_lines",
                  "[]"
                ],
                [
                  "test_compute_vs",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_spectrum_funcs",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_cross_sections",
                  "[]"
                ],
                [
                  "test_branching_fractions",
                  "[]"
                ],
                [
                  "test_spectra",
                  "[]"
                ],
                [
                  "test_partial_widths",
                  "[]"
                ],
                [
                  "test_list_final_states",
                  "[]"
                ],
                [
                  "test_positron_spectra",
                  "[]"
                ],
                [
                  "test_positron_lines",
                  "[]"
                ],
                [
                  "test_compute_vs",
                  "[]"
                ],
                [
                  "test_spectrum_funcs",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_cross_sections",
                  "true"
                ],
                [
                  "test_branching_fractions",
                  "true"
                ],
                [
                  "test_spectra",
                  "true"
                ],
                [
                  "test_partial_widths",
                  "true"
                ],
                [
                  "test_list_final_states",
                  "false"
                ],
                [
                  "test_positron_spectra",
                  "true"
                ],
                [
                  "test_positron_lines",
                  "false"
                ],
                [
                  "test_compute_vs",
                  "false"
                ],
                [
                  "test_spectrum_funcs",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_cross_sections",
                  "false"
                ],
                [
                  "test_branching_fractions",
                  "false"
                ],
                [
                  "test_spectra",
                  "false"
                ],
                [
                  "test_partial_widths",
                  "false"
                ],
                [
                  "test_list_final_states",
                  "false"
                ],
                [
                  "test_positron_spectra",
                  "false"
                ],
                [
                  "test_positron_lines",
                  "false"
                ],
                [
                  "test_compute_vs",
                  "false"
                ],
                [
                  "test_spectrum_funcs",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_cross_sections",
                  "false"
                ],
                [
                  "test_branching_fractions",
                  "false"
                ],
                [
                  "test_spectra",
                  "false"
                ],
                [
                  "test_partial_widths",
                  "false"
                ],
                [
                  "test_list_final_states",
                  "false"
                ],
                [
                  "test_positron_spectra",
                  "false"
                ],
                [
                  "test_positron_lines",
                  "false"
                ],
                [
                  "test_compute_vs",
                  "false"
                ],
                [
                  "test_spectrum_funcs",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_cross_sections",
                  "false"
                ],
                [
                  "test_branching_fractions",
                  "false"
                ],
                [
                  "test_spectra",
                  "false"
                ],
                [
                  "test_partial_widths",
                  "false"
                ],
                [
                  "test_list_final_states",
                  "false"
                ],
                [
                  "test_positron_spectra",
                  "false"
                ],
                [
                  "test_positron_lines",
                  "false"
                ],
                [
                  "test_compute_vs",
                  "false"
                ],
                [
                  "test_spectrum_funcs",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cross_sections",
                "false"
              ],
              [
                "test_branching_fractions",
                "false"
              ],
              [
                "test_spectra",
                "false"
              ],
              [
                "test_partial_widths",
                "false"
              ],
              [
                "test_list_final_states",
                "false"
              ],
              [
                "test_positron_spectra",
                "false"
              ],
              [
                "test_positron_lines",
                "false"
              ],
              [
                "test_compute_vs",
                "false"
              ],
              [
                "test_spectrum_funcs",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_cross_sections",
                "false"
              ],
              [
                "test_branching_fractions",
                "false"
              ],
              [
                "test_spectra",
                "false"
              ],
              [
                "test_partial_widths",
                "false"
              ],
              [
                "test_list_final_states",
                "false"
              ],
              [
                "test_positron_spectra",
                "false"
              ],
              [
                "test_positron_lines",
                "false"
              ],
              [
                "test_compute_vs",
                "false"
              ],
              [
                "test_spectrum_funcs",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_cross_sections",
                []
              ],
              [
                "test_branching_fractions",
                []
              ],
              [
                "test_spectra",
                []
              ],
              [
                "test_partial_widths",
                []
              ],
              [
                "test_list_final_states",
                []
              ],
              [
                "test_positron_spectra",
                []
              ],
              [
                "test_positron_lines",
                []
              ],
              [
                "test_compute_vs",
                []
              ],
              [
                "test_spectrum_funcs",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cross_sections",
                "false"
              ],
              [
                "test_branching_fractions",
                "false"
              ],
              [
                "test_spectra",
                "false"
              ],
              [
                "test_partial_widths",
                "false"
              ],
              [
                "test_list_final_states",
                "false"
              ],
              [
                "test_positron_spectra",
                "false"
              ],
              [
                "test_positron_lines",
                "false"
              ],
              [
                "test_compute_vs",
                "false"
              ],
              [
                "test_spectrum_funcs",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cross_sections",
                "false"
              ],
              [
                "test_branching_fractions",
                "false"
              ],
              [
                "test_spectra",
                "false"
              ],
              [
                "test_partial_widths",
                "false"
              ],
              [
                "test_list_final_states",
                "false"
              ],
              [
                "test_positron_spectra",
                "false"
              ],
              [
                "test_positron_lines",
                "false"
              ],
              [
                "test_compute_vs",
                "false"
              ],
              [
                "test_spectrum_funcs",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_cross_sections",
                  "0"
                ],
                [
                  "test_branching_fractions",
                  "0"
                ],
                [
                  "test_spectra",
                  "0"
                ],
                [
                  "test_partial_widths",
                  "0"
                ],
                [
                  "test_list_final_states",
                  "0"
                ],
                [
                  "test_positron_spectra",
                  "0"
                ],
                [
                  "test_positron_lines",
                  "0"
                ],
                [
                  "test_compute_vs",
                  "0"
                ],
                [
                  "test_spectrum_funcs",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_cross_sections",
                  "0"
                ],
                [
                  "test_branching_fractions",
                  "0"
                ],
                [
                  "test_spectra",
                  "0"
                ],
                [
                  "test_partial_widths",
                  "0"
                ],
                [
                  "test_list_final_states",
                  "0"
                ],
                [
                  "test_positron_spectra",
                  "0"
                ],
                [
                  "test_positron_lines",
                  "0"
                ],
                [
                  "test_compute_vs",
                  "0"
                ],
                [
                  "test_spectrum_funcs",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_cross_sections",
                "true"
              ],
              [
                "test_branching_fractions",
                "false"
              ],
              [
                "test_spectra",
                "false"
              ],
              [
                "test_partial_widths",
                "false"
              ],
              [
                "test_list_final_states",
                "false"
              ],
              [
                "test_positron_spectra",
                "false"
              ],
              [
                "test_positron_lines",
                "false"
              ],
              [
                "test_compute_vs",
                "false"
              ],
              [
                "test_spectrum_funcs",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cross_sections",
                "false"
              ],
              [
                "test_branching_fractions",
                "false"
              ],
              [
                "test_spectra",
                "false"
              ],
              [
                "test_partial_widths",
                "false"
              ],
              [
                "test_list_final_states",
                "false"
              ],
              [
                "test_positron_spectra",
                "false"
              ],
              [
                "test_positron_lines",
                "false"
              ],
              [
                "test_compute_vs",
                "false"
              ],
              [
                "test_spectrum_funcs",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_cross_sections",
                "2"
              ],
              [
                "test_branching_fractions",
                "2"
              ],
              [
                "test_spectra",
                "2"
              ],
              [
                "test_partial_widths",
                "2"
              ],
              [
                "test_list_final_states",
                "4"
              ],
              [
                "test_positron_spectra",
                "2"
              ],
              [
                "test_positron_lines",
                "4"
              ],
              [
                "test_compute_vs",
                "2"
              ],
              [
                "test_spectrum_funcs",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_cross_sections",
                [
                  "cs2_new",
                  "cs1_new"
                ]
              ],
              [
                "test_branching_fractions",
                [
                  "bf2_new",
                  "val2",
                  "val1",
                  "bf1_new"
                ]
              ],
              [
                "test_spectra",
                [
                  "spec1_new",
                  "spec2_new"
                ]
              ],
              [
                "test_partial_widths",
                [
                  "ps2_new",
                  "val2",
                  "val1",
                  "ps1_new"
                ]
              ],
              [
                "test_list_final_states",
                [
                  "list_fs",
                  "hq_fss"
                ]
              ],
              [
                "test_positron_spectra",
                [
                  "pspec1_new",
                  "pspec2_new"
                ]
              ],
              [
                "test_positron_lines",
                [
                  "lns2_new",
                  "lns1_new"
                ]
              ],
              [
                "test_compute_vs",
                []
              ],
              [
                "test_spectrum_funcs",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_cross_sections",
                [
                  "self.sm2",
                  "self.sm1"
                ]
              ],
              [
                "test_branching_fractions",
                [
                  "self.sm2",
                  "self.sm1"
                ]
              ],
              [
                "test_spectra",
                [
                  "self.sm2",
                  "self.sm1"
                ]
              ],
              [
                "test_partial_widths",
                [
                  "self.sm2",
                  "self.sm1"
                ]
              ],
              [
                "test_list_final_states",
                [
                  "self.sm2",
                  "self.sm1"
                ]
              ],
              [
                "test_positron_spectra",
                [
                  "self.sm2",
                  "self.sm1"
                ]
              ],
              [
                "test_positron_lines",
                [
                  "self.sm2",
                  "self.sm1"
                ]
              ],
              [
                "test_compute_vs",
                [
                  "self.sm2",
                  "self.sm1"
                ]
              ],
              [
                "test_spectrum_funcs",
                [
                  "self.sm2",
                  "self.sm1"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.3866316654298002,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_spectrum_funcs",
                  "test_partial_widths",
                  0.08850130404923037
                ],
                [
                  "test_branching_fractions",
                  "test_compute_vs",
                  0.21062159273762862
                ],
                [
                  "test_branching_fractions",
                  "test_spectra",
                  0.8321022916571527
                ],
                [
                  "test_list_final_states",
                  "test_positron_lines",
                  0.21358819887621833
                ],
                [
                  "test_cross_sections",
                  "test_positron_spectra",
                  0.5645302961572538
                ],
                [
                  "test_list_final_states",
                  "test_partial_widths",
                  0.2676222145494157
                ],
                [
                  "test_list_final_states",
                  "test_cross_sections",
                  0.26189837341649946
                ],
                [
                  "test_spectrum_funcs",
                  "test_positron_lines",
                  0.0875
                ],
                [
                  "test_spectra",
                  "test_spectrum_funcs",
                  0.08918825850158447
                ],
                [
                  "test_compute_vs",
                  "test_positron_lines",
                  0.26687249808205815
                ],
                [
                  "test_cross_sections",
                  "test_branching_fractions",
                  0.6474299443272876
                ],
                [
                  "test_list_final_states",
                  "test_positron_spectra",
                  0.17971866097434744
                ],
                [
                  "test_spectra",
                  "test_partial_widths",
                  0.8170347321131809
                ],
                [
                  "test_branching_fractions",
                  "test_spectrum_funcs",
                  0.08632113414172327
                ],
                [
                  "test_cross_sections",
                  "test_positron_lines",
                  0.6241802038510238
                ],
                [
                  "test_list_final_states",
                  "test_spectra",
                  0.22745742679713424
                ],
                [
                  "test_spectrum_funcs",
                  "test_positron_spectra",
                  0.0913492564200791
                ],
                [
                  "test_cross_sections",
                  "test_spectrum_funcs",
                  0.056160172582997
                ],
                [
                  "test_compute_vs",
                  "test_spectrum_funcs",
                  0.1143739277494535
                ],
                [
                  "test_branching_fractions",
                  "test_partial_widths",
                  0.8556276891177178
                ],
                [
                  "test_list_final_states",
                  "test_compute_vs",
                  0.2916886116585612
                ],
                [
                  "test_branching_fractions",
                  "test_positron_lines",
                  0.5549215766253638
                ],
                [
                  "test_compute_vs",
                  "test_positron_spectra",
                  0.21492973550584651
                ],
                [
                  "test_partial_widths",
                  "test_positron_lines",
                  0.5284792156082614
                ],
                [
                  "test_cross_sections",
                  "test_compute_vs",
                  0.2153321287175617
                ],
                [
                  "test_positron_spectra",
                  "test_positron_lines",
                  0.5298256872364587
                ],
                [
                  "test_branching_fractions",
                  "test_positron_spectra",
                  0.7956178833991693
                ],
                [
                  "test_spectra",
                  "test_positron_lines",
                  0.5325813150523188
                ],
                [
                  "test_cross_sections",
                  "test_spectra",
                  0.6067837336246273
                ],
                [
                  "test_cross_sections",
                  "test_partial_widths",
                  0.6345688708920824
                ],
                [
                  "test_compute_vs",
                  "test_spectra",
                  0.23316140420479553
                ],
                [
                  "test_compute_vs",
                  "test_partial_widths",
                  0.18509242066393766
                ],
                [
                  "test_list_final_states",
                  "test_spectrum_funcs",
                  0.04781825347975037
                ],
                [
                  "test_list_final_states",
                  "test_branching_fractions",
                  0.26417445587510124
                ],
                [
                  "test_spectra",
                  "test_positron_spectra",
                  0.8965334625929009
                ],
                [
                  "test_partial_widths",
                  "test_positron_spectra",
                  0.8051530242340839
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_cross_sections",
                "false"
              ],
              [
                "test_branching_fractions",
                "false"
              ],
              [
                "test_spectra",
                "false"
              ],
              [
                "test_partial_widths",
                "false"
              ],
              [
                "test_list_final_states",
                "false"
              ],
              [
                "test_positron_spectra",
                "false"
              ],
              [
                "test_positron_lines",
                "false"
              ],
              [
                "test_compute_vs",
                "false"
              ],
              [
                "test_spectrum_funcs",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 9
      }
    ]
  },
  {
    "name": "test_\u0026_vector_mediator_\u0026_test_vector_mediator.py",
    "testCases": [
      {
        "name": "TestVectorMediator",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_branching_fractions",
                  "[]"
                ],
                [
                  "test_spectra",
                  "[]"
                ],
                [
                  "test_positron_spectra",
                  "[]"
                ],
                [
                  "test_spectrum_funcs",
                  "[]"
                ],
                [
                  "test_positron_lines",
                  "[]"
                ],
                [
                  "test_cross_sections",
                  "[]"
                ],
                [
                  "test_partial_widths",
                  "[]"
                ],
                [
                  "test_list_final_states",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_branching_fractions",
                  "[]"
                ],
                [
                  "test_spectra",
                  "[]"
                ],
                [
                  "test_positron_spectra",
                  "[]"
                ],
                [
                  "test_spectrum_funcs",
                  "[]"
                ],
                [
                  "test_positron_lines",
                  "[]"
                ],
                [
                  "test_cross_sections",
                  "[]"
                ],
                [
                  "test_partial_widths",
                  "[]"
                ],
                [
                  "test_list_final_states",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_branching_fractions",
                  "true"
                ],
                [
                  "test_spectra",
                  "true"
                ],
                [
                  "test_positron_spectra",
                  "true"
                ],
                [
                  "test_spectrum_funcs",
                  "false"
                ],
                [
                  "test_positron_lines",
                  "true"
                ],
                [
                  "test_cross_sections",
                  "true"
                ],
                [
                  "test_partial_widths",
                  "true"
                ],
                [
                  "test_list_final_states",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_branching_fractions",
                  "false"
                ],
                [
                  "test_spectra",
                  "false"
                ],
                [
                  "test_positron_spectra",
                  "false"
                ],
                [
                  "test_spectrum_funcs",
                  "false"
                ],
                [
                  "test_positron_lines",
                  "false"
                ],
                [
                  "test_cross_sections",
                  "false"
                ],
                [
                  "test_partial_widths",
                  "false"
                ],
                [
                  "test_list_final_states",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_branching_fractions",
                  "false"
                ],
                [
                  "test_spectra",
                  "false"
                ],
                [
                  "test_positron_spectra",
                  "false"
                ],
                [
                  "test_spectrum_funcs",
                  "false"
                ],
                [
                  "test_positron_lines",
                  "false"
                ],
                [
                  "test_cross_sections",
                  "false"
                ],
                [
                  "test_partial_widths",
                  "false"
                ],
                [
                  "test_list_final_states",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_branching_fractions",
                  "false"
                ],
                [
                  "test_spectra",
                  "false"
                ],
                [
                  "test_positron_spectra",
                  "false"
                ],
                [
                  "test_spectrum_funcs",
                  "false"
                ],
                [
                  "test_positron_lines",
                  "false"
                ],
                [
                  "test_cross_sections",
                  "false"
                ],
                [
                  "test_partial_widths",
                  "false"
                ],
                [
                  "test_list_final_states",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_branching_fractions",
                "false"
              ],
              [
                "test_spectra",
                "false"
              ],
              [
                "test_positron_spectra",
                "false"
              ],
              [
                "test_spectrum_funcs",
                "false"
              ],
              [
                "test_positron_lines",
                "false"
              ],
              [
                "test_cross_sections",
                "false"
              ],
              [
                "test_partial_widths",
                "false"
              ],
              [
                "test_list_final_states",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_branching_fractions",
                "false"
              ],
              [
                "test_spectra",
                "false"
              ],
              [
                "test_positron_spectra",
                "false"
              ],
              [
                "test_spectrum_funcs",
                "false"
              ],
              [
                "test_positron_lines",
                "false"
              ],
              [
                "test_cross_sections",
                "false"
              ],
              [
                "test_partial_widths",
                "false"
              ],
              [
                "test_list_final_states",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_branching_fractions",
                []
              ],
              [
                "test_spectra",
                []
              ],
              [
                "test_positron_spectra",
                []
              ],
              [
                "test_spectrum_funcs",
                []
              ],
              [
                "test_positron_lines",
                []
              ],
              [
                "test_cross_sections",
                []
              ],
              [
                "test_partial_widths",
                []
              ],
              [
                "test_list_final_states",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_branching_fractions",
                "false"
              ],
              [
                "test_spectra",
                "false"
              ],
              [
                "test_positron_spectra",
                "false"
              ],
              [
                "test_spectrum_funcs",
                "false"
              ],
              [
                "test_positron_lines",
                "false"
              ],
              [
                "test_cross_sections",
                "false"
              ],
              [
                "test_partial_widths",
                "false"
              ],
              [
                "test_list_final_states",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_branching_fractions",
                "false"
              ],
              [
                "test_spectra",
                "false"
              ],
              [
                "test_positron_spectra",
                "false"
              ],
              [
                "test_spectrum_funcs",
                "false"
              ],
              [
                "test_positron_lines",
                "false"
              ],
              [
                "test_cross_sections",
                "false"
              ],
              [
                "test_partial_widths",
                "false"
              ],
              [
                "test_list_final_states",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_branching_fractions",
                  "0"
                ],
                [
                  "test_spectra",
                  "0"
                ],
                [
                  "test_positron_spectra",
                  "0"
                ],
                [
                  "test_spectrum_funcs",
                  "0"
                ],
                [
                  "test_positron_lines",
                  "0"
                ],
                [
                  "test_cross_sections",
                  "0"
                ],
                [
                  "test_partial_widths",
                  "0"
                ],
                [
                  "test_list_final_states",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_branching_fractions",
                  "0"
                ],
                [
                  "test_spectra",
                  "0"
                ],
                [
                  "test_positron_spectra",
                  "0"
                ],
                [
                  "test_spectrum_funcs",
                  "0"
                ],
                [
                  "test_positron_lines",
                  "0"
                ],
                [
                  "test_cross_sections",
                  "0"
                ],
                [
                  "test_partial_widths",
                  "0"
                ],
                [
                  "test_list_final_states",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_branching_fractions",
                "false"
              ],
              [
                "test_spectra",
                "false"
              ],
              [
                "test_positron_spectra",
                "false"
              ],
              [
                "test_spectrum_funcs",
                "false"
              ],
              [
                "test_positron_lines",
                "false"
              ],
              [
                "test_cross_sections",
                "false"
              ],
              [
                "test_partial_widths",
                "false"
              ],
              [
                "test_list_final_states",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_branching_fractions",
                "false"
              ],
              [
                "test_spectra",
                "false"
              ],
              [
                "test_positron_spectra",
                "false"
              ],
              [
                "test_spectrum_funcs",
                "false"
              ],
              [
                "test_positron_lines",
                "false"
              ],
              [
                "test_cross_sections",
                "false"
              ],
              [
                "test_partial_widths",
                "false"
              ],
              [
                "test_list_final_states",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_branching_fractions",
                "6"
              ],
              [
                "test_spectra",
                "6"
              ],
              [
                "test_positron_spectra",
                "6"
              ],
              [
                "test_spectrum_funcs",
                "0"
              ],
              [
                "test_positron_lines",
                "6"
              ],
              [
                "test_cross_sections",
                "6"
              ],
              [
                "test_partial_widths",
                "6"
              ],
              [
                "test_list_final_states",
                "9"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_branching_fractions",
                [
                  "val2",
                  "val1",
                  "bfs5",
                  "bfs6",
                  "bfs3",
                  "bfs4",
                  "bfs1",
                  "bfs2"
                ]
              ],
              [
                "test_spectra",
                [
                  "spec3",
                  "spec4",
                  "spec5",
                  "spec6",
                  "spec1",
                  "spec2"
                ]
              ],
              [
                "test_positron_spectra",
                [
                  "pspec2",
                  "pspec1",
                  "pspec6",
                  "pspec5",
                  "pspec4",
                  "pspec3"
                ]
              ],
              [
                "test_spectrum_funcs",
                []
              ],
              [
                "test_positron_lines",
                [
                  "ln3",
                  "ln2",
                  "ln5",
                  "ln4",
                  "ln6",
                  "ln1"
                ]
              ],
              [
                "test_cross_sections",
                [
                  "css1",
                  "css2",
                  "css5",
                  "css6",
                  "css3",
                  "css4"
                ]
              ],
              [
                "test_partial_widths",
                [
                  "pws1",
                  "pws2",
                  "pws3",
                  "val2",
                  "val1",
                  "pws4",
                  "pws5",
                  "pws6"
                ]
              ],
              [
                "test_list_final_states",
                [
                  "list_fs",
                  "quark_only_fss"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_branching_fractions",
                [
                  "self.vm4",
                  "self.vm3",
                  "self.vm2",
                  "self.vm1",
                  "self.vm6",
                  "self.vm5"
                ]
              ],
              [
                "test_spectra",
                [
                  "self.vm4",
                  "self.vm3",
                  "self.vm2",
                  "self.vm1",
                  "self.vm6",
                  "self.vm5"
                ]
              ],
              [
                "test_positron_spectra",
                [
                  "self.vm4",
                  "self.vm3",
                  "self.vm2",
                  "self.vm1",
                  "self.vm6",
                  "self.vm5"
                ]
              ],
              [
                "test_spectrum_funcs",
                [
                  "self.vm4",
                  "self.vm3",
                  "self.vm2",
                  "self.vm1",
                  "self.vm6",
                  "self.vm5"
                ]
              ],
              [
                "test_positron_lines",
                [
                  "self.vm4",
                  "self.vm3",
                  "self.vm2",
                  "self.vm1",
                  "self.vm6",
                  "self.vm5"
                ]
              ],
              [
                "test_cross_sections",
                [
                  "self.vm4",
                  "self.vm3",
                  "self.vm2",
                  "self.vm1",
                  "self.vm6",
                  "self.vm5"
                ]
              ],
              [
                "test_partial_widths",
                [
                  "self.vm4",
                  "self.vm3",
                  "self.vm2",
                  "self.vm1",
                  "self.vm6",
                  "self.vm5"
                ]
              ],
              [
                "test_list_final_states",
                [
                  "self.vm4",
                  "self.vm3",
                  "self.vm2",
                  "self.vm1",
                  "self.vm6",
                  "self.vm5"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.420159345479115,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_list_final_states",
                  "test_spectra",
                  0.1003841710152868
                ],
                [
                  "test_spectra",
                  "test_partial_widths",
                  0.7480012399200268
                ],
                [
                  "test_list_final_states",
                  "test_branching_fractions",
                  0.13813698940805286
                ],
                [
                  "test_branching_fractions",
                  "test_positron_spectra",
                  0.7695476922918937
                ],
                [
                  "test_spectrum_funcs",
                  "test_positron_spectra",
                  0.13153118540340658
                ],
                [
                  "test_positron_spectra",
                  "test_positron_lines",
                  0.5534488098563125
                ],
                [
                  "test_cross_sections",
                  "test_spectra",
                  0.5902946980339865
                ],
                [
                  "test_branching_fractions",
                  "test_spectra",
                  0.7621683937982955
                ],
                [
                  "test_list_final_states",
                  "test_positron_spectra",
                  0.09487982741955985
                ],
                [
                  "test_cross_sections",
                  "test_positron_spectra",
                  0.5908418276839281
                ],
                [
                  "test_cross_sections",
                  "test_positron_lines",
                  0.5979930728835268
                ],
                [
                  "test_list_final_states",
                  "test_spectrum_funcs",
                  0.010350983390135312
                ],
                [
                  "test_partial_widths",
                  "test_positron_spectra",
                  0.7578688039303341
                ],
                [
                  "test_partial_widths",
                  "test_positron_lines",
                  0.5097747968194555
                ],
                [
                  "test_spectra",
                  "test_positron_spectra",
                  0.8469270679814894
                ],
                [
                  "test_spectra",
                  "test_positron_lines",
                  0.46862504034193847
                ],
                [
                  "test_spectra",
                  "test_spectrum_funcs",
                  0.1281753561034214
                ],
                [
                  "test_branching_fractions",
                  "test_positron_lines",
                  0.5361127455920228
                ],
                [
                  "test_cross_sections",
                  "test_branching_fractions",
                  0.6757502810125751
                ],
                [
                  "test_spectrum_funcs",
                  "test_partial_widths",
                  0.20336356621687873
                ],
                [
                  "test_spectrum_funcs",
                  "test_positron_lines",
                  0.2500101458980176
                ],
                [
                  "test_list_final_states",
                  "test_cross_sections",
                  0.14958005732178034
                ],
                [
                  "test_branching_fractions",
                  "test_partial_widths",
                  0.8725359279769359
                ],
                [
                  "test_branching_fractions",
                  "test_spectrum_funcs",
                  0.19740517264277596
                ],
                [
                  "test_list_final_states",
                  "test_partial_widths",
                  0.1316865725252907
                ],
                [
                  "test_list_final_states",
                  "test_positron_lines",
                  0.11924319432965301
                ],
                [
                  "test_cross_sections",
                  "test_partial_widths",
                  0.6400813221435774
                ],
                [
                  "test_cross_sections",
                  "test_spectrum_funcs",
                  0.1897427314746613
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_branching_fractions",
                "false"
              ],
              [
                "test_spectra",
                "false"
              ],
              [
                "test_positron_spectra",
                "false"
              ],
              [
                "test_spectrum_funcs",
                "false"
              ],
              [
                "test_positron_lines",
                "false"
              ],
              [
                "test_cross_sections",
                "false"
              ],
              [
                "test_partial_widths",
                "false"
              ],
              [
                "test_list_final_states",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 8
      }
    ]
  }
]