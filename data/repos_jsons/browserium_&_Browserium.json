[
  {
    "name": "TestFunction_\u0026_unittests_\u0026_test_gecko.py",
    "testCases": [
      {
        "name": "TestGecko",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "testGeckoDriverLinux32",
                  "[PyCallExpression: self.assertEquals, PyCallExpression: self.assertTrue]"
                ],
                [
                  "testGeckoDriverLinux64",
                  "[PyCallExpression: self.assertEquals, PyCallExpression: self.assertTrue]"
                ],
                [
                  "testGeckoDriverMac",
                  "[PyCallExpression: self.assertEquals, PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "testGeckoDriverLinux32",
                  "[]"
                ],
                [
                  "testGeckoDriverLinux64",
                  "[]"
                ],
                [
                  "testGeckoDriverMac",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "testGeckoDriverLinux32",
                  "false"
                ],
                [
                  "testGeckoDriverLinux64",
                  "false"
                ],
                [
                  "testGeckoDriverMac",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "testGeckoDriverLinux32",
                  "false"
                ],
                [
                  "testGeckoDriverLinux64",
                  "false"
                ],
                [
                  "testGeckoDriverMac",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": true
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "testGeckoDriverLinux32",
                  "false"
                ],
                [
                  "testGeckoDriverLinux64",
                  "false"
                ],
                [
                  "testGeckoDriverMac",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "testGeckoDriverLinux32",
                  "false"
                ],
                [
                  "testGeckoDriverLinux64",
                  "false"
                ],
                [
                  "testGeckoDriverMac",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "testGeckoDriverLinux32",
                "false"
              ],
              [
                "testGeckoDriverLinux64",
                "false"
              ],
              [
                "testGeckoDriverMac",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "testGeckoDriverLinux32",
                "false"
              ],
              [
                "testGeckoDriverLinux64",
                "false"
              ],
              [
                "testGeckoDriverMac",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "testGeckoDriverLinux32",
                []
              ],
              [
                "testGeckoDriverLinux64",
                []
              ],
              [
                "testGeckoDriverMac",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "testGeckoDriverLinux32",
                "false"
              ],
              [
                "testGeckoDriverLinux64",
                "false"
              ],
              [
                "testGeckoDriverMac",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "testGeckoDriverLinux32",
                "true"
              ],
              [
                "testGeckoDriverLinux64",
                "true"
              ],
              [
                "testGeckoDriverMac",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "testGeckoDriverLinux32",
                  "0"
                ],
                [
                  "testGeckoDriverLinux64",
                  "0"
                ],
                [
                  "testGeckoDriverMac",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "testGeckoDriverLinux32",
                  "0"
                ],
                [
                  "testGeckoDriverLinux64",
                  "0"
                ],
                [
                  "testGeckoDriverMac",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "testGeckoDriverLinux32",
                "false"
              ],
              [
                "testGeckoDriverLinux64",
                "false"
              ],
              [
                "testGeckoDriverMac",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "testGeckoDriverLinux32",
                "false"
              ],
              [
                "testGeckoDriverLinux64",
                "false"
              ],
              [
                "testGeckoDriverMac",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "testGeckoDriverLinux32",
                "2"
              ],
              [
                "testGeckoDriverLinux64",
                "2"
              ],
              [
                "testGeckoDriverMac",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "testGeckoDriverLinux32",
                [
                  "_data",
                  "_geckoBinLinux32TagName",
                  "_geckoBinLinux32DownloadURL",
                  "_response"
                ]
              ],
              [
                "testGeckoDriverLinux64",
                [
                  "_data",
                  "_geckoBinLinux64DownloadURL",
                  "_response",
                  "_geckoBinLinux64TagName"
                ]
              ],
              [
                "testGeckoDriverMac",
                [
                  "_data",
                  "_response",
                  "_geckoBinMacTagName",
                  "_geckoBinMacDownloadURL"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "testGeckoDriverLinux32",
                []
              ],
              [
                "testGeckoDriverLinux64",
                []
              ],
              [
                "testGeckoDriverMac",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8764865575291231,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "testGeckoDriverMac",
                  "testGeckoDriverLinux32",
                  0.8197312682674084
                ],
                [
                  "testGeckoDriverLinux32",
                  "testGeckoDriverLinux64",
                  0.9940722654971986
                ],
                [
                  "testGeckoDriverMac",
                  "testGeckoDriverLinux64",
                  0.8156561388227622
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "testGeckoDriverLinux32",
                "false"
              ],
              [
                "testGeckoDriverLinux64",
                "false"
              ],
              [
                "testGeckoDriverMac",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "TestFunction_\u0026_unittests_\u0026_test_opera.py",
    "testCases": [
      {
        "name": "TestOpera",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "testOperaDriverLinux",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "testOperaDriverMac",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "testOperaDriverLinux",
                  "[]"
                ],
                [
                  "testOperaDriverMac",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "testOperaDriverLinux",
                  "true"
                ],
                [
                  "testOperaDriverMac",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "testOperaDriverLinux",
                  "false"
                ],
                [
                  "testOperaDriverMac",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": true
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "testOperaDriverLinux",
                  "false"
                ],
                [
                  "testOperaDriverMac",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "testOperaDriverLinux",
                  "false"
                ],
                [
                  "testOperaDriverMac",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "testOperaDriverLinux",
                "false"
              ],
              [
                "testOperaDriverMac",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "testOperaDriverLinux",
                "true"
              ],
              [
                "testOperaDriverMac",
                "true"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "testOperaDriverLinux",
                []
              ],
              [
                "testOperaDriverMac",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "testOperaDriverLinux",
                "false"
              ],
              [
                "testOperaDriverMac",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "testOperaDriverLinux",
                "false"
              ],
              [
                "testOperaDriverMac",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "testOperaDriverLinux",
                  "0"
                ],
                [
                  "testOperaDriverMac",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "testOperaDriverLinux",
                  "0"
                ],
                [
                  "testOperaDriverMac",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "testOperaDriverLinux",
                "false"
              ],
              [
                "testOperaDriverMac",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "testOperaDriverLinux",
                "false"
              ],
              [
                "testOperaDriverMac",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "testOperaDriverLinux",
                "1"
              ],
              [
                "testOperaDriverMac",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "testOperaDriverLinux",
                [
                  "data",
                  "download_url",
                  "_response",
                  "driverAPI"
                ]
              ],
              [
                "testOperaDriverMac",
                [
                  "data",
                  "download_url",
                  "_response",
                  "driverAPI"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "testOperaDriverLinux",
                []
              ],
              [
                "testOperaDriverMac",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9492221078340611,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "testOperaDriverMac",
                  "testOperaDriverLinux",
                  0.9492221078340611
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "testOperaDriverLinux",
                "false"
              ],
              [
                "testOperaDriverMac",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "TestFunction_\u0026_unittests_\u0026_test_chrome.py",
    "testCases": [
      {
        "name": "TestChrome",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "testChromeDriverMac",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "testChromeDriverLinux",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "testChromeDriverMac",
                  "[]"
                ],
                [
                  "testChromeDriverLinux",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "testChromeDriverMac",
                  "true"
                ],
                [
                  "testChromeDriverLinux",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "testChromeDriverMac",
                  "false"
                ],
                [
                  "testChromeDriverLinux",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": true
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "testChromeDriverMac",
                  "false"
                ],
                [
                  "testChromeDriverLinux",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "testChromeDriverMac",
                  "false"
                ],
                [
                  "testChromeDriverLinux",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "testChromeDriverMac",
                "false"
              ],
              [
                "testChromeDriverLinux",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "testChromeDriverMac",
                "true"
              ],
              [
                "testChromeDriverLinux",
                "true"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "testChromeDriverMac",
                []
              ],
              [
                "testChromeDriverLinux",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "testChromeDriverMac",
                "false"
              ],
              [
                "testChromeDriverLinux",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "testChromeDriverMac",
                "false"
              ],
              [
                "testChromeDriverLinux",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "testChromeDriverMac",
                  "0"
                ],
                [
                  "testChromeDriverLinux",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "testChromeDriverMac",
                  "0"
                ],
                [
                  "testChromeDriverLinux",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "testChromeDriverMac",
                "false"
              ],
              [
                "testChromeDriverLinux",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "testChromeDriverMac",
                "false"
              ],
              [
                "testChromeDriverLinux",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "testChromeDriverMac",
                "1"
              ],
              [
                "testChromeDriverLinux",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "testChromeDriverMac",
                [
                  "_data",
                  "_releaseVersion",
                  "_mac_bin",
                  "response",
                  "_releaseVersionAPI",
                  "_apiURLBuilder",
                  "_url"
                ]
              ],
              [
                "testChromeDriverLinux",
                [
                  "_data",
                  "_releaseVersion",
                  "response",
                  "_releaseVersionAPI",
                  "_linux_bin",
                  "_apiURLBuilder",
                  "_url"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "testChromeDriverMac",
                []
              ],
              [
                "testChromeDriverLinux",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9766856310016182,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "testChromeDriverMac",
                  "testChromeDriverLinux",
                  0.9766856310016182
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "testChromeDriverMac",
                "false"
              ],
              [
                "testChromeDriverLinux",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "TestFunction_\u0026_regressiontest_\u0026_test_chromeremote.py",
    "testCases": [
      {
        "name": "Test_chromeremote",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_chromedriver_type_remote",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_chromedriver_type_remote",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_chromedriver_type_remote",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_chromedriver_type_remote",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_chromedriver_type_remote",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_chromedriver_type_remote",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_chromedriver_type_remote",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_chromedriver_type_remote",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_chromedriver_type_remote",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_chromedriver_type_remote",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_chromedriver_type_remote",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_chromedriver_type_remote",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_chromedriver_type_remote",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_chromedriver_type_remote",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_chromedriver_type_remote",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_chromedriver_type_remote",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_chromedriver_type_remote",
                [
                  "controller",
                  "current_url",
                  "driver",
                  "chromedriver"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_chromedriver_type_remote",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_chromedriver_type_remote",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "TestFunction_\u0026_regressiontest_\u0026_test_firefoxremote.py",
    "testCases": [
      {
        "name": "Test_firefoxremote",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_firefox_type_remote",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_firefox_type_remote",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_firefox_type_remote",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_firefox_type_remote",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_firefox_type_remote",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_firefox_type_remote",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_firefox_type_remote",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_firefox_type_remote",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_firefox_type_remote",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_firefox_type_remote",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_firefox_type_remote",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_firefox_type_remote",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_firefox_type_remote",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_firefox_type_remote",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_firefox_type_remote",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_firefox_type_remote",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_firefox_type_remote",
                [
                  "firefoxdriver",
                  "controller",
                  "current_url",
                  "driver"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_firefox_type_remote",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_firefox_type_remote",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "TestFunction_\u0026_regressiontest_\u0026_test_chromestandalone.py",
    "testCases": [
      {
        "name": "Test_chromestandalone",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_chromedriver_type_standalone",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_chromedriver_type_standalone",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_chromedriver_type_standalone",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_chromedriver_type_standalone",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_chromedriver_type_standalone",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_chromedriver_type_standalone",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_chromedriver_type_standalone",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_chromedriver_type_standalone",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_chromedriver_type_standalone",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_chromedriver_type_standalone",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_chromedriver_type_standalone",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_chromedriver_type_standalone",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_chromedriver_type_standalone",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_chromedriver_type_standalone",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_chromedriver_type_standalone",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_chromedriver_type_standalone",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_chromedriver_type_standalone",
                [
                  "controller",
                  "current_url",
                  "driver",
                  "chromedriver"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_chromedriver_type_standalone",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_chromedriver_type_standalone",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "TestFunction_\u0026_regressiontest_\u0026_test_firefoxstandalone.py",
    "testCases": [
      {
        "name": "Test_firefoxstandalone",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_firefoxdriver_type",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_firefoxdriver_type",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_firefoxdriver_type",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_firefoxdriver_type",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_firefoxdriver_type",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_firefoxdriver_type",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_firefoxdriver_type",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_firefoxdriver_type",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_firefoxdriver_type",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_firefoxdriver_type",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_firefoxdriver_type",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_firefoxdriver_type",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_firefoxdriver_type",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_firefoxdriver_type",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_firefoxdriver_type",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_firefoxdriver_type",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_firefoxdriver_type",
                [
                  "controller",
                  "current_url",
                  "geckodriver",
                  "driver"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_firefoxdriver_type",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_firefoxdriver_type",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  }
]