[
  {
    "name": "tests_\u0026_test_lexeme.py",
    "testCases": [
      {
        "name": "TestLexemeCreation",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_creation_success",
                  "[]"
                ],
                [
                  "test_creation_invalid_regex",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_creation_regex_not_str",
                  "[PyCallExpression: self.assertRaises]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_creation_success",
                  "[]"
                ],
                [
                  "test_creation_invalid_regex",
                  "[]"
                ],
                [
                  "test_creation_regex_not_str",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_creation_success",
                  "false"
                ],
                [
                  "test_creation_invalid_regex",
                  "false"
                ],
                [
                  "test_creation_regex_not_str",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_creation_success",
                  "false"
                ],
                [
                  "test_creation_invalid_regex",
                  "false"
                ],
                [
                  "test_creation_regex_not_str",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_creation_success",
                  "false"
                ],
                [
                  "test_creation_invalid_regex",
                  "false"
                ],
                [
                  "test_creation_regex_not_str",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_creation_success",
                  "false"
                ],
                [
                  "test_creation_invalid_regex",
                  "false"
                ],
                [
                  "test_creation_regex_not_str",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_creation_success",
                "false"
              ],
              [
                "test_creation_invalid_regex",
                "false"
              ],
              [
                "test_creation_regex_not_str",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_creation_success",
                "false"
              ],
              [
                "test_creation_invalid_regex",
                "false"
              ],
              [
                "test_creation_regex_not_str",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_creation_success",
                []
              ],
              [
                "test_creation_invalid_regex",
                []
              ],
              [
                "test_creation_regex_not_str",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_creation_success",
                "false"
              ],
              [
                "test_creation_invalid_regex",
                "false"
              ],
              [
                "test_creation_regex_not_str",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_creation_success",
                "false"
              ],
              [
                "test_creation_invalid_regex",
                "false"
              ],
              [
                "test_creation_regex_not_str",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_creation_success",
                  "0"
                ],
                [
                  "test_creation_invalid_regex",
                  "0"
                ],
                [
                  "test_creation_regex_not_str",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_creation_success",
                  "0"
                ],
                [
                  "test_creation_invalid_regex",
                  "0"
                ],
                [
                  "test_creation_regex_not_str",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_creation_success",
                "false"
              ],
              [
                "test_creation_invalid_regex",
                "false"
              ],
              [
                "test_creation_regex_not_str",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_creation_success",
                "false"
              ],
              [
                "test_creation_invalid_regex",
                "false"
              ],
              [
                "test_creation_regex_not_str",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_creation_success",
                "0"
              ],
              [
                "test_creation_invalid_regex",
                "1"
              ],
              [
                "test_creation_regex_not_str",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_creation_success",
                []
              ],
              [
                "test_creation_invalid_regex",
                []
              ],
              [
                "test_creation_regex_not_str",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_creation_success",
                []
              ],
              [
                "test_creation_invalid_regex",
                []
              ],
              [
                "test_creation_regex_not_str",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.535233005384229,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_creation_success",
                  "test_creation_regex_not_str",
                  0.5103103630798288
                ],
                [
                  "test_creation_success",
                  "test_creation_invalid_regex",
                  0.492365963917331
                ],
                [
                  "test_creation_invalid_regex",
                  "test_creation_regex_not_str",
                  0.6030226891555273
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_creation_success",
                "false"
              ],
              [
                "test_creation_invalid_regex",
                "false"
              ],
              [
                "test_creation_regex_not_str",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      },
      {
        "name": "TestLexemeEat",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_eat_empty",
                  "[PyCallExpression: self.assertFalse]"
                ],
                [
                  "test_eat_not_string",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_eat_match_failure",
                  "[PyCallExpression: self.assertFalse]"
                ],
                [
                  "test_eat_success",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_eat_empty",
                  "[]"
                ],
                [
                  "test_eat_not_string",
                  "[]"
                ],
                [
                  "test_eat_match_failure",
                  "[]"
                ],
                [
                  "test_eat_success",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_eat_empty",
                  "false"
                ],
                [
                  "test_eat_not_string",
                  "false"
                ],
                [
                  "test_eat_match_failure",
                  "false"
                ],
                [
                  "test_eat_success",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_eat_empty",
                  "false"
                ],
                [
                  "test_eat_not_string",
                  "false"
                ],
                [
                  "test_eat_match_failure",
                  "false"
                ],
                [
                  "test_eat_success",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_eat_empty",
                  "false"
                ],
                [
                  "test_eat_not_string",
                  "false"
                ],
                [
                  "test_eat_match_failure",
                  "false"
                ],
                [
                  "test_eat_success",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_eat_empty",
                  "false"
                ],
                [
                  "test_eat_not_string",
                  "false"
                ],
                [
                  "test_eat_match_failure",
                  "false"
                ],
                [
                  "test_eat_success",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_eat_empty",
                "false"
              ],
              [
                "test_eat_not_string",
                "false"
              ],
              [
                "test_eat_match_failure",
                "false"
              ],
              [
                "test_eat_success",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_eat_empty",
                "false"
              ],
              [
                "test_eat_not_string",
                "false"
              ],
              [
                "test_eat_match_failure",
                "false"
              ],
              [
                "test_eat_success",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_eat_empty",
                []
              ],
              [
                "test_eat_not_string",
                []
              ],
              [
                "test_eat_match_failure",
                []
              ],
              [
                "test_eat_success",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_eat_empty",
                "false"
              ],
              [
                "test_eat_not_string",
                "false"
              ],
              [
                "test_eat_match_failure",
                "false"
              ],
              [
                "test_eat_success",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_eat_empty",
                "false"
              ],
              [
                "test_eat_not_string",
                "false"
              ],
              [
                "test_eat_match_failure",
                "false"
              ],
              [
                "test_eat_success",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_eat_empty",
                  "0"
                ],
                [
                  "test_eat_not_string",
                  "0"
                ],
                [
                  "test_eat_match_failure",
                  "0"
                ],
                [
                  "test_eat_success",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_eat_empty",
                  "0"
                ],
                [
                  "test_eat_not_string",
                  "0"
                ],
                [
                  "test_eat_match_failure",
                  "0"
                ],
                [
                  "test_eat_success",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_eat_empty",
                "false"
              ],
              [
                "test_eat_not_string",
                "false"
              ],
              [
                "test_eat_match_failure",
                "false"
              ],
              [
                "test_eat_success",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_eat_empty",
                "false"
              ],
              [
                "test_eat_not_string",
                "false"
              ],
              [
                "test_eat_match_failure",
                "false"
              ],
              [
                "test_eat_success",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_eat_empty",
                "1"
              ],
              [
                "test_eat_not_string",
                "1"
              ],
              [
                "test_eat_match_failure",
                "1"
              ],
              [
                "test_eat_success",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_eat_empty",
                []
              ],
              [
                "test_eat_not_string",
                []
              ],
              [
                "test_eat_match_failure",
                []
              ],
              [
                "test_eat_success",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_eat_empty",
                [
                  "self.lexeme"
                ]
              ],
              [
                "test_eat_not_string",
                [
                  "self.lexeme"
                ]
              ],
              [
                "test_eat_match_failure",
                [
                  "self.lexeme"
                ]
              ],
              [
                "test_eat_success",
                [
                  "self.lexeme"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.3944795862190232,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_eat_empty",
                  "test_eat_not_string",
                  0.47140452079103173
                ],
                [
                  "test_eat_empty",
                  "test_eat_match_failure",
                  0.47140452079103173
                ],
                [
                  "test_eat_success",
                  "test_eat_empty",
                  0.32274861218395146
                ],
                [
                  "test_eat_not_string",
                  "test_eat_match_failure",
                  0.41666666666666674
                ],
                [
                  "test_eat_success",
                  "test_eat_not_string",
                  0.3195048252113469
                ],
                [
                  "test_eat_success",
                  "test_eat_match_failure",
                  0.3651483716701107
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_eat_empty",
                "false"
              ],
              [
                "test_eat_not_string",
                "false"
              ],
              [
                "test_eat_match_failure",
                "false"
              ],
              [
                "test_eat_success",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      },
      {
        "name": "TestLexemeRepr",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_repr_success",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_repr_success",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_repr_success",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_repr_success",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_repr_success",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_repr_success",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_repr_success",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_repr_success",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_repr_success",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_repr_success",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_repr_success",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_repr_success",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_repr_success",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_repr_success",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_repr_success",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_repr_success",
                "4"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_repr_success",
                [
                  "lexeme"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_repr_success",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_repr_success",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_command.py",
    "testCases": [
      {
        "name": "TestCommandCreation",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_command_creation_func_type",
                  "[]"
                ],
                [
                  "test_command_creation_command_word_empty",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_command_creation_func_builtin",
                  "[]"
                ],
                [
                  "test_command_creation_command_word_not_str",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_command_creation_func_not_callable",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_command_creation_expects_not_list",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_command_creation_func_partial",
                  "[]"
                ],
                [
                  "test_command_creation_success",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_command_creation_func_type",
                  "[]"
                ],
                [
                  "test_command_creation_command_word_empty",
                  "[]"
                ],
                [
                  "test_command_creation_func_builtin",
                  "[]"
                ],
                [
                  "test_command_creation_command_word_not_str",
                  "[]"
                ],
                [
                  "test_command_creation_func_not_callable",
                  "[]"
                ],
                [
                  "test_command_creation_expects_not_list",
                  "[]"
                ],
                [
                  "test_command_creation_func_partial",
                  "[]"
                ],
                [
                  "test_command_creation_success",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_command_creation_func_type",
                  "false"
                ],
                [
                  "test_command_creation_command_word_empty",
                  "false"
                ],
                [
                  "test_command_creation_func_builtin",
                  "false"
                ],
                [
                  "test_command_creation_command_word_not_str",
                  "false"
                ],
                [
                  "test_command_creation_func_not_callable",
                  "false"
                ],
                [
                  "test_command_creation_expects_not_list",
                  "false"
                ],
                [
                  "test_command_creation_func_partial",
                  "false"
                ],
                [
                  "test_command_creation_success",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_command_creation_func_type",
                  "false"
                ],
                [
                  "test_command_creation_command_word_empty",
                  "false"
                ],
                [
                  "test_command_creation_func_builtin",
                  "false"
                ],
                [
                  "test_command_creation_command_word_not_str",
                  "false"
                ],
                [
                  "test_command_creation_func_not_callable",
                  "false"
                ],
                [
                  "test_command_creation_expects_not_list",
                  "false"
                ],
                [
                  "test_command_creation_func_partial",
                  "false"
                ],
                [
                  "test_command_creation_success",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_command_creation_func_type",
                  "false"
                ],
                [
                  "test_command_creation_command_word_empty",
                  "false"
                ],
                [
                  "test_command_creation_func_builtin",
                  "false"
                ],
                [
                  "test_command_creation_command_word_not_str",
                  "false"
                ],
                [
                  "test_command_creation_func_not_callable",
                  "false"
                ],
                [
                  "test_command_creation_expects_not_list",
                  "false"
                ],
                [
                  "test_command_creation_func_partial",
                  "false"
                ],
                [
                  "test_command_creation_success",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_command_creation_func_type",
                  "false"
                ],
                [
                  "test_command_creation_command_word_empty",
                  "false"
                ],
                [
                  "test_command_creation_func_builtin",
                  "false"
                ],
                [
                  "test_command_creation_command_word_not_str",
                  "false"
                ],
                [
                  "test_command_creation_func_not_callable",
                  "false"
                ],
                [
                  "test_command_creation_expects_not_list",
                  "false"
                ],
                [
                  "test_command_creation_func_partial",
                  "false"
                ],
                [
                  "test_command_creation_success",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_command_creation_func_type",
                "false"
              ],
              [
                "test_command_creation_command_word_empty",
                "false"
              ],
              [
                "test_command_creation_func_builtin",
                "false"
              ],
              [
                "test_command_creation_command_word_not_str",
                "false"
              ],
              [
                "test_command_creation_func_not_callable",
                "false"
              ],
              [
                "test_command_creation_expects_not_list",
                "false"
              ],
              [
                "test_command_creation_func_partial",
                "false"
              ],
              [
                "test_command_creation_success",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_command_creation_func_type",
                "false"
              ],
              [
                "test_command_creation_command_word_empty",
                "false"
              ],
              [
                "test_command_creation_func_builtin",
                "false"
              ],
              [
                "test_command_creation_command_word_not_str",
                "false"
              ],
              [
                "test_command_creation_func_not_callable",
                "false"
              ],
              [
                "test_command_creation_expects_not_list",
                "false"
              ],
              [
                "test_command_creation_func_partial",
                "false"
              ],
              [
                "test_command_creation_success",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_command_creation_func_type",
                []
              ],
              [
                "test_command_creation_command_word_empty",
                []
              ],
              [
                "test_command_creation_func_builtin",
                []
              ],
              [
                "test_command_creation_command_word_not_str",
                []
              ],
              [
                "test_command_creation_func_not_callable",
                []
              ],
              [
                "test_command_creation_expects_not_list",
                []
              ],
              [
                "test_command_creation_func_partial",
                []
              ],
              [
                "test_command_creation_success",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_command_creation_func_type",
                "false"
              ],
              [
                "test_command_creation_command_word_empty",
                "false"
              ],
              [
                "test_command_creation_func_builtin",
                "false"
              ],
              [
                "test_command_creation_command_word_not_str",
                "false"
              ],
              [
                "test_command_creation_func_not_callable",
                "false"
              ],
              [
                "test_command_creation_expects_not_list",
                "false"
              ],
              [
                "test_command_creation_func_partial",
                "false"
              ],
              [
                "test_command_creation_success",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_command_creation_func_type",
                "false"
              ],
              [
                "test_command_creation_command_word_empty",
                "false"
              ],
              [
                "test_command_creation_func_builtin",
                "false"
              ],
              [
                "test_command_creation_command_word_not_str",
                "false"
              ],
              [
                "test_command_creation_func_not_callable",
                "false"
              ],
              [
                "test_command_creation_expects_not_list",
                "false"
              ],
              [
                "test_command_creation_func_partial",
                "false"
              ],
              [
                "test_command_creation_success",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_command_creation_func_type",
                  "0"
                ],
                [
                  "test_command_creation_command_word_empty",
                  "0"
                ],
                [
                  "test_command_creation_func_builtin",
                  "0"
                ],
                [
                  "test_command_creation_command_word_not_str",
                  "0"
                ],
                [
                  "test_command_creation_func_not_callable",
                  "0"
                ],
                [
                  "test_command_creation_expects_not_list",
                  "0"
                ],
                [
                  "test_command_creation_func_partial",
                  "0"
                ],
                [
                  "test_command_creation_success",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_command_creation_func_type",
                  "0"
                ],
                [
                  "test_command_creation_command_word_empty",
                  "0"
                ],
                [
                  "test_command_creation_func_builtin",
                  "0"
                ],
                [
                  "test_command_creation_command_word_not_str",
                  "0"
                ],
                [
                  "test_command_creation_func_not_callable",
                  "0"
                ],
                [
                  "test_command_creation_expects_not_list",
                  "0"
                ],
                [
                  "test_command_creation_func_partial",
                  "0"
                ],
                [
                  "test_command_creation_success",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_command_creation_func_type",
                "false"
              ],
              [
                "test_command_creation_command_word_empty",
                "false"
              ],
              [
                "test_command_creation_func_builtin",
                "false"
              ],
              [
                "test_command_creation_command_word_not_str",
                "false"
              ],
              [
                "test_command_creation_func_not_callable",
                "false"
              ],
              [
                "test_command_creation_expects_not_list",
                "false"
              ],
              [
                "test_command_creation_func_partial",
                "false"
              ],
              [
                "test_command_creation_success",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_command_creation_func_type",
                "false"
              ],
              [
                "test_command_creation_command_word_empty",
                "false"
              ],
              [
                "test_command_creation_func_builtin",
                "false"
              ],
              [
                "test_command_creation_command_word_not_str",
                "false"
              ],
              [
                "test_command_creation_func_not_callable",
                "false"
              ],
              [
                "test_command_creation_expects_not_list",
                "false"
              ],
              [
                "test_command_creation_func_partial",
                "false"
              ],
              [
                "test_command_creation_success",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_command_creation_func_type",
                "0"
              ],
              [
                "test_command_creation_command_word_empty",
                "1"
              ],
              [
                "test_command_creation_func_builtin",
                "0"
              ],
              [
                "test_command_creation_command_word_not_str",
                "1"
              ],
              [
                "test_command_creation_func_not_callable",
                "1"
              ],
              [
                "test_command_creation_expects_not_list",
                "1"
              ],
              [
                "test_command_creation_func_partial",
                "0"
              ],
              [
                "test_command_creation_success",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_command_creation_func_type",
                []
              ],
              [
                "test_command_creation_command_word_empty",
                []
              ],
              [
                "test_command_creation_func_builtin",
                []
              ],
              [
                "test_command_creation_command_word_not_str",
                []
              ],
              [
                "test_command_creation_func_not_callable",
                []
              ],
              [
                "test_command_creation_expects_not_list",
                []
              ],
              [
                "test_command_creation_func_partial",
                [
                  "f"
                ]
              ],
              [
                "test_command_creation_success",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_command_creation_func_type",
                []
              ],
              [
                "test_command_creation_command_word_empty",
                []
              ],
              [
                "test_command_creation_func_builtin",
                []
              ],
              [
                "test_command_creation_command_word_not_str",
                []
              ],
              [
                "test_command_creation_func_not_callable",
                []
              ],
              [
                "test_command_creation_expects_not_list",
                []
              ],
              [
                "test_command_creation_func_partial",
                []
              ],
              [
                "test_command_creation_success",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5617806600220397,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_command_creation_func_type",
                  "test_command_creation_expects_not_list",
                  0.6085806194501846
                ],
                [
                  "test_command_creation_func_not_callable",
                  "test_command_creation_expects_not_list",
                  0.7745966692414834
                ],
                [
                  "test_command_creation_func_not_callable",
                  "test_command_creation_func_type",
                  0.5499719409228703
                ],
                [
                  "test_command_creation_command_word_empty",
                  "test_command_creation_expects_not_list",
                  0.7027283689263065
                ],
                [
                  "test_command_creation_command_word_not_str",
                  "test_command_creation_func_not_callable",
                  0.6350006350009526
                ],
                [
                  "test_command_creation_success",
                  "test_command_creation_command_word_not_str",
                  0.6847387945809709
                ],
                [
                  "test_command_creation_success",
                  "test_command_creation_func_partial",
                  0.4075695729696112
                ],
                [
                  "test_command_creation_func_builtin",
                  "test_command_creation_func_type",
                  0.7777777777777778
                ],
                [
                  "test_command_creation_command_word_not_str",
                  "test_command_creation_expects_not_list",
                  0.6886171275731506
                ],
                [
                  "test_command_creation_success",
                  "test_command_creation_func_builtin",
                  0.508328567775349
                ],
                [
                  "test_command_creation_command_word_empty",
                  "test_command_creation_func_type",
                  0.4490502093697089
                ],
                [
                  "test_command_creation_command_word_empty",
                  "test_command_creation_func_not_callable",
                  0.6350528962771202
                ],
                [
                  "test_command_creation_command_word_not_str",
                  "test_command_creation_func_partial",
                  0.33601075251612356
                ],
                [
                  "test_command_creation_command_word_not_str",
                  "test_command_creation_func_builtin",
                  0.4190790380624748
                ],
                [
                  "test_command_creation_func_partial",
                  "test_command_creation_expects_not_list",
                  0.43915503282683993
                ],
                [
                  "test_command_creation_func_partial",
                  "test_command_creation_func_type",
                  0.6236095644623235
                ],
                [
                  "test_command_creation_success",
                  "test_command_creation_expects_not_list",
                  0.5568460463897046
                ],
                [
                  "test_command_creation_command_word_empty",
                  "test_command_creation_func_partial",
                  0.3600411499115478
                ],
                [
                  "test_command_creation_command_word_not_str",
                  "test_command_creation_func_type",
                  0.4190790380624748
                ],
                [
                  "test_command_creation_command_word_not_str",
                  "test_command_creation_command_word_empty",
                  0.8986914687663685
                ],
                [
                  "test_command_creation_command_word_empty",
                  "test_command_creation_func_builtin",
                  0.4490502093697089
                ],
                [
                  "test_command_creation_func_builtin",
                  "test_command_creation_expects_not_list",
                  0.5477225575051662
                ],
                [
                  "test_command_creation_success",
                  "test_command_creation_command_word_empty",
                  0.7043607250604991
                ],
                [
                  "test_command_creation_success",
                  "test_command_creation_func_not_callable",
                  0.4313310928137537
                ],
                [
                  "test_command_creation_func_builtin",
                  "test_command_creation_func_partial",
                  0.6236095644623235
                ],
                [
                  "test_command_creation_func_not_callable",
                  "test_command_creation_func_builtin",
                  0.5499719409228703
                ],
                [
                  "test_command_creation_func_not_callable",
                  "test_command_creation_func_partial",
                  0.44095855184409843
                ],
                [
                  "test_command_creation_success",
                  "test_command_creation_func_type",
                  0.508328567775349
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_command_creation_func_type",
                "false"
              ],
              [
                "test_command_creation_command_word_empty",
                "false"
              ],
              [
                "test_command_creation_func_builtin",
                "false"
              ],
              [
                "test_command_creation_command_word_not_str",
                "false"
              ],
              [
                "test_command_creation_func_not_callable",
                "false"
              ],
              [
                "test_command_creation_expects_not_list",
                "false"
              ],
              [
                "test_command_creation_func_partial",
                "false"
              ],
              [
                "test_command_creation_success",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 8
      },
      {
        "name": "TestCommandRemoveCW",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_command_remove_CW_success",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_command_remove_CW_string_not_str",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_command_remove_CW_string_less_than_CW",
                  "[PyCallExpression: self.assertFalse, PyCallExpression: self.assertFalse]"
                ],
                [
                  "test_command_remove_CW_no_CW",
                  "[PyCallExpression: self.assertFalse, PyCallExpression: self.assertFalse]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_command_remove_CW_success",
                  "[]"
                ],
                [
                  "test_command_remove_CW_string_not_str",
                  "[]"
                ],
                [
                  "test_command_remove_CW_string_less_than_CW",
                  "[]"
                ],
                [
                  "test_command_remove_CW_no_CW",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_command_remove_CW_success",
                  "false"
                ],
                [
                  "test_command_remove_CW_string_not_str",
                  "false"
                ],
                [
                  "test_command_remove_CW_string_less_than_CW",
                  "false"
                ],
                [
                  "test_command_remove_CW_no_CW",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_command_remove_CW_success",
                  "false"
                ],
                [
                  "test_command_remove_CW_string_not_str",
                  "false"
                ],
                [
                  "test_command_remove_CW_string_less_than_CW",
                  "false"
                ],
                [
                  "test_command_remove_CW_no_CW",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_command_remove_CW_success",
                  "false"
                ],
                [
                  "test_command_remove_CW_string_not_str",
                  "false"
                ],
                [
                  "test_command_remove_CW_string_less_than_CW",
                  "false"
                ],
                [
                  "test_command_remove_CW_no_CW",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_command_remove_CW_success",
                  "false"
                ],
                [
                  "test_command_remove_CW_string_not_str",
                  "false"
                ],
                [
                  "test_command_remove_CW_string_less_than_CW",
                  "false"
                ],
                [
                  "test_command_remove_CW_no_CW",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_command_remove_CW_success",
                "false"
              ],
              [
                "test_command_remove_CW_string_not_str",
                "false"
              ],
              [
                "test_command_remove_CW_string_less_than_CW",
                "false"
              ],
              [
                "test_command_remove_CW_no_CW",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_command_remove_CW_success",
                "false"
              ],
              [
                "test_command_remove_CW_string_not_str",
                "false"
              ],
              [
                "test_command_remove_CW_string_less_than_CW",
                "false"
              ],
              [
                "test_command_remove_CW_no_CW",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_command_remove_CW_success",
                []
              ],
              [
                "test_command_remove_CW_string_not_str",
                []
              ],
              [
                "test_command_remove_CW_string_less_than_CW",
                []
              ],
              [
                "test_command_remove_CW_no_CW",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_command_remove_CW_success",
                "false"
              ],
              [
                "test_command_remove_CW_string_not_str",
                "false"
              ],
              [
                "test_command_remove_CW_string_less_than_CW",
                "false"
              ],
              [
                "test_command_remove_CW_no_CW",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_command_remove_CW_success",
                "false"
              ],
              [
                "test_command_remove_CW_string_not_str",
                "true"
              ],
              [
                "test_command_remove_CW_string_less_than_CW",
                "false"
              ],
              [
                "test_command_remove_CW_no_CW",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_command_remove_CW_success",
                  "0"
                ],
                [
                  "test_command_remove_CW_string_not_str",
                  "0"
                ],
                [
                  "test_command_remove_CW_string_less_than_CW",
                  "0"
                ],
                [
                  "test_command_remove_CW_no_CW",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_command_remove_CW_success",
                  "0"
                ],
                [
                  "test_command_remove_CW_string_not_str",
                  "0"
                ],
                [
                  "test_command_remove_CW_string_less_than_CW",
                  "0"
                ],
                [
                  "test_command_remove_CW_no_CW",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_command_remove_CW_success",
                "false"
              ],
              [
                "test_command_remove_CW_string_not_str",
                "false"
              ],
              [
                "test_command_remove_CW_string_less_than_CW",
                "false"
              ],
              [
                "test_command_remove_CW_no_CW",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_command_remove_CW_success",
                "false"
              ],
              [
                "test_command_remove_CW_string_not_str",
                "false"
              ],
              [
                "test_command_remove_CW_string_less_than_CW",
                "false"
              ],
              [
                "test_command_remove_CW_no_CW",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_command_remove_CW_success",
                "2"
              ],
              [
                "test_command_remove_CW_string_not_str",
                "1"
              ],
              [
                "test_command_remove_CW_string_less_than_CW",
                "2"
              ],
              [
                "test_command_remove_CW_no_CW",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_command_remove_CW_success",
                []
              ],
              [
                "test_command_remove_CW_string_not_str",
                []
              ],
              [
                "test_command_remove_CW_string_less_than_CW",
                []
              ],
              [
                "test_command_remove_CW_no_CW",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_command_remove_CW_success",
                [
                  "self.command"
                ]
              ],
              [
                "test_command_remove_CW_string_not_str",
                [
                  "self.command"
                ]
              ],
              [
                "test_command_remove_CW_string_less_than_CW",
                [
                  "self.command"
                ]
              ],
              [
                "test_command_remove_CW_no_CW",
                [
                  "self.command"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6488818733092422,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_command_remove_CW_success",
                  "test_command_remove_CW_string_not_str",
                  0.5277790490704242
                ],
                [
                  "test_command_remove_CW_success",
                  "test_command_remove_CW_string_less_than_CW",
                  0.5383819020581655
                ],
                [
                  "test_command_remove_CW_string_less_than_CW",
                  "test_command_remove_CW_no_CW",
                  0.8977310580745099
                ],
                [
                  "test_command_remove_CW_string_not_str",
                  "test_command_remove_CW_no_CW",
                  0.6813299687492027
                ],
                [
                  "test_command_remove_CW_string_not_str",
                  "test_command_remove_CW_string_less_than_CW",
                  0.6957010852370434
                ],
                [
                  "test_command_remove_CW_success",
                  "test_command_remove_CW_no_CW",
                  0.5523681766661076
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_command_remove_CW_success",
                "false"
              ],
              [
                "test_command_remove_CW_string_not_str",
                "false"
              ],
              [
                "test_command_remove_CW_string_less_than_CW",
                "false"
              ],
              [
                "test_command_remove_CW_no_CW",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      },
      {
        "name": "TestCommandRepr",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_command_repr_success",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_command_repr_success",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_command_repr_success",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_command_repr_success",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_command_repr_success",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_command_repr_success",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_command_repr_success",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_command_repr_success",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_command_repr_success",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_command_repr_success",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_command_repr_success",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_command_repr_success",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_command_repr_success",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_command_repr_success",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_command_repr_success",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_command_repr_success",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_command_repr_success",
                [
                  "command"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_command_repr_success",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_command_repr_success",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_interpreter.py",
    "testCases": [
      {
        "name": "TestInterpreterCreation",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_interpreter_creation_commands_not_all_commands",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_interpreter_creation_CC_not_len_1",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_interpreter_creation_commands_not_list",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_interpreter_creation_CC_not_str",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_interpreter_creation_trim_not_bool",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_interpreter_creation_disallowed_not_str",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_interpreter_creation_disallowed_invalid",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_interpreter_creation_success",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_interpreter_creation_commands_not_all_commands",
                  "[]"
                ],
                [
                  "test_interpreter_creation_CC_not_len_1",
                  "[]"
                ],
                [
                  "test_interpreter_creation_commands_not_list",
                  "[]"
                ],
                [
                  "test_interpreter_creation_CC_not_str",
                  "[]"
                ],
                [
                  "test_interpreter_creation_trim_not_bool",
                  "[]"
                ],
                [
                  "test_interpreter_creation_disallowed_not_str",
                  "[]"
                ],
                [
                  "test_interpreter_creation_disallowed_invalid",
                  "[]"
                ],
                [
                  "test_interpreter_creation_success",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_interpreter_creation_commands_not_all_commands",
                  "false"
                ],
                [
                  "test_interpreter_creation_CC_not_len_1",
                  "false"
                ],
                [
                  "test_interpreter_creation_commands_not_list",
                  "false"
                ],
                [
                  "test_interpreter_creation_CC_not_str",
                  "false"
                ],
                [
                  "test_interpreter_creation_trim_not_bool",
                  "false"
                ],
                [
                  "test_interpreter_creation_disallowed_not_str",
                  "false"
                ],
                [
                  "test_interpreter_creation_disallowed_invalid",
                  "false"
                ],
                [
                  "test_interpreter_creation_success",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_interpreter_creation_commands_not_all_commands",
                  "false"
                ],
                [
                  "test_interpreter_creation_CC_not_len_1",
                  "false"
                ],
                [
                  "test_interpreter_creation_commands_not_list",
                  "false"
                ],
                [
                  "test_interpreter_creation_CC_not_str",
                  "false"
                ],
                [
                  "test_interpreter_creation_trim_not_bool",
                  "false"
                ],
                [
                  "test_interpreter_creation_disallowed_not_str",
                  "false"
                ],
                [
                  "test_interpreter_creation_disallowed_invalid",
                  "false"
                ],
                [
                  "test_interpreter_creation_success",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_interpreter_creation_commands_not_all_commands",
                  "false"
                ],
                [
                  "test_interpreter_creation_CC_not_len_1",
                  "false"
                ],
                [
                  "test_interpreter_creation_commands_not_list",
                  "false"
                ],
                [
                  "test_interpreter_creation_CC_not_str",
                  "false"
                ],
                [
                  "test_interpreter_creation_trim_not_bool",
                  "false"
                ],
                [
                  "test_interpreter_creation_disallowed_not_str",
                  "false"
                ],
                [
                  "test_interpreter_creation_disallowed_invalid",
                  "false"
                ],
                [
                  "test_interpreter_creation_success",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_interpreter_creation_commands_not_all_commands",
                  "false"
                ],
                [
                  "test_interpreter_creation_CC_not_len_1",
                  "false"
                ],
                [
                  "test_interpreter_creation_commands_not_list",
                  "false"
                ],
                [
                  "test_interpreter_creation_CC_not_str",
                  "false"
                ],
                [
                  "test_interpreter_creation_trim_not_bool",
                  "false"
                ],
                [
                  "test_interpreter_creation_disallowed_not_str",
                  "false"
                ],
                [
                  "test_interpreter_creation_disallowed_invalid",
                  "false"
                ],
                [
                  "test_interpreter_creation_success",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_creation_commands_not_all_commands",
                "false"
              ],
              [
                "test_interpreter_creation_CC_not_len_1",
                "false"
              ],
              [
                "test_interpreter_creation_commands_not_list",
                "false"
              ],
              [
                "test_interpreter_creation_CC_not_str",
                "false"
              ],
              [
                "test_interpreter_creation_trim_not_bool",
                "false"
              ],
              [
                "test_interpreter_creation_disallowed_not_str",
                "false"
              ],
              [
                "test_interpreter_creation_disallowed_invalid",
                "false"
              ],
              [
                "test_interpreter_creation_success",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_creation_commands_not_all_commands",
                "false"
              ],
              [
                "test_interpreter_creation_CC_not_len_1",
                "false"
              ],
              [
                "test_interpreter_creation_commands_not_list",
                "false"
              ],
              [
                "test_interpreter_creation_CC_not_str",
                "false"
              ],
              [
                "test_interpreter_creation_trim_not_bool",
                "false"
              ],
              [
                "test_interpreter_creation_disallowed_not_str",
                "false"
              ],
              [
                "test_interpreter_creation_disallowed_invalid",
                "false"
              ],
              [
                "test_interpreter_creation_success",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_interpreter_creation_commands_not_all_commands",
                [
                  "self.command2"
                ]
              ],
              [
                "test_interpreter_creation_CC_not_len_1",
                [
                  "self.command2"
                ]
              ],
              [
                "test_interpreter_creation_commands_not_list",
                [
                  "self.command",
                  "self.command2"
                ]
              ],
              [
                "test_interpreter_creation_CC_not_str",
                [
                  "self.command2"
                ]
              ],
              [
                "test_interpreter_creation_trim_not_bool",
                [
                  "self.command2"
                ]
              ],
              [
                "test_interpreter_creation_disallowed_not_str",
                [
                  "self.command2"
                ]
              ],
              [
                "test_interpreter_creation_disallowed_invalid",
                [
                  "self.command2"
                ]
              ],
              [
                "test_interpreter_creation_success",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_creation_commands_not_all_commands",
                "false"
              ],
              [
                "test_interpreter_creation_CC_not_len_1",
                "false"
              ],
              [
                "test_interpreter_creation_commands_not_list",
                "false"
              ],
              [
                "test_interpreter_creation_CC_not_str",
                "false"
              ],
              [
                "test_interpreter_creation_trim_not_bool",
                "false"
              ],
              [
                "test_interpreter_creation_disallowed_not_str",
                "false"
              ],
              [
                "test_interpreter_creation_disallowed_invalid",
                "false"
              ],
              [
                "test_interpreter_creation_success",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_creation_commands_not_all_commands",
                "false"
              ],
              [
                "test_interpreter_creation_CC_not_len_1",
                "false"
              ],
              [
                "test_interpreter_creation_commands_not_list",
                "false"
              ],
              [
                "test_interpreter_creation_CC_not_str",
                "false"
              ],
              [
                "test_interpreter_creation_trim_not_bool",
                "false"
              ],
              [
                "test_interpreter_creation_disallowed_not_str",
                "false"
              ],
              [
                "test_interpreter_creation_disallowed_invalid",
                "false"
              ],
              [
                "test_interpreter_creation_success",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_interpreter_creation_commands_not_all_commands",
                  "0"
                ],
                [
                  "test_interpreter_creation_CC_not_len_1",
                  "0"
                ],
                [
                  "test_interpreter_creation_commands_not_list",
                  "0"
                ],
                [
                  "test_interpreter_creation_CC_not_str",
                  "0"
                ],
                [
                  "test_interpreter_creation_trim_not_bool",
                  "0"
                ],
                [
                  "test_interpreter_creation_disallowed_not_str",
                  "0"
                ],
                [
                  "test_interpreter_creation_disallowed_invalid",
                  "0"
                ],
                [
                  "test_interpreter_creation_success",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_interpreter_creation_commands_not_all_commands",
                  "0"
                ],
                [
                  "test_interpreter_creation_CC_not_len_1",
                  "0"
                ],
                [
                  "test_interpreter_creation_commands_not_list",
                  "0"
                ],
                [
                  "test_interpreter_creation_CC_not_str",
                  "0"
                ],
                [
                  "test_interpreter_creation_trim_not_bool",
                  "0"
                ],
                [
                  "test_interpreter_creation_disallowed_not_str",
                  "0"
                ],
                [
                  "test_interpreter_creation_disallowed_invalid",
                  "0"
                ],
                [
                  "test_interpreter_creation_success",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_creation_commands_not_all_commands",
                "false"
              ],
              [
                "test_interpreter_creation_CC_not_len_1",
                "false"
              ],
              [
                "test_interpreter_creation_commands_not_list",
                "false"
              ],
              [
                "test_interpreter_creation_CC_not_str",
                "false"
              ],
              [
                "test_interpreter_creation_trim_not_bool",
                "false"
              ],
              [
                "test_interpreter_creation_disallowed_not_str",
                "false"
              ],
              [
                "test_interpreter_creation_disallowed_invalid",
                "false"
              ],
              [
                "test_interpreter_creation_success",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_creation_commands_not_all_commands",
                "false"
              ],
              [
                "test_interpreter_creation_CC_not_len_1",
                "false"
              ],
              [
                "test_interpreter_creation_commands_not_list",
                "false"
              ],
              [
                "test_interpreter_creation_CC_not_str",
                "false"
              ],
              [
                "test_interpreter_creation_trim_not_bool",
                "false"
              ],
              [
                "test_interpreter_creation_disallowed_not_str",
                "false"
              ],
              [
                "test_interpreter_creation_disallowed_invalid",
                "false"
              ],
              [
                "test_interpreter_creation_success",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_interpreter_creation_commands_not_all_commands",
                "1"
              ],
              [
                "test_interpreter_creation_CC_not_len_1",
                "1"
              ],
              [
                "test_interpreter_creation_commands_not_list",
                "1"
              ],
              [
                "test_interpreter_creation_CC_not_str",
                "1"
              ],
              [
                "test_interpreter_creation_trim_not_bool",
                "1"
              ],
              [
                "test_interpreter_creation_disallowed_not_str",
                "1"
              ],
              [
                "test_interpreter_creation_disallowed_invalid",
                "1"
              ],
              [
                "test_interpreter_creation_success",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_creation_commands_not_all_commands",
                []
              ],
              [
                "test_interpreter_creation_CC_not_len_1",
                []
              ],
              [
                "test_interpreter_creation_commands_not_list",
                []
              ],
              [
                "test_interpreter_creation_CC_not_str",
                []
              ],
              [
                "test_interpreter_creation_trim_not_bool",
                []
              ],
              [
                "test_interpreter_creation_disallowed_not_str",
                []
              ],
              [
                "test_interpreter_creation_disallowed_invalid",
                []
              ],
              [
                "test_interpreter_creation_success",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_interpreter_creation_commands_not_all_commands",
                [
                  "self.command"
                ]
              ],
              [
                "test_interpreter_creation_CC_not_len_1",
                [
                  "self.command"
                ]
              ],
              [
                "test_interpreter_creation_commands_not_list",
                []
              ],
              [
                "test_interpreter_creation_CC_not_str",
                [
                  "self.command"
                ]
              ],
              [
                "test_interpreter_creation_trim_not_bool",
                [
                  "self.command"
                ]
              ],
              [
                "test_interpreter_creation_disallowed_not_str",
                [
                  "self.command"
                ]
              ],
              [
                "test_interpreter_creation_disallowed_invalid",
                [
                  "self.command"
                ]
              ],
              [
                "test_interpreter_creation_success",
                [
                  "self.command",
                  "self.command2"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.597575507180308,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_interpreter_creation_success",
                  "test_interpreter_creation_commands_not_list",
                  0.37796447300922725
                ],
                [
                  "test_interpreter_creation_CC_not_len_1",
                  "test_interpreter_creation_disallowed_invalid",
                  0.55
                ],
                [
                  "test_interpreter_creation_CC_not_str",
                  "test_interpreter_creation_disallowed_not_str",
                  0.7181848464596078
                ],
                [
                  "test_interpreter_creation_success",
                  "test_interpreter_creation_CC_not_len_1",
                  0.565685424949238
                ],
                [
                  "test_interpreter_creation_commands_not_list",
                  "test_interpreter_creation_CC_not_str",
                  0.7768985960673559
                ],
                [
                  "test_interpreter_creation_commands_not_all_commands",
                  "test_interpreter_creation_trim_not_bool",
                  0.6120563724821229
                ],
                [
                  "test_interpreter_creation_CC_not_len_1",
                  "test_interpreter_creation_trim_not_bool",
                  0.6423640548375729
                ],
                [
                  "test_interpreter_creation_disallowed_not_str",
                  "test_interpreter_creation_disallowed_invalid",
                  0.7456011350793257
                ],
                [
                  "test_interpreter_creation_success",
                  "test_interpreter_creation_disallowed_invalid",
                  0.38890872965260115
                ],
                [
                  "test_interpreter_creation_commands_not_all_commands",
                  "test_interpreter_creation_disallowed_invalid",
                  0.48507125007266594
                ],
                [
                  "test_interpreter_creation_trim_not_bool",
                  "test_interpreter_creation_disallowed_invalid",
                  0.5161854012087639
                ],
                [
                  "test_interpreter_creation_trim_not_bool",
                  "test_interpreter_creation_disallowed_not_str",
                  0.6315789473684209
                ],
                [
                  "test_interpreter_creation_CC_not_str",
                  "test_interpreter_creation_trim_not_bool",
                  0.6668859288553501
                ],
                [
                  "test_interpreter_creation_commands_not_list",
                  "test_interpreter_creation_CC_not_len_1",
                  0.7483314773547882
                ],
                [
                  "test_interpreter_creation_commands_not_all_commands",
                  "test_interpreter_creation_CC_not_len_1",
                  0.6790997501017323
                ],
                [
                  "test_interpreter_creation_commands_not_all_commands",
                  "test_interpreter_creation_CC_not_str",
                  0.7050239879106326
                ],
                [
                  "test_interpreter_creation_commands_not_list",
                  "test_interpreter_creation_trim_not_bool",
                  0.6744532734334623
                ],
                [
                  "test_interpreter_creation_success",
                  "test_interpreter_creation_CC_not_str",
                  0.4743416490252569
                ],
                [
                  "test_interpreter_creation_success",
                  "test_interpreter_creation_trim_not_bool",
                  0.35688712648767756
                ],
                [
                  "test_interpreter_creation_CC_not_str",
                  "test_interpreter_creation_disallowed_invalid",
                  0.5590169943749475
                ],
                [
                  "test_interpreter_creation_CC_not_len_1",
                  "test_interpreter_creation_disallowed_not_str",
                  0.6423640548375729
                ],
                [
                  "test_interpreter_creation_commands_not_list",
                  "test_interpreter_creation_disallowed_invalid",
                  0.5345224838248488
                ],
                [
                  "test_interpreter_creation_success",
                  "test_interpreter_creation_commands_not_all_commands",
                  0.37729688731351946
                ],
                [
                  "test_interpreter_creation_success",
                  "test_interpreter_creation_disallowed_not_str",
                  0.38933141071383004
                ],
                [
                  "test_interpreter_creation_commands_not_list",
                  "test_interpreter_creation_disallowed_not_str",
                  0.6744532734334623
                ],
                [
                  "test_interpreter_creation_CC_not_len_1",
                  "test_interpreter_creation_CC_not_str",
                  0.8497058314499201
                ],
                [
                  "test_interpreter_creation_commands_not_list",
                  "test_interpreter_creation_commands_not_all_commands",
                  0.7778444682625973
                ],
                [
                  "test_interpreter_creation_commands_not_all_commands",
                  "test_interpreter_creation_disallowed_not_str",
                  0.6120563724821229
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_creation_commands_not_all_commands",
                "false"
              ],
              [
                "test_interpreter_creation_CC_not_len_1",
                "false"
              ],
              [
                "test_interpreter_creation_commands_not_list",
                "false"
              ],
              [
                "test_interpreter_creation_CC_not_str",
                "false"
              ],
              [
                "test_interpreter_creation_trim_not_bool",
                "false"
              ],
              [
                "test_interpreter_creation_disallowed_not_str",
                "false"
              ],
              [
                "test_interpreter_creation_disallowed_invalid",
                "false"
              ],
              [
                "test_interpreter_creation_success",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 8
      },
      {
        "name": "TestInterpreterInterpret",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_interpreter_not_enough_args",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_interpret_disallowed",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_interpret_success",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_interpret_unknown_command",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_interpreter_too_many_args",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_interpret_trim",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_interpret_empty",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_interpret_string_not_str",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_interpret_wrong_arg",
                  "[PyCallExpression: self.assertRaises]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_interpreter_not_enough_args",
                  "[]"
                ],
                [
                  "test_interpret_disallowed",
                  "[]"
                ],
                [
                  "test_interpret_success",
                  "[]"
                ],
                [
                  "test_interpret_unknown_command",
                  "[]"
                ],
                [
                  "test_interpreter_too_many_args",
                  "[]"
                ],
                [
                  "test_interpret_trim",
                  "[]"
                ],
                [
                  "test_interpret_empty",
                  "[]"
                ],
                [
                  "test_interpret_string_not_str",
                  "[]"
                ],
                [
                  "test_interpret_wrong_arg",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_interpreter_not_enough_args",
                  "false"
                ],
                [
                  "test_interpret_disallowed",
                  "false"
                ],
                [
                  "test_interpret_success",
                  "false"
                ],
                [
                  "test_interpret_unknown_command",
                  "false"
                ],
                [
                  "test_interpreter_too_many_args",
                  "false"
                ],
                [
                  "test_interpret_trim",
                  "false"
                ],
                [
                  "test_interpret_empty",
                  "false"
                ],
                [
                  "test_interpret_string_not_str",
                  "false"
                ],
                [
                  "test_interpret_wrong_arg",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_interpreter_not_enough_args",
                  "false"
                ],
                [
                  "test_interpret_disallowed",
                  "false"
                ],
                [
                  "test_interpret_success",
                  "false"
                ],
                [
                  "test_interpret_unknown_command",
                  "false"
                ],
                [
                  "test_interpreter_too_many_args",
                  "false"
                ],
                [
                  "test_interpret_trim",
                  "false"
                ],
                [
                  "test_interpret_empty",
                  "false"
                ],
                [
                  "test_interpret_string_not_str",
                  "false"
                ],
                [
                  "test_interpret_wrong_arg",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_interpreter_not_enough_args",
                  "false"
                ],
                [
                  "test_interpret_disallowed",
                  "false"
                ],
                [
                  "test_interpret_success",
                  "false"
                ],
                [
                  "test_interpret_unknown_command",
                  "false"
                ],
                [
                  "test_interpreter_too_many_args",
                  "false"
                ],
                [
                  "test_interpret_trim",
                  "false"
                ],
                [
                  "test_interpret_empty",
                  "false"
                ],
                [
                  "test_interpret_string_not_str",
                  "false"
                ],
                [
                  "test_interpret_wrong_arg",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_interpreter_not_enough_args",
                  "false"
                ],
                [
                  "test_interpret_disallowed",
                  "false"
                ],
                [
                  "test_interpret_success",
                  "false"
                ],
                [
                  "test_interpret_unknown_command",
                  "false"
                ],
                [
                  "test_interpreter_too_many_args",
                  "false"
                ],
                [
                  "test_interpret_trim",
                  "false"
                ],
                [
                  "test_interpret_empty",
                  "false"
                ],
                [
                  "test_interpret_string_not_str",
                  "false"
                ],
                [
                  "test_interpret_wrong_arg",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_not_enough_args",
                "false"
              ],
              [
                "test_interpret_disallowed",
                "false"
              ],
              [
                "test_interpret_success",
                "false"
              ],
              [
                "test_interpret_unknown_command",
                "false"
              ],
              [
                "test_interpreter_too_many_args",
                "false"
              ],
              [
                "test_interpret_trim",
                "false"
              ],
              [
                "test_interpret_empty",
                "false"
              ],
              [
                "test_interpret_string_not_str",
                "false"
              ],
              [
                "test_interpret_wrong_arg",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_not_enough_args",
                "false"
              ],
              [
                "test_interpret_disallowed",
                "false"
              ],
              [
                "test_interpret_success",
                "false"
              ],
              [
                "test_interpret_unknown_command",
                "false"
              ],
              [
                "test_interpreter_too_many_args",
                "false"
              ],
              [
                "test_interpret_trim",
                "false"
              ],
              [
                "test_interpret_empty",
                "false"
              ],
              [
                "test_interpret_string_not_str",
                "false"
              ],
              [
                "test_interpret_wrong_arg",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_interpreter_not_enough_args",
                [
                  "self.interpreter2",
                  "self.interpreter3",
                  "self.command",
                  "self.command2"
                ]
              ],
              [
                "test_interpret_disallowed",
                [
                  "self.interpreter",
                  "self.interpreter2",
                  "self.command",
                  "self.command2"
                ]
              ],
              [
                "test_interpret_success",
                [
                  "self.interpreter2",
                  "self.interpreter3"
                ]
              ],
              [
                "test_interpret_unknown_command",
                [
                  "self.interpreter2",
                  "self.interpreter3",
                  "self.command",
                  "self.command2"
                ]
              ],
              [
                "test_interpreter_too_many_args",
                [
                  "self.interpreter2",
                  "self.interpreter3",
                  "self.command",
                  "self.command2"
                ]
              ],
              [
                "test_interpret_trim",
                [
                  "self.interpreter3",
                  "self.command",
                  "self.command2"
                ]
              ],
              [
                "test_interpret_empty",
                [
                  "self.interpreter3",
                  "self.command",
                  "self.command2"
                ]
              ],
              [
                "test_interpret_string_not_str",
                [
                  "self.interpreter2",
                  "self.interpreter3",
                  "self.command",
                  "self.command2"
                ]
              ],
              [
                "test_interpret_wrong_arg",
                [
                  "self.interpreter2",
                  "self.interpreter3",
                  "self.command",
                  "self.command2"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_not_enough_args",
                "false"
              ],
              [
                "test_interpret_disallowed",
                "false"
              ],
              [
                "test_interpret_success",
                "false"
              ],
              [
                "test_interpret_unknown_command",
                "false"
              ],
              [
                "test_interpreter_too_many_args",
                "false"
              ],
              [
                "test_interpret_trim",
                "false"
              ],
              [
                "test_interpret_empty",
                "false"
              ],
              [
                "test_interpret_string_not_str",
                "false"
              ],
              [
                "test_interpret_wrong_arg",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_not_enough_args",
                "false"
              ],
              [
                "test_interpret_disallowed",
                "false"
              ],
              [
                "test_interpret_success",
                "false"
              ],
              [
                "test_interpret_unknown_command",
                "false"
              ],
              [
                "test_interpreter_too_many_args",
                "false"
              ],
              [
                "test_interpret_trim",
                "false"
              ],
              [
                "test_interpret_empty",
                "false"
              ],
              [
                "test_interpret_string_not_str",
                "false"
              ],
              [
                "test_interpret_wrong_arg",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_interpreter_not_enough_args",
                  "0"
                ],
                [
                  "test_interpret_disallowed",
                  "0"
                ],
                [
                  "test_interpret_success",
                  "0"
                ],
                [
                  "test_interpret_unknown_command",
                  "0"
                ],
                [
                  "test_interpreter_too_many_args",
                  "0"
                ],
                [
                  "test_interpret_trim",
                  "0"
                ],
                [
                  "test_interpret_empty",
                  "0"
                ],
                [
                  "test_interpret_string_not_str",
                  "0"
                ],
                [
                  "test_interpret_wrong_arg",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_interpreter_not_enough_args",
                  "0"
                ],
                [
                  "test_interpret_disallowed",
                  "0"
                ],
                [
                  "test_interpret_success",
                  "0"
                ],
                [
                  "test_interpret_unknown_command",
                  "0"
                ],
                [
                  "test_interpreter_too_many_args",
                  "0"
                ],
                [
                  "test_interpret_trim",
                  "0"
                ],
                [
                  "test_interpret_empty",
                  "0"
                ],
                [
                  "test_interpret_string_not_str",
                  "0"
                ],
                [
                  "test_interpret_wrong_arg",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_not_enough_args",
                "false"
              ],
              [
                "test_interpret_disallowed",
                "false"
              ],
              [
                "test_interpret_success",
                "false"
              ],
              [
                "test_interpret_unknown_command",
                "false"
              ],
              [
                "test_interpreter_too_many_args",
                "false"
              ],
              [
                "test_interpret_trim",
                "false"
              ],
              [
                "test_interpret_empty",
                "false"
              ],
              [
                "test_interpret_string_not_str",
                "false"
              ],
              [
                "test_interpret_wrong_arg",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_not_enough_args",
                "false"
              ],
              [
                "test_interpret_disallowed",
                "false"
              ],
              [
                "test_interpret_success",
                "false"
              ],
              [
                "test_interpret_unknown_command",
                "false"
              ],
              [
                "test_interpreter_too_many_args",
                "false"
              ],
              [
                "test_interpret_trim",
                "false"
              ],
              [
                "test_interpret_empty",
                "false"
              ],
              [
                "test_interpret_string_not_str",
                "false"
              ],
              [
                "test_interpret_wrong_arg",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_not_enough_args",
                "1"
              ],
              [
                "test_interpret_disallowed",
                "1"
              ],
              [
                "test_interpret_success",
                "2"
              ],
              [
                "test_interpret_unknown_command",
                "1"
              ],
              [
                "test_interpreter_too_many_args",
                "1"
              ],
              [
                "test_interpret_trim",
                "2"
              ],
              [
                "test_interpret_empty",
                "3"
              ],
              [
                "test_interpret_string_not_str",
                "1"
              ],
              [
                "test_interpret_wrong_arg",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_not_enough_args",
                []
              ],
              [
                "test_interpret_disallowed",
                []
              ],
              [
                "test_interpret_success",
                []
              ],
              [
                "test_interpret_unknown_command",
                []
              ],
              [
                "test_interpreter_too_many_args",
                []
              ],
              [
                "test_interpret_trim",
                []
              ],
              [
                "test_interpret_empty",
                []
              ],
              [
                "test_interpret_string_not_str",
                []
              ],
              [
                "test_interpret_wrong_arg",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_not_enough_args",
                [
                  "self.interpreter"
                ]
              ],
              [
                "test_interpret_disallowed",
                [
                  "self.interpreter3"
                ]
              ],
              [
                "test_interpret_success",
                [
                  "self.interpreter",
                  "self.command",
                  "self.command2"
                ]
              ],
              [
                "test_interpret_unknown_command",
                [
                  "self.interpreter"
                ]
              ],
              [
                "test_interpreter_too_many_args",
                [
                  "self.interpreter"
                ]
              ],
              [
                "test_interpret_trim",
                [
                  "self.interpreter",
                  "self.interpreter2"
                ]
              ],
              [
                "test_interpret_empty",
                [
                  "self.interpreter",
                  "self.interpreter2"
                ]
              ],
              [
                "test_interpret_string_not_str",
                [
                  "self.interpreter"
                ]
              ],
              [
                "test_interpret_wrong_arg",
                [
                  "self.interpreter"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4201838826162786,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_interpret_success",
                  "test_interpreter_not_enough_args",
                  0.4204138910034078
                ],
                [
                  "test_interpret_success",
                  "test_interpret_disallowed",
                  0.1632557871120848
                ],
                [
                  "test_interpret_success",
                  "test_interpret_wrong_arg",
                  0.3998933759810459
                ],
                [
                  "test_interpret_string_not_str",
                  "test_interpret_wrong_arg",
                  0.48418202613504197
                ],
                [
                  "test_interpret_empty",
                  "test_interpret_unknown_command",
                  0.2672612419124244
                ],
                [
                  "test_interpret_wrong_arg",
                  "test_interpreter_too_many_args",
                  0.8872442622820285
                ],
                [
                  "test_interpret_string_not_str",
                  "test_interpreter_not_enough_args",
                  0.5726562866782
                ],
                [
                  "test_interpret_disallowed",
                  "test_interpreter_too_many_args",
                  0.3779644730092272
                ],
                [
                  "test_interpret_success",
                  "test_interpret_string_not_str",
                  0.4066044885430183
                ],
                [
                  "test_interpret_success",
                  "test_interpreter_too_many_args",
                  0.43193421279068
                ],
                [
                  "test_interpret_trim",
                  "test_interpreter_too_many_args",
                  0.2857738033247041
                ],
                [
                  "test_interpret_disallowed",
                  "test_interpret_wrong_arg",
                  0.4665694748158435
                ],
                [
                  "test_interpret_success",
                  "test_interpret_unknown_command",
                  0.1632557871120848
                ],
                [
                  "test_interpret_disallowed",
                  "test_interpreter_not_enough_args",
                  0.4905114715879726
                ],
                [
                  "test_interpret_empty",
                  "test_interpreter_not_enough_args",
                  0.22941573387056172
                ],
                [
                  "test_interpret_string_not_str",
                  "test_interpret_unknown_command",
                  0.44474958999666075
                ],
                [
                  "test_interpret_string_not_str",
                  "test_interpreter_too_many_args",
                  0.441261304060914
                ],
                [
                  "test_interpret_trim",
                  "test_interpret_empty",
                  0.4811252243246881
                ],
                [
                  "test_interpret_disallowed",
                  "test_interpret_unknown_command",
                  0.5714285714285714
                ],
                [
                  "test_interpret_empty",
                  "test_interpreter_too_many_args",
                  0.17677669529663687
                ],
                [
                  "test_interpret_trim",
                  "test_interpret_unknown_command",
                  0.15430334996209188
                ],
                [
                  "test_interpret_trim",
                  "test_interpret_wrong_arg",
                  0.27717394687343333
                ],
                [
                  "test_interpret_trim",
                  "test_interpret_disallowed",
                  0.21602468994692864
                ],
                [
                  "test_interpret_empty",
                  "test_interpret_wrong_arg",
                  0.21821789023599236
                ],
                [
                  "test_interpret_success",
                  "test_interpret_trim",
                  0.38088663256364297
                ],
                [
                  "test_interpret_string_not_str",
                  "test_interpret_empty",
                  0.2773500981126146
                ],
                [
                  "test_interpret_disallowed",
                  "test_interpret_empty",
                  0.31180478223116176
                ],
                [
                  "test_interpret_unknown_command",
                  "test_interpreter_not_enough_args",
                  0.6744532734334623
                ],
                [
                  "test_interpret_unknown_command",
                  "test_interpret_wrong_arg",
                  0.6998542122237653
                ],
                [
                  "test_interpret_wrong_arg",
                  "test_interpreter_not_enough_args",
                  0.85106449634699
                ],
                [
                  "test_interpret_string_not_str",
                  "test_interpret_disallowed",
                  0.37062465833055064
                ],
                [
                  "test_interpret_success",
                  "test_interpret_empty",
                  0.2850620368313789
                ],
                [
                  "test_interpret_string_not_str",
                  "test_interpret_trim",
                  0.3843075691322091
                ],
                [
                  "test_interpreter_not_enough_args",
                  "test_interpreter_too_many_args",
                  0.8516624609365031
                ],
                [
                  "test_interpret_trim",
                  "test_interpreter_not_enough_args",
                  0.3973597071195131
                ],
                [
                  "test_interpret_unknown_command",
                  "test_interpreter_too_many_args",
                  0.6141922686399942
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_not_enough_args",
                "false"
              ],
              [
                "test_interpret_disallowed",
                "false"
              ],
              [
                "test_interpret_success",
                "false"
              ],
              [
                "test_interpret_unknown_command",
                "false"
              ],
              [
                "test_interpreter_too_many_args",
                "false"
              ],
              [
                "test_interpret_trim",
                "false"
              ],
              [
                "test_interpret_empty",
                "false"
              ],
              [
                "test_interpret_string_not_str",
                "false"
              ],
              [
                "test_interpret_wrong_arg",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 9
      },
      {
        "name": "TestInterpreterRepr",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_interpreter_repr_success",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_interpreter_repr_success",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_interpreter_repr_success",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_interpreter_repr_success",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_interpreter_repr_success",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_interpreter_repr_success",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_repr_success",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_repr_success",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_repr_success",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_repr_success",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_repr_success",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_interpreter_repr_success",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_interpreter_repr_success",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_repr_success",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_repr_success",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_repr_success",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_repr_success",
                [
                  "command2",
                  "interpreter",
                  "command"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_repr_success",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_interpreter_repr_success",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  }
]