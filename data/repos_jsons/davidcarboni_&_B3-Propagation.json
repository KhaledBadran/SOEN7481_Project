[
  {
    "name": "tests_\u0026_test_b3.py",
    "testCases": [
      {
        "name": "TestB3",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_should_maintain_trace_id",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_should_revert_span_info_on_subspan_end",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_should_update_headers_if_passed",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_should_not_set_sampled",
                  "[PyCallExpression: self.assertIsNone, PyCallExpression: self.assertFalse]"
                ],
                [
                  "test_should_maintain_sampled",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_should_generate_root_span_ids",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_should_propagate_with_new_span_id",
                  "[PyCallExpression: self.assertNotEqual, PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_should_update_span_info_on_subspan_start",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertNotEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_should_set_flags_for_debug",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_should_propagate_span_id_as_parent",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_should_maintain_flags_for_debug",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_should_maintain_trace_id",
                  "[]"
                ],
                [
                  "test_should_revert_span_info_on_subspan_end",
                  "[]"
                ],
                [
                  "test_should_update_headers_if_passed",
                  "[]"
                ],
                [
                  "test_should_not_set_sampled",
                  "[]"
                ],
                [
                  "test_should_maintain_sampled",
                  "[]"
                ],
                [
                  "test_should_generate_root_span_ids",
                  "[]"
                ],
                [
                  "test_should_propagate_with_new_span_id",
                  "[]"
                ],
                [
                  "test_should_update_span_info_on_subspan_start",
                  "[]"
                ],
                [
                  "test_should_set_flags_for_debug",
                  "[]"
                ],
                [
                  "test_should_propagate_span_id_as_parent",
                  "[]"
                ],
                [
                  "test_should_maintain_flags_for_debug",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_should_maintain_trace_id",
                  "false"
                ],
                [
                  "test_should_revert_span_info_on_subspan_end",
                  "false"
                ],
                [
                  "test_should_update_headers_if_passed",
                  "false"
                ],
                [
                  "test_should_not_set_sampled",
                  "false"
                ],
                [
                  "test_should_maintain_sampled",
                  "false"
                ],
                [
                  "test_should_generate_root_span_ids",
                  "false"
                ],
                [
                  "test_should_propagate_with_new_span_id",
                  "false"
                ],
                [
                  "test_should_update_span_info_on_subspan_start",
                  "false"
                ],
                [
                  "test_should_set_flags_for_debug",
                  "false"
                ],
                [
                  "test_should_propagate_span_id_as_parent",
                  "false"
                ],
                [
                  "test_should_maintain_flags_for_debug",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_should_maintain_trace_id",
                  "false"
                ],
                [
                  "test_should_revert_span_info_on_subspan_end",
                  "false"
                ],
                [
                  "test_should_update_headers_if_passed",
                  "false"
                ],
                [
                  "test_should_not_set_sampled",
                  "false"
                ],
                [
                  "test_should_maintain_sampled",
                  "false"
                ],
                [
                  "test_should_generate_root_span_ids",
                  "false"
                ],
                [
                  "test_should_propagate_with_new_span_id",
                  "false"
                ],
                [
                  "test_should_update_span_info_on_subspan_start",
                  "false"
                ],
                [
                  "test_should_set_flags_for_debug",
                  "false"
                ],
                [
                  "test_should_propagate_span_id_as_parent",
                  "false"
                ],
                [
                  "test_should_maintain_flags_for_debug",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_should_maintain_trace_id",
                  "false"
                ],
                [
                  "test_should_revert_span_info_on_subspan_end",
                  "false"
                ],
                [
                  "test_should_update_headers_if_passed",
                  "false"
                ],
                [
                  "test_should_not_set_sampled",
                  "false"
                ],
                [
                  "test_should_maintain_sampled",
                  "false"
                ],
                [
                  "test_should_generate_root_span_ids",
                  "false"
                ],
                [
                  "test_should_propagate_with_new_span_id",
                  "false"
                ],
                [
                  "test_should_update_span_info_on_subspan_start",
                  "false"
                ],
                [
                  "test_should_set_flags_for_debug",
                  "false"
                ],
                [
                  "test_should_propagate_span_id_as_parent",
                  "false"
                ],
                [
                  "test_should_maintain_flags_for_debug",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_should_maintain_trace_id",
                  "false"
                ],
                [
                  "test_should_revert_span_info_on_subspan_end",
                  "false"
                ],
                [
                  "test_should_update_headers_if_passed",
                  "false"
                ],
                [
                  "test_should_not_set_sampled",
                  "false"
                ],
                [
                  "test_should_maintain_sampled",
                  "false"
                ],
                [
                  "test_should_generate_root_span_ids",
                  "false"
                ],
                [
                  "test_should_propagate_with_new_span_id",
                  "false"
                ],
                [
                  "test_should_update_span_info_on_subspan_start",
                  "false"
                ],
                [
                  "test_should_set_flags_for_debug",
                  "false"
                ],
                [
                  "test_should_propagate_span_id_as_parent",
                  "false"
                ],
                [
                  "test_should_maintain_flags_for_debug",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_should_maintain_trace_id",
                "false"
              ],
              [
                "test_should_revert_span_info_on_subspan_end",
                "false"
              ],
              [
                "test_should_update_headers_if_passed",
                "false"
              ],
              [
                "test_should_not_set_sampled",
                "false"
              ],
              [
                "test_should_maintain_sampled",
                "false"
              ],
              [
                "test_should_generate_root_span_ids",
                "false"
              ],
              [
                "test_should_propagate_with_new_span_id",
                "false"
              ],
              [
                "test_should_update_span_info_on_subspan_start",
                "false"
              ],
              [
                "test_should_set_flags_for_debug",
                "false"
              ],
              [
                "test_should_propagate_span_id_as_parent",
                "false"
              ],
              [
                "test_should_maintain_flags_for_debug",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_should_maintain_trace_id",
                "false"
              ],
              [
                "test_should_revert_span_info_on_subspan_end",
                "false"
              ],
              [
                "test_should_update_headers_if_passed",
                "false"
              ],
              [
                "test_should_not_set_sampled",
                "false"
              ],
              [
                "test_should_maintain_sampled",
                "false"
              ],
              [
                "test_should_generate_root_span_ids",
                "false"
              ],
              [
                "test_should_propagate_with_new_span_id",
                "false"
              ],
              [
                "test_should_update_span_info_on_subspan_start",
                "false"
              ],
              [
                "test_should_set_flags_for_debug",
                "false"
              ],
              [
                "test_should_propagate_span_id_as_parent",
                "false"
              ],
              [
                "test_should_maintain_flags_for_debug",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_should_maintain_trace_id",
                []
              ],
              [
                "test_should_revert_span_info_on_subspan_end",
                []
              ],
              [
                "test_should_update_headers_if_passed",
                []
              ],
              [
                "test_should_not_set_sampled",
                []
              ],
              [
                "test_should_maintain_sampled",
                []
              ],
              [
                "test_should_generate_root_span_ids",
                []
              ],
              [
                "test_should_propagate_with_new_span_id",
                []
              ],
              [
                "test_should_update_span_info_on_subspan_start",
                []
              ],
              [
                "test_should_set_flags_for_debug",
                []
              ],
              [
                "test_should_propagate_span_id_as_parent",
                []
              ],
              [
                "test_should_maintain_flags_for_debug",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_should_maintain_trace_id",
                "false"
              ],
              [
                "test_should_revert_span_info_on_subspan_end",
                "false"
              ],
              [
                "test_should_update_headers_if_passed",
                "false"
              ],
              [
                "test_should_not_set_sampled",
                "false"
              ],
              [
                "test_should_maintain_sampled",
                "false"
              ],
              [
                "test_should_generate_root_span_ids",
                "false"
              ],
              [
                "test_should_propagate_with_new_span_id",
                "false"
              ],
              [
                "test_should_update_span_info_on_subspan_start",
                "false"
              ],
              [
                "test_should_set_flags_for_debug",
                "false"
              ],
              [
                "test_should_propagate_span_id_as_parent",
                "false"
              ],
              [
                "test_should_maintain_flags_for_debug",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_should_maintain_trace_id",
                "false"
              ],
              [
                "test_should_revert_span_info_on_subspan_end",
                "false"
              ],
              [
                "test_should_update_headers_if_passed",
                "false"
              ],
              [
                "test_should_not_set_sampled",
                "false"
              ],
              [
                "test_should_maintain_sampled",
                "false"
              ],
              [
                "test_should_generate_root_span_ids",
                "false"
              ],
              [
                "test_should_propagate_with_new_span_id",
                "false"
              ],
              [
                "test_should_update_span_info_on_subspan_start",
                "false"
              ],
              [
                "test_should_set_flags_for_debug",
                "false"
              ],
              [
                "test_should_propagate_span_id_as_parent",
                "false"
              ],
              [
                "test_should_maintain_flags_for_debug",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_should_maintain_trace_id",
                  "0"
                ],
                [
                  "test_should_revert_span_info_on_subspan_end",
                  "0"
                ],
                [
                  "test_should_update_headers_if_passed",
                  "0"
                ],
                [
                  "test_should_not_set_sampled",
                  "0"
                ],
                [
                  "test_should_maintain_sampled",
                  "0"
                ],
                [
                  "test_should_generate_root_span_ids",
                  "0"
                ],
                [
                  "test_should_propagate_with_new_span_id",
                  "0"
                ],
                [
                  "test_should_update_span_info_on_subspan_start",
                  "0"
                ],
                [
                  "test_should_set_flags_for_debug",
                  "0"
                ],
                [
                  "test_should_propagate_span_id_as_parent",
                  "0"
                ],
                [
                  "test_should_maintain_flags_for_debug",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_should_maintain_trace_id",
                  "0"
                ],
                [
                  "test_should_revert_span_info_on_subspan_end",
                  "0"
                ],
                [
                  "test_should_update_headers_if_passed",
                  "0"
                ],
                [
                  "test_should_not_set_sampled",
                  "0"
                ],
                [
                  "test_should_maintain_sampled",
                  "0"
                ],
                [
                  "test_should_generate_root_span_ids",
                  "0"
                ],
                [
                  "test_should_propagate_with_new_span_id",
                  "0"
                ],
                [
                  "test_should_update_span_info_on_subspan_start",
                  "0"
                ],
                [
                  "test_should_set_flags_for_debug",
                  "0"
                ],
                [
                  "test_should_propagate_span_id_as_parent",
                  "0"
                ],
                [
                  "test_should_maintain_flags_for_debug",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_should_maintain_trace_id",
                "false"
              ],
              [
                "test_should_revert_span_info_on_subspan_end",
                "false"
              ],
              [
                "test_should_update_headers_if_passed",
                "false"
              ],
              [
                "test_should_not_set_sampled",
                "false"
              ],
              [
                "test_should_maintain_sampled",
                "false"
              ],
              [
                "test_should_generate_root_span_ids",
                "false"
              ],
              [
                "test_should_propagate_with_new_span_id",
                "false"
              ],
              [
                "test_should_update_span_info_on_subspan_start",
                "false"
              ],
              [
                "test_should_set_flags_for_debug",
                "false"
              ],
              [
                "test_should_propagate_span_id_as_parent",
                "false"
              ],
              [
                "test_should_maintain_flags_for_debug",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_should_maintain_trace_id",
                "false"
              ],
              [
                "test_should_revert_span_info_on_subspan_end",
                "false"
              ],
              [
                "test_should_update_headers_if_passed",
                "false"
              ],
              [
                "test_should_not_set_sampled",
                "false"
              ],
              [
                "test_should_maintain_sampled",
                "false"
              ],
              [
                "test_should_generate_root_span_ids",
                "false"
              ],
              [
                "test_should_propagate_with_new_span_id",
                "false"
              ],
              [
                "test_should_update_span_info_on_subspan_start",
                "false"
              ],
              [
                "test_should_set_flags_for_debug",
                "false"
              ],
              [
                "test_should_propagate_span_id_as_parent",
                "false"
              ],
              [
                "test_should_maintain_flags_for_debug",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_should_maintain_trace_id",
                "2"
              ],
              [
                "test_should_revert_span_info_on_subspan_end",
                "5"
              ],
              [
                "test_should_update_headers_if_passed",
                "1"
              ],
              [
                "test_should_not_set_sampled",
                "2"
              ],
              [
                "test_should_maintain_sampled",
                "2"
              ],
              [
                "test_should_generate_root_span_ids",
                "4"
              ],
              [
                "test_should_propagate_with_new_span_id",
                "2"
              ],
              [
                "test_should_update_span_info_on_subspan_start",
                "5"
              ],
              [
                "test_should_set_flags_for_debug",
                "2"
              ],
              [
                "test_should_propagate_span_id_as_parent",
                "1"
              ],
              [
                "test_should_maintain_flags_for_debug",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_should_maintain_trace_id",
                [
                  "headers",
                  "trace_id",
                  "values"
                ]
              ],
              [
                "test_should_revert_span_info_on_subspan_end",
                [
                  "span",
                  "reverted"
                ]
              ],
              [
                "test_should_update_headers_if_passed",
                [
                  "headers_updated",
                  "headers_original"
                ]
              ],
              [
                "test_should_not_set_sampled",
                [
                  "headers",
                  "values"
                ]
              ],
              [
                "test_should_maintain_sampled",
                [
                  "headers",
                  "values",
                  "sampled"
                ]
              ],
              [
                "test_should_generate_root_span_ids",
                [
                  "values"
                ]
              ],
              [
                "test_should_propagate_with_new_span_id",
                [
                  "headers",
                  "span_id"
                ]
              ],
              [
                "test_should_update_span_info_on_subspan_start",
                [
                  "subspan",
                  "span"
                ]
              ],
              [
                "test_should_set_flags_for_debug",
                [
                  "headers",
                  "values"
                ]
              ],
              [
                "test_should_propagate_span_id_as_parent",
                [
                  "headers",
                  "span_id"
                ]
              ],
              [
                "test_should_maintain_flags_for_debug",
                [
                  "headers",
                  "values",
                  "flags"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_should_maintain_trace_id",
                []
              ],
              [
                "test_should_revert_span_info_on_subspan_end",
                []
              ],
              [
                "test_should_update_headers_if_passed",
                []
              ],
              [
                "test_should_not_set_sampled",
                []
              ],
              [
                "test_should_maintain_sampled",
                []
              ],
              [
                "test_should_generate_root_span_ids",
                []
              ],
              [
                "test_should_propagate_with_new_span_id",
                []
              ],
              [
                "test_should_update_span_info_on_subspan_start",
                []
              ],
              [
                "test_should_set_flags_for_debug",
                []
              ],
              [
                "test_should_propagate_span_id_as_parent",
                []
              ],
              [
                "test_should_maintain_flags_for_debug",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7810302021184387,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_should_maintain_trace_id",
                  "test_should_revert_span_info_on_subspan_end",
                  0.7672718149200738
                ],
                [
                  "test_should_not_set_sampled",
                  "test_should_maintain_flags_for_debug",
                  0.8322408474822951
                ],
                [
                  "test_should_maintain_sampled",
                  "test_should_maintain_flags_for_debug",
                  0.8944898814132305
                ],
                [
                  "test_should_propagate_span_id_as_parent",
                  "test_should_update_headers_if_passed",
                  0.6620514992205259
                ],
                [
                  "test_should_generate_root_span_ids",
                  "test_should_update_headers_if_passed",
                  0.5636731643195709
                ],
                [
                  "test_should_update_span_info_on_subspan_start",
                  "test_should_revert_span_info_on_subspan_end",
                  0.9442653508580534
                ],
                [
                  "test_should_propagate_with_new_span_id",
                  "test_should_maintain_flags_for_debug",
                  0.8228384246471809
                ],
                [
                  "test_should_maintain_flags_for_debug",
                  "test_should_update_headers_if_passed",
                  0.6655357639581396
                ],
                [
                  "test_should_set_flags_for_debug",
                  "test_should_revert_span_info_on_subspan_end",
                  0.7750686102279605
                ],
                [
                  "test_should_propagate_with_new_span_id",
                  "test_should_update_headers_if_passed",
                  0.6343247919734842
                ],
                [
                  "test_should_not_set_sampled",
                  "test_should_maintain_sampled",
                  0.9088503697244781
                ],
                [
                  "test_should_propagate_with_new_span_id",
                  "test_should_maintain_sampled",
                  0.8117122097687638
                ],
                [
                  "test_should_generate_root_span_ids",
                  "test_should_propagate_with_new_span_id",
                  0.9195751561581179
                ],
                [
                  "test_should_maintain_flags_for_debug",
                  "test_should_set_flags_for_debug",
                  0.9408213999358203
                ],
                [
                  "test_should_generate_root_span_ids",
                  "test_should_set_flags_for_debug",
                  0.8013575468202334
                ],
                [
                  "test_should_maintain_trace_id",
                  "test_should_maintain_sampled",
                  0.8241062195940115
                ],
                [
                  "test_should_propagate_span_id_as_parent",
                  "test_should_maintain_sampled",
                  0.8027869628455844
                ],
                [
                  "test_should_set_flags_for_debug",
                  "test_should_update_span_info_on_subspan_start",
                  0.7779564509797496
                ],
                [
                  "test_should_propagate_span_id_as_parent",
                  "test_should_not_set_sampled",
                  0.7566090680132259
                ],
                [
                  "test_should_not_set_sampled",
                  "test_should_update_span_info_on_subspan_start",
                  0.6857420047713052
                ],
                [
                  "test_should_maintain_trace_id",
                  "test_should_not_set_sampled",
                  0.7536784901804471
                ],
                [
                  "test_should_generate_root_span_ids",
                  "test_should_revert_span_info_on_subspan_end",
                  0.8397824119432704
                ],
                [
                  "test_should_maintain_sampled",
                  "test_should_revert_span_info_on_subspan_end",
                  0.7534120708673475
                ],
                [
                  "test_should_maintain_trace_id",
                  "test_should_propagate_with_new_span_id",
                  0.8583388726949859
                ],
                [
                  "test_should_revert_span_info_on_subspan_end",
                  "test_should_update_headers_if_passed",
                  0.5048267902790239
                ],
                [
                  "test_should_propagate_span_id_as_parent",
                  "test_should_propagate_with_new_span_id",
                  0.966602229806889
                ],
                [
                  "test_should_maintain_sampled",
                  "test_should_update_headers_if_passed",
                  0.7070332123592988
                ],
                [
                  "test_should_propagate_with_new_span_id",
                  "test_should_update_span_info_on_subspan_start",
                  0.8387698856201854
                ],
                [
                  "test_should_propagate_span_id_as_parent",
                  "test_should_revert_span_info_on_subspan_end",
                  0.8179113424660852
                ],
                [
                  "test_should_not_set_sampled",
                  "test_should_set_flags_for_debug",
                  0.8349186145927816
                ],
                [
                  "test_should_maintain_sampled",
                  "test_should_update_span_info_on_subspan_start",
                  0.7551415060567135
                ],
                [
                  "test_should_propagate_with_new_span_id",
                  "test_should_revert_span_info_on_subspan_end",
                  0.8296170060871263
                ],
                [
                  "test_should_propagate_with_new_span_id",
                  "test_should_not_set_sampled",
                  0.7566455582313223
                ],
                [
                  "test_should_maintain_flags_for_debug",
                  "test_should_revert_span_info_on_subspan_end",
                  0.7750133431119843
                ],
                [
                  "test_should_maintain_trace_id",
                  "test_should_update_headers_if_passed",
                  0.6199304198780667
                ],
                [
                  "test_should_set_flags_for_debug",
                  "test_should_update_headers_if_passed",
                  0.6531624303414552
                ],
                [
                  "test_should_maintain_flags_for_debug",
                  "test_should_update_span_info_on_subspan_start",
                  0.7770235140636598
                ],
                [
                  "test_should_update_span_info_on_subspan_start",
                  "test_should_update_headers_if_passed",
                  0.5160051222243667
                ],
                [
                  "test_should_generate_root_span_ids",
                  "test_should_update_span_info_on_subspan_start",
                  0.8452726325338065
                ],
                [
                  "test_should_maintain_sampled",
                  "test_should_set_flags_for_debug",
                  0.861643471334175
                ],
                [
                  "test_should_generate_root_span_ids",
                  "test_should_not_set_sampled",
                  0.7248595720605523
                ],
                [
                  "test_should_maintain_trace_id",
                  "test_should_propagate_span_id_as_parent",
                  0.8678351994324969
                ],
                [
                  "test_should_generate_root_span_ids",
                  "test_should_propagate_span_id_as_parent",
                  0.8613074916533036
                ],
                [
                  "test_should_maintain_trace_id",
                  "test_should_set_flags_for_debug",
                  0.7982615119605949
                ],
                [
                  "test_should_propagate_span_id_as_parent",
                  "test_should_set_flags_for_debug",
                  0.7869601674392341
                ],
                [
                  "test_should_generate_root_span_ids",
                  "test_should_maintain_trace_id",
                  0.8344296044420634
                ],
                [
                  "test_should_generate_root_span_ids",
                  "test_should_maintain_flags_for_debug",
                  0.8188472699350471
                ],
                [
                  "test_should_not_set_sampled",
                  "test_should_revert_span_info_on_subspan_end",
                  0.6807890111917143
                ],
                [
                  "test_should_generate_root_span_ids",
                  "test_should_maintain_sampled",
                  0.7976183595259202
                ],
                [
                  "test_should_maintain_trace_id",
                  "test_should_update_span_info_on_subspan_start",
                  0.7681326722420043
                ],
                [
                  "test_should_propagate_with_new_span_id",
                  "test_should_set_flags_for_debug",
                  0.7960177911582313
                ],
                [
                  "test_should_propagate_span_id_as_parent",
                  "test_should_update_span_info_on_subspan_start",
                  0.8216494002786803
                ],
                [
                  "test_should_maintain_trace_id",
                  "test_should_maintain_flags_for_debug",
                  0.8209616713358744
                ],
                [
                  "test_should_propagate_span_id_as_parent",
                  "test_should_maintain_flags_for_debug",
                  0.8097467464368122
                ],
                [
                  "test_should_not_set_sampled",
                  "test_should_update_headers_if_passed",
                  0.7132381851168015
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_should_maintain_trace_id",
                "false"
              ],
              [
                "test_should_revert_span_info_on_subspan_end",
                "false"
              ],
              [
                "test_should_update_headers_if_passed",
                "false"
              ],
              [
                "test_should_not_set_sampled",
                "true"
              ],
              [
                "test_should_maintain_sampled",
                "false"
              ],
              [
                "test_should_generate_root_span_ids",
                "false"
              ],
              [
                "test_should_propagate_with_new_span_id",
                "false"
              ],
              [
                "test_should_update_span_info_on_subspan_start",
                "false"
              ],
              [
                "test_should_set_flags_for_debug",
                "false"
              ],
              [
                "test_should_propagate_span_id_as_parent",
                "false"
              ],
              [
                "test_should_maintain_flags_for_debug",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 11
      }
    ]
  }
]