[
  {
    "name": "test_\u0026_test_router.py",
    "testCases": [
      {
        "name": "TestLambdaALBRouter",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_valid_get_request_root",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_get_request_to_post_only_endpoint",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_invalid_path",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_valid_get_request_with_user",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_valid_post_request_with_data",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_valid_get_request_root",
                  "[]"
                ],
                [
                  "test_get_request_to_post_only_endpoint",
                  "[]"
                ],
                [
                  "test_invalid_path",
                  "[]"
                ],
                [
                  "test_valid_get_request_with_user",
                  "[]"
                ],
                [
                  "test_valid_post_request_with_data",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_valid_get_request_root",
                  "false"
                ],
                [
                  "test_get_request_to_post_only_endpoint",
                  "false"
                ],
                [
                  "test_invalid_path",
                  "false"
                ],
                [
                  "test_valid_get_request_with_user",
                  "false"
                ],
                [
                  "test_valid_post_request_with_data",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_valid_get_request_root",
                  "false"
                ],
                [
                  "test_get_request_to_post_only_endpoint",
                  "false"
                ],
                [
                  "test_invalid_path",
                  "false"
                ],
                [
                  "test_valid_get_request_with_user",
                  "false"
                ],
                [
                  "test_valid_post_request_with_data",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_valid_get_request_root",
                  "false"
                ],
                [
                  "test_get_request_to_post_only_endpoint",
                  "false"
                ],
                [
                  "test_invalid_path",
                  "false"
                ],
                [
                  "test_valid_get_request_with_user",
                  "false"
                ],
                [
                  "test_valid_post_request_with_data",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_valid_get_request_root",
                  "false"
                ],
                [
                  "test_get_request_to_post_only_endpoint",
                  "false"
                ],
                [
                  "test_invalid_path",
                  "false"
                ],
                [
                  "test_valid_get_request_with_user",
                  "false"
                ],
                [
                  "test_valid_post_request_with_data",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valid_get_request_root",
                "false"
              ],
              [
                "test_get_request_to_post_only_endpoint",
                "false"
              ],
              [
                "test_invalid_path",
                "false"
              ],
              [
                "test_valid_get_request_with_user",
                "false"
              ],
              [
                "test_valid_post_request_with_data",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_valid_get_request_root",
                "false"
              ],
              [
                "test_get_request_to_post_only_endpoint",
                "false"
              ],
              [
                "test_invalid_path",
                "false"
              ],
              [
                "test_valid_get_request_with_user",
                "false"
              ],
              [
                "test_valid_post_request_with_data",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_valid_get_request_root",
                []
              ],
              [
                "test_get_request_to_post_only_endpoint",
                []
              ],
              [
                "test_invalid_path",
                []
              ],
              [
                "test_valid_get_request_with_user",
                []
              ],
              [
                "test_valid_post_request_with_data",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valid_get_request_root",
                "false"
              ],
              [
                "test_get_request_to_post_only_endpoint",
                "false"
              ],
              [
                "test_invalid_path",
                "false"
              ],
              [
                "test_valid_get_request_with_user",
                "false"
              ],
              [
                "test_valid_post_request_with_data",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_valid_get_request_root",
                "true"
              ],
              [
                "test_get_request_to_post_only_endpoint",
                "true"
              ],
              [
                "test_invalid_path",
                "true"
              ],
              [
                "test_valid_get_request_with_user",
                "true"
              ],
              [
                "test_valid_post_request_with_data",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_valid_get_request_root",
                  "0"
                ],
                [
                  "test_get_request_to_post_only_endpoint",
                  "0"
                ],
                [
                  "test_invalid_path",
                  "0"
                ],
                [
                  "test_valid_get_request_with_user",
                  "0"
                ],
                [
                  "test_valid_post_request_with_data",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_valid_get_request_root",
                  "0"
                ],
                [
                  "test_get_request_to_post_only_endpoint",
                  "0"
                ],
                [
                  "test_invalid_path",
                  "0"
                ],
                [
                  "test_valid_get_request_with_user",
                  "0"
                ],
                [
                  "test_valid_post_request_with_data",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_valid_get_request_root",
                "false"
              ],
              [
                "test_get_request_to_post_only_endpoint",
                "false"
              ],
              [
                "test_invalid_path",
                "false"
              ],
              [
                "test_valid_get_request_with_user",
                "false"
              ],
              [
                "test_valid_post_request_with_data",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valid_get_request_root",
                "false"
              ],
              [
                "test_get_request_to_post_only_endpoint",
                "false"
              ],
              [
                "test_invalid_path",
                "false"
              ],
              [
                "test_valid_get_request_with_user",
                "false"
              ],
              [
                "test_valid_post_request_with_data",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valid_get_request_root",
                "2"
              ],
              [
                "test_get_request_to_post_only_endpoint",
                "1"
              ],
              [
                "test_invalid_path",
                "1"
              ],
              [
                "test_valid_get_request_with_user",
                "2"
              ],
              [
                "test_valid_post_request_with_data",
                "4"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_valid_get_request_root",
                [
                  "result",
                  "event"
                ]
              ],
              [
                "test_get_request_to_post_only_endpoint",
                [
                  "result",
                  "event"
                ]
              ],
              [
                "test_invalid_path",
                [
                  "result",
                  "event"
                ]
              ],
              [
                "test_valid_get_request_with_user",
                [
                  "result",
                  "event"
                ]
              ],
              [
                "test_valid_post_request_with_data",
                [
                  "result",
                  "event"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_valid_get_request_root",
                []
              ],
              [
                "test_get_request_to_post_only_endpoint",
                []
              ],
              [
                "test_invalid_path",
                []
              ],
              [
                "test_valid_get_request_with_user",
                []
              ],
              [
                "test_valid_post_request_with_data",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.952803788199412,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_valid_get_request_root",
                  "test_valid_post_request_with_data",
                  0.9248111770182096
                ],
                [
                  "test_valid_get_request_root",
                  "test_valid_get_request_with_user",
                  0.9847979933319314
                ],
                [
                  "test_valid_get_request_root",
                  "test_invalid_path",
                  0.9729851623867035
                ],
                [
                  "test_valid_get_request_with_user",
                  "test_get_request_to_post_only_endpoint",
                  0.9732443702284377
                ],
                [
                  "test_valid_get_request_root",
                  "test_get_request_to_post_only_endpoint",
                  0.976951981255433
                ],
                [
                  "test_valid_post_request_with_data",
                  "test_get_request_to_post_only_endpoint",
                  0.9105284825325674
                ],
                [
                  "test_valid_get_request_with_user",
                  "test_valid_post_request_with_data",
                  0.9283612257040624
                ],
                [
                  "test_valid_get_request_with_user",
                  "test_invalid_path",
                  0.9692926057550747
                ],
                [
                  "test_valid_post_request_with_data",
                  "test_invalid_path",
                  0.9104725800950013
                ],
                [
                  "test_invalid_path",
                  "test_get_request_to_post_only_endpoint",
                  0.9765923036866991
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_valid_get_request_root",
                "false"
              ],
              [
                "test_get_request_to_post_only_endpoint",
                "false"
              ],
              [
                "test_invalid_path",
                "false"
              ],
              [
                "test_valid_get_request_with_user",
                "false"
              ],
              [
                "test_valid_post_request_with_data",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      }
    ]
  }
]