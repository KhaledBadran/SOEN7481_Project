[
  {
    "name": "indexedconv_\u0026_tests_\u0026_test_utils.py",
    "testCases": [
      {
        "name": "TestUtils",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_build_kernel",
                  "[]"
                ],
                [
                  "test_img2mat",
                  "[]"
                ],
                [
                  "test_build_hexagonal_position",
                  "[]"
                ],
                [
                  "test_pool_index_matrix",
                  "[]"
                ],
                [
                  "test_square_to_hexagonal",
                  "[]"
                ],
                [
                  "test_mat2img",
                  "[]"
                ],
                [
                  "test_square_to_hexagonal_index_matrix",
                  "[]"
                ],
                [
                  "test_neighbours_extraction",
                  "[]"
                ],
                [
                  "test_create_index_matrix",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_build_kernel",
                  "[]"
                ],
                [
                  "test_img2mat",
                  "[]"
                ],
                [
                  "test_build_hexagonal_position",
                  "[]"
                ],
                [
                  "test_pool_index_matrix",
                  "[]"
                ],
                [
                  "test_square_to_hexagonal",
                  "[]"
                ],
                [
                  "test_mat2img",
                  "[]"
                ],
                [
                  "test_square_to_hexagonal_index_matrix",
                  "[]"
                ],
                [
                  "test_neighbours_extraction",
                  "[]"
                ],
                [
                  "test_create_index_matrix",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_build_kernel",
                  "false"
                ],
                [
                  "test_img2mat",
                  "false"
                ],
                [
                  "test_build_hexagonal_position",
                  "false"
                ],
                [
                  "test_pool_index_matrix",
                  "false"
                ],
                [
                  "test_square_to_hexagonal",
                  "false"
                ],
                [
                  "test_mat2img",
                  "false"
                ],
                [
                  "test_square_to_hexagonal_index_matrix",
                  "false"
                ],
                [
                  "test_neighbours_extraction",
                  "false"
                ],
                [
                  "test_create_index_matrix",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_build_kernel",
                  "false"
                ],
                [
                  "test_img2mat",
                  "false"
                ],
                [
                  "test_build_hexagonal_position",
                  "false"
                ],
                [
                  "test_pool_index_matrix",
                  "false"
                ],
                [
                  "test_square_to_hexagonal",
                  "false"
                ],
                [
                  "test_mat2img",
                  "false"
                ],
                [
                  "test_square_to_hexagonal_index_matrix",
                  "false"
                ],
                [
                  "test_neighbours_extraction",
                  "false"
                ],
                [
                  "test_create_index_matrix",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_build_kernel",
                  "false"
                ],
                [
                  "test_img2mat",
                  "false"
                ],
                [
                  "test_build_hexagonal_position",
                  "false"
                ],
                [
                  "test_pool_index_matrix",
                  "false"
                ],
                [
                  "test_square_to_hexagonal",
                  "false"
                ],
                [
                  "test_mat2img",
                  "false"
                ],
                [
                  "test_square_to_hexagonal_index_matrix",
                  "false"
                ],
                [
                  "test_neighbours_extraction",
                  "false"
                ],
                [
                  "test_create_index_matrix",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_build_kernel",
                  "false"
                ],
                [
                  "test_img2mat",
                  "false"
                ],
                [
                  "test_build_hexagonal_position",
                  "false"
                ],
                [
                  "test_pool_index_matrix",
                  "false"
                ],
                [
                  "test_square_to_hexagonal",
                  "false"
                ],
                [
                  "test_mat2img",
                  "false"
                ],
                [
                  "test_square_to_hexagonal_index_matrix",
                  "false"
                ],
                [
                  "test_neighbours_extraction",
                  "false"
                ],
                [
                  "test_create_index_matrix",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_build_kernel",
                "false"
              ],
              [
                "test_img2mat",
                "false"
              ],
              [
                "test_build_hexagonal_position",
                "false"
              ],
              [
                "test_pool_index_matrix",
                "false"
              ],
              [
                "test_square_to_hexagonal",
                "false"
              ],
              [
                "test_mat2img",
                "false"
              ],
              [
                "test_square_to_hexagonal_index_matrix",
                "false"
              ],
              [
                "test_neighbours_extraction",
                "false"
              ],
              [
                "test_create_index_matrix",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_build_kernel",
                "false"
              ],
              [
                "test_img2mat",
                "false"
              ],
              [
                "test_build_hexagonal_position",
                "false"
              ],
              [
                "test_pool_index_matrix",
                "false"
              ],
              [
                "test_square_to_hexagonal",
                "false"
              ],
              [
                "test_mat2img",
                "false"
              ],
              [
                "test_square_to_hexagonal_index_matrix",
                "false"
              ],
              [
                "test_neighbours_extraction",
                "false"
              ],
              [
                "test_create_index_matrix",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_build_kernel",
                [
                  "self.indexed_matrix",
                  "self.image_matrix",
                  "self.neighbours_indices_one",
                  "self.image",
                  "self.square_image_hex",
                  "self.square_to_hexagonal_index_matrix",
                  "self.pooled_index_matrix_hex",
                  "self.neighbours_indices_hex_dilated",
                  "self.neighbours_indices_pool",
                  "self.injunction_table",
                  "self.nbRow",
                  "self.nbCol",
                  "self.square_to_hexagonal_positions",
                  "self.pooled_index_matrix_pool",
                  "self.neighbours_indices_retina_hex_3",
                  "self.square_image",
                  "self.neighbours_indices_hex"
                ]
              ],
              [
                "test_img2mat",
                [
                  "self.neighbours_indices_one",
                  "self.square_image_hex",
                  "self.square_to_hexagonal_index_matrix",
                  "self.pooled_index_matrix_hex",
                  "self.neighbours_indices_hex_dilated",
                  "self.neighbours_indices_pool",
                  "self.injunction_table",
                  "self.hexagonal_kernel_1_2",
                  "self.nbRow",
                  "self.nbCol",
                  "self.square_to_hexagonal_positions",
                  "self.square_kernel_1_2",
                  "self.pooled_index_matrix_pool",
                  "self.neighbours_indices_retina_hex_3",
                  "self.hexagonal_kernel_1",
                  "self.square_kernel_1",
                  "self.square_image",
                  "self.square_kernel_0",
                  "self.neighbours_indices_hex",
                  "self.hexagonal_kernel_2"
                ]
              ],
              [
                "test_build_hexagonal_position",
                [
                  "self.indexed_matrix",
                  "self.image_matrix",
                  "self.neighbours_indices_one",
                  "self.image",
                  "self.square_image_hex",
                  "self.pooled_index_matrix_hex",
                  "self.neighbours_indices_hex_dilated",
                  "self.neighbours_indices_pool",
                  "self.injunction_table",
                  "self.hexagonal_kernel_1_2",
                  "self.nbRow",
                  "self.nbCol",
                  "self.square_kernel_1_2",
                  "self.pooled_index_matrix_pool",
                  "self.neighbours_indices_retina_hex_3",
                  "self.hexagonal_kernel_1",
                  "self.square_kernel_1",
                  "self.square_image",
                  "self.square_kernel_0",
                  "self.neighbours_indices_hex",
                  "self.hexagonal_kernel_2"
                ]
              ],
              [
                "test_pool_index_matrix",
                [
                  "self.image_matrix",
                  "self.neighbours_indices_one",
                  "self.image",
                  "self.square_image_hex",
                  "self.square_to_hexagonal_index_matrix",
                  "self.neighbours_indices_hex_dilated",
                  "self.neighbours_indices_pool",
                  "self.injunction_table",
                  "self.hexagonal_kernel_1_2",
                  "self.nbRow",
                  "self.nbCol",
                  "self.square_to_hexagonal_positions",
                  "self.square_kernel_1_2",
                  "self.neighbours_indices_retina_hex_3",
                  "self.hexagonal_kernel_1",
                  "self.square_kernel_1",
                  "self.square_image",
                  "self.square_kernel_0",
                  "self.neighbours_indices_hex",
                  "self.hexagonal_kernel_2"
                ]
              ],
              [
                "test_square_to_hexagonal",
                [
                  "self.indexed_matrix",
                  "self.image_matrix",
                  "self.neighbours_indices_one",
                  "self.image",
                  "self.square_to_hexagonal_index_matrix",
                  "self.pooled_index_matrix_hex",
                  "self.neighbours_indices_hex_dilated",
                  "self.neighbours_indices_pool",
                  "self.injunction_table",
                  "self.hexagonal_kernel_1_2",
                  "self.nbRow",
                  "self.nbCol",
                  "self.square_to_hexagonal_positions",
                  "self.square_kernel_1_2",
                  "self.pooled_index_matrix_pool",
                  "self.neighbours_indices_retina_hex_3",
                  "self.hexagonal_kernel_1",
                  "self.square_kernel_1",
                  "self.square_kernel_0",
                  "self.neighbours_indices_hex",
                  "self.hexagonal_kernel_2"
                ]
              ],
              [
                "test_mat2img",
                [
                  "self.neighbours_indices_one",
                  "self.square_image_hex",
                  "self.square_to_hexagonal_index_matrix",
                  "self.pooled_index_matrix_hex",
                  "self.neighbours_indices_hex_dilated",
                  "self.neighbours_indices_pool",
                  "self.injunction_table",
                  "self.hexagonal_kernel_1_2",
                  "self.nbRow",
                  "self.nbCol",
                  "self.square_to_hexagonal_positions",
                  "self.square_kernel_1_2",
                  "self.pooled_index_matrix_pool",
                  "self.neighbours_indices_retina_hex_3",
                  "self.hexagonal_kernel_1",
                  "self.square_kernel_1",
                  "self.square_image",
                  "self.square_kernel_0",
                  "self.neighbours_indices_hex",
                  "self.hexagonal_kernel_2"
                ]
              ],
              [
                "test_square_to_hexagonal_index_matrix",
                [
                  "self.indexed_matrix",
                  "self.image_matrix",
                  "self.neighbours_indices_one",
                  "self.image",
                  "self.square_image_hex",
                  "self.pooled_index_matrix_hex",
                  "self.neighbours_indices_hex_dilated",
                  "self.neighbours_indices_pool",
                  "self.injunction_table",
                  "self.hexagonal_kernel_1_2",
                  "self.nbRow",
                  "self.nbCol",
                  "self.square_to_hexagonal_positions",
                  "self.square_kernel_1_2",
                  "self.pooled_index_matrix_pool",
                  "self.neighbours_indices_retina_hex_3",
                  "self.hexagonal_kernel_1",
                  "self.square_kernel_1",
                  "self.square_kernel_0",
                  "self.neighbours_indices_hex",
                  "self.hexagonal_kernel_2"
                ]
              ],
              [
                "test_neighbours_extraction",
                [
                  "self.image_matrix",
                  "self.image",
                  "self.square_image_hex",
                  "self.square_to_hexagonal_index_matrix",
                  "self.pooled_index_matrix_hex",
                  "self.injunction_table",
                  "self.hexagonal_kernel_1_2",
                  "self.nbRow",
                  "self.nbCol",
                  "self.square_to_hexagonal_positions",
                  "self.square_kernel_1_2",
                  "self.pooled_index_matrix_pool",
                  "self.hexagonal_kernel_1",
                  "self.square_kernel_1",
                  "self.square_image",
                  "self.square_kernel_0",
                  "self.hexagonal_kernel_2"
                ]
              ],
              [
                "test_create_index_matrix",
                [
                  "self.image_matrix",
                  "self.neighbours_indices_one",
                  "self.image",
                  "self.square_image_hex",
                  "self.square_to_hexagonal_index_matrix",
                  "self.pooled_index_matrix_hex",
                  "self.neighbours_indices_hex_dilated",
                  "self.neighbours_indices_pool",
                  "self.hexagonal_kernel_1_2",
                  "self.square_to_hexagonal_positions",
                  "self.square_kernel_1_2",
                  "self.pooled_index_matrix_pool",
                  "self.neighbours_indices_retina_hex_3",
                  "self.hexagonal_kernel_1",
                  "self.square_kernel_1",
                  "self.square_image",
                  "self.square_kernel_0",
                  "self.neighbours_indices_hex",
                  "self.hexagonal_kernel_2"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_build_kernel",
                "false"
              ],
              [
                "test_img2mat",
                "false"
              ],
              [
                "test_build_hexagonal_position",
                "false"
              ],
              [
                "test_pool_index_matrix",
                "false"
              ],
              [
                "test_square_to_hexagonal",
                "false"
              ],
              [
                "test_mat2img",
                "false"
              ],
              [
                "test_square_to_hexagonal_index_matrix",
                "false"
              ],
              [
                "test_neighbours_extraction",
                "false"
              ],
              [
                "test_create_index_matrix",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_build_kernel",
                "false"
              ],
              [
                "test_img2mat",
                "false"
              ],
              [
                "test_build_hexagonal_position",
                "false"
              ],
              [
                "test_pool_index_matrix",
                "false"
              ],
              [
                "test_square_to_hexagonal",
                "false"
              ],
              [
                "test_mat2img",
                "false"
              ],
              [
                "test_square_to_hexagonal_index_matrix",
                "false"
              ],
              [
                "test_neighbours_extraction",
                "false"
              ],
              [
                "test_create_index_matrix",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_build_kernel",
                  "0"
                ],
                [
                  "test_img2mat",
                  "0"
                ],
                [
                  "test_build_hexagonal_position",
                  "0"
                ],
                [
                  "test_pool_index_matrix",
                  "0"
                ],
                [
                  "test_square_to_hexagonal",
                  "0"
                ],
                [
                  "test_mat2img",
                  "0"
                ],
                [
                  "test_square_to_hexagonal_index_matrix",
                  "0"
                ],
                [
                  "test_neighbours_extraction",
                  "0"
                ],
                [
                  "test_create_index_matrix",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_build_kernel",
                  "0"
                ],
                [
                  "test_img2mat",
                  "0"
                ],
                [
                  "test_build_hexagonal_position",
                  "0"
                ],
                [
                  "test_pool_index_matrix",
                  "0"
                ],
                [
                  "test_square_to_hexagonal",
                  "0"
                ],
                [
                  "test_mat2img",
                  "0"
                ],
                [
                  "test_square_to_hexagonal_index_matrix",
                  "0"
                ],
                [
                  "test_neighbours_extraction",
                  "0"
                ],
                [
                  "test_create_index_matrix",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_build_kernel",
                "false"
              ],
              [
                "test_img2mat",
                "false"
              ],
              [
                "test_build_hexagonal_position",
                "false"
              ],
              [
                "test_pool_index_matrix",
                "false"
              ],
              [
                "test_square_to_hexagonal",
                "false"
              ],
              [
                "test_mat2img",
                "false"
              ],
              [
                "test_square_to_hexagonal_index_matrix",
                "false"
              ],
              [
                "test_neighbours_extraction",
                "false"
              ],
              [
                "test_create_index_matrix",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_build_kernel",
                "false"
              ],
              [
                "test_img2mat",
                "false"
              ],
              [
                "test_build_hexagonal_position",
                "false"
              ],
              [
                "test_pool_index_matrix",
                "false"
              ],
              [
                "test_square_to_hexagonal",
                "false"
              ],
              [
                "test_mat2img",
                "false"
              ],
              [
                "test_square_to_hexagonal_index_matrix",
                "false"
              ],
              [
                "test_neighbours_extraction",
                "false"
              ],
              [
                "test_create_index_matrix",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_build_kernel",
                "6"
              ],
              [
                "test_img2mat",
                "1"
              ],
              [
                "test_build_hexagonal_position",
                "1"
              ],
              [
                "test_pool_index_matrix",
                "2"
              ],
              [
                "test_square_to_hexagonal",
                "1"
              ],
              [
                "test_mat2img",
                "1"
              ],
              [
                "test_square_to_hexagonal_index_matrix",
                "1"
              ],
              [
                "test_neighbours_extraction",
                "5"
              ],
              [
                "test_create_index_matrix",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_build_kernel",
                []
              ],
              [
                "test_img2mat",
                []
              ],
              [
                "test_build_hexagonal_position",
                []
              ],
              [
                "test_pool_index_matrix",
                []
              ],
              [
                "test_square_to_hexagonal",
                []
              ],
              [
                "test_mat2img",
                []
              ],
              [
                "test_square_to_hexagonal_index_matrix",
                []
              ],
              [
                "test_neighbours_extraction",
                []
              ],
              [
                "test_create_index_matrix",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_build_kernel",
                [
                  "self.hexagonal_kernel_1_2",
                  "self.square_kernel_1_2",
                  "self.hexagonal_kernel_1",
                  "self.square_kernel_1",
                  "self.square_kernel_0",
                  "self.hexagonal_kernel_2"
                ]
              ],
              [
                "test_img2mat",
                [
                  "self.indexed_matrix",
                  "self.image_matrix",
                  "self.image"
                ]
              ],
              [
                "test_build_hexagonal_position",
                [
                  "self.square_to_hexagonal_index_matrix",
                  "self.square_to_hexagonal_positions"
                ]
              ],
              [
                "test_pool_index_matrix",
                [
                  "self.indexed_matrix",
                  "self.pooled_index_matrix_hex",
                  "self.pooled_index_matrix_pool"
                ]
              ],
              [
                "test_square_to_hexagonal",
                [
                  "self.square_image_hex",
                  "self.square_image"
                ]
              ],
              [
                "test_mat2img",
                [
                  "self.indexed_matrix",
                  "self.image_matrix",
                  "self.image"
                ]
              ],
              [
                "test_square_to_hexagonal_index_matrix",
                [
                  "self.square_to_hexagonal_index_matrix",
                  "self.square_image"
                ]
              ],
              [
                "test_neighbours_extraction",
                [
                  "self.indexed_matrix",
                  "self.neighbours_indices_one",
                  "self.neighbours_indices_hex_dilated",
                  "self.neighbours_indices_retina_hex_3",
                  "self.neighbours_indices_hex",
                  "self.neighbours_indices_pool"
                ]
              ],
              [
                "test_create_index_matrix",
                [
                  "self.indexed_matrix",
                  "self.nbRow",
                  "self.nbCol",
                  "self.injunction_table"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.24148643339950487,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_create_index_matrix",
                  "test_img2mat",
                  0.3553345272593508
                ],
                [
                  "test_neighbours_extraction",
                  "test_build_kernel",
                  0.3441769072116017
                ],
                [
                  "test_create_index_matrix",
                  "test_square_to_hexagonal",
                  0.18257418583505539
                ],
                [
                  "test_mat2img",
                  "test_neighbours_extraction",
                  0.22259728109199706
                ],
                [
                  "test_square_to_hexagonal_index_matrix",
                  "test_build_hexagonal_position",
                  0.7381732441968657
                ],
                [
                  "test_square_to_hexagonal",
                  "test_build_hexagonal_position",
                  0.37099111660813466
                ],
                [
                  "test_img2mat",
                  "test_build_kernel",
                  0.1315903389919538
                ],
                [
                  "test_create_index_matrix",
                  "test_pool_index_matrix",
                  0.43852900965351466
                ],
                [
                  "test_mat2img",
                  "test_square_to_hexagonal",
                  0.23354968324845687
                ],
                [
                  "test_img2mat",
                  "test_neighbours_extraction",
                  0.1618889317032706
                ],
                [
                  "test_img2mat",
                  "test_build_hexagonal_position",
                  0.1624591083221647
                ],
                [
                  "test_img2mat",
                  "test_pool_index_matrix",
                  0.14959151840135315
                ],
                [
                  "test_pool_index_matrix",
                  "test_square_to_hexagonal",
                  0.16012815380508713
                ],
                [
                  "test_square_to_hexagonal",
                  "test_build_kernel",
                  0.15494494670022804
                ],
                [
                  "test_square_to_hexagonal_index_matrix",
                  "test_build_kernel",
                  0.0986557004584491
                ],
                [
                  "test_pool_index_matrix",
                  "test_neighbours_extraction",
                  0.3163373200703643
                ],
                [
                  "test_pool_index_matrix",
                  "test_build_hexagonal_position",
                  0.20049566370935085
                ],
                [
                  "test_img2mat",
                  "test_square_to_hexagonal_index_matrix",
                  0.1982726388386439
                ],
                [
                  "test_neighbours_extraction",
                  "test_square_to_hexagonal_index_matrix",
                  0.07723616306073085
                ],
                [
                  "test_build_hexagonal_position",
                  "test_build_kernel",
                  0.17636890537566463
                ],
                [
                  "test_create_index_matrix",
                  "test_mat2img",
                  0.2842676218074806
                ],
                [
                  "test_pool_index_matrix",
                  "test_build_kernel",
                  0.1826995371617588
                ],
                [
                  "test_create_index_matrix",
                  "test_square_to_hexagonal_index_matrix",
                  0.42624134206067077
                ],
                [
                  "test_mat2img",
                  "test_square_to_hexagonal_index_matrix",
                  0.14870447912898294
                ],
                [
                  "test_neighbours_extraction",
                  "test_build_hexagonal_position",
                  0.08438023020266956
                ],
                [
                  "test_create_index_matrix",
                  "test_build_hexagonal_position",
                  0.2116668783336509
                ],
                [
                  "test_pool_index_matrix",
                  "test_square_to_hexagonal_index_matrix",
                  0.40782369514309286
                ],
                [
                  "test_mat2img",
                  "test_build_kernel",
                  0.1315903389919538
                ],
                [
                  "test_create_index_matrix",
                  "test_neighbours_extraction",
                  0.11073509950445823
                ],
                [
                  "test_img2mat",
                  "test_square_to_hexagonal",
                  0.23354968324845687
                ],
                [
                  "test_mat2img",
                  "test_build_hexagonal_position",
                  0.21661214442955293
                ],
                [
                  "test_square_to_hexagonal",
                  "test_square_to_hexagonal_index_matrix",
                  0.5518192679714116
                ],
                [
                  "test_mat2img",
                  "test_pool_index_matrix",
                  0.22438727760202973
                ],
                [
                  "test_create_index_matrix",
                  "test_build_kernel",
                  0.10286889997472795
                ],
                [
                  "test_img2mat",
                  "test_mat2img",
                  0.36363636363636365
                ],
                [
                  "test_neighbours_extraction",
                  "test_square_to_hexagonal",
                  0.13863339864267635
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_build_kernel",
                "false"
              ],
              [
                "test_img2mat",
                "false"
              ],
              [
                "test_build_hexagonal_position",
                "false"
              ],
              [
                "test_pool_index_matrix",
                "false"
              ],
              [
                "test_square_to_hexagonal",
                "false"
              ],
              [
                "test_mat2img",
                "false"
              ],
              [
                "test_square_to_hexagonal_index_matrix",
                "false"
              ],
              [
                "test_neighbours_extraction",
                "false"
              ],
              [
                "test_create_index_matrix",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 9
      }
    ]
  },
  {
    "name": "indexedconv_\u0026_tests_\u0026_engine_\u0026_test_masked.py",
    "testCases": [
      {
        "name": "TestMaskedConv",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_maskedconvk5",
                  "[]"
                ],
                [
                  "test_maskedconvk3",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_maskedconvk5",
                  "[]"
                ],
                [
                  "test_maskedconvk3",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_maskedconvk5",
                  "false"
                ],
                [
                  "test_maskedconvk3",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_maskedconvk5",
                  "false"
                ],
                [
                  "test_maskedconvk3",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_maskedconvk5",
                  "false"
                ],
                [
                  "test_maskedconvk3",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_maskedconvk5",
                  "false"
                ],
                [
                  "test_maskedconvk3",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_maskedconvk5",
                "false"
              ],
              [
                "test_maskedconvk3",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_maskedconvk5",
                "false"
              ],
              [
                "test_maskedconvk3",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_maskedconvk5",
                [
                  "self.convk5.bias",
                  "self.convk5.weight",
                  "self.convk3",
                  "self.convk3.bias",
                  "self.convk3.weight"
                ]
              ],
              [
                "test_maskedconvk3",
                [
                  "self.convk5.bias",
                  "self.convk5.weight",
                  "self.convk3.bias",
                  "self.convk5",
                  "self.convk3.weight"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_maskedconvk5",
                "false"
              ],
              [
                "test_maskedconvk3",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_maskedconvk5",
                "false"
              ],
              [
                "test_maskedconvk3",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_maskedconvk5",
                  "0"
                ],
                [
                  "test_maskedconvk3",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_maskedconvk5",
                  "0"
                ],
                [
                  "test_maskedconvk3",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_maskedconvk5",
                "false"
              ],
              [
                "test_maskedconvk3",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_maskedconvk5",
                "false"
              ],
              [
                "test_maskedconvk3",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_maskedconvk5",
                "1"
              ],
              [
                "test_maskedconvk3",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_maskedconvk5",
                []
              ],
              [
                "test_maskedconvk3",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_maskedconvk5",
                [
                  "self.data",
                  "self.convk5"
                ]
              ],
              [
                "test_maskedconvk3",
                [
                  "self.convk3",
                  "self.data"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.3430370849313401,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_maskedconvk3",
                  "test_maskedconvk5",
                  0.3430370849313401
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_maskedconvk5",
                "false"
              ],
              [
                "test_maskedconvk3",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "indexedconv_\u0026_tests_\u0026_engine_\u0026_test_indexed.py",
    "testCases": [
      {
        "name": "TestIndexedConv",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_indexedconv31",
                  "[]"
                ],
                [
                  "test_indexedconv11",
                  "[]"
                ],
                [
                  "test_indexedconv13",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_indexedconv31",
                  "[]"
                ],
                [
                  "test_indexedconv11",
                  "[]"
                ],
                [
                  "test_indexedconv13",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_indexedconv31",
                  "false"
                ],
                [
                  "test_indexedconv11",
                  "false"
                ],
                [
                  "test_indexedconv13",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_indexedconv31",
                  "false"
                ],
                [
                  "test_indexedconv11",
                  "false"
                ],
                [
                  "test_indexedconv13",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_indexedconv31",
                  "false"
                ],
                [
                  "test_indexedconv11",
                  "false"
                ],
                [
                  "test_indexedconv13",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_indexedconv31",
                  "false"
                ],
                [
                  "test_indexedconv11",
                  "false"
                ],
                [
                  "test_indexedconv13",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_indexedconv31",
                "false"
              ],
              [
                "test_indexedconv11",
                "false"
              ],
              [
                "test_indexedconv13",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_indexedconv31",
                "false"
              ],
              [
                "test_indexedconv11",
                "false"
              ],
              [
                "test_indexedconv13",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_indexedconv31",
                [
                  "self.conv11.weight",
                  "self.data_1",
                  "self.conv13",
                  "self.conv31.bias",
                  "self.conv11.bias",
                  "self.conv31.weight",
                  "self.conv13.bias",
                  "self.conv11",
                  "self.conv13.weight"
                ]
              ],
              [
                "test_indexedconv11",
                [
                  "self.conv11.weight",
                  "self.conv13",
                  "self.conv31.bias",
                  "self.conv11.bias",
                  "self.conv31.weight",
                  "self.conv13.bias",
                  "self.data_3",
                  "self.conv13.weight",
                  "self.conv31"
                ]
              ],
              [
                "test_indexedconv13",
                [
                  "self.conv11.weight",
                  "self.conv31.bias",
                  "self.conv11.bias",
                  "self.conv31.weight",
                  "self.conv13.bias",
                  "self.data_3",
                  "self.conv11",
                  "self.conv13.weight",
                  "self.conv31"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_indexedconv31",
                "false"
              ],
              [
                "test_indexedconv11",
                "false"
              ],
              [
                "test_indexedconv13",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_indexedconv31",
                "false"
              ],
              [
                "test_indexedconv11",
                "false"
              ],
              [
                "test_indexedconv13",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_indexedconv31",
                  "0"
                ],
                [
                  "test_indexedconv11",
                  "0"
                ],
                [
                  "test_indexedconv13",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_indexedconv31",
                  "0"
                ],
                [
                  "test_indexedconv11",
                  "0"
                ],
                [
                  "test_indexedconv13",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_indexedconv31",
                "false"
              ],
              [
                "test_indexedconv11",
                "false"
              ],
              [
                "test_indexedconv13",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_indexedconv31",
                "false"
              ],
              [
                "test_indexedconv11",
                "false"
              ],
              [
                "test_indexedconv13",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_indexedconv31",
                "1"
              ],
              [
                "test_indexedconv11",
                "1"
              ],
              [
                "test_indexedconv13",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_indexedconv31",
                []
              ],
              [
                "test_indexedconv11",
                []
              ],
              [
                "test_indexedconv13",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_indexedconv31",
                [
                  "self.data_3",
                  "self.conv31"
                ]
              ],
              [
                "test_indexedconv11",
                [
                  "self.data_1",
                  "self.conv11"
                ]
              ],
              [
                "test_indexedconv13",
                [
                  "self.conv13",
                  "self.data_1"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9786086578479595,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_indexedconv13",
                  "test_indexedconv31",
                  0.9679129867719392
                ],
                [
                  "test_indexedconv11",
                  "test_indexedconv31",
                  1.0
                ],
                [
                  "test_indexedconv11",
                  "test_indexedconv13",
                  0.9679129867719392
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_indexedconv31",
                "false"
              ],
              [
                "test_indexedconv11",
                "false"
              ],
              [
                "test_indexedconv13",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      },
      {
        "name": "TestIndexedMaxPool2d",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_maxpool3",
                  "[]"
                ],
                [
                  "test_maxpool1",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_maxpool3",
                  "[]"
                ],
                [
                  "test_maxpool1",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_maxpool3",
                  "false"
                ],
                [
                  "test_maxpool1",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_maxpool3",
                  "false"
                ],
                [
                  "test_maxpool1",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_maxpool3",
                  "false"
                ],
                [
                  "test_maxpool1",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_maxpool3",
                  "false"
                ],
                [
                  "test_maxpool1",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_maxpool3",
                "false"
              ],
              [
                "test_maxpool1",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_maxpool3",
                "false"
              ],
              [
                "test_maxpool1",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_maxpool3",
                [
                  "self.data_1"
                ]
              ],
              [
                "test_maxpool1",
                [
                  "self.data_3"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_maxpool3",
                "false"
              ],
              [
                "test_maxpool1",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_maxpool3",
                "false"
              ],
              [
                "test_maxpool1",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_maxpool3",
                  "0"
                ],
                [
                  "test_maxpool1",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_maxpool3",
                  "0"
                ],
                [
                  "test_maxpool1",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_maxpool3",
                "false"
              ],
              [
                "test_maxpool1",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_maxpool3",
                "false"
              ],
              [
                "test_maxpool1",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_maxpool3",
                "1"
              ],
              [
                "test_maxpool1",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_maxpool3",
                []
              ],
              [
                "test_maxpool1",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_maxpool3",
                [
                  "self.maxpool",
                  "self.data_3"
                ]
              ],
              [
                "test_maxpool1",
                [
                  "self.data_1",
                  "self.maxpool"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9262784038943654,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_maxpool1",
                  "test_maxpool3",
                  0.9262784038943654
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_maxpool3",
                "false"
              ],
              [
                "test_maxpool1",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "TestIndexedAveragePool2d",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_averagepool3",
                  "[]"
                ],
                [
                  "test_averagepool1",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_averagepool3",
                  "[]"
                ],
                [
                  "test_averagepool1",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_averagepool3",
                  "false"
                ],
                [
                  "test_averagepool1",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_averagepool3",
                  "false"
                ],
                [
                  "test_averagepool1",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_averagepool3",
                  "false"
                ],
                [
                  "test_averagepool1",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_averagepool3",
                  "false"
                ],
                [
                  "test_averagepool1",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_averagepool3",
                "false"
              ],
              [
                "test_averagepool1",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_averagepool3",
                "false"
              ],
              [
                "test_averagepool1",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_averagepool3",
                [
                  "self.data_1"
                ]
              ],
              [
                "test_averagepool1",
                [
                  "self.data_3"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_averagepool3",
                "false"
              ],
              [
                "test_averagepool1",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_averagepool3",
                "false"
              ],
              [
                "test_averagepool1",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_averagepool3",
                  "0"
                ],
                [
                  "test_averagepool1",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_averagepool3",
                  "0"
                ],
                [
                  "test_averagepool1",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_averagepool3",
                "false"
              ],
              [
                "test_averagepool1",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_averagepool3",
                "false"
              ],
              [
                "test_averagepool1",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_averagepool3",
                "1"
              ],
              [
                "test_averagepool1",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_averagepool3",
                []
              ],
              [
                "test_averagepool1",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_averagepool3",
                [
                  "self.avgpool",
                  "self.data_3"
                ]
              ],
              [
                "test_averagepool1",
                [
                  "self.data_1",
                  "self.avgpool"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9482516999983219,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_averagepool1",
                  "test_averagepool3",
                  0.9482516999983219
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_averagepool3",
                "false"
              ],
              [
                "test_averagepool1",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  }
]