[
  {
    "name": "tests_\u0026_test_data.py",
    "testCases": [
      {
        "name": "TestData",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_iterator",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_empty",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_index_cache",
                  "[]"
                ],
                [
                  "test_calc",
                  "[]"
                ],
                [
                  "test_simple_load",
                  "[PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_get_frames",
                  "[]"
                ],
                [
                  "test_get_sources",
                  "[]"
                ],
                [
                  "test_write_batch",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_iterator",
                  "[]"
                ],
                [
                  "test_empty",
                  "[]"
                ],
                [
                  "test_index_cache",
                  "[]"
                ],
                [
                  "test_calc",
                  "[]"
                ],
                [
                  "test_simple_load",
                  "[]"
                ],
                [
                  "test_get_frames",
                  "[]"
                ],
                [
                  "test_get_sources",
                  "[]"
                ],
                [
                  "test_write_batch",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_iterator",
                  "true"
                ],
                [
                  "test_empty",
                  "false"
                ],
                [
                  "test_index_cache",
                  "false"
                ],
                [
                  "test_calc",
                  "true"
                ],
                [
                  "test_simple_load",
                  "false"
                ],
                [
                  "test_get_frames",
                  "false"
                ],
                [
                  "test_get_sources",
                  "false"
                ],
                [
                  "test_write_batch",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_iterator",
                  "false"
                ],
                [
                  "test_empty",
                  "false"
                ],
                [
                  "test_index_cache",
                  "false"
                ],
                [
                  "test_calc",
                  "false"
                ],
                [
                  "test_simple_load",
                  "false"
                ],
                [
                  "test_get_frames",
                  "false"
                ],
                [
                  "test_get_sources",
                  "false"
                ],
                [
                  "test_write_batch",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_iterator",
                  "false"
                ],
                [
                  "test_empty",
                  "false"
                ],
                [
                  "test_index_cache",
                  "false"
                ],
                [
                  "test_calc",
                  "false"
                ],
                [
                  "test_simple_load",
                  "false"
                ],
                [
                  "test_get_frames",
                  "false"
                ],
                [
                  "test_get_sources",
                  "false"
                ],
                [
                  "test_write_batch",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_iterator",
                  "false"
                ],
                [
                  "test_empty",
                  "false"
                ],
                [
                  "test_index_cache",
                  "false"
                ],
                [
                  "test_calc",
                  "false"
                ],
                [
                  "test_simple_load",
                  "false"
                ],
                [
                  "test_get_frames",
                  "false"
                ],
                [
                  "test_get_sources",
                  "false"
                ],
                [
                  "test_write_batch",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_iterator",
                "false"
              ],
              [
                "test_empty",
                "false"
              ],
              [
                "test_index_cache",
                "false"
              ],
              [
                "test_calc",
                "false"
              ],
              [
                "test_simple_load",
                "false"
              ],
              [
                "test_get_frames",
                "false"
              ],
              [
                "test_get_sources",
                "false"
              ],
              [
                "test_write_batch",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_iterator",
                "false"
              ],
              [
                "test_empty",
                "false"
              ],
              [
                "test_index_cache",
                "false"
              ],
              [
                "test_calc",
                "false"
              ],
              [
                "test_simple_load",
                "false"
              ],
              [
                "test_get_frames",
                "false"
              ],
              [
                "test_get_sources",
                "false"
              ],
              [
                "test_write_batch",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_iterator",
                []
              ],
              [
                "test_empty",
                []
              ],
              [
                "test_index_cache",
                []
              ],
              [
                "test_calc",
                []
              ],
              [
                "test_simple_load",
                []
              ],
              [
                "test_get_frames",
                []
              ],
              [
                "test_get_sources",
                []
              ],
              [
                "test_write_batch",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_iterator",
                "false"
              ],
              [
                "test_empty",
                "false"
              ],
              [
                "test_index_cache",
                "false"
              ],
              [
                "test_calc",
                "false"
              ],
              [
                "test_simple_load",
                "false"
              ],
              [
                "test_get_frames",
                "false"
              ],
              [
                "test_get_sources",
                "false"
              ],
              [
                "test_write_batch",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_iterator",
                "false"
              ],
              [
                "test_empty",
                "true"
              ],
              [
                "test_index_cache",
                "false"
              ],
              [
                "test_calc",
                "false"
              ],
              [
                "test_simple_load",
                "false"
              ],
              [
                "test_get_frames",
                "false"
              ],
              [
                "test_get_sources",
                "false"
              ],
              [
                "test_write_batch",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_iterator",
                  "0"
                ],
                [
                  "test_empty",
                  "0"
                ],
                [
                  "test_index_cache",
                  "0"
                ],
                [
                  "test_calc",
                  "0"
                ],
                [
                  "test_simple_load",
                  "0"
                ],
                [
                  "test_get_frames",
                  "0"
                ],
                [
                  "test_get_sources",
                  "0"
                ],
                [
                  "test_write_batch",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_iterator",
                  "0"
                ],
                [
                  "test_empty",
                  "0"
                ],
                [
                  "test_index_cache",
                  "0"
                ],
                [
                  "test_calc",
                  "0"
                ],
                [
                  "test_simple_load",
                  "0"
                ],
                [
                  "test_get_frames",
                  "0"
                ],
                [
                  "test_get_sources",
                  "0"
                ],
                [
                  "test_write_batch",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_iterator",
                "false"
              ],
              [
                "test_empty",
                "false"
              ],
              [
                "test_index_cache",
                "false"
              ],
              [
                "test_calc",
                "false"
              ],
              [
                "test_simple_load",
                "false"
              ],
              [
                "test_get_frames",
                "false"
              ],
              [
                "test_get_sources",
                "false"
              ],
              [
                "test_write_batch",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_iterator",
                "false"
              ],
              [
                "test_empty",
                "false"
              ],
              [
                "test_index_cache",
                "false"
              ],
              [
                "test_calc",
                "false"
              ],
              [
                "test_simple_load",
                "false"
              ],
              [
                "test_get_frames",
                "false"
              ],
              [
                "test_get_sources",
                "false"
              ],
              [
                "test_write_batch",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_iterator",
                "2"
              ],
              [
                "test_empty",
                "2"
              ],
              [
                "test_index_cache",
                "1"
              ],
              [
                "test_calc",
                "2"
              ],
              [
                "test_simple_load",
                "3"
              ],
              [
                "test_get_frames",
                "1"
              ],
              [
                "test_get_sources",
                "3"
              ],
              [
                "test_write_batch",
                "6"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_iterator",
                [
                  "value2",
                  "value1",
                  "reader",
                  "i"
                ]
              ],
              [
                "test_empty",
                [
                  "_batch",
                  "reader"
                ]
              ],
              [
                "test_index_cache",
                [
                  "reader",
                  "batch"
                ]
              ],
              [
                "test_calc",
                [
                  "d",
                  "reader",
                  "d_2",
                  "d_1"
                ]
              ],
              [
                "test_simple_load",
                [
                  "reader",
                  "batch"
                ]
              ],
              [
                "test_get_frames",
                [
                  "frames",
                  "reader"
                ]
              ],
              [
                "test_get_sources",
                [
                  "groundtruth1",
                  "groundtruth0",
                  "sources",
                  "reader"
                ]
              ],
              [
                "test_write_batch",
                [
                  "batched_data",
                  "unbatched_data",
                  "scene_batch"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_iterator",
                []
              ],
              [
                "test_empty",
                []
              ],
              [
                "test_index_cache",
                []
              ],
              [
                "test_calc",
                []
              ],
              [
                "test_simple_load",
                []
              ],
              [
                "test_get_frames",
                []
              ],
              [
                "test_get_sources",
                []
              ],
              [
                "test_write_batch",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5668105381758346,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_index_cache",
                  "test_simple_load",
                  0.4351941398892446
                ],
                [
                  "test_index_cache",
                  "test_get_frames",
                  0.885527196556709
                ],
                [
                  "test_iterator",
                  "test_empty",
                  0.6368471750147946
                ],
                [
                  "test_index_cache",
                  "test_get_sources",
                  0.4856221545660243
                ],
                [
                  "test_get_frames",
                  "test_calc",
                  0.7764279583678005
                ],
                [
                  "test_get_frames",
                  "test_get_sources",
                  0.46074816977001454
                ],
                [
                  "test_empty",
                  "test_write_batch",
                  0.5747495790791719
                ],
                [
                  "test_get_sources",
                  "test_calc",
                  0.46144972973690357
                ],
                [
                  "test_index_cache",
                  "test_calc",
                  0.7256254483121258
                ],
                [
                  "test_simple_load",
                  "test_get_frames",
                  0.32114687221169247
                ],
                [
                  "test_iterator",
                  "test_write_batch",
                  0.7434380754859106
                ],
                [
                  "test_write_batch",
                  "test_calc",
                  0.7248240278655179
                ],
                [
                  "test_simple_load",
                  "test_get_sources",
                  0.3321055820775357
                ],
                [
                  "test_simple_load",
                  "test_calc",
                  0.28657755814539837
                ],
                [
                  "test_iterator",
                  "test_get_frames",
                  0.817915532008452
                ],
                [
                  "test_index_cache",
                  "test_write_batch",
                  0.6126851099238252
                ],
                [
                  "test_iterator",
                  "test_calc",
                  0.7630484102339271
                ],
                [
                  "test_get_sources",
                  "test_empty",
                  0.46097722286464426
                ],
                [
                  "test_get_sources",
                  "test_write_batch",
                  0.38591641932605264
                ],
                [
                  "test_simple_load",
                  "test_iterator",
                  0.38202872398020804
                ],
                [
                  "test_get_frames",
                  "test_write_batch",
                  0.7277050507295825
                ],
                [
                  "test_empty",
                  "test_calc",
                  0.574338100245548
                ],
                [
                  "test_index_cache",
                  "test_iterator",
                  0.7758644224125771
                ],
                [
                  "test_simple_load",
                  "test_empty",
                  0.5715476066494082
                ],
                [
                  "test_index_cache",
                  "test_empty",
                  0.6609222207023923
                ],
                [
                  "test_iterator",
                  "test_get_sources",
                  0.4158643573955182
                ],
                [
                  "test_get_frames",
                  "test_empty",
                  0.597850936751175
                ],
                [
                  "test_simple_load",
                  "test_write_batch",
                  0.2737472886212129
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_iterator",
                "false"
              ],
              [
                "test_empty",
                "false"
              ],
              [
                "test_index_cache",
                "false"
              ],
              [
                "test_calc",
                "false"
              ],
              [
                "test_simple_load",
                "false"
              ],
              [
                "test_get_frames",
                "false"
              ],
              [
                "test_get_sources",
                "false"
              ],
              [
                "test_write_batch",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 8
      }
    ]
  },
  {
    "name": "tests_\u0026_test_math.py",
    "testCases": [
      {
        "name": "TestMath",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_dim_shifted",
                  "[]"
                ],
                [
                  "test_struct_broadcast",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_multimode_pad",
                  "[]"
                ],
                [
                  "test_gradient",
                  "[]"
                ],
                [
                  "test_laplace_padding",
                  "[]"
                ],
                [
                  "test_pad_circular",
                  "[]"
                ],
                [
                  "test_resample",
                  "[]"
                ],
                [
                  "test_div_no_nan",
                  "[]"
                ],
                [
                  "test_upsample_downsample",
                  "[]"
                ],
                [
                  "test_unstack",
                  "[]"
                ],
                [
                  "test_fft",
                  "[PyCallExpression: self.assertLess, PyCallExpression: self.assertLess]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_dim_shifted",
                  "[]"
                ],
                [
                  "test_struct_broadcast",
                  "[]"
                ],
                [
                  "test_multimode_pad",
                  "[]"
                ],
                [
                  "test_gradient",
                  "[]"
                ],
                [
                  "test_laplace_padding",
                  "[]"
                ],
                [
                  "test_pad_circular",
                  "[]"
                ],
                [
                  "test_resample",
                  "[]"
                ],
                [
                  "test_div_no_nan",
                  "[]"
                ],
                [
                  "test_upsample_downsample",
                  "[]"
                ],
                [
                  "test_unstack",
                  "[]"
                ],
                [
                  "test_fft",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_dim_shifted",
                  "false"
                ],
                [
                  "test_struct_broadcast",
                  "false"
                ],
                [
                  "test_multimode_pad",
                  "false"
                ],
                [
                  "test_gradient",
                  "false"
                ],
                [
                  "test_laplace_padding",
                  "true"
                ],
                [
                  "test_pad_circular",
                  "false"
                ],
                [
                  "test_resample",
                  "false"
                ],
                [
                  "test_div_no_nan",
                  "false"
                ],
                [
                  "test_upsample_downsample",
                  "false"
                ],
                [
                  "test_unstack",
                  "true"
                ],
                [
                  "test_fft",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_dim_shifted",
                  "false"
                ],
                [
                  "test_struct_broadcast",
                  "false"
                ],
                [
                  "test_multimode_pad",
                  "false"
                ],
                [
                  "test_gradient",
                  "false"
                ],
                [
                  "test_laplace_padding",
                  "false"
                ],
                [
                  "test_pad_circular",
                  "false"
                ],
                [
                  "test_resample",
                  "false"
                ],
                [
                  "test_div_no_nan",
                  "false"
                ],
                [
                  "test_upsample_downsample",
                  "false"
                ],
                [
                  "test_unstack",
                  "false"
                ],
                [
                  "test_fft",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_dim_shifted",
                  "false"
                ],
                [
                  "test_struct_broadcast",
                  "false"
                ],
                [
                  "test_multimode_pad",
                  "false"
                ],
                [
                  "test_gradient",
                  "false"
                ],
                [
                  "test_laplace_padding",
                  "false"
                ],
                [
                  "test_pad_circular",
                  "false"
                ],
                [
                  "test_resample",
                  "false"
                ],
                [
                  "test_div_no_nan",
                  "false"
                ],
                [
                  "test_upsample_downsample",
                  "false"
                ],
                [
                  "test_unstack",
                  "false"
                ],
                [
                  "test_fft",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_dim_shifted",
                  "false"
                ],
                [
                  "test_struct_broadcast",
                  "false"
                ],
                [
                  "test_multimode_pad",
                  "false"
                ],
                [
                  "test_gradient",
                  "false"
                ],
                [
                  "test_laplace_padding",
                  "false"
                ],
                [
                  "test_pad_circular",
                  "false"
                ],
                [
                  "test_resample",
                  "false"
                ],
                [
                  "test_div_no_nan",
                  "false"
                ],
                [
                  "test_upsample_downsample",
                  "false"
                ],
                [
                  "test_unstack",
                  "false"
                ],
                [
                  "test_fft",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_dim_shifted",
                "false"
              ],
              [
                "test_struct_broadcast",
                "false"
              ],
              [
                "test_multimode_pad",
                "false"
              ],
              [
                "test_gradient",
                "false"
              ],
              [
                "test_laplace_padding",
                "false"
              ],
              [
                "test_pad_circular",
                "false"
              ],
              [
                "test_resample",
                "false"
              ],
              [
                "test_div_no_nan",
                "false"
              ],
              [
                "test_upsample_downsample",
                "false"
              ],
              [
                "test_unstack",
                "false"
              ],
              [
                "test_fft",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_dim_shifted",
                "false"
              ],
              [
                "test_struct_broadcast",
                "false"
              ],
              [
                "test_multimode_pad",
                "false"
              ],
              [
                "test_gradient",
                "false"
              ],
              [
                "test_laplace_padding",
                "false"
              ],
              [
                "test_pad_circular",
                "false"
              ],
              [
                "test_resample",
                "false"
              ],
              [
                "test_div_no_nan",
                "false"
              ],
              [
                "test_upsample_downsample",
                "false"
              ],
              [
                "test_unstack",
                "false"
              ],
              [
                "test_fft",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_dim_shifted",
                []
              ],
              [
                "test_struct_broadcast",
                []
              ],
              [
                "test_multimode_pad",
                []
              ],
              [
                "test_gradient",
                []
              ],
              [
                "test_laplace_padding",
                []
              ],
              [
                "test_pad_circular",
                []
              ],
              [
                "test_resample",
                []
              ],
              [
                "test_div_no_nan",
                []
              ],
              [
                "test_upsample_downsample",
                []
              ],
              [
                "test_unstack",
                []
              ],
              [
                "test_fft",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_dim_shifted",
                "false"
              ],
              [
                "test_struct_broadcast",
                "false"
              ],
              [
                "test_multimode_pad",
                "false"
              ],
              [
                "test_gradient",
                "false"
              ],
              [
                "test_laplace_padding",
                "false"
              ],
              [
                "test_pad_circular",
                "false"
              ],
              [
                "test_resample",
                "false"
              ],
              [
                "test_div_no_nan",
                "false"
              ],
              [
                "test_upsample_downsample",
                "false"
              ],
              [
                "test_unstack",
                "false"
              ],
              [
                "test_fft",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_dim_shifted",
                "false"
              ],
              [
                "test_struct_broadcast",
                "true"
              ],
              [
                "test_multimode_pad",
                "false"
              ],
              [
                "test_gradient",
                "false"
              ],
              [
                "test_laplace_padding",
                "false"
              ],
              [
                "test_pad_circular",
                "false"
              ],
              [
                "test_resample",
                "false"
              ],
              [
                "test_div_no_nan",
                "false"
              ],
              [
                "test_upsample_downsample",
                "false"
              ],
              [
                "test_unstack",
                "false"
              ],
              [
                "test_fft",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_dim_shifted",
                  "0"
                ],
                [
                  "test_struct_broadcast",
                  "0"
                ],
                [
                  "test_multimode_pad",
                  "0"
                ],
                [
                  "test_gradient",
                  "0"
                ],
                [
                  "test_laplace_padding",
                  "0"
                ],
                [
                  "test_pad_circular",
                  "0"
                ],
                [
                  "test_resample",
                  "0"
                ],
                [
                  "test_div_no_nan",
                  "0"
                ],
                [
                  "test_upsample_downsample",
                  "0"
                ],
                [
                  "test_unstack",
                  "0"
                ],
                [
                  "test_fft",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_dim_shifted",
                  "0"
                ],
                [
                  "test_struct_broadcast",
                  "0"
                ],
                [
                  "test_multimode_pad",
                  "0"
                ],
                [
                  "test_gradient",
                  "0"
                ],
                [
                  "test_laplace_padding",
                  "0"
                ],
                [
                  "test_pad_circular",
                  "0"
                ],
                [
                  "test_resample",
                  "0"
                ],
                [
                  "test_div_no_nan",
                  "0"
                ],
                [
                  "test_upsample_downsample",
                  "0"
                ],
                [
                  "test_unstack",
                  "0"
                ],
                [
                  "test_fft",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_dim_shifted",
                "false"
              ],
              [
                "test_struct_broadcast",
                "false"
              ],
              [
                "test_multimode_pad",
                "true"
              ],
              [
                "test_gradient",
                "false"
              ],
              [
                "test_laplace_padding",
                "false"
              ],
              [
                "test_pad_circular",
                "false"
              ],
              [
                "test_resample",
                "false"
              ],
              [
                "test_div_no_nan",
                "false"
              ],
              [
                "test_upsample_downsample",
                "false"
              ],
              [
                "test_unstack",
                "false"
              ],
              [
                "test_fft",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_dim_shifted",
                "false"
              ],
              [
                "test_struct_broadcast",
                "false"
              ],
              [
                "test_multimode_pad",
                "false"
              ],
              [
                "test_gradient",
                "false"
              ],
              [
                "test_laplace_padding",
                "false"
              ],
              [
                "test_pad_circular",
                "false"
              ],
              [
                "test_resample",
                "false"
              ],
              [
                "test_div_no_nan",
                "false"
              ],
              [
                "test_upsample_downsample",
                "false"
              ],
              [
                "test_unstack",
                "false"
              ],
              [
                "test_fft",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_dim_shifted",
                "5"
              ],
              [
                "test_struct_broadcast",
                "3"
              ],
              [
                "test_multimode_pad",
                "5"
              ],
              [
                "test_gradient",
                "3"
              ],
              [
                "test_laplace_padding",
                "8"
              ],
              [
                "test_pad_circular",
                "6"
              ],
              [
                "test_resample",
                "0"
              ],
              [
                "test_div_no_nan",
                "2"
              ],
              [
                "test_upsample_downsample",
                "1"
              ],
              [
                "test_unstack",
                "4"
              ],
              [
                "test_fft",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_dim_shifted",
                [
                  "lower",
                  "center",
                  "upper",
                  "tensor"
                ]
              ],
              [
                "test_struct_broadcast",
                [
                  "result",
                  "s"
                ]
              ],
              [
                "test_multimode_pad",
                [
                  "p",
                  "a",
                  "p_tf",
                  "a_tf"
                ]
              ],
              [
                "test_gradient",
                [
                  "tensor",
                  "grad"
                ]
              ],
              [
                "test_laplace_padding",
                [
                  "a",
                  "shape",
                  "l"
                ]
              ],
              [
                "test_pad_circular",
                [
                  "a",
                  "t",
                  "a_"
                ]
              ],
              [
                "test_resample",
                []
              ],
              [
                "test_div_no_nan",
                [
                  "result",
                  "sess",
                  "x",
                  "y"
                ]
              ],
              [
                "test_upsample_downsample",
                [
                  "up",
                  "tensor",
                  "inverted"
                ]
              ],
              [
                "test_unstack",
                [
                  "components",
                  "sess",
                  "tensor"
                ]
              ],
              [
                "test_fft",
                [
                  "shape",
                  "k_np",
                  "k_tf",
                  "x_np",
                  "x_tf"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_dim_shifted",
                []
              ],
              [
                "test_struct_broadcast",
                []
              ],
              [
                "test_multimode_pad",
                []
              ],
              [
                "test_gradient",
                []
              ],
              [
                "test_laplace_padding",
                []
              ],
              [
                "test_pad_circular",
                []
              ],
              [
                "test_resample",
                []
              ],
              [
                "test_div_no_nan",
                []
              ],
              [
                "test_upsample_downsample",
                []
              ],
              [
                "test_unstack",
                []
              ],
              [
                "test_fft",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.492700904942999,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_fft",
                  "test_struct_broadcast",
                  0.27394136646341444
                ],
                [
                  "test_multimode_pad",
                  "test_dim_shifted",
                  0.5870113851896959
                ],
                [
                  "test_gradient",
                  "test_upsample_downsample",
                  0.642173965679136
                ],
                [
                  "test_laplace_padding",
                  "test_gradient",
                  0.4067468205354078
                ],
                [
                  "test_laplace_padding",
                  "test_dim_shifted",
                  0.3809301699281979
                ],
                [
                  "test_struct_broadcast",
                  "test_upsample_downsample",
                  0.49046853186182726
                ],
                [
                  "test_fft",
                  "test_pad_circular",
                  0.18597589022140412
                ],
                [
                  "test_struct_broadcast",
                  "test_resample",
                  0.8117762537727731
                ],
                [
                  "test_fft",
                  "test_laplace_padding",
                  0.49019607843137253
                ],
                [
                  "test_laplace_padding",
                  "test_div_no_nan",
                  0.3813923925917031
                ],
                [
                  "test_multimode_pad",
                  "test_unstack",
                  0.3145561026511418
                ],
                [
                  "test_struct_broadcast",
                  "test_multimode_pad",
                  0.38211147653454397
                ],
                [
                  "test_multimode_pad",
                  "test_div_no_nan",
                  0.7070077371181744
                ],
                [
                  "test_dim_shifted",
                  "test_unstack",
                  0.32584609155033556
                ],
                [
                  "test_dim_shifted",
                  "test_gradient",
                  0.8887889528831681
                ],
                [
                  "test_pad_circular",
                  "test_resample",
                  0.6735060367017908
                ],
                [
                  "test_pad_circular",
                  "test_upsample_downsample",
                  0.3714650320324691
                ],
                [
                  "test_struct_broadcast",
                  "test_unstack",
                  0.18447081178483316
                ],
                [
                  "test_div_no_nan",
                  "test_upsample_downsample",
                  0.5573975193455668
                ],
                [
                  "test_laplace_padding",
                  "test_unstack",
                  0.36695639218239945
                ],
                [
                  "test_pad_circular",
                  "test_unstack",
                  0.3149607344090544
                ],
                [
                  "test_div_no_nan",
                  "test_gradient",
                  0.8525116605405635
                ],
                [
                  "test_fft",
                  "test_unstack",
                  0.2871832634470952
                ],
                [
                  "test_div_no_nan",
                  "test_resample",
                  0.828393848343042
                ],
                [
                  "test_multimode_pad",
                  "test_gradient",
                  0.6948629113376766
                ],
                [
                  "test_upsample_downsample",
                  "test_unstack",
                  0.35962145216856095
                ],
                [
                  "test_pad_circular",
                  "test_dim_shifted",
                  0.6554337267697713
                ],
                [
                  "test_laplace_padding",
                  "test_struct_broadcast",
                  0.2676438637860946
                ],
                [
                  "test_pad_circular",
                  "test_div_no_nan",
                  0.7779026385622894
                ],
                [
                  "test_unstack",
                  "test_resample",
                  0.18848883284194043
                ],
                [
                  "test_gradient",
                  "test_resample",
                  0.8327788196037148
                ],
                [
                  "test_pad_circular",
                  "test_gradient",
                  0.7404839736871099
                ],
                [
                  "test_fft",
                  "test_dim_shifted",
                  0.2938604168017527
                ],
                [
                  "test_laplace_padding",
                  "test_pad_circular",
                  0.25043962250442137
                ],
                [
                  "test_laplace_padding",
                  "test_resample",
                  0.23507996994366315
                ],
                [
                  "test_multimode_pad",
                  "test_resample",
                  0.5710330588614697
                ],
                [
                  "test_upsample_downsample",
                  "test_resample",
                  0.4980857240450999
                ],
                [
                  "test_multimode_pad",
                  "test_upsample_downsample",
                  0.36452782217588
                ],
                [
                  "test_struct_broadcast",
                  "test_div_no_nan",
                  0.6847423618485454
                ],
                [
                  "test_struct_broadcast",
                  "test_gradient",
                  0.6958876501092275
                ],
                [
                  "test_struct_broadcast",
                  "test_dim_shifted",
                  0.7078494362995195
                ],
                [
                  "test_dim_shifted",
                  "test_resample",
                  0.8546845476219943
                ],
                [
                  "test_fft",
                  "test_div_no_nan",
                  0.40382723921474445
                ],
                [
                  "test_dim_shifted",
                  "test_upsample_downsample",
                  0.6741365654208913
                ],
                [
                  "test_gradient",
                  "test_unstack",
                  0.33695445957140885
                ],
                [
                  "test_fft",
                  "test_multimode_pad",
                  0.22661687238014938
                ],
                [
                  "test_laplace_padding",
                  "test_multimode_pad",
                  0.3441219173180046
                ],
                [
                  "test_div_no_nan",
                  "test_dim_shifted",
                  0.8047205176057761
                ],
                [
                  "test_pad_circular",
                  "test_multimode_pad",
                  0.8810177255521872
                ],
                [
                  "test_fft",
                  "test_gradient",
                  0.31472265299346036
                ],
                [
                  "test_fft",
                  "test_upsample_downsample",
                  0.3449490193589794
                ],
                [
                  "test_fft",
                  "test_resample",
                  0.2143880876600861
                ],
                [
                  "test_div_no_nan",
                  "test_unstack",
                  0.3612432972043499
                ],
                [
                  "test_laplace_padding",
                  "test_upsample_downsample",
                  0.36650833306891567
                ],
                [
                  "test_struct_broadcast",
                  "test_pad_circular",
                  0.4461677413481487
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_dim_shifted",
                "false"
              ],
              [
                "test_struct_broadcast",
                "false"
              ],
              [
                "test_multimode_pad",
                "false"
              ],
              [
                "test_gradient",
                "false"
              ],
              [
                "test_laplace_padding",
                "false"
              ],
              [
                "test_pad_circular",
                "false"
              ],
              [
                "test_resample",
                "false"
              ],
              [
                "test_div_no_nan",
                "false"
              ],
              [
                "test_upsample_downsample",
                "false"
              ],
              [
                "test_unstack",
                "false"
              ],
              [
                "test_fft",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 11
      }
    ]
  },
  {
    "name": "tests_\u0026_test_demos.py",
    "testCases": [
      {
        "name": "TestDemos",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_rotating_bar",
                  "[]"
                ],
                [
                  "test_simpleplume",
                  "[]"
                ],
                [
                  "test_smoke_datagen_commandline",
                  "[]"
                ],
                [
                  "test_simpleplume_3d",
                  "[]"
                ],
                [
                  "test_fluid_logo",
                  "[]"
                ],
                [
                  "test_modular_simpleplume",
                  "[]"
                ],
                [
                  "test_marker",
                  "[]"
                ],
                [
                  "test_smoke_datagen_interactive",
                  "[]"
                ],
                [
                  "test_manual_fluid_numpy_or_tf",
                  "[]"
                ],
                [
                  "test_burgers_sim",
                  "[]"
                ],
                [
                  "test_moving_obstacle",
                  "[]"
                ],
                [
                  "test_pipe",
                  "[]"
                ],
                [
                  "test_heat_equilibrium",
                  "[]"
                ],
                [
                  "test_moving_inflow",
                  "[]"
                ],
                [
                  "test_wavepacket",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_rotating_bar",
                  "[]"
                ],
                [
                  "test_simpleplume",
                  "[]"
                ],
                [
                  "test_smoke_datagen_commandline",
                  "[]"
                ],
                [
                  "test_simpleplume_3d",
                  "[]"
                ],
                [
                  "test_fluid_logo",
                  "[]"
                ],
                [
                  "test_modular_simpleplume",
                  "[]"
                ],
                [
                  "test_marker",
                  "[]"
                ],
                [
                  "test_smoke_datagen_interactive",
                  "[]"
                ],
                [
                  "test_manual_fluid_numpy_or_tf",
                  "[]"
                ],
                [
                  "test_burgers_sim",
                  "[]"
                ],
                [
                  "test_moving_obstacle",
                  "[]"
                ],
                [
                  "test_pipe",
                  "[]"
                ],
                [
                  "test_heat_equilibrium",
                  "[]"
                ],
                [
                  "test_moving_inflow",
                  "[]"
                ],
                [
                  "test_wavepacket",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_rotating_bar",
                  "false"
                ],
                [
                  "test_simpleplume",
                  "false"
                ],
                [
                  "test_smoke_datagen_commandline",
                  "false"
                ],
                [
                  "test_simpleplume_3d",
                  "false"
                ],
                [
                  "test_fluid_logo",
                  "false"
                ],
                [
                  "test_modular_simpleplume",
                  "false"
                ],
                [
                  "test_marker",
                  "false"
                ],
                [
                  "test_smoke_datagen_interactive",
                  "false"
                ],
                [
                  "test_manual_fluid_numpy_or_tf",
                  "false"
                ],
                [
                  "test_burgers_sim",
                  "false"
                ],
                [
                  "test_moving_obstacle",
                  "false"
                ],
                [
                  "test_pipe",
                  "false"
                ],
                [
                  "test_heat_equilibrium",
                  "false"
                ],
                [
                  "test_moving_inflow",
                  "false"
                ],
                [
                  "test_wavepacket",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_rotating_bar",
                  "false"
                ],
                [
                  "test_simpleplume",
                  "false"
                ],
                [
                  "test_smoke_datagen_commandline",
                  "false"
                ],
                [
                  "test_simpleplume_3d",
                  "false"
                ],
                [
                  "test_fluid_logo",
                  "false"
                ],
                [
                  "test_modular_simpleplume",
                  "false"
                ],
                [
                  "test_marker",
                  "false"
                ],
                [
                  "test_smoke_datagen_interactive",
                  "false"
                ],
                [
                  "test_manual_fluid_numpy_or_tf",
                  "false"
                ],
                [
                  "test_burgers_sim",
                  "false"
                ],
                [
                  "test_moving_obstacle",
                  "false"
                ],
                [
                  "test_pipe",
                  "false"
                ],
                [
                  "test_heat_equilibrium",
                  "false"
                ],
                [
                  "test_moving_inflow",
                  "false"
                ],
                [
                  "test_wavepacket",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_rotating_bar",
                  "false"
                ],
                [
                  "test_simpleplume",
                  "false"
                ],
                [
                  "test_smoke_datagen_commandline",
                  "false"
                ],
                [
                  "test_simpleplume_3d",
                  "false"
                ],
                [
                  "test_fluid_logo",
                  "false"
                ],
                [
                  "test_modular_simpleplume",
                  "false"
                ],
                [
                  "test_marker",
                  "false"
                ],
                [
                  "test_smoke_datagen_interactive",
                  "false"
                ],
                [
                  "test_manual_fluid_numpy_or_tf",
                  "false"
                ],
                [
                  "test_burgers_sim",
                  "false"
                ],
                [
                  "test_moving_obstacle",
                  "false"
                ],
                [
                  "test_pipe",
                  "false"
                ],
                [
                  "test_heat_equilibrium",
                  "false"
                ],
                [
                  "test_moving_inflow",
                  "false"
                ],
                [
                  "test_wavepacket",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_rotating_bar",
                  "false"
                ],
                [
                  "test_simpleplume",
                  "false"
                ],
                [
                  "test_smoke_datagen_commandline",
                  "false"
                ],
                [
                  "test_simpleplume_3d",
                  "false"
                ],
                [
                  "test_fluid_logo",
                  "false"
                ],
                [
                  "test_modular_simpleplume",
                  "false"
                ],
                [
                  "test_marker",
                  "false"
                ],
                [
                  "test_smoke_datagen_interactive",
                  "false"
                ],
                [
                  "test_manual_fluid_numpy_or_tf",
                  "false"
                ],
                [
                  "test_burgers_sim",
                  "false"
                ],
                [
                  "test_moving_obstacle",
                  "false"
                ],
                [
                  "test_pipe",
                  "false"
                ],
                [
                  "test_heat_equilibrium",
                  "false"
                ],
                [
                  "test_moving_inflow",
                  "false"
                ],
                [
                  "test_wavepacket",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_rotating_bar",
                "false"
              ],
              [
                "test_simpleplume",
                "false"
              ],
              [
                "test_smoke_datagen_commandline",
                "false"
              ],
              [
                "test_simpleplume_3d",
                "false"
              ],
              [
                "test_fluid_logo",
                "false"
              ],
              [
                "test_modular_simpleplume",
                "false"
              ],
              [
                "test_marker",
                "false"
              ],
              [
                "test_smoke_datagen_interactive",
                "false"
              ],
              [
                "test_manual_fluid_numpy_or_tf",
                "false"
              ],
              [
                "test_burgers_sim",
                "false"
              ],
              [
                "test_moving_obstacle",
                "false"
              ],
              [
                "test_pipe",
                "false"
              ],
              [
                "test_heat_equilibrium",
                "false"
              ],
              [
                "test_moving_inflow",
                "false"
              ],
              [
                "test_wavepacket",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_rotating_bar",
                "false"
              ],
              [
                "test_simpleplume",
                "false"
              ],
              [
                "test_smoke_datagen_commandline",
                "false"
              ],
              [
                "test_simpleplume_3d",
                "false"
              ],
              [
                "test_fluid_logo",
                "false"
              ],
              [
                "test_modular_simpleplume",
                "false"
              ],
              [
                "test_marker",
                "false"
              ],
              [
                "test_smoke_datagen_interactive",
                "false"
              ],
              [
                "test_manual_fluid_numpy_or_tf",
                "false"
              ],
              [
                "test_burgers_sim",
                "false"
              ],
              [
                "test_moving_obstacle",
                "false"
              ],
              [
                "test_pipe",
                "false"
              ],
              [
                "test_heat_equilibrium",
                "false"
              ],
              [
                "test_moving_inflow",
                "false"
              ],
              [
                "test_wavepacket",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_rotating_bar",
                []
              ],
              [
                "test_simpleplume",
                []
              ],
              [
                "test_smoke_datagen_commandline",
                []
              ],
              [
                "test_simpleplume_3d",
                []
              ],
              [
                "test_fluid_logo",
                []
              ],
              [
                "test_modular_simpleplume",
                []
              ],
              [
                "test_marker",
                []
              ],
              [
                "test_smoke_datagen_interactive",
                []
              ],
              [
                "test_manual_fluid_numpy_or_tf",
                []
              ],
              [
                "test_burgers_sim",
                []
              ],
              [
                "test_moving_obstacle",
                []
              ],
              [
                "test_pipe",
                []
              ],
              [
                "test_heat_equilibrium",
                []
              ],
              [
                "test_moving_inflow",
                []
              ],
              [
                "test_wavepacket",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_rotating_bar",
                "false"
              ],
              [
                "test_simpleplume",
                "false"
              ],
              [
                "test_smoke_datagen_commandline",
                "false"
              ],
              [
                "test_simpleplume_3d",
                "false"
              ],
              [
                "test_fluid_logo",
                "false"
              ],
              [
                "test_modular_simpleplume",
                "false"
              ],
              [
                "test_marker",
                "false"
              ],
              [
                "test_smoke_datagen_interactive",
                "false"
              ],
              [
                "test_manual_fluid_numpy_or_tf",
                "false"
              ],
              [
                "test_burgers_sim",
                "false"
              ],
              [
                "test_moving_obstacle",
                "false"
              ],
              [
                "test_pipe",
                "false"
              ],
              [
                "test_heat_equilibrium",
                "false"
              ],
              [
                "test_moving_inflow",
                "false"
              ],
              [
                "test_wavepacket",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_rotating_bar",
                "false"
              ],
              [
                "test_simpleplume",
                "false"
              ],
              [
                "test_smoke_datagen_commandline",
                "false"
              ],
              [
                "test_simpleplume_3d",
                "false"
              ],
              [
                "test_fluid_logo",
                "false"
              ],
              [
                "test_modular_simpleplume",
                "false"
              ],
              [
                "test_marker",
                "false"
              ],
              [
                "test_smoke_datagen_interactive",
                "false"
              ],
              [
                "test_manual_fluid_numpy_or_tf",
                "false"
              ],
              [
                "test_burgers_sim",
                "false"
              ],
              [
                "test_moving_obstacle",
                "false"
              ],
              [
                "test_pipe",
                "false"
              ],
              [
                "test_heat_equilibrium",
                "false"
              ],
              [
                "test_moving_inflow",
                "false"
              ],
              [
                "test_wavepacket",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_rotating_bar",
                  "0"
                ],
                [
                  "test_simpleplume",
                  "0"
                ],
                [
                  "test_smoke_datagen_commandline",
                  "0"
                ],
                [
                  "test_simpleplume_3d",
                  "0"
                ],
                [
                  "test_fluid_logo",
                  "0"
                ],
                [
                  "test_modular_simpleplume",
                  "0"
                ],
                [
                  "test_marker",
                  "0"
                ],
                [
                  "test_smoke_datagen_interactive",
                  "0"
                ],
                [
                  "test_manual_fluid_numpy_or_tf",
                  "0"
                ],
                [
                  "test_burgers_sim",
                  "0"
                ],
                [
                  "test_moving_obstacle",
                  "0"
                ],
                [
                  "test_pipe",
                  "0"
                ],
                [
                  "test_heat_equilibrium",
                  "0"
                ],
                [
                  "test_moving_inflow",
                  "0"
                ],
                [
                  "test_wavepacket",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_rotating_bar",
                  "0"
                ],
                [
                  "test_simpleplume",
                  "0"
                ],
                [
                  "test_smoke_datagen_commandline",
                  "0"
                ],
                [
                  "test_simpleplume_3d",
                  "0"
                ],
                [
                  "test_fluid_logo",
                  "0"
                ],
                [
                  "test_modular_simpleplume",
                  "0"
                ],
                [
                  "test_marker",
                  "0"
                ],
                [
                  "test_smoke_datagen_interactive",
                  "0"
                ],
                [
                  "test_manual_fluid_numpy_or_tf",
                  "0"
                ],
                [
                  "test_burgers_sim",
                  "0"
                ],
                [
                  "test_moving_obstacle",
                  "0"
                ],
                [
                  "test_pipe",
                  "0"
                ],
                [
                  "test_heat_equilibrium",
                  "0"
                ],
                [
                  "test_moving_inflow",
                  "0"
                ],
                [
                  "test_wavepacket",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_rotating_bar",
                "false"
              ],
              [
                "test_simpleplume",
                "false"
              ],
              [
                "test_smoke_datagen_commandline",
                "false"
              ],
              [
                "test_simpleplume_3d",
                "false"
              ],
              [
                "test_fluid_logo",
                "false"
              ],
              [
                "test_modular_simpleplume",
                "false"
              ],
              [
                "test_marker",
                "false"
              ],
              [
                "test_smoke_datagen_interactive",
                "false"
              ],
              [
                "test_manual_fluid_numpy_or_tf",
                "false"
              ],
              [
                "test_burgers_sim",
                "false"
              ],
              [
                "test_moving_obstacle",
                "false"
              ],
              [
                "test_pipe",
                "false"
              ],
              [
                "test_heat_equilibrium",
                "false"
              ],
              [
                "test_moving_inflow",
                "false"
              ],
              [
                "test_wavepacket",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_rotating_bar",
                "false"
              ],
              [
                "test_simpleplume",
                "false"
              ],
              [
                "test_smoke_datagen_commandline",
                "false"
              ],
              [
                "test_simpleplume_3d",
                "false"
              ],
              [
                "test_fluid_logo",
                "false"
              ],
              [
                "test_modular_simpleplume",
                "false"
              ],
              [
                "test_marker",
                "false"
              ],
              [
                "test_smoke_datagen_interactive",
                "false"
              ],
              [
                "test_manual_fluid_numpy_or_tf",
                "false"
              ],
              [
                "test_burgers_sim",
                "false"
              ],
              [
                "test_moving_obstacle",
                "false"
              ],
              [
                "test_pipe",
                "false"
              ],
              [
                "test_heat_equilibrium",
                "false"
              ],
              [
                "test_moving_inflow",
                "false"
              ],
              [
                "test_wavepacket",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_rotating_bar",
                "0"
              ],
              [
                "test_simpleplume",
                "0"
              ],
              [
                "test_smoke_datagen_commandline",
                "0"
              ],
              [
                "test_simpleplume_3d",
                "0"
              ],
              [
                "test_fluid_logo",
                "0"
              ],
              [
                "test_modular_simpleplume",
                "0"
              ],
              [
                "test_marker",
                "0"
              ],
              [
                "test_smoke_datagen_interactive",
                "0"
              ],
              [
                "test_manual_fluid_numpy_or_tf",
                "0"
              ],
              [
                "test_burgers_sim",
                "0"
              ],
              [
                "test_moving_obstacle",
                "0"
              ],
              [
                "test_pipe",
                "0"
              ],
              [
                "test_heat_equilibrium",
                "0"
              ],
              [
                "test_moving_inflow",
                "0"
              ],
              [
                "test_wavepacket",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_rotating_bar",
                []
              ],
              [
                "test_simpleplume",
                []
              ],
              [
                "test_smoke_datagen_commandline",
                []
              ],
              [
                "test_simpleplume_3d",
                []
              ],
              [
                "test_fluid_logo",
                []
              ],
              [
                "test_modular_simpleplume",
                []
              ],
              [
                "test_marker",
                []
              ],
              [
                "test_smoke_datagen_interactive",
                []
              ],
              [
                "test_manual_fluid_numpy_or_tf",
                []
              ],
              [
                "test_burgers_sim",
                []
              ],
              [
                "test_moving_obstacle",
                []
              ],
              [
                "test_pipe",
                []
              ],
              [
                "test_heat_equilibrium",
                []
              ],
              [
                "test_moving_inflow",
                []
              ],
              [
                "test_wavepacket",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_rotating_bar",
                []
              ],
              [
                "test_simpleplume",
                []
              ],
              [
                "test_smoke_datagen_commandline",
                []
              ],
              [
                "test_simpleplume_3d",
                []
              ],
              [
                "test_fluid_logo",
                []
              ],
              [
                "test_modular_simpleplume",
                []
              ],
              [
                "test_marker",
                []
              ],
              [
                "test_smoke_datagen_interactive",
                []
              ],
              [
                "test_manual_fluid_numpy_or_tf",
                []
              ],
              [
                "test_burgers_sim",
                []
              ],
              [
                "test_moving_obstacle",
                []
              ],
              [
                "test_pipe",
                []
              ],
              [
                "test_heat_equilibrium",
                []
              ],
              [
                "test_moving_inflow",
                []
              ],
              [
                "test_wavepacket",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.42379807882204845,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_fluid_logo",
                  "test_manual_fluid_numpy_or_tf",
                  0.4335549847620599
                ],
                [
                  "test_marker",
                  "test_modular_simpleplume",
                  0.5070925528371099
                ],
                [
                  "test_marker",
                  "test_moving_inflow",
                  0.5070925528371099
                ],
                [
                  "test_marker",
                  "test_simpleplume",
                  0.5999999999999999
                ],
                [
                  "test_fluid_logo",
                  "test_wavepacket",
                  0.5070925528371099
                ],
                [
                  "test_moving_obstacle",
                  "test_wavepacket",
                  0.5070925528371099
                ],
                [
                  "test_burgers_sim",
                  "test_moving_obstacle",
                  0.4285714285714285
                ],
                [
                  "test_moving_inflow",
                  "test_moving_obstacle",
                  0.7142857142857142
                ],
                [
                  "test_rotating_bar",
                  "test_wavepacket",
                  0.5070925528371099
                ],
                [
                  "test_burgers_sim",
                  "test_simpleplume_3d",
                  0.3418817293789138
                ],
                [
                  "test_fluid_logo",
                  "test_smoke_datagen_interactive",
                  0.3418817293789138
                ],
                [
                  "test_burgers_sim",
                  "test_rotating_bar",
                  0.4285714285714285
                ],
                [
                  "test_heat_equilibrium",
                  "test_moving_inflow",
                  0.4285714285714285
                ],
                [
                  "test_moving_inflow",
                  "test_pipe",
                  0.5070925528371099
                ],
                [
                  "test_marker",
                  "test_simpleplume_3d",
                  0.40451991747794525
                ],
                [
                  "test_manual_fluid_numpy_or_tf",
                  "test_marker",
                  0.3077935056255462
                ],
                [
                  "test_burgers_sim",
                  "test_heat_equilibrium",
                  0.4285714285714285
                ],
                [
                  "test_burgers_sim",
                  "test_pipe",
                  0.5070925528371099
                ],
                [
                  "test_heat_equilibrium",
                  "test_simpleplume_3d",
                  0.3418817293789138
                ],
                [
                  "test_moving_obstacle",
                  "test_smoke_datagen_commandline",
                  0.3418817293789138
                ],
                [
                  "test_rotating_bar",
                  "test_smoke_datagen_commandline",
                  0.3418817293789138
                ],
                [
                  "test_fluid_logo",
                  "test_marker",
                  0.5070925528371099
                ],
                [
                  "test_modular_simpleplume",
                  "test_smoke_datagen_interactive",
                  0.3418817293789138
                ],
                [
                  "test_fluid_logo",
                  "test_simpleplume",
                  0.5070925528371099
                ],
                [
                  "test_moving_inflow",
                  "test_rotating_bar",
                  0.4285714285714285
                ],
                [
                  "test_fluid_logo",
                  "test_smoke_datagen_commandline",
                  0.3418817293789138
                ],
                [
                  "test_heat_equilibrium",
                  "test_pipe",
                  0.5070925528371099
                ],
                [
                  "test_manual_fluid_numpy_or_tf",
                  "test_moving_obstacle",
                  0.26013299085723596
                ],
                [
                  "test_marker",
                  "test_moving_obstacle",
                  0.5070925528371099
                ],
                [
                  "test_moving_inflow",
                  "test_simpleplume_3d",
                  0.3418817293789138
                ],
                [
                  "test_simpleplume",
                  "test_simpleplume_3d",
                  0.40451991747794525
                ],
                [
                  "test_smoke_datagen_commandline",
                  "test_smoke_datagen_interactive",
                  0.8181818181818182
                ],
                [
                  "test_burgers_sim",
                  "test_modular_simpleplume",
                  0.4285714285714285
                ],
                [
                  "test_modular_simpleplume",
                  "test_pipe",
                  0.5070925528371099
                ],
                [
                  "test_burgers_sim",
                  "test_moving_inflow",
                  0.4285714285714285
                ],
                [
                  "test_heat_equilibrium",
                  "test_wavepacket",
                  0.5070925528371099
                ],
                [
                  "test_simpleplume",
                  "test_wavepacket",
                  0.5999999999999999
                ],
                [
                  "test_moving_obstacle",
                  "test_pipe",
                  0.5070925528371099
                ],
                [
                  "test_modular_simpleplume",
                  "test_wavepacket",
                  0.5070925528371099
                ],
                [
                  "test_moving_obstacle",
                  "test_smoke_datagen_interactive",
                  0.3418817293789138
                ],
                [
                  "test_simpleplume_3d",
                  "test_smoke_datagen_interactive",
                  0.2727272727272727
                ],
                [
                  "test_heat_equilibrium",
                  "test_simpleplume",
                  0.5070925528371099
                ],
                [
                  "test_moving_obstacle",
                  "test_simpleplume_3d",
                  0.3418817293789138
                ],
                [
                  "test_manual_fluid_numpy_or_tf",
                  "test_rotating_bar",
                  0.26013299085723596
                ],
                [
                  "test_heat_equilibrium",
                  "test_smoke_datagen_commandline",
                  0.3418817293789138
                ],
                [
                  "test_marker",
                  "test_rotating_bar",
                  0.5070925528371099
                ],
                [
                  "test_manual_fluid_numpy_or_tf",
                  "test_modular_simpleplume",
                  0.26013299085723596
                ],
                [
                  "test_manual_fluid_numpy_or_tf",
                  "test_simpleplume",
                  0.3077935056255462
                ],
                [
                  "test_moving_inflow",
                  "test_smoke_datagen_interactive",
                  0.3418817293789138
                ],
                [
                  "test_pipe",
                  "test_simpleplume_3d",
                  0.40451991747794525
                ],
                [
                  "test_manual_fluid_numpy_or_tf",
                  "test_moving_inflow",
                  0.26013299085723596
                ],
                [
                  "test_moving_inflow",
                  "test_wavepacket",
                  0.5070925528371099
                ],
                [
                  "test_simpleplume_3d",
                  "test_smoke_datagen_commandline",
                  0.2727272727272727
                ],
                [
                  "test_fluid_logo",
                  "test_moving_obstacle",
                  0.4285714285714285
                ],
                [
                  "test_modular_simpleplume",
                  "test_smoke_datagen_commandline",
                  0.3418817293789138
                ],
                [
                  "test_pipe",
                  "test_simpleplume",
                  0.5999999999999999
                ],
                [
                  "test_pipe",
                  "test_rotating_bar",
                  0.5070925528371099
                ],
                [
                  "test_modular_simpleplume",
                  "test_simpleplume",
                  0.6761234037828131
                ],
                [
                  "test_burgers_sim",
                  "test_manual_fluid_numpy_or_tf",
                  0.26013299085723596
                ],
                [
                  "test_burgers_sim",
                  "test_smoke_datagen_interactive",
                  0.3418817293789138
                ],
                [
                  "test_simpleplume",
                  "test_smoke_datagen_commandline",
                  0.40451991747794525
                ],
                [
                  "test_simpleplume_3d",
                  "test_wavepacket",
                  0.40451991747794525
                ],
                [
                  "test_burgers_sim",
                  "test_wavepacket",
                  0.5070925528371099
                ],
                [
                  "test_fluid_logo",
                  "test_simpleplume_3d",
                  0.3418817293789138
                ],
                [
                  "test_heat_equilibrium",
                  "test_smoke_datagen_interactive",
                  0.3418817293789138
                ],
                [
                  "test_modular_simpleplume",
                  "test_simpleplume_3d",
                  0.3418817293789138
                ],
                [
                  "test_simpleplume",
                  "test_smoke_datagen_interactive",
                  0.40451991747794525
                ],
                [
                  "test_heat_equilibrium",
                  "test_manual_fluid_numpy_or_tf",
                  0.26013299085723596
                ],
                [
                  "test_manual_fluid_numpy_or_tf",
                  "test_simpleplume_3d",
                  0.2075143391598224
                ],
                [
                  "test_moving_obstacle",
                  "test_rotating_bar",
                  0.4285714285714285
                ],
                [
                  "test_heat_equilibrium",
                  "test_marker",
                  0.5070925528371099
                ],
                [
                  "test_fluid_logo",
                  "test_heat_equilibrium",
                  0.4285714285714285
                ],
                [
                  "test_fluid_logo",
                  "test_pipe",
                  0.5070925528371099
                ],
                [
                  "test_modular_simpleplume",
                  "test_moving_inflow",
                  0.4285714285714285
                ],
                [
                  "test_rotating_bar",
                  "test_simpleplume",
                  0.5070925528371099
                ],
                [
                  "test_moving_obstacle",
                  "test_simpleplume",
                  0.5070925528371099
                ],
                [
                  "test_manual_fluid_numpy_or_tf",
                  "test_smoke_datagen_interactive",
                  0.2075143391598224
                ],
                [
                  "test_marker",
                  "test_smoke_datagen_interactive",
                  0.40451991747794525
                ],
                [
                  "test_burgers_sim",
                  "test_smoke_datagen_commandline",
                  0.3418817293789138
                ],
                [
                  "test_fluid_logo",
                  "test_moving_inflow",
                  0.4285714285714285
                ],
                [
                  "test_pipe",
                  "test_wavepacket",
                  0.5999999999999999
                ],
                [
                  "test_smoke_datagen_commandline",
                  "test_wavepacket",
                  0.40451991747794525
                ],
                [
                  "test_fluid_logo",
                  "test_rotating_bar",
                  0.4285714285714285
                ],
                [
                  "test_burgers_sim",
                  "test_marker",
                  0.5070925528371099
                ],
                [
                  "test_pipe",
                  "test_smoke_datagen_commandline",
                  0.40451991747794525
                ],
                [
                  "test_modular_simpleplume",
                  "test_moving_obstacle",
                  0.4285714285714285
                ],
                [
                  "test_moving_inflow",
                  "test_smoke_datagen_commandline",
                  0.3418817293789138
                ],
                [
                  "test_manual_fluid_numpy_or_tf",
                  "test_pipe",
                  0.3077935056255462
                ],
                [
                  "test_marker",
                  "test_pipe",
                  0.5999999999999999
                ],
                [
                  "test_burgers_sim",
                  "test_fluid_logo",
                  0.4285714285714285
                ],
                [
                  "test_moving_inflow",
                  "test_simpleplume",
                  0.5070925528371099
                ],
                [
                  "test_pipe",
                  "test_smoke_datagen_interactive",
                  0.40451991747794525
                ],
                [
                  "test_heat_equilibrium",
                  "test_modular_simpleplume",
                  0.4285714285714285
                ],
                [
                  "test_burgers_sim",
                  "test_simpleplume",
                  0.5070925528371099
                ],
                [
                  "test_heat_equilibrium",
                  "test_rotating_bar",
                  0.4285714285714285
                ],
                [
                  "test_manual_fluid_numpy_or_tf",
                  "test_smoke_datagen_commandline",
                  0.2075143391598224
                ],
                [
                  "test_marker",
                  "test_smoke_datagen_commandline",
                  0.40451991747794525
                ],
                [
                  "test_modular_simpleplume",
                  "test_rotating_bar",
                  0.4285714285714285
                ],
                [
                  "test_heat_equilibrium",
                  "test_moving_obstacle",
                  0.4285714285714285
                ],
                [
                  "test_fluid_logo",
                  "test_modular_simpleplume",
                  0.4285714285714285
                ],
                [
                  "test_marker",
                  "test_wavepacket",
                  0.5999999999999999
                ],
                [
                  "test_rotating_bar",
                  "test_smoke_datagen_interactive",
                  0.3418817293789138
                ],
                [
                  "test_smoke_datagen_interactive",
                  "test_wavepacket",
                  0.40451991747794525
                ],
                [
                  "test_manual_fluid_numpy_or_tf",
                  "test_wavepacket",
                  0.3077935056255462
                ],
                [
                  "test_rotating_bar",
                  "test_simpleplume_3d",
                  0.3418817293789138
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_rotating_bar",
                "false"
              ],
              [
                "test_simpleplume",
                "false"
              ],
              [
                "test_smoke_datagen_commandline",
                "false"
              ],
              [
                "test_simpleplume_3d",
                "false"
              ],
              [
                "test_fluid_logo",
                "false"
              ],
              [
                "test_modular_simpleplume",
                "false"
              ],
              [
                "test_marker",
                "false"
              ],
              [
                "test_smoke_datagen_interactive",
                "false"
              ],
              [
                "test_manual_fluid_numpy_or_tf",
                "false"
              ],
              [
                "test_burgers_sim",
                "false"
              ],
              [
                "test_moving_obstacle",
                "false"
              ],
              [
                "test_pipe",
                "false"
              ],
              [
                "test_heat_equilibrium",
                "false"
              ],
              [
                "test_moving_inflow",
                "false"
              ],
              [
                "test_wavepacket",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 15
      }
    ]
  },
  {
    "name": "tests_\u0026_test_fluid.py",
    "testCases": [
      {
        "name": "TestFluid",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_fluid_initializers",
                  "[PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_precision_16",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_direct_fluid",
                  "[]"
                ],
                [
                  "test_precision_64",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_properties_dict",
                  "[]"
                ],
                [
                  "test_new_grids",
                  "[]"
                ],
                [
                  "test_batch_independence",
                  "[]"
                ],
                [
                  "test_simpleplume",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_varying_boundaries",
                  "[]"
                ],
                [
                  "test_effects",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_fluid_initializers",
                  "[]"
                ],
                [
                  "test_precision_16",
                  "[]"
                ],
                [
                  "test_direct_fluid",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_precision_64",
                  "[]"
                ],
                [
                  "test_properties_dict",
                  "[]"
                ],
                [
                  "test_new_grids",
                  "[]"
                ],
                [
                  "test_batch_independence",
                  "[]"
                ],
                [
                  "test_simpleplume",
                  "[]"
                ],
                [
                  "test_varying_boundaries",
                  "[]"
                ],
                [
                  "test_effects",
                  "[PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_fluid_initializers",
                  "false"
                ],
                [
                  "test_precision_16",
                  "false"
                ],
                [
                  "test_direct_fluid",
                  "false"
                ],
                [
                  "test_precision_64",
                  "false"
                ],
                [
                  "test_properties_dict",
                  "false"
                ],
                [
                  "test_new_grids",
                  "false"
                ],
                [
                  "test_batch_independence",
                  "false"
                ],
                [
                  "test_simpleplume",
                  "false"
                ],
                [
                  "test_varying_boundaries",
                  "false"
                ],
                [
                  "test_effects",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_fluid_initializers",
                  "false"
                ],
                [
                  "test_precision_16",
                  "false"
                ],
                [
                  "test_direct_fluid",
                  "false"
                ],
                [
                  "test_precision_64",
                  "false"
                ],
                [
                  "test_properties_dict",
                  "false"
                ],
                [
                  "test_new_grids",
                  "false"
                ],
                [
                  "test_batch_independence",
                  "false"
                ],
                [
                  "test_simpleplume",
                  "false"
                ],
                [
                  "test_varying_boundaries",
                  "false"
                ],
                [
                  "test_effects",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_fluid_initializers",
                  "false"
                ],
                [
                  "test_precision_16",
                  "true"
                ],
                [
                  "test_direct_fluid",
                  "false"
                ],
                [
                  "test_precision_64",
                  "true"
                ],
                [
                  "test_properties_dict",
                  "false"
                ],
                [
                  "test_new_grids",
                  "false"
                ],
                [
                  "test_batch_independence",
                  "false"
                ],
                [
                  "test_simpleplume",
                  "false"
                ],
                [
                  "test_varying_boundaries",
                  "false"
                ],
                [
                  "test_effects",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_fluid_initializers",
                  "false"
                ],
                [
                  "test_precision_16",
                  "false"
                ],
                [
                  "test_direct_fluid",
                  "false"
                ],
                [
                  "test_precision_64",
                  "false"
                ],
                [
                  "test_properties_dict",
                  "false"
                ],
                [
                  "test_new_grids",
                  "false"
                ],
                [
                  "test_batch_independence",
                  "false"
                ],
                [
                  "test_simpleplume",
                  "false"
                ],
                [
                  "test_varying_boundaries",
                  "false"
                ],
                [
                  "test_effects",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_fluid_initializers",
                "false"
              ],
              [
                "test_precision_16",
                "false"
              ],
              [
                "test_direct_fluid",
                "false"
              ],
              [
                "test_precision_64",
                "false"
              ],
              [
                "test_properties_dict",
                "false"
              ],
              [
                "test_new_grids",
                "false"
              ],
              [
                "test_batch_independence",
                "false"
              ],
              [
                "test_simpleplume",
                "false"
              ],
              [
                "test_varying_boundaries",
                "false"
              ],
              [
                "test_effects",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_fluid_initializers",
                "false"
              ],
              [
                "test_precision_16",
                "true"
              ],
              [
                "test_direct_fluid",
                "false"
              ],
              [
                "test_precision_64",
                "true"
              ],
              [
                "test_properties_dict",
                "false"
              ],
              [
                "test_new_grids",
                "false"
              ],
              [
                "test_batch_independence",
                "false"
              ],
              [
                "test_simpleplume",
                "false"
              ],
              [
                "test_varying_boundaries",
                "false"
              ],
              [
                "test_effects",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_fluid_initializers",
                []
              ],
              [
                "test_precision_16",
                []
              ],
              [
                "test_direct_fluid",
                []
              ],
              [
                "test_precision_64",
                []
              ],
              [
                "test_properties_dict",
                []
              ],
              [
                "test_new_grids",
                []
              ],
              [
                "test_batch_independence",
                []
              ],
              [
                "test_simpleplume",
                []
              ],
              [
                "test_varying_boundaries",
                []
              ],
              [
                "test_effects",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_fluid_initializers",
                "false"
              ],
              [
                "test_precision_16",
                "false"
              ],
              [
                "test_direct_fluid",
                "false"
              ],
              [
                "test_precision_64",
                "false"
              ],
              [
                "test_properties_dict",
                "false"
              ],
              [
                "test_new_grids",
                "false"
              ],
              [
                "test_batch_independence",
                "false"
              ],
              [
                "test_simpleplume",
                "false"
              ],
              [
                "test_varying_boundaries",
                "false"
              ],
              [
                "test_effects",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_fluid_initializers",
                "false"
              ],
              [
                "test_precision_16",
                "false"
              ],
              [
                "test_direct_fluid",
                "false"
              ],
              [
                "test_precision_64",
                "false"
              ],
              [
                "test_properties_dict",
                "false"
              ],
              [
                "test_new_grids",
                "false"
              ],
              [
                "test_batch_independence",
                "false"
              ],
              [
                "test_simpleplume",
                "true"
              ],
              [
                "test_varying_boundaries",
                "false"
              ],
              [
                "test_effects",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_fluid_initializers",
                  "0"
                ],
                [
                  "test_precision_16",
                  "0"
                ],
                [
                  "test_direct_fluid",
                  "0"
                ],
                [
                  "test_precision_64",
                  "0"
                ],
                [
                  "test_properties_dict",
                  "0"
                ],
                [
                  "test_new_grids",
                  "0"
                ],
                [
                  "test_batch_independence",
                  "0"
                ],
                [
                  "test_simpleplume",
                  "0"
                ],
                [
                  "test_varying_boundaries",
                  "0"
                ],
                [
                  "test_effects",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_fluid_initializers",
                  "0"
                ],
                [
                  "test_precision_16",
                  "0"
                ],
                [
                  "test_direct_fluid",
                  "0"
                ],
                [
                  "test_precision_64",
                  "0"
                ],
                [
                  "test_properties_dict",
                  "0"
                ],
                [
                  "test_new_grids",
                  "0"
                ],
                [
                  "test_batch_independence",
                  "0"
                ],
                [
                  "test_simpleplume",
                  "0"
                ],
                [
                  "test_varying_boundaries",
                  "0"
                ],
                [
                  "test_effects",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_fluid_initializers",
                "false"
              ],
              [
                "test_precision_16",
                "false"
              ],
              [
                "test_direct_fluid",
                "false"
              ],
              [
                "test_precision_64",
                "false"
              ],
              [
                "test_properties_dict",
                "false"
              ],
              [
                "test_new_grids",
                "false"
              ],
              [
                "test_batch_independence",
                "true"
              ],
              [
                "test_simpleplume",
                "false"
              ],
              [
                "test_varying_boundaries",
                "false"
              ],
              [
                "test_effects",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_fluid_initializers",
                "false"
              ],
              [
                "test_precision_16",
                "false"
              ],
              [
                "test_direct_fluid",
                "false"
              ],
              [
                "test_precision_64",
                "false"
              ],
              [
                "test_properties_dict",
                "false"
              ],
              [
                "test_new_grids",
                "false"
              ],
              [
                "test_batch_independence",
                "false"
              ],
              [
                "test_simpleplume",
                "false"
              ],
              [
                "test_varying_boundaries",
                "false"
              ],
              [
                "test_effects",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_fluid_initializers",
                "5"
              ],
              [
                "test_precision_16",
                "4"
              ],
              [
                "test_direct_fluid",
                "4"
              ],
              [
                "test_precision_64",
                "4"
              ],
              [
                "test_properties_dict",
                "0"
              ],
              [
                "test_new_grids",
                "2"
              ],
              [
                "test_batch_independence",
                "3"
              ],
              [
                "test_simpleplume",
                "2"
              ],
              [
                "test_varying_boundaries",
                "0"
              ],
              [
                "test_effects",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_fluid_initializers",
                []
              ],
              [
                "test_precision_16",
                [
                  "fluid"
                ]
              ],
              [
                "test_direct_fluid",
                [
                  "fluid",
                  "fluid2"
                ]
              ],
              [
                "test_precision_64",
                [
                  "fluid"
                ]
              ],
              [
                "test_properties_dict",
                [
                  "world"
                ]
              ],
              [
                "test_new_grids",
                [
                  "centered_ones",
                  "fluid",
                  "staggered_ones"
                ]
              ],
              [
                "test_batch_independence",
                [
                  "vx2",
                  "world",
                  "fluid",
                  "d1",
                  "vx1",
                  "d2",
                  "vy2",
                  "vy1"
                ]
              ],
              [
                "test_simpleplume",
                [
                  "world",
                  "inflow",
                  "fluid"
                ]
              ],
              [
                "test_varying_boundaries",
                [
                  "fluid"
                ]
              ],
              [
                "test_effects",
                [
                  "fan",
                  "world",
                  "fluid",
                  "obstacle"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_fluid_initializers",
                []
              ],
              [
                "test_precision_16",
                []
              ],
              [
                "test_direct_fluid",
                []
              ],
              [
                "test_precision_64",
                []
              ],
              [
                "test_properties_dict",
                []
              ],
              [
                "test_new_grids",
                []
              ],
              [
                "test_batch_independence",
                []
              ],
              [
                "test_simpleplume",
                []
              ],
              [
                "test_varying_boundaries",
                []
              ],
              [
                "test_effects",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6088952800740765,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_simpleplume",
                  "test_fluid_initializers",
                  0.6021382916851332
                ],
                [
                  "test_simpleplume",
                  "test_effects",
                  0.7890384208257623
                ],
                [
                  "test_batch_independence",
                  "test_precision_16",
                  0.4767386351679106
                ],
                [
                  "test_varying_boundaries",
                  "test_new_grids",
                  0.6240377207533828
                ],
                [
                  "test_simpleplume",
                  "test_batch_independence",
                  0.608006005027235
                ],
                [
                  "test_direct_fluid",
                  "test_precision_16",
                  0.48516707826545624
                ],
                [
                  "test_fluid_initializers",
                  "test_batch_independence",
                  0.7685312299889167
                ],
                [
                  "test_effects",
                  "test_precision_64",
                  0.5205264255089337
                ],
                [
                  "test_direct_fluid",
                  "test_simpleplume",
                  0.6769382260173988
                ],
                [
                  "test_simpleplume",
                  "test_varying_boundaries",
                  0.7044543678854917
                ],
                [
                  "test_fluid_initializers",
                  "test_precision_64",
                  0.4636549948907494
                ],
                [
                  "test_simpleplume",
                  "test_properties_dict",
                  0.7552551924046693
                ],
                [
                  "test_properties_dict",
                  "test_new_grids",
                  0.4915391523114243
                ],
                [
                  "test_properties_dict",
                  "test_precision_16",
                  0.4247402642638993
                ],
                [
                  "test_effects",
                  "test_batch_independence",
                  0.6874024785289072
                ],
                [
                  "test_varying_boundaries",
                  "test_properties_dict",
                  0.6816421605988247
                ],
                [
                  "test_properties_dict",
                  "test_precision_64",
                  0.4247402642638993
                ],
                [
                  "test_direct_fluid",
                  "test_new_grids",
                  0.5771011049020681
                ],
                [
                  "test_varying_boundaries",
                  "test_precision_16",
                  0.504356881243134
                ],
                [
                  "test_fluid_initializers",
                  "test_properties_dict",
                  0.7215090491988597
                ],
                [
                  "test_effects",
                  "test_properties_dict",
                  0.8164020954120562
                ],
                [
                  "test_batch_independence",
                  "test_precision_64",
                  0.4767386351679106
                ],
                [
                  "test_simpleplume",
                  "test_new_grids",
                  0.667911816552354
                ],
                [
                  "test_direct_fluid",
                  "test_varying_boundaries",
                  0.7904150521752438
                ],
                [
                  "test_direct_fluid",
                  "test_properties_dict",
                  0.6070257189662775
                ],
                [
                  "test_direct_fluid",
                  "test_batch_independence",
                  0.43355454460449167
                ],
                [
                  "test_new_grids",
                  "test_precision_16",
                  0.6654879799793577
                ],
                [
                  "test_effects",
                  "test_new_grids",
                  0.6062320029323017
                ],
                [
                  "test_properties_dict",
                  "test_batch_independence",
                  0.6904984512782354
                ],
                [
                  "test_fluid_initializers",
                  "test_new_grids",
                  0.5197656591915358
                ],
                [
                  "test_fluid_initializers",
                  "test_precision_16",
                  0.4636549948907494
                ],
                [
                  "test_simpleplume",
                  "test_precision_16",
                  0.6187589137921782
                ],
                [
                  "test_varying_boundaries",
                  "test_precision_64",
                  0.504356881243134
                ],
                [
                  "test_precision_64",
                  "test_precision_16",
                  1.0
                ],
                [
                  "test_effects",
                  "test_precision_16",
                  0.5205264255089337
                ],
                [
                  "test_varying_boundaries",
                  "test_batch_independence",
                  0.4926938732593016
                ],
                [
                  "test_simpleplume",
                  "test_precision_64",
                  0.6187589137921782
                ],
                [
                  "test_new_grids",
                  "test_precision_64",
                  0.6654879799793577
                ],
                [
                  "test_direct_fluid",
                  "test_precision_64",
                  0.48516707826545624
                ],
                [
                  "test_direct_fluid",
                  "test_effects",
                  0.7218429454379413
                ],
                [
                  "test_varying_boundaries",
                  "test_effects",
                  0.6449148155868302
                ],
                [
                  "test_new_grids",
                  "test_batch_independence",
                  0.5140316832925491
                ],
                [
                  "test_direct_fluid",
                  "test_fluid_initializers",
                  0.5863363567882875
                ],
                [
                  "test_varying_boundaries",
                  "test_fluid_initializers",
                  0.6707307493296387
                ],
                [
                  "test_fluid_initializers",
                  "test_effects",
                  0.6314760921750868
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_fluid_initializers",
                "false"
              ],
              [
                "test_precision_16",
                "false"
              ],
              [
                "test_direct_fluid",
                "false"
              ],
              [
                "test_precision_64",
                "false"
              ],
              [
                "test_properties_dict",
                "false"
              ],
              [
                "test_new_grids",
                "false"
              ],
              [
                "test_batch_independence",
                "false"
              ],
              [
                "test_simpleplume",
                "false"
              ],
              [
                "test_varying_boundaries",
                "false"
              ],
              [
                "test_effects",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 10
      }
    ]
  },
  {
    "name": "tests_\u0026_test_scene.py",
    "testCases": [
      {
        "name": "TestScene",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_read_write_struct",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_read_write_struct",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_read_write_struct",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_read_write_struct",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_read_write_struct",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_read_write_struct",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_read_write_struct",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_read_write_struct",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_read_write_struct",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_read_write_struct",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_read_write_struct",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_read_write_struct",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_read_write_struct",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_read_write_struct",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_read_write_struct",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_read_write_struct",
                "14"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_read_write_struct",
                [
                  "loaded_state",
                  "mystruct",
                  "_differences",
                  "state",
                  "scene",
                  "loaded_struct"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_read_write_struct",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_read_write_struct",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_world.py",
    "testCases": [
      {
        "name": "TestWorld",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_names",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.fail]"
                ],
                [
                  "test_state_collection",
                  "[PyCallExpression: self.assertIsInstance]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_names",
                  "[PyAssertStatement]"
                ],
                [
                  "test_state_collection",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_names",
                  "false"
                ],
                [
                  "test_state_collection",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_names",
                  "false"
                ],
                [
                  "test_state_collection",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_names",
                  "false"
                ],
                [
                  "test_state_collection",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_names",
                  "false"
                ],
                [
                  "test_state_collection",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_names",
                "false"
              ],
              [
                "test_state_collection",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_names",
                "true"
              ],
              [
                "test_state_collection",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_names",
                []
              ],
              [
                "test_state_collection",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_names",
                "false"
              ],
              [
                "test_state_collection",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_names",
                "false"
              ],
              [
                "test_state_collection",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_names",
                  "0"
                ],
                [
                  "test_state_collection",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_names",
                  "0"
                ],
                [
                  "test_state_collection",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_names",
                "false"
              ],
              [
                "test_state_collection",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_names",
                "false"
              ],
              [
                "test_state_collection",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_names",
                "3"
              ],
              [
                "test_state_collection",
                "15"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_names",
                [
                  "c",
                  "world"
                ]
              ],
              [
                "test_state_collection",
                [
                  "c3",
                  "c4",
                  "c5",
                  "fluid",
                  "fluid2",
                  "c1",
                  "c2"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_names",
                []
              ],
              [
                "test_state_collection",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5686694217807632,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_names",
                  "test_state_collection",
                  0.5686694217807632
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_names",
                "false"
              ],
              [
                "test_state_collection",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_domain.py",
    "testCases": [
      {
        "name": "TestDomain",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_boundary_definitions",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.fail]"
                ],
                [
                  "test_convenience_initializers",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_boundary_definitions",
                  "[]"
                ],
                [
                  "test_convenience_initializers",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_boundary_definitions",
                  "false"
                ],
                [
                  "test_convenience_initializers",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_boundary_definitions",
                  "false"
                ],
                [
                  "test_convenience_initializers",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_boundary_definitions",
                  "true"
                ],
                [
                  "test_convenience_initializers",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_boundary_definitions",
                  "false"
                ],
                [
                  "test_convenience_initializers",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_boundary_definitions",
                "false"
              ],
              [
                "test_convenience_initializers",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_boundary_definitions",
                "true"
              ],
              [
                "test_convenience_initializers",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_boundary_definitions",
                []
              ],
              [
                "test_convenience_initializers",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_boundary_definitions",
                "false"
              ],
              [
                "test_convenience_initializers",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_boundary_definitions",
                "false"
              ],
              [
                "test_convenience_initializers",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_boundary_definitions",
                  "0"
                ],
                [
                  "test_convenience_initializers",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_boundary_definitions",
                  "0"
                ],
                [
                  "test_convenience_initializers",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_boundary_definitions",
                "false"
              ],
              [
                "test_convenience_initializers",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_boundary_definitions",
                "false"
              ],
              [
                "test_convenience_initializers",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_boundary_definitions",
                "2"
              ],
              [
                "test_convenience_initializers",
                "4"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_boundary_definitions",
                [
                  "domain"
                ]
              ],
              [
                "test_convenience_initializers",
                [
                  "domain"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_boundary_definitions",
                []
              ],
              [
                "test_convenience_initializers",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.2742085083347849,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_boundary_definitions",
                  "test_convenience_initializers",
                  0.2742085083347849
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_boundary_definitions",
                "false"
              ],
              [
                "test_convenience_initializers",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_fields.py",
    "testCases": [
      {
        "name": "TestFields",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_compatibility",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertFalse]"
                ],
                [
                  "test_staggered_format_conversion",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_bounds",
                  "[PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_staggered_interpolation",
                  "[]"
                ],
                [
                  "test_points_flag",
                  "[]"
                ],
                [
                  "test_mixed_boundaries_resample",
                  "[]"
                ],
                [
                  "test_inner_interpolation",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_constant_resample",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_staggered_curl2d",
                  "[]"
                ],
                [
                  "test_staggered_construction",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_compatibility",
                  "[]"
                ],
                [
                  "test_staggered_format_conversion",
                  "[]"
                ],
                [
                  "test_bounds",
                  "[]"
                ],
                [
                  "test_staggered_interpolation",
                  "[]"
                ],
                [
                  "test_points_flag",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_mixed_boundaries_resample",
                  "[]"
                ],
                [
                  "test_inner_interpolation",
                  "[]"
                ],
                [
                  "test_constant_resample",
                  "[]"
                ],
                [
                  "test_staggered_curl2d",
                  "[]"
                ],
                [
                  "test_staggered_construction",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_compatibility",
                  "false"
                ],
                [
                  "test_staggered_format_conversion",
                  "false"
                ],
                [
                  "test_bounds",
                  "false"
                ],
                [
                  "test_staggered_interpolation",
                  "false"
                ],
                [
                  "test_points_flag",
                  "false"
                ],
                [
                  "test_mixed_boundaries_resample",
                  "false"
                ],
                [
                  "test_inner_interpolation",
                  "false"
                ],
                [
                  "test_constant_resample",
                  "false"
                ],
                [
                  "test_staggered_curl2d",
                  "false"
                ],
                [
                  "test_staggered_construction",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_compatibility",
                  "false"
                ],
                [
                  "test_staggered_format_conversion",
                  "false"
                ],
                [
                  "test_bounds",
                  "false"
                ],
                [
                  "test_staggered_interpolation",
                  "false"
                ],
                [
                  "test_points_flag",
                  "false"
                ],
                [
                  "test_mixed_boundaries_resample",
                  "false"
                ],
                [
                  "test_inner_interpolation",
                  "false"
                ],
                [
                  "test_constant_resample",
                  "false"
                ],
                [
                  "test_staggered_curl2d",
                  "false"
                ],
                [
                  "test_staggered_construction",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_compatibility",
                  "false"
                ],
                [
                  "test_staggered_format_conversion",
                  "false"
                ],
                [
                  "test_bounds",
                  "false"
                ],
                [
                  "test_staggered_interpolation",
                  "false"
                ],
                [
                  "test_points_flag",
                  "false"
                ],
                [
                  "test_mixed_boundaries_resample",
                  "false"
                ],
                [
                  "test_inner_interpolation",
                  "false"
                ],
                [
                  "test_constant_resample",
                  "false"
                ],
                [
                  "test_staggered_curl2d",
                  "false"
                ],
                [
                  "test_staggered_construction",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_compatibility",
                  "false"
                ],
                [
                  "test_staggered_format_conversion",
                  "false"
                ],
                [
                  "test_bounds",
                  "false"
                ],
                [
                  "test_staggered_interpolation",
                  "false"
                ],
                [
                  "test_points_flag",
                  "false"
                ],
                [
                  "test_mixed_boundaries_resample",
                  "false"
                ],
                [
                  "test_inner_interpolation",
                  "false"
                ],
                [
                  "test_constant_resample",
                  "false"
                ],
                [
                  "test_staggered_curl2d",
                  "false"
                ],
                [
                  "test_staggered_construction",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_compatibility",
                "false"
              ],
              [
                "test_staggered_format_conversion",
                "false"
              ],
              [
                "test_bounds",
                "false"
              ],
              [
                "test_staggered_interpolation",
                "false"
              ],
              [
                "test_points_flag",
                "false"
              ],
              [
                "test_mixed_boundaries_resample",
                "false"
              ],
              [
                "test_inner_interpolation",
                "false"
              ],
              [
                "test_constant_resample",
                "false"
              ],
              [
                "test_staggered_curl2d",
                "false"
              ],
              [
                "test_staggered_construction",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_compatibility",
                "false"
              ],
              [
                "test_staggered_format_conversion",
                "false"
              ],
              [
                "test_bounds",
                "false"
              ],
              [
                "test_staggered_interpolation",
                "false"
              ],
              [
                "test_points_flag",
                "false"
              ],
              [
                "test_mixed_boundaries_resample",
                "false"
              ],
              [
                "test_inner_interpolation",
                "false"
              ],
              [
                "test_constant_resample",
                "false"
              ],
              [
                "test_staggered_curl2d",
                "false"
              ],
              [
                "test_staggered_construction",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_compatibility",
                []
              ],
              [
                "test_staggered_format_conversion",
                []
              ],
              [
                "test_bounds",
                []
              ],
              [
                "test_staggered_interpolation",
                []
              ],
              [
                "test_points_flag",
                []
              ],
              [
                "test_mixed_boundaries_resample",
                []
              ],
              [
                "test_inner_interpolation",
                []
              ],
              [
                "test_constant_resample",
                []
              ],
              [
                "test_staggered_curl2d",
                []
              ],
              [
                "test_staggered_construction",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_compatibility",
                "false"
              ],
              [
                "test_staggered_format_conversion",
                "false"
              ],
              [
                "test_bounds",
                "false"
              ],
              [
                "test_staggered_interpolation",
                "false"
              ],
              [
                "test_points_flag",
                "false"
              ],
              [
                "test_mixed_boundaries_resample",
                "false"
              ],
              [
                "test_inner_interpolation",
                "false"
              ],
              [
                "test_constant_resample",
                "false"
              ],
              [
                "test_staggered_curl2d",
                "false"
              ],
              [
                "test_staggered_construction",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_compatibility",
                "false"
              ],
              [
                "test_staggered_format_conversion",
                "true"
              ],
              [
                "test_bounds",
                "false"
              ],
              [
                "test_staggered_interpolation",
                "false"
              ],
              [
                "test_points_flag",
                "false"
              ],
              [
                "test_mixed_boundaries_resample",
                "false"
              ],
              [
                "test_inner_interpolation",
                "false"
              ],
              [
                "test_constant_resample",
                "true"
              ],
              [
                "test_staggered_curl2d",
                "false"
              ],
              [
                "test_staggered_construction",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_compatibility",
                  "0"
                ],
                [
                  "test_staggered_format_conversion",
                  "0"
                ],
                [
                  "test_bounds",
                  "0"
                ],
                [
                  "test_staggered_interpolation",
                  "0"
                ],
                [
                  "test_points_flag",
                  "0"
                ],
                [
                  "test_mixed_boundaries_resample",
                  "0"
                ],
                [
                  "test_inner_interpolation",
                  "0"
                ],
                [
                  "test_constant_resample",
                  "0"
                ],
                [
                  "test_staggered_curl2d",
                  "0"
                ],
                [
                  "test_staggered_construction",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_compatibility",
                  "0"
                ],
                [
                  "test_staggered_format_conversion",
                  "0"
                ],
                [
                  "test_bounds",
                  "0"
                ],
                [
                  "test_staggered_interpolation",
                  "0"
                ],
                [
                  "test_points_flag",
                  "0"
                ],
                [
                  "test_mixed_boundaries_resample",
                  "0"
                ],
                [
                  "test_inner_interpolation",
                  "0"
                ],
                [
                  "test_constant_resample",
                  "0"
                ],
                [
                  "test_staggered_curl2d",
                  "0"
                ],
                [
                  "test_staggered_construction",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_compatibility",
                "false"
              ],
              [
                "test_staggered_format_conversion",
                "false"
              ],
              [
                "test_bounds",
                "false"
              ],
              [
                "test_staggered_interpolation",
                "false"
              ],
              [
                "test_points_flag",
                "false"
              ],
              [
                "test_mixed_boundaries_resample",
                "true"
              ],
              [
                "test_inner_interpolation",
                "false"
              ],
              [
                "test_constant_resample",
                "false"
              ],
              [
                "test_staggered_curl2d",
                "false"
              ],
              [
                "test_staggered_construction",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_compatibility",
                "false"
              ],
              [
                "test_staggered_format_conversion",
                "false"
              ],
              [
                "test_bounds",
                "false"
              ],
              [
                "test_staggered_interpolation",
                "false"
              ],
              [
                "test_points_flag",
                "false"
              ],
              [
                "test_mixed_boundaries_resample",
                "false"
              ],
              [
                "test_inner_interpolation",
                "false"
              ],
              [
                "test_constant_resample",
                "false"
              ],
              [
                "test_staggered_curl2d",
                "false"
              ],
              [
                "test_staggered_construction",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_compatibility",
                "3"
              ],
              [
                "test_staggered_format_conversion",
                "4"
              ],
              [
                "test_bounds",
                "5"
              ],
              [
                "test_staggered_interpolation",
                "1"
              ],
              [
                "test_points_flag",
                "2"
              ],
              [
                "test_mixed_boundaries_resample",
                "6"
              ],
              [
                "test_inner_interpolation",
                "4"
              ],
              [
                "test_constant_resample",
                "4"
              ],
              [
                "test_staggered_curl2d",
                "1"
              ],
              [
                "test_staggered_construction",
                "6"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_compatibility",
                [
                  "f",
                  "g"
                ]
              ],
              [
                "test_staggered_format_conversion",
                [
                  "components",
                  "tensor2",
                  "tensor"
                ]
              ],
              [
                "test_bounds",
                [
                  "a",
                  "f",
                  "bounds",
                  "tensor"
                ]
              ],
              [
                "test_staggered_interpolation",
                [
                  "data_x",
                  "data_y",
                  "centered",
                  "v"
                ]
              ],
              [
                "test_points_flag",
                [
                  "p",
                  "data",
                  "f"
                ]
              ],
              [
                "test_mixed_boundaries_resample",
                [
                  "data",
                  "field"
                ]
              ],
              [
                "test_inner_interpolation",
                [
                  "resampled",
                  "data",
                  "f",
                  "g",
                  "resampled2"
                ]
              ],
              [
                "test_constant_resample",
                [
                  "field",
                  "at_cgrid",
                  "at_sgrid"
                ]
              ],
              [
                "test_staggered_curl2d",
                [
                  "div",
                  "pot",
                  "domain",
                  "vel"
                ]
              ],
              [
                "test_staggered_construction",
                [
                  "tensor",
                  "staggered",
                  "staggered3",
                  "staggered2"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_compatibility",
                []
              ],
              [
                "test_staggered_format_conversion",
                []
              ],
              [
                "test_bounds",
                []
              ],
              [
                "test_staggered_interpolation",
                []
              ],
              [
                "test_points_flag",
                []
              ],
              [
                "test_mixed_boundaries_resample",
                []
              ],
              [
                "test_inner_interpolation",
                []
              ],
              [
                "test_constant_resample",
                []
              ],
              [
                "test_staggered_curl2d",
                []
              ],
              [
                "test_staggered_construction",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7078407962317979,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_compatibility",
                  "test_points_flag",
                  0.8300314210953849
                ],
                [
                  "test_staggered_interpolation",
                  "test_points_flag",
                  0.7861426280972543
                ],
                [
                  "test_mixed_boundaries_resample",
                  "test_constant_resample",
                  0.38713836798517937
                ],
                [
                  "test_mixed_boundaries_resample",
                  "test_staggered_curl2d",
                  0.2594791554351393
                ],
                [
                  "test_staggered_format_conversion",
                  "test_bounds",
                  0.9356433578429079
                ],
                [
                  "test_staggered_format_conversion",
                  "test_constant_resample",
                  0.9008271096011675
                ],
                [
                  "test_staggered_format_conversion",
                  "test_staggered_curl2d",
                  0.7289531787791237
                ],
                [
                  "test_staggered_format_conversion",
                  "test_mixed_boundaries_resample",
                  0.4019846322950087
                ],
                [
                  "test_points_flag",
                  "test_mixed_boundaries_resample",
                  0.3020077703115979
                ],
                [
                  "test_bounds",
                  "test_constant_resample",
                  0.9133325730544175
                ],
                [
                  "test_bounds",
                  "test_staggered_curl2d",
                  0.7426784724609228
                ],
                [
                  "test_points_flag",
                  "test_staggered_construction",
                  0.6735399607810367
                ],
                [
                  "test_inner_interpolation",
                  "test_bounds",
                  0.8734487770078686
                ],
                [
                  "test_points_flag",
                  "test_constant_resample",
                  0.7740675338081787
                ],
                [
                  "test_compatibility",
                  "test_staggered_interpolation",
                  0.8496461273727874
                ],
                [
                  "test_inner_interpolation",
                  "test_points_flag",
                  0.7896828314814903
                ],
                [
                  "test_inner_interpolation",
                  "test_constant_resample",
                  0.870826659653555
                ],
                [
                  "test_staggered_construction",
                  "test_staggered_curl2d",
                  0.7278488560427362
                ],
                [
                  "test_staggered_interpolation",
                  "test_staggered_construction",
                  0.7023183061213477
                ],
                [
                  "test_staggered_format_conversion",
                  "test_staggered_construction",
                  0.7829433389710737
                ],
                [
                  "test_inner_interpolation",
                  "test_mixed_boundaries_resample",
                  0.5475790353266633
                ],
                [
                  "test_compatibility",
                  "test_staggered_construction",
                  0.6632649475751392
                ],
                [
                  "test_bounds",
                  "test_staggered_construction",
                  0.7527068977898018
                ],
                [
                  "test_inner_interpolation",
                  "test_staggered_format_conversion",
                  0.8613089032911806
                ],
                [
                  "test_compatibility",
                  "test_constant_resample",
                  0.8713726285486191
                ],
                [
                  "test_compatibility",
                  "test_staggered_curl2d",
                  0.644775197140062
                ],
                [
                  "test_staggered_format_conversion",
                  "test_points_flag",
                  0.7861529099691176
                ],
                [
                  "test_staggered_interpolation",
                  "test_constant_resample",
                  0.8682492015010999
                ],
                [
                  "test_staggered_interpolation",
                  "test_staggered_curl2d",
                  0.6666395203095715
                ],
                [
                  "test_inner_interpolation",
                  "test_staggered_interpolation",
                  0.8849662249998186
                ],
                [
                  "test_compatibility",
                  "test_bounds",
                  0.8837400354766439
                ],
                [
                  "test_points_flag",
                  "test_bounds",
                  0.8172226173204695
                ],
                [
                  "test_compatibility",
                  "test_staggered_format_conversion",
                  0.8666606897170029
                ],
                [
                  "test_staggered_interpolation",
                  "test_staggered_format_conversion",
                  0.8847645716595555
                ],
                [
                  "test_bounds",
                  "test_mixed_boundaries_resample",
                  0.386547645126923
                ],
                [
                  "test_points_flag",
                  "test_staggered_curl2d",
                  0.6726305234213503
                ],
                [
                  "test_constant_resample",
                  "test_staggered_curl2d",
                  0.6712613753378646
                ],
                [
                  "test_inner_interpolation",
                  "test_staggered_construction",
                  0.6932100258805161
                ],
                [
                  "test_inner_interpolation",
                  "test_staggered_curl2d",
                  0.6454951240253574
                ],
                [
                  "test_staggered_construction",
                  "test_constant_resample",
                  0.7072649820457569
                ],
                [
                  "test_compatibility",
                  "test_mixed_boundaries_resample",
                  0.39033824751886687
                ],
                [
                  "test_staggered_construction",
                  "test_mixed_boundaries_resample",
                  0.24038692677430581
                ],
                [
                  "test_compatibility",
                  "test_inner_interpolation",
                  0.8847932144558497
                ],
                [
                  "test_staggered_interpolation",
                  "test_bounds",
                  0.8827752431214967
                ],
                [
                  "test_staggered_interpolation",
                  "test_mixed_boundaries_resample",
                  0.44618808389969167
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_compatibility",
                "false"
              ],
              [
                "test_staggered_format_conversion",
                "false"
              ],
              [
                "test_bounds",
                "false"
              ],
              [
                "test_staggered_interpolation",
                "false"
              ],
              [
                "test_points_flag",
                "false"
              ],
              [
                "test_mixed_boundaries_resample",
                "false"
              ],
              [
                "test_inner_interpolation",
                "false"
              ],
              [
                "test_constant_resample",
                "false"
              ],
              [
                "test_staggered_curl2d",
                "false"
              ],
              [
                "test_staggered_construction",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 10
      }
    ]
  },
  {
    "name": "tests_\u0026_test_struct.py",
    "testCases": [
      {
        "name": "TestStruct",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_collapse",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_names",
                  "[PyCallExpression: self.assertGreater, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_mappable",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_identity",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_paths",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_expand",
                  "[]"
                ],
                [
                  "test_content_types",
                  "[]"
                ],
                [
                  "test_flatten",
                  "[PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertGreater, PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_copy",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.fail]"
                ],
                [
                  "test_zip",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_collapse",
                  "[]"
                ],
                [
                  "test_names",
                  "[]"
                ],
                [
                  "test_mappable",
                  "[]"
                ],
                [
                  "test_identity",
                  "[]"
                ],
                [
                  "test_paths",
                  "[]"
                ],
                [
                  "test_expand",
                  "[]"
                ],
                [
                  "test_content_types",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_flatten",
                  "[]"
                ],
                [
                  "test_copy",
                  "[]"
                ],
                [
                  "test_zip",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_collapse",
                  "false"
                ],
                [
                  "test_names",
                  "true"
                ],
                [
                  "test_mappable",
                  "false"
                ],
                [
                  "test_identity",
                  "true"
                ],
                [
                  "test_paths",
                  "false"
                ],
                [
                  "test_expand",
                  "false"
                ],
                [
                  "test_content_types",
                  "false"
                ],
                [
                  "test_flatten",
                  "true"
                ],
                [
                  "test_copy",
                  "false"
                ],
                [
                  "test_zip",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_collapse",
                  "false"
                ],
                [
                  "test_names",
                  "false"
                ],
                [
                  "test_mappable",
                  "false"
                ],
                [
                  "test_identity",
                  "false"
                ],
                [
                  "test_paths",
                  "false"
                ],
                [
                  "test_expand",
                  "false"
                ],
                [
                  "test_content_types",
                  "false"
                ],
                [
                  "test_flatten",
                  "false"
                ],
                [
                  "test_copy",
                  "false"
                ],
                [
                  "test_zip",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_collapse",
                  "false"
                ],
                [
                  "test_names",
                  "false"
                ],
                [
                  "test_mappable",
                  "false"
                ],
                [
                  "test_identity",
                  "false"
                ],
                [
                  "test_paths",
                  "false"
                ],
                [
                  "test_expand",
                  "false"
                ],
                [
                  "test_content_types",
                  "false"
                ],
                [
                  "test_flatten",
                  "false"
                ],
                [
                  "test_copy",
                  "false"
                ],
                [
                  "test_zip",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_collapse",
                  "false"
                ],
                [
                  "test_names",
                  "false"
                ],
                [
                  "test_mappable",
                  "false"
                ],
                [
                  "test_identity",
                  "false"
                ],
                [
                  "test_paths",
                  "false"
                ],
                [
                  "test_expand",
                  "false"
                ],
                [
                  "test_content_types",
                  "false"
                ],
                [
                  "test_flatten",
                  "false"
                ],
                [
                  "test_copy",
                  "false"
                ],
                [
                  "test_zip",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_collapse",
                "false"
              ],
              [
                "test_names",
                "false"
              ],
              [
                "test_mappable",
                "false"
              ],
              [
                "test_identity",
                "false"
              ],
              [
                "test_paths",
                "false"
              ],
              [
                "test_expand",
                "false"
              ],
              [
                "test_content_types",
                "false"
              ],
              [
                "test_flatten",
                "false"
              ],
              [
                "test_copy",
                "false"
              ],
              [
                "test_zip",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_collapse",
                "false"
              ],
              [
                "test_names",
                "false"
              ],
              [
                "test_mappable",
                "false"
              ],
              [
                "test_identity",
                "false"
              ],
              [
                "test_paths",
                "false"
              ],
              [
                "test_expand",
                "false"
              ],
              [
                "test_content_types",
                "false"
              ],
              [
                "test_flatten",
                "false"
              ],
              [
                "test_copy",
                "true"
              ],
              [
                "test_zip",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_collapse",
                []
              ],
              [
                "test_names",
                []
              ],
              [
                "test_mappable",
                []
              ],
              [
                "test_identity",
                []
              ],
              [
                "test_paths",
                []
              ],
              [
                "test_expand",
                []
              ],
              [
                "test_content_types",
                []
              ],
              [
                "test_flatten",
                []
              ],
              [
                "test_copy",
                []
              ],
              [
                "test_zip",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_collapse",
                "false"
              ],
              [
                "test_names",
                "false"
              ],
              [
                "test_mappable",
                "false"
              ],
              [
                "test_identity",
                "false"
              ],
              [
                "test_paths",
                "false"
              ],
              [
                "test_expand",
                "false"
              ],
              [
                "test_content_types",
                "false"
              ],
              [
                "test_flatten",
                "false"
              ],
              [
                "test_copy",
                "false"
              ],
              [
                "test_zip",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_collapse",
                "true"
              ],
              [
                "test_names",
                "true"
              ],
              [
                "test_mappable",
                "false"
              ],
              [
                "test_identity",
                "false"
              ],
              [
                "test_paths",
                "false"
              ],
              [
                "test_expand",
                "false"
              ],
              [
                "test_content_types",
                "false"
              ],
              [
                "test_flatten",
                "true"
              ],
              [
                "test_copy",
                "false"
              ],
              [
                "test_zip",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_collapse",
                  "0"
                ],
                [
                  "test_names",
                  "0"
                ],
                [
                  "test_mappable",
                  "0"
                ],
                [
                  "test_identity",
                  "0"
                ],
                [
                  "test_paths",
                  "0"
                ],
                [
                  "test_expand",
                  "0"
                ],
                [
                  "test_content_types",
                  "0"
                ],
                [
                  "test_flatten",
                  "0"
                ],
                [
                  "test_copy",
                  "0"
                ],
                [
                  "test_zip",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_collapse",
                  "0"
                ],
                [
                  "test_names",
                  "0"
                ],
                [
                  "test_mappable",
                  "0"
                ],
                [
                  "test_identity",
                  "0"
                ],
                [
                  "test_paths",
                  "0"
                ],
                [
                  "test_expand",
                  "0"
                ],
                [
                  "test_content_types",
                  "0"
                ],
                [
                  "test_flatten",
                  "0"
                ],
                [
                  "test_copy",
                  "0"
                ],
                [
                  "test_zip",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_collapse",
                "false"
              ],
              [
                "test_names",
                "false"
              ],
              [
                "test_mappable",
                "false"
              ],
              [
                "test_identity",
                "false"
              ],
              [
                "test_paths",
                "false"
              ],
              [
                "test_expand",
                "false"
              ],
              [
                "test_content_types",
                "false"
              ],
              [
                "test_flatten",
                "false"
              ],
              [
                "test_copy",
                "false"
              ],
              [
                "test_zip",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_collapse",
                "false"
              ],
              [
                "test_names",
                "false"
              ],
              [
                "test_mappable",
                "false"
              ],
              [
                "test_identity",
                "false"
              ],
              [
                "test_paths",
                "false"
              ],
              [
                "test_expand",
                "false"
              ],
              [
                "test_content_types",
                "false"
              ],
              [
                "test_flatten",
                "false"
              ],
              [
                "test_copy",
                "false"
              ],
              [
                "test_zip",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_collapse",
                "3"
              ],
              [
                "test_names",
                "2"
              ],
              [
                "test_mappable",
                "2"
              ],
              [
                "test_identity",
                "3"
              ],
              [
                "test_paths",
                "1"
              ],
              [
                "test_expand",
                "2"
              ],
              [
                "test_content_types",
                "7"
              ],
              [
                "test_flatten",
                "3"
              ],
              [
                "test_copy",
                "2"
              ],
              [
                "test_zip",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_collapse",
                []
              ],
              [
                "test_names",
                [
                  "names"
                ]
              ],
              [
                "test_mappable",
                [
                  "x"
                ]
              ],
              [
                "test_identity",
                [
                  "obj2",
                  "obj4",
                  "obj3"
                ]
              ],
              [
                "test_paths",
                [
                  "names",
                  "obj"
                ]
              ],
              [
                "test_expand",
                []
              ],
              [
                "test_content_types",
                [
                  "dom"
                ]
              ],
              [
                "test_flatten",
                [
                  "flat"
                ]
              ],
              [
                "test_copy",
                [
                  "v",
                  "fluid"
                ]
              ],
              [
                "test_zip",
                [
                  "a",
                  "b",
                  "stacked",
                  "zipped"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_collapse",
                []
              ],
              [
                "test_names",
                []
              ],
              [
                "test_mappable",
                []
              ],
              [
                "test_identity",
                []
              ],
              [
                "test_paths",
                []
              ],
              [
                "test_expand",
                []
              ],
              [
                "test_content_types",
                []
              ],
              [
                "test_flatten",
                []
              ],
              [
                "test_copy",
                []
              ],
              [
                "test_zip",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.22516832561436387,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_identity",
                  "test_collapse",
                  0.23406626300544017
                ],
                [
                  "test_names",
                  "test_copy",
                  0.23068393443263774
                ],
                [
                  "test_names",
                  "test_zip",
                  0.2399520143952017
                ],
                [
                  "test_zip",
                  "test_expand",
                  0.07102208242284351
                ],
                [
                  "test_flatten",
                  "test_collapse",
                  0.28005601680560194
                ],
                [
                  "test_copy",
                  "test_expand",
                  0.03413943709994594
                ],
                [
                  "test_names",
                  "test_expand",
                  0.06497221227363151
                ],
                [
                  "test_paths",
                  "test_collapse",
                  0.3703536708077542
                ],
                [
                  "test_names",
                  "test_content_types",
                  0.1366520416525303
                ],
                [
                  "test_collapse",
                  "test_content_types",
                  0.07142857142857142
                ],
                [
                  "test_collapse",
                  "test_expand",
                  0.43583586846268
                ],
                [
                  "test_copy",
                  "test_zip",
                  0.26792425767179356
                ],
                [
                  "test_names",
                  "test_mappable",
                  0.21337397986763254
                ],
                [
                  "test_identity",
                  "test_mappable",
                  0.2398465472988896
                ],
                [
                  "test_names",
                  "test_paths",
                  0.45250923281806393
                ],
                [
                  "test_flatten",
                  "test_paths",
                  0.25624885305538925
                ],
                [
                  "test_copy",
                  "test_content_types",
                  0.14617114553795763
                ],
                [
                  "test_zip",
                  "test_collapse",
                  0.12803687993289598
                ],
                [
                  "test_flatten",
                  "test_content_types",
                  0.16628325997832616
                ],
                [
                  "test_expand",
                  "test_content_types",
                  0.01733438113203841
                ],
                [
                  "test_identity",
                  "test_expand",
                  0.03408210802994124
                ],
                [
                  "test_names",
                  "test_collapse",
                  0.2454159115392381
                ],
                [
                  "test_identity",
                  "test_copy",
                  0.2319331006754671
                ],
                [
                  "test_identity",
                  "test_zip",
                  0.27271893751619963
                ],
                [
                  "test_paths",
                  "test_content_types",
                  0.1143739277494535
                ],
                [
                  "test_expand",
                  "test_mappable",
                  0.09473309334313419
                ],
                [
                  "test_flatten",
                  "test_names",
                  0.5904549227349387
                ],
                [
                  "test_flatten",
                  "test_copy",
                  0.25854384499750954
                ],
                [
                  "test_flatten",
                  "test_zip",
                  0.16135874369200778
                ],
                [
                  "test_paths",
                  "test_copy",
                  0.30034042231131114
                ],
                [
                  "test_paths",
                  "test_zip",
                  0.370983381652666
                ],
                [
                  "test_zip",
                  "test_mappable",
                  0.19992192074658524
                ],
                [
                  "test_mappable",
                  "test_content_types",
                  0.10368938275078166
                ],
                [
                  "test_copy",
                  "test_mappable",
                  0.21622499104693416
                ],
                [
                  "test_flatten",
                  "test_mappable",
                  0.21864534978421005
                ],
                [
                  "test_paths",
                  "test_expand",
                  0.3172162008283602
                ],
                [
                  "test_identity",
                  "test_names",
                  0.4733873642807385
                ],
                [
                  "test_identity",
                  "test_flatten",
                  0.4359185741510753
                ],
                [
                  "test_copy",
                  "test_collapse",
                  0.21101398453599896
                ],
                [
                  "test_identity",
                  "test_paths",
                  0.37479508994996313
                ],
                [
                  "test_flatten",
                  "test_expand",
                  0.0582551728035463
                ],
                [
                  "test_zip",
                  "test_content_types",
                  0.13603918492870198
                ],
                [
                  "test_identity",
                  "test_content_types",
                  0.09216359105839206
                ],
                [
                  "test_paths",
                  "test_mappable",
                  0.31252906841548544
                ],
                [
                  "test_collapse",
                  "test_mappable",
                  0.25094573304390855
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_collapse",
                "false"
              ],
              [
                "test_names",
                "false"
              ],
              [
                "test_mappable",
                "false"
              ],
              [
                "test_identity",
                "false"
              ],
              [
                "test_paths",
                "false"
              ],
              [
                "test_expand",
                "false"
              ],
              [
                "test_content_types",
                "false"
              ],
              [
                "test_flatten",
                "false"
              ],
              [
                "test_copy",
                "false"
              ],
              [
                "test_zip",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 10
      }
    ]
  },
  {
    "name": "tests_\u0026_test_burgers.py",
    "testCases": [
      {
        "name": "TestBurgers",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_batched_forced_burgers_2d",
                  "[]"
                ],
                [
                  "test_batched_forced_burgers_1d",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_batched_forced_burgers_2d",
                  "[]"
                ],
                [
                  "test_batched_forced_burgers_1d",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_batched_forced_burgers_2d",
                  "false"
                ],
                [
                  "test_batched_forced_burgers_1d",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_batched_forced_burgers_2d",
                  "false"
                ],
                [
                  "test_batched_forced_burgers_1d",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_batched_forced_burgers_2d",
                  "false"
                ],
                [
                  "test_batched_forced_burgers_1d",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_batched_forced_burgers_2d",
                  "false"
                ],
                [
                  "test_batched_forced_burgers_1d",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_batched_forced_burgers_2d",
                "false"
              ],
              [
                "test_batched_forced_burgers_1d",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_batched_forced_burgers_2d",
                "false"
              ],
              [
                "test_batched_forced_burgers_1d",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_batched_forced_burgers_2d",
                []
              ],
              [
                "test_batched_forced_burgers_1d",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_batched_forced_burgers_2d",
                "false"
              ],
              [
                "test_batched_forced_burgers_1d",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_batched_forced_burgers_2d",
                "false"
              ],
              [
                "test_batched_forced_burgers_1d",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_batched_forced_burgers_2d",
                  "0"
                ],
                [
                  "test_batched_forced_burgers_1d",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_batched_forced_burgers_2d",
                  "0"
                ],
                [
                  "test_batched_forced_burgers_1d",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_batched_forced_burgers_2d",
                "false"
              ],
              [
                "test_batched_forced_burgers_1d",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_batched_forced_burgers_2d",
                "false"
              ],
              [
                "test_batched_forced_burgers_1d",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_batched_forced_burgers_2d",
                "0"
              ],
              [
                "test_batched_forced_burgers_1d",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_batched_forced_burgers_2d",
                [
                  "amplitude",
                  "world",
                  "physics",
                  "effect",
                  "force",
                  "k",
                  "burgers"
                ]
              ],
              [
                "test_batched_forced_burgers_1d",
                [
                  "amplitude",
                  "world",
                  "physics",
                  "effect",
                  "force",
                  "k",
                  "burgers"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_batched_forced_burgers_2d",
                []
              ],
              [
                "test_batched_forced_burgers_1d",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9946117658307044,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_batched_forced_burgers_1d",
                  "test_batched_forced_burgers_2d",
                  0.9946117658307044
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_batched_forced_burgers_2d",
                "false"
              ],
              [
                "test_batched_forced_burgers_1d",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_objects.py",
    "testCases": [
      {
        "name": "TestObjects",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_geometry_movement",
                  "[PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_collective_step",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_geometry_movement",
                  "[]"
                ],
                [
                  "test_collective_step",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_geometry_movement",
                  "false"
                ],
                [
                  "test_collective_step",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_geometry_movement",
                  "false"
                ],
                [
                  "test_collective_step",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_geometry_movement",
                  "true"
                ],
                [
                  "test_collective_step",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_geometry_movement",
                  "false"
                ],
                [
                  "test_collective_step",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_geometry_movement",
                "false"
              ],
              [
                "test_collective_step",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_geometry_movement",
                "false"
              ],
              [
                "test_collective_step",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_geometry_movement",
                []
              ],
              [
                "test_collective_step",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_geometry_movement",
                "false"
              ],
              [
                "test_collective_step",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_geometry_movement",
                "true"
              ],
              [
                "test_collective_step",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_geometry_movement",
                  "0"
                ],
                [
                  "test_collective_step",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_geometry_movement",
                  "0"
                ],
                [
                  "test_collective_step",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_geometry_movement",
                "false"
              ],
              [
                "test_collective_step",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_geometry_movement",
                "false"
              ],
              [
                "test_collective_step",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_geometry_movement",
                "8"
              ],
              [
                "test_collective_step",
                "4"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_geometry_movement",
                [
                  "phys",
                  "obstacle"
                ]
              ],
              [
                "test_collective_step",
                [
                  "static_obstacle",
                  "world",
                  "inflow",
                  "obstacle"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_geometry_movement",
                []
              ],
              [
                "test_collective_step",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7975426191531297,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_geometry_movement",
                  "test_collective_step",
                  0.7975426191531297
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_geometry_movement",
                "false"
              ],
              [
                "test_collective_step",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_fluid_tf.py",
    "testCases": [
      {
        "name": "TestFluidTF",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_tf_worldgraph",
                  "[PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_fluid_tf",
                  "[PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_precision_16",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_fluid_tf_equality",
                  "[]"
                ],
                [
                  "test_tf_subgraph",
                  "[PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_gradient_batch_independence",
                  "[]"
                ],
                [
                  "test_precision_64",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_tf_worldgraph",
                  "[]"
                ],
                [
                  "test_fluid_tf",
                  "[]"
                ],
                [
                  "test_precision_16",
                  "[]"
                ],
                [
                  "test_fluid_tf_equality",
                  "[]"
                ],
                [
                  "test_tf_subgraph",
                  "[]"
                ],
                [
                  "test_gradient_batch_independence",
                  "[PyAssertStatement]"
                ],
                [
                  "test_precision_64",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_tf_worldgraph",
                  "false"
                ],
                [
                  "test_fluid_tf",
                  "false"
                ],
                [
                  "test_precision_16",
                  "false"
                ],
                [
                  "test_fluid_tf_equality",
                  "true"
                ],
                [
                  "test_tf_subgraph",
                  "false"
                ],
                [
                  "test_gradient_batch_independence",
                  "true"
                ],
                [
                  "test_precision_64",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_tf_worldgraph",
                  "false"
                ],
                [
                  "test_fluid_tf",
                  "false"
                ],
                [
                  "test_precision_16",
                  "false"
                ],
                [
                  "test_fluid_tf_equality",
                  "false"
                ],
                [
                  "test_tf_subgraph",
                  "false"
                ],
                [
                  "test_gradient_batch_independence",
                  "false"
                ],
                [
                  "test_precision_64",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_tf_worldgraph",
                  "false"
                ],
                [
                  "test_fluid_tf",
                  "false"
                ],
                [
                  "test_precision_16",
                  "true"
                ],
                [
                  "test_fluid_tf_equality",
                  "false"
                ],
                [
                  "test_tf_subgraph",
                  "false"
                ],
                [
                  "test_gradient_batch_independence",
                  "false"
                ],
                [
                  "test_precision_64",
                  "true"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_tf_worldgraph",
                  "false"
                ],
                [
                  "test_fluid_tf",
                  "false"
                ],
                [
                  "test_precision_16",
                  "false"
                ],
                [
                  "test_fluid_tf_equality",
                  "false"
                ],
                [
                  "test_tf_subgraph",
                  "false"
                ],
                [
                  "test_gradient_batch_independence",
                  "false"
                ],
                [
                  "test_precision_64",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_tf_worldgraph",
                "false"
              ],
              [
                "test_fluid_tf",
                "false"
              ],
              [
                "test_precision_16",
                "false"
              ],
              [
                "test_fluid_tf_equality",
                "false"
              ],
              [
                "test_tf_subgraph",
                "false"
              ],
              [
                "test_gradient_batch_independence",
                "false"
              ],
              [
                "test_precision_64",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_tf_worldgraph",
                "false"
              ],
              [
                "test_fluid_tf",
                "false"
              ],
              [
                "test_precision_16",
                "true"
              ],
              [
                "test_fluid_tf_equality",
                "false"
              ],
              [
                "test_tf_subgraph",
                "false"
              ],
              [
                "test_gradient_batch_independence",
                "false"
              ],
              [
                "test_precision_64",
                "true"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_tf_worldgraph",
                []
              ],
              [
                "test_fluid_tf",
                []
              ],
              [
                "test_precision_16",
                []
              ],
              [
                "test_fluid_tf_equality",
                []
              ],
              [
                "test_tf_subgraph",
                []
              ],
              [
                "test_gradient_batch_independence",
                []
              ],
              [
                "test_precision_64",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_tf_worldgraph",
                "false"
              ],
              [
                "test_fluid_tf",
                "false"
              ],
              [
                "test_precision_16",
                "false"
              ],
              [
                "test_fluid_tf_equality",
                "false"
              ],
              [
                "test_tf_subgraph",
                "false"
              ],
              [
                "test_gradient_batch_independence",
                "false"
              ],
              [
                "test_precision_64",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_tf_worldgraph",
                "false"
              ],
              [
                "test_fluid_tf",
                "false"
              ],
              [
                "test_precision_16",
                "false"
              ],
              [
                "test_fluid_tf_equality",
                "false"
              ],
              [
                "test_tf_subgraph",
                "false"
              ],
              [
                "test_gradient_batch_independence",
                "false"
              ],
              [
                "test_precision_64",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_tf_worldgraph",
                  "0"
                ],
                [
                  "test_fluid_tf",
                  "0"
                ],
                [
                  "test_precision_16",
                  "0"
                ],
                [
                  "test_fluid_tf_equality",
                  "0"
                ],
                [
                  "test_tf_subgraph",
                  "0"
                ],
                [
                  "test_gradient_batch_independence",
                  "0"
                ],
                [
                  "test_precision_64",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_tf_worldgraph",
                  "0"
                ],
                [
                  "test_fluid_tf",
                  "0"
                ],
                [
                  "test_precision_16",
                  "0"
                ],
                [
                  "test_fluid_tf_equality",
                  "0"
                ],
                [
                  "test_tf_subgraph",
                  "0"
                ],
                [
                  "test_gradient_batch_independence",
                  "0"
                ],
                [
                  "test_precision_64",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_tf_worldgraph",
                "false"
              ],
              [
                "test_fluid_tf",
                "false"
              ],
              [
                "test_precision_16",
                "false"
              ],
              [
                "test_fluid_tf_equality",
                "true"
              ],
              [
                "test_tf_subgraph",
                "false"
              ],
              [
                "test_gradient_batch_independence",
                "false"
              ],
              [
                "test_precision_64",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_tf_worldgraph",
                "false"
              ],
              [
                "test_fluid_tf",
                "false"
              ],
              [
                "test_precision_16",
                "false"
              ],
              [
                "test_fluid_tf_equality",
                "false"
              ],
              [
                "test_tf_subgraph",
                "false"
              ],
              [
                "test_gradient_batch_independence",
                "false"
              ],
              [
                "test_precision_64",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_tf_worldgraph",
                "2"
              ],
              [
                "test_fluid_tf",
                "2"
              ],
              [
                "test_precision_16",
                "4"
              ],
              [
                "test_fluid_tf_equality",
                "1"
              ],
              [
                "test_tf_subgraph",
                "2"
              ],
              [
                "test_gradient_batch_independence",
                "2"
              ],
              [
                "test_precision_64",
                "4"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": true,
            "detail": [
              [
                "test_tf_worldgraph",
                [
                  "world",
                  "fluid"
                ]
              ],
              [
                "test_fluid_tf",
                [
                  "world",
                  "session",
                  "fluid",
                  "fluid_in",
                  "fluid_out"
                ]
              ],
              [
                "test_precision_16",
                [
                  "fluid"
                ]
              ],
              [
                "test_fluid_tf_equality",
                [
                  "_sess",
                  "tf_eval",
                  "physics",
                  "np_fluid",
                  "tf_fluid"
                ]
              ],
              [
                "test_tf_subgraph",
                [
                  "world",
                  "fluid"
                ]
              ],
              [
                "test_gradient_batch_independence",
                [
                  "loss",
                  "loss_value",
                  "world",
                  "initial_state",
                  "session",
                  "self_loss",
                  "optim",
                  "fluid",
                  "sl_value",
                  "staggered_velocity",
                  "target",
                  "_"
                ]
              ],
              [
                "test_precision_64",
                [
                  "fluid"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_tf_worldgraph",
                []
              ],
              [
                "test_fluid_tf",
                []
              ],
              [
                "test_precision_16",
                []
              ],
              [
                "test_fluid_tf_equality",
                []
              ],
              [
                "test_tf_subgraph",
                []
              ],
              [
                "test_gradient_batch_independence",
                []
              ],
              [
                "test_precision_64",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5776993852653352,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_fluid_tf_equality",
                  "test_gradient_batch_independence",
                  0.7055087227914112
                ],
                [
                  "test_tf_subgraph",
                  "test_gradient_batch_independence",
                  0.517407924815591
                ],
                [
                  "test_gradient_batch_independence",
                  "test_precision_64",
                  0.46259950459617083
                ],
                [
                  "test_tf_subgraph",
                  "test_precision_16",
                  0.4206643856396951
                ],
                [
                  "test_tf_worldgraph",
                  "test_precision_64",
                  0.4206643856396951
                ],
                [
                  "test_fluid_tf_equality",
                  "test_tf_worldgraph",
                  0.6035611517723194
                ],
                [
                  "test_tf_subgraph",
                  "test_tf_worldgraph",
                  0.967741935483871
                ],
                [
                  "test_fluid_tf",
                  "test_tf_worldgraph",
                  0.684353203432982
                ],
                [
                  "test_fluid_tf",
                  "test_precision_64",
                  0.46923789847942865
                ],
                [
                  "test_fluid_tf",
                  "test_precision_16",
                  0.46923789847942865
                ],
                [
                  "test_fluid_tf",
                  "test_gradient_batch_independence",
                  0.6319965909647756
                ],
                [
                  "test_fluid_tf",
                  "test_tf_subgraph",
                  0.684353203432982
                ],
                [
                  "test_tf_subgraph",
                  "test_precision_64",
                  0.4206643856396951
                ],
                [
                  "test_gradient_batch_independence",
                  "test_precision_16",
                  0.46259950459617083
                ],
                [
                  "test_tf_worldgraph",
                  "test_precision_16",
                  0.4206643856396951
                ],
                [
                  "test_fluid_tf",
                  "test_fluid_tf_equality",
                  0.6372272454595634
                ],
                [
                  "test_fluid_tf_equality",
                  "test_precision_64",
                  0.5161178435603263
                ],
                [
                  "test_tf_worldgraph",
                  "test_gradient_batch_independence",
                  0.517407924815591
                ],
                [
                  "test_precision_64",
                  "test_precision_16",
                  1.0000000000000002
                ],
                [
                  "test_fluid_tf_equality",
                  "test_tf_subgraph",
                  0.6035611517723194
                ],
                [
                  "test_fluid_tf_equality",
                  "test_precision_16",
                  0.5161178435603263
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_tf_worldgraph",
                "false"
              ],
              [
                "test_fluid_tf",
                "false"
              ],
              [
                "test_precision_16",
                "false"
              ],
              [
                "test_fluid_tf_equality",
                "false"
              ],
              [
                "test_tf_subgraph",
                "false"
              ],
              [
                "test_gradient_batch_independence",
                "false"
              ],
              [
                "test_precision_64",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      }
    ]
  },
  {
    "name": "tests_\u0026_test_geometry.py",
    "testCases": [
      {
        "name": "TestGeometry",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_batched_box",
                  "[]"
                ],
                [
                  "test_batched_sphere",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_batched_box",
                  "[]"
                ],
                [
                  "test_batched_sphere",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_batched_box",
                  "false"
                ],
                [
                  "test_batched_sphere",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_batched_box",
                  "false"
                ],
                [
                  "test_batched_sphere",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_batched_box",
                  "false"
                ],
                [
                  "test_batched_sphere",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_batched_box",
                  "false"
                ],
                [
                  "test_batched_sphere",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_batched_box",
                "false"
              ],
              [
                "test_batched_sphere",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_batched_box",
                "false"
              ],
              [
                "test_batched_sphere",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_batched_box",
                []
              ],
              [
                "test_batched_sphere",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_batched_box",
                "false"
              ],
              [
                "test_batched_sphere",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_batched_box",
                "false"
              ],
              [
                "test_batched_sphere",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_batched_box",
                  "0"
                ],
                [
                  "test_batched_sphere",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_batched_box",
                  "0"
                ],
                [
                  "test_batched_sphere",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_batched_box",
                "false"
              ],
              [
                "test_batched_sphere",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_batched_box",
                "false"
              ],
              [
                "test_batched_sphere",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_batched_box",
                "4"
              ],
              [
                "test_batched_sphere",
                "6"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_batched_box",
                [
                  "mybox",
                  "values"
                ]
              ],
              [
                "test_batched_sphere",
                [
                  "values",
                  "moving_sphere",
                  "growing_sphere"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_batched_box",
                []
              ],
              [
                "test_batched_sphere",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9413654410281144,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_batched_box",
                  "test_batched_sphere",
                  0.9413654410281144
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_batched_box",
                "false"
              ],
              [
                "test_batched_sphere",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_tensorflow.py",
    "testCases": [
      {
        "name": "TestPlaceholder",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_struct_placeholders",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_direct_placeholders",
                  "[PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertEqual, PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_struct_placeholders",
                  "[]"
                ],
                [
                  "test_direct_placeholders",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_struct_placeholders",
                  "false"
                ],
                [
                  "test_direct_placeholders",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_struct_placeholders",
                  "false"
                ],
                [
                  "test_direct_placeholders",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_struct_placeholders",
                  "false"
                ],
                [
                  "test_direct_placeholders",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_struct_placeholders",
                  "false"
                ],
                [
                  "test_direct_placeholders",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_struct_placeholders",
                "false"
              ],
              [
                "test_direct_placeholders",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_struct_placeholders",
                "false"
              ],
              [
                "test_direct_placeholders",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_struct_placeholders",
                []
              ],
              [
                "test_direct_placeholders",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_struct_placeholders",
                "false"
              ],
              [
                "test_direct_placeholders",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_struct_placeholders",
                "false"
              ],
              [
                "test_direct_placeholders",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_struct_placeholders",
                  "0"
                ],
                [
                  "test_direct_placeholders",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_struct_placeholders",
                  "0"
                ],
                [
                  "test_direct_placeholders",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_struct_placeholders",
                "false"
              ],
              [
                "test_direct_placeholders",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_struct_placeholders",
                "false"
              ],
              [
                "test_direct_placeholders",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_struct_placeholders",
                "3"
              ],
              [
                "test_direct_placeholders",
                "6"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_struct_placeholders",
                [
                  "p",
                  "obj"
                ]
              ],
              [
                "test_direct_placeholders",
                [
                  "p",
                  "v"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_struct_placeholders",
                []
              ],
              [
                "test_direct_placeholders",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4587204930291806,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_direct_placeholders",
                  "test_struct_placeholders",
                  0.4587204930291806
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_struct_placeholders",
                "false"
              ],
              [
                "test_direct_placeholders",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_fluid_torch.py",
    "testCases": [
      {
        "name": "TestFluidPyTorch",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_fluid_pytorch_equality",
                  "[]"
                ],
                [
                  "test_precision_64",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_fluid_pytorch",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_fluid_pytorch_equality",
                  "[]"
                ],
                [
                  "test_precision_64",
                  "[]"
                ],
                [
                  "test_fluid_pytorch",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_fluid_pytorch_equality",
                  "true"
                ],
                [
                  "test_precision_64",
                  "false"
                ],
                [
                  "test_fluid_pytorch",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_fluid_pytorch_equality",
                  "false"
                ],
                [
                  "test_precision_64",
                  "false"
                ],
                [
                  "test_fluid_pytorch",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_fluid_pytorch_equality",
                  "false"
                ],
                [
                  "test_precision_64",
                  "true"
                ],
                [
                  "test_fluid_pytorch",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_fluid_pytorch_equality",
                  "false"
                ],
                [
                  "test_precision_64",
                  "false"
                ],
                [
                  "test_fluid_pytorch",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_fluid_pytorch_equality",
                "false"
              ],
              [
                "test_precision_64",
                "false"
              ],
              [
                "test_fluid_pytorch",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_fluid_pytorch_equality",
                "false"
              ],
              [
                "test_precision_64",
                "true"
              ],
              [
                "test_fluid_pytorch",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_fluid_pytorch_equality",
                []
              ],
              [
                "test_precision_64",
                []
              ],
              [
                "test_fluid_pytorch",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_fluid_pytorch_equality",
                "false"
              ],
              [
                "test_precision_64",
                "false"
              ],
              [
                "test_fluid_pytorch",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_fluid_pytorch_equality",
                "false"
              ],
              [
                "test_precision_64",
                "false"
              ],
              [
                "test_fluid_pytorch",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_fluid_pytorch_equality",
                  "0"
                ],
                [
                  "test_precision_64",
                  "0"
                ],
                [
                  "test_fluid_pytorch",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_fluid_pytorch_equality",
                  "0"
                ],
                [
                  "test_precision_64",
                  "0"
                ],
                [
                  "test_fluid_pytorch",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_fluid_pytorch_equality",
                "true"
              ],
              [
                "test_precision_64",
                "false"
              ],
              [
                "test_fluid_pytorch",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_fluid_pytorch_equality",
                "false"
              ],
              [
                "test_precision_64",
                "false"
              ],
              [
                "test_fluid_pytorch",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_fluid_pytorch_equality",
                "1"
              ],
              [
                "test_precision_64",
                "4"
              ],
              [
                "test_fluid_pytorch",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_fluid_pytorch_equality",
                [
                  "physics",
                  "np_fluid",
                  "torch_eval",
                  "torch_fluid"
                ]
              ],
              [
                "test_precision_64",
                [
                  "fluid"
                ]
              ],
              [
                "test_fluid_pytorch",
                [
                  "world",
                  "fluid"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_fluid_pytorch_equality",
                []
              ],
              [
                "test_precision_64",
                []
              ],
              [
                "test_fluid_pytorch",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5878959511211105,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_fluid_pytorch_equality",
                  "test_precision_64",
                  0.5805757147845338
                ],
                [
                  "test_fluid_pytorch",
                  "test_fluid_pytorch_equality",
                  0.6904898008019084
                ],
                [
                  "test_fluid_pytorch",
                  "test_precision_64",
                  0.49262233777688935
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_fluid_pytorch_equality",
                "false"
              ],
              [
                "test_precision_64",
                "false"
              ],
              [
                "test_fluid_pytorch",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_object_math.py",
    "testCases": [
      {
        "name": "TestFieldMath",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_addition_centered_grid",
                  "[]"
                ],
                [
                  "test_multiplication_centered_grid",
                  "[]"
                ],
                [
                  "test_division_centered_grid",
                  "[]"
                ],
                [
                  "test_subtraction_centered_grid",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_addition_centered_grid",
                  "[]"
                ],
                [
                  "test_multiplication_centered_grid",
                  "[]"
                ],
                [
                  "test_division_centered_grid",
                  "[]"
                ],
                [
                  "test_subtraction_centered_grid",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_addition_centered_grid",
                  "true"
                ],
                [
                  "test_multiplication_centered_grid",
                  "true"
                ],
                [
                  "test_division_centered_grid",
                  "true"
                ],
                [
                  "test_subtraction_centered_grid",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_addition_centered_grid",
                  "false"
                ],
                [
                  "test_multiplication_centered_grid",
                  "false"
                ],
                [
                  "test_division_centered_grid",
                  "false"
                ],
                [
                  "test_subtraction_centered_grid",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_addition_centered_grid",
                  "false"
                ],
                [
                  "test_multiplication_centered_grid",
                  "false"
                ],
                [
                  "test_division_centered_grid",
                  "false"
                ],
                [
                  "test_subtraction_centered_grid",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_addition_centered_grid",
                  "false"
                ],
                [
                  "test_multiplication_centered_grid",
                  "false"
                ],
                [
                  "test_division_centered_grid",
                  "false"
                ],
                [
                  "test_subtraction_centered_grid",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_addition_centered_grid",
                "false"
              ],
              [
                "test_multiplication_centered_grid",
                "false"
              ],
              [
                "test_division_centered_grid",
                "false"
              ],
              [
                "test_subtraction_centered_grid",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_addition_centered_grid",
                "false"
              ],
              [
                "test_multiplication_centered_grid",
                "false"
              ],
              [
                "test_division_centered_grid",
                "false"
              ],
              [
                "test_subtraction_centered_grid",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_addition_centered_grid",
                []
              ],
              [
                "test_multiplication_centered_grid",
                []
              ],
              [
                "test_division_centered_grid",
                []
              ],
              [
                "test_subtraction_centered_grid",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_addition_centered_grid",
                "false"
              ],
              [
                "test_multiplication_centered_grid",
                "false"
              ],
              [
                "test_division_centered_grid",
                "false"
              ],
              [
                "test_subtraction_centered_grid",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_addition_centered_grid",
                "false"
              ],
              [
                "test_multiplication_centered_grid",
                "false"
              ],
              [
                "test_division_centered_grid",
                "false"
              ],
              [
                "test_subtraction_centered_grid",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_addition_centered_grid",
                  "0"
                ],
                [
                  "test_multiplication_centered_grid",
                  "0"
                ],
                [
                  "test_division_centered_grid",
                  "0"
                ],
                [
                  "test_subtraction_centered_grid",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_addition_centered_grid",
                  "0"
                ],
                [
                  "test_multiplication_centered_grid",
                  "0"
                ],
                [
                  "test_division_centered_grid",
                  "0"
                ],
                [
                  "test_subtraction_centered_grid",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_addition_centered_grid",
                "false"
              ],
              [
                "test_multiplication_centered_grid",
                "false"
              ],
              [
                "test_division_centered_grid",
                "false"
              ],
              [
                "test_subtraction_centered_grid",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_addition_centered_grid",
                "false"
              ],
              [
                "test_multiplication_centered_grid",
                "false"
              ],
              [
                "test_division_centered_grid",
                "false"
              ],
              [
                "test_subtraction_centered_grid",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_addition_centered_grid",
                "1"
              ],
              [
                "test_multiplication_centered_grid",
                "1"
              ],
              [
                "test_division_centered_grid",
                "1"
              ],
              [
                "test_subtraction_centered_grid",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_addition_centered_grid",
                [
                  "result_array",
                  "shape",
                  "domain",
                  "centered_grid"
                ]
              ],
              [
                "test_multiplication_centered_grid",
                [
                  "result_array",
                  "shape",
                  "domain",
                  "centered_grid"
                ]
              ],
              [
                "test_division_centered_grid",
                [
                  "result_array",
                  "shape",
                  "domain",
                  "centered_grid"
                ]
              ],
              [
                "test_subtraction_centered_grid",
                [
                  "result_array",
                  "shape",
                  "domain",
                  "centered_grid"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_addition_centered_grid",
                []
              ],
              [
                "test_multiplication_centered_grid",
                []
              ],
              [
                "test_division_centered_grid",
                []
              ],
              [
                "test_subtraction_centered_grid",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9315820542847599,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_subtraction_centered_grid",
                  "test_addition_centered_grid",
                  0.9561771389478815
                ],
                [
                  "test_subtraction_centered_grid",
                  "test_multiplication_centered_grid",
                  0.909388905140316
                ],
                [
                  "test_multiplication_centered_grid",
                  "test_division_centered_grid",
                  0.9601294015372556
                ],
                [
                  "test_subtraction_centered_grid",
                  "test_division_centered_grid",
                  0.9053748357081701
                ],
                [
                  "test_addition_centered_grid",
                  "test_division_centered_grid",
                  0.9264180443384353
                ],
                [
                  "test_addition_centered_grid",
                  "test_multiplication_centered_grid",
                  0.9320040000365013
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_addition_centered_grid",
                "false"
              ],
              [
                "test_multiplication_centered_grid",
                "false"
              ],
              [
                "test_division_centered_grid",
                "false"
              ],
              [
                "test_subtraction_centered_grid",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "tests_\u0026_test_dependencies.py",
    "testCases": [
      {
        "name": "TestDependencies",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_cyclic_dependency",
                  "[PyCallExpression: self.fail]"
                ],
                [
                  "test_order",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_cyclic_dependency",
                  "[]"
                ],
                [
                  "test_order",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_cyclic_dependency",
                  "false"
                ],
                [
                  "test_order",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_cyclic_dependency",
                  "false"
                ],
                [
                  "test_order",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_cyclic_dependency",
                  "false"
                ],
                [
                  "test_order",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_cyclic_dependency",
                  "false"
                ],
                [
                  "test_order",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cyclic_dependency",
                "false"
              ],
              [
                "test_order",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_cyclic_dependency",
                "true"
              ],
              [
                "test_order",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_cyclic_dependency",
                []
              ],
              [
                "test_order",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cyclic_dependency",
                "false"
              ],
              [
                "test_order",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cyclic_dependency",
                "false"
              ],
              [
                "test_order",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_cyclic_dependency",
                  "0"
                ],
                [
                  "test_order",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_cyclic_dependency",
                  "0"
                ],
                [
                  "test_order",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_cyclic_dependency",
                "false"
              ],
              [
                "test_order",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cyclic_dependency",
                "false"
              ],
              [
                "test_order",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_cyclic_dependency",
                "0"
              ],
              [
                "test_order",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_cyclic_dependency",
                [
                  "fan",
                  "world",
                  "inflow",
                  "order"
                ]
              ],
              [
                "test_order",
                [
                  "world",
                  "order"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_cyclic_dependency",
                []
              ],
              [
                "test_order",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.707452301256611,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_order",
                  "test_cyclic_dependency",
                  0.707452301256611
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_cyclic_dependency",
                "false"
              ],
              [
                "test_order",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_initializers.py",
    "testCases": [
      {
        "name": "TestInitializers",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_direct_initializers",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_struct_initializers",
                  "[PyCallExpression: self.assertIsInstance]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_direct_initializers",
                  "[]"
                ],
                [
                  "test_struct_initializers",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_direct_initializers",
                  "false"
                ],
                [
                  "test_struct_initializers",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_direct_initializers",
                  "false"
                ],
                [
                  "test_struct_initializers",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_direct_initializers",
                  "false"
                ],
                [
                  "test_struct_initializers",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_direct_initializers",
                  "false"
                ],
                [
                  "test_struct_initializers",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_direct_initializers",
                "false"
              ],
              [
                "test_struct_initializers",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_direct_initializers",
                "false"
              ],
              [
                "test_struct_initializers",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_direct_initializers",
                []
              ],
              [
                "test_struct_initializers",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_direct_initializers",
                "false"
              ],
              [
                "test_struct_initializers",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_direct_initializers",
                "false"
              ],
              [
                "test_struct_initializers",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_direct_initializers",
                  "0"
                ],
                [
                  "test_struct_initializers",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_direct_initializers",
                  "0"
                ],
                [
                  "test_struct_initializers",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_direct_initializers",
                "false"
              ],
              [
                "test_struct_initializers",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_direct_initializers",
                "false"
              ],
              [
                "test_struct_initializers",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_direct_initializers",
                "6"
              ],
              [
                "test_struct_initializers",
                "3"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_direct_initializers",
                []
              ],
              [
                "test_struct_initializers",
                [
                  "obj",
                  "z2",
                  "z"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_direct_initializers",
                []
              ],
              [
                "test_struct_initializers",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.573974611514982,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_direct_initializers",
                  "test_struct_initializers",
                  0.573974611514982
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_direct_initializers",
                "false"
              ],
              [
                "test_struct_initializers",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_schroedinger.py",
    "testCases": [
      {
        "name": "TestSchroedinger",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_simple_step",
                  "[]"
                ],
                [
                  "test_complex_step",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_simple_step",
                  "[]"
                ],
                [
                  "test_complex_step",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_simple_step",
                  "false"
                ],
                [
                  "test_complex_step",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_simple_step",
                  "false"
                ],
                [
                  "test_complex_step",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_simple_step",
                  "false"
                ],
                [
                  "test_complex_step",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_simple_step",
                  "false"
                ],
                [
                  "test_complex_step",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_step",
                "false"
              ],
              [
                "test_complex_step",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_step",
                "false"
              ],
              [
                "test_complex_step",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_step",
                []
              ],
              [
                "test_complex_step",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_step",
                "false"
              ],
              [
                "test_complex_step",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_step",
                "false"
              ],
              [
                "test_complex_step",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_simple_step",
                  "0"
                ],
                [
                  "test_complex_step",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_simple_step",
                  "0"
                ],
                [
                  "test_complex_step",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_step",
                "false"
              ],
              [
                "test_complex_step",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_step",
                "false"
              ],
              [
                "test_complex_step",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_step",
                "1"
              ],
              [
                "test_complex_step",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_step",
                [
                  "q"
                ]
              ],
              [
                "test_complex_step",
                [
                  "q",
                  "pot"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_step",
                []
              ],
              [
                "test_complex_step",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9530360749391875,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_simple_step",
                  "test_complex_step",
                  0.9530360749391875
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_step",
                "false"
              ],
              [
                "test_complex_step",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_custom_struct.py",
    "testCases": [
      {
        "name": "TestStruct",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_custom_struct_instance",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_batch_get",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_custom_struct_instance",
                  "[]"
                ],
                [
                  "test_batch_get",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_custom_struct_instance",
                  "false"
                ],
                [
                  "test_batch_get",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_custom_struct_instance",
                  "false"
                ],
                [
                  "test_batch_get",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_custom_struct_instance",
                  "false"
                ],
                [
                  "test_batch_get",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_custom_struct_instance",
                  "false"
                ],
                [
                  "test_batch_get",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_custom_struct_instance",
                "false"
              ],
              [
                "test_batch_get",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_custom_struct_instance",
                "false"
              ],
              [
                "test_batch_get",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_custom_struct_instance",
                []
              ],
              [
                "test_batch_get",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_custom_struct_instance",
                "false"
              ],
              [
                "test_batch_get",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_custom_struct_instance",
                "false"
              ],
              [
                "test_batch_get",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_custom_struct_instance",
                  "0"
                ],
                [
                  "test_batch_get",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_custom_struct_instance",
                  "0"
                ],
                [
                  "test_batch_get",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_custom_struct_instance",
                "false"
              ],
              [
                "test_batch_get",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_custom_struct_instance",
                "false"
              ],
              [
                "test_batch_get",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_custom_struct_instance",
                "1"
              ],
              [
                "test_batch_get",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_custom_struct_instance",
                [
                  "m"
                ]
              ],
              [
                "test_batch_get",
                [
                  "obj",
                  "adult",
                  "age"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_custom_struct_instance",
                []
              ],
              [
                "test_batch_get",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.3615945316606385,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_custom_struct_instance",
                  "test_batch_get",
                  0.3615945316606385
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_custom_struct_instance",
                "false"
              ],
              [
                "test_batch_get",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_poisson_solve.py",
    "testCases": [
      {
        "name": "TestPoissonSolve",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_equal_results",
                  "[]"
                ],
                [
                  "test_sparse_scipy",
                  "[]"
                ],
                [
                  "test_geometric_cg",
                  "[]"
                ],
                [
                  "test_sparse_cg",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_equal_results",
                  "[]"
                ],
                [
                  "test_sparse_scipy",
                  "[]"
                ],
                [
                  "test_geometric_cg",
                  "[]"
                ],
                [
                  "test_sparse_cg",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_equal_results",
                  "true"
                ],
                [
                  "test_sparse_scipy",
                  "false"
                ],
                [
                  "test_geometric_cg",
                  "false"
                ],
                [
                  "test_sparse_cg",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_equal_results",
                  "false"
                ],
                [
                  "test_sparse_scipy",
                  "false"
                ],
                [
                  "test_geometric_cg",
                  "false"
                ],
                [
                  "test_sparse_cg",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_equal_results",
                  "false"
                ],
                [
                  "test_sparse_scipy",
                  "false"
                ],
                [
                  "test_geometric_cg",
                  "false"
                ],
                [
                  "test_sparse_cg",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_equal_results",
                  "false"
                ],
                [
                  "test_sparse_scipy",
                  "false"
                ],
                [
                  "test_geometric_cg",
                  "false"
                ],
                [
                  "test_sparse_cg",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_equal_results",
                "false"
              ],
              [
                "test_sparse_scipy",
                "false"
              ],
              [
                "test_geometric_cg",
                "false"
              ],
              [
                "test_sparse_cg",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_equal_results",
                "false"
              ],
              [
                "test_sparse_scipy",
                "false"
              ],
              [
                "test_geometric_cg",
                "false"
              ],
              [
                "test_sparse_cg",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_equal_results",
                []
              ],
              [
                "test_sparse_scipy",
                []
              ],
              [
                "test_geometric_cg",
                []
              ],
              [
                "test_sparse_cg",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_equal_results",
                "false"
              ],
              [
                "test_sparse_scipy",
                "false"
              ],
              [
                "test_geometric_cg",
                "false"
              ],
              [
                "test_sparse_cg",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_equal_results",
                "false"
              ],
              [
                "test_sparse_scipy",
                "false"
              ],
              [
                "test_geometric_cg",
                "false"
              ],
              [
                "test_sparse_cg",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_equal_results",
                  "0"
                ],
                [
                  "test_sparse_scipy",
                  "0"
                ],
                [
                  "test_geometric_cg",
                  "0"
                ],
                [
                  "test_sparse_cg",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_equal_results",
                  "0"
                ],
                [
                  "test_sparse_scipy",
                  "0"
                ],
                [
                  "test_geometric_cg",
                  "0"
                ],
                [
                  "test_sparse_cg",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_equal_results",
                "false"
              ],
              [
                "test_sparse_scipy",
                "false"
              ],
              [
                "test_geometric_cg",
                "false"
              ],
              [
                "test_sparse_cg",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_equal_results",
                "false"
              ],
              [
                "test_sparse_scipy",
                "false"
              ],
              [
                "test_geometric_cg",
                "false"
              ],
              [
                "test_sparse_cg",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_equal_results",
                "1"
              ],
              [
                "test_sparse_scipy",
                "0"
              ],
              [
                "test_geometric_cg",
                "0"
              ],
              [
                "test_sparse_cg",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_equal_results",
                [
                  "pressure_fields",
                  "data_in"
                ]
              ],
              [
                "test_sparse_scipy",
                []
              ],
              [
                "test_geometric_cg",
                []
              ],
              [
                "test_sparse_cg",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_equal_results",
                []
              ],
              [
                "test_sparse_scipy",
                []
              ],
              [
                "test_geometric_cg",
                []
              ],
              [
                "test_sparse_cg",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4573372043067731,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_sparse_cg",
                  "test_sparse_scipy",
                  0.8153742483272114
                ],
                [
                  "test_sparse_cg",
                  "test_geometric_cg",
                  0.6923076923076924
                ],
                [
                  "test_sparse_scipy",
                  "test_geometric_cg",
                  0.5188745216627709
                ],
                [
                  "test_equal_results",
                  "test_sparse_scipy",
                  0.23328473740792174
                ],
                [
                  "test_equal_results",
                  "test_geometric_cg",
                  0.24209101306752098
                ],
                [
                  "test_equal_results",
                  "test_sparse_cg",
                  0.24209101306752098
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_equal_results",
                "false"
              ],
              [
                "test_sparse_scipy",
                "false"
              ],
              [
                "test_geometric_cg",
                "false"
              ],
              [
                "test_sparse_cg",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "gpu_tests_\u0026_test_tf_cuda_resample.py",
    "testCases": [
      {
        "name": "TestTfCudaResample",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_global_boundaries",
                  "[]"
                ],
                [
                  "test_batch_sizes",
                  "[]"
                ],
                [
                  "test_mixed_boundaries",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_global_boundaries",
                  "[]"
                ],
                [
                  "test_batch_sizes",
                  "[]"
                ],
                [
                  "test_mixed_boundaries",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_global_boundaries",
                  "false"
                ],
                [
                  "test_batch_sizes",
                  "false"
                ],
                [
                  "test_mixed_boundaries",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_global_boundaries",
                  "false"
                ],
                [
                  "test_batch_sizes",
                  "false"
                ],
                [
                  "test_mixed_boundaries",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_global_boundaries",
                  "false"
                ],
                [
                  "test_batch_sizes",
                  "false"
                ],
                [
                  "test_mixed_boundaries",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_global_boundaries",
                  "false"
                ],
                [
                  "test_batch_sizes",
                  "false"
                ],
                [
                  "test_mixed_boundaries",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_global_boundaries",
                "false"
              ],
              [
                "test_batch_sizes",
                "false"
              ],
              [
                "test_mixed_boundaries",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_global_boundaries",
                "false"
              ],
              [
                "test_batch_sizes",
                "false"
              ],
              [
                "test_mixed_boundaries",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_global_boundaries",
                []
              ],
              [
                "test_batch_sizes",
                []
              ],
              [
                "test_mixed_boundaries",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_global_boundaries",
                "false"
              ],
              [
                "test_batch_sizes",
                "false"
              ],
              [
                "test_mixed_boundaries",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_global_boundaries",
                "false"
              ],
              [
                "test_batch_sizes",
                "false"
              ],
              [
                "test_mixed_boundaries",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_global_boundaries",
                  "0"
                ],
                [
                  "test_batch_sizes",
                  "0"
                ],
                [
                  "test_mixed_boundaries",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_global_boundaries",
                  "0"
                ],
                [
                  "test_batch_sizes",
                  "0"
                ],
                [
                  "test_mixed_boundaries",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_global_boundaries",
                "false"
              ],
              [
                "test_batch_sizes",
                "false"
              ],
              [
                "test_mixed_boundaries",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_global_boundaries",
                "false"
              ],
              [
                "test_batch_sizes",
                "false"
              ],
              [
                "test_mixed_boundaries",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_global_boundaries",
                "0"
              ],
              [
                "test_batch_sizes",
                "0"
              ],
              [
                "test_mixed_boundaries",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_global_boundaries",
                []
              ],
              [
                "test_batch_sizes",
                []
              ],
              [
                "test_mixed_boundaries",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_global_boundaries",
                []
              ],
              [
                "test_batch_sizes",
                []
              ],
              [
                "test_mixed_boundaries",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5833333333333331,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_global_boundaries",
                  "test_batch_sizes",
                  0.4999999999999999
                ],
                [
                  "test_mixed_boundaries",
                  "test_batch_sizes",
                  0.4999999999999999
                ],
                [
                  "test_global_boundaries",
                  "test_mixed_boundaries",
                  0.7499999999999999
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_global_boundaries",
                "false"
              ],
              [
                "test_batch_sizes",
                "false"
              ],
              [
                "test_mixed_boundaries",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  }
]