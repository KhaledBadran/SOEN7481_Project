[
  {
    "name": "tests_\u0026_test_html_io.py",
    "testCases": [
      {
        "name": "TestHTMLIO",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_can_add_set_button_attributes",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_can_add_set_button_attributes",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_can_add_set_button_attributes",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_can_add_set_button_attributes",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_can_add_set_button_attributes",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_can_add_set_button_attributes",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_can_add_set_button_attributes",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_can_add_set_button_attributes",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_can_add_set_button_attributes",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_can_add_set_button_attributes",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_can_add_set_button_attributes",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_can_add_set_button_attributes",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_can_add_set_button_attributes",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_can_add_set_button_attributes",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_can_add_set_button_attributes",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_can_add_set_button_attributes",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_can_add_set_button_attributes",
                [
                  "h",
                  "attrs"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_can_add_set_button_attributes",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_can_add_set_button_attributes",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_pub_sub.py",
    "testCases": [
      {
        "name": "PubSubTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_get_single_message",
                  "[]"
                ],
                [
                  "test_get_many_messages",
                  "[]"
                ],
                [
                  "test_listen_for_messages",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_get_single_message",
                  "[]"
                ],
                [
                  "test_get_many_messages",
                  "[]"
                ],
                [
                  "test_listen_for_messages",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_get_single_message",
                  "false"
                ],
                [
                  "test_get_many_messages",
                  "false"
                ],
                [
                  "test_listen_for_messages",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_get_single_message",
                  "false"
                ],
                [
                  "test_get_many_messages",
                  "false"
                ],
                [
                  "test_listen_for_messages",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_get_single_message",
                  "false"
                ],
                [
                  "test_get_many_messages",
                  "false"
                ],
                [
                  "test_listen_for_messages",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_get_single_message",
                  "false"
                ],
                [
                  "test_get_many_messages",
                  "false"
                ],
                [
                  "test_listen_for_messages",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_single_message",
                "false"
              ],
              [
                "test_get_many_messages",
                "false"
              ],
              [
                "test_listen_for_messages",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_get_single_message",
                "false"
              ],
              [
                "test_get_many_messages",
                "false"
              ],
              [
                "test_listen_for_messages",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_get_single_message",
                []
              ],
              [
                "test_get_many_messages",
                []
              ],
              [
                "test_listen_for_messages",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_single_message",
                "false"
              ],
              [
                "test_get_many_messages",
                "false"
              ],
              [
                "test_listen_for_messages",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_single_message",
                "false"
              ],
              [
                "test_get_many_messages",
                "false"
              ],
              [
                "test_listen_for_messages",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_get_single_message",
                  "0"
                ],
                [
                  "test_get_many_messages",
                  "0"
                ],
                [
                  "test_listen_for_messages",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_get_single_message",
                  "0"
                ],
                [
                  "test_get_many_messages",
                  "0"
                ],
                [
                  "test_listen_for_messages",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_get_single_message",
                "false"
              ],
              [
                "test_get_many_messages",
                "false"
              ],
              [
                "test_listen_for_messages",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_single_message",
                "false"
              ],
              [
                "test_get_many_messages",
                "false"
              ],
              [
                "test_listen_for_messages",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_get_single_message",
                "0"
              ],
              [
                "test_get_many_messages",
                "0"
              ],
              [
                "test_listen_for_messages",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_get_single_message",
                [
                  "r",
                  "c",
                  "pubsub2",
                  "data",
                  "d",
                  "pubsub1"
                ]
              ],
              [
                "test_get_many_messages",
                [
                  "pubsub2",
                  "pubsub1",
                  "count",
                  "messages"
                ]
              ],
              [
                "test_listen_for_messages",
                [
                  "pubsub2",
                  "pubsub1",
                  "messages"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_get_single_message",
                [
                  "self.pubsub2",
                  "self.pubsub1"
                ]
              ],
              [
                "test_get_many_messages",
                [
                  "self.pubsub2",
                  "self.pubsub1"
                ]
              ],
              [
                "test_listen_for_messages",
                [
                  "self.pubsub2",
                  "self.pubsub1"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6011115076278118,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_get_single_message",
                  "test_get_many_messages",
                  0.6926786647397536
                ],
                [
                  "test_get_single_message",
                  "test_listen_for_messages",
                  0.5077835112216443
                ],
                [
                  "test_get_many_messages",
                  "test_listen_for_messages",
                  0.6028723469220375
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_get_single_message",
                "false"
              ],
              [
                "test_get_many_messages",
                "false"
              ],
              [
                "test_listen_for_messages",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_read_write.py",
    "testCases": [
      {
        "name": "TestReadWrite",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_that_values_are_min_max_limited",
                  "[]"
                ],
                [
                  "test_basic_read_write",
                  "[]"
                ],
                [
                  "test_same_name_different_database",
                  "[]"
                ],
                [
                  "test_that_pubsub_possible_on_io_group",
                  "[]"
                ],
                [
                  "test_values_can_be_set_to_default",
                  "[]"
                ],
                [
                  "test_arithmatic_operations",
                  "[]"
                ],
                [
                  "test_that_defaults_are_applied",
                  "[]"
                ],
                [
                  "test_that_group_can_be_saved_to_memory",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_that_values_are_min_max_limited",
                  "[]"
                ],
                [
                  "test_basic_read_write",
                  "[]"
                ],
                [
                  "test_same_name_different_database",
                  "[]"
                ],
                [
                  "test_that_pubsub_possible_on_io_group",
                  "[]"
                ],
                [
                  "test_values_can_be_set_to_default",
                  "[]"
                ],
                [
                  "test_arithmatic_operations",
                  "[]"
                ],
                [
                  "test_that_defaults_are_applied",
                  "[]"
                ],
                [
                  "test_that_group_can_be_saved_to_memory",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_that_values_are_min_max_limited",
                  "false"
                ],
                [
                  "test_basic_read_write",
                  "false"
                ],
                [
                  "test_same_name_different_database",
                  "false"
                ],
                [
                  "test_that_pubsub_possible_on_io_group",
                  "true"
                ],
                [
                  "test_values_can_be_set_to_default",
                  "false"
                ],
                [
                  "test_arithmatic_operations",
                  "false"
                ],
                [
                  "test_that_defaults_are_applied",
                  "false"
                ],
                [
                  "test_that_group_can_be_saved_to_memory",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_that_values_are_min_max_limited",
                  "false"
                ],
                [
                  "test_basic_read_write",
                  "false"
                ],
                [
                  "test_same_name_different_database",
                  "false"
                ],
                [
                  "test_that_pubsub_possible_on_io_group",
                  "false"
                ],
                [
                  "test_values_can_be_set_to_default",
                  "false"
                ],
                [
                  "test_arithmatic_operations",
                  "false"
                ],
                [
                  "test_that_defaults_are_applied",
                  "false"
                ],
                [
                  "test_that_group_can_be_saved_to_memory",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_that_values_are_min_max_limited",
                  "false"
                ],
                [
                  "test_basic_read_write",
                  "false"
                ],
                [
                  "test_same_name_different_database",
                  "false"
                ],
                [
                  "test_that_pubsub_possible_on_io_group",
                  "false"
                ],
                [
                  "test_values_can_be_set_to_default",
                  "false"
                ],
                [
                  "test_arithmatic_operations",
                  "false"
                ],
                [
                  "test_that_defaults_are_applied",
                  "false"
                ],
                [
                  "test_that_group_can_be_saved_to_memory",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_that_values_are_min_max_limited",
                  "false"
                ],
                [
                  "test_basic_read_write",
                  "false"
                ],
                [
                  "test_same_name_different_database",
                  "false"
                ],
                [
                  "test_that_pubsub_possible_on_io_group",
                  "false"
                ],
                [
                  "test_values_can_be_set_to_default",
                  "false"
                ],
                [
                  "test_arithmatic_operations",
                  "false"
                ],
                [
                  "test_that_defaults_are_applied",
                  "false"
                ],
                [
                  "test_that_group_can_be_saved_to_memory",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_that_values_are_min_max_limited",
                "false"
              ],
              [
                "test_basic_read_write",
                "false"
              ],
              [
                "test_same_name_different_database",
                "false"
              ],
              [
                "test_that_pubsub_possible_on_io_group",
                "false"
              ],
              [
                "test_values_can_be_set_to_default",
                "false"
              ],
              [
                "test_arithmatic_operations",
                "false"
              ],
              [
                "test_that_defaults_are_applied",
                "false"
              ],
              [
                "test_that_group_can_be_saved_to_memory",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_that_values_are_min_max_limited",
                "false"
              ],
              [
                "test_basic_read_write",
                "false"
              ],
              [
                "test_same_name_different_database",
                "false"
              ],
              [
                "test_that_pubsub_possible_on_io_group",
                "false"
              ],
              [
                "test_values_can_be_set_to_default",
                "false"
              ],
              [
                "test_arithmatic_operations",
                "false"
              ],
              [
                "test_that_defaults_are_applied",
                "false"
              ],
              [
                "test_that_group_can_be_saved_to_memory",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_that_values_are_min_max_limited",
                [
                  "self.group2",
                  "self.group3"
                ]
              ],
              [
                "test_basic_read_write",
                [
                  "self.group3"
                ]
              ],
              [
                "test_same_name_different_database",
                []
              ],
              [
                "test_that_pubsub_possible_on_io_group",
                [
                  "self.group3"
                ]
              ],
              [
                "test_values_can_be_set_to_default",
                [
                  "self.group2",
                  "self.group3"
                ]
              ],
              [
                "test_arithmatic_operations",
                [
                  "self.group2"
                ]
              ],
              [
                "test_that_defaults_are_applied",
                [
                  "self.group2"
                ]
              ],
              [
                "test_that_group_can_be_saved_to_memory",
                [
                  "self.group3"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_that_values_are_min_max_limited",
                "false"
              ],
              [
                "test_basic_read_write",
                "false"
              ],
              [
                "test_same_name_different_database",
                "false"
              ],
              [
                "test_that_pubsub_possible_on_io_group",
                "false"
              ],
              [
                "test_values_can_be_set_to_default",
                "false"
              ],
              [
                "test_arithmatic_operations",
                "false"
              ],
              [
                "test_that_defaults_are_applied",
                "false"
              ],
              [
                "test_that_group_can_be_saved_to_memory",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_that_values_are_min_max_limited",
                "false"
              ],
              [
                "test_basic_read_write",
                "false"
              ],
              [
                "test_same_name_different_database",
                "false"
              ],
              [
                "test_that_pubsub_possible_on_io_group",
                "false"
              ],
              [
                "test_values_can_be_set_to_default",
                "false"
              ],
              [
                "test_arithmatic_operations",
                "false"
              ],
              [
                "test_that_defaults_are_applied",
                "false"
              ],
              [
                "test_that_group_can_be_saved_to_memory",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_that_values_are_min_max_limited",
                  "0"
                ],
                [
                  "test_basic_read_write",
                  "0"
                ],
                [
                  "test_same_name_different_database",
                  "0"
                ],
                [
                  "test_that_pubsub_possible_on_io_group",
                  "0"
                ],
                [
                  "test_values_can_be_set_to_default",
                  "0"
                ],
                [
                  "test_arithmatic_operations",
                  "0"
                ],
                [
                  "test_that_defaults_are_applied",
                  "0"
                ],
                [
                  "test_that_group_can_be_saved_to_memory",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_that_values_are_min_max_limited",
                  "0"
                ],
                [
                  "test_basic_read_write",
                  "0"
                ],
                [
                  "test_same_name_different_database",
                  "0"
                ],
                [
                  "test_that_pubsub_possible_on_io_group",
                  "0"
                ],
                [
                  "test_values_can_be_set_to_default",
                  "0"
                ],
                [
                  "test_arithmatic_operations",
                  "0"
                ],
                [
                  "test_that_defaults_are_applied",
                  "0"
                ],
                [
                  "test_that_group_can_be_saved_to_memory",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_that_values_are_min_max_limited",
                "false"
              ],
              [
                "test_basic_read_write",
                "false"
              ],
              [
                "test_same_name_different_database",
                "false"
              ],
              [
                "test_that_pubsub_possible_on_io_group",
                "false"
              ],
              [
                "test_values_can_be_set_to_default",
                "false"
              ],
              [
                "test_arithmatic_operations",
                "false"
              ],
              [
                "test_that_defaults_are_applied",
                "false"
              ],
              [
                "test_that_group_can_be_saved_to_memory",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_that_values_are_min_max_limited",
                "false"
              ],
              [
                "test_basic_read_write",
                "false"
              ],
              [
                "test_same_name_different_database",
                "false"
              ],
              [
                "test_that_pubsub_possible_on_io_group",
                "false"
              ],
              [
                "test_values_can_be_set_to_default",
                "false"
              ],
              [
                "test_arithmatic_operations",
                "false"
              ],
              [
                "test_that_defaults_are_applied",
                "false"
              ],
              [
                "test_that_group_can_be_saved_to_memory",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_that_values_are_min_max_limited",
                "0"
              ],
              [
                "test_basic_read_write",
                "0"
              ],
              [
                "test_same_name_different_database",
                "0"
              ],
              [
                "test_that_pubsub_possible_on_io_group",
                "0"
              ],
              [
                "test_values_can_be_set_to_default",
                "0"
              ],
              [
                "test_arithmatic_operations",
                "0"
              ],
              [
                "test_that_defaults_are_applied",
                "0"
              ],
              [
                "test_that_group_can_be_saved_to_memory",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_that_values_are_min_max_limited",
                [
                  "group"
                ]
              ],
              [
                "test_basic_read_write",
                [
                  "group4",
                  "group5",
                  "group2",
                  "group1"
                ]
              ],
              [
                "test_same_name_different_database",
                [
                  "group4",
                  "group3",
                  "group2",
                  "group1"
                ]
              ],
              [
                "test_that_pubsub_possible_on_io_group",
                [
                  "msg",
                  "group2",
                  "group"
                ]
              ],
              [
                "test_values_can_be_set_to_default",
                [
                  "group1"
                ]
              ],
              [
                "test_arithmatic_operations",
                [
                  "group3",
                  "group1"
                ]
              ],
              [
                "test_that_defaults_are_applied",
                [
                  "group3",
                  "group"
                ]
              ],
              [
                "test_that_group_can_be_saved_to_memory",
                [
                  "r",
                  "j",
                  "group2",
                  "group"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_that_values_are_min_max_limited",
                [
                  "self.group"
                ]
              ],
              [
                "test_basic_read_write",
                [
                  "self.group",
                  "self.group2"
                ]
              ],
              [
                "test_same_name_different_database",
                [
                  "self.group",
                  "self.group2",
                  "self.group3"
                ]
              ],
              [
                "test_that_pubsub_possible_on_io_group",
                [
                  "self.group",
                  "self.group2"
                ]
              ],
              [
                "test_values_can_be_set_to_default",
                [
                  "self.group"
                ]
              ],
              [
                "test_arithmatic_operations",
                [
                  "self.group",
                  "self.group3"
                ]
              ],
              [
                "test_that_defaults_are_applied",
                [
                  "self.group",
                  "self.group3"
                ]
              ],
              [
                "test_that_group_can_be_saved_to_memory",
                [
                  "self.group",
                  "self.group2"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5867023096617825,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_same_name_different_database",
                  "test_values_can_be_set_to_default",
                  0.8508702234590914
                ],
                [
                  "test_that_defaults_are_applied",
                  "test_that_group_can_be_saved_to_memory",
                  0.35694801791621306
                ],
                [
                  "test_that_defaults_are_applied",
                  "test_same_name_different_database",
                  0.6584114477592348
                ],
                [
                  "test_same_name_different_database",
                  "test_that_group_can_be_saved_to_memory",
                  0.5927013205801799
                ],
                [
                  "test_same_name_different_database",
                  "test_that_values_are_min_max_limited",
                  0.5744027832109552
                ],
                [
                  "test_that_group_can_be_saved_to_memory",
                  "test_arithmatic_operations",
                  0.45893292728760826
                ],
                [
                  "test_that_pubsub_possible_on_io_group",
                  "test_that_values_are_min_max_limited",
                  0.3131388184424803
                ],
                [
                  "test_arithmatic_operations",
                  "test_that_pubsub_possible_on_io_group",
                  0.4495153170734611
                ],
                [
                  "test_arithmatic_operations",
                  "test_that_values_are_min_max_limited",
                  0.49972438937942604
                ],
                [
                  "test_basic_read_write",
                  "test_that_values_are_min_max_limited",
                  0.5290142959179761
                ],
                [
                  "test_that_defaults_are_applied",
                  "test_values_can_be_set_to_default",
                  0.7592488896361452
                ],
                [
                  "test_same_name_different_database",
                  "test_that_pubsub_possible_on_io_group",
                  0.5382131902718592
                ],
                [
                  "test_basic_read_write",
                  "test_that_group_can_be_saved_to_memory",
                  0.516912846916292
                ],
                [
                  "test_basic_read_write",
                  "test_that_pubsub_possible_on_io_group",
                  0.5162884550040051
                ],
                [
                  "test_that_group_can_be_saved_to_memory",
                  "test_that_values_are_min_max_limited",
                  0.3662703770218527
                ],
                [
                  "test_that_group_can_be_saved_to_memory",
                  "test_that_pubsub_possible_on_io_group",
                  0.54013147775426
                ],
                [
                  "test_basic_read_write",
                  "test_arithmatic_operations",
                  0.8946042380404783
                ],
                [
                  "test_that_group_can_be_saved_to_memory",
                  "test_values_can_be_set_to_default",
                  0.5016869661153393
                ],
                [
                  "test_that_defaults_are_applied",
                  "test_basic_read_write",
                  0.6644499270761749
                ],
                [
                  "test_arithmatic_operations",
                  "test_values_can_be_set_to_default",
                  0.886714372409131
                ],
                [
                  "test_basic_read_write",
                  "test_values_can_be_set_to_default",
                  0.9083421834464663
                ],
                [
                  "test_same_name_different_database",
                  "test_arithmatic_operations",
                  0.898622629627284
                ],
                [
                  "test_values_can_be_set_to_default",
                  "test_that_values_are_min_max_limited",
                  0.4625938309822266
                ],
                [
                  "test_that_defaults_are_applied",
                  "test_that_values_are_min_max_limited",
                  0.46087912310202794
                ],
                [
                  "test_that_defaults_are_applied",
                  "test_that_pubsub_possible_on_io_group",
                  0.2307743935073412
                ],
                [
                  "test_basic_read_write",
                  "test_same_name_different_database",
                  0.9346696782045575
                ],
                [
                  "test_that_defaults_are_applied",
                  "test_arithmatic_operations",
                  0.6226876859220492
                ],
                [
                  "test_that_pubsub_possible_on_io_group",
                  "test_values_can_be_set_to_default",
                  0.44091486446579303
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_that_values_are_min_max_limited",
                "false"
              ],
              [
                "test_basic_read_write",
                "false"
              ],
              [
                "test_same_name_different_database",
                "false"
              ],
              [
                "test_that_pubsub_possible_on_io_group",
                "false"
              ],
              [
                "test_values_can_be_set_to_default",
                "false"
              ],
              [
                "test_arithmatic_operations",
                "false"
              ],
              [
                "test_that_defaults_are_applied",
                "false"
              ],
              [
                "test_that_group_can_be_saved_to_memory",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 8
      }
    ]
  },
  {
    "name": "tests_\u0026_test_trigger_io.py",
    "testCases": [
      {
        "name": "TestTriggerIO",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_trigger_read",
                  "[]"
                ],
                [
                  "test_trigger_write",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_trigger_read",
                  "[]"
                ],
                [
                  "test_trigger_write",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_trigger_read",
                  "false"
                ],
                [
                  "test_trigger_write",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_trigger_read",
                  "false"
                ],
                [
                  "test_trigger_write",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_trigger_read",
                  "false"
                ],
                [
                  "test_trigger_write",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_trigger_read",
                  "false"
                ],
                [
                  "test_trigger_write",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_trigger_read",
                "false"
              ],
              [
                "test_trigger_write",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_trigger_read",
                "false"
              ],
              [
                "test_trigger_write",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_trigger_read",
                [
                  "self.testgroup2.ApplyMany.write_callback",
                  "self.testgroup2.ApplyMany.read_callback"
                ]
              ],
              [
                "test_trigger_write",
                [
                  "self.testgroup2.ApplyMany.write_callback",
                  "self.testgroup2.ApplyMany.read_callback"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_trigger_read",
                "false"
              ],
              [
                "test_trigger_write",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_trigger_read",
                "false"
              ],
              [
                "test_trigger_write",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_trigger_read",
                  "0"
                ],
                [
                  "test_trigger_write",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_trigger_read",
                  "0"
                ],
                [
                  "test_trigger_write",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_trigger_read",
                "false"
              ],
              [
                "test_trigger_write",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_trigger_read",
                "false"
              ],
              [
                "test_trigger_write",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_trigger_read",
                "0"
              ],
              [
                "test_trigger_write",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_trigger_read",
                [
                  "a",
                  "b",
                  "tg2",
                  "tg1"
                ]
              ],
              [
                "test_trigger_write",
                [
                  "tg2",
                  "tg1"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_trigger_read",
                [
                  "self.testgroup1",
                  "self.testgroup2"
                ]
              ],
              [
                "test_trigger_write",
                [
                  "self.testgroup1",
                  "self.testgroup2"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6911096763318705,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_trigger_write",
                  "test_trigger_read",
                  0.6911096763318705
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_trigger_read",
                "false"
              ],
              [
                "test_trigger_write",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_html_io_group.py",
    "testCases": [
      {
        "name": "TestHTML",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_boolean_div_conversion",
                  "[]"
                ],
                [
                  "test_different_id",
                  "[]"
                ],
                [
                  "test_json_dumps_basic",
                  "[]"
                ],
                [
                  "test_boolean_table_conversion",
                  "[]"
                ],
                [
                  "test_json_dumps_by_name",
                  "[]"
                ],
                [
                  "test_set_reset_true",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_boolean_div_conversion",
                  "[]"
                ],
                [
                  "test_different_id",
                  "[]"
                ],
                [
                  "test_json_dumps_basic",
                  "[]"
                ],
                [
                  "test_boolean_table_conversion",
                  "[]"
                ],
                [
                  "test_json_dumps_by_name",
                  "[]"
                ],
                [
                  "test_set_reset_true",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_boolean_div_conversion",
                  "false"
                ],
                [
                  "test_different_id",
                  "false"
                ],
                [
                  "test_json_dumps_basic",
                  "false"
                ],
                [
                  "test_boolean_table_conversion",
                  "false"
                ],
                [
                  "test_json_dumps_by_name",
                  "false"
                ],
                [
                  "test_set_reset_true",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_boolean_div_conversion",
                  "false"
                ],
                [
                  "test_different_id",
                  "false"
                ],
                [
                  "test_json_dumps_basic",
                  "false"
                ],
                [
                  "test_boolean_table_conversion",
                  "false"
                ],
                [
                  "test_json_dumps_by_name",
                  "false"
                ],
                [
                  "test_set_reset_true",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_boolean_div_conversion",
                  "false"
                ],
                [
                  "test_different_id",
                  "false"
                ],
                [
                  "test_json_dumps_basic",
                  "false"
                ],
                [
                  "test_boolean_table_conversion",
                  "false"
                ],
                [
                  "test_json_dumps_by_name",
                  "false"
                ],
                [
                  "test_set_reset_true",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_boolean_div_conversion",
                  "false"
                ],
                [
                  "test_different_id",
                  "false"
                ],
                [
                  "test_json_dumps_basic",
                  "false"
                ],
                [
                  "test_boolean_table_conversion",
                  "false"
                ],
                [
                  "test_json_dumps_by_name",
                  "false"
                ],
                [
                  "test_set_reset_true",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_boolean_div_conversion",
                "false"
              ],
              [
                "test_different_id",
                "false"
              ],
              [
                "test_json_dumps_basic",
                "false"
              ],
              [
                "test_boolean_table_conversion",
                "false"
              ],
              [
                "test_json_dumps_by_name",
                "false"
              ],
              [
                "test_set_reset_true",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_boolean_div_conversion",
                "false"
              ],
              [
                "test_different_id",
                "false"
              ],
              [
                "test_json_dumps_basic",
                "false"
              ],
              [
                "test_boolean_table_conversion",
                "false"
              ],
              [
                "test_json_dumps_by_name",
                "false"
              ],
              [
                "test_set_reset_true",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_boolean_div_conversion",
                []
              ],
              [
                "test_different_id",
                []
              ],
              [
                "test_json_dumps_basic",
                []
              ],
              [
                "test_boolean_table_conversion",
                []
              ],
              [
                "test_json_dumps_by_name",
                []
              ],
              [
                "test_set_reset_true",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_boolean_div_conversion",
                "false"
              ],
              [
                "test_different_id",
                "false"
              ],
              [
                "test_json_dumps_basic",
                "false"
              ],
              [
                "test_boolean_table_conversion",
                "false"
              ],
              [
                "test_json_dumps_by_name",
                "false"
              ],
              [
                "test_set_reset_true",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_boolean_div_conversion",
                "false"
              ],
              [
                "test_different_id",
                "false"
              ],
              [
                "test_json_dumps_basic",
                "false"
              ],
              [
                "test_boolean_table_conversion",
                "false"
              ],
              [
                "test_json_dumps_by_name",
                "false"
              ],
              [
                "test_set_reset_true",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_boolean_div_conversion",
                  "0"
                ],
                [
                  "test_different_id",
                  "0"
                ],
                [
                  "test_json_dumps_basic",
                  "0"
                ],
                [
                  "test_boolean_table_conversion",
                  "0"
                ],
                [
                  "test_json_dumps_by_name",
                  "0"
                ],
                [
                  "test_set_reset_true",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_boolean_div_conversion",
                  "0"
                ],
                [
                  "test_different_id",
                  "0"
                ],
                [
                  "test_json_dumps_basic",
                  "0"
                ],
                [
                  "test_boolean_table_conversion",
                  "0"
                ],
                [
                  "test_json_dumps_by_name",
                  "0"
                ],
                [
                  "test_set_reset_true",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_boolean_div_conversion",
                "false"
              ],
              [
                "test_different_id",
                "false"
              ],
              [
                "test_json_dumps_basic",
                "false"
              ],
              [
                "test_boolean_table_conversion",
                "false"
              ],
              [
                "test_json_dumps_by_name",
                "false"
              ],
              [
                "test_set_reset_true",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_boolean_div_conversion",
                "false"
              ],
              [
                "test_different_id",
                "false"
              ],
              [
                "test_json_dumps_basic",
                "false"
              ],
              [
                "test_boolean_table_conversion",
                "false"
              ],
              [
                "test_json_dumps_by_name",
                "false"
              ],
              [
                "test_set_reset_true",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_boolean_div_conversion",
                "0"
              ],
              [
                "test_different_id",
                "0"
              ],
              [
                "test_json_dumps_basic",
                "0"
              ],
              [
                "test_boolean_table_conversion",
                "0"
              ],
              [
                "test_json_dumps_by_name",
                "0"
              ],
              [
                "test_set_reset_true",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_boolean_div_conversion",
                [
                  "expected",
                  "h"
                ]
              ],
              [
                "test_different_id",
                [
                  "expected",
                  "h"
                ]
              ],
              [
                "test_json_dumps_basic",
                [
                  "d",
                  "h",
                  "as_list",
                  "first"
                ]
              ],
              [
                "test_boolean_table_conversion",
                [
                  "expected",
                  "h"
                ]
              ],
              [
                "test_json_dumps_by_name",
                [
                  "d",
                  "h",
                  "as_list"
                ]
              ],
              [
                "test_set_reset_true",
                [
                  "expected",
                  "h"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_boolean_div_conversion",
                []
              ],
              [
                "test_different_id",
                []
              ],
              [
                "test_json_dumps_basic",
                []
              ],
              [
                "test_boolean_table_conversion",
                []
              ],
              [
                "test_json_dumps_by_name",
                []
              ],
              [
                "test_set_reset_true",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4739945608882053,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_boolean_div_conversion",
                  "test_json_dumps_basic",
                  0.20243519889421605
                ],
                [
                  "test_boolean_div_conversion",
                  "test_boolean_table_conversion",
                  0.8314675502509917
                ],
                [
                  "test_boolean_div_conversion",
                  "test_set_reset_true",
                  0.6807093100071075
                ],
                [
                  "test_set_reset_true",
                  "test_json_dumps_basic",
                  0.13647101752510907
                ],
                [
                  "test_boolean_table_conversion",
                  "test_different_id",
                  0.9804608418094994
                ],
                [
                  "test_boolean_div_conversion",
                  "test_json_dumps_by_name",
                  0.1912826138092893
                ],
                [
                  "test_set_reset_true",
                  "test_json_dumps_by_name",
                  0.1424122319558807
                ],
                [
                  "test_different_id",
                  "test_json_dumps_basic",
                  0.1980534816610477
                ],
                [
                  "test_boolean_table_conversion",
                  "test_set_reset_true",
                  0.8068917015810289
                ],
                [
                  "test_different_id",
                  "test_set_reset_true",
                  0.8074441080094696
                ],
                [
                  "test_boolean_table_conversion",
                  "test_json_dumps_basic",
                  0.2103656569654175
                ],
                [
                  "test_boolean_div_conversion",
                  "test_different_id",
                  0.8138117606465548
                ],
                [
                  "test_boolean_table_conversion",
                  "test_json_dumps_by_name",
                  0.20123019284282623
                ],
                [
                  "test_different_id",
                  "test_json_dumps_by_name",
                  0.18945269338520176
                ],
                [
                  "test_json_dumps_basic",
                  "test_json_dumps_by_name",
                  0.7174300539794393
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_boolean_div_conversion",
                "false"
              ],
              [
                "test_different_id",
                "false"
              ],
              [
                "test_json_dumps_basic",
                "false"
              ],
              [
                "test_boolean_table_conversion",
                "false"
              ],
              [
                "test_json_dumps_by_name",
                "false"
              ],
              [
                "test_set_reset_true",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      }
    ]
  },
  {
    "name": "tests_\u0026_test_get_attributes.py",
    "testCases": [
      {
        "name": "TestAttributes",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_get_all_attributes",
                  "[]"
                ],
                [
                  "test_limit_attributes_by_names",
                  "[]"
                ],
                [
                  "test_can_get_single_attribute",
                  "[]"
                ],
                [
                  "test_namespace",
                  "[]"
                ],
                [
                  "test_limit_by_io_filter",
                  "[]"
                ],
                [
                  "test_limit_by_io_result",
                  "[]"
                ],
                [
                  "test_limit_attributes_by_type",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_get_all_attributes",
                  "[]"
                ],
                [
                  "test_limit_attributes_by_names",
                  "[]"
                ],
                [
                  "test_can_get_single_attribute",
                  "[]"
                ],
                [
                  "test_namespace",
                  "[]"
                ],
                [
                  "test_limit_by_io_filter",
                  "[]"
                ],
                [
                  "test_limit_by_io_result",
                  "[]"
                ],
                [
                  "test_limit_attributes_by_type",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_get_all_attributes",
                  "false"
                ],
                [
                  "test_limit_attributes_by_names",
                  "false"
                ],
                [
                  "test_can_get_single_attribute",
                  "true"
                ],
                [
                  "test_namespace",
                  "false"
                ],
                [
                  "test_limit_by_io_filter",
                  "false"
                ],
                [
                  "test_limit_by_io_result",
                  "false"
                ],
                [
                  "test_limit_attributes_by_type",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_get_all_attributes",
                  "false"
                ],
                [
                  "test_limit_attributes_by_names",
                  "false"
                ],
                [
                  "test_can_get_single_attribute",
                  "false"
                ],
                [
                  "test_namespace",
                  "false"
                ],
                [
                  "test_limit_by_io_filter",
                  "false"
                ],
                [
                  "test_limit_by_io_result",
                  "false"
                ],
                [
                  "test_limit_attributes_by_type",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_get_all_attributes",
                  "false"
                ],
                [
                  "test_limit_attributes_by_names",
                  "false"
                ],
                [
                  "test_can_get_single_attribute",
                  "false"
                ],
                [
                  "test_namespace",
                  "false"
                ],
                [
                  "test_limit_by_io_filter",
                  "false"
                ],
                [
                  "test_limit_by_io_result",
                  "false"
                ],
                [
                  "test_limit_attributes_by_type",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_get_all_attributes",
                  "false"
                ],
                [
                  "test_limit_attributes_by_names",
                  "false"
                ],
                [
                  "test_can_get_single_attribute",
                  "false"
                ],
                [
                  "test_namespace",
                  "false"
                ],
                [
                  "test_limit_by_io_filter",
                  "false"
                ],
                [
                  "test_limit_by_io_result",
                  "false"
                ],
                [
                  "test_limit_attributes_by_type",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_all_attributes",
                "false"
              ],
              [
                "test_limit_attributes_by_names",
                "false"
              ],
              [
                "test_can_get_single_attribute",
                "false"
              ],
              [
                "test_namespace",
                "false"
              ],
              [
                "test_limit_by_io_filter",
                "false"
              ],
              [
                "test_limit_by_io_result",
                "false"
              ],
              [
                "test_limit_attributes_by_type",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_get_all_attributes",
                "false"
              ],
              [
                "test_limit_attributes_by_names",
                "false"
              ],
              [
                "test_can_get_single_attribute",
                "false"
              ],
              [
                "test_namespace",
                "false"
              ],
              [
                "test_limit_by_io_filter",
                "false"
              ],
              [
                "test_limit_by_io_result",
                "false"
              ],
              [
                "test_limit_attributes_by_type",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_get_all_attributes",
                []
              ],
              [
                "test_limit_attributes_by_names",
                []
              ],
              [
                "test_can_get_single_attribute",
                []
              ],
              [
                "test_namespace",
                []
              ],
              [
                "test_limit_by_io_filter",
                []
              ],
              [
                "test_limit_by_io_result",
                []
              ],
              [
                "test_limit_attributes_by_type",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_all_attributes",
                "false"
              ],
              [
                "test_limit_attributes_by_names",
                "false"
              ],
              [
                "test_can_get_single_attribute",
                "false"
              ],
              [
                "test_namespace",
                "false"
              ],
              [
                "test_limit_by_io_filter",
                "false"
              ],
              [
                "test_limit_by_io_result",
                "false"
              ],
              [
                "test_limit_attributes_by_type",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_all_attributes",
                "false"
              ],
              [
                "test_limit_attributes_by_names",
                "false"
              ],
              [
                "test_can_get_single_attribute",
                "false"
              ],
              [
                "test_namespace",
                "false"
              ],
              [
                "test_limit_by_io_filter",
                "false"
              ],
              [
                "test_limit_by_io_result",
                "false"
              ],
              [
                "test_limit_attributes_by_type",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_get_all_attributes",
                  "0"
                ],
                [
                  "test_limit_attributes_by_names",
                  "0"
                ],
                [
                  "test_can_get_single_attribute",
                  "0"
                ],
                [
                  "test_namespace",
                  "0"
                ],
                [
                  "test_limit_by_io_filter",
                  "0"
                ],
                [
                  "test_limit_by_io_result",
                  "0"
                ],
                [
                  "test_limit_attributes_by_type",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_get_all_attributes",
                  "0"
                ],
                [
                  "test_limit_attributes_by_names",
                  "0"
                ],
                [
                  "test_can_get_single_attribute",
                  "0"
                ],
                [
                  "test_namespace",
                  "0"
                ],
                [
                  "test_limit_by_io_filter",
                  "0"
                ],
                [
                  "test_limit_by_io_result",
                  "0"
                ],
                [
                  "test_limit_attributes_by_type",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_get_all_attributes",
                "false"
              ],
              [
                "test_limit_attributes_by_names",
                "false"
              ],
              [
                "test_can_get_single_attribute",
                "false"
              ],
              [
                "test_namespace",
                "false"
              ],
              [
                "test_limit_by_io_filter",
                "false"
              ],
              [
                "test_limit_by_io_result",
                "false"
              ],
              [
                "test_limit_attributes_by_type",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_all_attributes",
                "false"
              ],
              [
                "test_limit_attributes_by_names",
                "false"
              ],
              [
                "test_can_get_single_attribute",
                "false"
              ],
              [
                "test_namespace",
                "false"
              ],
              [
                "test_limit_by_io_filter",
                "false"
              ],
              [
                "test_limit_by_io_result",
                "false"
              ],
              [
                "test_limit_attributes_by_type",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_get_all_attributes",
                "0"
              ],
              [
                "test_limit_attributes_by_names",
                "0"
              ],
              [
                "test_can_get_single_attribute",
                "1"
              ],
              [
                "test_namespace",
                "0"
              ],
              [
                "test_limit_by_io_filter",
                "0"
              ],
              [
                "test_limit_by_io_result",
                "0"
              ],
              [
                "test_limit_attributes_by_type",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_get_all_attributes",
                [
                  "attrs"
                ]
              ],
              [
                "test_limit_attributes_by_names",
                [
                  "attrs"
                ]
              ],
              [
                "test_can_get_single_attribute",
                [
                  "name_attr",
                  "key_attr",
                  "addr_attr",
                  "attrs"
                ]
              ],
              [
                "test_namespace",
                []
              ],
              [
                "test_limit_by_io_filter",
                [
                  "attrs"
                ]
              ],
              [
                "test_limit_by_io_result",
                [
                  "attrs"
                ]
              ],
              [
                "test_limit_attributes_by_type",
                [
                  "attrs"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_get_all_attributes",
                []
              ],
              [
                "test_limit_attributes_by_names",
                []
              ],
              [
                "test_can_get_single_attribute",
                []
              ],
              [
                "test_namespace",
                []
              ],
              [
                "test_limit_by_io_filter",
                []
              ],
              [
                "test_limit_by_io_result",
                []
              ],
              [
                "test_limit_attributes_by_type",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5128030893397599,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_limit_attributes_by_names",
                  "test_namespace",
                  0.43516891051214646
                ],
                [
                  "test_namespace",
                  "test_can_get_single_attribute",
                  0.4001461721225476
                ],
                [
                  "test_limit_attributes_by_type",
                  "test_can_get_single_attribute",
                  0.4146442144313647
                ],
                [
                  "test_limit_by_io_filter",
                  "test_namespace",
                  0.37848905962255797
                ],
                [
                  "test_get_all_attributes",
                  "test_limit_by_io_result",
                  0.5958496916478644
                ],
                [
                  "test_limit_by_io_result",
                  "test_namespace",
                  0.36760731104690386
                ],
                [
                  "test_get_all_attributes",
                  "test_namespace",
                  0.4449492083146097
                ],
                [
                  "test_limit_attributes_by_type",
                  "test_namespace",
                  0.36514837167011077
                ],
                [
                  "test_limit_by_io_filter",
                  "test_can_get_single_attribute",
                  0.3683941988065036
                ],
                [
                  "test_limit_attributes_by_type",
                  "test_limit_by_io_result",
                  0.6711560552140244
                ],
                [
                  "test_limit_attributes_by_names",
                  "test_limit_attributes_by_type",
                  0.7661308776828739
                ],
                [
                  "test_limit_by_io_filter",
                  "test_limit_by_io_result",
                  0.6151246852292456
                ],
                [
                  "test_get_all_attributes",
                  "test_limit_attributes_by_names",
                  0.6223759142641418
                ],
                [
                  "test_limit_attributes_by_names",
                  "test_limit_by_io_result",
                  0.6855911701910611
                ],
                [
                  "test_limit_attributes_by_type",
                  "test_limit_by_io_filter",
                  0.6819309069874763
                ],
                [
                  "test_limit_by_io_result",
                  "test_can_get_single_attribute",
                  0.34587592641330467
                ],
                [
                  "test_limit_attributes_by_names",
                  "test_can_get_single_attribute",
                  0.42356231457123616
                ],
                [
                  "test_get_all_attributes",
                  "test_limit_attributes_by_type",
                  0.6092717958449424
                ],
                [
                  "test_get_all_attributes",
                  "test_limit_by_io_filter",
                  0.5128225940683707
                ],
                [
                  "test_get_all_attributes",
                  "test_can_get_single_attribute",
                  0.4794833742895531
                ],
                [
                  "test_limit_attributes_by_names",
                  "test_limit_by_io_filter",
                  0.5851421232041205
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_get_all_attributes",
                "false"
              ],
              [
                "test_limit_attributes_by_names",
                "false"
              ],
              [
                "test_can_get_single_attribute",
                "false"
              ],
              [
                "test_namespace",
                "false"
              ],
              [
                "test_limit_by_io_filter",
                "false"
              ],
              [
                "test_limit_by_io_result",
                "false"
              ],
              [
                "test_limit_attributes_by_type",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      }
    ]
  },
  {
    "name": "tests_\u0026_test_operator_overloads.py",
    "testCases": [
      {
        "name": "TestOperatorOverloads",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_plus_equals",
                  "[]"
                ],
                [
                  "test_add_sub_mult_div",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_plus_equals",
                  "[]"
                ],
                [
                  "test_add_sub_mult_div",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_plus_equals",
                  "false"
                ],
                [
                  "test_add_sub_mult_div",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_plus_equals",
                  "false"
                ],
                [
                  "test_add_sub_mult_div",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_plus_equals",
                  "false"
                ],
                [
                  "test_add_sub_mult_div",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_plus_equals",
                  "false"
                ],
                [
                  "test_add_sub_mult_div",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_plus_equals",
                "false"
              ],
              [
                "test_add_sub_mult_div",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_plus_equals",
                "false"
              ],
              [
                "test_add_sub_mult_div",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_plus_equals",
                []
              ],
              [
                "test_add_sub_mult_div",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_plus_equals",
                "false"
              ],
              [
                "test_add_sub_mult_div",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_plus_equals",
                "false"
              ],
              [
                "test_add_sub_mult_div",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_plus_equals",
                  "0"
                ],
                [
                  "test_add_sub_mult_div",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_plus_equals",
                  "0"
                ],
                [
                  "test_add_sub_mult_div",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_plus_equals",
                "false"
              ],
              [
                "test_add_sub_mult_div",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_plus_equals",
                "false"
              ],
              [
                "test_add_sub_mult_div",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_plus_equals",
                "0"
              ],
              [
                "test_add_sub_mult_div",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_plus_equals",
                [
                  "group"
                ]
              ],
              [
                "test_add_sub_mult_div",
                [
                  "group"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_plus_equals",
                [
                  "self.group"
                ]
              ],
              [
                "test_add_sub_mult_div",
                [
                  "self.group"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8359694279627986,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_add_sub_mult_div",
                  "test_plus_equals",
                  0.8359694279627986
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_plus_equals",
                "false"
              ],
              [
                "test_add_sub_mult_div",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  }
]