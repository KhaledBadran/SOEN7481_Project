[
  {
    "name": "tests_\u0026_test_pipeline.py",
    "testCases": [
      {
        "name": "TestPipeline",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_mock",
                  "[]"
                ],
                [
                  "test_process",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_mock",
                  "[PyAssertStatement]"
                ],
                [
                  "test_process",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_mock",
                  "false"
                ],
                [
                  "test_process",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_mock",
                  "false"
                ],
                [
                  "test_process",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_mock",
                  "false"
                ],
                [
                  "test_process",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_mock",
                  "false"
                ],
                [
                  "test_process",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_mock",
                "false"
              ],
              [
                "test_process",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_mock",
                "false"
              ],
              [
                "test_process",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_mock",
                []
              ],
              [
                "test_process",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_mock",
                "false"
              ],
              [
                "test_process",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_mock",
                "false"
              ],
              [
                "test_process",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_mock",
                  "0"
                ],
                [
                  "test_process",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_mock",
                  "0"
                ],
                [
                  "test_process",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_mock",
                "false"
              ],
              [
                "test_process",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_mock",
                "false"
              ],
              [
                "test_process",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_mock",
                "1"
              ],
              [
                "test_process",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_mock",
                []
              ],
              [
                "test_process",
                [
                  "pipe"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_mock",
                []
              ],
              [
                "test_process",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.253546276418555,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_process",
                  "test_mock",
                  0.253546276418555
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_mock",
                "false"
              ],
              [
                "test_process",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "TestRemotePipeline",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_process_error",
                  "[]"
                ],
                [
                  "test_process",
                  "[]"
                ],
                [
                  "test_url_options",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_process_error",
                  "[]"
                ],
                [
                  "test_process",
                  "[PyAssertStatement]"
                ],
                [
                  "test_url_options",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_process_error",
                  "false"
                ],
                [
                  "test_process",
                  "false"
                ],
                [
                  "test_url_options",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_process_error",
                  "false"
                ],
                [
                  "test_process",
                  "false"
                ],
                [
                  "test_url_options",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_process_error",
                  "false"
                ],
                [
                  "test_process",
                  "false"
                ],
                [
                  "test_url_options",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_process_error",
                  "false"
                ],
                [
                  "test_process",
                  "false"
                ],
                [
                  "test_url_options",
                  "true"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_process_error",
                "false"
              ],
              [
                "test_process",
                "false"
              ],
              [
                "test_url_options",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_process_error",
                "false"
              ],
              [
                "test_process",
                "false"
              ],
              [
                "test_url_options",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_process_error",
                []
              ],
              [
                "test_process",
                []
              ],
              [
                "test_url_options",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_process_error",
                "false"
              ],
              [
                "test_process",
                "false"
              ],
              [
                "test_url_options",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_process_error",
                "false"
              ],
              [
                "test_process",
                "false"
              ],
              [
                "test_url_options",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_process_error",
                  "0"
                ],
                [
                  "test_process",
                  "0"
                ],
                [
                  "test_url_options",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_process_error",
                  "0"
                ],
                [
                  "test_process",
                  "0"
                ],
                [
                  "test_url_options",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_process_error",
                "false"
              ],
              [
                "test_process",
                "false"
              ],
              [
                "test_url_options",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_process_error",
                "false"
              ],
              [
                "test_process",
                "false"
              ],
              [
                "test_url_options",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_process_error",
                "0"
              ],
              [
                "test_process",
                "1"
              ],
              [
                "test_url_options",
                "4"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_process_error",
                [
                  "pipeline"
                ]
              ],
              [
                "test_process",
                []
              ],
              [
                "test_url_options",
                [
                  "p"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_process_error",
                []
              ],
              [
                "test_process",
                []
              ],
              [
                "test_url_options",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4625553621172636,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_url_options",
                  "test_process",
                  0.408529743989514
                ],
                [
                  "test_url_options",
                  "test_process_error",
                  0.3452706513158894
                ],
                [
                  "test_process",
                  "test_process_error",
                  0.6338656910463873
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_process_error",
                "false"
              ],
              [
                "test_process",
                "false"
              ],
              [
                "test_url_options",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_pyjsonnlp.py",
    "testCases": [
      {
        "name": "TestJsonNlpConstruction",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_build_coreference",
                  "[]"
                ],
                [
                  "test_build_constituents_with_root",
                  "[]"
                ],
                [
                  "test_get_base",
                  "[]"
                ],
                [
                  "test_get_base_document",
                  "[]"
                ],
                [
                  "test_build_constituents",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_build_coreference",
                  "[PyAssertStatement]"
                ],
                [
                  "test_build_constituents_with_root",
                  "[PyAssertStatement]"
                ],
                [
                  "test_get_base",
                  "[PyAssertStatement]"
                ],
                [
                  "test_get_base_document",
                  "[PyAssertStatement]"
                ],
                [
                  "test_build_constituents",
                  "[PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_build_coreference",
                  "false"
                ],
                [
                  "test_build_constituents_with_root",
                  "false"
                ],
                [
                  "test_get_base",
                  "false"
                ],
                [
                  "test_get_base_document",
                  "false"
                ],
                [
                  "test_build_constituents",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_build_coreference",
                  "false"
                ],
                [
                  "test_build_constituents_with_root",
                  "false"
                ],
                [
                  "test_get_base",
                  "false"
                ],
                [
                  "test_get_base_document",
                  "false"
                ],
                [
                  "test_build_constituents",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_build_coreference",
                  "false"
                ],
                [
                  "test_build_constituents_with_root",
                  "false"
                ],
                [
                  "test_get_base",
                  "false"
                ],
                [
                  "test_get_base_document",
                  "false"
                ],
                [
                  "test_build_constituents",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_build_coreference",
                  "false"
                ],
                [
                  "test_build_constituents_with_root",
                  "false"
                ],
                [
                  "test_get_base",
                  "false"
                ],
                [
                  "test_get_base_document",
                  "false"
                ],
                [
                  "test_build_constituents",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_build_coreference",
                "false"
              ],
              [
                "test_build_constituents_with_root",
                "false"
              ],
              [
                "test_get_base",
                "false"
              ],
              [
                "test_get_base_document",
                "false"
              ],
              [
                "test_build_constituents",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_build_coreference",
                "false"
              ],
              [
                "test_build_constituents_with_root",
                "false"
              ],
              [
                "test_get_base",
                "false"
              ],
              [
                "test_get_base_document",
                "false"
              ],
              [
                "test_build_constituents",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_build_coreference",
                []
              ],
              [
                "test_build_constituents_with_root",
                []
              ],
              [
                "test_get_base",
                []
              ],
              [
                "test_get_base_document",
                []
              ],
              [
                "test_build_constituents",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_build_coreference",
                "false"
              ],
              [
                "test_build_constituents_with_root",
                "false"
              ],
              [
                "test_get_base",
                "false"
              ],
              [
                "test_get_base_document",
                "false"
              ],
              [
                "test_build_constituents",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_build_coreference",
                "false"
              ],
              [
                "test_build_constituents_with_root",
                "false"
              ],
              [
                "test_get_base",
                "false"
              ],
              [
                "test_get_base_document",
                "false"
              ],
              [
                "test_build_constituents",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_build_coreference",
                  "0"
                ],
                [
                  "test_build_constituents_with_root",
                  "0"
                ],
                [
                  "test_get_base",
                  "0"
                ],
                [
                  "test_get_base_document",
                  "0"
                ],
                [
                  "test_build_constituents",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_build_coreference",
                  "0"
                ],
                [
                  "test_build_constituents_with_root",
                  "0"
                ],
                [
                  "test_get_base",
                  "0"
                ],
                [
                  "test_get_base_document",
                  "0"
                ],
                [
                  "test_build_constituents",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_build_coreference",
                "false"
              ],
              [
                "test_build_constituents_with_root",
                "false"
              ],
              [
                "test_get_base",
                "false"
              ],
              [
                "test_get_base_document",
                "false"
              ],
              [
                "test_build_constituents",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_build_coreference",
                "false"
              ],
              [
                "test_build_constituents_with_root",
                "false"
              ],
              [
                "test_get_base",
                "false"
              ],
              [
                "test_get_base_document",
                "false"
              ],
              [
                "test_build_constituents",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_build_coreference",
                "1"
              ],
              [
                "test_build_constituents_with_root",
                "1"
              ],
              [
                "test_get_base",
                "1"
              ],
              [
                "test_get_base_document",
                "1"
              ],
              [
                "test_build_constituents",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_build_coreference",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_build_constituents_with_root",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_get_base",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_get_base_document",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_build_constituents",
                [
                  "actual",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_build_coreference",
                []
              ],
              [
                "test_build_constituents_with_root",
                []
              ],
              [
                "test_get_base",
                []
              ],
              [
                "test_get_base_document",
                []
              ],
              [
                "test_build_constituents",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4029512944416898,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_get_base",
                  "test_build_coreference",
                  0.1928056433857281
                ],
                [
                  "test_get_base",
                  "test_build_constituents_with_root",
                  0.15787003916213657
                ],
                [
                  "test_get_base_document",
                  "test_build_coreference",
                  0.1977711529620471
                ],
                [
                  "test_build_coreference",
                  "test_build_constituents_with_root",
                  0.5797509043642028
                ],
                [
                  "test_get_base",
                  "test_get_base_document",
                  0.9669032148888984
                ],
                [
                  "test_get_base_document",
                  "test_build_constituents_with_root",
                  0.15635182470940623
                ],
                [
                  "test_build_constituents",
                  "test_build_constituents_with_root",
                  0.7987620630283673
                ],
                [
                  "test_build_coreference",
                  "test_build_constituents",
                  0.6350852961085883
                ],
                [
                  "test_get_base_document",
                  "test_build_constituents",
                  0.1712748426008708
                ],
                [
                  "test_get_base",
                  "test_build_constituents",
                  0.17293796320665233
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_build_coreference",
                "false"
              ],
              [
                "test_build_constituents_with_root",
                "false"
              ],
              [
                "test_get_base",
                "false"
              ],
              [
                "test_get_base_document",
                "false"
              ],
              [
                "test_build_constituents",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      },
      {
        "name": "TestJsonNLPManipulation",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_find_head",
                  "[]"
                ],
                [
                  "test_find_head_long_phrases",
                  "[]"
                ],
                [
                  "test_find_head_no_deps",
                  "[]"
                ],
                [
                  "test_find_head_no_enhanced",
                  "[]"
                ],
                [
                  "test_remove_empty_fields",
                  "[]"
                ],
                [
                  "test_find_head_style_not_found",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_find_head",
                  "[PyAssertStatement]"
                ],
                [
                  "test_find_head_long_phrases",
                  "[PyAssertStatement]"
                ],
                [
                  "test_find_head_no_deps",
                  "[]"
                ],
                [
                  "test_find_head_no_enhanced",
                  "[]"
                ],
                [
                  "test_remove_empty_fields",
                  "[PyAssertStatement]"
                ],
                [
                  "test_find_head_style_not_found",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_find_head",
                  "false"
                ],
                [
                  "test_find_head_long_phrases",
                  "false"
                ],
                [
                  "test_find_head_no_deps",
                  "false"
                ],
                [
                  "test_find_head_no_enhanced",
                  "false"
                ],
                [
                  "test_remove_empty_fields",
                  "false"
                ],
                [
                  "test_find_head_style_not_found",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_find_head",
                  "false"
                ],
                [
                  "test_find_head_long_phrases",
                  "true"
                ],
                [
                  "test_find_head_no_deps",
                  "false"
                ],
                [
                  "test_find_head_no_enhanced",
                  "false"
                ],
                [
                  "test_remove_empty_fields",
                  "false"
                ],
                [
                  "test_find_head_style_not_found",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_find_head",
                  "false"
                ],
                [
                  "test_find_head_long_phrases",
                  "false"
                ],
                [
                  "test_find_head_no_deps",
                  "false"
                ],
                [
                  "test_find_head_no_enhanced",
                  "false"
                ],
                [
                  "test_remove_empty_fields",
                  "false"
                ],
                [
                  "test_find_head_style_not_found",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_find_head",
                  "false"
                ],
                [
                  "test_find_head_long_phrases",
                  "false"
                ],
                [
                  "test_find_head_no_deps",
                  "false"
                ],
                [
                  "test_find_head_no_enhanced",
                  "false"
                ],
                [
                  "test_remove_empty_fields",
                  "false"
                ],
                [
                  "test_find_head_style_not_found",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_head",
                "false"
              ],
              [
                "test_find_head_long_phrases",
                "false"
              ],
              [
                "test_find_head_no_deps",
                "false"
              ],
              [
                "test_find_head_no_enhanced",
                "false"
              ],
              [
                "test_remove_empty_fields",
                "false"
              ],
              [
                "test_find_head_style_not_found",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_find_head",
                "false"
              ],
              [
                "test_find_head_long_phrases",
                "false"
              ],
              [
                "test_find_head_no_deps",
                "false"
              ],
              [
                "test_find_head_no_enhanced",
                "false"
              ],
              [
                "test_remove_empty_fields",
                "false"
              ],
              [
                "test_find_head_style_not_found",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_find_head",
                []
              ],
              [
                "test_find_head_long_phrases",
                []
              ],
              [
                "test_find_head_no_deps",
                []
              ],
              [
                "test_find_head_no_enhanced",
                []
              ],
              [
                "test_remove_empty_fields",
                []
              ],
              [
                "test_find_head_style_not_found",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_head",
                "false"
              ],
              [
                "test_find_head_long_phrases",
                "false"
              ],
              [
                "test_find_head_no_deps",
                "false"
              ],
              [
                "test_find_head_no_enhanced",
                "false"
              ],
              [
                "test_remove_empty_fields",
                "false"
              ],
              [
                "test_find_head_style_not_found",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_head",
                "false"
              ],
              [
                "test_find_head_long_phrases",
                "false"
              ],
              [
                "test_find_head_no_deps",
                "false"
              ],
              [
                "test_find_head_no_enhanced",
                "false"
              ],
              [
                "test_remove_empty_fields",
                "false"
              ],
              [
                "test_find_head_style_not_found",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_find_head",
                  "0"
                ],
                [
                  "test_find_head_long_phrases",
                  "0"
                ],
                [
                  "test_find_head_no_deps",
                  "0"
                ],
                [
                  "test_find_head_no_enhanced",
                  "0"
                ],
                [
                  "test_remove_empty_fields",
                  "0"
                ],
                [
                  "test_find_head_style_not_found",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_find_head",
                  "0"
                ],
                [
                  "test_find_head_long_phrases",
                  "0"
                ],
                [
                  "test_find_head_no_deps",
                  "0"
                ],
                [
                  "test_find_head_no_enhanced",
                  "0"
                ],
                [
                  "test_remove_empty_fields",
                  "0"
                ],
                [
                  "test_find_head_style_not_found",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_find_head",
                "false"
              ],
              [
                "test_find_head_long_phrases",
                "false"
              ],
              [
                "test_find_head_no_deps",
                "false"
              ],
              [
                "test_find_head_no_enhanced",
                "false"
              ],
              [
                "test_remove_empty_fields",
                "false"
              ],
              [
                "test_find_head_style_not_found",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_head",
                "false"
              ],
              [
                "test_find_head_long_phrases",
                "false"
              ],
              [
                "test_find_head_no_deps",
                "false"
              ],
              [
                "test_find_head_no_enhanced",
                "false"
              ],
              [
                "test_remove_empty_fields",
                "false"
              ],
              [
                "test_find_head_style_not_found",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_find_head",
                "1"
              ],
              [
                "test_find_head_long_phrases",
                "1"
              ],
              [
                "test_find_head_no_deps",
                "0"
              ],
              [
                "test_find_head_no_enhanced",
                "0"
              ],
              [
                "test_remove_empty_fields",
                "1"
              ],
              [
                "test_find_head_style_not_found",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_find_head",
                [
                  "token_ids",
                  "actual",
                  "doc"
                ]
              ],
              [
                "test_find_head_long_phrases",
                [
                  "token_ids",
                  "actual",
                  "doc"
                ]
              ],
              [
                "test_find_head_no_deps",
                [
                  "no_deps"
                ]
              ],
              [
                "test_find_head_no_enhanced",
                []
              ],
              [
                "test_remove_empty_fields",
                [
                  "actual",
                  "d",
                  "expected"
                ]
              ],
              [
                "test_find_head_style_not_found",
                [
                  "no_deps"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_find_head",
                []
              ],
              [
                "test_find_head_long_phrases",
                []
              ],
              [
                "test_find_head_no_deps",
                []
              ],
              [
                "test_find_head_no_enhanced",
                []
              ],
              [
                "test_remove_empty_fields",
                []
              ],
              [
                "test_find_head_style_not_found",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4032712569673417,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_remove_empty_fields",
                  "test_find_head_no_deps",
                  0.22734780240413704
                ],
                [
                  "test_remove_empty_fields",
                  "test_find_head_style_not_found",
                  0.2307667581998128
                ],
                [
                  "test_find_head_style_not_found",
                  "test_find_head_no_deps",
                  0.8657680793384717
                ],
                [
                  "test_find_head",
                  "test_find_head_long_phrases",
                  0.9785048548435973
                ],
                [
                  "test_find_head_no_enhanced",
                  "test_find_head_no_deps",
                  0.582323231565392
                ],
                [
                  "test_remove_empty_fields",
                  "test_find_head_long_phrases",
                  0.6942540699705934
                ],
                [
                  "test_find_head_long_phrases",
                  "test_find_head_no_enhanced",
                  0.0812221111268283
                ],
                [
                  "test_find_head",
                  "test_find_head_no_deps",
                  0.2530810349433589
                ],
                [
                  "test_find_head",
                  "test_find_head_style_not_found",
                  0.24661149922284417
                ],
                [
                  "test_find_head_style_not_found",
                  "test_find_head_no_enhanced",
                  0.5488604301969738
                ],
                [
                  "test_remove_empty_fields",
                  "test_find_head",
                  0.6892737731446693
                ],
                [
                  "test_find_head_style_not_found",
                  "test_find_head_long_phrases",
                  0.2526177495092719
                ],
                [
                  "test_find_head",
                  "test_find_head_no_enhanced",
                  0.07158212639926347
                ],
                [
                  "test_find_head_long_phrases",
                  "test_find_head_no_deps",
                  0.2584471750203043
                ],
                [
                  "test_remove_empty_fields",
                  "test_find_head_no_enhanced",
                  0.0684081586246062
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_find_head",
                "false"
              ],
              [
                "test_find_head_long_phrases",
                "false"
              ],
              [
                "test_find_head_no_deps",
                "false"
              ],
              [
                "test_find_head_no_enhanced",
                "false"
              ],
              [
                "test_remove_empty_fields",
                "false"
              ],
              [
                "test_find_head_style_not_found",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      }
    ]
  },
  {
    "name": "tests_\u0026_test_validator.py",
    "testCases": [
      {
        "name": "TestValidation",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_validate_pipeline",
                  "[]"
                ],
                [
                  "test_is_valid",
                  "[]"
                ],
                [
                  "test_format_error",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_validate_pipeline",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_is_valid",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_format_error",
                  "[PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_validate_pipeline",
                  "false"
                ],
                [
                  "test_is_valid",
                  "false"
                ],
                [
                  "test_format_error",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_validate_pipeline",
                  "false"
                ],
                [
                  "test_is_valid",
                  "false"
                ],
                [
                  "test_format_error",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_validate_pipeline",
                  "false"
                ],
                [
                  "test_is_valid",
                  "false"
                ],
                [
                  "test_format_error",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_validate_pipeline",
                  "false"
                ],
                [
                  "test_is_valid",
                  "false"
                ],
                [
                  "test_format_error",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_validate_pipeline",
                "false"
              ],
              [
                "test_is_valid",
                "false"
              ],
              [
                "test_format_error",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_validate_pipeline",
                "false"
              ],
              [
                "test_is_valid",
                "false"
              ],
              [
                "test_format_error",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_validate_pipeline",
                []
              ],
              [
                "test_is_valid",
                []
              ],
              [
                "test_format_error",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_validate_pipeline",
                "false"
              ],
              [
                "test_is_valid",
                "false"
              ],
              [
                "test_format_error",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_validate_pipeline",
                "false"
              ],
              [
                "test_is_valid",
                "false"
              ],
              [
                "test_format_error",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_validate_pipeline",
                  "0"
                ],
                [
                  "test_is_valid",
                  "0"
                ],
                [
                  "test_format_error",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_validate_pipeline",
                  "0"
                ],
                [
                  "test_is_valid",
                  "0"
                ],
                [
                  "test_format_error",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_validate_pipeline",
                "false"
              ],
              [
                "test_is_valid",
                "false"
              ],
              [
                "test_format_error",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_validate_pipeline",
                "false"
              ],
              [
                "test_is_valid",
                "false"
              ],
              [
                "test_format_error",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_validate_pipeline",
                "2"
              ],
              [
                "test_is_valid",
                "2"
              ],
              [
                "test_format_error",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_validate_pipeline",
                []
              ],
              [
                "test_is_valid",
                [
                  "valid",
                  "errors"
                ]
              ],
              [
                "test_format_error",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_validate_pipeline",
                []
              ],
              [
                "test_is_valid",
                []
              ],
              [
                "test_format_error",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.36598062712776597,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_is_valid",
                  "test_format_error",
                  0.337099931231621
                ],
                [
                  "test_validate_pipeline",
                  "test_format_error",
                  0.37670528747840887
                ],
                [
                  "test_is_valid",
                  "test_validate_pipeline",
                  0.384136662673268
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_validate_pipeline",
                "false"
              ],
              [
                "test_is_valid",
                "false"
              ],
              [
                "test_format_error",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_conversion.py",
    "testCases": [
      {
        "name": "TestConllu",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_conllu2json_coref",
                  "[]"
                ],
                [
                  "test_to_conllu_2",
                  "[]"
                ],
                [
                  "test_conllu2json_doc_par_ids",
                  "[]"
                ],
                [
                  "test_conllu2json_doc_par_no_ids",
                  "[]"
                ],
                [
                  "test_conllu2json_ranges",
                  "[]"
                ],
                [
                  "test_conllu2json_multiple_sentences",
                  "[]"
                ],
                [
                  "test_conllu2json_misc",
                  "[]"
                ],
                [
                  "test_parse_conllu",
                  "[]"
                ],
                [
                  "test_conllu2json_newpar_mid_sentence",
                  "[]"
                ],
                [
                  "test_conllu2json_enhanced_dependencies",
                  "[]"
                ],
                [
                  "test_to_conllu",
                  "[]"
                ],
                [
                  "test_conllu2json_features",
                  "[]"
                ],
                [
                  "test_conllu2json_syntax",
                  "[]"
                ],
                [
                  "test_conllu2json_sentence_ids",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_conllu2json_coref",
                  "[]"
                ],
                [
                  "test_to_conllu_2",
                  "[PyAssertStatement]"
                ],
                [
                  "test_conllu2json_doc_par_ids",
                  "[]"
                ],
                [
                  "test_conllu2json_doc_par_no_ids",
                  "[]"
                ],
                [
                  "test_conllu2json_ranges",
                  "[PyAssertStatement]"
                ],
                [
                  "test_conllu2json_multiple_sentences",
                  "[PyAssertStatement]"
                ],
                [
                  "test_conllu2json_misc",
                  "[PyAssertStatement]"
                ],
                [
                  "test_parse_conllu",
                  "[PyAssertStatement]"
                ],
                [
                  "test_conllu2json_newpar_mid_sentence",
                  "[]"
                ],
                [
                  "test_conllu2json_enhanced_dependencies",
                  "[PyAssertStatement]"
                ],
                [
                  "test_to_conllu",
                  "[PyAssertStatement]"
                ],
                [
                  "test_conllu2json_features",
                  "[PyAssertStatement]"
                ],
                [
                  "test_conllu2json_syntax",
                  "[]"
                ],
                [
                  "test_conllu2json_sentence_ids",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_conllu2json_coref",
                  "false"
                ],
                [
                  "test_to_conllu_2",
                  "false"
                ],
                [
                  "test_conllu2json_doc_par_ids",
                  "false"
                ],
                [
                  "test_conllu2json_doc_par_no_ids",
                  "false"
                ],
                [
                  "test_conllu2json_ranges",
                  "false"
                ],
                [
                  "test_conllu2json_multiple_sentences",
                  "false"
                ],
                [
                  "test_conllu2json_misc",
                  "false"
                ],
                [
                  "test_parse_conllu",
                  "false"
                ],
                [
                  "test_conllu2json_newpar_mid_sentence",
                  "false"
                ],
                [
                  "test_conllu2json_enhanced_dependencies",
                  "false"
                ],
                [
                  "test_to_conllu",
                  "false"
                ],
                [
                  "test_conllu2json_features",
                  "false"
                ],
                [
                  "test_conllu2json_syntax",
                  "false"
                ],
                [
                  "test_conllu2json_sentence_ids",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_conllu2json_coref",
                  "false"
                ],
                [
                  "test_to_conllu_2",
                  "false"
                ],
                [
                  "test_conllu2json_doc_par_ids",
                  "false"
                ],
                [
                  "test_conllu2json_doc_par_no_ids",
                  "false"
                ],
                [
                  "test_conllu2json_ranges",
                  "false"
                ],
                [
                  "test_conllu2json_multiple_sentences",
                  "false"
                ],
                [
                  "test_conllu2json_misc",
                  "false"
                ],
                [
                  "test_parse_conllu",
                  "false"
                ],
                [
                  "test_conllu2json_newpar_mid_sentence",
                  "false"
                ],
                [
                  "test_conllu2json_enhanced_dependencies",
                  "false"
                ],
                [
                  "test_to_conllu",
                  "false"
                ],
                [
                  "test_conllu2json_features",
                  "false"
                ],
                [
                  "test_conllu2json_syntax",
                  "false"
                ],
                [
                  "test_conllu2json_sentence_ids",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_conllu2json_coref",
                  "false"
                ],
                [
                  "test_to_conllu_2",
                  "false"
                ],
                [
                  "test_conllu2json_doc_par_ids",
                  "false"
                ],
                [
                  "test_conllu2json_doc_par_no_ids",
                  "false"
                ],
                [
                  "test_conllu2json_ranges",
                  "false"
                ],
                [
                  "test_conllu2json_multiple_sentences",
                  "false"
                ],
                [
                  "test_conllu2json_misc",
                  "false"
                ],
                [
                  "test_parse_conllu",
                  "false"
                ],
                [
                  "test_conllu2json_newpar_mid_sentence",
                  "false"
                ],
                [
                  "test_conllu2json_enhanced_dependencies",
                  "false"
                ],
                [
                  "test_to_conllu",
                  "false"
                ],
                [
                  "test_conllu2json_features",
                  "false"
                ],
                [
                  "test_conllu2json_syntax",
                  "false"
                ],
                [
                  "test_conllu2json_sentence_ids",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_conllu2json_coref",
                  "false"
                ],
                [
                  "test_to_conllu_2",
                  "false"
                ],
                [
                  "test_conllu2json_doc_par_ids",
                  "false"
                ],
                [
                  "test_conllu2json_doc_par_no_ids",
                  "false"
                ],
                [
                  "test_conllu2json_ranges",
                  "false"
                ],
                [
                  "test_conllu2json_multiple_sentences",
                  "false"
                ],
                [
                  "test_conllu2json_misc",
                  "false"
                ],
                [
                  "test_parse_conllu",
                  "false"
                ],
                [
                  "test_conllu2json_newpar_mid_sentence",
                  "false"
                ],
                [
                  "test_conllu2json_enhanced_dependencies",
                  "false"
                ],
                [
                  "test_to_conllu",
                  "false"
                ],
                [
                  "test_conllu2json_features",
                  "false"
                ],
                [
                  "test_conllu2json_syntax",
                  "false"
                ],
                [
                  "test_conllu2json_sentence_ids",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": true,
            "detail": [
              [
                "test_conllu2json_coref",
                "true"
              ],
              [
                "test_to_conllu_2",
                "false"
              ],
              [
                "test_conllu2json_doc_par_ids",
                "true"
              ],
              [
                "test_conllu2json_doc_par_no_ids",
                "true"
              ],
              [
                "test_conllu2json_ranges",
                "false"
              ],
              [
                "test_conllu2json_multiple_sentences",
                "false"
              ],
              [
                "test_conllu2json_misc",
                "false"
              ],
              [
                "test_parse_conllu",
                "false"
              ],
              [
                "test_conllu2json_newpar_mid_sentence",
                "true"
              ],
              [
                "test_conllu2json_enhanced_dependencies",
                "false"
              ],
              [
                "test_to_conllu",
                "false"
              ],
              [
                "test_conllu2json_features",
                "false"
              ],
              [
                "test_conllu2json_syntax",
                "true"
              ],
              [
                "test_conllu2json_sentence_ids",
                "true"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_conllu2json_coref",
                "false"
              ],
              [
                "test_to_conllu_2",
                "false"
              ],
              [
                "test_conllu2json_doc_par_ids",
                "false"
              ],
              [
                "test_conllu2json_doc_par_no_ids",
                "false"
              ],
              [
                "test_conllu2json_ranges",
                "false"
              ],
              [
                "test_conllu2json_multiple_sentences",
                "false"
              ],
              [
                "test_conllu2json_misc",
                "false"
              ],
              [
                "test_parse_conllu",
                "false"
              ],
              [
                "test_conllu2json_newpar_mid_sentence",
                "false"
              ],
              [
                "test_conllu2json_enhanced_dependencies",
                "false"
              ],
              [
                "test_to_conllu",
                "false"
              ],
              [
                "test_conllu2json_features",
                "false"
              ],
              [
                "test_conllu2json_syntax",
                "false"
              ],
              [
                "test_conllu2json_sentence_ids",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_conllu2json_coref",
                []
              ],
              [
                "test_to_conllu_2",
                []
              ],
              [
                "test_conllu2json_doc_par_ids",
                []
              ],
              [
                "test_conllu2json_doc_par_no_ids",
                []
              ],
              [
                "test_conllu2json_ranges",
                []
              ],
              [
                "test_conllu2json_multiple_sentences",
                []
              ],
              [
                "test_conllu2json_misc",
                []
              ],
              [
                "test_parse_conllu",
                []
              ],
              [
                "test_conllu2json_newpar_mid_sentence",
                []
              ],
              [
                "test_conllu2json_enhanced_dependencies",
                []
              ],
              [
                "test_to_conllu",
                []
              ],
              [
                "test_conllu2json_features",
                []
              ],
              [
                "test_conllu2json_syntax",
                []
              ],
              [
                "test_conllu2json_sentence_ids",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_conllu2json_coref",
                "false"
              ],
              [
                "test_to_conllu_2",
                "false"
              ],
              [
                "test_conllu2json_doc_par_ids",
                "false"
              ],
              [
                "test_conllu2json_doc_par_no_ids",
                "false"
              ],
              [
                "test_conllu2json_ranges",
                "false"
              ],
              [
                "test_conllu2json_multiple_sentences",
                "false"
              ],
              [
                "test_conllu2json_misc",
                "false"
              ],
              [
                "test_parse_conllu",
                "false"
              ],
              [
                "test_conllu2json_newpar_mid_sentence",
                "false"
              ],
              [
                "test_conllu2json_enhanced_dependencies",
                "false"
              ],
              [
                "test_to_conllu",
                "false"
              ],
              [
                "test_conllu2json_features",
                "false"
              ],
              [
                "test_conllu2json_syntax",
                "false"
              ],
              [
                "test_conllu2json_sentence_ids",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_conllu2json_coref",
                "false"
              ],
              [
                "test_to_conllu_2",
                "false"
              ],
              [
                "test_conllu2json_doc_par_ids",
                "false"
              ],
              [
                "test_conllu2json_doc_par_no_ids",
                "false"
              ],
              [
                "test_conllu2json_ranges",
                "false"
              ],
              [
                "test_conllu2json_multiple_sentences",
                "false"
              ],
              [
                "test_conllu2json_misc",
                "false"
              ],
              [
                "test_parse_conllu",
                "false"
              ],
              [
                "test_conllu2json_newpar_mid_sentence",
                "false"
              ],
              [
                "test_conllu2json_enhanced_dependencies",
                "false"
              ],
              [
                "test_to_conllu",
                "false"
              ],
              [
                "test_conllu2json_features",
                "false"
              ],
              [
                "test_conllu2json_syntax",
                "false"
              ],
              [
                "test_conllu2json_sentence_ids",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_conllu2json_coref",
                  "0"
                ],
                [
                  "test_to_conllu_2",
                  "0"
                ],
                [
                  "test_conllu2json_doc_par_ids",
                  "0"
                ],
                [
                  "test_conllu2json_doc_par_no_ids",
                  "0"
                ],
                [
                  "test_conllu2json_ranges",
                  "0"
                ],
                [
                  "test_conllu2json_multiple_sentences",
                  "0"
                ],
                [
                  "test_conllu2json_misc",
                  "0"
                ],
                [
                  "test_parse_conllu",
                  "0"
                ],
                [
                  "test_conllu2json_newpar_mid_sentence",
                  "0"
                ],
                [
                  "test_conllu2json_enhanced_dependencies",
                  "0"
                ],
                [
                  "test_to_conllu",
                  "0"
                ],
                [
                  "test_conllu2json_features",
                  "0"
                ],
                [
                  "test_conllu2json_syntax",
                  "0"
                ],
                [
                  "test_conllu2json_sentence_ids",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_conllu2json_coref",
                  "0"
                ],
                [
                  "test_to_conllu_2",
                  "0"
                ],
                [
                  "test_conllu2json_doc_par_ids",
                  "0"
                ],
                [
                  "test_conllu2json_doc_par_no_ids",
                  "0"
                ],
                [
                  "test_conllu2json_ranges",
                  "0"
                ],
                [
                  "test_conllu2json_multiple_sentences",
                  "0"
                ],
                [
                  "test_conllu2json_misc",
                  "0"
                ],
                [
                  "test_parse_conllu",
                  "0"
                ],
                [
                  "test_conllu2json_newpar_mid_sentence",
                  "0"
                ],
                [
                  "test_conllu2json_enhanced_dependencies",
                  "0"
                ],
                [
                  "test_to_conllu",
                  "0"
                ],
                [
                  "test_conllu2json_features",
                  "0"
                ],
                [
                  "test_conllu2json_syntax",
                  "0"
                ],
                [
                  "test_conllu2json_sentence_ids",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_conllu2json_coref",
                "false"
              ],
              [
                "test_to_conllu_2",
                "false"
              ],
              [
                "test_conllu2json_doc_par_ids",
                "false"
              ],
              [
                "test_conllu2json_doc_par_no_ids",
                "false"
              ],
              [
                "test_conllu2json_ranges",
                "false"
              ],
              [
                "test_conllu2json_multiple_sentences",
                "false"
              ],
              [
                "test_conllu2json_misc",
                "false"
              ],
              [
                "test_parse_conllu",
                "false"
              ],
              [
                "test_conllu2json_newpar_mid_sentence",
                "false"
              ],
              [
                "test_conllu2json_enhanced_dependencies",
                "false"
              ],
              [
                "test_to_conllu",
                "false"
              ],
              [
                "test_conllu2json_features",
                "false"
              ],
              [
                "test_conllu2json_syntax",
                "false"
              ],
              [
                "test_conllu2json_sentence_ids",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_conllu2json_coref",
                "false"
              ],
              [
                "test_to_conllu_2",
                "false"
              ],
              [
                "test_conllu2json_doc_par_ids",
                "false"
              ],
              [
                "test_conllu2json_doc_par_no_ids",
                "false"
              ],
              [
                "test_conllu2json_ranges",
                "false"
              ],
              [
                "test_conllu2json_multiple_sentences",
                "false"
              ],
              [
                "test_conllu2json_misc",
                "false"
              ],
              [
                "test_parse_conllu",
                "false"
              ],
              [
                "test_conllu2json_newpar_mid_sentence",
                "false"
              ],
              [
                "test_conllu2json_enhanced_dependencies",
                "false"
              ],
              [
                "test_to_conllu",
                "false"
              ],
              [
                "test_conllu2json_features",
                "false"
              ],
              [
                "test_conllu2json_syntax",
                "false"
              ],
              [
                "test_conllu2json_sentence_ids",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_conllu2json_coref",
                "0"
              ],
              [
                "test_to_conllu_2",
                "1"
              ],
              [
                "test_conllu2json_doc_par_ids",
                "0"
              ],
              [
                "test_conllu2json_doc_par_no_ids",
                "0"
              ],
              [
                "test_conllu2json_ranges",
                "1"
              ],
              [
                "test_conllu2json_multiple_sentences",
                "1"
              ],
              [
                "test_conllu2json_misc",
                "1"
              ],
              [
                "test_parse_conllu",
                "1"
              ],
              [
                "test_conllu2json_newpar_mid_sentence",
                "0"
              ],
              [
                "test_conllu2json_enhanced_dependencies",
                "1"
              ],
              [
                "test_to_conllu",
                "1"
              ],
              [
                "test_conllu2json_features",
                "1"
              ],
              [
                "test_conllu2json_syntax",
                "0"
              ],
              [
                "test_conllu2json_sentence_ids",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_conllu2json_coref",
                []
              ],
              [
                "test_to_conllu_2",
                [
                  "actual",
                  "expected",
                  "j"
                ]
              ],
              [
                "test_conllu2json_doc_par_ids",
                []
              ],
              [
                "test_conllu2json_doc_par_no_ids",
                []
              ],
              [
                "test_conllu2json_ranges",
                [
                  "actual",
                  "expected",
                  "text"
                ]
              ],
              [
                "test_conllu2json_multiple_sentences",
                [
                  "actual",
                  "expected",
                  "text"
                ]
              ],
              [
                "test_conllu2json_misc",
                [
                  "actual",
                  "expected",
                  "text"
                ]
              ],
              [
                "test_parse_conllu",
                [
                  "actual",
                  "expected",
                  "text"
                ]
              ],
              [
                "test_conllu2json_newpar_mid_sentence",
                []
              ],
              [
                "test_conllu2json_enhanced_dependencies",
                [
                  "actual",
                  "expected",
                  "text"
                ]
              ],
              [
                "test_to_conllu",
                [
                  "actual",
                  "expected",
                  "j"
                ]
              ],
              [
                "test_conllu2json_features",
                [
                  "actual",
                  "expected",
                  "text"
                ]
              ],
              [
                "test_conllu2json_syntax",
                []
              ],
              [
                "test_conllu2json_sentence_ids",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_conllu2json_coref",
                []
              ],
              [
                "test_to_conllu_2",
                []
              ],
              [
                "test_conllu2json_doc_par_ids",
                []
              ],
              [
                "test_conllu2json_doc_par_no_ids",
                []
              ],
              [
                "test_conllu2json_ranges",
                []
              ],
              [
                "test_conllu2json_multiple_sentences",
                []
              ],
              [
                "test_conllu2json_misc",
                []
              ],
              [
                "test_parse_conllu",
                []
              ],
              [
                "test_conllu2json_newpar_mid_sentence",
                []
              ],
              [
                "test_conllu2json_enhanced_dependencies",
                []
              ],
              [
                "test_to_conllu",
                []
              ],
              [
                "test_conllu2json_features",
                []
              ],
              [
                "test_conllu2json_syntax",
                []
              ],
              [
                "test_conllu2json_sentence_ids",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.412975581892894,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_conllu2json_enhanced_dependencies",
                  "test_conllu2json_doc_par_no_ids",
                  0.007768235183151499
                ],
                [
                  "test_conllu2json_misc",
                  "test_conllu2json_coref",
                  0.007354407551997591
                ],
                [
                  "test_conllu2json_ranges",
                  "test_conllu2json_doc_par_no_ids",
                  0.009587365275011021
                ],
                [
                  "test_conllu2json_multiple_sentences",
                  "test_conllu2json_sentence_ids",
                  0.006635936019592868
                ],
                [
                  "test_conllu2json_coref",
                  "test_conllu2json_syntax",
                  0.8333333333333335
                ],
                [
                  "test_to_conllu_2",
                  "test_conllu2json_newpar_mid_sentence",
                  0.0011341766745167202
                ],
                [
                  "test_to_conllu_2",
                  "test_conllu2json_features",
                  0.8624710796887104
                ],
                [
                  "test_conllu2json_features",
                  "test_conllu2json_doc_par_no_ids",
                  0.01265202094021271
                ],
                [
                  "test_parse_conllu",
                  "test_conllu2json_doc_par_no_ids",
                  0.0032494432758952085
                ],
                [
                  "test_conllu2json_ranges",
                  "test_conllu2json_doc_par_ids",
                  0.010168936499509082
                ],
                [
                  "test_conllu2json_enhanced_dependencies",
                  "test_conllu2json_coref",
                  0.009514106200328502
                ],
                [
                  "test_conllu2json_multiple_sentences",
                  "test_conllu2json_syntax",
                  0.007167630105701027
                ],
                [
                  "test_to_conllu_2",
                  "test_conllu2json_multiple_sentences",
                  0.9152676174660729
                ],
                [
                  "test_conllu2json_misc",
                  "test_conllu2json_sentence_ids",
                  0.0068088583335584145
                ],
                [
                  "test_conllu2json_features",
                  "test_conllu2json_syntax",
                  0.015495497759264508
                ],
                [
                  "test_to_conllu",
                  "test_conllu2json_misc",
                  0.9326131182837025
                ],
                [
                  "test_parse_conllu",
                  "test_conllu2json_syntax",
                  0.003979738987030541
                ],
                [
                  "test_to_conllu",
                  "test_conllu2json_doc_par_ids",
                  0.0012061787232570261
                ],
                [
                  "test_to_conllu_2",
                  "test_conllu2json_ranges",
                  0.9237845390804234
                ],
                [
                  "test_conllu2json_sentence_ids",
                  "test_conllu2json_newpar_mid_sentence",
                  0.6681531047810609
                ],
                [
                  "test_parse_conllu",
                  "test_conllu2json_doc_par_ids",
                  0.0034465550631997965
                ],
                [
                  "test_conllu2json_doc_par_ids",
                  "test_conllu2json_syntax",
                  0.7216878364870323
                ],
                [
                  "test_conllu2json_features",
                  "test_conllu2json_doc_par_ids",
                  0.013419494703807908
                ],
                [
                  "test_conllu2json_ranges",
                  "test_conllu2json_sentence_ids",
                  0.010871050391149516
                ],
                [
                  "test_conllu2json_ranges",
                  "test_conllu2json_coref",
                  0.01174207645072756
                ],
                [
                  "test_conllu2json_enhanced_dependencies",
                  "test_conllu2json_features",
                  0.901914257133156
                ],
                [
                  "test_conllu2json_ranges",
                  "test_conllu2json_newpar_mid_sentence",
                  0.010168936499509082
                ],
                [
                  "test_conllu2json_sentence_ids",
                  "test_conllu2json_doc_par_ids",
                  0.8017837257372731
                ],
                [
                  "test_parse_conllu",
                  "test_conllu2json_multiple_sentences",
                  0.9995050120758462
                ],
                [
                  "test_conllu2json_misc",
                  "test_conllu2json_doc_par_no_ids",
                  0.010508485086671389
                ],
                [
                  "test_conllu2json_enhanced_dependencies",
                  "test_conllu2json_syntax",
                  0.009514106200328502
                ],
                [
                  "test_conllu2json_features",
                  "test_conllu2json_multiple_sentences",
                  0.8584013184563398
                ],
                [
                  "test_to_conllu_2",
                  "test_conllu2json_syntax",
                  0.001309634416681646
                ],
                [
                  "test_to_conllu",
                  "test_conllu2json_multiple_sentences",
                  0.9188633314689333
                ],
                [
                  "test_conllu2json_sentence_ids",
                  "test_conllu2json_syntax",
                  0.7715167498104595
                ],
                [
                  "test_conllu2json_enhanced_dependencies",
                  "test_conllu2json_doc_par_ids",
                  0.00823945766378752
                ],
                [
                  "test_to_conllu",
                  "test_to_conllu_2",
                  0.9953748350450377
                ],
                [
                  "test_to_conllu_2",
                  "test_conllu2json_doc_par_ids",
                  0.0011341766745167202
                ],
                [
                  "test_conllu2json_ranges",
                  "test_conllu2json_syntax",
                  0.01174207645072756
                ],
                [
                  "test_conllu2json_multiple_sentences",
                  "test_conllu2json_newpar_mid_sentence",
                  0.00620734975646723
                ],
                [
                  "test_conllu2json_multiple_sentences",
                  "test_conllu2json_coref",
                  0.007167630105701027
                ],
                [
                  "test_to_conllu",
                  "test_conllu2json_doc_par_no_ids",
                  0.013077756369582288
                ],
                [
                  "test_to_conllu_2",
                  "test_conllu2json_sentence_ids",
                  0.0012124858663177687
                ],
                [
                  "test_conllu2json_sentence_ids",
                  "test_conllu2json_doc_par_no_ids",
                  0.7559289460184544
                ],
                [
                  "test_conllu2json_newpar_mid_sentence",
                  "test_conllu2json_coref",
                  0.7216878364870323
                ],
                [
                  "test_to_conllu",
                  "test_conllu2json_coref",
                  0.0013927752211264864
                ],
                [
                  "test_conllu2json_misc",
                  "test_conllu2json_newpar_mid_sentence",
                  0.006369103769814037
                ],
                [
                  "test_to_conllu",
                  "test_parse_conllu",
                  0.9186661516719746
                ],
                [
                  "test_parse_conllu",
                  "test_conllu2json_misc",
                  0.9894184651451374
                ],
                [
                  "test_conllu2json_misc",
                  "test_conllu2json_multiple_sentences",
                  0.9888360237911887
                ],
                [
                  "test_to_conllu",
                  "test_conllu2json_syntax",
                  0.0013927752211264864
                ],
                [
                  "test_conllu2json_features",
                  "test_conllu2json_misc",
                  0.8961545679091306
                ],
                [
                  "test_conllu2json_features",
                  "test_conllu2json_ranges",
                  0.9486155199989693
                ],
                [
                  "test_conllu2json_multiple_sentences",
                  "test_conllu2json_doc_par_ids",
                  0.00620734975646723
                ],
                [
                  "test_conllu2json_doc_par_ids",
                  "test_conllu2json_newpar_mid_sentence",
                  0.6249999999999999
                ],
                [
                  "test_parse_conllu",
                  "test_conllu2json_ranges",
                  0.9692468973777166
                ],
                [
                  "test_conllu2json_newpar_mid_sentence",
                  "test_conllu2json_syntax",
                  0.7216878364870323
                ],
                [
                  "test_to_conllu_2",
                  "test_conllu2json_coref",
                  0.001309634416681646
                ],
                [
                  "test_conllu2json_sentence_ids",
                  "test_conllu2json_coref",
                  0.7715167498104595
                ],
                [
                  "test_conllu2json_doc_par_ids",
                  "test_conllu2json_doc_par_no_ids",
                  0.9428090415820632
                ],
                [
                  "test_conllu2json_misc",
                  "test_conllu2json_doc_par_ids",
                  0.006369103769814037
                ],
                [
                  "test_conllu2json_doc_par_no_ids",
                  "test_conllu2json_syntax",
                  0.6804138174397718
                ],
                [
                  "test_to_conllu_2",
                  "test_conllu2json_enhanced_dependencies",
                  0.9210183482939082
                ],
                [
                  "test_conllu2json_enhanced_dependencies",
                  "test_conllu2json_multiple_sentences",
                  0.9783052999588469
                ],
                [
                  "test_conllu2json_enhanced_dependencies",
                  "test_conllu2json_ranges",
                  0.9840726982291556
                ],
                [
                  "test_parse_conllu",
                  "test_conllu2json_features",
                  0.8669755089315152
                ],
                [
                  "test_to_conllu_2",
                  "test_conllu2json_doc_par_no_ids",
                  0.01283174428183009
                ],
                [
                  "test_conllu2json_enhanced_dependencies",
                  "test_conllu2json_newpar_mid_sentence",
                  0.00823945766378752
                ],
                [
                  "test_to_conllu",
                  "test_conllu2json_enhanced_dependencies",
                  0.9224393415369738
                ],
                [
                  "test_parse_conllu",
                  "test_conllu2json_enhanced_dependencies",
                  0.9805173231023963
                ],
                [
                  "test_conllu2json_multiple_sentences",
                  "test_conllu2json_doc_par_no_ids",
                  0.005852345474659524
                ],
                [
                  "test_to_conllu_2",
                  "test_parse_conllu",
                  0.9153319926453972
                ],
                [
                  "test_conllu2json_ranges",
                  "test_conllu2json_multiple_sentences",
                  0.9651376047524665
                ],
                [
                  "test_conllu2json_misc",
                  "test_conllu2json_ranges",
                  0.982547952421224
                ],
                [
                  "test_to_conllu",
                  "test_conllu2json_features",
                  0.8543619473449281
                ],
                [
                  "test_to_conllu",
                  "test_conllu2json_sentence_ids",
                  0.001289459294184061
                ],
                [
                  "test_conllu2json_enhanced_dependencies",
                  "test_conllu2json_sentence_ids",
                  0.008808350751634782
                ],
                [
                  "test_conllu2json_doc_par_ids",
                  "test_conllu2json_coref",
                  0.7216878364870323
                ],
                [
                  "test_to_conllu",
                  "test_conllu2json_newpar_mid_sentence",
                  0.0012061787232570261
                ],
                [
                  "test_conllu2json_features",
                  "test_conllu2json_coref",
                  0.015495497759264508
                ],
                [
                  "test_parse_conllu",
                  "test_conllu2json_sentence_ids",
                  0.003684522346041328
                ],
                [
                  "test_parse_conllu",
                  "test_conllu2json_coref",
                  0.003979738987030541
                ],
                [
                  "test_conllu2json_features",
                  "test_conllu2json_newpar_mid_sentence",
                  0.013419494703807908
                ],
                [
                  "test_conllu2json_misc",
                  "test_conllu2json_syntax",
                  0.007354407551997591
                ],
                [
                  "test_parse_conllu",
                  "test_conllu2json_newpar_mid_sentence",
                  0.0034465550631997965
                ],
                [
                  "test_conllu2json_doc_par_no_ids",
                  "test_conllu2json_newpar_mid_sentence",
                  0.5892556509887895
                ],
                [
                  "test_to_conllu",
                  "test_conllu2json_ranges",
                  0.9217319154063642
                ],
                [
                  "test_conllu2json_enhanced_dependencies",
                  "test_conllu2json_misc",
                  0.9865069473705611
                ],
                [
                  "test_to_conllu_2",
                  "test_conllu2json_misc",
                  0.9303437135122767
                ],
                [
                  "test_conllu2json_doc_par_no_ids",
                  "test_conllu2json_coref",
                  0.6804138174397718
                ],
                [
                  "test_conllu2json_features",
                  "test_conllu2json_sentence_ids",
                  0.014346043281507615
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_conllu2json_coref",
                "false"
              ],
              [
                "test_to_conllu_2",
                "false"
              ],
              [
                "test_conllu2json_doc_par_ids",
                "false"
              ],
              [
                "test_conllu2json_doc_par_no_ids",
                "false"
              ],
              [
                "test_conllu2json_ranges",
                "false"
              ],
              [
                "test_conllu2json_multiple_sentences",
                "false"
              ],
              [
                "test_conllu2json_misc",
                "false"
              ],
              [
                "test_parse_conllu",
                "false"
              ],
              [
                "test_conllu2json_newpar_mid_sentence",
                "false"
              ],
              [
                "test_conllu2json_enhanced_dependencies",
                "false"
              ],
              [
                "test_to_conllu",
                "false"
              ],
              [
                "test_conllu2json_features",
                "false"
              ],
              [
                "test_conllu2json_syntax",
                "false"
              ],
              [
                "test_conllu2json_sentence_ids",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 14
      }
    ]
  },
  {
    "name": "tests_\u0026_test_dependencies.py",
    "testCases": [
      {
        "name": "TestUniversalDependencies",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_get_leaves_np",
                  "[]"
                ],
                [
                  "test_get_leaves_multi_branches",
                  "[]"
                ],
                [
                  "test_is_arc_present_below",
                  "[]"
                ],
                [
                  "test_get_leaves_by_arc_dobj",
                  "[]"
                ],
                [
                  "test_get_child_with_arc",
                  "[]"
                ],
                [
                  "test_get_leaves_by_arc_amod",
                  "[]"
                ],
                [
                  "test_get_leaves_all",
                  "[]"
                ],
                [
                  "test_get_leaves_by_arc_xcomp",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_get_leaves_np",
                  "[PyAssertStatement]"
                ],
                [
                  "test_get_leaves_multi_branches",
                  "[PyAssertStatement]"
                ],
                [
                  "test_is_arc_present_below",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_get_leaves_by_arc_dobj",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_get_child_with_arc",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_get_leaves_by_arc_amod",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_get_leaves_all",
                  "[PyAssertStatement]"
                ],
                [
                  "test_get_leaves_by_arc_xcomp",
                  "[PyAssertStatement, PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_get_leaves_np",
                  "false"
                ],
                [
                  "test_get_leaves_multi_branches",
                  "false"
                ],
                [
                  "test_is_arc_present_below",
                  "false"
                ],
                [
                  "test_get_leaves_by_arc_dobj",
                  "false"
                ],
                [
                  "test_get_child_with_arc",
                  "false"
                ],
                [
                  "test_get_leaves_by_arc_amod",
                  "false"
                ],
                [
                  "test_get_leaves_all",
                  "false"
                ],
                [
                  "test_get_leaves_by_arc_xcomp",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_get_leaves_np",
                  "false"
                ],
                [
                  "test_get_leaves_multi_branches",
                  "false"
                ],
                [
                  "test_is_arc_present_below",
                  "false"
                ],
                [
                  "test_get_leaves_by_arc_dobj",
                  "false"
                ],
                [
                  "test_get_child_with_arc",
                  "false"
                ],
                [
                  "test_get_leaves_by_arc_amod",
                  "false"
                ],
                [
                  "test_get_leaves_all",
                  "false"
                ],
                [
                  "test_get_leaves_by_arc_xcomp",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_get_leaves_np",
                  "false"
                ],
                [
                  "test_get_leaves_multi_branches",
                  "false"
                ],
                [
                  "test_is_arc_present_below",
                  "false"
                ],
                [
                  "test_get_leaves_by_arc_dobj",
                  "false"
                ],
                [
                  "test_get_child_with_arc",
                  "false"
                ],
                [
                  "test_get_leaves_by_arc_amod",
                  "false"
                ],
                [
                  "test_get_leaves_all",
                  "false"
                ],
                [
                  "test_get_leaves_by_arc_xcomp",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_get_leaves_np",
                  "false"
                ],
                [
                  "test_get_leaves_multi_branches",
                  "false"
                ],
                [
                  "test_is_arc_present_below",
                  "false"
                ],
                [
                  "test_get_leaves_by_arc_dobj",
                  "false"
                ],
                [
                  "test_get_child_with_arc",
                  "false"
                ],
                [
                  "test_get_leaves_by_arc_amod",
                  "false"
                ],
                [
                  "test_get_leaves_all",
                  "false"
                ],
                [
                  "test_get_leaves_by_arc_xcomp",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_leaves_np",
                "false"
              ],
              [
                "test_get_leaves_multi_branches",
                "false"
              ],
              [
                "test_is_arc_present_below",
                "false"
              ],
              [
                "test_get_leaves_by_arc_dobj",
                "false"
              ],
              [
                "test_get_child_with_arc",
                "false"
              ],
              [
                "test_get_leaves_by_arc_amod",
                "false"
              ],
              [
                "test_get_leaves_all",
                "false"
              ],
              [
                "test_get_leaves_by_arc_xcomp",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_get_leaves_np",
                "false"
              ],
              [
                "test_get_leaves_multi_branches",
                "false"
              ],
              [
                "test_is_arc_present_below",
                "false"
              ],
              [
                "test_get_leaves_by_arc_dobj",
                "false"
              ],
              [
                "test_get_child_with_arc",
                "false"
              ],
              [
                "test_get_leaves_by_arc_amod",
                "false"
              ],
              [
                "test_get_leaves_all",
                "false"
              ],
              [
                "test_get_leaves_by_arc_xcomp",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_get_leaves_np",
                []
              ],
              [
                "test_get_leaves_multi_branches",
                []
              ],
              [
                "test_is_arc_present_below",
                []
              ],
              [
                "test_get_leaves_by_arc_dobj",
                []
              ],
              [
                "test_get_child_with_arc",
                []
              ],
              [
                "test_get_leaves_by_arc_amod",
                []
              ],
              [
                "test_get_leaves_all",
                []
              ],
              [
                "test_get_leaves_by_arc_xcomp",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_leaves_np",
                "false"
              ],
              [
                "test_get_leaves_multi_branches",
                "false"
              ],
              [
                "test_is_arc_present_below",
                "false"
              ],
              [
                "test_get_leaves_by_arc_dobj",
                "false"
              ],
              [
                "test_get_child_with_arc",
                "false"
              ],
              [
                "test_get_leaves_by_arc_amod",
                "false"
              ],
              [
                "test_get_leaves_all",
                "false"
              ],
              [
                "test_get_leaves_by_arc_xcomp",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_leaves_np",
                "false"
              ],
              [
                "test_get_leaves_multi_branches",
                "false"
              ],
              [
                "test_is_arc_present_below",
                "false"
              ],
              [
                "test_get_leaves_by_arc_dobj",
                "false"
              ],
              [
                "test_get_child_with_arc",
                "false"
              ],
              [
                "test_get_leaves_by_arc_amod",
                "false"
              ],
              [
                "test_get_leaves_all",
                "false"
              ],
              [
                "test_get_leaves_by_arc_xcomp",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_get_leaves_np",
                  "0"
                ],
                [
                  "test_get_leaves_multi_branches",
                  "0"
                ],
                [
                  "test_is_arc_present_below",
                  "0"
                ],
                [
                  "test_get_leaves_by_arc_dobj",
                  "0"
                ],
                [
                  "test_get_child_with_arc",
                  "0"
                ],
                [
                  "test_get_leaves_by_arc_amod",
                  "0"
                ],
                [
                  "test_get_leaves_all",
                  "0"
                ],
                [
                  "test_get_leaves_by_arc_xcomp",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_get_leaves_np",
                  "0"
                ],
                [
                  "test_get_leaves_multi_branches",
                  "0"
                ],
                [
                  "test_is_arc_present_below",
                  "0"
                ],
                [
                  "test_get_leaves_by_arc_dobj",
                  "0"
                ],
                [
                  "test_get_child_with_arc",
                  "0"
                ],
                [
                  "test_get_leaves_by_arc_amod",
                  "0"
                ],
                [
                  "test_get_leaves_all",
                  "0"
                ],
                [
                  "test_get_leaves_by_arc_xcomp",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_get_leaves_np",
                "false"
              ],
              [
                "test_get_leaves_multi_branches",
                "false"
              ],
              [
                "test_is_arc_present_below",
                "false"
              ],
              [
                "test_get_leaves_by_arc_dobj",
                "false"
              ],
              [
                "test_get_child_with_arc",
                "false"
              ],
              [
                "test_get_leaves_by_arc_amod",
                "false"
              ],
              [
                "test_get_leaves_all",
                "false"
              ],
              [
                "test_get_leaves_by_arc_xcomp",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_leaves_np",
                "false"
              ],
              [
                "test_get_leaves_multi_branches",
                "false"
              ],
              [
                "test_is_arc_present_below",
                "false"
              ],
              [
                "test_get_leaves_by_arc_dobj",
                "false"
              ],
              [
                "test_get_child_with_arc",
                "false"
              ],
              [
                "test_get_leaves_by_arc_amod",
                "false"
              ],
              [
                "test_get_leaves_all",
                "false"
              ],
              [
                "test_get_leaves_by_arc_xcomp",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_leaves_np",
                "1"
              ],
              [
                "test_get_leaves_multi_branches",
                "1"
              ],
              [
                "test_is_arc_present_below",
                "3"
              ],
              [
                "test_get_leaves_by_arc_dobj",
                "2"
              ],
              [
                "test_get_child_with_arc",
                "2"
              ],
              [
                "test_get_leaves_by_arc_amod",
                "2"
              ],
              [
                "test_get_leaves_all",
                "1"
              ],
              [
                "test_get_leaves_by_arc_xcomp",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_get_leaves_np",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_get_leaves_multi_branches",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_is_arc_present_below",
                []
              ],
              [
                "test_get_leaves_by_arc_dobj",
                [
                  "head",
                  "actual",
                  "expected",
                  "arcs"
                ]
              ],
              [
                "test_get_child_with_arc",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_get_leaves_by_arc_amod",
                [
                  "head",
                  "actual",
                  "expected",
                  "arcs"
                ]
              ],
              [
                "test_get_leaves_all",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_get_leaves_by_arc_xcomp",
                [
                  "head",
                  "actual",
                  "expected",
                  "arcs"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_get_leaves_np",
                [
                  "self.d"
                ]
              ],
              [
                "test_get_leaves_multi_branches",
                [
                  "self.d"
                ]
              ],
              [
                "test_is_arc_present_below",
                [
                  "self.d"
                ]
              ],
              [
                "test_get_leaves_by_arc_dobj",
                [
                  "self.d"
                ]
              ],
              [
                "test_get_child_with_arc",
                [
                  "self.d"
                ]
              ],
              [
                "test_get_leaves_by_arc_amod",
                [
                  "self.d"
                ]
              ],
              [
                "test_get_leaves_all",
                [
                  "self.d"
                ]
              ],
              [
                "test_get_leaves_by_arc_xcomp",
                [
                  "self.d"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4829296861395615,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_get_leaves_all",
                  "test_is_arc_present_below",
                  0.09670980886427658
                ],
                [
                  "test_get_leaves_np",
                  "test_get_leaves_by_arc_xcomp",
                  0.6775074858941582
                ],
                [
                  "test_get_leaves_np",
                  "test_get_leaves_by_arc_dobj",
                  0.7134983553924282
                ],
                [
                  "test_get_leaves_all",
                  "test_get_leaves_by_arc_xcomp",
                  0.6463624381033901
                ],
                [
                  "test_get_leaves_by_arc_amod",
                  "test_get_child_with_arc",
                  0.22053761267749916
                ],
                [
                  "test_get_leaves_by_arc_xcomp",
                  "test_get_child_with_arc",
                  0.21504618791405758
                ],
                [
                  "test_get_leaves_multi_branches",
                  "test_get_leaves_by_arc_dobj",
                  0.6547133229629379
                ],
                [
                  "test_get_leaves_np",
                  "test_is_arc_present_below",
                  0.10499013139145201
                ],
                [
                  "test_get_leaves_np",
                  "test_get_leaves_by_arc_amod",
                  0.6203645837318313
                ],
                [
                  "test_get_leaves_by_arc_dobj",
                  "test_is_arc_present_below",
                  0.231446952854798
                ],
                [
                  "test_get_leaves_multi_branches",
                  "test_get_leaves_by_arc_xcomp",
                  0.7128791772183246
                ],
                [
                  "test_get_leaves_multi_branches",
                  "test_get_child_with_arc",
                  0.17910983818070986
                ],
                [
                  "test_get_leaves_by_arc_dobj",
                  "test_get_child_with_arc",
                  0.21866066269173204
                ],
                [
                  "test_get_leaves_np",
                  "test_get_leaves_multi_branches",
                  0.8824975032927699
                ],
                [
                  "test_get_leaves_multi_branches",
                  "test_is_arc_present_below",
                  0.0997807233482083
                ],
                [
                  "test_is_arc_present_below",
                  "test_get_child_with_arc",
                  0.15162734342353806
                ],
                [
                  "test_get_leaves_all",
                  "test_get_child_with_arc",
                  0.310648051989211
                ],
                [
                  "test_get_leaves_by_arc_xcomp",
                  "test_get_leaves_by_arc_dobj",
                  0.9334629899753888
                ],
                [
                  "test_get_leaves_np",
                  "test_get_child_with_arc",
                  0.18846090520381162
                ],
                [
                  "test_get_leaves_by_arc_xcomp",
                  "test_get_leaves_by_arc_amod",
                  0.8742274308808125
                ],
                [
                  "test_get_leaves_by_arc_xcomp",
                  "test_is_arc_present_below",
                  0.227621119880704
                ],
                [
                  "test_get_leaves_by_arc_amod",
                  "test_is_arc_present_below",
                  0.23343365841728453
                ],
                [
                  "test_get_leaves_all",
                  "test_get_leaves_by_arc_amod",
                  0.571437901103118
                ],
                [
                  "test_get_leaves_all",
                  "test_get_leaves_multi_branches",
                  0.8441622892989753
                ],
                [
                  "test_get_leaves_all",
                  "test_get_leaves_np",
                  0.8224396186997113
                ],
                [
                  "test_get_leaves_multi_branches",
                  "test_get_leaves_by_arc_amod",
                  0.5895832882957228
                ],
                [
                  "test_get_leaves_all",
                  "test_get_leaves_by_arc_dobj",
                  0.6119004722841045
                ],
                [
                  "test_get_leaves_by_arc_dobj",
                  "test_get_leaves_by_arc_amod",
                  0.8889213579367651
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_get_leaves_np",
                "false"
              ],
              [
                "test_get_leaves_multi_branches",
                "false"
              ],
              [
                "test_is_arc_present_below",
                "false"
              ],
              [
                "test_get_leaves_by_arc_dobj",
                "false"
              ],
              [
                "test_get_child_with_arc",
                "false"
              ],
              [
                "test_get_leaves_by_arc_amod",
                "false"
              ],
              [
                "test_get_leaves_all",
                "false"
              ],
              [
                "test_get_leaves_by_arc_xcomp",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 8
      }
    ]
  },
  {
    "name": "tests_\u0026_test_flask_server.py",
    "testCases": [
      {
        "name": "TestFlaskMicroservice",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_write_text",
                  "[]"
                ],
                [
                  "test_get_output_format",
                  "[]"
                ],
                [
                  "test_write_json",
                  "[]"
                ],
                [
                  "test_debug",
                  "[]"
                ],
                [
                  "test_handle_error",
                  "[]"
                ],
                [
                  "test_get_args",
                  "[]"
                ],
                [
                  "test_get_text",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_write_text",
                  "[]"
                ],
                [
                  "test_get_output_format",
                  "[]"
                ],
                [
                  "test_write_json",
                  "[]"
                ],
                [
                  "test_debug",
                  "[]"
                ],
                [
                  "test_handle_error",
                  "[]"
                ],
                [
                  "test_get_args",
                  "[]"
                ],
                [
                  "test_get_text",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_write_text",
                  "false"
                ],
                [
                  "test_get_output_format",
                  "false"
                ],
                [
                  "test_write_json",
                  "false"
                ],
                [
                  "test_debug",
                  "false"
                ],
                [
                  "test_handle_error",
                  "false"
                ],
                [
                  "test_get_args",
                  "false"
                ],
                [
                  "test_get_text",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_write_text",
                  "false"
                ],
                [
                  "test_get_output_format",
                  "false"
                ],
                [
                  "test_write_json",
                  "false"
                ],
                [
                  "test_debug",
                  "false"
                ],
                [
                  "test_handle_error",
                  "false"
                ],
                [
                  "test_get_args",
                  "false"
                ],
                [
                  "test_get_text",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_write_text",
                  "false"
                ],
                [
                  "test_get_output_format",
                  "false"
                ],
                [
                  "test_write_json",
                  "false"
                ],
                [
                  "test_debug",
                  "false"
                ],
                [
                  "test_handle_error",
                  "false"
                ],
                [
                  "test_get_args",
                  "false"
                ],
                [
                  "test_get_text",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_write_text",
                  "false"
                ],
                [
                  "test_get_output_format",
                  "false"
                ],
                [
                  "test_write_json",
                  "false"
                ],
                [
                  "test_debug",
                  "false"
                ],
                [
                  "test_handle_error",
                  "false"
                ],
                [
                  "test_get_args",
                  "false"
                ],
                [
                  "test_get_text",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": true,
            "detail": [
              [
                "test_write_text",
                "true"
              ],
              [
                "test_get_output_format",
                "true"
              ],
              [
                "test_write_json",
                "true"
              ],
              [
                "test_debug",
                "true"
              ],
              [
                "test_handle_error",
                "true"
              ],
              [
                "test_get_args",
                "true"
              ],
              [
                "test_get_text",
                "true"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_write_text",
                "false"
              ],
              [
                "test_get_output_format",
                "false"
              ],
              [
                "test_write_json",
                "false"
              ],
              [
                "test_debug",
                "false"
              ],
              [
                "test_handle_error",
                "false"
              ],
              [
                "test_get_args",
                "false"
              ],
              [
                "test_get_text",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_write_text",
                [
                  "self.f"
                ]
              ],
              [
                "test_get_output_format",
                [
                  "self.f"
                ]
              ],
              [
                "test_write_json",
                [
                  "self.f"
                ]
              ],
              [
                "test_debug",
                [
                  "self.f"
                ]
              ],
              [
                "test_handle_error",
                [
                  "self.f"
                ]
              ],
              [
                "test_get_args",
                [
                  "self.f"
                ]
              ],
              [
                "test_get_text",
                [
                  "self.f"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_write_text",
                "false"
              ],
              [
                "test_get_output_format",
                "false"
              ],
              [
                "test_write_json",
                "false"
              ],
              [
                "test_debug",
                "false"
              ],
              [
                "test_handle_error",
                "false"
              ],
              [
                "test_get_args",
                "false"
              ],
              [
                "test_get_text",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_write_text",
                "false"
              ],
              [
                "test_get_output_format",
                "false"
              ],
              [
                "test_write_json",
                "false"
              ],
              [
                "test_debug",
                "false"
              ],
              [
                "test_handle_error",
                "false"
              ],
              [
                "test_get_args",
                "false"
              ],
              [
                "test_get_text",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_write_text",
                  "0"
                ],
                [
                  "test_get_output_format",
                  "0"
                ],
                [
                  "test_write_json",
                  "0"
                ],
                [
                  "test_debug",
                  "0"
                ],
                [
                  "test_handle_error",
                  "0"
                ],
                [
                  "test_get_args",
                  "0"
                ],
                [
                  "test_get_text",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_write_text",
                  "0"
                ],
                [
                  "test_get_output_format",
                  "0"
                ],
                [
                  "test_write_json",
                  "0"
                ],
                [
                  "test_debug",
                  "0"
                ],
                [
                  "test_handle_error",
                  "0"
                ],
                [
                  "test_get_args",
                  "0"
                ],
                [
                  "test_get_text",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_write_text",
                "false"
              ],
              [
                "test_get_output_format",
                "false"
              ],
              [
                "test_write_json",
                "false"
              ],
              [
                "test_debug",
                "false"
              ],
              [
                "test_handle_error",
                "false"
              ],
              [
                "test_get_args",
                "false"
              ],
              [
                "test_get_text",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_write_text",
                "false"
              ],
              [
                "test_get_output_format",
                "false"
              ],
              [
                "test_write_json",
                "false"
              ],
              [
                "test_debug",
                "false"
              ],
              [
                "test_handle_error",
                "false"
              ],
              [
                "test_get_args",
                "false"
              ],
              [
                "test_get_text",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_write_text",
                "0"
              ],
              [
                "test_get_output_format",
                "0"
              ],
              [
                "test_write_json",
                "0"
              ],
              [
                "test_debug",
                "0"
              ],
              [
                "test_handle_error",
                "0"
              ],
              [
                "test_get_args",
                "0"
              ],
              [
                "test_get_text",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_write_text",
                []
              ],
              [
                "test_get_output_format",
                []
              ],
              [
                "test_write_json",
                []
              ],
              [
                "test_debug",
                []
              ],
              [
                "test_handle_error",
                []
              ],
              [
                "test_get_args",
                []
              ],
              [
                "test_get_text",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_write_text",
                []
              ],
              [
                "test_get_output_format",
                []
              ],
              [
                "test_write_json",
                []
              ],
              [
                "test_debug",
                []
              ],
              [
                "test_handle_error",
                []
              ],
              [
                "test_get_args",
                []
              ],
              [
                "test_get_text",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4943278676760514,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_write_text",
                  "test_get_args",
                  0.106735210044723
                ],
                [
                  "test_get_text",
                  "test_get_output_format",
                  0.7302967433402214
                ],
                [
                  "test_handle_error",
                  "test_debug",
                  0.6708203932499369
                ],
                [
                  "test_handle_error",
                  "test_get_text",
                  0.5999999999999999
                ],
                [
                  "test_handle_error",
                  "test_get_args",
                  0.106735210044723
                ],
                [
                  "test_write_text",
                  "test_write_json",
                  0.7999999999999998
                ],
                [
                  "test_write_json",
                  "test_get_args",
                  0.106735210044723
                ],
                [
                  "test_get_output_format",
                  "test_get_args",
                  0.12991396049232617
                ],
                [
                  "test_get_text",
                  "test_write_json",
                  0.5999999999999999
                ],
                [
                  "test_write_text",
                  "test_get_text",
                  0.7999999999999998
                ],
                [
                  "test_get_text",
                  "test_debug",
                  0.6708203932499369
                ],
                [
                  "test_handle_error",
                  "test_get_output_format",
                  0.5477225575051661
                ],
                [
                  "test_write_text",
                  "test_handle_error",
                  0.5999999999999999
                ],
                [
                  "test_write_json",
                  "test_debug",
                  0.6708203932499369
                ],
                [
                  "test_get_output_format",
                  "test_debug",
                  0.6123724356957946
                ],
                [
                  "test_write_text",
                  "test_debug",
                  0.6708203932499369
                ],
                [
                  "test_get_text",
                  "test_get_args",
                  0.142313613392964
                ],
                [
                  "test_write_text",
                  "test_get_output_format",
                  0.5477225575051661
                ],
                [
                  "test_get_args",
                  "test_debug",
                  0.11933359262635951
                ],
                [
                  "test_handle_error",
                  "test_write_json",
                  0.5999999999999999
                ],
                [
                  "test_write_json",
                  "test_get_output_format",
                  0.5477225575051661
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_write_text",
                "false"
              ],
              [
                "test_get_output_format",
                "false"
              ],
              [
                "test_write_json",
                "false"
              ],
              [
                "test_debug",
                "false"
              ],
              [
                "test_handle_error",
                "false"
              ],
              [
                "test_get_args",
                "false"
              ],
              [
                "test_get_text",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      }
    ]
  },
  {
    "name": "tests_\u0026_test_tokenization.py",
    "testCases": [
      {
        "name": "TestTokenization",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_surface_string",
                  "[]"
                ],
                [
                  "test_segment",
                  "[]"
                ],
                [
                  "test_conll_token",
                  "[]"
                ],
                [
                  "test_subtract_tokens",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_surface_string",
                  "[PyAssertStatement]"
                ],
                [
                  "test_segment",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_conll_token",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_subtract_tokens",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_surface_string",
                  "false"
                ],
                [
                  "test_segment",
                  "true"
                ],
                [
                  "test_conll_token",
                  "false"
                ],
                [
                  "test_subtract_tokens",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_surface_string",
                  "false"
                ],
                [
                  "test_segment",
                  "false"
                ],
                [
                  "test_conll_token",
                  "false"
                ],
                [
                  "test_subtract_tokens",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_surface_string",
                  "false"
                ],
                [
                  "test_segment",
                  "false"
                ],
                [
                  "test_conll_token",
                  "false"
                ],
                [
                  "test_subtract_tokens",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_surface_string",
                  "false"
                ],
                [
                  "test_segment",
                  "false"
                ],
                [
                  "test_conll_token",
                  "false"
                ],
                [
                  "test_subtract_tokens",
                  "true"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_surface_string",
                "false"
              ],
              [
                "test_segment",
                "false"
              ],
              [
                "test_conll_token",
                "false"
              ],
              [
                "test_subtract_tokens",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_surface_string",
                "false"
              ],
              [
                "test_segment",
                "false"
              ],
              [
                "test_conll_token",
                "false"
              ],
              [
                "test_subtract_tokens",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_surface_string",
                []
              ],
              [
                "test_segment",
                []
              ],
              [
                "test_conll_token",
                []
              ],
              [
                "test_subtract_tokens",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_surface_string",
                "false"
              ],
              [
                "test_segment",
                "false"
              ],
              [
                "test_conll_token",
                "false"
              ],
              [
                "test_subtract_tokens",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_surface_string",
                "false"
              ],
              [
                "test_segment",
                "false"
              ],
              [
                "test_conll_token",
                "false"
              ],
              [
                "test_subtract_tokens",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_surface_string",
                  "0"
                ],
                [
                  "test_segment",
                  "0"
                ],
                [
                  "test_conll_token",
                  "0"
                ],
                [
                  "test_subtract_tokens",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_surface_string",
                  "0"
                ],
                [
                  "test_segment",
                  "0"
                ],
                [
                  "test_conll_token",
                  "0"
                ],
                [
                  "test_subtract_tokens",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_surface_string",
                "false"
              ],
              [
                "test_segment",
                "false"
              ],
              [
                "test_conll_token",
                "false"
              ],
              [
                "test_subtract_tokens",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_surface_string",
                "false"
              ],
              [
                "test_segment",
                "false"
              ],
              [
                "test_conll_token",
                "false"
              ],
              [
                "test_subtract_tokens",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_surface_string",
                "1"
              ],
              [
                "test_segment",
                "2"
              ],
              [
                "test_conll_token",
                "5"
              ],
              [
                "test_subtract_tokens",
                "6"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_surface_string",
                [
                  "actual",
                  "expected",
                  "tokens"
                ]
              ],
              [
                "test_segment",
                [
                  "sentences",
                  "expected_spaces",
                  "words",
                  "spaces",
                  "expected_words"
                ]
              ],
              [
                "test_conll_token",
                [
                  "t"
                ]
              ],
              [
                "test_subtract_tokens",
                [
                  "aa",
                  "bb",
                  "a",
                  "actual",
                  "b",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_surface_string",
                []
              ],
              [
                "test_segment",
                []
              ],
              [
                "test_conll_token",
                []
              ],
              [
                "test_subtract_tokens",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.40162363889556113,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_conll_token",
                  "test_subtract_tokens",
                  0.4729947924052733
                ],
                [
                  "test_segment",
                  "test_subtract_tokens",
                  0.43091263627919163
                ],
                [
                  "test_conll_token",
                  "test_segment",
                  0.34435203103704703
                ],
                [
                  "test_surface_string",
                  "test_subtract_tokens",
                  0.49028699596315517
                ],
                [
                  "test_conll_token",
                  "test_surface_string",
                  0.2987350081929509
                ],
                [
                  "test_segment",
                  "test_surface_string",
                  0.37246036949574857
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_surface_string",
                "false"
              ],
              [
                "test_segment",
                "false"
              ],
              [
                "test_conll_token",
                "false"
              ],
              [
                "test_subtract_tokens",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "tests_\u0026_test_microservices.py",
    "testCases": [
      {
        "name": "TestMicroservice",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_base_route",
                  "[]"
                ],
                [
                  "test_get_args",
                  "[]"
                ],
                [
                  "test_token_list",
                  "[]"
                ],
                [
                  "test_write_json",
                  "[]"
                ],
                [
                  "test_dependencies",
                  "[]"
                ],
                [
                  "test_run_pipeline",
                  "[]"
                ],
                [
                  "test_scrape_website_fail",
                  "[]"
                ],
                [
                  "test_constituents",
                  "[]"
                ],
                [
                  "test_check_output_format",
                  "[]"
                ],
                [
                  "test_with_constituents",
                  "[]"
                ],
                [
                  "test_with_coreferences",
                  "[]"
                ],
                [
                  "test_process",
                  "[]"
                ],
                [
                  "test_with_dependencies",
                  "[]"
                ],
                [
                  "test_write_output",
                  "[]"
                ],
                [
                  "test_scrape_website",
                  "[]"
                ],
                [
                  "test_expressions",
                  "[]"
                ],
                [
                  "test_write_text",
                  "[]"
                ],
                [
                  "test_coreferences",
                  "[]"
                ],
                [
                  "test_get_text",
                  "[]"
                ],
                [
                  "test_get_output_format",
                  "[]"
                ],
                [
                  "test_with_expressions",
                  "[]"
                ],
                [
                  "test_normalize_language",
                  "[]"
                ],
                [
                  "test_handle_error",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_base_route",
                  "[PyAssertStatement]"
                ],
                [
                  "test_get_args",
                  "[]"
                ],
                [
                  "test_token_list",
                  "[]"
                ],
                [
                  "test_write_json",
                  "[PyAssertStatement]"
                ],
                [
                  "test_dependencies",
                  "[]"
                ],
                [
                  "test_run_pipeline",
                  "[]"
                ],
                [
                  "test_scrape_website_fail",
                  "[]"
                ],
                [
                  "test_constituents",
                  "[]"
                ],
                [
                  "test_check_output_format",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_with_constituents",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_with_coreferences",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_process",
                  "[]"
                ],
                [
                  "test_with_dependencies",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_write_output",
                  "[]"
                ],
                [
                  "test_scrape_website",
                  "[PyAssertStatement]"
                ],
                [
                  "test_expressions",
                  "[]"
                ],
                [
                  "test_write_text",
                  "[]"
                ],
                [
                  "test_coreferences",
                  "[]"
                ],
                [
                  "test_get_text",
                  "[]"
                ],
                [
                  "test_get_output_format",
                  "[]"
                ],
                [
                  "test_with_expressions",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_normalize_language",
                  "[]"
                ],
                [
                  "test_handle_error",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_base_route",
                  "false"
                ],
                [
                  "test_get_args",
                  "false"
                ],
                [
                  "test_token_list",
                  "false"
                ],
                [
                  "test_write_json",
                  "false"
                ],
                [
                  "test_dependencies",
                  "false"
                ],
                [
                  "test_run_pipeline",
                  "false"
                ],
                [
                  "test_scrape_website_fail",
                  "false"
                ],
                [
                  "test_constituents",
                  "false"
                ],
                [
                  "test_check_output_format",
                  "false"
                ],
                [
                  "test_with_constituents",
                  "false"
                ],
                [
                  "test_with_coreferences",
                  "false"
                ],
                [
                  "test_process",
                  "false"
                ],
                [
                  "test_with_dependencies",
                  "false"
                ],
                [
                  "test_write_output",
                  "false"
                ],
                [
                  "test_scrape_website",
                  "false"
                ],
                [
                  "test_expressions",
                  "false"
                ],
                [
                  "test_write_text",
                  "false"
                ],
                [
                  "test_coreferences",
                  "false"
                ],
                [
                  "test_get_text",
                  "false"
                ],
                [
                  "test_get_output_format",
                  "false"
                ],
                [
                  "test_with_expressions",
                  "false"
                ],
                [
                  "test_normalize_language",
                  "false"
                ],
                [
                  "test_handle_error",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_base_route",
                  "false"
                ],
                [
                  "test_get_args",
                  "false"
                ],
                [
                  "test_token_list",
                  "false"
                ],
                [
                  "test_write_json",
                  "false"
                ],
                [
                  "test_dependencies",
                  "false"
                ],
                [
                  "test_run_pipeline",
                  "false"
                ],
                [
                  "test_scrape_website_fail",
                  "false"
                ],
                [
                  "test_constituents",
                  "false"
                ],
                [
                  "test_check_output_format",
                  "false"
                ],
                [
                  "test_with_constituents",
                  "false"
                ],
                [
                  "test_with_coreferences",
                  "false"
                ],
                [
                  "test_process",
                  "false"
                ],
                [
                  "test_with_dependencies",
                  "false"
                ],
                [
                  "test_write_output",
                  "false"
                ],
                [
                  "test_scrape_website",
                  "false"
                ],
                [
                  "test_expressions",
                  "false"
                ],
                [
                  "test_write_text",
                  "false"
                ],
                [
                  "test_coreferences",
                  "false"
                ],
                [
                  "test_get_text",
                  "false"
                ],
                [
                  "test_get_output_format",
                  "false"
                ],
                [
                  "test_with_expressions",
                  "false"
                ],
                [
                  "test_normalize_language",
                  "false"
                ],
                [
                  "test_handle_error",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_base_route",
                  "false"
                ],
                [
                  "test_get_args",
                  "false"
                ],
                [
                  "test_token_list",
                  "false"
                ],
                [
                  "test_write_json",
                  "false"
                ],
                [
                  "test_dependencies",
                  "false"
                ],
                [
                  "test_run_pipeline",
                  "false"
                ],
                [
                  "test_scrape_website_fail",
                  "false"
                ],
                [
                  "test_constituents",
                  "false"
                ],
                [
                  "test_check_output_format",
                  "false"
                ],
                [
                  "test_with_constituents",
                  "false"
                ],
                [
                  "test_with_coreferences",
                  "false"
                ],
                [
                  "test_process",
                  "false"
                ],
                [
                  "test_with_dependencies",
                  "false"
                ],
                [
                  "test_write_output",
                  "false"
                ],
                [
                  "test_scrape_website",
                  "false"
                ],
                [
                  "test_expressions",
                  "false"
                ],
                [
                  "test_write_text",
                  "false"
                ],
                [
                  "test_coreferences",
                  "false"
                ],
                [
                  "test_get_text",
                  "false"
                ],
                [
                  "test_get_output_format",
                  "false"
                ],
                [
                  "test_with_expressions",
                  "false"
                ],
                [
                  "test_normalize_language",
                  "false"
                ],
                [
                  "test_handle_error",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_base_route",
                  "false"
                ],
                [
                  "test_get_args",
                  "false"
                ],
                [
                  "test_token_list",
                  "false"
                ],
                [
                  "test_write_json",
                  "false"
                ],
                [
                  "test_dependencies",
                  "false"
                ],
                [
                  "test_run_pipeline",
                  "false"
                ],
                [
                  "test_scrape_website_fail",
                  "false"
                ],
                [
                  "test_constituents",
                  "false"
                ],
                [
                  "test_check_output_format",
                  "false"
                ],
                [
                  "test_with_constituents",
                  "true"
                ],
                [
                  "test_with_coreferences",
                  "true"
                ],
                [
                  "test_process",
                  "false"
                ],
                [
                  "test_with_dependencies",
                  "true"
                ],
                [
                  "test_write_output",
                  "false"
                ],
                [
                  "test_scrape_website",
                  "false"
                ],
                [
                  "test_expressions",
                  "false"
                ],
                [
                  "test_write_text",
                  "false"
                ],
                [
                  "test_coreferences",
                  "false"
                ],
                [
                  "test_get_text",
                  "false"
                ],
                [
                  "test_get_output_format",
                  "false"
                ],
                [
                  "test_with_expressions",
                  "true"
                ],
                [
                  "test_normalize_language",
                  "false"
                ],
                [
                  "test_handle_error",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": true,
            "detail": [
              [
                "test_base_route",
                "false"
              ],
              [
                "test_get_args",
                "true"
              ],
              [
                "test_token_list",
                "true"
              ],
              [
                "test_write_json",
                "false"
              ],
              [
                "test_dependencies",
                "true"
              ],
              [
                "test_run_pipeline",
                "true"
              ],
              [
                "test_scrape_website_fail",
                "false"
              ],
              [
                "test_constituents",
                "true"
              ],
              [
                "test_check_output_format",
                "false"
              ],
              [
                "test_with_constituents",
                "false"
              ],
              [
                "test_with_coreferences",
                "false"
              ],
              [
                "test_process",
                "true"
              ],
              [
                "test_with_dependencies",
                "false"
              ],
              [
                "test_write_output",
                "true"
              ],
              [
                "test_scrape_website",
                "false"
              ],
              [
                "test_expressions",
                "true"
              ],
              [
                "test_write_text",
                "true"
              ],
              [
                "test_coreferences",
                "true"
              ],
              [
                "test_get_text",
                "true"
              ],
              [
                "test_get_output_format",
                "true"
              ],
              [
                "test_with_expressions",
                "false"
              ],
              [
                "test_normalize_language",
                "true"
              ],
              [
                "test_handle_error",
                "true"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_base_route",
                "false"
              ],
              [
                "test_get_args",
                "false"
              ],
              [
                "test_token_list",
                "false"
              ],
              [
                "test_write_json",
                "false"
              ],
              [
                "test_dependencies",
                "false"
              ],
              [
                "test_run_pipeline",
                "false"
              ],
              [
                "test_scrape_website_fail",
                "false"
              ],
              [
                "test_constituents",
                "false"
              ],
              [
                "test_check_output_format",
                "false"
              ],
              [
                "test_with_constituents",
                "false"
              ],
              [
                "test_with_coreferences",
                "false"
              ],
              [
                "test_process",
                "false"
              ],
              [
                "test_with_dependencies",
                "false"
              ],
              [
                "test_write_output",
                "false"
              ],
              [
                "test_scrape_website",
                "false"
              ],
              [
                "test_expressions",
                "false"
              ],
              [
                "test_write_text",
                "false"
              ],
              [
                "test_coreferences",
                "false"
              ],
              [
                "test_get_text",
                "false"
              ],
              [
                "test_get_output_format",
                "false"
              ],
              [
                "test_with_expressions",
                "false"
              ],
              [
                "test_normalize_language",
                "false"
              ],
              [
                "test_handle_error",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_base_route",
                [
                  "self.ms"
                ]
              ],
              [
                "test_get_args",
                [
                  "self.ms"
                ]
              ],
              [
                "test_token_list",
                [
                  "self.ms"
                ]
              ],
              [
                "test_write_json",
                []
              ],
              [
                "test_dependencies",
                [
                  "self.ms"
                ]
              ],
              [
                "test_run_pipeline",
                [
                  "self.ms"
                ]
              ],
              [
                "test_scrape_website_fail",
                []
              ],
              [
                "test_constituents",
                [
                  "self.ms"
                ]
              ],
              [
                "test_check_output_format",
                []
              ],
              [
                "test_with_constituents",
                []
              ],
              [
                "test_with_coreferences",
                []
              ],
              [
                "test_process",
                [
                  "self.ms"
                ]
              ],
              [
                "test_with_dependencies",
                []
              ],
              [
                "test_write_output",
                [
                  "self.ms"
                ]
              ],
              [
                "test_scrape_website",
                []
              ],
              [
                "test_expressions",
                [
                  "self.ms"
                ]
              ],
              [
                "test_write_text",
                [
                  "self.ms"
                ]
              ],
              [
                "test_coreferences",
                [
                  "self.ms"
                ]
              ],
              [
                "test_get_text",
                [
                  "self.ms"
                ]
              ],
              [
                "test_get_output_format",
                [
                  "self.ms"
                ]
              ],
              [
                "test_with_expressions",
                []
              ],
              [
                "test_normalize_language",
                [
                  "self.ms"
                ]
              ],
              [
                "test_handle_error",
                [
                  "self.ms"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_base_route",
                "false"
              ],
              [
                "test_get_args",
                "false"
              ],
              [
                "test_token_list",
                "false"
              ],
              [
                "test_write_json",
                "false"
              ],
              [
                "test_dependencies",
                "false"
              ],
              [
                "test_run_pipeline",
                "false"
              ],
              [
                "test_scrape_website_fail",
                "false"
              ],
              [
                "test_constituents",
                "false"
              ],
              [
                "test_check_output_format",
                "false"
              ],
              [
                "test_with_constituents",
                "false"
              ],
              [
                "test_with_coreferences",
                "false"
              ],
              [
                "test_process",
                "false"
              ],
              [
                "test_with_dependencies",
                "false"
              ],
              [
                "test_write_output",
                "false"
              ],
              [
                "test_scrape_website",
                "false"
              ],
              [
                "test_expressions",
                "false"
              ],
              [
                "test_write_text",
                "false"
              ],
              [
                "test_coreferences",
                "false"
              ],
              [
                "test_get_text",
                "false"
              ],
              [
                "test_get_output_format",
                "false"
              ],
              [
                "test_with_expressions",
                "false"
              ],
              [
                "test_normalize_language",
                "false"
              ],
              [
                "test_handle_error",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_base_route",
                "false"
              ],
              [
                "test_get_args",
                "false"
              ],
              [
                "test_token_list",
                "false"
              ],
              [
                "test_write_json",
                "false"
              ],
              [
                "test_dependencies",
                "false"
              ],
              [
                "test_run_pipeline",
                "false"
              ],
              [
                "test_scrape_website_fail",
                "false"
              ],
              [
                "test_constituents",
                "false"
              ],
              [
                "test_check_output_format",
                "false"
              ],
              [
                "test_with_constituents",
                "false"
              ],
              [
                "test_with_coreferences",
                "false"
              ],
              [
                "test_process",
                "false"
              ],
              [
                "test_with_dependencies",
                "false"
              ],
              [
                "test_write_output",
                "false"
              ],
              [
                "test_scrape_website",
                "false"
              ],
              [
                "test_expressions",
                "false"
              ],
              [
                "test_write_text",
                "false"
              ],
              [
                "test_coreferences",
                "false"
              ],
              [
                "test_get_text",
                "false"
              ],
              [
                "test_get_output_format",
                "false"
              ],
              [
                "test_with_expressions",
                "false"
              ],
              [
                "test_normalize_language",
                "false"
              ],
              [
                "test_handle_error",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_base_route",
                  "0"
                ],
                [
                  "test_get_args",
                  "0"
                ],
                [
                  "test_token_list",
                  "0"
                ],
                [
                  "test_write_json",
                  "0"
                ],
                [
                  "test_dependencies",
                  "0"
                ],
                [
                  "test_run_pipeline",
                  "0"
                ],
                [
                  "test_scrape_website_fail",
                  "0"
                ],
                [
                  "test_constituents",
                  "0"
                ],
                [
                  "test_check_output_format",
                  "0"
                ],
                [
                  "test_with_constituents",
                  "0"
                ],
                [
                  "test_with_coreferences",
                  "0"
                ],
                [
                  "test_process",
                  "0"
                ],
                [
                  "test_with_dependencies",
                  "0"
                ],
                [
                  "test_write_output",
                  "0"
                ],
                [
                  "test_scrape_website",
                  "0"
                ],
                [
                  "test_expressions",
                  "0"
                ],
                [
                  "test_write_text",
                  "0"
                ],
                [
                  "test_coreferences",
                  "0"
                ],
                [
                  "test_get_text",
                  "0"
                ],
                [
                  "test_get_output_format",
                  "0"
                ],
                [
                  "test_with_expressions",
                  "0"
                ],
                [
                  "test_normalize_language",
                  "0"
                ],
                [
                  "test_handle_error",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_base_route",
                  "0"
                ],
                [
                  "test_get_args",
                  "0"
                ],
                [
                  "test_token_list",
                  "0"
                ],
                [
                  "test_write_json",
                  "0"
                ],
                [
                  "test_dependencies",
                  "0"
                ],
                [
                  "test_run_pipeline",
                  "0"
                ],
                [
                  "test_scrape_website_fail",
                  "0"
                ],
                [
                  "test_constituents",
                  "0"
                ],
                [
                  "test_check_output_format",
                  "0"
                ],
                [
                  "test_with_constituents",
                  "0"
                ],
                [
                  "test_with_coreferences",
                  "0"
                ],
                [
                  "test_process",
                  "0"
                ],
                [
                  "test_with_dependencies",
                  "0"
                ],
                [
                  "test_write_output",
                  "0"
                ],
                [
                  "test_scrape_website",
                  "0"
                ],
                [
                  "test_expressions",
                  "0"
                ],
                [
                  "test_write_text",
                  "0"
                ],
                [
                  "test_coreferences",
                  "0"
                ],
                [
                  "test_get_text",
                  "0"
                ],
                [
                  "test_get_output_format",
                  "0"
                ],
                [
                  "test_with_expressions",
                  "0"
                ],
                [
                  "test_normalize_language",
                  "0"
                ],
                [
                  "test_handle_error",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_base_route",
                "false"
              ],
              [
                "test_get_args",
                "false"
              ],
              [
                "test_token_list",
                "false"
              ],
              [
                "test_write_json",
                "false"
              ],
              [
                "test_dependencies",
                "false"
              ],
              [
                "test_run_pipeline",
                "false"
              ],
              [
                "test_scrape_website_fail",
                "false"
              ],
              [
                "test_constituents",
                "false"
              ],
              [
                "test_check_output_format",
                "false"
              ],
              [
                "test_with_constituents",
                "false"
              ],
              [
                "test_with_coreferences",
                "false"
              ],
              [
                "test_process",
                "false"
              ],
              [
                "test_with_dependencies",
                "false"
              ],
              [
                "test_write_output",
                "false"
              ],
              [
                "test_scrape_website",
                "false"
              ],
              [
                "test_expressions",
                "false"
              ],
              [
                "test_write_text",
                "false"
              ],
              [
                "test_coreferences",
                "false"
              ],
              [
                "test_get_text",
                "false"
              ],
              [
                "test_get_output_format",
                "false"
              ],
              [
                "test_with_expressions",
                "false"
              ],
              [
                "test_normalize_language",
                "false"
              ],
              [
                "test_handle_error",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_base_route",
                "false"
              ],
              [
                "test_get_args",
                "false"
              ],
              [
                "test_token_list",
                "false"
              ],
              [
                "test_write_json",
                "false"
              ],
              [
                "test_dependencies",
                "false"
              ],
              [
                "test_run_pipeline",
                "false"
              ],
              [
                "test_scrape_website_fail",
                "false"
              ],
              [
                "test_constituents",
                "false"
              ],
              [
                "test_check_output_format",
                "false"
              ],
              [
                "test_with_constituents",
                "false"
              ],
              [
                "test_with_coreferences",
                "false"
              ],
              [
                "test_process",
                "false"
              ],
              [
                "test_with_dependencies",
                "false"
              ],
              [
                "test_write_output",
                "false"
              ],
              [
                "test_scrape_website",
                "false"
              ],
              [
                "test_expressions",
                "false"
              ],
              [
                "test_write_text",
                "false"
              ],
              [
                "test_coreferences",
                "false"
              ],
              [
                "test_get_text",
                "false"
              ],
              [
                "test_get_output_format",
                "false"
              ],
              [
                "test_with_expressions",
                "false"
              ],
              [
                "test_normalize_language",
                "false"
              ],
              [
                "test_handle_error",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_base_route",
                "1"
              ],
              [
                "test_get_args",
                "0"
              ],
              [
                "test_token_list",
                "0"
              ],
              [
                "test_write_json",
                "1"
              ],
              [
                "test_dependencies",
                "0"
              ],
              [
                "test_run_pipeline",
                "0"
              ],
              [
                "test_scrape_website_fail",
                "0"
              ],
              [
                "test_constituents",
                "0"
              ],
              [
                "test_check_output_format",
                "2"
              ],
              [
                "test_with_constituents",
                "8"
              ],
              [
                "test_with_coreferences",
                "8"
              ],
              [
                "test_process",
                "0"
              ],
              [
                "test_with_dependencies",
                "8"
              ],
              [
                "test_write_output",
                "0"
              ],
              [
                "test_scrape_website",
                "1"
              ],
              [
                "test_expressions",
                "0"
              ],
              [
                "test_write_text",
                "0"
              ],
              [
                "test_coreferences",
                "0"
              ],
              [
                "test_get_text",
                "0"
              ],
              [
                "test_get_output_format",
                "0"
              ],
              [
                "test_with_expressions",
                "8"
              ],
              [
                "test_normalize_language",
                "0"
              ],
              [
                "test_handle_error",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_base_route",
                [
                  "ms"
                ]
              ],
              [
                "test_get_args",
                []
              ],
              [
                "test_token_list",
                []
              ],
              [
                "test_write_json",
                [
                  "actual",
                  "expected"
                ]
              ],
              [
                "test_dependencies",
                []
              ],
              [
                "test_run_pipeline",
                []
              ],
              [
                "test_scrape_website_fail",
                []
              ],
              [
                "test_constituents",
                []
              ],
              [
                "test_check_output_format",
                [
                  "actual"
                ]
              ],
              [
                "test_with_constituents",
                []
              ],
              [
                "test_with_coreferences",
                []
              ],
              [
                "test_process",
                []
              ],
              [
                "test_with_dependencies",
                []
              ],
              [
                "test_write_output",
                []
              ],
              [
                "test_scrape_website",
                [
                  "actual"
                ]
              ],
              [
                "test_expressions",
                []
              ],
              [
                "test_write_text",
                []
              ],
              [
                "test_coreferences",
                []
              ],
              [
                "test_get_text",
                []
              ],
              [
                "test_get_output_format",
                []
              ],
              [
                "test_with_expressions",
                []
              ],
              [
                "test_normalize_language",
                []
              ],
              [
                "test_handle_error",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_base_route",
                []
              ],
              [
                "test_get_args",
                []
              ],
              [
                "test_token_list",
                []
              ],
              [
                "test_write_json",
                [
                  "self.ms"
                ]
              ],
              [
                "test_dependencies",
                []
              ],
              [
                "test_run_pipeline",
                []
              ],
              [
                "test_scrape_website_fail",
                [
                  "self.ms"
                ]
              ],
              [
                "test_constituents",
                []
              ],
              [
                "test_check_output_format",
                [
                  "self.ms"
                ]
              ],
              [
                "test_with_constituents",
                [
                  "self.ms"
                ]
              ],
              [
                "test_with_coreferences",
                [
                  "self.ms"
                ]
              ],
              [
                "test_process",
                []
              ],
              [
                "test_with_dependencies",
                [
                  "self.ms"
                ]
              ],
              [
                "test_write_output",
                []
              ],
              [
                "test_scrape_website",
                [
                  "self.ms"
                ]
              ],
              [
                "test_expressions",
                []
              ],
              [
                "test_write_text",
                []
              ],
              [
                "test_coreferences",
                []
              ],
              [
                "test_get_text",
                []
              ],
              [
                "test_get_output_format",
                []
              ],
              [
                "test_with_expressions",
                [
                  "self.ms"
                ]
              ],
              [
                "test_normalize_language",
                []
              ],
              [
                "test_handle_error",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.34841664460311594,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_with_constituents",
                  "test_with_coreferences",
                  0.990990990990991
                ],
                [
                  "test_scrape_website_fail",
                  "test_handle_error",
                  0.26967994498529685
                ],
                [
                  "test_with_dependencies",
                  "test_token_list",
                  0.060030022518766414
                ],
                [
                  "test_scrape_website",
                  "test_write_json",
                  0.33425160871869336
                ],
                [
                  "test_run_pipeline",
                  "test_scrape_website",
                  0.16609095970747995
                ],
                [
                  "test_check_output_format",
                  "test_get_output_format",
                  0.3155843721336013
                ],
                [
                  "test_get_args",
                  "test_dependencies",
                  0.6708203932499369
                ],
                [
                  "test_scrape_website",
                  "test_get_text",
                  0.16609095970747995
                ],
                [
                  "test_scrape_website",
                  "test_handle_error",
                  0.16609095970747995
                ],
                [
                  "test_with_coreferences",
                  "test_write_json",
                  0.16107745325136583
                ],
                [
                  "test_token_list",
                  "test_coreferences",
                  0.6708203932499369
                ],
                [
                  "test_normalize_language",
                  "test_get_output_format",
                  0.5477225575051661
                ],
                [
                  "test_constituents",
                  "test_expressions",
                  0.75
                ],
                [
                  "test_with_constituents",
                  "test_expressions",
                  0.06711560552140243
                ],
                [
                  "test_scrape_website",
                  "test_scrape_website_fail",
                  0.22395700438234173
                ],
                [
                  "test_scrape_website_fail",
                  "test_get_text",
                  0.26967994498529685
                ],
                [
                  "test_with_coreferences",
                  "test_dependencies",
                  0.06711560552140243
                ],
                [
                  "test_normalize_language",
                  "test_write_output",
                  0.5999999999999999
                ],
                [
                  "test_with_constituents",
                  "test_check_output_format",
                  0.16305693230564905
                ],
                [
                  "test_write_json",
                  "test_token_list",
                  0.17888543819998318
                ],
                [
                  "test_with_expressions",
                  "test_token_list",
                  0.060030022518766414
                ],
                [
                  "test_write_json",
                  "test_expressions",
                  0.2
                ],
                [
                  "test_get_output_format",
                  "test_dependencies",
                  0.6123724356957946
                ],
                [
                  "test_write_output",
                  "test_get_args",
                  0.5999999999999999
                ],
                [
                  "test_with_constituents",
                  "test_normalize_language",
                  0.060030022518766414
                ],
                [
                  "test_with_constituents",
                  "test_handle_error",
                  0.060030022518766414
                ],
                [
                  "test_with_constituents",
                  "test_get_text",
                  0.060030022518766414
                ],
                [
                  "test_scrape_website_fail",
                  "test_write_json",
                  0.12060453783110546
                ],
                [
                  "test_get_output_format",
                  "test_handle_error",
                  0.5477225575051661
                ],
                [
                  "test_normalize_language",
                  "test_constituents",
                  0.6708203932499369
                ],
                [
                  "test_get_output_format",
                  "test_get_args",
                  0.7302967433402214
                ],
                [
                  "test_base_route",
                  "test_process",
                  0.21320071635561041
                ],
                [
                  "test_scrape_website",
                  "test_coreferences",
                  0.18569533817705186
                ],
                [
                  "test_check_output_format",
                  "test_write_text",
                  0.09877295966495894
                ],
                [
                  "test_run_pipeline",
                  "test_token_list",
                  0.5999999999999999
                ],
                [
                  "test_run_pipeline",
                  "test_process",
                  0.6708203932499369
                ],
                [
                  "test_scrape_website",
                  "test_expressions",
                  0.18569533817705186
                ],
                [
                  "test_with_constituents",
                  "test_run_pipeline",
                  0.060030022518766414
                ],
                [
                  "test_scrape_website_fail",
                  "test_coreferences",
                  0.30151134457776363
                ],
                [
                  "test_with_constituents",
                  "test_write_json",
                  0.16107745325136583
                ],
                [
                  "test_with_coreferences",
                  "test_get_args",
                  0.060030022518766414
                ],
                [
                  "test_get_args",
                  "test_handle_error",
                  0.5999999999999999
                ],
                [
                  "test_base_route",
                  "test_token_list",
                  0.19069251784911842
                ],
                [
                  "test_write_json",
                  "test_handle_error",
                  0.17888543819998318
                ],
                [
                  "test_base_route",
                  "test_run_pipeline",
                  0.19069251784911842
                ],
                [
                  "test_with_expressions",
                  "test_coreferences",
                  0.06711560552140243
                ],
                [
                  "test_run_pipeline",
                  "test_write_output",
                  0.5999999999999999
                ],
                [
                  "test_constituents",
                  "test_coreferences",
                  0.75
                ],
                [
                  "test_base_route",
                  "test_scrape_website",
                  0.35631341210920314
                ],
                [
                  "test_process",
                  "test_constituents",
                  0.75
                ],
                [
                  "test_with_coreferences",
                  "test_handle_error",
                  0.060030022518766414
                ],
                [
                  "test_with_dependencies",
                  "test_scrape_website",
                  0.17448277089956207
                ],
                [
                  "test_with_constituents",
                  "test_scrape_website_fail",
                  0.06070834938872647
                ],
                [
                  "test_with_constituents",
                  "test_dependencies",
                  0.06711560552140243
                ],
                [
                  "test_base_route",
                  "test_with_expressions",
                  0.17170914210964275
                ],
                [
                  "test_with_coreferences",
                  "test_normalize_language",
                  0.060030022518766414
                ],
                [
                  "test_with_dependencies",
                  "test_run_pipeline",
                  0.060030022518766414
                ],
                [
                  "test_handle_error",
                  "test_constituents",
                  0.6708203932499369
                ],
                [
                  "test_check_output_format",
                  "test_constituents",
                  0.11043152607484653
                ],
                [
                  "test_scrape_website_fail",
                  "test_expressions",
                  0.30151134457776363
                ],
                [
                  "test_token_list",
                  "test_expressions",
                  0.6708203932499369
                ],
                [
                  "test_with_constituents",
                  "test_with_dependencies",
                  0.990990990990991
                ],
                [
                  "test_run_pipeline",
                  "test_coreferences",
                  0.6708203932499369
                ],
                [
                  "test_check_output_format",
                  "test_write_json",
                  0.4858987147293248
                ],
                [
                  "test_handle_error",
                  "test_coreferences",
                  0.6708203932499369
                ],
                [
                  "test_handle_error",
                  "test_expressions",
                  0.6708203932499369
                ],
                [
                  "test_with_dependencies",
                  "test_check_output_format",
                  0.16305693230564905
                ],
                [
                  "test_run_pipeline",
                  "test_expressions",
                  0.6708203932499369
                ],
                [
                  "test_scrape_website",
                  "test_token_list",
                  0.16609095970747995
                ],
                [
                  "test_with_expressions",
                  "test_with_coreferences",
                  0.990990990990991
                ],
                [
                  "test_check_output_format",
                  "test_normalize_language",
                  0.09877295966495894
                ],
                [
                  "test_get_args",
                  "test_expressions",
                  0.6708203932499369
                ],
                [
                  "test_with_coreferences",
                  "test_run_pipeline",
                  0.060030022518766414
                ],
                [
                  "test_get_text",
                  "test_handle_error",
                  0.5999999999999999
                ],
                [
                  "test_with_dependencies",
                  "test_constituents",
                  0.06711560552140243
                ],
                [
                  "test_with_expressions",
                  "test_constituents",
                  0.06711560552140243
                ],
                [
                  "test_scrape_website_fail",
                  "test_token_list",
                  0.26967994498529685
                ],
                [
                  "test_write_output",
                  "test_handle_error",
                  0.5999999999999999
                ],
                [
                  "test_with_constituents",
                  "test_write_text",
                  0.060030022518766414
                ],
                [
                  "test_with_expressions",
                  "test_scrape_website_fail",
                  0.06070834938872647
                ],
                [
                  "test_with_dependencies",
                  "test_scrape_website_fail",
                  0.06070834938872647
                ],
                [
                  "test_get_args",
                  "test_coreferences",
                  0.6708203932499369
                ],
                [
                  "test_with_dependencies",
                  "test_handle_error",
                  0.060030022518766414
                ],
                [
                  "test_check_output_format",
                  "test_process",
                  0.11043152607484653
                ],
                [
                  "test_with_expressions",
                  "test_expressions",
                  0.10067340828210365
                ],
                [
                  "test_check_output_format",
                  "test_scrape_website_fail",
                  0.19977814746360806
                ],
                [
                  "test_write_text",
                  "test_handle_error",
                  0.5999999999999999
                ],
                [
                  "test_with_expressions",
                  "test_process",
                  0.06711560552140243
                ],
                [
                  "test_with_dependencies",
                  "test_write_output",
                  0.060030022518766414
                ],
                [
                  "test_with_constituents",
                  "test_token_list",
                  0.060030022518766414
                ],
                [
                  "test_base_route",
                  "test_write_output",
                  0.19069251784911842
                ],
                [
                  "test_run_pipeline",
                  "test_constituents",
                  0.6708203932499369
                ],
                [
                  "test_constituents",
                  "test_token_list",
                  0.6708203932499369
                ],
                [
                  "test_get_text",
                  "test_constituents",
                  0.6708203932499369
                ],
                [
                  "test_write_text",
                  "test_constituents",
                  0.6708203932499369
                ],
                [
                  "test_normalize_language",
                  "test_write_text",
                  0.5999999999999999
                ],
                [
                  "test_base_route",
                  "test_scrape_website_fail",
                  0.12856486930664499
                ],
                [
                  "test_get_output_format",
                  "test_constituents",
                  0.6123724356957946
                ],
                [
                  "test_check_output_format",
                  "test_dependencies",
                  0.11043152607484653
                ],
                [
                  "test_write_output",
                  "test_get_output_format",
                  0.5477225575051661
                ],
                [
                  "test_handle_error",
                  "test_token_list",
                  0.5999999999999999
                ],
                [
                  "test_with_coreferences",
                  "test_scrape_website_fail",
                  0.06070834938872647
                ],
                [
                  "test_run_pipeline",
                  "test_write_json",
                  0.17888543819998318
                ],
                [
                  "test_with_expressions",
                  "test_normalize_language",
                  0.060030022518766414
                ],
                [
                  "test_write_output",
                  "test_get_text",
                  0.5999999999999999
                ],
                [
                  "test_dependencies",
                  "test_constituents",
                  0.75
                ],
                [
                  "test_handle_error",
                  "test_process",
                  0.6708203932499369
                ],
                [
                  "test_scrape_website",
                  "test_dependencies",
                  0.18569533817705186
                ],
                [
                  "test_normalize_language",
                  "test_handle_error",
                  0.5999999999999999
                ],
                [
                  "test_run_pipeline",
                  "test_scrape_website_fail",
                  0.26967994498529685
                ],
                [
                  "test_write_json",
                  "test_constituents",
                  0.2
                ],
                [
                  "test_with_expressions",
                  "test_scrape_website",
                  0.17448277089956207
                ],
                [
                  "test_with_coreferences",
                  "test_check_output_format",
                  0.16305693230564905
                ],
                [
                  "test_with_expressions",
                  "test_write_json",
                  0.16107745325136583
                ],
                [
                  "test_with_coreferences",
                  "test_constituents",
                  0.06711560552140243
                ],
                [
                  "test_write_output",
                  "test_write_text",
                  0.7999999999999998
                ],
                [
                  "test_scrape_website_fail",
                  "test_dependencies",
                  0.30151134457776363
                ],
                [
                  "test_normalize_language",
                  "test_get_args",
                  0.5999999999999999
                ],
                [
                  "test_with_constituents",
                  "test_coreferences",
                  0.06711560552140243
                ],
                [
                  "test_check_output_format",
                  "test_scrape_website",
                  0.28709267411827166
                ],
                [
                  "test_base_route",
                  "test_check_output_format",
                  0.211896724206605
                ],
                [
                  "test_with_expressions",
                  "test_run_pipeline",
                  0.060030022518766414
                ],
                [
                  "test_base_route",
                  "test_constituents",
                  0.21320071635561041
                ],
                [
                  "test_write_text",
                  "test_dependencies",
                  0.6708203932499369
                ],
                [
                  "test_check_output_format",
                  "test_token_list",
                  0.09877295966495894
                ],
                [
                  "test_handle_error",
                  "test_dependencies",
                  0.6708203932499369
                ],
                [
                  "test_with_constituents",
                  "test_write_output",
                  0.060030022518766414
                ],
                [
                  "test_run_pipeline",
                  "test_dependencies",
                  0.6708203932499369
                ],
                [
                  "test_scrape_website_fail",
                  "test_constituents",
                  0.30151134457776363
                ],
                [
                  "test_scrape_website",
                  "test_process",
                  0.18569533817705186
                ],
                [
                  "test_base_route",
                  "test_write_text",
                  0.19069251784911842
                ],
                [
                  "test_with_expressions",
                  "test_get_args",
                  0.060030022518766414
                ],
                [
                  "test_scrape_website_fail",
                  "test_process",
                  0.30151134457776363
                ],
                [
                  "test_scrape_website",
                  "test_constituents",
                  0.18569533817705186
                ],
                [
                  "test_with_expressions",
                  "test_dependencies",
                  0.06711560552140243
                ],
                [
                  "test_with_dependencies",
                  "test_get_output_format",
                  0.0547996624351191
                ],
                [
                  "test_normalize_language",
                  "test_coreferences",
                  0.6708203932499369
                ],
                [
                  "test_write_json",
                  "test_get_output_format",
                  0.16329931618554522
                ],
                [
                  "test_with_coreferences",
                  "test_scrape_website",
                  0.17448277089956207
                ],
                [
                  "test_run_pipeline",
                  "test_write_text",
                  0.5999999999999999
                ],
                [
                  "test_write_text",
                  "test_get_args",
                  0.5999999999999999
                ],
                [
                  "test_run_pipeline",
                  "test_get_args",
                  0.5999999999999999
                ],
                [
                  "test_with_constituents",
                  "test_constituents",
                  0.10067340828210365
                ],
                [
                  "test_dependencies",
                  "test_coreferences",
                  0.75
                ],
                [
                  "test_scrape_website",
                  "test_write_output",
                  0.16609095970747995
                ],
                [
                  "test_with_expressions",
                  "test_with_constituents",
                  0.990990990990991
                ],
                [
                  "test_with_dependencies",
                  "test_write_text",
                  0.060030022518766414
                ],
                [
                  "test_run_pipeline",
                  "test_normalize_language",
                  0.5999999999999999
                ],
                [
                  "test_process",
                  "test_dependencies",
                  0.75
                ],
                [
                  "test_normalize_language",
                  "test_token_list",
                  0.5999999999999999
                ],
                [
                  "test_with_constituents",
                  "test_process",
                  0.06711560552140243
                ],
                [
                  "test_with_expressions",
                  "test_write_text",
                  0.060030022518766414
                ],
                [
                  "test_check_output_format",
                  "test_expressions",
                  0.11043152607484653
                ],
                [
                  "test_get_text",
                  "test_get_args",
                  0.7999999999999998
                ],
                [
                  "test_normalize_language",
                  "test_expressions",
                  0.6708203932499369
                ],
                [
                  "test_base_route",
                  "test_dependencies",
                  0.21320071635561041
                ],
                [
                  "test_run_pipeline",
                  "test_get_text",
                  0.5999999999999999
                ],
                [
                  "test_base_route",
                  "test_write_json",
                  0.2558408596267325
                ],
                [
                  "test_run_pipeline",
                  "test_check_output_format",
                  0.09877295966495894
                ],
                [
                  "test_with_dependencies",
                  "test_dependencies",
                  0.10067340828210365
                ],
                [
                  "test_with_coreferences",
                  "test_write_output",
                  0.060030022518766414
                ],
                [
                  "test_base_route",
                  "test_with_constituents",
                  0.17170914210964275
                ],
                [
                  "test_base_route",
                  "test_normalize_language",
                  0.19069251784911842
                ],
                [
                  "test_check_output_format",
                  "test_coreferences",
                  0.11043152607484653
                ],
                [
                  "test_get_text",
                  "test_get_output_format",
                  0.7302967433402214
                ],
                [
                  "test_with_expressions",
                  "test_get_text",
                  0.060030022518766414
                ],
                [
                  "test_write_json",
                  "test_dependencies",
                  0.2
                ],
                [
                  "test_normalize_language",
                  "test_get_text",
                  0.5999999999999999
                ],
                [
                  "test_get_output_format",
                  "test_token_list",
                  0.5477225575051661
                ],
                [
                  "test_with_constituents",
                  "test_scrape_website",
                  0.17448277089956207
                ],
                [
                  "test_get_output_format",
                  "test_process",
                  0.6123724356957946
                ],
                [
                  "test_write_output",
                  "test_coreferences",
                  0.6708203932499369
                ],
                [
                  "test_dependencies",
                  "test_token_list",
                  0.6708203932499369
                ],
                [
                  "test_base_route",
                  "test_get_args",
                  0.19069251784911842
                ],
                [
                  "test_base_route",
                  "test_handle_error",
                  0.19069251784911842
                ],
                [
                  "test_with_expressions",
                  "test_check_output_format",
                  0.16305693230564905
                ],
                [
                  "test_write_output",
                  "test_process",
                  0.6708203932499369
                ],
                [
                  "test_get_text",
                  "test_dependencies",
                  0.6708203932499369
                ],
                [
                  "test_with_coreferences",
                  "test_token_list",
                  0.060030022518766414
                ],
                [
                  "test_with_coreferences",
                  "test_process",
                  0.06711560552140243
                ],
                [
                  "test_write_output",
                  "test_token_list",
                  0.5999999999999999
                ],
                [
                  "test_write_text",
                  "test_get_output_format",
                  0.5477225575051661
                ],
                [
                  "test_dependencies",
                  "test_expressions",
                  0.75
                ],
                [
                  "test_with_dependencies",
                  "test_get_args",
                  0.060030022518766414
                ],
                [
                  "test_get_text",
                  "test_write_text",
                  0.7999999999999998
                ],
                [
                  "test_get_args",
                  "test_process",
                  0.6708203932499369
                ],
                [
                  "test_get_args",
                  "test_token_list",
                  0.5999999999999999
                ],
                [
                  "test_write_json",
                  "test_get_args",
                  0.17888543819998318
                ],
                [
                  "test_with_constituents",
                  "test_get_output_format",
                  0.0547996624351191
                ],
                [
                  "test_scrape_website_fail",
                  "test_write_output",
                  0.26967994498529685
                ],
                [
                  "test_write_output",
                  "test_expressions",
                  0.6708203932499369
                ],
                [
                  "test_with_coreferences",
                  "test_get_output_format",
                  0.0547996624351191
                ],
                [
                  "test_write_text",
                  "test_expressions",
                  0.6708203932499369
                ],
                [
                  "test_with_expressions",
                  "test_with_dependencies",
                  0.990990990990991
                ],
                [
                  "test_normalize_language",
                  "test_scrape_website",
                  0.16609095970747995
                ],
                [
                  "test_with_dependencies",
                  "test_process",
                  0.06711560552140243
                ],
                [
                  "test_base_route",
                  "test_coreferences",
                  0.21320071635561041
                ],
                [
                  "test_check_output_format",
                  "test_get_text",
                  0.09877295966495894
                ],
                [
                  "test_base_route",
                  "test_expressions",
                  0.21320071635561041
                ],
                [
                  "test_with_dependencies",
                  "test_write_json",
                  0.16107745325136583
                ],
                [
                  "test_write_text",
                  "test_coreferences",
                  0.6708203932499369
                ],
                [
                  "test_with_expressions",
                  "test_write_output",
                  0.060030022518766414
                ],
                [
                  "test_process",
                  "test_token_list",
                  0.6708203932499369
                ],
                [
                  "test_normalize_language",
                  "test_dependencies",
                  0.6708203932499369
                ],
                [
                  "test_write_json",
                  "test_process",
                  0.2
                ],
                [
                  "test_with_expressions",
                  "test_handle_error",
                  0.060030022518766414
                ],
                [
                  "test_with_constituents",
                  "test_get_args",
                  0.060030022518766414
                ],
                [
                  "test_with_dependencies",
                  "test_normalize_language",
                  0.060030022518766414
                ],
                [
                  "test_with_dependencies",
                  "test_get_text",
                  0.060030022518766414
                ],
                [
                  "test_base_route",
                  "test_with_coreferences",
                  0.17170914210964275
                ],
                [
                  "test_with_coreferences",
                  "test_expressions",
                  0.06711560552140243
                ],
                [
                  "test_with_coreferences",
                  "test_coreferences",
                  0.10067340828210365
                ],
                [
                  "test_normalize_language",
                  "test_process",
                  0.6708203932499369
                ],
                [
                  "test_get_output_format",
                  "test_coreferences",
                  0.6123724356957946
                ],
                [
                  "test_base_route",
                  "test_with_dependencies",
                  0.17170914210964275
                ],
                [
                  "test_write_output",
                  "test_constituents",
                  0.6708203932499369
                ],
                [
                  "test_scrape_website",
                  "test_write_text",
                  0.16609095970747995
                ],
                [
                  "test_check_output_format",
                  "test_write_output",
                  0.09877295966495894
                ],
                [
                  "test_base_route",
                  "test_get_output_format",
                  0.17407765595569785
                ],
                [
                  "test_get_text",
                  "test_write_json",
                  0.17888543819998318
                ],
                [
                  "test_get_output_format",
                  "test_expressions",
                  0.6123724356957946
                ],
                [
                  "test_write_json",
                  "test_write_text",
                  0.2683281572999747
                ],
                [
                  "test_write_output",
                  "test_write_json",
                  0.2683281572999747
                ],
                [
                  "test_with_coreferences",
                  "test_with_dependencies",
                  0.990990990990991
                ],
                [
                  "test_scrape_website_fail",
                  "test_get_args",
                  0.26967994498529685
                ],
                [
                  "test_run_pipeline",
                  "test_handle_error",
                  0.5999999999999999
                ],
                [
                  "test_process",
                  "test_coreferences",
                  0.75
                ],
                [
                  "test_with_dependencies",
                  "test_coreferences",
                  0.06711560552140243
                ],
                [
                  "test_with_dependencies",
                  "test_expressions",
                  0.06711560552140243
                ],
                [
                  "test_base_route",
                  "test_get_text",
                  0.19069251784911842
                ],
                [
                  "test_write_text",
                  "test_token_list",
                  0.5999999999999999
                ],
                [
                  "test_with_expressions",
                  "test_get_output_format",
                  0.0547996624351191
                ],
                [
                  "test_get_args",
                  "test_constituents",
                  0.6708203932499369
                ],
                [
                  "test_with_coreferences",
                  "test_write_text",
                  0.060030022518766414
                ],
                [
                  "test_normalize_language",
                  "test_scrape_website_fail",
                  0.26967994498529685
                ],
                [
                  "test_get_text",
                  "test_process",
                  0.6708203932499369
                ],
                [
                  "test_get_text",
                  "test_token_list",
                  0.5999999999999999
                ],
                [
                  "test_process",
                  "test_expressions",
                  0.75
                ],
                [
                  "test_write_text",
                  "test_process",
                  0.6708203932499369
                ],
                [
                  "test_write_json",
                  "test_coreferences",
                  0.2
                ],
                [
                  "test_check_output_format",
                  "test_get_args",
                  0.09877295966495894
                ],
                [
                  "test_scrape_website",
                  "test_get_output_format",
                  0.1516196087157807
                ],
                [
                  "test_scrape_website_fail",
                  "test_write_text",
                  0.26967994498529685
                ],
                [
                  "test_scrape_website_fail",
                  "test_get_output_format",
                  0.2461829819586655
                ],
                [
                  "test_get_text",
                  "test_expressions",
                  0.6708203932499369
                ],
                [
                  "test_scrape_website",
                  "test_get_args",
                  0.16609095970747995
                ],
                [
                  "test_coreferences",
                  "test_expressions",
                  0.75
                ],
                [
                  "test_normalize_language",
                  "test_write_json",
                  0.17888543819998318
                ],
                [
                  "test_check_output_format",
                  "test_handle_error",
                  0.09877295966495894
                ],
                [
                  "test_write_output",
                  "test_dependencies",
                  0.6708203932499369
                ],
                [
                  "test_get_text",
                  "test_coreferences",
                  0.6708203932499369
                ],
                [
                  "test_with_coreferences",
                  "test_get_text",
                  0.060030022518766414
                ],
                [
                  "test_run_pipeline",
                  "test_get_output_format",
                  0.5477225575051661
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_base_route",
                "false"
              ],
              [
                "test_get_args",
                "false"
              ],
              [
                "test_token_list",
                "false"
              ],
              [
                "test_write_json",
                "false"
              ],
              [
                "test_dependencies",
                "false"
              ],
              [
                "test_run_pipeline",
                "false"
              ],
              [
                "test_scrape_website_fail",
                "false"
              ],
              [
                "test_constituents",
                "false"
              ],
              [
                "test_check_output_format",
                "false"
              ],
              [
                "test_with_constituents",
                "false"
              ],
              [
                "test_with_coreferences",
                "false"
              ],
              [
                "test_process",
                "false"
              ],
              [
                "test_with_dependencies",
                "false"
              ],
              [
                "test_write_output",
                "false"
              ],
              [
                "test_scrape_website",
                "false"
              ],
              [
                "test_expressions",
                "false"
              ],
              [
                "test_write_text",
                "false"
              ],
              [
                "test_coreferences",
                "false"
              ],
              [
                "test_get_text",
                "false"
              ],
              [
                "test_get_output_format",
                "false"
              ],
              [
                "test_with_expressions",
                "false"
              ],
              [
                "test_normalize_language",
                "false"
              ],
              [
                "test_handle_error",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 23
      }
    ]
  }
]