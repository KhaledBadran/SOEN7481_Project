[
  {
    "name": "tests_\u0026_test_transformer.py",
    "testCases": [
      {
        "name": "TestInvalidRuntime",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_invalid_runtime",
                  "[PyCallExpression: self.assertRaises]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_invalid_runtime",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_invalid_runtime",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_invalid_runtime",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_invalid_runtime",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_invalid_runtime",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_invalid_runtime",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_invalid_runtime",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_invalid_runtime",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_invalid_runtime",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_invalid_runtime",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_invalid_runtime",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_invalid_runtime",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_invalid_runtime",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_invalid_runtime",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_invalid_runtime",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_invalid_runtime",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_invalid_runtime",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_invalid_runtime",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      },
      {
        "name": "TestMiniRacer",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_transform_string",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_transform_vue_jsx",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_large_file",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_jquery",
                  "[]"
                ],
                [
                  "test_invalid_js",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_transform",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_transform_string",
                  "[]"
                ],
                [
                  "test_transform_vue_jsx",
                  "[]"
                ],
                [
                  "test_large_file",
                  "[]"
                ],
                [
                  "test_jquery",
                  "[]"
                ],
                [
                  "test_invalid_js",
                  "[]"
                ],
                [
                  "test_transform",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_transform_string",
                  "false"
                ],
                [
                  "test_transform_vue_jsx",
                  "false"
                ],
                [
                  "test_large_file",
                  "false"
                ],
                [
                  "test_jquery",
                  "false"
                ],
                [
                  "test_invalid_js",
                  "false"
                ],
                [
                  "test_transform",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_transform_string",
                  "false"
                ],
                [
                  "test_transform_vue_jsx",
                  "false"
                ],
                [
                  "test_large_file",
                  "false"
                ],
                [
                  "test_jquery",
                  "false"
                ],
                [
                  "test_invalid_js",
                  "false"
                ],
                [
                  "test_transform",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_transform_string",
                  "false"
                ],
                [
                  "test_transform_vue_jsx",
                  "false"
                ],
                [
                  "test_large_file",
                  "false"
                ],
                [
                  "test_jquery",
                  "false"
                ],
                [
                  "test_invalid_js",
                  "false"
                ],
                [
                  "test_transform",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_transform_string",
                  "false"
                ],
                [
                  "test_transform_vue_jsx",
                  "false"
                ],
                [
                  "test_large_file",
                  "false"
                ],
                [
                  "test_jquery",
                  "false"
                ],
                [
                  "test_invalid_js",
                  "false"
                ],
                [
                  "test_transform",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_transform_string",
                "false"
              ],
              [
                "test_transform_vue_jsx",
                "false"
              ],
              [
                "test_large_file",
                "false"
              ],
              [
                "test_jquery",
                "false"
              ],
              [
                "test_invalid_js",
                "false"
              ],
              [
                "test_transform",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_transform_string",
                "false"
              ],
              [
                "test_transform_vue_jsx",
                "false"
              ],
              [
                "test_large_file",
                "false"
              ],
              [
                "test_jquery",
                "false"
              ],
              [
                "test_invalid_js",
                "false"
              ],
              [
                "test_transform",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_transform_string",
                [
                  "self.start_time"
                ]
              ],
              [
                "test_transform_vue_jsx",
                [
                  "self.start_time"
                ]
              ],
              [
                "test_large_file",
                [
                  "self.start_time"
                ]
              ],
              [
                "test_jquery",
                [
                  "self.start_time"
                ]
              ],
              [
                "test_invalid_js",
                [
                  "self.start_time"
                ]
              ],
              [
                "test_transform",
                [
                  "self.start_time"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_transform_string",
                "false"
              ],
              [
                "test_transform_vue_jsx",
                "false"
              ],
              [
                "test_large_file",
                "false"
              ],
              [
                "test_jquery",
                "false"
              ],
              [
                "test_invalid_js",
                "false"
              ],
              [
                "test_transform",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_transform_string",
                "false"
              ],
              [
                "test_transform_vue_jsx",
                "false"
              ],
              [
                "test_large_file",
                "false"
              ],
              [
                "test_jquery",
                "false"
              ],
              [
                "test_invalid_js",
                "false"
              ],
              [
                "test_transform",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_transform_string",
                  "0"
                ],
                [
                  "test_transform_vue_jsx",
                  "0"
                ],
                [
                  "test_large_file",
                  "0"
                ],
                [
                  "test_jquery",
                  "0"
                ],
                [
                  "test_invalid_js",
                  "0"
                ],
                [
                  "test_transform",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_transform_string",
                  "0"
                ],
                [
                  "test_transform_vue_jsx",
                  "0"
                ],
                [
                  "test_large_file",
                  "0"
                ],
                [
                  "test_jquery",
                  "0"
                ],
                [
                  "test_invalid_js",
                  "0"
                ],
                [
                  "test_transform",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_transform_string",
                "false"
              ],
              [
                "test_transform_vue_jsx",
                "false"
              ],
              [
                "test_large_file",
                "false"
              ],
              [
                "test_jquery",
                "false"
              ],
              [
                "test_invalid_js",
                "false"
              ],
              [
                "test_transform",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_transform_string",
                "false"
              ],
              [
                "test_transform_vue_jsx",
                "false"
              ],
              [
                "test_large_file",
                "false"
              ],
              [
                "test_jquery",
                "false"
              ],
              [
                "test_invalid_js",
                "false"
              ],
              [
                "test_transform",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_transform_string",
                "1"
              ],
              [
                "test_transform_vue_jsx",
                "1"
              ],
              [
                "test_large_file",
                "1"
              ],
              [
                "test_jquery",
                "0"
              ],
              [
                "test_invalid_js",
                "1"
              ],
              [
                "test_transform",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_transform_string",
                [
                  "code"
                ]
              ],
              [
                "test_transform_vue_jsx",
                [
                  "code",
                  "expected_code",
                  "js_path"
                ]
              ],
              [
                "test_large_file",
                [
                  "code",
                  "js_path"
                ]
              ],
              [
                "test_jquery",
                [
                  "js_path"
                ]
              ],
              [
                "test_invalid_js",
                []
              ],
              [
                "test_transform",
                [
                  "code",
                  "js_path"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_transform_string",
                []
              ],
              [
                "test_transform_vue_jsx",
                []
              ],
              [
                "test_large_file",
                []
              ],
              [
                "test_jquery",
                []
              ],
              [
                "test_invalid_js",
                []
              ],
              [
                "test_transform",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.39874476913533313,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_transform",
                  "test_transform_vue_jsx",
                  0.5156879540323449
                ],
                [
                  "test_transform_string",
                  "test_jquery",
                  0.26490647141300877
                ],
                [
                  "test_transform_vue_jsx",
                  "test_jquery",
                  0.4296689244236598
                ],
                [
                  "test_transform",
                  "test_invalid_js",
                  0.21128856368212912
                ],
                [
                  "test_invalid_js",
                  "test_large_file",
                  0.17888543819998318
                ],
                [
                  "test_transform_vue_jsx",
                  "test_invalid_js",
                  0.1386750490563073
                ],
                [
                  "test_transform",
                  "test_jquery",
                  0.6546536707079772
                ],
                [
                  "test_transform_vue_jsx",
                  "test_large_file",
                  0.4713319914389922
                ],
                [
                  "test_transform_string",
                  "test_transform_vue_jsx",
                  0.3414662359346833
                ],
                [
                  "test_transform_string",
                  "test_large_file",
                  0.43588989435406733
                ],
                [
                  "test_transform",
                  "test_large_file",
                  0.6425396041156863
                ],
                [
                  "test_large_file",
                  "test_jquery",
                  0.6350852961085884
                ],
                [
                  "test_invalid_js",
                  "test_jquery",
                  0.19364916731037085
                ],
                [
                  "test_transform_string",
                  "test_transform",
                  0.5852992294287809
                ],
                [
                  "test_transform_string",
                  "test_invalid_js",
                  0.28214404682341737
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_transform_string",
                "false"
              ],
              [
                "test_transform_vue_jsx",
                "false"
              ],
              [
                "test_large_file",
                "false"
              ],
              [
                "test_jquery",
                "false"
              ],
              [
                "test_invalid_js",
                "false"
              ],
              [
                "test_transform",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      }
    ]
  }
]