[
  {
    "name": "tests_\u0026_test_enum.py",
    "testCases": [
      {
        "name": "RouteModeTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_valueofenum",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_valueofenum",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_valueofenum",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_valueofenum",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "12"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": true,
            "detail": [
              [
                "test_valueofenum",
                [
                  "car",
                  "fastest",
                  "car_hov",
                  "truck",
                  "traffic_default",
                  "pedestrian",
                  "balanced",
                  "traffic_disabled",
                  "traffic_enabled",
                  "enabled",
                  "shortest",
                  "publicTransport"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      },
      {
        "name": "PlacesCategoryTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_valueofenum",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_valueofenum",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_valueofenum",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_valueofenum",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                [
                  "accomodation"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      },
      {
        "name": "PublicTransitSearchMethodTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_valueofenum",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_valueofenum",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_valueofenum",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_valueofenum",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                [
                  "strict",
                  "fuzzy"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      },
      {
        "name": "PublicTransitModeTypeTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_valueofenum",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_valueofenum",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_valueofenum",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_valueofenum",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "16"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": true,
            "detail": [
              [
                "test_valueofenum",
                [
                  "bus",
                  "flight",
                  "bus_rapid",
                  "high_speed_train",
                  "inclined",
                  "regional_train",
                  "light_rail",
                  "aerial",
                  "private_bus",
                  "intercity_train",
                  "monorail",
                  "inter_regional_train",
                  "city_train",
                  "subway",
                  "ferry",
                  "walk"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      },
      {
        "name": "PublicTransitRoutingModeTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_valueofenum",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_valueofenum",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_valueofenum",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_valueofenum",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                [
                  "schedule",
                  "realtime"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      },
      {
        "name": "EVStationConnectorTypesTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_valueofenum",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_valueofenum",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_valueofenum",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_valueofenum",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "50"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": true,
            "detail": [
              [
                "test_valueofenum",
                [
                  "iec_60309_industrial_p_n_e_ceeplus",
                  "i_type_as__nz_3112",
                  "as_nzs_3112",
                  "iec_62196_2_type_3c",
                  "iec_62196_3_type_2_combo",
                  "sev_1011__t25",
                  "iec_61851_1",
                  "tesla_connector_high_power_wall",
                  "sev_1011__t23",
                  "nema_5_20",
                  "unspecified",
                  "iec_60309_industrial_3p_e_n",
                  "avcon_connector",
                  "cee_7_5",
                  "iec_62196_2_type_2_sae_j1772",
                  "cee_7_7",
                  "domestic_plug_socket_type_c",
                  "thailand_tis_166_2549",
                  "domestic_plug_socket_type_a",
                  "tesla_connector",
                  "better_place_plug",
                  "nema_5_15",
                  "other",
                  "jevs_g_105",
                  "iec_62196_2_type_1",
                  "domestic_plug_socket_type_j",
                  "tesla_connector_universal_mobile",
                  "iec_60309_industrial_2p_e_ac",
                  "south_african_15_a__250_v",
                  "cei_23_16__VII",
                  "iec_60309_industrial_p_n_e",
                  "cee_7_4_schuko",
                  "unallowed",
                  "large_paddle_inductive",
                  "bs_546_3_pin",
                  "section_107_2_d1",
                  "cpcs_ccc",
                  "iram_2073",
                  "marechal_plug",
                  "iec_60906_1_3_pin",
                  "iec_60309_industrial_3p_n_e",
                  "si_32",
                  "iec_60309_industrial_2p_e_dc",
                  "bs_1363__is_401_411__ms_58",
                  "tesla_connector_spare_mobile",
                  "small_paddle_inductive",
                  "sev_1011__t13",
                  "iec_62196_3_type_1_combo",
                  "sev_1011__t15",
                  "iec_62196_2_type_2_mennekes"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      },
      {
        "name": "MultiplePickupOfferTypeTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_valueofenum",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_valueofenum",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_valueofenum",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_valueofenum",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_valueofenum",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                [
                  "drop",
                  "pickup"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_valueofenum",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_utils.py",
    "testCases": [
      {
        "name": "UtilsTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_buildurl",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_encodeparameters",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_buildurl",
                  "[]"
                ],
                [
                  "test_encodeparameters",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_buildurl",
                  "false"
                ],
                [
                  "test_encodeparameters",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_buildurl",
                  "false"
                ],
                [
                  "test_encodeparameters",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_buildurl",
                  "false"
                ],
                [
                  "test_encodeparameters",
                  "true"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_buildurl",
                  "false"
                ],
                [
                  "test_encodeparameters",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_buildurl",
                "false"
              ],
              [
                "test_encodeparameters",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_buildurl",
                "false"
              ],
              [
                "test_encodeparameters",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_buildurl",
                []
              ],
              [
                "test_encodeparameters",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_buildurl",
                "false"
              ],
              [
                "test_encodeparameters",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_buildurl",
                "false"
              ],
              [
                "test_encodeparameters",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_buildurl",
                  "0"
                ],
                [
                  "test_encodeparameters",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_buildurl",
                  "0"
                ],
                [
                  "test_encodeparameters",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_buildurl",
                "false"
              ],
              [
                "test_encodeparameters",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_buildurl",
                "false"
              ],
              [
                "test_encodeparameters",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_buildurl",
                "1"
              ],
              [
                "test_encodeparameters",
                "3"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_buildurl",
                [
                  "data",
                  "url"
                ]
              ],
              [
                "test_encodeparameters",
                [
                  "encodedParameters",
                  "data"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_buildurl",
                []
              ],
              [
                "test_encodeparameters",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7290634141798495,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_encodeparameters",
                  "test_buildurl",
                  0.7290634141798495
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_buildurl",
                "false"
              ],
              [
                "test_encodeparameters",
                "true"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_models.py",
    "testCases": [
      {
        "name": "ModelsTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_routing_response",
                  "[PyCallExpression: self.fail, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_geocoder_response",
                  "[PyCallExpression: self.fail, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_routingapi_matrix_response",
                  "[PyCallExpression: self.fail, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_traffic_incident_response",
                  "[PyCallExpression: self.fail, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_destination_weather_response",
                  "[PyCallExpression: self.fail, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_geocoder_autocompleteresponse",
                  "[PyCallExpression: self.fail, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_placesapi_response",
                  "[PyCallExpression: self.fail, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_publictransitapi_response",
                  "[PyCallExpression: self.fail, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_routing_response",
                  "[]"
                ],
                [
                  "test_geocoder_response",
                  "[]"
                ],
                [
                  "test_routingapi_matrix_response",
                  "[]"
                ],
                [
                  "test_traffic_incident_response",
                  "[]"
                ],
                [
                  "test_destination_weather_response",
                  "[]"
                ],
                [
                  "test_geocoder_autocompleteresponse",
                  "[]"
                ],
                [
                  "test_placesapi_response",
                  "[]"
                ],
                [
                  "test_publictransitapi_response",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_routing_response",
                  "false"
                ],
                [
                  "test_geocoder_response",
                  "false"
                ],
                [
                  "test_routingapi_matrix_response",
                  "false"
                ],
                [
                  "test_traffic_incident_response",
                  "false"
                ],
                [
                  "test_destination_weather_response",
                  "false"
                ],
                [
                  "test_geocoder_autocompleteresponse",
                  "false"
                ],
                [
                  "test_placesapi_response",
                  "false"
                ],
                [
                  "test_publictransitapi_response",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_routing_response",
                  "false"
                ],
                [
                  "test_geocoder_response",
                  "false"
                ],
                [
                  "test_routingapi_matrix_response",
                  "false"
                ],
                [
                  "test_traffic_incident_response",
                  "false"
                ],
                [
                  "test_destination_weather_response",
                  "false"
                ],
                [
                  "test_geocoder_autocompleteresponse",
                  "false"
                ],
                [
                  "test_placesapi_response",
                  "false"
                ],
                [
                  "test_publictransitapi_response",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_routing_response",
                  "false"
                ],
                [
                  "test_geocoder_response",
                  "false"
                ],
                [
                  "test_routingapi_matrix_response",
                  "false"
                ],
                [
                  "test_traffic_incident_response",
                  "false"
                ],
                [
                  "test_destination_weather_response",
                  "false"
                ],
                [
                  "test_geocoder_autocompleteresponse",
                  "false"
                ],
                [
                  "test_placesapi_response",
                  "false"
                ],
                [
                  "test_publictransitapi_response",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_routing_response",
                  "false"
                ],
                [
                  "test_geocoder_response",
                  "false"
                ],
                [
                  "test_routingapi_matrix_response",
                  "false"
                ],
                [
                  "test_traffic_incident_response",
                  "false"
                ],
                [
                  "test_destination_weather_response",
                  "false"
                ],
                [
                  "test_geocoder_autocompleteresponse",
                  "false"
                ],
                [
                  "test_placesapi_response",
                  "false"
                ],
                [
                  "test_publictransitapi_response",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_routing_response",
                "false"
              ],
              [
                "test_geocoder_response",
                "false"
              ],
              [
                "test_routingapi_matrix_response",
                "false"
              ],
              [
                "test_traffic_incident_response",
                "false"
              ],
              [
                "test_destination_weather_response",
                "false"
              ],
              [
                "test_geocoder_autocompleteresponse",
                "false"
              ],
              [
                "test_placesapi_response",
                "false"
              ],
              [
                "test_publictransitapi_response",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_routing_response",
                "true"
              ],
              [
                "test_geocoder_response",
                "true"
              ],
              [
                "test_routingapi_matrix_response",
                "true"
              ],
              [
                "test_traffic_incident_response",
                "true"
              ],
              [
                "test_destination_weather_response",
                "true"
              ],
              [
                "test_geocoder_autocompleteresponse",
                "true"
              ],
              [
                "test_placesapi_response",
                "true"
              ],
              [
                "test_publictransitapi_response",
                "true"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_routing_response",
                []
              ],
              [
                "test_geocoder_response",
                []
              ],
              [
                "test_routingapi_matrix_response",
                []
              ],
              [
                "test_traffic_incident_response",
                []
              ],
              [
                "test_destination_weather_response",
                []
              ],
              [
                "test_geocoder_autocompleteresponse",
                []
              ],
              [
                "test_placesapi_response",
                []
              ],
              [
                "test_publictransitapi_response",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_routing_response",
                "false"
              ],
              [
                "test_geocoder_response",
                "false"
              ],
              [
                "test_routingapi_matrix_response",
                "false"
              ],
              [
                "test_traffic_incident_response",
                "false"
              ],
              [
                "test_destination_weather_response",
                "false"
              ],
              [
                "test_geocoder_autocompleteresponse",
                "false"
              ],
              [
                "test_placesapi_response",
                "false"
              ],
              [
                "test_publictransitapi_response",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_routing_response",
                "false"
              ],
              [
                "test_geocoder_response",
                "false"
              ],
              [
                "test_routingapi_matrix_response",
                "false"
              ],
              [
                "test_traffic_incident_response",
                "false"
              ],
              [
                "test_destination_weather_response",
                "false"
              ],
              [
                "test_geocoder_autocompleteresponse",
                "false"
              ],
              [
                "test_placesapi_response",
                "false"
              ],
              [
                "test_publictransitapi_response",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_routing_response",
                  "0"
                ],
                [
                  "test_geocoder_response",
                  "0"
                ],
                [
                  "test_routingapi_matrix_response",
                  "0"
                ],
                [
                  "test_traffic_incident_response",
                  "0"
                ],
                [
                  "test_destination_weather_response",
                  "0"
                ],
                [
                  "test_geocoder_autocompleteresponse",
                  "0"
                ],
                [
                  "test_placesapi_response",
                  "0"
                ],
                [
                  "test_publictransitapi_response",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_routing_response",
                  "0"
                ],
                [
                  "test_geocoder_response",
                  "0"
                ],
                [
                  "test_routingapi_matrix_response",
                  "0"
                ],
                [
                  "test_traffic_incident_response",
                  "0"
                ],
                [
                  "test_destination_weather_response",
                  "0"
                ],
                [
                  "test_geocoder_autocompleteresponse",
                  "0"
                ],
                [
                  "test_placesapi_response",
                  "0"
                ],
                [
                  "test_publictransitapi_response",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_routing_response",
                "false"
              ],
              [
                "test_geocoder_response",
                "false"
              ],
              [
                "test_routingapi_matrix_response",
                "false"
              ],
              [
                "test_traffic_incident_response",
                "false"
              ],
              [
                "test_destination_weather_response",
                "false"
              ],
              [
                "test_geocoder_autocompleteresponse",
                "false"
              ],
              [
                "test_placesapi_response",
                "false"
              ],
              [
                "test_publictransitapi_response",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_routing_response",
                "false"
              ],
              [
                "test_geocoder_response",
                "false"
              ],
              [
                "test_routingapi_matrix_response",
                "false"
              ],
              [
                "test_traffic_incident_response",
                "false"
              ],
              [
                "test_destination_weather_response",
                "false"
              ],
              [
                "test_geocoder_autocompleteresponse",
                "false"
              ],
              [
                "test_placesapi_response",
                "false"
              ],
              [
                "test_publictransitapi_response",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_routing_response",
                "2"
              ],
              [
                "test_geocoder_response",
                "2"
              ],
              [
                "test_routingapi_matrix_response",
                "2"
              ],
              [
                "test_traffic_incident_response",
                "2"
              ],
              [
                "test_destination_weather_response",
                "2"
              ],
              [
                "test_geocoder_autocompleteresponse",
                "2"
              ],
              [
                "test_placesapi_response",
                "2"
              ],
              [
                "test_publictransitapi_response",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_routing_response",
                [
                  "routingResponse"
                ]
              ],
              [
                "test_geocoder_response",
                [
                  "geocoderResponse"
                ]
              ],
              [
                "test_routingapi_matrix_response",
                [
                  "routing_matrix_response"
                ]
              ],
              [
                "test_traffic_incident_response",
                [
                  "trafficIncidentResponse"
                ]
              ],
              [
                "test_destination_weather_response",
                [
                  "destinationWeatherResponse"
                ]
              ],
              [
                "test_geocoder_autocompleteresponse",
                [
                  "geocoderAutoCompleteResponse"
                ]
              ],
              [
                "test_placesapi_response",
                [
                  "placesApiResponse"
                ]
              ],
              [
                "test_publictransitapi_response",
                [
                  "publicTransitResponse"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_routing_response",
                []
              ],
              [
                "test_geocoder_response",
                []
              ],
              [
                "test_routingapi_matrix_response",
                []
              ],
              [
                "test_traffic_incident_response",
                []
              ],
              [
                "test_destination_weather_response",
                []
              ],
              [
                "test_geocoder_autocompleteresponse",
                []
              ],
              [
                "test_placesapi_response",
                []
              ],
              [
                "test_publictransitapi_response",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5697035718700373,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_routingapi_matrix_response",
                  "test_placesapi_response",
                  0.5732115042211109
                ],
                [
                  "test_routing_response",
                  "test_routingapi_matrix_response",
                  0.8309489698388165
                ],
                [
                  "test_routing_response",
                  "test_traffic_incident_response",
                  0.5570860145311556
                ],
                [
                  "test_routingapi_matrix_response",
                  "test_destination_weather_response",
                  0.5179513148644966
                ],
                [
                  "test_routing_response",
                  "test_destination_weather_response",
                  0.564361876886517
                ],
                [
                  "test_publictransitapi_response",
                  "test_traffic_incident_response",
                  0.5228036105081428
                ],
                [
                  "test_publictransitapi_response",
                  "test_destination_weather_response",
                  0.5378528742004771
                ],
                [
                  "test_geocoder_response",
                  "test_publictransitapi_response",
                  0.6161483198488372
                ],
                [
                  "test_geocoder_autocompleteresponse",
                  "test_destination_weather_response",
                  0.46462966532383704
                ],
                [
                  "test_placesapi_response",
                  "test_publictransitapi_response",
                  0.6304883249912805
                ],
                [
                  "test_geocoder_response",
                  "test_routing_response",
                  0.6666666666666665
                ],
                [
                  "test_geocoder_autocompleteresponse",
                  "test_traffic_incident_response",
                  0.4511775769063954
                ],
                [
                  "test_geocoder_response",
                  "test_geocoder_autocompleteresponse",
                  0.7608272549847584
                ],
                [
                  "test_geocoder_response",
                  "test_placesapi_response",
                  0.6298425590379013
                ],
                [
                  "test_geocoder_autocompleteresponse",
                  "test_publictransitapi_response",
                  0.5060523618897939
                ],
                [
                  "test_routing_response",
                  "test_placesapi_response",
                  0.6298425590379013
                ],
                [
                  "test_routingapi_matrix_response",
                  "test_traffic_incident_response",
                  0.5069967213040162
                ],
                [
                  "test_routingapi_matrix_response",
                  "test_geocoder_autocompleteresponse",
                  0.4873274808110531
                ],
                [
                  "test_routingapi_matrix_response",
                  "test_publictransitapi_response",
                  0.5646924393157821
                ],
                [
                  "test_placesapi_response",
                  "test_traffic_incident_response",
                  0.5306907320287632
                ],
                [
                  "test_placesapi_response",
                  "test_destination_weather_response",
                  0.5421572781254249
                ],
                [
                  "test_traffic_incident_response",
                  "test_destination_weather_response",
                  0.4795297380051724
                ],
                [
                  "test_routing_response",
                  "test_geocoder_autocompleteresponse",
                  0.5309940217081127
                ],
                [
                  "test_geocoder_response",
                  "test_destination_weather_response",
                  0.564361876886517
                ],
                [
                  "test_geocoder_response",
                  "test_routingapi_matrix_response",
                  0.6017216678143154
                ],
                [
                  "test_geocoder_response",
                  "test_traffic_incident_response",
                  0.5570860145311556
                ],
                [
                  "test_routing_response",
                  "test_publictransitapi_response",
                  0.6161483198488372
                ],
                [
                  "test_geocoder_autocompleteresponse",
                  "test_placesapi_response",
                  0.5101022682438047
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_routing_response",
                "false"
              ],
              [
                "test_geocoder_response",
                "false"
              ],
              [
                "test_routingapi_matrix_response",
                "false"
              ],
              [
                "test_traffic_incident_response",
                "false"
              ],
              [
                "test_destination_weather_response",
                "false"
              ],
              [
                "test_geocoder_autocompleteresponse",
                "false"
              ],
              [
                "test_placesapi_response",
                "false"
              ],
              [
                "test_publictransitapi_response",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 8
      }
    ]
  },
  {
    "name": "tests_\u0026_test_rme_api.py",
    "testCases": [
      {
        "name": "RmeApiTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_match_route_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_initiation",
                  "[PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_match_route_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_match_route_whenerroroccured",
                  "[]"
                ],
                [
                  "test_initiation",
                  "[]"
                ],
                [
                  "test_match_route_whensucceed",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_match_route_whenerroroccured",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_match_route_whensucceed",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_match_route_whenerroroccured",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_match_route_whensucceed",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_match_route_whenerroroccured",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_match_route_whensucceed",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_match_route_whenerroroccured",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_match_route_whensucceed",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_match_route_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_match_route_whensucceed",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_match_route_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_match_route_whensucceed",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_match_route_whenerroroccured",
                []
              ],
              [
                "test_initiation",
                []
              ],
              [
                "test_match_route_whensucceed",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_match_route_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_match_route_whensucceed",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_match_route_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_match_route_whensucceed",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_match_route_whenerroroccured",
                  "0"
                ],
                [
                  "test_initiation",
                  "0"
                ],
                [
                  "test_match_route_whensucceed",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_match_route_whenerroroccured",
                  "0"
                ],
                [
                  "test_initiation",
                  "0"
                ],
                [
                  "test_match_route_whensucceed",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_match_route_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_match_route_whensucceed",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_match_route_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_match_route_whensucceed",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_match_route_whenerroroccured",
                "1"
              ],
              [
                "test_initiation",
                "3"
              ],
              [
                "test_match_route_whensucceed",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_match_route_whenerroroccured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_initiation",
                []
              ],
              [
                "test_match_route_whensucceed",
                [
                  "expectedResponse",
                  "response",
                  "gpx_content"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_match_route_whenerroroccured",
                [
                  "self._api"
                ]
              ],
              [
                "test_initiation",
                [
                  "self._api"
                ]
              ],
              [
                "test_match_route_whensucceed",
                [
                  "self._api"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.3434941538158265,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_initiation",
                  "test_match_route_whensucceed",
                  0.21938172723813917
                ],
                [
                  "test_match_route_whensucceed",
                  "test_match_route_whenerroroccured",
                  0.6396021490668313
                ],
                [
                  "test_initiation",
                  "test_match_route_whenerroroccured",
                  0.17149858514250882
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_match_route_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_match_route_whensucceed",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_places_api.py",
    "testCases": [
      {
        "name": "PlacesApiTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_search_in_country_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_search_in_country_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_places_in_circle_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_onebox_search_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_onebox_search_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_initiation",
                  "[PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_places_in_circle_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_search_in_country_whenerroroccured",
                  "[]"
                ],
                [
                  "test_search_in_country_whensucceed",
                  "[]"
                ],
                [
                  "test_places_in_circle_whensucceed",
                  "[]"
                ],
                [
                  "test_onebox_search_whenerroroccured",
                  "[]"
                ],
                [
                  "test_onebox_search_whensucceed",
                  "[]"
                ],
                [
                  "test_initiation",
                  "[]"
                ],
                [
                  "test_places_in_circle_whenerroroccured",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_search_in_country_whenerroroccured",
                  "false"
                ],
                [
                  "test_search_in_country_whensucceed",
                  "false"
                ],
                [
                  "test_places_in_circle_whensucceed",
                  "false"
                ],
                [
                  "test_onebox_search_whenerroroccured",
                  "false"
                ],
                [
                  "test_onebox_search_whensucceed",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_places_in_circle_whenerroroccured",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_search_in_country_whenerroroccured",
                  "false"
                ],
                [
                  "test_search_in_country_whensucceed",
                  "false"
                ],
                [
                  "test_places_in_circle_whensucceed",
                  "false"
                ],
                [
                  "test_onebox_search_whenerroroccured",
                  "false"
                ],
                [
                  "test_onebox_search_whensucceed",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_places_in_circle_whenerroroccured",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_search_in_country_whenerroroccured",
                  "false"
                ],
                [
                  "test_search_in_country_whensucceed",
                  "false"
                ],
                [
                  "test_places_in_circle_whensucceed",
                  "false"
                ],
                [
                  "test_onebox_search_whenerroroccured",
                  "false"
                ],
                [
                  "test_onebox_search_whensucceed",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_places_in_circle_whenerroroccured",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_search_in_country_whenerroroccured",
                  "false"
                ],
                [
                  "test_search_in_country_whensucceed",
                  "false"
                ],
                [
                  "test_places_in_circle_whensucceed",
                  "false"
                ],
                [
                  "test_onebox_search_whenerroroccured",
                  "false"
                ],
                [
                  "test_onebox_search_whensucceed",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_places_in_circle_whenerroroccured",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_search_in_country_whenerroroccured",
                "false"
              ],
              [
                "test_search_in_country_whensucceed",
                "false"
              ],
              [
                "test_places_in_circle_whensucceed",
                "false"
              ],
              [
                "test_onebox_search_whenerroroccured",
                "false"
              ],
              [
                "test_onebox_search_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_places_in_circle_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_search_in_country_whenerroroccured",
                "false"
              ],
              [
                "test_search_in_country_whensucceed",
                "false"
              ],
              [
                "test_places_in_circle_whensucceed",
                "false"
              ],
              [
                "test_onebox_search_whenerroroccured",
                "false"
              ],
              [
                "test_onebox_search_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_places_in_circle_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_search_in_country_whenerroroccured",
                []
              ],
              [
                "test_search_in_country_whensucceed",
                []
              ],
              [
                "test_places_in_circle_whensucceed",
                []
              ],
              [
                "test_onebox_search_whenerroroccured",
                []
              ],
              [
                "test_onebox_search_whensucceed",
                []
              ],
              [
                "test_initiation",
                []
              ],
              [
                "test_places_in_circle_whenerroroccured",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_search_in_country_whenerroroccured",
                "false"
              ],
              [
                "test_search_in_country_whensucceed",
                "false"
              ],
              [
                "test_places_in_circle_whensucceed",
                "false"
              ],
              [
                "test_onebox_search_whenerroroccured",
                "false"
              ],
              [
                "test_onebox_search_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_places_in_circle_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_search_in_country_whenerroroccured",
                "false"
              ],
              [
                "test_search_in_country_whensucceed",
                "false"
              ],
              [
                "test_places_in_circle_whensucceed",
                "false"
              ],
              [
                "test_onebox_search_whenerroroccured",
                "false"
              ],
              [
                "test_onebox_search_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_places_in_circle_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_search_in_country_whenerroroccured",
                  "0"
                ],
                [
                  "test_search_in_country_whensucceed",
                  "0"
                ],
                [
                  "test_places_in_circle_whensucceed",
                  "0"
                ],
                [
                  "test_onebox_search_whenerroroccured",
                  "0"
                ],
                [
                  "test_onebox_search_whensucceed",
                  "0"
                ],
                [
                  "test_initiation",
                  "0"
                ],
                [
                  "test_places_in_circle_whenerroroccured",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_search_in_country_whenerroroccured",
                  "0"
                ],
                [
                  "test_search_in_country_whensucceed",
                  "0"
                ],
                [
                  "test_places_in_circle_whensucceed",
                  "0"
                ],
                [
                  "test_onebox_search_whenerroroccured",
                  "0"
                ],
                [
                  "test_onebox_search_whensucceed",
                  "0"
                ],
                [
                  "test_initiation",
                  "0"
                ],
                [
                  "test_places_in_circle_whenerroroccured",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_search_in_country_whenerroroccured",
                "false"
              ],
              [
                "test_search_in_country_whensucceed",
                "false"
              ],
              [
                "test_places_in_circle_whensucceed",
                "false"
              ],
              [
                "test_onebox_search_whenerroroccured",
                "false"
              ],
              [
                "test_onebox_search_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_places_in_circle_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_search_in_country_whenerroroccured",
                "false"
              ],
              [
                "test_search_in_country_whensucceed",
                "false"
              ],
              [
                "test_places_in_circle_whensucceed",
                "false"
              ],
              [
                "test_onebox_search_whenerroroccured",
                "false"
              ],
              [
                "test_onebox_search_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_places_in_circle_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_search_in_country_whenerroroccured",
                "1"
              ],
              [
                "test_search_in_country_whensucceed",
                "2"
              ],
              [
                "test_places_in_circle_whensucceed",
                "2"
              ],
              [
                "test_onebox_search_whenerroroccured",
                "1"
              ],
              [
                "test_onebox_search_whensucceed",
                "2"
              ],
              [
                "test_initiation",
                "3"
              ],
              [
                "test_places_in_circle_whenerroroccured",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_search_in_country_whenerroroccured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_search_in_country_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_places_in_circle_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_onebox_search_whenerroroccured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_onebox_search_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_initiation",
                []
              ],
              [
                "test_places_in_circle_whenerroroccured",
                [
                  "expectedResponse"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_search_in_country_whenerroroccured",
                [
                  "self._api"
                ]
              ],
              [
                "test_search_in_country_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_places_in_circle_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_onebox_search_whenerroroccured",
                [
                  "self._api"
                ]
              ],
              [
                "test_onebox_search_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_initiation",
                [
                  "self._api"
                ]
              ],
              [
                "test_places_in_circle_whenerroroccured",
                [
                  "self._api"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6303979321718699,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_onebox_search_whensucceed",
                  "test_onebox_search_whenerroroccured",
                  0.7985836518841366
                ],
                [
                  "test_onebox_search_whenerroroccured",
                  "test_search_in_country_whenerroroccured",
                  0.8854377448471461
                ],
                [
                  "test_onebox_search_whenerroroccured",
                  "test_places_in_circle_whensucceed",
                  0.6761234037828132
                ],
                [
                  "test_initiation",
                  "test_search_in_country_whenerroroccured",
                  0.16977493752543307
                ],
                [
                  "test_search_in_country_whensucceed",
                  "test_places_in_circle_whenerroroccured",
                  0.7331957115198573
                ],
                [
                  "test_search_in_country_whenerroroccured",
                  "test_places_in_circle_whenerroroccured",
                  0.893582993368683
                ],
                [
                  "test_search_in_country_whensucceed",
                  "test_places_in_circle_whensucceed",
                  0.8857220963492212
                ],
                [
                  "test_places_in_circle_whensucceed",
                  "test_places_in_circle_whenerroroccured",
                  0.8133728062534918
                ],
                [
                  "test_onebox_search_whenerroroccured",
                  "test_places_in_circle_whenerroroccured",
                  0.8600131635675317
                ],
                [
                  "test_onebox_search_whensucceed",
                  "test_search_in_country_whenerroroccured",
                  0.6993258208972302
                ],
                [
                  "test_onebox_search_whenerroroccured",
                  "test_search_in_country_whensucceed",
                  0.6986670116874983
                ],
                [
                  "test_search_in_country_whensucceed",
                  "test_search_in_country_whenerroroccured",
                  0.7732826790345916
                ],
                [
                  "test_search_in_country_whenerroroccured",
                  "test_places_in_circle_whensucceed",
                  0.7126966450997984
                ],
                [
                  "test_initiation",
                  "test_places_in_circle_whensucceed",
                  0.28088828020593787
                ],
                [
                  "test_initiation",
                  "test_onebox_search_whensucceed",
                  0.2826857084589273
                ],
                [
                  "test_onebox_search_whensucceed",
                  "test_places_in_circle_whensucceed",
                  0.8652902194186083
                ],
                [
                  "test_initiation",
                  "test_places_in_circle_whenerroroccured",
                  0.1884571389726182
                ],
                [
                  "test_initiation",
                  "test_onebox_search_whenerroroccured",
                  0.17895849739771974
                ],
                [
                  "test_onebox_search_whensucceed",
                  "test_search_in_country_whensucceed",
                  0.8762582893773904
                ],
                [
                  "test_initiation",
                  "test_search_in_country_whensucceed",
                  0.2679265684134639
                ],
                [
                  "test_onebox_search_whensucceed",
                  "test_places_in_circle_whenerroroccured",
                  0.6981132075471698
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_search_in_country_whenerroroccured",
                "false"
              ],
              [
                "test_search_in_country_whensucceed",
                "false"
              ],
              [
                "test_places_in_circle_whensucceed",
                "false"
              ],
              [
                "test_onebox_search_whenerroroccured",
                "false"
              ],
              [
                "test_onebox_search_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_places_in_circle_whenerroroccured",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      }
    ]
  },
  {
    "name": "tests_\u0026_test_routing_api.py",
    "testCases": [
      {
        "name": "RoutingApiTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_truckroute_when_error_invalid_input_data_occured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_matrix_bad_request",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_publictransport_route_short",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_matrix_multiple_starts",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_matrix_multiple_destinations",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_matrix_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_truckroute_withdefaultmodes_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_pedastrianroute_route_short",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_publictransport_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_carroute_route_short",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_matrix_multiple_destinations",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_truckroute_when_error_no_route_found_occured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_matrix_multiple_start_names",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_initiation",
                  "[PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_location_by_name",
                  "[]"
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_departure_as_string",
                  "[]"
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_truckroute_route_short",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_carroute_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_bicycleroute_route_short",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_departure_as_datetime",
                  "[]"
                ],
                [
                  "test_location_by_name_throws_WaypointNotFoundError",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_truckroute_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_truckroute_when_error_invalid_credentials_occured",
                  "[PyCallExpression: self.assertRaises]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_truckroute_when_error_invalid_input_data_occured",
                  "[]"
                ],
                [
                  "test_matrix_bad_request",
                  "[]"
                ],
                [
                  "test_publictransport_route_short",
                  "[]"
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "[]"
                ],
                [
                  "test_matrix_multiple_starts",
                  "[]"
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "[]"
                ],
                [
                  "test_matrix_multiple_destinations",
                  "[]"
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "[]"
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "[]"
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "[]"
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "[]"
                ],
                [
                  "test_matrix_whensucceed",
                  "[]"
                ],
                [
                  "test_truckroute_withdefaultmodes_whensucceed",
                  "[]"
                ],
                [
                  "test_pedastrianroute_route_short",
                  "[]"
                ],
                [
                  "test_publictransport_whensucceed",
                  "[]"
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "[]"
                ],
                [
                  "test_carroute_route_short",
                  "[]"
                ],
                [
                  "test_matrix_multiple_destinations",
                  "[]"
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "[]"
                ],
                [
                  "test_truckroute_when_error_no_route_found_occured",
                  "[]"
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "[]"
                ],
                [
                  "test_matrix_multiple_start_names",
                  "[]"
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "[]"
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  "[]"
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "[]"
                ],
                [
                  "test_initiation",
                  "[]"
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "[]"
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "[]"
                ],
                [
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  "[]"
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "[]"
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "[]"
                ],
                [
                  "test_location_by_name",
                  "[]"
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "[]"
                ],
                [
                  "test_departure_as_string",
                  "[]"
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "[]"
                ],
                [
                  "test_truckroute_route_short",
                  "[]"
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "[]"
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "[]"
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "[]"
                ],
                [
                  "test_carroute_whensucceed",
                  "[]"
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "[]"
                ],
                [
                  "test_bicycleroute_route_short",
                  "[]"
                ],
                [
                  "test_departure_as_datetime",
                  "[]"
                ],
                [
                  "test_location_by_name_throws_WaypointNotFoundError",
                  "[]"
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "[]"
                ],
                [
                  "test_truckroute_whensucceed",
                  "[]"
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "[]"
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "[]"
                ],
                [
                  "test_truckroute_when_error_invalid_credentials_occured",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_truckroute_when_error_invalid_input_data_occured",
                  "false"
                ],
                [
                  "test_matrix_bad_request",
                  "false"
                ],
                [
                  "test_publictransport_route_short",
                  "false"
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "false"
                ],
                [
                  "test_matrix_multiple_starts",
                  "false"
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "false"
                ],
                [
                  "test_matrix_multiple_destinations",
                  "false"
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "false"
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "false"
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "false"
                ],
                [
                  "test_matrix_whensucceed",
                  "false"
                ],
                [
                  "test_truckroute_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_pedastrianroute_route_short",
                  "false"
                ],
                [
                  "test_publictransport_whensucceed",
                  "false"
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_carroute_route_short",
                  "false"
                ],
                [
                  "test_matrix_multiple_destinations",
                  "false"
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_truckroute_when_error_no_route_found_occured",
                  "false"
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "false"
                ],
                [
                  "test_matrix_multiple_start_names",
                  "false"
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "false"
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  "false"
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "false"
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "false"
                ],
                [
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  "false"
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "false"
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "false"
                ],
                [
                  "test_location_by_name",
                  "false"
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "false"
                ],
                [
                  "test_departure_as_string",
                  "false"
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "false"
                ],
                [
                  "test_truckroute_route_short",
                  "false"
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "false"
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "false"
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "false"
                ],
                [
                  "test_carroute_whensucceed",
                  "false"
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_bicycleroute_route_short",
                  "false"
                ],
                [
                  "test_departure_as_datetime",
                  "false"
                ],
                [
                  "test_location_by_name_throws_WaypointNotFoundError",
                  "false"
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_truckroute_whensucceed",
                  "false"
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "false"
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_truckroute_when_error_invalid_credentials_occured",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_truckroute_when_error_invalid_input_data_occured",
                  "false"
                ],
                [
                  "test_matrix_bad_request",
                  "false"
                ],
                [
                  "test_publictransport_route_short",
                  "false"
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "false"
                ],
                [
                  "test_matrix_multiple_starts",
                  "false"
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "false"
                ],
                [
                  "test_matrix_multiple_destinations",
                  "false"
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "false"
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "false"
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "false"
                ],
                [
                  "test_matrix_whensucceed",
                  "false"
                ],
                [
                  "test_truckroute_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_pedastrianroute_route_short",
                  "false"
                ],
                [
                  "test_publictransport_whensucceed",
                  "false"
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_carroute_route_short",
                  "false"
                ],
                [
                  "test_matrix_multiple_destinations",
                  "false"
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_truckroute_when_error_no_route_found_occured",
                  "false"
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "false"
                ],
                [
                  "test_matrix_multiple_start_names",
                  "false"
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "false"
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  "false"
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "false"
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "false"
                ],
                [
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  "false"
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "false"
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "false"
                ],
                [
                  "test_location_by_name",
                  "false"
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "false"
                ],
                [
                  "test_departure_as_string",
                  "false"
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "false"
                ],
                [
                  "test_truckroute_route_short",
                  "false"
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "false"
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "false"
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "false"
                ],
                [
                  "test_carroute_whensucceed",
                  "false"
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_bicycleroute_route_short",
                  "false"
                ],
                [
                  "test_departure_as_datetime",
                  "false"
                ],
                [
                  "test_location_by_name_throws_WaypointNotFoundError",
                  "false"
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_truckroute_whensucceed",
                  "false"
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "false"
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_truckroute_when_error_invalid_credentials_occured",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_truckroute_when_error_invalid_input_data_occured",
                  "false"
                ],
                [
                  "test_matrix_bad_request",
                  "false"
                ],
                [
                  "test_publictransport_route_short",
                  "false"
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "false"
                ],
                [
                  "test_matrix_multiple_starts",
                  "false"
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "false"
                ],
                [
                  "test_matrix_multiple_destinations",
                  "false"
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "false"
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "false"
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "false"
                ],
                [
                  "test_matrix_whensucceed",
                  "false"
                ],
                [
                  "test_truckroute_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_pedastrianroute_route_short",
                  "false"
                ],
                [
                  "test_publictransport_whensucceed",
                  "false"
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_carroute_route_short",
                  "false"
                ],
                [
                  "test_matrix_multiple_destinations",
                  "false"
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_truckroute_when_error_no_route_found_occured",
                  "false"
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "false"
                ],
                [
                  "test_matrix_multiple_start_names",
                  "false"
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "false"
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  "false"
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "false"
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "false"
                ],
                [
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  "false"
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "false"
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "false"
                ],
                [
                  "test_location_by_name",
                  "false"
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "false"
                ],
                [
                  "test_departure_as_string",
                  "false"
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "false"
                ],
                [
                  "test_truckroute_route_short",
                  "false"
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "false"
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "false"
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "false"
                ],
                [
                  "test_carroute_whensucceed",
                  "false"
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_bicycleroute_route_short",
                  "false"
                ],
                [
                  "test_departure_as_datetime",
                  "false"
                ],
                [
                  "test_location_by_name_throws_WaypointNotFoundError",
                  "false"
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_truckroute_whensucceed",
                  "false"
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "false"
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_truckroute_when_error_invalid_credentials_occured",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_truckroute_when_error_invalid_input_data_occured",
                  "false"
                ],
                [
                  "test_matrix_bad_request",
                  "false"
                ],
                [
                  "test_publictransport_route_short",
                  "false"
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "false"
                ],
                [
                  "test_matrix_multiple_starts",
                  "false"
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "false"
                ],
                [
                  "test_matrix_multiple_destinations",
                  "false"
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "false"
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "false"
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "false"
                ],
                [
                  "test_matrix_whensucceed",
                  "false"
                ],
                [
                  "test_truckroute_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_pedastrianroute_route_short",
                  "false"
                ],
                [
                  "test_publictransport_whensucceed",
                  "false"
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_carroute_route_short",
                  "false"
                ],
                [
                  "test_matrix_multiple_destinations",
                  "false"
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_truckroute_when_error_no_route_found_occured",
                  "false"
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "false"
                ],
                [
                  "test_matrix_multiple_start_names",
                  "false"
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "false"
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  "false"
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "false"
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "false"
                ],
                [
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  "false"
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "false"
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "false"
                ],
                [
                  "test_location_by_name",
                  "false"
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "false"
                ],
                [
                  "test_departure_as_string",
                  "false"
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "false"
                ],
                [
                  "test_truckroute_route_short",
                  "false"
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "false"
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "false"
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "false"
                ],
                [
                  "test_carroute_whensucceed",
                  "false"
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_bicycleroute_route_short",
                  "false"
                ],
                [
                  "test_departure_as_datetime",
                  "false"
                ],
                [
                  "test_location_by_name_throws_WaypointNotFoundError",
                  "false"
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_truckroute_whensucceed",
                  "false"
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "false"
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "false"
                ],
                [
                  "test_truckroute_when_error_invalid_credentials_occured",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_truckroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_matrix_bad_request",
                "false"
              ],
              [
                "test_publictransport_route_short",
                "false"
              ],
              [
                "test_intermediateroute_whensucceed",
                "false"
              ],
              [
                "test_matrix_multiple_starts",
                "false"
              ],
              [
                "test_pedastrianroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_matrix_multiple_destinations",
                "false"
              ],
              [
                "test_publictransport_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_carroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_bicycleroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_publictransport_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_matrix_whensucceed",
                "false"
              ],
              [
                "test_truckroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_pedastrianroute_route_short",
                "false"
              ],
              [
                "test_publictransport_whensucceed",
                "false"
              ],
              [
                "test_carroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_carroute_route_short",
                "false"
              ],
              [
                "test_matrix_multiple_destinations",
                "false"
              ],
              [
                "test_pedastrianroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_truckroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_intermediateroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_matrix_multiple_start_names",
                "false"
              ],
              [
                "test_publictransporttimetable_route_short",
                "false"
              ],
              [
                "test_locationnearmotorway_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_publictransporttimetable_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_carroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_pedastrianroute_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_locationnearmotorway_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_intermediateroute_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_locationnearmotorway_whensucceed",
                "false"
              ],
              [
                "test_location_by_name",
                "false"
              ],
              [
                "test_pedastrianroute_whensucceed",
                "false"
              ],
              [
                "test_departure_as_string",
                "false"
              ],
              [
                "test_pedastrianroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_truckroute_route_short",
                "false"
              ],
              [
                "test_publictransport_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_intermediateroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_locationnearmotorway_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_carroute_whensucceed",
                "false"
              ],
              [
                "test_locationnearmotorway_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_bicycleroute_route_short",
                "false"
              ],
              [
                "test_departure_as_datetime",
                "false"
              ],
              [
                "test_location_by_name_throws_WaypointNotFoundError",
                "false"
              ],
              [
                "test_intermediateroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_truckroute_whensucceed",
                "false"
              ],
              [
                "test_carroute_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_publictransport_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_truckroute_when_error_invalid_credentials_occured",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_truckroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_matrix_bad_request",
                "false"
              ],
              [
                "test_publictransport_route_short",
                "false"
              ],
              [
                "test_intermediateroute_whensucceed",
                "false"
              ],
              [
                "test_matrix_multiple_starts",
                "false"
              ],
              [
                "test_pedastrianroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_matrix_multiple_destinations",
                "false"
              ],
              [
                "test_publictransport_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_carroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_bicycleroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_publictransport_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_matrix_whensucceed",
                "false"
              ],
              [
                "test_truckroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_pedastrianroute_route_short",
                "false"
              ],
              [
                "test_publictransport_whensucceed",
                "false"
              ],
              [
                "test_carroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_carroute_route_short",
                "false"
              ],
              [
                "test_matrix_multiple_destinations",
                "false"
              ],
              [
                "test_pedastrianroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_truckroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_intermediateroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_matrix_multiple_start_names",
                "false"
              ],
              [
                "test_publictransporttimetable_route_short",
                "false"
              ],
              [
                "test_locationnearmotorway_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_publictransporttimetable_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_carroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_pedastrianroute_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_locationnearmotorway_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_intermediateroute_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_locationnearmotorway_whensucceed",
                "false"
              ],
              [
                "test_location_by_name",
                "false"
              ],
              [
                "test_pedastrianroute_whensucceed",
                "false"
              ],
              [
                "test_departure_as_string",
                "false"
              ],
              [
                "test_pedastrianroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_truckroute_route_short",
                "false"
              ],
              [
                "test_publictransport_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_intermediateroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_locationnearmotorway_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_carroute_whensucceed",
                "false"
              ],
              [
                "test_locationnearmotorway_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_bicycleroute_route_short",
                "false"
              ],
              [
                "test_departure_as_datetime",
                "false"
              ],
              [
                "test_location_by_name_throws_WaypointNotFoundError",
                "false"
              ],
              [
                "test_intermediateroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_truckroute_whensucceed",
                "false"
              ],
              [
                "test_carroute_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_publictransport_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_truckroute_when_error_invalid_credentials_occured",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_truckroute_when_error_invalid_input_data_occured",
                []
              ],
              [
                "test_matrix_bad_request",
                []
              ],
              [
                "test_publictransport_route_short",
                []
              ],
              [
                "test_intermediateroute_whensucceed",
                []
              ],
              [
                "test_matrix_multiple_starts",
                []
              ],
              [
                "test_pedastrianroute_when_error_no_route_found_occured",
                []
              ],
              [
                "test_matrix_multiple_destinations",
                []
              ],
              [
                "test_publictransport_when_error_no_route_found_occured",
                []
              ],
              [
                "test_carroute_when_error_invalid_input_data_occured",
                []
              ],
              [
                "test_bicycleroute_withdefaultmodes_whensucceed",
                []
              ],
              [
                "test_publictransport_when_error_invalid_input_data_occured",
                []
              ],
              [
                "test_matrix_whensucceed",
                []
              ],
              [
                "test_truckroute_withdefaultmodes_whensucceed",
                []
              ],
              [
                "test_pedastrianroute_route_short",
                []
              ],
              [
                "test_publictransport_whensucceed",
                []
              ],
              [
                "test_carroute_withdefaultmodes_whensucceed",
                []
              ],
              [
                "test_carroute_route_short",
                []
              ],
              [
                "test_matrix_multiple_destinations",
                []
              ],
              [
                "test_pedastrianroute_withdefaultmodes_whensucceed",
                []
              ],
              [
                "test_truckroute_when_error_no_route_found_occured",
                []
              ],
              [
                "test_intermediateroute_when_error_no_route_found_occured",
                []
              ],
              [
                "test_matrix_multiple_start_names",
                []
              ],
              [
                "test_publictransporttimetable_route_short",
                []
              ],
              [
                "test_locationnearmotorway_when_error_invalid_credentials_occured",
                [
                  "self._api"
                ]
              ],
              [
                "test_publictransporttimetable_withdefaultmodes_whensucceed",
                []
              ],
              [
                "test_initiation",
                []
              ],
              [
                "test_carroute_when_error_no_route_found_occured",
                []
              ],
              [
                "test_pedastrianroute_when_error_invalid_credentials_occured",
                [
                  "self._api"
                ]
              ],
              [
                "test_locationnearmotorway_when_error_no_route_found_occured",
                []
              ],
              [
                "test_intermediateroute_when_error_invalid_credentials_occured",
                [
                  "self._api"
                ]
              ],
              [
                "test_locationnearmotorway_whensucceed",
                []
              ],
              [
                "test_location_by_name",
                []
              ],
              [
                "test_pedastrianroute_whensucceed",
                []
              ],
              [
                "test_departure_as_string",
                []
              ],
              [
                "test_pedastrianroute_when_error_invalid_input_data_occured",
                []
              ],
              [
                "test_truckroute_route_short",
                []
              ],
              [
                "test_publictransport_when_error_invalid_credentials_occured",
                [
                  "self._api"
                ]
              ],
              [
                "test_intermediateroute_when_error_invalid_input_data_occured",
                []
              ],
              [
                "test_locationnearmotorway_when_error_invalid_input_data_occured",
                []
              ],
              [
                "test_carroute_whensucceed",
                []
              ],
              [
                "test_locationnearmotorway_withdefaultmodes_whensucceed",
                []
              ],
              [
                "test_bicycleroute_route_short",
                []
              ],
              [
                "test_departure_as_datetime",
                []
              ],
              [
                "test_location_by_name_throws_WaypointNotFoundError",
                []
              ],
              [
                "test_intermediateroute_withdefaultmodes_whensucceed",
                []
              ],
              [
                "test_truckroute_whensucceed",
                []
              ],
              [
                "test_carroute_when_error_invalid_credentials_occured",
                [
                  "self._api"
                ]
              ],
              [
                "test_publictransport_withdefaultmodes_whensucceed",
                []
              ],
              [
                "test_truckroute_when_error_invalid_credentials_occured",
                [
                  "self._api"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_truckroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_matrix_bad_request",
                "false"
              ],
              [
                "test_publictransport_route_short",
                "false"
              ],
              [
                "test_intermediateroute_whensucceed",
                "false"
              ],
              [
                "test_matrix_multiple_starts",
                "false"
              ],
              [
                "test_pedastrianroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_matrix_multiple_destinations",
                "false"
              ],
              [
                "test_publictransport_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_carroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_bicycleroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_publictransport_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_matrix_whensucceed",
                "false"
              ],
              [
                "test_truckroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_pedastrianroute_route_short",
                "false"
              ],
              [
                "test_publictransport_whensucceed",
                "false"
              ],
              [
                "test_carroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_carroute_route_short",
                "false"
              ],
              [
                "test_matrix_multiple_destinations",
                "false"
              ],
              [
                "test_pedastrianroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_truckroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_intermediateroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_matrix_multiple_start_names",
                "false"
              ],
              [
                "test_publictransporttimetable_route_short",
                "false"
              ],
              [
                "test_locationnearmotorway_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_publictransporttimetable_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_carroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_pedastrianroute_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_locationnearmotorway_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_intermediateroute_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_locationnearmotorway_whensucceed",
                "false"
              ],
              [
                "test_location_by_name",
                "false"
              ],
              [
                "test_pedastrianroute_whensucceed",
                "false"
              ],
              [
                "test_departure_as_string",
                "false"
              ],
              [
                "test_pedastrianroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_truckroute_route_short",
                "false"
              ],
              [
                "test_publictransport_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_intermediateroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_locationnearmotorway_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_carroute_whensucceed",
                "false"
              ],
              [
                "test_locationnearmotorway_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_bicycleroute_route_short",
                "false"
              ],
              [
                "test_departure_as_datetime",
                "false"
              ],
              [
                "test_location_by_name_throws_WaypointNotFoundError",
                "false"
              ],
              [
                "test_intermediateroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_truckroute_whensucceed",
                "false"
              ],
              [
                "test_carroute_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_publictransport_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_truckroute_when_error_invalid_credentials_occured",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_truckroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_matrix_bad_request",
                "false"
              ],
              [
                "test_publictransport_route_short",
                "false"
              ],
              [
                "test_intermediateroute_whensucceed",
                "false"
              ],
              [
                "test_matrix_multiple_starts",
                "false"
              ],
              [
                "test_pedastrianroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_matrix_multiple_destinations",
                "false"
              ],
              [
                "test_publictransport_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_carroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_bicycleroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_publictransport_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_matrix_whensucceed",
                "false"
              ],
              [
                "test_truckroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_pedastrianroute_route_short",
                "false"
              ],
              [
                "test_publictransport_whensucceed",
                "false"
              ],
              [
                "test_carroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_carroute_route_short",
                "false"
              ],
              [
                "test_matrix_multiple_destinations",
                "false"
              ],
              [
                "test_pedastrianroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_truckroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_intermediateroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_matrix_multiple_start_names",
                "false"
              ],
              [
                "test_publictransporttimetable_route_short",
                "false"
              ],
              [
                "test_locationnearmotorway_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_publictransporttimetable_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_carroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_pedastrianroute_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_locationnearmotorway_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_intermediateroute_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_locationnearmotorway_whensucceed",
                "false"
              ],
              [
                "test_location_by_name",
                "false"
              ],
              [
                "test_pedastrianroute_whensucceed",
                "false"
              ],
              [
                "test_departure_as_string",
                "false"
              ],
              [
                "test_pedastrianroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_truckroute_route_short",
                "false"
              ],
              [
                "test_publictransport_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_intermediateroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_locationnearmotorway_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_carroute_whensucceed",
                "false"
              ],
              [
                "test_locationnearmotorway_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_bicycleroute_route_short",
                "false"
              ],
              [
                "test_departure_as_datetime",
                "false"
              ],
              [
                "test_location_by_name_throws_WaypointNotFoundError",
                "false"
              ],
              [
                "test_intermediateroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_truckroute_whensucceed",
                "false"
              ],
              [
                "test_carroute_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_publictransport_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_truckroute_when_error_invalid_credentials_occured",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_truckroute_when_error_invalid_input_data_occured",
                  "0"
                ],
                [
                  "test_matrix_bad_request",
                  "0"
                ],
                [
                  "test_publictransport_route_short",
                  "0"
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "0"
                ],
                [
                  "test_matrix_multiple_starts",
                  "0"
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "0"
                ],
                [
                  "test_matrix_multiple_destinations",
                  "0"
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "0"
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "0"
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "0"
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "0"
                ],
                [
                  "test_matrix_whensucceed",
                  "0"
                ],
                [
                  "test_truckroute_withdefaultmodes_whensucceed",
                  "0"
                ],
                [
                  "test_pedastrianroute_route_short",
                  "0"
                ],
                [
                  "test_publictransport_whensucceed",
                  "0"
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "0"
                ],
                [
                  "test_carroute_route_short",
                  "0"
                ],
                [
                  "test_matrix_multiple_destinations",
                  "0"
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "0"
                ],
                [
                  "test_truckroute_when_error_no_route_found_occured",
                  "0"
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "0"
                ],
                [
                  "test_matrix_multiple_start_names",
                  "0"
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "0"
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  "0"
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "0"
                ],
                [
                  "test_initiation",
                  "0"
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "0"
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "0"
                ],
                [
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  "0"
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "0"
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "0"
                ],
                [
                  "test_location_by_name",
                  "0"
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "0"
                ],
                [
                  "test_departure_as_string",
                  "0"
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "0"
                ],
                [
                  "test_truckroute_route_short",
                  "0"
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "0"
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "0"
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "0"
                ],
                [
                  "test_carroute_whensucceed",
                  "0"
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "0"
                ],
                [
                  "test_bicycleroute_route_short",
                  "0"
                ],
                [
                  "test_departure_as_datetime",
                  "0"
                ],
                [
                  "test_location_by_name_throws_WaypointNotFoundError",
                  "0"
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "0"
                ],
                [
                  "test_truckroute_whensucceed",
                  "0"
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "0"
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "0"
                ],
                [
                  "test_truckroute_when_error_invalid_credentials_occured",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_truckroute_when_error_invalid_input_data_occured",
                  "0"
                ],
                [
                  "test_matrix_bad_request",
                  "0"
                ],
                [
                  "test_publictransport_route_short",
                  "0"
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "0"
                ],
                [
                  "test_matrix_multiple_starts",
                  "0"
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "0"
                ],
                [
                  "test_matrix_multiple_destinations",
                  "0"
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "0"
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "0"
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "0"
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "0"
                ],
                [
                  "test_matrix_whensucceed",
                  "0"
                ],
                [
                  "test_truckroute_withdefaultmodes_whensucceed",
                  "0"
                ],
                [
                  "test_pedastrianroute_route_short",
                  "0"
                ],
                [
                  "test_publictransport_whensucceed",
                  "0"
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "0"
                ],
                [
                  "test_carroute_route_short",
                  "0"
                ],
                [
                  "test_matrix_multiple_destinations",
                  "0"
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "0"
                ],
                [
                  "test_truckroute_when_error_no_route_found_occured",
                  "0"
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "0"
                ],
                [
                  "test_matrix_multiple_start_names",
                  "0"
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "0"
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  "0"
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "0"
                ],
                [
                  "test_initiation",
                  "0"
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "0"
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "0"
                ],
                [
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  "0"
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "0"
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "0"
                ],
                [
                  "test_location_by_name",
                  "0"
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "0"
                ],
                [
                  "test_departure_as_string",
                  "0"
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "0"
                ],
                [
                  "test_truckroute_route_short",
                  "0"
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "0"
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "0"
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "0"
                ],
                [
                  "test_carroute_whensucceed",
                  "0"
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "0"
                ],
                [
                  "test_bicycleroute_route_short",
                  "0"
                ],
                [
                  "test_departure_as_datetime",
                  "0"
                ],
                [
                  "test_location_by_name_throws_WaypointNotFoundError",
                  "0"
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "0"
                ],
                [
                  "test_truckroute_whensucceed",
                  "0"
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "0"
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "0"
                ],
                [
                  "test_truckroute_when_error_invalid_credentials_occured",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_truckroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_matrix_bad_request",
                "false"
              ],
              [
                "test_publictransport_route_short",
                "false"
              ],
              [
                "test_intermediateroute_whensucceed",
                "false"
              ],
              [
                "test_matrix_multiple_starts",
                "false"
              ],
              [
                "test_pedastrianroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_matrix_multiple_destinations",
                "false"
              ],
              [
                "test_publictransport_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_carroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_bicycleroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_publictransport_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_matrix_whensucceed",
                "false"
              ],
              [
                "test_truckroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_pedastrianroute_route_short",
                "false"
              ],
              [
                "test_publictransport_whensucceed",
                "false"
              ],
              [
                "test_carroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_carroute_route_short",
                "false"
              ],
              [
                "test_matrix_multiple_destinations",
                "false"
              ],
              [
                "test_pedastrianroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_truckroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_intermediateroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_matrix_multiple_start_names",
                "false"
              ],
              [
                "test_publictransporttimetable_route_short",
                "false"
              ],
              [
                "test_locationnearmotorway_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_publictransporttimetable_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_carroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_pedastrianroute_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_locationnearmotorway_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_intermediateroute_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_locationnearmotorway_whensucceed",
                "false"
              ],
              [
                "test_location_by_name",
                "false"
              ],
              [
                "test_pedastrianroute_whensucceed",
                "false"
              ],
              [
                "test_departure_as_string",
                "false"
              ],
              [
                "test_pedastrianroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_truckroute_route_short",
                "false"
              ],
              [
                "test_publictransport_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_intermediateroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_locationnearmotorway_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_carroute_whensucceed",
                "false"
              ],
              [
                "test_locationnearmotorway_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_bicycleroute_route_short",
                "false"
              ],
              [
                "test_departure_as_datetime",
                "false"
              ],
              [
                "test_location_by_name_throws_WaypointNotFoundError",
                "false"
              ],
              [
                "test_intermediateroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_truckroute_whensucceed",
                "false"
              ],
              [
                "test_carroute_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_publictransport_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_truckroute_when_error_invalid_credentials_occured",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_truckroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_matrix_bad_request",
                "false"
              ],
              [
                "test_publictransport_route_short",
                "false"
              ],
              [
                "test_intermediateroute_whensucceed",
                "false"
              ],
              [
                "test_matrix_multiple_starts",
                "false"
              ],
              [
                "test_pedastrianroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_matrix_multiple_destinations",
                "false"
              ],
              [
                "test_publictransport_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_carroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_bicycleroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_publictransport_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_matrix_whensucceed",
                "false"
              ],
              [
                "test_truckroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_pedastrianroute_route_short",
                "false"
              ],
              [
                "test_publictransport_whensucceed",
                "false"
              ],
              [
                "test_carroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_carroute_route_short",
                "false"
              ],
              [
                "test_matrix_multiple_destinations",
                "false"
              ],
              [
                "test_pedastrianroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_truckroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_intermediateroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_matrix_multiple_start_names",
                "false"
              ],
              [
                "test_publictransporttimetable_route_short",
                "false"
              ],
              [
                "test_locationnearmotorway_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_publictransporttimetable_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_carroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_pedastrianroute_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_locationnearmotorway_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_intermediateroute_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_locationnearmotorway_whensucceed",
                "false"
              ],
              [
                "test_location_by_name",
                "false"
              ],
              [
                "test_pedastrianroute_whensucceed",
                "false"
              ],
              [
                "test_departure_as_string",
                "false"
              ],
              [
                "test_pedastrianroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_truckroute_route_short",
                "false"
              ],
              [
                "test_publictransport_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_intermediateroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_locationnearmotorway_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_carroute_whensucceed",
                "false"
              ],
              [
                "test_locationnearmotorway_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_bicycleroute_route_short",
                "false"
              ],
              [
                "test_departure_as_datetime",
                "false"
              ],
              [
                "test_location_by_name_throws_WaypointNotFoundError",
                "false"
              ],
              [
                "test_intermediateroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_truckroute_whensucceed",
                "false"
              ],
              [
                "test_carroute_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_publictransport_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_truckroute_when_error_invalid_credentials_occured",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_truckroute_when_error_invalid_input_data_occured",
                "1"
              ],
              [
                "test_matrix_bad_request",
                "1"
              ],
              [
                "test_publictransport_route_short",
                "1"
              ],
              [
                "test_intermediateroute_whensucceed",
                "2"
              ],
              [
                "test_matrix_multiple_starts",
                "2"
              ],
              [
                "test_pedastrianroute_when_error_no_route_found_occured",
                "1"
              ],
              [
                "test_matrix_multiple_destinations",
                "2"
              ],
              [
                "test_publictransport_when_error_no_route_found_occured",
                "1"
              ],
              [
                "test_carroute_when_error_invalid_input_data_occured",
                "1"
              ],
              [
                "test_bicycleroute_withdefaultmodes_whensucceed",
                "2"
              ],
              [
                "test_publictransport_when_error_invalid_input_data_occured",
                "1"
              ],
              [
                "test_matrix_whensucceed",
                "2"
              ],
              [
                "test_truckroute_withdefaultmodes_whensucceed",
                "2"
              ],
              [
                "test_pedastrianroute_route_short",
                "1"
              ],
              [
                "test_publictransport_whensucceed",
                "2"
              ],
              [
                "test_carroute_withdefaultmodes_whensucceed",
                "2"
              ],
              [
                "test_carroute_route_short",
                "1"
              ],
              [
                "test_matrix_multiple_destinations",
                "2"
              ],
              [
                "test_pedastrianroute_withdefaultmodes_whensucceed",
                "2"
              ],
              [
                "test_truckroute_when_error_no_route_found_occured",
                "1"
              ],
              [
                "test_intermediateroute_when_error_no_route_found_occured",
                "1"
              ],
              [
                "test_matrix_multiple_start_names",
                "2"
              ],
              [
                "test_publictransporttimetable_route_short",
                "1"
              ],
              [
                "test_locationnearmotorway_when_error_invalid_credentials_occured",
                "1"
              ],
              [
                "test_publictransporttimetable_withdefaultmodes_whensucceed",
                "2"
              ],
              [
                "test_initiation",
                "2"
              ],
              [
                "test_carroute_when_error_no_route_found_occured",
                "1"
              ],
              [
                "test_pedastrianroute_when_error_invalid_credentials_occured",
                "1"
              ],
              [
                "test_locationnearmotorway_when_error_no_route_found_occured",
                "1"
              ],
              [
                "test_intermediateroute_when_error_invalid_credentials_occured",
                "1"
              ],
              [
                "test_locationnearmotorway_whensucceed",
                "2"
              ],
              [
                "test_location_by_name",
                "0"
              ],
              [
                "test_pedastrianroute_whensucceed",
                "2"
              ],
              [
                "test_departure_as_string",
                "0"
              ],
              [
                "test_pedastrianroute_when_error_invalid_input_data_occured",
                "1"
              ],
              [
                "test_truckroute_route_short",
                "1"
              ],
              [
                "test_publictransport_when_error_invalid_credentials_occured",
                "1"
              ],
              [
                "test_intermediateroute_when_error_invalid_input_data_occured",
                "1"
              ],
              [
                "test_locationnearmotorway_when_error_invalid_input_data_occured",
                "1"
              ],
              [
                "test_carroute_whensucceed",
                "2"
              ],
              [
                "test_locationnearmotorway_withdefaultmodes_whensucceed",
                "2"
              ],
              [
                "test_bicycleroute_route_short",
                "1"
              ],
              [
                "test_departure_as_datetime",
                "0"
              ],
              [
                "test_location_by_name_throws_WaypointNotFoundError",
                "1"
              ],
              [
                "test_intermediateroute_withdefaultmodes_whensucceed",
                "2"
              ],
              [
                "test_truckroute_whensucceed",
                "2"
              ],
              [
                "test_carroute_when_error_invalid_credentials_occured",
                "1"
              ],
              [
                "test_publictransport_withdefaultmodes_whensucceed",
                "2"
              ],
              [
                "test_truckroute_when_error_invalid_credentials_occured",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_truckroute_when_error_invalid_input_data_occured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_matrix_bad_request",
                [
                  "server_response"
                ]
              ],
              [
                "test_publictransport_route_short",
                [
                  "expected_short_route",
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_intermediateroute_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_matrix_multiple_starts",
                [
                  "response",
                  "server_response"
                ]
              ],
              [
                "test_pedastrianroute_when_error_no_route_found_occured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_matrix_multiple_destinations",
                [
                  "response",
                  "server_response",
                  "expectedGeocoderResponse"
                ]
              ],
              [
                "test_publictransport_when_error_no_route_found_occured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_carroute_when_error_invalid_input_data_occured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_bicycleroute_withdefaultmodes_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_publictransport_when_error_invalid_input_data_occured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_matrix_whensucceed",
                [
                  "response",
                  "server_response"
                ]
              ],
              [
                "test_truckroute_withdefaultmodes_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_pedastrianroute_route_short",
                [
                  "expected_short_route",
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_publictransport_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_carroute_withdefaultmodes_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_carroute_route_short",
                [
                  "expected_short_route",
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_matrix_multiple_destinations",
                [
                  "response",
                  "server_response"
                ]
              ],
              [
                "test_pedastrianroute_withdefaultmodes_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_truckroute_when_error_no_route_found_occured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_intermediateroute_when_error_no_route_found_occured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_matrix_multiple_start_names",
                [
                  "response",
                  "server_response",
                  "expectedGeocoderResponse"
                ]
              ],
              [
                "test_publictransporttimetable_route_short",
                [
                  "expected_short_route",
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_locationnearmotorway_when_error_invalid_credentials_occured",
                [
                  "expectedResponse",
                  "api"
                ]
              ],
              [
                "test_publictransporttimetable_withdefaultmodes_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_initiation",
                []
              ],
              [
                "test_carroute_when_error_no_route_found_occured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_pedastrianroute_when_error_invalid_credentials_occured",
                [
                  "expectedResponse",
                  "api"
                ]
              ],
              [
                "test_locationnearmotorway_when_error_no_route_found_occured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_intermediateroute_when_error_invalid_credentials_occured",
                [
                  "expectedResponse",
                  "api"
                ]
              ],
              [
                "test_locationnearmotorway_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_location_by_name",
                [
                  "expectedRoutingResponse",
                  "response",
                  "expectedGeocoderResponse"
                ]
              ],
              [
                "test_pedastrianroute_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_departure_as_string",
                [
                  "date",
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_pedastrianroute_when_error_invalid_input_data_occured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_truckroute_route_short",
                [
                  "expected_short_route",
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_publictransport_when_error_invalid_credentials_occured",
                [
                  "expectedResponse",
                  "api"
                ]
              ],
              [
                "test_intermediateroute_when_error_invalid_input_data_occured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_locationnearmotorway_when_error_invalid_input_data_occured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_carroute_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_locationnearmotorway_withdefaultmodes_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_bicycleroute_route_short",
                [
                  "expected_short_route",
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_departure_as_datetime",
                [
                  "date",
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_location_by_name_throws_WaypointNotFoundError",
                [
                  "expectedRoutingResponse",
                  "response",
                  "expectedGeocoderResponse"
                ]
              ],
              [
                "test_intermediateroute_withdefaultmodes_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_truckroute_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_carroute_when_error_invalid_credentials_occured",
                [
                  "expectedResponse",
                  "api"
                ]
              ],
              [
                "test_publictransport_withdefaultmodes_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_truckroute_when_error_invalid_credentials_occured",
                [
                  "expectedResponse",
                  "api"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_truckroute_when_error_invalid_input_data_occured",
                [
                  "self._api"
                ]
              ],
              [
                "test_matrix_bad_request",
                [
                  "self._api"
                ]
              ],
              [
                "test_publictransport_route_short",
                [
                  "self._api"
                ]
              ],
              [
                "test_intermediateroute_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_matrix_multiple_starts",
                [
                  "self._api"
                ]
              ],
              [
                "test_pedastrianroute_when_error_no_route_found_occured",
                [
                  "self._api"
                ]
              ],
              [
                "test_matrix_multiple_destinations",
                [
                  "self._api"
                ]
              ],
              [
                "test_publictransport_when_error_no_route_found_occured",
                [
                  "self._api"
                ]
              ],
              [
                "test_carroute_when_error_invalid_input_data_occured",
                [
                  "self._api"
                ]
              ],
              [
                "test_bicycleroute_withdefaultmodes_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_publictransport_when_error_invalid_input_data_occured",
                [
                  "self._api"
                ]
              ],
              [
                "test_matrix_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_truckroute_withdefaultmodes_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_pedastrianroute_route_short",
                [
                  "self._api"
                ]
              ],
              [
                "test_publictransport_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_carroute_withdefaultmodes_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_carroute_route_short",
                [
                  "self._api"
                ]
              ],
              [
                "test_matrix_multiple_destinations",
                [
                  "self._api"
                ]
              ],
              [
                "test_pedastrianroute_withdefaultmodes_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_truckroute_when_error_no_route_found_occured",
                [
                  "self._api"
                ]
              ],
              [
                "test_intermediateroute_when_error_no_route_found_occured",
                [
                  "self._api"
                ]
              ],
              [
                "test_matrix_multiple_start_names",
                [
                  "self._api"
                ]
              ],
              [
                "test_publictransporttimetable_route_short",
                [
                  "self._api"
                ]
              ],
              [
                "test_locationnearmotorway_when_error_invalid_credentials_occured",
                []
              ],
              [
                "test_publictransporttimetable_withdefaultmodes_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_initiation",
                [
                  "self._api"
                ]
              ],
              [
                "test_carroute_when_error_no_route_found_occured",
                [
                  "self._api"
                ]
              ],
              [
                "test_pedastrianroute_when_error_invalid_credentials_occured",
                []
              ],
              [
                "test_locationnearmotorway_when_error_no_route_found_occured",
                [
                  "self._api"
                ]
              ],
              [
                "test_intermediateroute_when_error_invalid_credentials_occured",
                []
              ],
              [
                "test_locationnearmotorway_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_location_by_name",
                [
                  "self._api"
                ]
              ],
              [
                "test_pedastrianroute_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_departure_as_string",
                [
                  "self._api"
                ]
              ],
              [
                "test_pedastrianroute_when_error_invalid_input_data_occured",
                [
                  "self._api"
                ]
              ],
              [
                "test_truckroute_route_short",
                [
                  "self._api"
                ]
              ],
              [
                "test_publictransport_when_error_invalid_credentials_occured",
                []
              ],
              [
                "test_intermediateroute_when_error_invalid_input_data_occured",
                [
                  "self._api"
                ]
              ],
              [
                "test_locationnearmotorway_when_error_invalid_input_data_occured",
                [
                  "self._api"
                ]
              ],
              [
                "test_carroute_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_locationnearmotorway_withdefaultmodes_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_bicycleroute_route_short",
                [
                  "self._api"
                ]
              ],
              [
                "test_departure_as_datetime",
                [
                  "self._api"
                ]
              ],
              [
                "test_location_by_name_throws_WaypointNotFoundError",
                [
                  "self._api"
                ]
              ],
              [
                "test_intermediateroute_withdefaultmodes_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_truckroute_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_carroute_when_error_invalid_credentials_occured",
                []
              ],
              [
                "test_publictransport_withdefaultmodes_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_truckroute_when_error_invalid_credentials_occured",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6476458076069993,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_intermediateroute_whensucceed",
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  0.8338361349896544
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  0.7136489382264389
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.6897352496133362
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_publictransport_route_short",
                  0.5187557724858725
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_matrix_multiple_destinations",
                  0.6115541095504887
                ],
                [
                  "test_matrix_multiple_start_names",
                  "test_matrix_bad_request",
                  0.6856034446626806
                ],
                [
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.7100648373006029
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  0.6771610292428453
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "test_matrix_bad_request",
                  0.5895063447465633
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_departure_as_string",
                  0.554412407581095
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "test_matrix_multiple_destinations",
                  0.4905778905196061
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_matrix_multiple_start_names",
                  0.4870549730050725
                ],
                [
                  "test_carroute_whensucceed",
                  "test_publictransport_when_error_invalid_input_data_occured",
                  0.7354711411543292
                ],
                [
                  "test_publictransport_route_short",
                  "test_matrix_multiple_starts",
                  0.44198953381175754
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.7251222728993266
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_publictransport_when_error_invalid_input_data_occured",
                  0.7396075664358003
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.7099268854965314
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.714242590204757
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_departure_as_string",
                  0.7512512753161841
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_starts",
                  0.7508253349688097
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.946939735228905
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_matrix_multiple_starts",
                  0.5595391962584325
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "test_truckroute_route_short",
                  0.4797820371527309
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_location_by_name",
                  0.7576325064851213
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_truckroute_whensucceed",
                  0.9314238128245976
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_departure_as_datetime",
                  0.628667660578612
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_departure_as_string",
                  0.7744552549693343
                ],
                [
                  "test_truckroute_route_short",
                  "test_matrix_bad_request",
                  0.24310533622069574
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.3964717937666829
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.6897352496133362
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_matrix_multiple_start_names",
                  0.5101082199294616
                ],
                [
                  "test_matrix_whensucceed",
                  "test_matrix_multiple_start_names",
                  0.805746565670551
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_publictransport_withdefaultmodes_whensucceed",
                  0.6988652069759149
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_intermediateroute_when_error_no_route_found_occured",
                  0.7423859362490842
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.960806942217682
                ],
                [
                  "test_carroute_route_short",
                  "test_location_by_name",
                  0.78260909570968
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.9440709708623003
                ],
                [
                  "test_carroute_whensucceed",
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  0.6971119647190804
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "test_departure_as_datetime",
                  0.6358116112670054
                ],
                [
                  "test_truckroute_when_error_invalid_input_data_occured",
                  "test_matrix_multiple_destinations",
                  0.5595391962584325
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.40705220750304927
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  0.76486793636861
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.7314263600143485
                ],
                [
                  "test_truckroute_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.6716561257217208
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "test_truckroute_route_short",
                  0.5419366568464787
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.7057743760434478
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_matrix_multiple_start_names",
                  0.4870549730050725
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.47166089695810154
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_matrix_multiple_destinations",
                  0.5673235991950584
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_publictransport_when_error_invalid_input_data_occured",
                  0.7222063999724025
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_truckroute_route_short",
                  0.4562734366645081
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_matrix_multiple_destinations",
                  0.5161932250083823
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_intermediateroute_when_error_no_route_found_occured",
                  0.413080109542088
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_intermediateroute_when_error_no_route_found_occured",
                  0.7620446076456003
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "test_matrix_multiple_destinations",
                  0.4765026457344274
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_matrix_multiple_starts",
                  0.5673235991950584
                ],
                [
                  "test_initiation",
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  0.2266348343246455
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.41207165201895396
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_publictransport_when_error_invalid_input_data_occured",
                  0.4679186100326148
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.7680294792817213
                ],
                [
                  "test_initiation",
                  "test_carroute_withdefaultmodes_whensucceed",
                  0.22801256637216294
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "test_matrix_multiple_start_names",
                  0.48479484492583724
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_departure_as_string",
                  0.753524031862055
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  0.41128466421288323
                ],
                [
                  "test_publictransport_route_short",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.6408821077435712
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_intermediateroute_when_error_no_route_found_occured",
                  0.7678979342337312
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_locationnearmotorway_whensucceed",
                  0.7230966200701452
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_publictransport_when_error_invalid_input_data_occured",
                  0.6960311154105718
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_truckroute_whensucceed",
                  0.7361791401354402
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.9179346194626289
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_departure_as_datetime",
                  0.6304491678738939
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.7057743760434478
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_publictransport_when_error_invalid_credentials_occured",
                  0.7311758865129638
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.730128464160456
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_location_by_name",
                  0.44961440151294857
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  0.8222803813290563
                ],
                [
                  "test_matrix_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.8058772873379613
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_publictransport_route_short",
                  0.6447780834930626
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_publictransport_withdefaultmodes_whensucceed",
                  0.9069264655320852
                ],
                [
                  "test_truckroute_withdefaultmodes_whensucceed",
                  "test_matrix_bad_request",
                  0.6198978738338596
                ],
                [
                  "test_carroute_whensucceed",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.72920622970984
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_matrix_multiple_destinations",
                  0.22037655437954337
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "test_departure_as_string",
                  0.7319884221029486
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_publictransport_when_error_invalid_credentials_occured",
                  0.6413240697154399
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.9789473684210528
                ],
                [
                  "test_carroute_route_short",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.461052628123493
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.5787646282786335
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_publictransport_withdefaultmodes_whensucceed",
                  0.5471252623671162
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  0.9636683534581697
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.607332247634187
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_departure_as_datetime",
                  0.7612052026412277
                ],
                [
                  "test_publictransport_route_short",
                  "test_matrix_multiple_start_names",
                  0.3990264987931634
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  "test_departure_as_string",
                  0.6325259888413399
                ],
                [
                  "test_carroute_whensucceed",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.9194350573815793
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.7314263600143485
                ],
                [
                  "test_initiation",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.21296183592613543
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_publictransport_withdefaultmodes_whensucceed",
                  0.9000884559456229
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "test_truckroute_route_short",
                  0.401103340830009
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_publictransport_whensucceed",
                  0.7008766440504626
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.6847367880174607
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.95759334439188
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.690843833667406
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_matrix_multiple_starts",
                  0.6913003928250827
                ],
                [
                  "test_truckroute_when_error_invalid_input_data_occured",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.8272673333707816
                ],
                [
                  "test_carroute_route_short",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.4633079783100415
                ],
                [
                  "test_carroute_route_short",
                  "test_matrix_multiple_destinations",
                  0.3653524129421305
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_publictransport_when_error_no_route_found_occured",
                  0.762554957953856
                ],
                [
                  "test_carroute_whensucceed",
                  "test_carroute_route_short",
                  0.54362274577131
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_truckroute_whensucceed",
                  0.910058713262646
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.7100648373006029
                ],
                [
                  "test_carroute_whensucceed",
                  "test_departure_as_string",
                  0.7454328293634401
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_publictransport_whensucceed",
                  0.5388801138925204
                ],
                [
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  "test_matrix_multiple_destinations",
                  0.6083605936780411
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_publictransport_when_error_invalid_input_data_occured",
                  0.733521027200402
                ],
                [
                  "test_truckroute_when_error_no_route_found_occured",
                  "test_matrix_bad_request",
                  0.6073381670229586
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.7254762501100117
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.8783753845148606
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.3486030056348009
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.9035767652126493
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  0.9598080575808067
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  0.8222803813290563
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.4796627075696723
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_departure_as_string",
                  0.7682805924090071
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_matrix_whensucceed",
                  0.5713147206232279
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.7351266913399582
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_departure_as_string",
                  0.7027433791976639
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  0.6834101299193603
                ],
                [
                  "test_initiation",
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  0.16476290360524767
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "test_matrix_bad_request",
                  0.5474433209040426
                ],
                [
                  "test_carroute_route_short",
                  "test_carroute_when_error_no_route_found_occured",
                  0.4569933890073468
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.7252309377463686
                ],
                [
                  "test_carroute_whensucceed",
                  "test_publictransport_withdefaultmodes_whensucceed",
                  0.8940724707039904
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "test_departure_as_datetime",
                  0.6962373703773388
                ],
                [
                  "test_matrix_whensucceed",
                  "test_matrix_multiple_starts",
                  0.943169660712294
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_truckroute_whensucceed",
                  0.9194350573815793
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_truckroute_whensucceed",
                  0.6971119647190804
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.5210763042811932
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_matrix_multiple_starts",
                  0.6115541095504887
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_publictransport_when_error_invalid_credentials_occured",
                  0.7044051257530242
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "test_departure_as_string",
                  0.6735988223990255
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_carroute_route_short",
                  0.915659179467202
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_departure_as_datetime",
                  0.7407777722518254
                ],
                [
                  "test_truckroute_when_error_invalid_input_data_occured",
                  "test_matrix_whensucceed",
                  0.5328640870348614
                ],
                [
                  "test_carroute_route_short",
                  "test_publictransport_whensucceed",
                  0.5927555711662614
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.7427148620928276
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "test_truckroute_route_short",
                  0.47450901299082066
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "test_matrix_bad_request",
                  0.6285393610547089
                ],
                [
                  "test_carroute_route_short",
                  "test_publictransport_when_error_invalid_credentials_occured",
                  0.5257546315750957
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  0.7207408293252412
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "test_location_by_name",
                  0.5550228674132158
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_carroute_when_error_invalid_credentials_occured",
                  0.8272673333707816
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.7492557476825054
                ],
                [
                  "test_matrix_multiple_destinations",
                  "test_departure_as_string",
                  0.6506963183996303
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_location_by_name",
                  0.47630629511762373
                ],
                [
                  "test_carroute_route_short",
                  "test_publictransport_when_error_no_route_found_occured",
                  0.5103647725561203
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.6880076624913767
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_publictransport_route_short",
                  0.6757518273692791
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.7207408293252412
                ],
                [
                  "test_carroute_route_short",
                  "test_intermediateroute_whensucceed",
                  0.5686111790994135
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.7008766440504626
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.6365465335399306
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_truckroute_route_short",
                  0.4147701274689246
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  0.7452472301728134
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.6284675238796581
                ],
                [
                  "test_truckroute_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_starts",
                  0.7345669759491493
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.6880076624913767
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  0.761345272363447
                ],
                [
                  "test_carroute_route_short",
                  "test_publictransport_withdefaultmodes_whensucceed",
                  0.6084228830273891
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_matrix_multiple_start_names",
                  0.4634275570907938
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_pedastrianroute_route_short",
                  0.401642833745212
                ],
                [
                  "test_initiation",
                  "test_bicycleroute_route_short",
                  0.04821649594392724
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "test_matrix_bad_request",
                  0.6048751059560228
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.9494245535078307
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_departure_as_datetime",
                  0.678578057972096
                ],
                [
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.9633639890708999
                ],
                [
                  "test_initiation",
                  "test_pedastrianroute_whensucceed",
                  0.2780938647955929
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_publictransport_when_error_invalid_credentials_occured",
                  0.7086872632235389
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_departure_as_string",
                  0.6554154239796548
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_publictransport_route_short",
                  0.7049073768502414
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  0.8844454358604708
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.7207408293252412
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_matrix_bad_request",
                  0.6314696303710867
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_publictransport_route_short",
                  0.6323619942779275
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  0.7252309377463686
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_intermediateroute_whensucceed",
                  0.7396899582804383
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_publictransport_when_error_invalid_credentials_occured",
                  0.4732263057838471
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.7154083354532237
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.8222803813290563
                ],
                [
                  "test_truckroute_when_error_invalid_input_data_occured",
                  "test_departure_as_datetime",
                  0.6246687145894215
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.7947042356429728
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  0.8761955242934372
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_departure_as_string",
                  0.6451369003258272
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "test_publictransport_when_error_no_route_found_occured",
                  0.7862838897045851
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_publictransport_whensucceed",
                  0.9365175448217665
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.9057055186659251
                ],
                [
                  "test_truckroute_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_start_names",
                  0.6637384880265758
                ],
                [
                  "test_publictransport_route_short",
                  "test_truckroute_route_short",
                  0.8918812255931191
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_departure_as_datetime",
                  0.76767714410136
                ],
                [
                  "test_carroute_whensucceed",
                  "test_departure_as_datetime",
                  0.7071067811865476
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_publictransporttimetable_route_short",
                  0.5823209687758504
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.7155638883726448
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_publictransport_withdefaultmodes_whensucceed",
                  0.9320200958256774
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "test_location_by_name",
                  0.5516462123492355
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  0.4576607472285402
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_publictransport_when_error_invalid_credentials_occured",
                  0.7173775945973805
                ],
                [
                  "test_carroute_route_short",
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  0.5531150836764889
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.7099268854965314
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  0.9440709708623003
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_intermediateroute_whensucceed",
                  0.5094437522800321
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  0.7338129526830751
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_publictransport_withdefaultmodes_whensucceed",
                  0.8629815702089605
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.7113780102515032
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.950594307221094
                ],
                [
                  "test_matrix_multiple_starts",
                  "test_matrix_multiple_destinations",
                  0.7726674092862559
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_matrix_multiple_start_names",
                  0.6210590034081187
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.7452472301728134
                ],
                [
                  "test_matrix_whensucceed",
                  "test_matrix_bad_request",
                  0.8546660867556332
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.7151123036798687
                ],
                [
                  "test_matrix_multiple_destinations",
                  "test_departure_as_datetime",
                  0.564401459547742
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.5794594233563519
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_carroute_route_short",
                  0.4345904228886698
                ],
                [
                  "test_carroute_route_short",
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  0.5086540159769302
                ],
                [
                  "test_truckroute_when_error_invalid_credentials_occured",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.7656649625063151
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  0.7387087617168449
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "test_departure_as_string",
                  0.753524031862055
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_departure_as_datetime",
                  0.6639330034560993
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.9261095542425822
                ],
                [
                  "test_initiation",
                  "test_carroute_when_error_invalid_credentials_occured",
                  0.18262174977642112
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  0.9598927191697683
                ],
                [
                  "test_publictransport_route_short",
                  "test_matrix_multiple_destinations",
                  0.4037864265436241
                ],
                [
                  "test_publictransport_route_short",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.51604684654214
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.6972166887783964
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_start_names",
                  0.6637384880265758
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_location_by_name",
                  0.5318194395517654
                ],
                [
                  "test_initiation",
                  "test_carroute_whensucceed",
                  0.27952366272814777
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_publictransport_whensucceed",
                  0.7232333866582557
                ],
                [
                  "test_truckroute_whensucceed",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.7500406934158355
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_truckroute_route_short",
                  0.46608886352226175
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_publictransport_when_error_invalid_credentials_occured",
                  0.696636474663699
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_matrix_bad_request",
                  0.6216029173965385
                ],
                [
                  "test_departure_as_datetime",
                  "test_departure_as_string",
                  0.7803827191696595
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "test_location_by_name",
                  0.5031404525890392
                ],
                [
                  "test_initiation",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.18262174977642112
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_truckroute_whensucceed",
                  0.9538586964492807
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.7287828881031495
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_whensucceed",
                  0.8751899489873672
                ],
                [
                  "test_truckroute_when_error_no_route_found_occured",
                  "test_matrix_multiple_destinations",
                  0.5322445025797033
                ],
                [
                  "test_truckroute_when_error_invalid_input_data_occured",
                  "test_location_by_name",
                  0.4757947338055323
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_departure_as_string",
                  0.7796102922564631
                ],
                [
                  "test_initiation",
                  "test_locationnearmotorway_whensucceed",
                  0.2780938647955929
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_publictransport_withdefaultmodes_whensucceed",
                  0.5416141261508737
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  0.5169266048039105
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_publictransport_when_error_no_route_found_occured",
                  0.9494245535078307
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  0.7426927417502175
                ],
                [
                  "test_carroute_whensucceed",
                  "test_location_by_name",
                  0.5544824583573896
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_publictransport_withdefaultmodes_whensucceed",
                  0.9261095542425822
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_location_by_name",
                  0.7604413548060593
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_matrix_bad_request",
                  0.5687111245916714
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_publictransport_when_error_no_route_found_occured",
                  0.4209216897649821
                ],
                [
                  "test_publictransport_route_short",
                  "test_truckroute_whensucceed",
                  0.6295015684749214
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_departure_as_datetime",
                  0.5966537180402222
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_publictransport_withdefaultmodes_whensucceed",
                  0.6883312315493176
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "test_departure_as_datetime",
                  0.7250165430549781
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.7404360971988655
                ],
                [
                  "test_initiation",
                  "test_publictransporttimetable_route_short",
                  0.09259303361365515
                ],
                [
                  "test_carroute_whensucceed",
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  0.910058713262646
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_matrix_bad_request",
                  0.6270938082099856
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_truckroute_route_short",
                  0.5332749018531981
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.7310625617936505
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.7538065395480598
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.5561004743358533
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.9789473684210528
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_publictransporttimetable_route_short",
                  0.5759163652959807
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_publictransport_when_error_invalid_input_data_occured",
                  0.7956444122010683
                ],
                [
                  "test_truckroute_whensucceed",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.7558105838723852
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.7400034730911172
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.559019656988251
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_publictransport_when_error_no_route_found_occured",
                  0.7825595791906553
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.6716561257217208
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_publictransport_when_error_invalid_input_data_occured",
                  0.9639949408415354
                ],
                [
                  "test_initiation",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.15524919276570281
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "test_publictransport_when_error_no_route_found_occured",
                  0.7815196759556954
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_publictransporttimetable_route_short",
                  0.8411883995567484
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.7290148043997554
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.6771610292428453
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_carroute_when_error_no_route_found_occured",
                  0.3486030056348009
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.7345669759491493
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  "test_matrix_multiple_start_names",
                  0.5076015304601535
                ],
                [
                  "test_carroute_whensucceed",
                  "test_carroute_when_error_invalid_input_data_occured",
                  0.7558105838723852
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_matrix_whensucceed",
                  0.802814191937817
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_matrix_multiple_starts",
                  0.7155638883726448
                ],
                [
                  "test_initiation",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.2266348343246455
                ],
                [
                  "test_matrix_multiple_starts",
                  "test_location_by_name",
                  0.27956158738237946
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_start_names",
                  0.6393275356201997
                ],
                [
                  "test_truckroute_when_error_no_route_found_occured",
                  "test_matrix_whensucceed",
                  0.5872688341970485
                ],
                [
                  "test_initiation",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.15452877499092174
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.41128466421288323
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_publictransporttimetable_route_short",
                  0.6940530556131049
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.39958696638823965
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_publictransport_whensucceed",
                  0.8837151016885367
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.7917345879883669
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "test_matrix_multiple_start_names",
                  0.4739479499818892
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.3361671340612294
                ],
                [
                  "test_carroute_whensucceed",
                  "test_matrix_multiple_start_names",
                  0.6371878657732426
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  0.762600999007963
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "test_matrix_whensucceed",
                  0.5695581485610398
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.47767438415905056
                ],
                [
                  "test_carroute_route_short",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.44776119933043074
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.6772581571470162
                ],
                [
                  "test_matrix_whensucceed",
                  "test_departure_as_string",
                  0.6266143604247356
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_location_by_name",
                  0.5624231723120587
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.7208488375810934
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_publictransport_when_error_invalid_input_data_occured",
                  0.7239353579134362
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_publictransport_when_error_no_route_found_occured",
                  0.6880829813274073
                ],
                [
                  "test_truckroute_route_short",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.42174105398100736
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  0.8272673333707816
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_departure_as_string",
                  0.6360054824149334
                ],
                [
                  "test_initiation",
                  "test_matrix_whensucceed",
                  0.21886217238860886
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_matrix_whensucceed",
                  0.7562742387820015
                ],
                [
                  "test_carroute_whensucceed",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.722992804171344
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.5168039579330365
                ],
                [
                  "test_truckroute_when_error_invalid_credentials_occured",
                  "test_matrix_multiple_start_names",
                  0.5101082199294616
                ],
                [
                  "test_matrix_multiple_starts",
                  "test_matrix_multiple_start_names",
                  0.7788302077714457
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_matrix_bad_request",
                  0.6075745430783169
                ],
                [
                  "test_carroute_route_short",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.44083101502238703
                ],
                [
                  "test_departure_as_string",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.5750793453459497
                ],
                [
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  "test_truckroute_whensucceed",
                  0.7150355048498476
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.6848150343017256
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  0.9801980198019802
                ],
                [
                  "test_truckroute_when_error_invalid_credentials_occured",
                  "test_matrix_multiple_starts",
                  0.5673235991950584
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.40579526155203854
                ],
                [
                  "test_carroute_whensucceed",
                  "test_matrix_multiple_starts",
                  0.7104716494061815
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_departure_as_string",
                  0.7443873683187767
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "test_location_by_name",
                  0.5200717816660289
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.751903704662534
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.4638662013509342
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.7795881682254432
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "test_truckroute_whensucceed",
                  0.9027346356390192
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_starts",
                  0.7154083354532237
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_matrix_multiple_start_names",
                  0.4838367090175236
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.6469539786951237
                ],
                [
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  "test_matrix_multiple_starts",
                  0.6083605936780411
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_pedastrianroute_whensucceed",
                  0.7254762501100117
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_intermediateroute_when_error_no_route_found_occured",
                  0.960806942217682
                ],
                [
                  "test_truckroute_when_error_invalid_credentials_occured",
                  "test_matrix_multiple_destinations",
                  0.5161932250083823
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_truckroute_whensucceed",
                  0.8940724707039904
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_matrix_multiple_destinations",
                  0.5322445025797033
                ],
                [
                  "test_truckroute_when_error_no_route_found_occured",
                  "test_matrix_multiple_start_names",
                  0.5259702813297584
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_publictransport_route_short",
                  0.5917436017606665
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_publictransport_when_error_no_route_found_occured",
                  0.7099268854965314
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.7487492775595769
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  0.7264509368768758
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.9633639890708999
                ],
                [
                  "test_carroute_whensucceed",
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  0.9027346356390192
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_publictransport_when_error_no_route_found_occured",
                  0.42174105398100736
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_publictransport_when_error_no_route_found_occured",
                  0.733751725218733
                ],
                [
                  "test_truckroute_when_error_invalid_input_data_occured",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.47598814328302436
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_locationnearmotorway_whensucceed",
                  0.4493780741892492
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_carroute_when_error_invalid_input_data_occured",
                  0.7259556634233522
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_publictransport_when_error_invalid_input_data_occured",
                  0.7619811381862008
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_intermediateroute_whensucceed",
                  0.7173825999525799
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_intermediateroute_when_error_no_route_found_occured",
                  0.4060063987112659
                ],
                [
                  "test_truckroute_route_short",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.41313228728275625
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.762600999007963
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_bicycleroute_route_short",
                  0.31527969507423004
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_location_by_name",
                  0.41441707433520114
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.47291954261134506
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  0.7251222728993266
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_publictransport_whensucceed",
                  0.7008766440504626
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "test_publictransporttimetable_route_short",
                  0.650746720277249
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.6842436725472459
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.9549006489468039
                ],
                [
                  "test_truckroute_route_short",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.3737599235672092
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.7678979342337312
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.7326732673267327
                ],
                [
                  "test_initiation",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.18172434016970185
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "test_locationnearmotorway_whensucceed",
                  0.733751725218733
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.7758532738019063
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.7173775945973805
                ],
                [
                  "test_initiation",
                  "test_carroute_when_error_no_route_found_occured",
                  0.16476290360524767
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.8030488684976902
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_starts",
                  0.730128464160456
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.8837151016885367
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_matrix_multiple_destinations",
                  0.6115541095504887
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_publictransporttimetable_route_short",
                  0.6182781630559578
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "test_locationnearmotorway_whensucceed",
                  0.696636474663699
                ],
                [
                  "test_truckroute_route_short",
                  "test_matrix_whensucceed",
                  0.25991074394163777
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_location_by_name",
                  0.4639538804371252
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_truckroute_route_short",
                  0.406359626835498
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "test_matrix_whensucceed",
                  0.5279527925093696
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "test_publictransporttimetable_route_short",
                  0.6358677245253539
                ],
                [
                  "test_truckroute_whensucceed",
                  "test_location_by_name",
                  0.5613279208062463
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_matrix_bad_request",
                  0.5844720395466497
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.6876226741961575
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_location_by_name",
                  0.6078080037565888
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_pedastrianroute_route_short",
                  0.4151934069584915
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  0.39958696638823965
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.6918254508323958
                ],
                [
                  "test_truckroute_withdefaultmodes_whensucceed",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.7477823439274306
                ],
                [
                  "test_carroute_route_short",
                  "test_intermediateroute_when_error_no_route_found_occured",
                  0.5032692728909581
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_publictransport_withdefaultmodes_whensucceed",
                  0.7453621509144825
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.540441856734964
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_matrix_whensucceed",
                  0.24134569080294938
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.9530727755557261
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  0.7387087617168449
                ],
                [
                  "test_publictransport_route_short",
                  "test_publictransport_withdefaultmodes_whensucceed",
                  0.7382621864220198
                ],
                [
                  "test_initiation",
                  "test_publictransport_route_short",
                  0.08285522649991613
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_truckroute_whensucceed",
                  0.72920622970984
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  0.8084505268557987
                ],
                [
                  "test_departure_as_string",
                  "test_location_by_name",
                  0.6042548857412315
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_publictransport_when_error_no_route_found_occured",
                  0.9490873344461845
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.7660502176740979
                ],
                [
                  "test_carroute_whensucceed",
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  0.72920622970984
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.9636683534581697
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.5935607402063855
                ],
                [
                  "test_matrix_multiple_starts",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.2711538739126848
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "test_locationnearmotorway_whensucceed",
                  0.7317091157615132
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_publictransporttimetable_route_short",
                  0.6344718079987586
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.942468495500547
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_locationnearmotorway_whensucceed",
                  0.7324134932407105
                ],
                [
                  "test_initiation",
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  0.13156128457924576
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  0.7373635612287834
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_publictransport_when_error_invalid_credentials_occured",
                  0.8055900894786011
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_intermediateroute_when_error_no_route_found_occured",
                  0.7660502176740979
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.75058544753827
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_matrix_multiple_starts",
                  0.5673235991950584
                ],
                [
                  "test_truckroute_when_error_invalid_input_data_occured",
                  "test_matrix_bad_request",
                  0.6314696303710867
                ],
                [
                  "test_carroute_route_short",
                  "test_carroute_when_error_invalid_credentials_occured",
                  0.47902658476758664
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_departure_as_datetime",
                  0.6177279510939835
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_matrix_whensucceed",
                  0.6066289214224447
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.9483893429101983
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  0.45053414815300485
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  0.7538065395480598
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_publictransport_route_short",
                  0.6474891397821648
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_matrix_multiple_starts",
                  0.7327236352781754
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.7338129526830751
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.7201440432144052
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.6772581571470162
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "test_truckroute_whensucceed",
                  0.722992804171344
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_locationnearmotorway_whensucceed",
                  0.6834947577379978
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_intermediateroute_when_error_no_route_found_occured",
                  0.960806942217682
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_departure_as_string",
                  0.6905459020304803
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_matrix_multiple_start_names",
                  0.5259702813297584
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.6960311154105718
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_publictransport_route_short",
                  0.5450372245295083
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_start_names",
                  0.6597279468503829
                ],
                [
                  "test_publictransport_route_short",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.5187557724858725
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_publictransport_route_short",
                  0.5285625630874815
                ],
                [
                  "test_carroute_route_short",
                  "test_pedastrianroute_whensucceed",
                  0.5362971573652984
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.6907081058186164
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_matrix_multiple_starts",
                  0.6115541095504887
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_publictransport_when_error_invalid_input_data_occured",
                  0.95562901896101
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.5760789310572912
                ],
                [
                  "test_initiation",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.16476290360524767
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.7044051257530242
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_whensucceed",
                  0.8870291722358089
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_carroute_when_error_invalid_credentials_occured",
                  0.7472076328295919
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  0.7215691842108748
                ],
                [
                  "test_truckroute_when_error_no_route_found_occured",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.47989897926858555
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.7404360971988655
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.7099268854965314
                ],
                [
                  "test_truckroute_whensucceed",
                  "test_departure_as_datetime",
                  0.7143965418173367
                ],
                [
                  "test_initiation",
                  "test_truckroute_route_short",
                  0.056252578601248444
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  "test_truckroute_whensucceed",
                  0.6836329072609323
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.9633639890708999
                ],
                [
                  "test_truckroute_when_error_invalid_credentials_occured",
                  "test_matrix_multiple_destinations",
                  0.5673235991950584
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_truckroute_whensucceed",
                  0.7361791401354402
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_publictransport_route_short",
                  0.8813388943213328
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "test_matrix_whensucceed",
                  0.5185243056054647
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_matrix_multiple_start_names",
                  0.5101082199294616
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_publictransport_when_error_invalid_credentials_occured",
                  0.7630968259683722
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.8055900894786011
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_publictransport_route_short",
                  0.5411734957845016
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_truckroute_route_short",
                  0.428266878275253
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_truckroute_route_short",
                  0.5200979336677383
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.7956444122010683
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_publictransport_whensucceed",
                  0.6797398065587024
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_departure_as_datetime",
                  0.628667660578612
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.6834947577379978
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.958297482573623
                ],
                [
                  "test_carroute_whensucceed",
                  "test_publictransport_when_error_invalid_credentials_occured",
                  0.7002181768057028
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.7283713226772129
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_locationnearmotorway_whensucceed",
                  0.92665946540259
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_starts",
                  0.7345669759491493
                ],
                [
                  "test_initiation",
                  "test_pedastrianroute_route_short",
                  0.06667398382909312
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_whensucceed",
                  0.8426777136240186
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_truckroute_whensucceed",
                  0.72920622970984
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.7083040280284009
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  0.6579013150157976
                ],
                [
                  "test_carroute_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.6447887850448297
                ],
                [
                  "test_initiation",
                  "test_publictransport_when_error_no_route_found_occured",
                  0.15979403105436848
                ],
                [
                  "test_carroute_whensucceed",
                  "test_truckroute_whensucceed",
                  0.9690721649484537
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_matrix_bad_request",
                  0.6073381670229586
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "test_matrix_whensucceed",
                  0.7174089023246103
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_matrix_whensucceed",
                  0.5328640870348614
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "test_departure_as_string",
                  0.6368289299977345
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_publictransport_whensucceed",
                  0.9270773549506806
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_truckroute_whensucceed",
                  0.6971119647190804
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_departure_as_datetime",
                  0.701370617329358
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.8958420218235149
                ],
                [
                  "test_matrix_multiple_starts",
                  "test_matrix_bad_request",
                  0.8375979188320856
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_truckroute_route_short",
                  0.939877300613497
                ],
                [
                  "test_carroute_route_short",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.4545837917828647
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_matrix_whensucceed",
                  0.5484634023180384
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.7383213763708161
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_departure_as_datetime",
                  0.728681636143807
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "test_matrix_multiple_starts",
                  0.556942712660095
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_publictransport_route_short",
                  0.5793521423718676
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.9801980198019802
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.6629651552462131
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_matrix_bad_request",
                  0.5991446895152781
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.727170529117666
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.7599316201894389
                ],
                [
                  "test_truckroute_whensucceed",
                  "test_matrix_whensucceed",
                  0.72109740428453
                ],
                [
                  "test_carroute_whensucceed",
                  "test_publictransport_whensucceed",
                  0.9314238128245976
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_publictransporttimetable_route_short",
                  0.5823209687758504
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_departure_as_string",
                  0.6451369003258272
                ],
                [
                  "test_carroute_whensucceed",
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  0.7353651222227283
                ],
                [
                  "test_carroute_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.7104716494061815
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_publictransport_when_error_invalid_input_data_occured",
                  0.6298709328474051
                ],
                [
                  "test_truckroute_whensucceed",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.941860302683569
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_publictransporttimetable_route_short",
                  0.628225528393419
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_truckroute_whensucceed",
                  0.9559379685358758
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.5917417286124875
                ],
                [
                  "test_carroute_whensucceed",
                  "test_intermediateroute_when_error_no_route_found_occured",
                  0.7659626006057367
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_publictransport_when_error_invalid_input_data_occured",
                  0.7667659369039164
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  0.7603460833594331
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_location_by_name",
                  0.6053155593629875
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.9035767652126493
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_publictransport_when_error_invalid_credentials_occured",
                  0.9530727755557261
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.8080285581761122
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "test_publictransporttimetable_route_short",
                  0.6327973349062317
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.95759334439188
                ],
                [
                  "test_truckroute_when_error_no_route_found_occured",
                  "test_location_by_name",
                  0.45653154615160935
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.7252309377463686
                ],
                [
                  "test_carroute_whensucceed",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.7150355048498476
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.7064382801803911
                ],
                [
                  "test_initiation",
                  "test_publictransport_withdefaultmodes_whensucceed",
                  0.21644373160974678
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.8151662283235993
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.7555387891170999
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_matrix_whensucceed",
                  0.555765823349582
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.7312000173321489
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.9397590361445783
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_matrix_multiple_starts",
                  0.5595391962584325
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_locationnearmotorway_whensucceed",
                  0.761345272363447
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_intermediateroute_when_error_no_route_found_occured",
                  0.7795881682254432
                ],
                [
                  "test_truckroute_whensucceed",
                  "test_departure_as_string",
                  0.755113775199329
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.7290728855020576
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_publictransport_when_error_invalid_input_data_occured",
                  0.6918254508323958
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.6579013150157976
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.7327236352781754
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.7226479799975011
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_departure_as_string",
                  0.6795630796737296
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.891566265060241
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_pedastrianroute_route_short",
                  0.9693770062079384
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_publictransport_when_error_invalid_credentials_occured",
                  0.7173775945973805
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  "test_matrix_multiple_starts",
                  0.5645357513693777
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_intermediateroute_when_error_no_route_found_occured",
                  0.823729846201355
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  0.8080285581761122
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  0.9636683534581697
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.9091076054353292
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_publictransport_withdefaultmodes_whensucceed",
                  0.9300910476252503
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_matrix_multiple_destinations",
                  0.5595391962584325
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.700346561145849
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  "test_matrix_multiple_destinations",
                  0.5645357513693777
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.7046040262638418
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "test_departure_as_datetime",
                  0.6416283113160687
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_publictransport_when_error_no_route_found_occured",
                  0.7387087617168449
                ],
                [
                  "test_truckroute_whensucceed",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.7173181086239813
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_location_by_name",
                  0.4712563287656478
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_matrix_multiple_destinations",
                  0.4928649793305132
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  "test_matrix_multiple_destinations",
                  0.5136566336132553
                ],
                [
                  "test_matrix_whensucceed",
                  "test_departure_as_datetime",
                  0.5327238882476506
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.7418460557755893
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_publictransporttimetable_route_short",
                  0.7286721858919594
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.7143681104353994
                ],
                [
                  "test_truckroute_when_error_no_route_found_occured",
                  "test_departure_as_string",
                  0.6651977437405452
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  0.7603460833594331
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_publictransport_when_error_invalid_credentials_occured",
                  0.8239159605236093
                ],
                [
                  "test_matrix_multiple_destinations",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.4844240566555986
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_carroute_withdefaultmodes_whensucceed",
                  0.4796627075696723
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.9655289564756979
                ],
                [
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  "test_matrix_bad_request",
                  0.6041666666666667
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "test_matrix_bad_request",
                  0.589022236184231
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.7603460833594331
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.7944857602476021
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_location_by_name",
                  0.46927699772600445
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  0.7656649625063151
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.7296906040104402
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.6797398065587024
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_matrix_multiple_starts",
                  0.22037655437954337
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "test_truckroute_route_short",
                  0.4767644169415186
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_matrix_multiple_destinations",
                  0.5322445025797033
                ],
                [
                  "test_publictransport_route_short",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.5386622363141098
                ],
                [
                  "test_matrix_bad_request",
                  "test_departure_as_string",
                  0.5741429713191233
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_publictransport_whensucceed",
                  0.7170130397380707
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "test_truckroute_route_short",
                  0.45999330428820784
                ],
                [
                  "test_carroute_route_short",
                  "test_matrix_multiple_destinations",
                  0.3179132364512858
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_matrix_whensucceed",
                  0.7034273657279783
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.6876226741961575
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_matrix_multiple_start_names",
                  0.21406564559884828
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_publictransporttimetable_route_short",
                  0.7186310123141461
                ],
                [
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  "test_truckroute_route_short",
                  0.36108292585720986
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_intermediateroute_when_error_no_route_found_occured",
                  0.8382297154486528
                ],
                [
                  "test_publictransport_route_short",
                  "test_publictransporttimetable_route_short",
                  0.9353223281652323
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.9719626168224298
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.9112113780030292
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.7086872632235389
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.7136858151040807
                ],
                [
                  "test_truckroute_route_short",
                  "test_departure_as_datetime",
                  0.6739925944175553
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_matrix_bad_request",
                  0.6721660724223313
                ],
                [
                  "test_matrix_multiple_starts",
                  "test_departure_as_string",
                  0.6506963183996303
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_publictransport_whensucceed",
                  0.6797398065587024
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.7947042356429728
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_publictransport_route_short",
                  0.5981607469279323
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_publictransport_when_error_no_route_found_occured",
                  0.7574243558796969
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_locationnearmotorway_whensucceed",
                  0.7151123036798687
                ],
                [
                  "test_carroute_whensucceed",
                  "test_carroute_withdefaultmodes_whensucceed",
                  0.941860302683569
                ],
                [
                  "test_carroute_route_short",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.5432380286108373
                ],
                [
                  "test_matrix_multiple_start_names",
                  "test_departure_as_string",
                  0.5646423848129652
                ],
                [
                  "test_truckroute_when_error_invalid_input_data_occured",
                  "test_matrix_multiple_start_names",
                  0.4870549730050725
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_departure_as_datetime",
                  0.6881638621299665
                ],
                [
                  "test_initiation",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.16390251702679645
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.95814989891921
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.7264509368768758
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "test_matrix_bad_request",
                  0.6185895741317419
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_truckroute_route_short",
                  0.5050829599169468
                ],
                [
                  "test_truckroute_route_short",
                  "test_departure_as_string",
                  0.574451410264749
                ],
                [
                  "test_matrix_multiple_destinations",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.2711538739126848
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_publictransporttimetable_route_short",
                  0.5787646282786335
                ],
                [
                  "test_initiation",
                  "test_carroute_route_short",
                  0.07225331294564673
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.8080285581761122
                ],
                [
                  "test_matrix_whensucceed",
                  "test_location_by_name",
                  0.32873919545934344
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "test_matrix_multiple_start_names",
                  0.439977632092907
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "test_matrix_bad_request",
                  0.6161522330538036
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_location_by_name",
                  0.46927699772600445
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_publictransport_whensucceed",
                  0.7170130397380707
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.8289098281887927
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "test_matrix_multiple_destinations",
                  0.556942712660095
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  0.8000204089442232
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "test_departure_as_datetime",
                  0.6601720281725244
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "test_departure_as_datetime",
                  0.7553276446976394
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "test_matrix_multiple_destinations",
                  0.44522605982117824
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.46078146640506695
                ],
                [
                  "test_truckroute_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.7345669759491493
                ],
                [
                  "test_carroute_route_short",
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  0.5190958255153079
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.7944857602476021
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "test_truckroute_route_short",
                  0.4391683702612143
                ],
                [
                  "test_truckroute_when_error_invalid_input_data_occured",
                  "test_matrix_multiple_destinations",
                  0.4928649793305132
                ],
                [
                  "test_publictransport_route_short",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.5411734957845016
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_matrix_multiple_destinations",
                  0.21661920284376304
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_truckroute_whensucceed",
                  0.4721362229374969
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_pedastrianroute_route_short",
                  0.34124485995055814
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_truckroute_route_short",
                  0.3229694437345771
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.6866695124682847
                ],
                [
                  "test_truckroute_when_error_invalid_input_data_occured",
                  "test_matrix_multiple_starts",
                  0.5595391962584325
                ],
                [
                  "test_initiation",
                  "test_intermediateroute_when_error_no_route_found_occured",
                  0.13925006900339948
                ],
                [
                  "test_publictransport_route_short",
                  "test_publictransport_when_error_no_route_found_occured",
                  0.6109208450770314
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.8490989237493047
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_carroute_when_error_invalid_credentials_occured",
                  0.6771610292428453
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_matrix_multiple_destinations",
                  0.5673235991950584
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_matrix_bad_request",
                  0.6273550009275092
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_matrix_multiple_destinations",
                  0.5161932250083823
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.8080285581761122
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_publictransporttimetable_route_short",
                  0.5787646282786335
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_truckroute_route_short",
                  0.3665722327293783
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_publictransport_whensucceed",
                  0.883538411673437
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.6763995415945232
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_intermediateroute_whensucceed",
                  0.7396899582804383
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.6675977433963897
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_matrix_bad_request",
                  0.6232890249579994
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_matrix_bad_request",
                  0.5687111245916714
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "test_departure_as_string",
                  0.6575411015672012
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.733521027200402
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  0.9789473684210528
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_pedastrianroute_whensucceed",
                  0.9035767652126493
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.7261143466140351
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "test_departure_as_datetime",
                  0.6079528930124307
                ],
                [
                  "test_truckroute_when_error_no_route_found_occured",
                  "test_departure_as_datetime",
                  0.6040198133246693
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_matrix_bad_request",
                  0.2216548653776932
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_matrix_bad_request",
                  0.6392092266028
                ],
                [
                  "test_carroute_route_short",
                  "test_matrix_multiple_starts",
                  0.3653524129421305
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_carroute_when_error_no_route_found_occured",
                  0.7656649625063151
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  0.958297482573623
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_matrix_multiple_destinations",
                  0.6086293868537087
                ],
                [
                  "test_initiation",
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  0.18693292157876873
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_pedastrianroute_route_short",
                  0.4785038304975695
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_locationnearmotorway_whensucceed",
                  0.7532854742243865
                ],
                [
                  "test_publictransport_route_short",
                  "test_matrix_whensucceed",
                  0.4274893093298028
                ],
                [
                  "test_matrix_multiple_start_names",
                  "test_matrix_multiple_destinations",
                  0.7711946174991767
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  0.9662172964791902
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_location_by_name",
                  0.5310409315098952
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_truckroute_route_short",
                  0.48445416560186566
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "test_location_by_name",
                  0.46709936649691375
                ],
                [
                  "test_matrix_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.943169660712294
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.6737215368532152
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.7170130397380707
                ],
                [
                  "test_initiation",
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  0.18262174977642112
                ],
                [
                  "test_initiation",
                  "test_publictransport_when_error_invalid_input_data_occured",
                  0.15107131787130254
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.5886124756277652
                ],
                [
                  "test_matrix_multiple_starts",
                  "test_departure_as_datetime",
                  0.564401459547742
                ],
                [
                  "test_publictransport_route_short",
                  "test_locationnearmotorway_whensucceed",
                  0.6262815904867935
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_carroute_whensucceed",
                  0.4552451190277424
                ],
                [
                  "test_carroute_route_short",
                  "test_carroute_when_error_invalid_input_data_occured",
                  0.46975173431450234
                ],
                [
                  "test_carroute_route_short",
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  0.44776119933043074
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_matrix_multiple_start_names",
                  0.5847661403064656
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.967452325122309
                ],
                [
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  "test_matrix_multiple_destinations",
                  0.5294651389216606
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_pedastrianroute_route_short",
                  0.27646887984304014
                ],
                [
                  "test_matrix_whensucceed",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.319667962738041
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_matrix_bad_request",
                  0.6194932847291902
                ],
                [
                  "test_carroute_whensucceed",
                  "test_matrix_bad_request",
                  0.6217700042172588
                ],
                [
                  "test_departure_as_datetime",
                  "test_location_by_name",
                  0.6486233710045517
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.47358451901505155
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.9514764623988067
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.6772581571470162
                ],
                [
                  "test_publictransport_route_short",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.5450372245295083
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_location_by_name",
                  0.47630629511762373
                ],
                [
                  "test_truckroute_route_short",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.49126745049474496
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.7538065395480598
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.6913003928250827
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.47767438415905056
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "test_truckroute_whensucceed",
                  0.6761657843561341
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_departure_as_datetime",
                  0.6177279510939835
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_publictransport_withdefaultmodes_whensucceed",
                  0.6992564897749243
                ],
                [
                  "test_truckroute_when_error_invalid_credentials_occured",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.4837984147251922
                ],
                [
                  "test_truckroute_when_error_no_route_found_occured",
                  "test_matrix_multiple_destinations",
                  0.6115541095504887
                ],
                [
                  "test_carroute_whensucceed",
                  "test_pedastrianroute_whensucceed",
                  0.9538586964492807
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_carroute_when_error_no_route_found_occured",
                  0.7477823439274306
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_intermediateroute_whensucceed",
                  0.9179346194626289
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "test_matrix_bad_request",
                  0.42565715319534453
                ],
                [
                  "test_carroute_whensucceed",
                  "test_locationnearmotorway_whensucceed",
                  0.9641152415723913
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.7525125698519827
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_publictransport_when_error_no_route_found_occured",
                  0.714242590204757
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_whensucceed",
                  0.8894991799933214
                ],
                [
                  "test_carroute_route_short",
                  "test_matrix_bad_request",
                  0.33062326126679026
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  "test_matrix_bad_request",
                  0.5659164584181103
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.7508253349688097
                ],
                [
                  "test_publictransport_route_short",
                  "test_matrix_multiple_destinations",
                  0.44198953381175754
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_intermediateroute_whensucceed",
                  0.7543771728921173
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_pedastrianroute_whensucceed",
                  0.74217900648392
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "test_matrix_multiple_start_names",
                  0.6339285714285714
                ],
                [
                  "test_carroute_route_short",
                  "test_truckroute_whensucceed",
                  0.5344862290356577
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  0.95759334439188
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_publictransport_withdefaultmodes_whensucceed",
                  0.6992564897749243
                ],
                [
                  "test_initiation",
                  "test_departure_as_datetime",
                  0.04941326935429367
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.47003829149198656
                ],
                [
                  "test_truckroute_withdefaultmodes_whensucceed",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.7259556634233522
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_publictransport_when_error_no_route_found_occured",
                  0.7599316201894389
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_publictransport_when_error_invalid_credentials_occured",
                  0.9530727755557261
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  0.8151662283235993
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.6505256900917809
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_intermediateroute_when_error_no_route_found_occured",
                  0.8324716923361619
                ],
                [
                  "test_truckroute_whensucceed",
                  "test_truckroute_route_short",
                  0.4730281314897636
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.76486793636861
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_matrix_multiple_starts",
                  0.6183821860292439
                ],
                [
                  "test_carroute_whensucceed",
                  "test_carroute_when_error_invalid_credentials_occured",
                  0.7173181086239813
                ],
                [
                  "test_initiation",
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  0.15524919276570281
                ],
                [
                  "test_matrix_multiple_start_names",
                  "test_location_by_name",
                  0.506527000536721
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.752392848896412
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.703899676012231
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_truckroute_route_short",
                  0.9297875135390028
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_departure_as_datetime",
                  0.7865106179650142
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "test_matrix_multiple_starts",
                  0.4765026457344274
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_intermediateroute_whensucceed",
                  0.7173825999525799
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  0.7462041429702978
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  0.4541482146580516
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_matrix_whensucceed",
                  0.5872688341970485
                ],
                [
                  "test_carroute_route_short",
                  "test_truckroute_route_short",
                  0.9392992615532744
                ],
                [
                  "test_carroute_whensucceed",
                  "test_intermediateroute_whensucceed",
                  0.9645500223064692
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.4696289795637778
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_publictransport_when_error_invalid_credentials_occured",
                  0.9518295904534602
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_publictransport_when_error_invalid_input_data_occured",
                  0.8159967830915087
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "test_truckroute_whensucceed",
                  0.7259195678925846
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.7452472301728134
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_location_by_name",
                  0.44961440151294857
                ],
                [
                  "test_carroute_route_short",
                  "test_carroute_withdefaultmodes_whensucceed",
                  0.561446065624749
                ],
                [
                  "test_truckroute_whensucceed",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.5436650589700356
                ],
                [
                  "test_carroute_whensucceed",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.5374160353037133
                ],
                [
                  "test_initiation",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.22801256637216294
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.9170268376492491
                ],
                [
                  "test_carroute_route_short",
                  "test_pedastrianroute_route_short",
                  0.8833459073199038
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_carroute_when_error_invalid_credentials_occured",
                  0.41128466421288323
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  0.8080285581761122
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.6880076624913767
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.5437272478270367
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.9598080575808067
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_carroute_when_error_no_route_found_occured",
                  0.7736435537466929
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_matrix_whensucceed",
                  0.7222668079692304
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  0.700346561145849
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.7477804035376253
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.5383237458008355
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_truckroute_route_short",
                  0.46707012435418027
                ],
                [
                  "test_truckroute_when_error_invalid_credentials_occured",
                  "test_matrix_bad_request",
                  0.5687111245916714
                ],
                [
                  "test_matrix_multiple_destinations",
                  "test_matrix_bad_request",
                  0.7029106154649633
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_intermediateroute_whensucceed",
                  0.9030780529183643
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_pedastrianroute_whensucceed",
                  0.4564548942552216
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_intermediateroute_whensucceed",
                  0.7625769247713794
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.8923368845716962
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "test_truckroute_route_short",
                  0.8529697496905965
                ],
                [
                  "test_location_by_name",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.9543650623196076
                ],
                [
                  "test_matrix_multiple_starts",
                  "test_matrix_multiple_destinations",
                  0.9850746268656716
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_publictransport_when_error_no_route_found_occured",
                  0.7599316201894389
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.34124485995055814
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  0.7208488375810934
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_matrix_multiple_start_names",
                  0.5259702813297584
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_publictransporttimetable_route_short",
                  0.7615649052234371
                ],
                [
                  "test_publictransport_route_short",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.542358892721215
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_publictransporttimetable_route_short",
                  0.559019656988251
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.46785712755814507
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_matrix_whensucceed",
                  0.7293545114109652
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "test_publictransporttimetable_route_short",
                  0.7909422731191897
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_location_by_name",
                  0.45014617508912413
                ],
                [
                  "test_truckroute_whensucceed",
                  "test_matrix_multiple_start_names",
                  0.6371878657732426
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.47532707568263494
                ],
                [
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  "test_matrix_multiple_start_names",
                  0.5232236814530984
                ],
                [
                  "test_matrix_multiple_start_names",
                  "test_departure_as_datetime",
                  0.4505598607780434
                ],
                [
                  "test_truckroute_route_short",
                  "test_location_by_name",
                  0.7793343077204956
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_intermediateroute_whensucceed",
                  0.8472175547997026
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "test_location_by_name",
                  0.5230707433054205
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.47003829149198656
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_publictransport_when_error_no_route_found_occured",
                  0.7326732673267327
                ],
                [
                  "test_initiation",
                  "test_departure_as_string",
                  0.06562179588897106
                ],
                [
                  "test_carroute_whensucceed",
                  "test_carroute_when_error_no_route_found_occured",
                  0.7500406934158355
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.7286747741481668
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_whensucceed",
                  0.8962581595302718
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_publictransport_when_error_invalid_credentials_occured",
                  0.7290993384630885
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.7333716292361935
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "test_departure_as_string",
                  0.7670688262074433
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.3985758693420359
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "test_matrix_whensucceed",
                  0.7106478173780952
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_matrix_bad_request",
                  0.6198978738338596
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_pedastrianroute_route_short",
                  0.4860309515310994
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "test_publictransport_when_error_invalid_credentials_occured",
                  0.8379738725583052
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_carroute_withdefaultmodes_whensucceed",
                  0.9091076054353292
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  0.731603639129794
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.5471973799441511
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_departure_as_string",
                  0.7855342662529281
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_truckroute_whensucceed",
                  0.7353651222227283
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_publictransport_withdefaultmodes_whensucceed",
                  0.7471459080336568
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_publictransport_withdefaultmodes_whensucceed",
                  0.6988652069759149
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.7404360971988655
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.6988652069759149
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_matrix_bad_request",
                  0.6073381670229586
                ],
                [
                  "test_carroute_route_short",
                  "test_matrix_multiple_start_names",
                  0.31416560171929026
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.7387087617168449
                ],
                [
                  "test_carroute_whensucceed",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.8796896699020114
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.6876226741961575
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.5346670861496433
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_matrix_bad_request",
                  0.21092839784234002
                ],
                [
                  "test_truckroute_whensucceed",
                  "test_matrix_bad_request",
                  0.6217700042172588
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_carroute_when_error_no_route_found_occured",
                  0.7207408293252412
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_publictransport_whensucceed",
                  0.7446671606114303
                ],
                [
                  "test_initiation",
                  "test_matrix_multiple_starts",
                  0.17836650794011905
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_starts",
                  0.7396106520066956
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  0.9156626506024096
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.686534604734851
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.39436210821101725
                ],
                [
                  "test_initiation",
                  "test_carroute_when_error_invalid_input_data_occured",
                  0.15524919276570281
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.6992564897749243
                ],
                [
                  "test_truckroute_whensucceed",
                  "test_matrix_multiple_starts",
                  0.7104716494061815
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.9205136748895579
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_locationnearmotorway_whensucceed",
                  0.6834947577379978
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_matrix_multiple_destinations",
                  0.6183821860292439
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  0.48060929127169216
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_matrix_multiple_destinations",
                  0.5041183773141628
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "test_truckroute_whensucceed",
                  0.7375242525288822
                ],
                [
                  "test_matrix_multiple_destinations",
                  "test_matrix_multiple_destinations",
                  0.788120757471981
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_truckroute_whensucceed",
                  0.8581551474593145
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.6954309591313408
                ],
                [
                  "test_carroute_route_short",
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  0.5824955979718649
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_publictransport_when_error_invalid_input_data_occured",
                  0.47692614066812056
                ],
                [
                  "test_truckroute_when_error_no_route_found_occured",
                  "test_matrix_multiple_starts",
                  0.6115541095504887
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_starts",
                  0.7965037790841337
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.74217900648392
                ],
                [
                  "test_carroute_whensucceed",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.6836329072609323
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_pedastrianroute_route_short",
                  0.34787097373600584
                ],
                [
                  "test_truckroute_withdefaultmodes_whensucceed",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.5505238384248747
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.6442863213665525
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.6935461512341449
                ],
                [
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.7312000173321489
                ],
                [
                  "test_initiation",
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  0.2266348343246455
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_carroute_when_error_invalid_input_data_occured",
                  0.6579013150157976
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_publictransport_withdefaultmodes_whensucceed",
                  0.6883312315493176
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  0.7418460557755893
                ],
                [
                  "test_initiation",
                  "test_location_by_name",
                  0.07733602811121824
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_carroute_when_error_invalid_input_data_occured",
                  0.39958696638823965
                ],
                [
                  "test_publictransport_route_short",
                  "test_publictransport_when_error_invalid_input_data_occured",
                  0.6115472149821027
                ],
                [
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  "test_matrix_whensucceed",
                  0.584202135250686
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.7396899582804383
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.5266666286881839
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_matrix_multiple_starts",
                  0.24510592818887567
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  0.7264509368768758
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_matrix_multiple_destinations",
                  0.4896083251505611
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.7538065395480598
                ],
                [
                  "test_matrix_multiple_destinations",
                  "test_departure_as_datetime",
                  0.4559345223382342
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_matrix_multiple_start_names",
                  0.22911204963585732
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_publictransport_route_short",
                  0.5450372245295083
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  "test_location_by_name",
                  0.4739657094781655
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.5246561816844487
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "test_truckroute_whensucceed",
                  0.9538586964492807
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_publictransporttimetable_route_short",
                  0.67950213450642
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.6960116625691228
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_matrix_multiple_start_names",
                  0.6428571428571428
                ],
                [
                  "test_carroute_whensucceed",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.9027346356390192
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.47358451901505155
                ],
                [
                  "test_carroute_whensucceed",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.7361791401354402
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.5840122235368793
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.6801360408136048
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_truckroute_whensucceed",
                  0.9027346356390192
                ],
                [
                  "test_publictransport_route_short",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.6447780834930626
                ],
                [
                  "test_publictransport_route_short",
                  "test_publictransport_when_error_invalid_credentials_occured",
                  0.6284326027760527
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.7094792538670343
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_matrix_whensucceed",
                  0.5484634023180384
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_start_names",
                  0.6888335915643704
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_departure_as_string",
                  0.6360054824149334
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_publictransport_withdefaultmodes_whensucceed",
                  0.7503928257097259
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.80185183223353
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_starts",
                  0.703899676012231
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "test_matrix_multiple_destinations",
                  0.5444815671729856
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.7617627338190046
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.7676268006266969
                ],
                [
                  "test_carroute_whensucceed",
                  "test_matrix_whensucceed",
                  0.72109740428453
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "test_locationnearmotorway_whensucceed",
                  0.6727071131613558
                ],
                [
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.7400034730911172
                ],
                [
                  "test_truckroute_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.6447887850448297
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_publictransport_when_error_invalid_input_data_occured",
                  0.733521027200402
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  0.5057744473440517
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_locationnearmotorway_whensucceed",
                  0.9387755102040817
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_matrix_multiple_starts",
                  0.6086293868537087
                ],
                [
                  "test_publictransport_whensucceed",
                  "test_publictransport_withdefaultmodes_whensucceed",
                  0.9411795487375404
                ],
                [
                  "test_matrix_multiple_destinations",
                  "test_location_by_name",
                  0.27956158738237946
                ],
                [
                  "test_initiation",
                  "test_intermediateroute_whensucceed",
                  0.2335054629161002
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "test_matrix_whensucceed",
                  0.7446392504930477
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  0.7519445197271295
                ],
                [
                  "test_truckroute_when_error_invalid_input_data_occured",
                  "test_departure_as_string",
                  0.6452229531745701
                ],
                [
                  "test_initiation",
                  "test_matrix_multiple_destinations",
                  0.1846761033753277
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.9655289564756979
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_intermediateroute_when_error_no_route_found_occured",
                  0.7678979342337312
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_publictransport_when_error_no_route_found_occured",
                  0.7326732673267327
                ],
                [
                  "test_truckroute_route_short",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.7696396763782782
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_intermediateroute_when_error_no_route_found_occured",
                  0.8242967039136029
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.71073277736613
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_truckroute_route_short",
                  0.48353095521136313
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_intermediateroute_whensucceed",
                  0.9424802261349627
                ],
                [
                  "test_carroute_route_short",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.7698025724110937
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_pedastrianroute_route_short",
                  0.46714861530894614
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.8870291722358089
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.7564052363348777
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_publictransport_route_short",
                  0.5187557724858725
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_start_names",
                  0.6694298284217121
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_publictransport_when_error_invalid_credentials_occured",
                  0.8055900894786011
                ],
                [
                  "test_truckroute_route_short",
                  "test_matrix_multiple_starts",
                  0.266287921982976
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_intermediateroute_whensucceed",
                  0.4961697312125301
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.7207407391807085
                ],
                [
                  "test_initiation",
                  "test_truckroute_whensucceed",
                  0.27952366272814777
                ],
                [
                  "test_carroute_whensucceed",
                  "test_publictransporttimetable_route_short",
                  0.6761657843561341
                ],
                [
                  "test_truckroute_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.7104716494061815
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.5408841452909183
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.9801980198019802
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.7251222728993266
                ],
                [
                  "test_initiation",
                  "test_matrix_multiple_destinations",
                  0.17836650794011905
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.7581753965757456
                ],
                [
                  "test_truckroute_when_error_invalid_input_data_occured",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.7736435537466929
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  0.7579930958010531
                ],
                [
                  "test_truckroute_withdefaultmodes_whensucceed",
                  "test_matrix_whensucceed",
                  0.7491659745613082
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "test_location_by_name",
                  0.598030293637636
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.7400034730911172
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_matrix_multiple_start_names",
                  0.49817571333153465
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "test_matrix_multiple_destinations",
                  0.4796016045793052
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.7173825999525799
                ],
                [
                  "test_carroute_whensucceed",
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  0.7459948620039126
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_matrix_whensucceed",
                  0.7281164978816941
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.5329012663512288
                ],
                [
                  "test_carroute_route_short",
                  "test_publictransport_when_error_invalid_input_data_occured",
                  0.5205979039873839
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.7312000173321489
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "test_matrix_multiple_start_names",
                  0.5101082199294616
                ],
                [
                  "test_carroute_route_short",
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  0.4700728168280056
                ],
                [
                  "test_carroute_whensucceed",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.6971119647190804
                ],
                [
                  "test_publictransport_route_short",
                  "test_departure_as_string",
                  0.7231354653076909
                ],
                [
                  "test_matrix_multiple_start_names",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.478713553878169
                ],
                [
                  "test_carroute_whensucceed",
                  "test_publictransport_when_error_no_route_found_occured",
                  0.7375242525288822
                ],
                [
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.47111147590275565
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.9112113780030292
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  "test_departure_as_datetime",
                  0.6184695208424074
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.9151288217386119
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.6897352496133362
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_truckroute_whensucceed",
                  0.7652596697457331
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_publictransport_when_error_no_route_found_occured",
                  0.7595815764203788
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_publictransporttimetable_route_short",
                  0.7074864852840641
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  0.942468495500547
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.7094792538670343
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.7452472301728134
                ],
                [
                  "test_carroute_route_short",
                  "test_publictransport_route_short",
                  0.9262070674382566
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_location_by_name",
                  0.5583968976845061
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "test_truckroute_whensucceed",
                  0.8796896699020114
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_locationnearmotorway_whensucceed",
                  0.9510482281907351
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_pedastrianroute_whensucceed",
                  0.8648534429299137
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  0.7025301863521956
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "test_matrix_multiple_starts",
                  0.5444815671729856
                ],
                [
                  "test_matrix_multiple_destinations",
                  "test_location_by_name",
                  0.5125692857821982
                ],
                [
                  "test_publictransport_route_short",
                  "test_matrix_bad_request",
                  0.3931785497463924
                ],
                [
                  "test_truckroute_when_error_invalid_credentials_occured",
                  "test_location_by_name",
                  0.4830148344854776
                ],
                [
                  "test_initiation",
                  "test_publictransport_whensucceed",
                  0.26866419770378697
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  0.7338129526830751
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.7099268854965314
                ],
                [
                  "test_carroute_route_short",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.5515089671181163
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_truckroute_route_short",
                  0.406359626835498
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.7452472301728134
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_publictransport_whensucceed",
                  0.7515191815365208
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "test_matrix_whensucceed",
                  0.46347062812313
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_publictransport_when_error_invalid_input_data_occured",
                  0.7956444122010683
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_matrix_whensucceed",
                  0.7491659745613082
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_pedastrianroute_whensucceed",
                  0.6935461512341449
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_publictransport_when_error_invalid_credentials_occured",
                  0.7557920560986373
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.5823209687758504
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.71073277736613
                ],
                [
                  "test_matrix_multiple_start_names",
                  "test_matrix_multiple_destinations",
                  0.9644946863513556
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.7965037790841337
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_pedastrianroute_route_short",
                  0.41207165201895396
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  0.7736435537466929
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  0.4631389340062981
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_matrix_whensucceed",
                  0.5872688341970485
                ],
                [
                  "test_truckroute_withdefaultmodes_whensucceed",
                  "test_departure_as_string",
                  0.7791632330139233
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_publictransport_route_short",
                  0.8591290905768689
                ],
                [
                  "test_initiation",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.09883693657685835
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.7543771728921173
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_publictransporttimetable_route_short",
                  0.690843833667406
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.9444666890540256
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.7136314718927698
                ],
                [
                  "test_truckroute_route_short",
                  "test_matrix_multiple_destinations",
                  0.24124421859629083
                ],
                [
                  "test_carroute_whensucceed",
                  "test_pedastrianroute_route_short",
                  0.4721362229374969
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_departure_as_string",
                  0.6554154239796548
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_matrix_multiple_destinations",
                  0.4689557154862795
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_departure_as_string",
                  0.7686340001353569
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "test_departure_as_string",
                  0.7311599120218217
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  0.743263980241655
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_publictransporttimetable_route_short",
                  0.559019656988251
                ],
                [
                  "test_carroute_whensucceed",
                  "test_publictransport_route_short",
                  0.6295015684749214
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_locationnearmotorway_whensucceed",
                  0.7226479799975011
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  "test_truckroute_route_short",
                  0.40926359712085936
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.6970505850168186
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.9756097560975608
                ],
                [
                  "test_carroute_when_error_invalid_credentials_occured",
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  0.7452472301728134
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.7314263600143485
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.8080285581761122
                ],
                [
                  "test_truckroute_withdefaultmodes_whensucceed",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.7472076328295919
                ],
                [
                  "test_carroute_route_short",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.5986352814439757
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "test_matrix_multiple_start_names",
                  0.4910319595719823
                ],
                [
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.749911405114569
                ],
                [
                  "test_carroute_route_short",
                  "test_departure_as_datetime",
                  0.7009634840121446
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "test_matrix_multiple_destinations",
                  0.5161932250083823
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.7947042356429728
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_matrix_whensucceed",
                  0.71027198917145
                ],
                [
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  "test_location_by_name",
                  0.447266529582584
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_matrix_multiple_destinations",
                  0.23184509319643534
                ],
                [
                  "test_initiation",
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  0.15456232080158305
                ],
                [
                  "test_matrix_bad_request",
                  "test_departure_as_datetime",
                  0.49095119472445997
                ],
                [
                  "test_truckroute_route_short",
                  "test_matrix_multiple_destinations",
                  0.266287921982976
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  0.3486030056348009
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.518204368479442
                ],
                [
                  "test_publictransport_route_short",
                  "test_departure_as_datetime",
                  0.7519584470242343
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_truckroute_route_short",
                  0.5507972439937412
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "test_matrix_multiple_destinations",
                  0.5543820429462739
                ],
                [
                  "test_carroute_whensucceed",
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  0.7735777096342736
                ],
                [
                  "test_carroute_route_short",
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  0.461052628123493
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.7526173151936193
                ],
                [
                  "test_carroute_route_short",
                  "test_matrix_whensucceed",
                  0.3529175388759189
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.46714861530894614
                ],
                [
                  "test_matrix_bad_request",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.31407431726850377
                ],
                [
                  "test_carroute_whensucceed",
                  "test_truckroute_route_short",
                  0.4659149265049551
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_departure_as_datetime",
                  0.6537910028956941
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.9030780529183643
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "test_matrix_multiple_destinations",
                  0.49688940677861837
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.7046040262638418
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "test_departure_as_string",
                  0.6238794669049377
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  0.8234444065128927
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_matrix_multiple_destinations",
                  0.24510592818887567
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_matrix_multiple_destinations",
                  0.5595391962584325
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.7046040262638418
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.7538065395480598
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_publictransport_whensucceed",
                  0.8248159098493204
                ],
                [
                  "test_truckroute_when_error_invalid_credentials_occured",
                  "test_departure_as_datetime",
                  0.6358116112670054
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.7094792538670343
                ],
                [
                  "test_publictransport_route_short",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.7631514186810311
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "test_matrix_multiple_starts",
                  0.5543820429462739
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_departure_as_datetime",
                  0.7373525005606051
                ],
                [
                  "test_truckroute_route_short",
                  "test_matrix_multiple_start_names",
                  0.23840037597244612
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  0.9719626168224298
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.9655289564756979
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_departure_as_datetime",
                  0.5966537180402222
                ],
                [
                  "test_intermediateroute_when_error_invalid_credentials_occured",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.810361063877192
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_intermediateroute_when_error_no_route_found_occured",
                  0.7795881682254432
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_matrix_whensucceed",
                  0.5328640870348614
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  "test_matrix_whensucceed",
                  0.5457682341533662
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  0.7207408293252412
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_withdefaultmodes_whensucceed",
                  0.95759334439188
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.967452325122309
                ],
                [
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  "test_matrix_multiple_destinations",
                  0.4928649793305132
                ],
                [
                  "test_initiation",
                  "test_matrix_bad_request",
                  0.16390251702679645
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_locationnearmotorway_whensucceed",
                  0.7151123036798687
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_publictransport_when_error_invalid_credentials_occured",
                  0.7370988971488641
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "test_matrix_multiple_starts",
                  0.6017068476311226
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.6414906110627283
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "test_location_by_name",
                  0.7800473569355353
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  0.7538065395480598
                ],
                [
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.9459675396808043
                ],
                [
                  "test_departure_as_datetime",
                  "test_location_by_name_throws_WaypointNotFoundError",
                  0.6274592354557389
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_publictransport_whensucceed",
                  0.5230196152790982
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_matrix_multiple_starts",
                  0.6591806532772583
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_publictransport_when_error_no_route_found_occured",
                  0.9494245535078307
                ],
                [
                  "test_publictransporttimetable_route_short",
                  "test_departure_as_datetime",
                  0.7727214728477465
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_location_by_name",
                  0.5584566594152754
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_truckroute_when_error_no_route_found_occured",
                  0.6883312315493176
                ],
                [
                  "test_publictransport_withdefaultmodes_whensucceed",
                  "test_publictransport_when_error_no_route_found_occured",
                  0.7614501508842059
                ],
                [
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  "test_departure_as_string",
                  0.6422616289332566
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_departure_as_datetime",
                  0.7107423155935334
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.7944857602476021
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_publictransport_when_error_invalid_credentials_occured",
                  0.4764269180118027
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.7068374994900516
                ],
                [
                  "test_truckroute_withdefaultmodes_whensucceed",
                  "test_departure_as_datetime",
                  0.7452810220720094
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_start_names",
                  0.6001728746854499
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_intermediateroute_when_error_no_route_found_occured",
                  0.7614214730759838
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  0.8962581595302718
                ],
                [
                  "test_initiation",
                  "test_publictransport_when_error_invalid_credentials_occured",
                  0.17579233611561954
                ],
                [
                  "test_pedastrianroute_whensucceed",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.8856088769515026
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_matrix_whensucceed",
                  0.21906634738577993
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_locationnearmotorway_whensucceed",
                  0.9035767652126493
                ],
                [
                  "test_bicycleroute_withdefaultmodes_whensucceed",
                  "test_carroute_whensucceed",
                  0.8581551474593145
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_matrix_multiple_destinations",
                  0.6591806532772583
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_publictransport_whensucceed",
                  0.8890872794479687
                ],
                [
                  "test_carroute_when_error_no_route_found_occured",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.7251222728993266
                ],
                [
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_start_names",
                  0.6290427758346702
                ],
                [
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  "test_departure_as_datetime",
                  0.5862103817605492
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_publictransport_when_error_invalid_input_data_occured",
                  0.7580135751578013
                ],
                [
                  "test_truckroute_when_error_invalid_credentials_occured",
                  "test_departure_as_string",
                  0.6546242076835599
                ],
                [
                  "test_matrix_multiple_destinations",
                  "test_departure_as_string",
                  0.571377919833036
                ],
                [
                  "test_initiation",
                  "test_matrix_multiple_start_names",
                  0.18249909877210782
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_truckroute_whensucceed",
                  0.4552451190277424
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_truckroute_route_short",
                  0.3665722327293783
                ],
                [
                  "test_carroute_route_short",
                  "test_locationnearmotorway_whensucceed",
                  0.527207375037073
                ],
                [
                  "test_carroute_route_short",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.4700728168280056
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_truckroute_when_error_invalid_input_data_occured",
                  0.9813084112149532
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.7396106520066956
                ],
                [
                  "test_matrix_bad_request",
                  "test_location_by_name",
                  0.3096460589417889
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  0.8151662283235993
                ],
                [
                  "test_publictransport_when_error_no_route_found_occured",
                  "test_matrix_multiple_destinations",
                  0.6017068476311226
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_departure_as_string",
                  0.5295693004199673
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_locationnearmotorway_when_error_invalid_credentials_occured",
                  0.7054590351502164
                ],
                [
                  "test_truckroute_withdefaultmodes_whensucceed",
                  "test_location_by_name",
                  0.5658421896536328
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_publictransporttimetable_route_short",
                  0.8232538483796144
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_publictransport_route_short",
                  0.5411734957845016
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_truckroute_route_short",
                  0.4147701274689246
                ],
                [
                  "test_publictransport_route_short",
                  "test_location_by_name",
                  0.7791756056922784
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_pedastrianroute_when_error_invalid_input_data_occured",
                  0.7046040262638418
                ],
                [
                  "test_intermediateroute_withdefaultmodes_whensucceed",
                  "test_matrix_bad_request",
                  0.6190978144244548
                ],
                [
                  "test_pedastrianroute_when_error_no_route_found_occured",
                  "test_intermediateroute_when_error_invalid_input_data_occured",
                  0.76486793636861
                ],
                [
                  "test_publictransport_when_error_invalid_input_data_occured",
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  0.9504695315387446
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "test_matrix_whensucceed",
                  0.530391386513824
                ],
                [
                  "test_intermediateroute_whensucceed",
                  "test_publictransport_route_short",
                  0.6637146612032873
                ],
                [
                  "test_pedastrianroute_withdefaultmodes_whensucceed",
                  "test_matrix_multiple_destinations",
                  0.6774153572698659
                ],
                [
                  "test_intermediateroute_when_error_no_route_found_occured",
                  "test_truckroute_whensucceed",
                  0.7659626006057367
                ],
                [
                  "test_locationnearmotorway_when_error_invalid_input_data_occured",
                  "test_truckroute_withdefaultmodes_whensucceed",
                  0.6907081058186164
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_locationnearmotorway_whensucceed",
                  0.46645923536206185
                ],
                [
                  "test_publictransport_route_short",
                  "test_publictransporttimetable_withdefaultmodes_whensucceed",
                  0.7077606017434168
                ],
                [
                  "test_carroute_withdefaultmodes_whensucceed",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.7252309377463686
                ],
                [
                  "test_carroute_route_short",
                  "test_departure_as_string",
                  0.6477644805254461
                ],
                [
                  "test_pedastrianroute_route_short",
                  "test_truckroute_when_error_invalid_credentials_occured",
                  0.401642833745212
                ],
                [
                  "test_pedastrianroute_when_error_invalid_credentials_occured",
                  "test_pedastrianroute_route_short",
                  0.4080691190851353
                ],
                [
                  "test_locationnearmotorway_whensucceed",
                  "test_matrix_multiple_starts",
                  0.7068374994900516
                ],
                [
                  "test_truckroute_when_error_invalid_credentials_occured",
                  "test_matrix_whensucceed",
                  0.5484634023180384
                ],
                [
                  "test_carroute_route_short",
                  "test_publictransporttimetable_route_short",
                  0.892816904740642
                ],
                [
                  "test_matrix_multiple_destinations",
                  "test_matrix_bad_request",
                  0.8375979188320856
                ],
                [
                  "test_bicycleroute_route_short",
                  "test_locationnearmotorway_when_error_no_route_found_occured",
                  0.34320753348804106
                ],
                [
                  "test_carroute_when_error_invalid_input_data_occured",
                  "test_publictransport_when_error_invalid_input_data_occured",
                  0.9549006489468039
                ],
                [
                  "test_publictransport_when_error_invalid_credentials_occured",
                  "test_truckroute_whensucceed",
                  0.7002181768057028
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_truckroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_matrix_bad_request",
                "false"
              ],
              [
                "test_publictransport_route_short",
                "false"
              ],
              [
                "test_intermediateroute_whensucceed",
                "false"
              ],
              [
                "test_matrix_multiple_starts",
                "false"
              ],
              [
                "test_pedastrianroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_matrix_multiple_destinations",
                "false"
              ],
              [
                "test_publictransport_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_carroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_bicycleroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_publictransport_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_matrix_whensucceed",
                "false"
              ],
              [
                "test_truckroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_pedastrianroute_route_short",
                "false"
              ],
              [
                "test_publictransport_whensucceed",
                "false"
              ],
              [
                "test_carroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_carroute_route_short",
                "false"
              ],
              [
                "test_matrix_multiple_destinations",
                "false"
              ],
              [
                "test_pedastrianroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_truckroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_intermediateroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_matrix_multiple_start_names",
                "false"
              ],
              [
                "test_publictransporttimetable_route_short",
                "false"
              ],
              [
                "test_locationnearmotorway_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_publictransporttimetable_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_carroute_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_pedastrianroute_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_locationnearmotorway_when_error_no_route_found_occured",
                "false"
              ],
              [
                "test_intermediateroute_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_locationnearmotorway_whensucceed",
                "false"
              ],
              [
                "test_location_by_name",
                "false"
              ],
              [
                "test_pedastrianroute_whensucceed",
                "false"
              ],
              [
                "test_departure_as_string",
                "false"
              ],
              [
                "test_pedastrianroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_truckroute_route_short",
                "false"
              ],
              [
                "test_publictransport_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_intermediateroute_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_locationnearmotorway_when_error_invalid_input_data_occured",
                "false"
              ],
              [
                "test_carroute_whensucceed",
                "false"
              ],
              [
                "test_locationnearmotorway_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_bicycleroute_route_short",
                "false"
              ],
              [
                "test_departure_as_datetime",
                "false"
              ],
              [
                "test_location_by_name_throws_WaypointNotFoundError",
                "false"
              ],
              [
                "test_intermediateroute_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_truckroute_whensucceed",
                "false"
              ],
              [
                "test_carroute_when_error_invalid_credentials_occured",
                "false"
              ],
              [
                "test_publictransport_withdefaultmodes_whensucceed",
                "false"
              ],
              [
                "test_truckroute_when_error_invalid_credentials_occured",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 49
      }
    ]
  },
  {
    "name": "tests_\u0026_test_geocoder_api.py",
    "testCases": [
      {
        "name": "GeocoderApiTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_address_withboundingbox_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_freeform_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_streetintersection_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_streetintersection_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_addresswithdetails_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_initiation",
                  "[PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_addresswithdetails_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_freeform_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_address_withboundingbox_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_address_withboundingbox_whensucceed",
                  "[]"
                ],
                [
                  "test_freeform_whenerroroccured",
                  "[]"
                ],
                [
                  "test_streetintersection_whensucceed",
                  "[]"
                ],
                [
                  "test_streetintersection_whenerroroccured",
                  "[]"
                ],
                [
                  "test_addresswithdetails_whenerroroccured",
                  "[]"
                ],
                [
                  "test_initiation",
                  "[]"
                ],
                [
                  "test_addresswithdetails_whensucceed",
                  "[]"
                ],
                [
                  "test_freeform_whensucceed",
                  "[]"
                ],
                [
                  "test_address_withboundingbox_whenerroroccured",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_address_withboundingbox_whensucceed",
                  "false"
                ],
                [
                  "test_freeform_whenerroroccured",
                  "false"
                ],
                [
                  "test_streetintersection_whensucceed",
                  "false"
                ],
                [
                  "test_streetintersection_whenerroroccured",
                  "false"
                ],
                [
                  "test_addresswithdetails_whenerroroccured",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_addresswithdetails_whensucceed",
                  "false"
                ],
                [
                  "test_freeform_whensucceed",
                  "false"
                ],
                [
                  "test_address_withboundingbox_whenerroroccured",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_address_withboundingbox_whensucceed",
                  "false"
                ],
                [
                  "test_freeform_whenerroroccured",
                  "false"
                ],
                [
                  "test_streetintersection_whensucceed",
                  "false"
                ],
                [
                  "test_streetintersection_whenerroroccured",
                  "false"
                ],
                [
                  "test_addresswithdetails_whenerroroccured",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_addresswithdetails_whensucceed",
                  "false"
                ],
                [
                  "test_freeform_whensucceed",
                  "false"
                ],
                [
                  "test_address_withboundingbox_whenerroroccured",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_address_withboundingbox_whensucceed",
                  "false"
                ],
                [
                  "test_freeform_whenerroroccured",
                  "false"
                ],
                [
                  "test_streetintersection_whensucceed",
                  "false"
                ],
                [
                  "test_streetintersection_whenerroroccured",
                  "false"
                ],
                [
                  "test_addresswithdetails_whenerroroccured",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_addresswithdetails_whensucceed",
                  "false"
                ],
                [
                  "test_freeform_whensucceed",
                  "false"
                ],
                [
                  "test_address_withboundingbox_whenerroroccured",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_address_withboundingbox_whensucceed",
                  "false"
                ],
                [
                  "test_freeform_whenerroroccured",
                  "false"
                ],
                [
                  "test_streetintersection_whensucceed",
                  "false"
                ],
                [
                  "test_streetintersection_whenerroroccured",
                  "false"
                ],
                [
                  "test_addresswithdetails_whenerroroccured",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_addresswithdetails_whensucceed",
                  "false"
                ],
                [
                  "test_freeform_whensucceed",
                  "false"
                ],
                [
                  "test_address_withboundingbox_whenerroroccured",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_address_withboundingbox_whensucceed",
                "false"
              ],
              [
                "test_freeform_whenerroroccured",
                "false"
              ],
              [
                "test_streetintersection_whensucceed",
                "false"
              ],
              [
                "test_streetintersection_whenerroroccured",
                "false"
              ],
              [
                "test_addresswithdetails_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_addresswithdetails_whensucceed",
                "false"
              ],
              [
                "test_freeform_whensucceed",
                "false"
              ],
              [
                "test_address_withboundingbox_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_address_withboundingbox_whensucceed",
                "false"
              ],
              [
                "test_freeform_whenerroroccured",
                "false"
              ],
              [
                "test_streetintersection_whensucceed",
                "false"
              ],
              [
                "test_streetintersection_whenerroroccured",
                "false"
              ],
              [
                "test_addresswithdetails_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_addresswithdetails_whensucceed",
                "false"
              ],
              [
                "test_freeform_whensucceed",
                "false"
              ],
              [
                "test_address_withboundingbox_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_address_withboundingbox_whensucceed",
                []
              ],
              [
                "test_freeform_whenerroroccured",
                []
              ],
              [
                "test_streetintersection_whensucceed",
                []
              ],
              [
                "test_streetintersection_whenerroroccured",
                []
              ],
              [
                "test_addresswithdetails_whenerroroccured",
                []
              ],
              [
                "test_initiation",
                []
              ],
              [
                "test_addresswithdetails_whensucceed",
                []
              ],
              [
                "test_freeform_whensucceed",
                []
              ],
              [
                "test_address_withboundingbox_whenerroroccured",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_address_withboundingbox_whensucceed",
                "false"
              ],
              [
                "test_freeform_whenerroroccured",
                "false"
              ],
              [
                "test_streetintersection_whensucceed",
                "false"
              ],
              [
                "test_streetintersection_whenerroroccured",
                "false"
              ],
              [
                "test_addresswithdetails_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_addresswithdetails_whensucceed",
                "false"
              ],
              [
                "test_freeform_whensucceed",
                "false"
              ],
              [
                "test_address_withboundingbox_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_address_withboundingbox_whensucceed",
                "false"
              ],
              [
                "test_freeform_whenerroroccured",
                "false"
              ],
              [
                "test_streetintersection_whensucceed",
                "false"
              ],
              [
                "test_streetintersection_whenerroroccured",
                "false"
              ],
              [
                "test_addresswithdetails_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_addresswithdetails_whensucceed",
                "false"
              ],
              [
                "test_freeform_whensucceed",
                "false"
              ],
              [
                "test_address_withboundingbox_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_address_withboundingbox_whensucceed",
                  "0"
                ],
                [
                  "test_freeform_whenerroroccured",
                  "0"
                ],
                [
                  "test_streetintersection_whensucceed",
                  "0"
                ],
                [
                  "test_streetintersection_whenerroroccured",
                  "0"
                ],
                [
                  "test_addresswithdetails_whenerroroccured",
                  "0"
                ],
                [
                  "test_initiation",
                  "0"
                ],
                [
                  "test_addresswithdetails_whensucceed",
                  "0"
                ],
                [
                  "test_freeform_whensucceed",
                  "0"
                ],
                [
                  "test_address_withboundingbox_whenerroroccured",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_address_withboundingbox_whensucceed",
                  "0"
                ],
                [
                  "test_freeform_whenerroroccured",
                  "0"
                ],
                [
                  "test_streetintersection_whensucceed",
                  "0"
                ],
                [
                  "test_streetintersection_whenerroroccured",
                  "0"
                ],
                [
                  "test_addresswithdetails_whenerroroccured",
                  "0"
                ],
                [
                  "test_initiation",
                  "0"
                ],
                [
                  "test_addresswithdetails_whensucceed",
                  "0"
                ],
                [
                  "test_freeform_whensucceed",
                  "0"
                ],
                [
                  "test_address_withboundingbox_whenerroroccured",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_address_withboundingbox_whensucceed",
                "false"
              ],
              [
                "test_freeform_whenerroroccured",
                "false"
              ],
              [
                "test_streetintersection_whensucceed",
                "false"
              ],
              [
                "test_streetintersection_whenerroroccured",
                "false"
              ],
              [
                "test_addresswithdetails_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_addresswithdetails_whensucceed",
                "false"
              ],
              [
                "test_freeform_whensucceed",
                "false"
              ],
              [
                "test_address_withboundingbox_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_address_withboundingbox_whensucceed",
                "false"
              ],
              [
                "test_freeform_whenerroroccured",
                "false"
              ],
              [
                "test_streetintersection_whensucceed",
                "false"
              ],
              [
                "test_streetintersection_whenerroroccured",
                "false"
              ],
              [
                "test_addresswithdetails_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_addresswithdetails_whensucceed",
                "false"
              ],
              [
                "test_freeform_whensucceed",
                "false"
              ],
              [
                "test_address_withboundingbox_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_address_withboundingbox_whensucceed",
                "2"
              ],
              [
                "test_freeform_whenerroroccured",
                "1"
              ],
              [
                "test_streetintersection_whensucceed",
                "2"
              ],
              [
                "test_streetintersection_whenerroroccured",
                "1"
              ],
              [
                "test_addresswithdetails_whenerroroccured",
                "1"
              ],
              [
                "test_initiation",
                "3"
              ],
              [
                "test_addresswithdetails_whensucceed",
                "2"
              ],
              [
                "test_freeform_whensucceed",
                "2"
              ],
              [
                "test_address_withboundingbox_whenerroroccured",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_address_withboundingbox_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_freeform_whenerroroccured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_streetintersection_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_streetintersection_whenerroroccured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_addresswithdetails_whenerroroccured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_initiation",
                []
              ],
              [
                "test_addresswithdetails_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_freeform_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_address_withboundingbox_whenerroroccured",
                [
                  "expectedResponse"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_address_withboundingbox_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_freeform_whenerroroccured",
                [
                  "self._api"
                ]
              ],
              [
                "test_streetintersection_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_streetintersection_whenerroroccured",
                [
                  "self._api"
                ]
              ],
              [
                "test_addresswithdetails_whenerroroccured",
                [
                  "self._api"
                ]
              ],
              [
                "test_initiation",
                [
                  "self._api"
                ]
              ],
              [
                "test_addresswithdetails_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_freeform_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_address_withboundingbox_whenerroroccured",
                [
                  "self._api"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.541190187329368,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_addresswithdetails_whenerroroccured",
                  "test_streetintersection_whenerroroccured",
                  0.8600780775702334
                ],
                [
                  "test_address_withboundingbox_whenerroroccured",
                  "test_streetintersection_whensucceed",
                  0.4899479457959919
                ],
                [
                  "test_initiation",
                  "test_addresswithdetails_whensucceed",
                  0.2679265684134639
                ],
                [
                  "test_freeform_whenerroroccured",
                  "test_addresswithdetails_whensucceed",
                  0.6381723297967092
                ],
                [
                  "test_address_withboundingbox_whensucceed",
                  "test_addresswithdetails_whensucceed",
                  0.5816729838882679
                ],
                [
                  "test_freeform_whenerroroccured",
                  "test_streetintersection_whensucceed",
                  0.6729004614769563
                ],
                [
                  "test_freeform_whensucceed",
                  "test_address_withboundingbox_whenerroroccured",
                  0.39161796720512154
                ],
                [
                  "test_freeform_whenerroroccured",
                  "test_address_withboundingbox_whensucceed",
                  0.4761140998947609
                ],
                [
                  "test_freeform_whenerroroccured",
                  "test_addresswithdetails_whenerroroccured",
                  0.8473561366746857
                ],
                [
                  "test_address_withboundingbox_whensucceed",
                  "test_streetintersection_whenerroroccured",
                  0.4694548334726777
                ],
                [
                  "test_freeform_whensucceed",
                  "test_addresswithdetails_whenerroroccured",
                  0.48653363279984113
                ],
                [
                  "test_initiation",
                  "test_streetintersection_whenerroroccured",
                  0.17149858514250882
                ],
                [
                  "test_initiation",
                  "test_freeform_whensucceed",
                  0.242535625036333
                ],
                [
                  "test_initiation",
                  "test_address_withboundingbox_whensucceed",
                  0.19988898139583083
                ],
                [
                  "test_freeform_whensucceed",
                  "test_freeform_whenerroroccured",
                  0.5776938278449569
                ],
                [
                  "test_address_withboundingbox_whenerroroccured",
                  "test_addresswithdetails_whensucceed",
                  0.5253197596177319
                ],
                [
                  "test_address_withboundingbox_whensucceed",
                  "test_address_withboundingbox_whenerroroccured",
                  0.6916225477851604
                ],
                [
                  "test_addresswithdetails_whenerroroccured",
                  "test_streetintersection_whensucceed",
                  0.6086956521739131
                ],
                [
                  "test_initiation",
                  "test_addresswithdetails_whenerroroccured",
                  0.15171652122725207
                ],
                [
                  "test_address_withboundingbox_whensucceed",
                  "test_addresswithdetails_whenerroroccured",
                  0.48690817760727406
                ],
                [
                  "test_address_withboundingbox_whenerroroccured",
                  "test_streetintersection_whenerroroccured",
                  0.6725096063098502
                ],
                [
                  "test_initiation",
                  "test_address_withboundingbox_whenerroroccured",
                  0.1221188251519958
                ],
                [
                  "test_freeform_whensucceed",
                  "test_address_withboundingbox_whensucceed",
                  0.7898232427049618
                ],
                [
                  "test_freeform_whenerroroccured",
                  "test_streetintersection_whenerroroccured",
                  0.9014978717104176
                ],
                [
                  "test_address_withboundingbox_whensucceed",
                  "test_streetintersection_whensucceed",
                  0.5871539788793599
                ],
                [
                  "test_freeform_whensucceed",
                  "test_addresswithdetails_whensucceed",
                  0.6290593222305211
                ],
                [
                  "test_initiation",
                  "test_freeform_whenerroroccured",
                  0.1739313106957345
                ],
                [
                  "test_initiation",
                  "test_streetintersection_whensucceed",
                  0.30343304245450414
                ],
                [
                  "test_freeform_whensucceed",
                  "test_streetintersection_whensucceed",
                  0.6950480468569159
                ],
                [
                  "test_freeform_whensucceed",
                  "test_streetintersection_whenerroroccured",
                  0.5303300858899107
                ],
                [
                  "test_freeform_whenerroroccured",
                  "test_address_withboundingbox_whenerroroccured",
                  0.6820492261422834
                ],
                [
                  "test_addresswithdetails_whensucceed",
                  "test_streetintersection_whensucceed",
                  0.8637888467109798
                ],
                [
                  "test_addresswithdetails_whensucceed",
                  "test_streetintersection_whenerroroccured",
                  0.629246403073982
                ],
                [
                  "test_addresswithdetails_whensucceed",
                  "test_addresswithdetails_whenerroroccured",
                  0.652640461959407
                ],
                [
                  "test_address_withboundingbox_whenerroroccured",
                  "test_addresswithdetails_whenerroroccured",
                  0.699925636851417
                ],
                [
                  "test_streetintersection_whensucceed",
                  "test_streetintersection_whenerroroccured",
                  0.7126361214153362
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_address_withboundingbox_whensucceed",
                "false"
              ],
              [
                "test_freeform_whenerroroccured",
                "false"
              ],
              [
                "test_streetintersection_whensucceed",
                "false"
              ],
              [
                "test_streetintersection_whenerroroccured",
                "false"
              ],
              [
                "test_addresswithdetails_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_addresswithdetails_whensucceed",
                "false"
              ],
              [
                "test_freeform_whensucceed",
                "false"
              ],
              [
                "test_address_withboundingbox_whenerroroccured",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 9
      }
    ]
  },
  {
    "name": "tests_\u0026_test_publictransit_api.py",
    "testCases": [
      {
        "name": "PublicTransitApiTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_coverage_witin_a_city_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_initiation",
                  "[PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_next_departures_from_location_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_find_transit_coverage_in_cities_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_calculate_route_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_calculate_route_short_route",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_next_departures_for_stations_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_coverage_witin_a_city_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_calculate_route_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_calculate_route_exclude_modes",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_find_stations_by_id_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_coverage_nearby_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_next_departures_for_stations_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_coverage_nearby_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_next_nearby_departures_of_station_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_next_departures_from_location_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_calculate_route_include_modes",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_coverage_witin_a_city_whensucceed",
                  "[]"
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "[]"
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "[]"
                ],
                [
                  "test_initiation",
                  "[]"
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "[]"
                ],
                [
                  "test_next_departures_from_location_whensucceed",
                  "[]"
                ],
                [
                  "test_find_transit_coverage_in_cities_whensucceed",
                  "[]"
                ],
                [
                  "test_calculate_route_whenerroroccured",
                  "[]"
                ],
                [
                  "test_calculate_route_short_route",
                  "[]"
                ],
                [
                  "test_next_departures_for_stations_whensucceed",
                  "[]"
                ],
                [
                  "test_coverage_witin_a_city_whenerroroccured",
                  "[]"
                ],
                [
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  "[]"
                ],
                [
                  "test_calculate_route_whensucceed",
                  "[]"
                ],
                [
                  "test_calculate_route_exclude_modes",
                  "[]"
                ],
                [
                  "test_find_stations_by_id_whenerroroccured",
                  "[]"
                ],
                [
                  "test_coverage_nearby_whenerroroccured",
                  "[]"
                ],
                [
                  "test_next_departures_for_stations_whenerroroccured",
                  "[]"
                ],
                [
                  "test_coverage_nearby_whensucceed",
                  "[]"
                ],
                [
                  "test_next_nearby_departures_of_station_whensucceed",
                  "[]"
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "[]"
                ],
                [
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  "[]"
                ],
                [
                  "test_next_departures_from_location_whenerroroccured",
                  "[]"
                ],
                [
                  "test_calculate_route_include_modes",
                  "[]"
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_coverage_witin_a_city_whensucceed",
                  "false"
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "false"
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "false"
                ],
                [
                  "test_next_departures_from_location_whensucceed",
                  "false"
                ],
                [
                  "test_find_transit_coverage_in_cities_whensucceed",
                  "false"
                ],
                [
                  "test_calculate_route_whenerroroccured",
                  "false"
                ],
                [
                  "test_calculate_route_short_route",
                  "false"
                ],
                [
                  "test_next_departures_for_stations_whensucceed",
                  "false"
                ],
                [
                  "test_coverage_witin_a_city_whenerroroccured",
                  "false"
                ],
                [
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  "false"
                ],
                [
                  "test_calculate_route_whensucceed",
                  "false"
                ],
                [
                  "test_calculate_route_exclude_modes",
                  "false"
                ],
                [
                  "test_find_stations_by_id_whenerroroccured",
                  "false"
                ],
                [
                  "test_coverage_nearby_whenerroroccured",
                  "false"
                ],
                [
                  "test_next_departures_for_stations_whenerroroccured",
                  "false"
                ],
                [
                  "test_coverage_nearby_whensucceed",
                  "false"
                ],
                [
                  "test_next_nearby_departures_of_station_whensucceed",
                  "false"
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "false"
                ],
                [
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  "false"
                ],
                [
                  "test_next_departures_from_location_whenerroroccured",
                  "false"
                ],
                [
                  "test_calculate_route_include_modes",
                  "false"
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_coverage_witin_a_city_whensucceed",
                  "false"
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "false"
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "false"
                ],
                [
                  "test_next_departures_from_location_whensucceed",
                  "false"
                ],
                [
                  "test_find_transit_coverage_in_cities_whensucceed",
                  "false"
                ],
                [
                  "test_calculate_route_whenerroroccured",
                  "false"
                ],
                [
                  "test_calculate_route_short_route",
                  "false"
                ],
                [
                  "test_next_departures_for_stations_whensucceed",
                  "false"
                ],
                [
                  "test_coverage_witin_a_city_whenerroroccured",
                  "false"
                ],
                [
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  "false"
                ],
                [
                  "test_calculate_route_whensucceed",
                  "false"
                ],
                [
                  "test_calculate_route_exclude_modes",
                  "false"
                ],
                [
                  "test_find_stations_by_id_whenerroroccured",
                  "false"
                ],
                [
                  "test_coverage_nearby_whenerroroccured",
                  "false"
                ],
                [
                  "test_next_departures_for_stations_whenerroroccured",
                  "false"
                ],
                [
                  "test_coverage_nearby_whensucceed",
                  "false"
                ],
                [
                  "test_next_nearby_departures_of_station_whensucceed",
                  "false"
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "false"
                ],
                [
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  "false"
                ],
                [
                  "test_next_departures_from_location_whenerroroccured",
                  "false"
                ],
                [
                  "test_calculate_route_include_modes",
                  "false"
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_coverage_witin_a_city_whensucceed",
                  "false"
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "false"
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "false"
                ],
                [
                  "test_next_departures_from_location_whensucceed",
                  "false"
                ],
                [
                  "test_find_transit_coverage_in_cities_whensucceed",
                  "false"
                ],
                [
                  "test_calculate_route_whenerroroccured",
                  "false"
                ],
                [
                  "test_calculate_route_short_route",
                  "false"
                ],
                [
                  "test_next_departures_for_stations_whensucceed",
                  "false"
                ],
                [
                  "test_coverage_witin_a_city_whenerroroccured",
                  "false"
                ],
                [
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  "false"
                ],
                [
                  "test_calculate_route_whensucceed",
                  "false"
                ],
                [
                  "test_calculate_route_exclude_modes",
                  "false"
                ],
                [
                  "test_find_stations_by_id_whenerroroccured",
                  "false"
                ],
                [
                  "test_coverage_nearby_whenerroroccured",
                  "false"
                ],
                [
                  "test_next_departures_for_stations_whenerroroccured",
                  "false"
                ],
                [
                  "test_coverage_nearby_whensucceed",
                  "false"
                ],
                [
                  "test_next_nearby_departures_of_station_whensucceed",
                  "false"
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "false"
                ],
                [
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  "false"
                ],
                [
                  "test_next_departures_from_location_whenerroroccured",
                  "false"
                ],
                [
                  "test_calculate_route_include_modes",
                  "false"
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_coverage_witin_a_city_whensucceed",
                  "false"
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "false"
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "false"
                ],
                [
                  "test_next_departures_from_location_whensucceed",
                  "false"
                ],
                [
                  "test_find_transit_coverage_in_cities_whensucceed",
                  "false"
                ],
                [
                  "test_calculate_route_whenerroroccured",
                  "false"
                ],
                [
                  "test_calculate_route_short_route",
                  "false"
                ],
                [
                  "test_next_departures_for_stations_whensucceed",
                  "false"
                ],
                [
                  "test_coverage_witin_a_city_whenerroroccured",
                  "false"
                ],
                [
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  "false"
                ],
                [
                  "test_calculate_route_whensucceed",
                  "false"
                ],
                [
                  "test_calculate_route_exclude_modes",
                  "false"
                ],
                [
                  "test_find_stations_by_id_whenerroroccured",
                  "false"
                ],
                [
                  "test_coverage_nearby_whenerroroccured",
                  "false"
                ],
                [
                  "test_next_departures_for_stations_whenerroroccured",
                  "false"
                ],
                [
                  "test_coverage_nearby_whensucceed",
                  "false"
                ],
                [
                  "test_next_nearby_departures_of_station_whensucceed",
                  "false"
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "false"
                ],
                [
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  "false"
                ],
                [
                  "test_next_departures_from_location_whenerroroccured",
                  "false"
                ],
                [
                  "test_calculate_route_include_modes",
                  "false"
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_coverage_witin_a_city_whensucceed",
                "false"
              ],
              [
                "test_find_stations_by_id_whensucceed",
                "false"
              ],
              [
                "test_find_stations_nearby_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_find_stations_by_name_whenerroroccured",
                "false"
              ],
              [
                "test_next_departures_from_location_whensucceed",
                "false"
              ],
              [
                "test_find_transit_coverage_in_cities_whensucceed",
                "false"
              ],
              [
                "test_calculate_route_whenerroroccured",
                "false"
              ],
              [
                "test_calculate_route_short_route",
                "false"
              ],
              [
                "test_next_departures_for_stations_whensucceed",
                "false"
              ],
              [
                "test_coverage_witin_a_city_whenerroroccured",
                "false"
              ],
              [
                "test_find_transit_coverage_in_cities_whenerroroccured",
                "false"
              ],
              [
                "test_calculate_route_whensucceed",
                "false"
              ],
              [
                "test_calculate_route_exclude_modes",
                "false"
              ],
              [
                "test_find_stations_by_id_whenerroroccured",
                "false"
              ],
              [
                "test_coverage_nearby_whenerroroccured",
                "false"
              ],
              [
                "test_next_departures_for_stations_whenerroroccured",
                "false"
              ],
              [
                "test_coverage_nearby_whensucceed",
                "false"
              ],
              [
                "test_next_nearby_departures_of_station_whensucceed",
                "false"
              ],
              [
                "test_find_stations_by_name_whensucceed",
                "false"
              ],
              [
                "test_next_nearby_departures_of_station_whenerroroccured",
                "false"
              ],
              [
                "test_next_departures_from_location_whenerroroccured",
                "false"
              ],
              [
                "test_calculate_route_include_modes",
                "false"
              ],
              [
                "test_find_stations_nearby_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_coverage_witin_a_city_whensucceed",
                "false"
              ],
              [
                "test_find_stations_by_id_whensucceed",
                "false"
              ],
              [
                "test_find_stations_nearby_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_find_stations_by_name_whenerroroccured",
                "false"
              ],
              [
                "test_next_departures_from_location_whensucceed",
                "false"
              ],
              [
                "test_find_transit_coverage_in_cities_whensucceed",
                "false"
              ],
              [
                "test_calculate_route_whenerroroccured",
                "false"
              ],
              [
                "test_calculate_route_short_route",
                "false"
              ],
              [
                "test_next_departures_for_stations_whensucceed",
                "false"
              ],
              [
                "test_coverage_witin_a_city_whenerroroccured",
                "false"
              ],
              [
                "test_find_transit_coverage_in_cities_whenerroroccured",
                "false"
              ],
              [
                "test_calculate_route_whensucceed",
                "false"
              ],
              [
                "test_calculate_route_exclude_modes",
                "false"
              ],
              [
                "test_find_stations_by_id_whenerroroccured",
                "false"
              ],
              [
                "test_coverage_nearby_whenerroroccured",
                "false"
              ],
              [
                "test_next_departures_for_stations_whenerroroccured",
                "false"
              ],
              [
                "test_coverage_nearby_whensucceed",
                "false"
              ],
              [
                "test_next_nearby_departures_of_station_whensucceed",
                "false"
              ],
              [
                "test_find_stations_by_name_whensucceed",
                "false"
              ],
              [
                "test_next_nearby_departures_of_station_whenerroroccured",
                "false"
              ],
              [
                "test_next_departures_from_location_whenerroroccured",
                "false"
              ],
              [
                "test_calculate_route_include_modes",
                "false"
              ],
              [
                "test_find_stations_nearby_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_coverage_witin_a_city_whensucceed",
                []
              ],
              [
                "test_find_stations_by_id_whensucceed",
                []
              ],
              [
                "test_find_stations_nearby_whensucceed",
                []
              ],
              [
                "test_initiation",
                []
              ],
              [
                "test_find_stations_by_name_whenerroroccured",
                []
              ],
              [
                "test_next_departures_from_location_whensucceed",
                []
              ],
              [
                "test_find_transit_coverage_in_cities_whensucceed",
                []
              ],
              [
                "test_calculate_route_whenerroroccured",
                []
              ],
              [
                "test_calculate_route_short_route",
                []
              ],
              [
                "test_next_departures_for_stations_whensucceed",
                []
              ],
              [
                "test_coverage_witin_a_city_whenerroroccured",
                []
              ],
              [
                "test_find_transit_coverage_in_cities_whenerroroccured",
                []
              ],
              [
                "test_calculate_route_whensucceed",
                []
              ],
              [
                "test_calculate_route_exclude_modes",
                []
              ],
              [
                "test_find_stations_by_id_whenerroroccured",
                []
              ],
              [
                "test_coverage_nearby_whenerroroccured",
                []
              ],
              [
                "test_next_departures_for_stations_whenerroroccured",
                []
              ],
              [
                "test_coverage_nearby_whensucceed",
                []
              ],
              [
                "test_next_nearby_departures_of_station_whensucceed",
                []
              ],
              [
                "test_find_stations_by_name_whensucceed",
                []
              ],
              [
                "test_next_nearby_departures_of_station_whenerroroccured",
                []
              ],
              [
                "test_next_departures_from_location_whenerroroccured",
                []
              ],
              [
                "test_calculate_route_include_modes",
                []
              ],
              [
                "test_find_stations_nearby_whenerroroccured",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_coverage_witin_a_city_whensucceed",
                "false"
              ],
              [
                "test_find_stations_by_id_whensucceed",
                "false"
              ],
              [
                "test_find_stations_nearby_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_find_stations_by_name_whenerroroccured",
                "false"
              ],
              [
                "test_next_departures_from_location_whensucceed",
                "false"
              ],
              [
                "test_find_transit_coverage_in_cities_whensucceed",
                "false"
              ],
              [
                "test_calculate_route_whenerroroccured",
                "false"
              ],
              [
                "test_calculate_route_short_route",
                "false"
              ],
              [
                "test_next_departures_for_stations_whensucceed",
                "false"
              ],
              [
                "test_coverage_witin_a_city_whenerroroccured",
                "false"
              ],
              [
                "test_find_transit_coverage_in_cities_whenerroroccured",
                "false"
              ],
              [
                "test_calculate_route_whensucceed",
                "false"
              ],
              [
                "test_calculate_route_exclude_modes",
                "false"
              ],
              [
                "test_find_stations_by_id_whenerroroccured",
                "false"
              ],
              [
                "test_coverage_nearby_whenerroroccured",
                "false"
              ],
              [
                "test_next_departures_for_stations_whenerroroccured",
                "false"
              ],
              [
                "test_coverage_nearby_whensucceed",
                "false"
              ],
              [
                "test_next_nearby_departures_of_station_whensucceed",
                "false"
              ],
              [
                "test_find_stations_by_name_whensucceed",
                "false"
              ],
              [
                "test_next_nearby_departures_of_station_whenerroroccured",
                "false"
              ],
              [
                "test_next_departures_from_location_whenerroroccured",
                "false"
              ],
              [
                "test_calculate_route_include_modes",
                "false"
              ],
              [
                "test_find_stations_nearby_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_coverage_witin_a_city_whensucceed",
                "false"
              ],
              [
                "test_find_stations_by_id_whensucceed",
                "false"
              ],
              [
                "test_find_stations_nearby_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_find_stations_by_name_whenerroroccured",
                "false"
              ],
              [
                "test_next_departures_from_location_whensucceed",
                "false"
              ],
              [
                "test_find_transit_coverage_in_cities_whensucceed",
                "false"
              ],
              [
                "test_calculate_route_whenerroroccured",
                "false"
              ],
              [
                "test_calculate_route_short_route",
                "false"
              ],
              [
                "test_next_departures_for_stations_whensucceed",
                "false"
              ],
              [
                "test_coverage_witin_a_city_whenerroroccured",
                "false"
              ],
              [
                "test_find_transit_coverage_in_cities_whenerroroccured",
                "false"
              ],
              [
                "test_calculate_route_whensucceed",
                "false"
              ],
              [
                "test_calculate_route_exclude_modes",
                "false"
              ],
              [
                "test_find_stations_by_id_whenerroroccured",
                "false"
              ],
              [
                "test_coverage_nearby_whenerroroccured",
                "false"
              ],
              [
                "test_next_departures_for_stations_whenerroroccured",
                "false"
              ],
              [
                "test_coverage_nearby_whensucceed",
                "false"
              ],
              [
                "test_next_nearby_departures_of_station_whensucceed",
                "false"
              ],
              [
                "test_find_stations_by_name_whensucceed",
                "false"
              ],
              [
                "test_next_nearby_departures_of_station_whenerroroccured",
                "false"
              ],
              [
                "test_next_departures_from_location_whenerroroccured",
                "false"
              ],
              [
                "test_calculate_route_include_modes",
                "false"
              ],
              [
                "test_find_stations_nearby_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_coverage_witin_a_city_whensucceed",
                  "0"
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "0"
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "0"
                ],
                [
                  "test_initiation",
                  "0"
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "0"
                ],
                [
                  "test_next_departures_from_location_whensucceed",
                  "0"
                ],
                [
                  "test_find_transit_coverage_in_cities_whensucceed",
                  "0"
                ],
                [
                  "test_calculate_route_whenerroroccured",
                  "0"
                ],
                [
                  "test_calculate_route_short_route",
                  "0"
                ],
                [
                  "test_next_departures_for_stations_whensucceed",
                  "0"
                ],
                [
                  "test_coverage_witin_a_city_whenerroroccured",
                  "0"
                ],
                [
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  "0"
                ],
                [
                  "test_calculate_route_whensucceed",
                  "0"
                ],
                [
                  "test_calculate_route_exclude_modes",
                  "0"
                ],
                [
                  "test_find_stations_by_id_whenerroroccured",
                  "0"
                ],
                [
                  "test_coverage_nearby_whenerroroccured",
                  "0"
                ],
                [
                  "test_next_departures_for_stations_whenerroroccured",
                  "0"
                ],
                [
                  "test_coverage_nearby_whensucceed",
                  "0"
                ],
                [
                  "test_next_nearby_departures_of_station_whensucceed",
                  "0"
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "0"
                ],
                [
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  "0"
                ],
                [
                  "test_next_departures_from_location_whenerroroccured",
                  "0"
                ],
                [
                  "test_calculate_route_include_modes",
                  "0"
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_coverage_witin_a_city_whensucceed",
                  "0"
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "0"
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "0"
                ],
                [
                  "test_initiation",
                  "0"
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "0"
                ],
                [
                  "test_next_departures_from_location_whensucceed",
                  "0"
                ],
                [
                  "test_find_transit_coverage_in_cities_whensucceed",
                  "0"
                ],
                [
                  "test_calculate_route_whenerroroccured",
                  "0"
                ],
                [
                  "test_calculate_route_short_route",
                  "0"
                ],
                [
                  "test_next_departures_for_stations_whensucceed",
                  "0"
                ],
                [
                  "test_coverage_witin_a_city_whenerroroccured",
                  "0"
                ],
                [
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  "0"
                ],
                [
                  "test_calculate_route_whensucceed",
                  "0"
                ],
                [
                  "test_calculate_route_exclude_modes",
                  "0"
                ],
                [
                  "test_find_stations_by_id_whenerroroccured",
                  "0"
                ],
                [
                  "test_coverage_nearby_whenerroroccured",
                  "0"
                ],
                [
                  "test_next_departures_for_stations_whenerroroccured",
                  "0"
                ],
                [
                  "test_coverage_nearby_whensucceed",
                  "0"
                ],
                [
                  "test_next_nearby_departures_of_station_whensucceed",
                  "0"
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "0"
                ],
                [
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  "0"
                ],
                [
                  "test_next_departures_from_location_whenerroroccured",
                  "0"
                ],
                [
                  "test_calculate_route_include_modes",
                  "0"
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_coverage_witin_a_city_whensucceed",
                "false"
              ],
              [
                "test_find_stations_by_id_whensucceed",
                "false"
              ],
              [
                "test_find_stations_nearby_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_find_stations_by_name_whenerroroccured",
                "false"
              ],
              [
                "test_next_departures_from_location_whensucceed",
                "false"
              ],
              [
                "test_find_transit_coverage_in_cities_whensucceed",
                "false"
              ],
              [
                "test_calculate_route_whenerroroccured",
                "false"
              ],
              [
                "test_calculate_route_short_route",
                "false"
              ],
              [
                "test_next_departures_for_stations_whensucceed",
                "false"
              ],
              [
                "test_coverage_witin_a_city_whenerroroccured",
                "false"
              ],
              [
                "test_find_transit_coverage_in_cities_whenerroroccured",
                "false"
              ],
              [
                "test_calculate_route_whensucceed",
                "false"
              ],
              [
                "test_calculate_route_exclude_modes",
                "false"
              ],
              [
                "test_find_stations_by_id_whenerroroccured",
                "false"
              ],
              [
                "test_coverage_nearby_whenerroroccured",
                "false"
              ],
              [
                "test_next_departures_for_stations_whenerroroccured",
                "false"
              ],
              [
                "test_coverage_nearby_whensucceed",
                "false"
              ],
              [
                "test_next_nearby_departures_of_station_whensucceed",
                "false"
              ],
              [
                "test_find_stations_by_name_whensucceed",
                "false"
              ],
              [
                "test_next_nearby_departures_of_station_whenerroroccured",
                "false"
              ],
              [
                "test_next_departures_from_location_whenerroroccured",
                "false"
              ],
              [
                "test_calculate_route_include_modes",
                "false"
              ],
              [
                "test_find_stations_nearby_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_coverage_witin_a_city_whensucceed",
                "false"
              ],
              [
                "test_find_stations_by_id_whensucceed",
                "false"
              ],
              [
                "test_find_stations_nearby_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_find_stations_by_name_whenerroroccured",
                "false"
              ],
              [
                "test_next_departures_from_location_whensucceed",
                "false"
              ],
              [
                "test_find_transit_coverage_in_cities_whensucceed",
                "false"
              ],
              [
                "test_calculate_route_whenerroroccured",
                "false"
              ],
              [
                "test_calculate_route_short_route",
                "false"
              ],
              [
                "test_next_departures_for_stations_whensucceed",
                "false"
              ],
              [
                "test_coverage_witin_a_city_whenerroroccured",
                "false"
              ],
              [
                "test_find_transit_coverage_in_cities_whenerroroccured",
                "false"
              ],
              [
                "test_calculate_route_whensucceed",
                "false"
              ],
              [
                "test_calculate_route_exclude_modes",
                "false"
              ],
              [
                "test_find_stations_by_id_whenerroroccured",
                "false"
              ],
              [
                "test_coverage_nearby_whenerroroccured",
                "false"
              ],
              [
                "test_next_departures_for_stations_whenerroroccured",
                "false"
              ],
              [
                "test_coverage_nearby_whensucceed",
                "false"
              ],
              [
                "test_next_nearby_departures_of_station_whensucceed",
                "false"
              ],
              [
                "test_find_stations_by_name_whensucceed",
                "false"
              ],
              [
                "test_next_nearby_departures_of_station_whenerroroccured",
                "false"
              ],
              [
                "test_next_departures_from_location_whenerroroccured",
                "false"
              ],
              [
                "test_calculate_route_include_modes",
                "false"
              ],
              [
                "test_find_stations_nearby_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_coverage_witin_a_city_whensucceed",
                "2"
              ],
              [
                "test_find_stations_by_id_whensucceed",
                "2"
              ],
              [
                "test_find_stations_nearby_whensucceed",
                "2"
              ],
              [
                "test_initiation",
                "3"
              ],
              [
                "test_find_stations_by_name_whenerroroccured",
                "1"
              ],
              [
                "test_next_departures_from_location_whensucceed",
                "2"
              ],
              [
                "test_find_transit_coverage_in_cities_whensucceed",
                "2"
              ],
              [
                "test_calculate_route_whenerroroccured",
                "1"
              ],
              [
                "test_calculate_route_short_route",
                "3"
              ],
              [
                "test_next_departures_for_stations_whensucceed",
                "2"
              ],
              [
                "test_coverage_witin_a_city_whenerroroccured",
                "1"
              ],
              [
                "test_find_transit_coverage_in_cities_whenerroroccured",
                "1"
              ],
              [
                "test_calculate_route_whensucceed",
                "2"
              ],
              [
                "test_calculate_route_exclude_modes",
                "2"
              ],
              [
                "test_find_stations_by_id_whenerroroccured",
                "1"
              ],
              [
                "test_coverage_nearby_whenerroroccured",
                "1"
              ],
              [
                "test_next_departures_for_stations_whenerroroccured",
                "1"
              ],
              [
                "test_coverage_nearby_whensucceed",
                "2"
              ],
              [
                "test_next_nearby_departures_of_station_whensucceed",
                "2"
              ],
              [
                "test_find_stations_by_name_whensucceed",
                "2"
              ],
              [
                "test_next_nearby_departures_of_station_whenerroroccured",
                "1"
              ],
              [
                "test_next_departures_from_location_whenerroroccured",
                "1"
              ],
              [
                "test_calculate_route_include_modes",
                "2"
              ],
              [
                "test_find_stations_nearby_whenerroroccured",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_coverage_witin_a_city_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_find_stations_by_id_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_find_stations_nearby_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_initiation",
                []
              ],
              [
                "test_find_stations_by_name_whenerroroccured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_next_departures_from_location_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_find_transit_coverage_in_cities_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_calculate_route_whenerroroccured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_calculate_route_short_route",
                [
                  "expected_short_route",
                  "expectedResponse",
                  "response",
                  "short_route"
                ]
              ],
              [
                "test_next_departures_for_stations_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_coverage_witin_a_city_whenerroroccured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_find_transit_coverage_in_cities_whenerroroccured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_calculate_route_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_calculate_route_exclude_modes",
                [
                  "expectedResponse",
                  "response",
                  "exclude_modes"
                ]
              ],
              [
                "test_find_stations_by_id_whenerroroccured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_coverage_nearby_whenerroroccured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_next_departures_for_stations_whenerroroccured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_coverage_nearby_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_next_nearby_departures_of_station_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_find_stations_by_name_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_next_nearby_departures_of_station_whenerroroccured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_next_departures_from_location_whenerroroccured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_calculate_route_include_modes",
                [
                  "expectedResponse",
                  "response",
                  "include_modes"
                ]
              ],
              [
                "test_find_stations_nearby_whenerroroccured",
                [
                  "expectedResponse"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_coverage_witin_a_city_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_find_stations_by_id_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_find_stations_nearby_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_initiation",
                [
                  "self._api"
                ]
              ],
              [
                "test_find_stations_by_name_whenerroroccured",
                [
                  "self._api"
                ]
              ],
              [
                "test_next_departures_from_location_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_find_transit_coverage_in_cities_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_calculate_route_whenerroroccured",
                [
                  "self._api"
                ]
              ],
              [
                "test_calculate_route_short_route",
                [
                  "self._api"
                ]
              ],
              [
                "test_next_departures_for_stations_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_coverage_witin_a_city_whenerroroccured",
                [
                  "self._api"
                ]
              ],
              [
                "test_find_transit_coverage_in_cities_whenerroroccured",
                [
                  "self._api"
                ]
              ],
              [
                "test_calculate_route_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_calculate_route_exclude_modes",
                [
                  "self._api"
                ]
              ],
              [
                "test_find_stations_by_id_whenerroroccured",
                [
                  "self._api"
                ]
              ],
              [
                "test_coverage_nearby_whenerroroccured",
                [
                  "self._api"
                ]
              ],
              [
                "test_next_departures_for_stations_whenerroroccured",
                [
                  "self._api"
                ]
              ],
              [
                "test_coverage_nearby_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_next_nearby_departures_of_station_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_find_stations_by_name_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_next_nearby_departures_of_station_whenerroroccured",
                [
                  "self._api"
                ]
              ],
              [
                "test_next_departures_from_location_whenerroroccured",
                [
                  "self._api"
                ]
              ],
              [
                "test_calculate_route_include_modes",
                [
                  "self._api"
                ]
              ],
              [
                "test_find_stations_nearby_whenerroroccured",
                [
                  "self._api"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5719429731012774,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_find_stations_by_name_whensucceed",
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  0.63271336728948
                ],
                [
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  "test_coverage_witin_a_city_whensucceed",
                  0.46225016352102427
                ],
                [
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  "test_calculate_route_include_modes",
                  0.35643673548329036
                ],
                [
                  "test_next_departures_from_location_whensucceed",
                  "test_coverage_witin_a_city_whenerroroccured",
                  0.44536813950290915
                ],
                [
                  "test_coverage_witin_a_city_whensucceed",
                  "test_coverage_nearby_whenerroroccured",
                  0.5797213274999454
                ],
                [
                  "test_find_stations_by_id_whenerroroccured",
                  "test_calculate_route_whensucceed",
                  0.40430145879296375
                ],
                [
                  "test_next_departures_from_location_whenerroroccured",
                  "test_calculate_route_whenerroroccured",
                  0.6813489552240217
                ],
                [
                  "test_find_stations_by_id_whenerroroccured",
                  "test_calculate_route_include_modes",
                  0.3671859789268566
                ],
                [
                  "test_initiation",
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  0.18752289237539815
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "test_calculate_route_whenerroroccured",
                  0.5240685902856071
                ],
                [
                  "test_find_stations_by_id_whenerroroccured",
                  "test_coverage_witin_a_city_whensucceed",
                  0.42857142857142855
                ],
                [
                  "test_calculate_route_whenerroroccured",
                  "test_coverage_nearby_whensucceed",
                  0.4966812608316212
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "test_find_transit_coverage_in_cities_whensucceed",
                  0.7757911135427188
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "test_coverage_nearby_whensucceed",
                  0.7306696291155222
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "test_calculate_route_exclude_modes",
                  0.5568178184552904
                ],
                [
                  "test_find_stations_by_id_whenerroroccured",
                  "test_next_departures_for_stations_whensucceed",
                  0.45263887678933684
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "test_calculate_route_short_route",
                  0.5172270407357686
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "test_calculate_route_whensucceed",
                  0.6827383255595083
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "test_find_stations_by_name_whenerroroccured",
                  0.7575294504063131
                ],
                [
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  "test_coverage_nearby_whensucceed",
                  0.580370430699081
                ],
                [
                  "test_next_departures_for_stations_whensucceed",
                  "test_coverage_witin_a_city_whenerroroccured",
                  0.5281452275692498
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "test_coverage_witin_a_city_whenerroroccured",
                  0.6164889707256676
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "test_next_departures_from_location_whensucceed",
                  0.6163920909019224
                ],
                [
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  "test_calculate_route_exclude_modes",
                  0.35643673548329036
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "test_coverage_witin_a_city_whensucceed",
                  0.6905765298376497
                ],
                [
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  "test_coverage_witin_a_city_whenerroroccured",
                  0.7419354838709677
                ],
                [
                  "test_find_transit_coverage_in_cities_whensucceed",
                  "test_coverage_witin_a_city_whenerroroccured",
                  0.5622535302317492
                ],
                [
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  "test_next_nearby_departures_of_station_whensucceed",
                  0.5037861839067155
                ],
                [
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  "test_next_departures_from_location_whensucceed",
                  0.5435230893060919
                ],
                [
                  "test_find_transit_coverage_in_cities_whensucceed",
                  "test_next_departures_from_location_whenerroroccured",
                  0.5018484351393873
                ],
                [
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  "test_next_departures_from_location_whenerroroccured",
                  0.6935594191788392
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "test_next_departures_for_stations_whenerroroccured",
                  0.5567381618500135
                ],
                [
                  "test_calculate_route_exclude_modes",
                  "test_coverage_nearby_whenerroroccured",
                  0.4550000984678297
                ],
                [
                  "test_calculate_route_whensucceed",
                  "test_calculate_route_whenerroroccured",
                  0.7528171994234857
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "test_find_stations_by_id_whenerroroccured",
                  0.6511415548610497
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  0.5495650063936617
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  0.5138199967021418
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "test_calculate_route_whensucceed",
                  0.5948760803902003
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "test_next_nearby_departures_of_station_whensucceed",
                  0.5690677296768112
                ],
                [
                  "test_calculate_route_include_modes",
                  "test_coverage_witin_a_city_whenerroroccured",
                  0.38763403576257555
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "test_next_departures_from_location_whenerroroccured",
                  0.6986107936456589
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "test_find_transit_coverage_in_cities_whensucceed",
                  0.5439611381401831
                ],
                [
                  "test_initiation",
                  "test_coverage_witin_a_city_whensucceed",
                  0.2629368792488718
                ],
                [
                  "test_initiation",
                  "test_coverage_nearby_whenerroroccured",
                  0.20158105227158785
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "test_calculate_route_short_route",
                  0.40664393516759667
                ],
                [
                  "test_initiation",
                  "test_calculate_route_whenerroroccured",
                  0.16048217085700786
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "test_find_transit_coverage_in_cities_whensucceed",
                  0.7055336829505575
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "test_coverage_nearby_whenerroroccured",
                  0.5688545557679726
                ],
                [
                  "test_coverage_witin_a_city_whensucceed",
                  "test_coverage_nearby_whensucceed",
                  0.7795794428691072
                ],
                [
                  "test_find_stations_by_id_whenerroroccured",
                  "test_calculate_route_short_route",
                  0.2366210685475182
                ],
                [
                  "test_calculate_route_include_modes",
                  "test_calculate_route_whenerroroccured",
                  0.6386747979223353
                ],
                [
                  "test_find_stations_by_id_whenerroroccured",
                  "test_coverage_nearby_whensucceed",
                  0.4923659639173309
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "test_find_stations_nearby_whensucceed",
                  0.6565076777938936
                ],
                [
                  "test_initiation",
                  "test_find_stations_by_id_whensucceed",
                  0.3030457633656632
                ],
                [
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  "test_coverage_nearby_whenerroroccured",
                  0.7648808633001188
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "test_next_departures_for_stations_whensucceed",
                  0.6402281208337565
                ],
                [
                  "test_calculate_route_short_route",
                  "test_coverage_witin_a_city_whenerroroccured",
                  0.5003069715128823
                ],
                [
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  "test_next_departures_for_stations_whensucceed",
                  0.5492350363810897
                ],
                [
                  "test_initiation",
                  "test_calculate_route_exclude_modes",
                  0.25796080865480964
                ],
                [
                  "test_initiation",
                  "test_next_departures_from_location_whensucceed",
                  0.2615130164079025
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "test_calculate_route_include_modes",
                  0.5568178184552904
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "test_coverage_nearby_whenerroroccured",
                  0.573885641347411
                ],
                [
                  "test_find_stations_by_id_whenerroroccured",
                  "test_find_transit_coverage_in_cities_whensucceed",
                  0.511987811646309
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "test_find_stations_nearby_whenerroroccured",
                  0.6677805632941778
                ],
                [
                  "test_find_transit_coverage_in_cities_whensucceed",
                  "test_calculate_route_short_route",
                  0.46243910092719764
                ],
                [
                  "test_initiation",
                  "test_calculate_route_short_route",
                  0.13620348193518494
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "test_coverage_witin_a_city_whenerroroccured",
                  0.6327170393973558
                ],
                [
                  "test_next_departures_from_location_whensucceed",
                  "test_next_departures_for_stations_whenerroroccured",
                  0.6365315497232665
                ],
                [
                  "test_find_transit_coverage_in_cities_whensucceed",
                  "test_next_departures_for_stations_whensucceed",
                  0.6366613626032354
                ],
                [
                  "test_next_departures_from_location_whenerroroccured",
                  "test_coverage_witin_a_city_whensucceed",
                  0.4667600280093366
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "test_calculate_route_exclude_modes",
                  0.6726145207952562
                ],
                [
                  "test_initiation",
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  0.2146693953705459
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "test_coverage_witin_a_city_whensucceed",
                  0.7674322120313372
                ],
                [
                  "test_find_transit_coverage_in_cities_whensucceed",
                  "test_calculate_route_whensucceed",
                  0.7097954098256228
                ],
                [
                  "test_find_stations_by_id_whenerroroccured",
                  "test_calculate_route_whenerroroccured",
                  0.5933908290969266
                ],
                [
                  "test_next_nearby_departures_of_station_whensucceed",
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  0.7136412401400631
                ],
                [
                  "test_find_stations_by_id_whenerroroccured",
                  "test_next_departures_from_location_whenerroroccured",
                  0.6801360408136048
                ],
                [
                  "test_next_departures_for_stations_whenerroroccured",
                  "test_calculate_route_whensucceed",
                  0.5253820253663012
                ],
                [
                  "test_next_departures_from_location_whenerroroccured",
                  "test_coverage_nearby_whenerroroccured",
                  0.7514691493021793
                ],
                [
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  "test_next_departures_for_stations_whenerroroccured",
                  0.6837132796141967
                ],
                [
                  "test_initiation",
                  "test_calculate_route_whensucceed",
                  0.23094010767585033
                ],
                [
                  "test_find_transit_coverage_in_cities_whensucceed",
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  0.7898323400874572
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  0.5768179036829705
                ],
                [
                  "test_next_departures_for_stations_whenerroroccured",
                  "test_coverage_nearby_whensucceed",
                  0.5172065470681887
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "test_coverage_nearby_whenerroroccured",
                  0.8352152663013301
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "test_next_departures_from_location_whenerroroccured",
                  0.7432561251138006
                ],
                [
                  "test_initiation",
                  "test_find_stations_by_id_whenerroroccured",
                  0.19317811536651808
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "test_next_departures_from_location_whensucceed",
                  0.6341165139681465
                ],
                [
                  "test_calculate_route_include_modes",
                  "test_calculate_route_exclude_modes",
                  0.9354838709677419
                ],
                [
                  "test_calculate_route_whenerroroccured",
                  "test_coverage_witin_a_city_whensucceed",
                  0.4878991261463619
                ],
                [
                  "test_initiation",
                  "test_next_nearby_departures_of_station_whensucceed",
                  0.27183014110978115
                ],
                [
                  "test_calculate_route_whensucceed",
                  "test_coverage_witin_a_city_whensucceed",
                  0.5963833779129926
                ],
                [
                  "test_initiation",
                  "test_calculate_route_include_modes",
                  0.25796080865480964
                ],
                [
                  "test_find_transit_coverage_in_cities_whensucceed",
                  "test_calculate_route_include_modes",
                  0.6773340106676826
                ],
                [
                  "test_next_departures_from_location_whensucceed",
                  "test_next_departures_from_location_whenerroroccured",
                  0.7076965283959734
                ],
                [
                  "test_next_nearby_departures_of_station_whensucceed",
                  "test_calculate_route_exclude_modes",
                  0.611410472625663
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "test_find_stations_nearby_whenerroroccured",
                  0.6407814598875448
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "test_coverage_nearby_whensucceed",
                  0.8362420100070905
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "test_find_stations_by_id_whensucceed",
                  0.693007749061827
                ],
                [
                  "test_find_transit_coverage_in_cities_whensucceed",
                  "test_next_departures_from_location_whensucceed",
                  0.6849444767061142
                ],
                [
                  "test_next_departures_for_stations_whensucceed",
                  "test_coverage_nearby_whenerroroccured",
                  0.5018484351393874
                ],
                [
                  "test_next_departures_for_stations_whensucceed",
                  "test_coverage_witin_a_city_whensucceed",
                  0.6711000013508571
                ],
                [
                  "test_next_departures_for_stations_whensucceed",
                  "test_next_departures_for_stations_whenerroroccured",
                  0.7280713544892813
                ],
                [
                  "test_initiation",
                  "test_find_stations_nearby_whenerroroccured",
                  0.19937791451169073
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "test_next_nearby_departures_of_station_whensucceed",
                  0.477059961531621
                ],
                [
                  "test_next_departures_for_stations_whensucceed",
                  "test_calculate_route_whenerroroccured",
                  0.6227971397425264
                ],
                [
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  "test_calculate_route_short_route",
                  0.22969406802008055
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "test_calculate_route_whenerroroccured",
                  0.6561049851971192
                ],
                [
                  "test_find_stations_by_id_whenerroroccured",
                  "test_coverage_nearby_whenerroroccured",
                  0.7027642214999339
                ],
                [
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  "test_calculate_route_whensucceed",
                  0.39246567242155594
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "test_calculate_route_include_modes",
                  0.6726145207952562
                ],
                [
                  "test_calculate_route_whenerroroccured",
                  "test_coverage_nearby_whenerroroccured",
                  0.7430428494079853
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "test_find_stations_by_id_whenerroroccured",
                  0.5984892894764291
                ],
                [
                  "test_next_nearby_departures_of_station_whensucceed",
                  "test_calculate_route_short_route",
                  0.47034461547892975
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "test_coverage_witin_a_city_whensucceed",
                  0.4494665749754947
                ],
                [
                  "test_find_transit_coverage_in_cities_whensucceed",
                  "test_calculate_route_exclude_modes",
                  0.6773340106676826
                ],
                [
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  "test_coverage_witin_a_city_whensucceed",
                  0.5926672593342224
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  0.514483403033123
                ],
                [
                  "test_next_departures_for_stations_whenerroroccured",
                  "test_coverage_witin_a_city_whenerroroccured",
                  0.6336854786668165
                ],
                [
                  "test_next_departures_from_location_whensucceed",
                  "test_calculate_route_whenerroroccured",
                  0.6487580629736323
                ],
                [
                  "test_next_departures_for_stations_whenerroroccured",
                  "test_calculate_route_short_route",
                  0.3350507435600479
                ],
                [
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  "test_calculate_route_whenerroroccured",
                  0.6782463959045222
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "test_coverage_witin_a_city_whenerroroccured",
                  0.5788654211371838
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "test_next_nearby_departures_of_station_whensucceed",
                  0.704078472704922
                ],
                [
                  "test_next_departures_from_location_whensucceed",
                  "test_coverage_witin_a_city_whensucceed",
                  0.5959322756161917
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "test_coverage_witin_a_city_whensucceed",
                  0.4914731871829905
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "test_next_departures_for_stations_whensucceed",
                  0.6627334956636113
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "test_find_stations_by_id_whensucceed",
                  0.6344166391652172
                ],
                [
                  "test_next_departures_for_stations_whenerroroccured",
                  "test_calculate_route_include_modes",
                  0.46405860548153643
                ],
                [
                  "test_next_nearby_departures_of_station_whensucceed",
                  "test_calculate_route_include_modes",
                  0.611410472625663
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "test_next_departures_for_stations_whenerroroccured",
                  0.7259195875914237
                ],
                [
                  "test_calculate_route_exclude_modes",
                  "test_calculate_route_whenerroroccured",
                  0.6386747979223353
                ],
                [
                  "test_coverage_nearby_whensucceed",
                  "test_coverage_nearby_whenerroroccured",
                  0.7156264473321343
                ],
                [
                  "test_initiation",
                  "test_coverage_nearby_whensucceed",
                  0.31209389196617965
                ],
                [
                  "test_find_stations_by_id_whenerroroccured",
                  "test_next_departures_for_stations_whenerroroccured",
                  0.6940482879728191
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "test_calculate_route_whenerroroccured",
                  0.6824274959301315
                ],
                [
                  "test_next_nearby_departures_of_station_whensucceed",
                  "test_coverage_witin_a_city_whenerroroccured",
                  0.4629386554818467
                ],
                [
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  "test_coverage_witin_a_city_whenerroroccured",
                  0.6340229583087122
                ],
                [
                  "test_calculate_route_exclude_modes",
                  "test_coverage_witin_a_city_whensucceed",
                  0.5533288710217215
                ],
                [
                  "test_next_departures_from_location_whensucceed",
                  "test_coverage_nearby_whenerroroccured",
                  0.5073921644158866
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "test_coverage_witin_a_city_whenerroroccured",
                  0.5161002296110788
                ],
                [
                  "test_coverage_witin_a_city_whensucceed",
                  "test_coverage_witin_a_city_whenerroroccured",
                  0.7902230124456298
                ],
                [
                  "test_find_transit_coverage_in_cities_whensucceed",
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  0.46776427696374895
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  0.7490058862731381
                ],
                [
                  "test_next_departures_from_location_whenerroroccured",
                  "test_next_departures_for_stations_whenerroroccured",
                  0.8457826010558603
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "test_next_departures_for_stations_whenerroroccured",
                  0.5352309301050472
                ],
                [
                  "test_next_departures_for_stations_whenerroroccured",
                  "test_calculate_route_whenerroroccured",
                  0.7324107107676725
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "test_coverage_nearby_whenerroroccured",
                  0.7236272269866327
                ],
                [
                  "test_calculate_route_include_modes",
                  "test_coverage_nearby_whensucceed",
                  0.6624254140127851
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "test_next_departures_for_stations_whensucceed",
                  0.4963635881027162
                ],
                [
                  "test_find_stations_by_id_whenerroroccured",
                  "test_next_nearby_departures_of_station_whensucceed",
                  0.4594768006447692
                ],
                [
                  "test_next_nearby_departures_of_station_whensucceed",
                  "test_calculate_route_whensucceed",
                  0.6800785556222065
                ],
                [
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  "test_calculate_route_include_modes",
                  0.4896429925422007
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "test_next_departures_for_stations_whenerroroccured",
                  0.7550430153458071
                ],
                [
                  "test_calculate_route_short_route",
                  "test_coverage_nearby_whensucceed",
                  0.468378212815107
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "test_calculate_route_include_modes",
                  0.49820793218797177
                ],
                [
                  "test_find_stations_by_id_whenerroroccured",
                  "test_coverage_witin_a_city_whenerroroccured",
                  0.616857759715211
                ],
                [
                  "test_calculate_route_include_modes",
                  "test_calculate_route_short_route",
                  0.5609297528220522
                ],
                [
                  "test_next_nearby_departures_of_station_whensucceed",
                  "test_coverage_witin_a_city_whensucceed",
                  0.6194427979062814
                ],
                [
                  "test_calculate_route_short_route",
                  "test_coverage_witin_a_city_whensucceed",
                  0.5421677936989682
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "test_find_stations_by_id_whenerroroccured",
                  0.866828394595597
                ],
                [
                  "test_initiation",
                  "test_next_departures_from_location_whenerroroccured",
                  0.18935242733246035
                ],
                [
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  "test_coverage_nearby_whenerroroccured",
                  0.7762145068043218
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "test_calculate_route_whensucceed",
                  0.4748324320318872
                ],
                [
                  "test_next_nearby_departures_of_station_whensucceed",
                  "test_coverage_nearby_whensucceed",
                  0.7390204103005693
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "test_calculate_route_short_route",
                  0.29701838006605535
                ],
                [
                  "test_coverage_witin_a_city_whenerroroccured",
                  "test_coverage_nearby_whenerroroccured",
                  0.757282445662753
                ],
                [
                  "test_next_departures_from_location_whensucceed",
                  "test_calculate_route_include_modes",
                  0.704188859050402
                ],
                [
                  "test_initiation",
                  "test_coverage_witin_a_city_whenerroroccured",
                  0.17173551629643674
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "test_find_stations_nearby_whensucceed",
                  0.8401478790412122
                ],
                [
                  "test_next_nearby_departures_of_station_whensucceed",
                  "test_next_departures_from_location_whensucceed",
                  0.8182917386409334
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "test_next_departures_from_location_whenerroroccured",
                  0.5020964452534338
                ],
                [
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  "test_calculate_route_whensucceed",
                  0.5081516761362315
                ],
                [
                  "test_next_departures_from_location_whensucceed",
                  "test_coverage_nearby_whensucceed",
                  0.6855795667606844
                ],
                [
                  "test_next_departures_from_location_whenerroroccured",
                  "test_next_departures_for_stations_whensucceed",
                  0.5961880704121871
                ],
                [
                  "test_next_departures_for_stations_whenerroroccured",
                  "test_calculate_route_exclude_modes",
                  0.46405860548153643
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "test_next_departures_from_location_whenerroroccured",
                  0.5232166435699434
                ],
                [
                  "test_next_departures_from_location_whensucceed",
                  "test_calculate_route_short_route",
                  0.5356039726995765
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "test_find_transit_coverage_in_cities_whensucceed",
                  0.5685352436149612
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "test_calculate_route_whensucceed",
                  0.5658384576654014
                ],
                [
                  "test_next_departures_from_location_whenerroroccured",
                  "test_coverage_nearby_whensucceed",
                  0.5170876899950191
                ],
                [
                  "test_next_departures_for_stations_whensucceed",
                  "test_calculate_route_include_modes",
                  0.6123853466378205
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "test_find_stations_by_id_whensucceed",
                  0.8119979429411501
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "test_calculate_route_whensucceed",
                  0.7071931137405822
                ],
                [
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  "test_calculate_route_short_route",
                  0.3866008416235909
                ],
                [
                  "test_next_nearby_departures_of_station_whensucceed",
                  "test_next_departures_for_stations_whenerroroccured",
                  0.5912561448097325
                ],
                [
                  "test_next_departures_from_location_whensucceed",
                  "test_calculate_route_whensucceed",
                  0.7951856148770525
                ],
                [
                  "test_initiation",
                  "test_next_departures_for_stations_whenerroroccured",
                  0.1775587046473901
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "test_calculate_route_short_route",
                  0.6031834087171724
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  0.6183371066837795
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "test_next_nearby_departures_of_station_whensucceed",
                  0.613675987590406
                ],
                [
                  "test_calculate_route_include_modes",
                  "test_coverage_witin_a_city_whensucceed",
                  0.5533288710217215
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "test_find_stations_by_id_whenerroroccured",
                  0.8425254637422693
                ],
                [
                  "test_initiation",
                  "test_find_stations_by_name_whenerroroccured",
                  0.18233692233542073
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "test_coverage_nearby_whensucceed",
                  0.5989120571285178
                ],
                [
                  "test_next_nearby_departures_of_station_whensucceed",
                  "test_next_departures_for_stations_whensucceed",
                  0.8067776900447439
                ],
                [
                  "test_next_departures_for_stations_whenerroroccured",
                  "test_coverage_nearby_whenerroroccured",
                  0.7633862853691145
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "test_calculate_route_short_route",
                  0.3319946398389039
                ],
                [
                  "test_coverage_witin_a_city_whenerroroccured",
                  "test_coverage_nearby_whensucceed",
                  0.5940401295066863
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "test_calculate_route_include_modes",
                  0.645721427643107
                ],
                [
                  "test_calculate_route_whenerroroccured",
                  "test_coverage_witin_a_city_whenerroroccured",
                  0.6179578273796758
                ],
                [
                  "test_next_nearby_departures_of_station_whensucceed",
                  "test_coverage_nearby_whenerroroccured",
                  0.5593738517329481
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "test_coverage_nearby_whensucceed",
                  0.5643202107628984
                ],
                [
                  "test_next_departures_for_stations_whensucceed",
                  "test_coverage_nearby_whensucceed",
                  0.6581451817144176
                ],
                [
                  "test_initiation",
                  "test_find_stations_by_name_whensucceed",
                  0.30459298421879816
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "test_find_stations_nearby_whenerroroccured",
                  0.8350049111119214
                ],
                [
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  "test_coverage_nearby_whensucceed",
                  0.5940401295066863
                ],
                [
                  "test_find_transit_coverage_in_cities_whensucceed",
                  "test_coverage_nearby_whensucceed",
                  0.7914739265642149
                ],
                [
                  "test_initiation",
                  "test_next_departures_for_stations_whensucceed",
                  0.2510482226267169
                ],
                [
                  "test_calculate_route_whensucceed",
                  "test_coverage_nearby_whenerroroccured",
                  0.5091750772173156
                ],
                [
                  "test_initiation",
                  "test_find_stations_nearby_whensucceed",
                  0.2870846258816072
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "test_calculate_route_exclude_modes",
                  0.4263416246693093
                ],
                [
                  "test_calculate_route_whensucceed",
                  "test_coverage_witin_a_city_whenerroroccured",
                  0.4337880162138561
                ],
                [
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  "test_calculate_route_whenerroroccured",
                  0.5760195163420541
                ],
                [
                  "test_calculate_route_exclude_modes",
                  "test_calculate_route_short_route",
                  0.5609297528220522
                ],
                [
                  "test_calculate_route_exclude_modes",
                  "test_coverage_nearby_whensucceed",
                  0.6624254140127851
                ],
                [
                  "test_next_departures_from_location_whenerroroccured",
                  "test_calculate_route_include_modes",
                  0.4273981711600348
                ],
                [
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  "test_next_departures_for_stations_whenerroroccured",
                  0.782983818783922
                ],
                [
                  "test_calculate_route_short_route",
                  "test_calculate_route_whenerroroccured",
                  0.5684657852073631
                ],
                [
                  "test_find_stations_by_id_whenerroroccured",
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  0.6933752452815364
                ],
                [
                  "test_next_nearby_departures_of_station_whensucceed",
                  "test_calculate_route_whenerroroccured",
                  0.5980108411766503
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "test_next_departures_for_stations_whenerroroccured",
                  0.5336000974881928
                ],
                [
                  "test_next_departures_for_stations_whensucceed",
                  "test_calculate_route_short_route",
                  0.5939562268141413
                ],
                [
                  "test_next_departures_for_stations_whensucceed",
                  "test_calculate_route_whensucceed",
                  0.6860623921887307
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "test_calculate_route_whenerroroccured",
                  0.48228163290824566
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "test_calculate_route_exclude_modes",
                  0.645721427643107
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "test_next_departures_for_stations_whensucceed",
                  0.4672901361052336
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "test_coverage_witin_a_city_whenerroroccured",
                  0.6741052976458244
                ],
                [
                  "test_find_transit_coverage_in_cities_whensucceed",
                  "test_next_nearby_departures_of_station_whensucceed",
                  0.6441603284397698
                ],
                [
                  "test_calculate_route_whensucceed",
                  "test_calculate_route_exclude_modes",
                  0.8700865998532787
                ],
                [
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  "test_next_departures_for_stations_whensucceed",
                  0.5155703411985533
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  0.7021124388820102
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "test_calculate_route_include_modes",
                  0.4263416246693093
                ],
                [
                  "test_next_departures_from_location_whensucceed",
                  "test_next_departures_for_stations_whensucceed",
                  0.8374325544608086
                ],
                [
                  "test_next_departures_for_stations_whenerroroccured",
                  "test_coverage_witin_a_city_whensucceed",
                  0.48145692048564936
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "test_coverage_nearby_whensucceed",
                  0.720900110762212
                ],
                [
                  "test_next_departures_from_location_whenerroroccured",
                  "test_calculate_route_exclude_modes",
                  0.4273981711600348
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "test_next_departures_from_location_whensucceed",
                  0.6890342079039011
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "test_calculate_route_whenerroroccured",
                  0.5409339979378444
                ],
                [
                  "test_next_departures_from_location_whenerroroccured",
                  "test_calculate_route_short_route",
                  0.294620184452059
                ],
                [
                  "test_find_transit_coverage_in_cities_whensucceed",
                  "test_next_departures_for_stations_whenerroroccured",
                  0.4982728791224397
                ],
                [
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  0.6516347071506209
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "test_find_transit_coverage_in_cities_whensucceed",
                  0.73744167546939
                ],
                [
                  "test_calculate_route_whensucceed",
                  "test_coverage_nearby_whensucceed",
                  0.7207499701564472
                ],
                [
                  "test_find_transit_coverage_in_cities_whensucceed",
                  "test_coverage_nearby_whenerroroccured",
                  0.5813989089756058
                ],
                [
                  "test_find_stations_by_id_whenerroroccured",
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  0.7075721361439185
                ],
                [
                  "test_find_stations_by_id_whenerroroccured",
                  "test_calculate_route_exclude_modes",
                  0.3671859789268566
                ],
                [
                  "test_calculate_route_exclude_modes",
                  "test_coverage_witin_a_city_whenerroroccured",
                  0.38763403576257555
                ],
                [
                  "test_next_departures_from_location_whenerroroccured",
                  "test_calculate_route_whensucceed",
                  0.4782867026529595
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "test_find_stations_by_id_whensucceed",
                  0.8108414668911407
                ],
                [
                  "test_calculate_route_include_modes",
                  "test_coverage_nearby_whenerroroccured",
                  0.4550000984678297
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "test_coverage_witin_a_city_whensucceed",
                  0.6831097448929876
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  0.6918607726062583
                ],
                [
                  "test_initiation",
                  "test_find_transit_coverage_in_cities_whensucceed",
                  0.30289607416741426
                ],
                [
                  "test_find_stations_by_name_whensucceed",
                  "test_next_departures_from_location_whenerroroccured",
                  0.5195028721696863
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "test_next_departures_from_location_whensucceed",
                  0.5018467283547906
                ],
                [
                  "test_next_departures_from_location_whensucceed",
                  "test_calculate_route_exclude_modes",
                  0.704188859050402
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "test_next_departures_from_location_whensucceed",
                  0.5145842061533148
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "test_find_stations_by_id_whenerroroccured",
                  0.7512865544387617
                ],
                [
                  "test_calculate_route_whensucceed",
                  "test_calculate_route_include_modes",
                  0.8700865998532787
                ],
                [
                  "test_calculate_route_short_route",
                  "test_coverage_nearby_whenerroroccured",
                  0.3136471374513733
                ],
                [
                  "test_find_transit_coverage_in_cities_whensucceed",
                  "test_calculate_route_whenerroroccured",
                  0.525410637528561
                ],
                [
                  "test_find_stations_by_id_whenerroroccured",
                  "test_next_departures_from_location_whensucceed",
                  0.42730308773578585
                ],
                [
                  "test_find_stations_by_name_whenerroroccured",
                  "test_calculate_route_exclude_modes",
                  0.49820793218797177
                ],
                [
                  "test_next_nearby_departures_of_station_whensucceed",
                  "test_next_departures_from_location_whenerroroccured",
                  0.5704779755406569
                ],
                [
                  "test_find_transit_coverage_in_cities_whensucceed",
                  "test_coverage_witin_a_city_whensucceed",
                  0.7144405084084116
                ],
                [
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  "test_next_departures_from_location_whensucceed",
                  0.5108634541356899
                ],
                [
                  "test_find_transit_coverage_in_cities_whenerroroccured",
                  "test_calculate_route_exclude_modes",
                  0.4896429925422007
                ],
                [
                  "test_next_departures_from_location_whenerroroccured",
                  "test_coverage_witin_a_city_whenerroroccured",
                  0.6402086946266208
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "test_coverage_nearby_whenerroroccured",
                  0.5345224838248488
                ],
                [
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  "test_next_departures_from_location_whenerroroccured",
                  0.7961540283151328
                ],
                [
                  "test_find_stations_nearby_whensucceed",
                  "test_next_departures_for_stations_whensucceed",
                  0.7175176469294
                ],
                [
                  "test_next_departures_for_stations_whensucceed",
                  "test_calculate_route_exclude_modes",
                  0.6123853466378205
                ],
                [
                  "test_calculate_route_whensucceed",
                  "test_calculate_route_short_route",
                  0.6422031218387207
                ],
                [
                  "test_find_stations_by_id_whensucceed",
                  "test_next_nearby_departures_of_station_whensucceed",
                  0.6535239827727161
                ],
                [
                  "test_find_stations_nearby_whenerroroccured",
                  "test_next_nearby_departures_of_station_whenerroroccured",
                  0.7769677791040541
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_coverage_witin_a_city_whensucceed",
                "false"
              ],
              [
                "test_find_stations_by_id_whensucceed",
                "false"
              ],
              [
                "test_find_stations_nearby_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_find_stations_by_name_whenerroroccured",
                "false"
              ],
              [
                "test_next_departures_from_location_whensucceed",
                "false"
              ],
              [
                "test_find_transit_coverage_in_cities_whensucceed",
                "false"
              ],
              [
                "test_calculate_route_whenerroroccured",
                "false"
              ],
              [
                "test_calculate_route_short_route",
                "false"
              ],
              [
                "test_next_departures_for_stations_whensucceed",
                "false"
              ],
              [
                "test_coverage_witin_a_city_whenerroroccured",
                "false"
              ],
              [
                "test_find_transit_coverage_in_cities_whenerroroccured",
                "false"
              ],
              [
                "test_calculate_route_whensucceed",
                "false"
              ],
              [
                "test_calculate_route_exclude_modes",
                "false"
              ],
              [
                "test_find_stations_by_id_whenerroroccured",
                "false"
              ],
              [
                "test_coverage_nearby_whenerroroccured",
                "false"
              ],
              [
                "test_next_departures_for_stations_whenerroroccured",
                "false"
              ],
              [
                "test_coverage_nearby_whensucceed",
                "false"
              ],
              [
                "test_next_nearby_departures_of_station_whensucceed",
                "false"
              ],
              [
                "test_find_stations_by_name_whensucceed",
                "false"
              ],
              [
                "test_next_nearby_departures_of_station_whenerroroccured",
                "false"
              ],
              [
                "test_next_departures_from_location_whenerroroccured",
                "false"
              ],
              [
                "test_calculate_route_include_modes",
                "false"
              ],
              [
                "test_find_stations_nearby_whenerroroccured",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 24
      }
    ]
  },
  {
    "name": "tests_\u0026_test_fleet_telematics_api.py",
    "testCases": [
      {
        "name": "FleetTelematicsApiTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_find_sequence_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_find_sequence_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_find_pickups_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_find_pickups_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_initiation",
                  "[PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_find_sequence_whenerroroccured",
                  "[]"
                ],
                [
                  "test_find_sequence_whensucceed",
                  "[]"
                ],
                [
                  "test_find_pickups_whenerroroccured",
                  "[]"
                ],
                [
                  "test_find_pickups_whensucceed",
                  "[]"
                ],
                [
                  "test_initiation",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_find_sequence_whenerroroccured",
                  "false"
                ],
                [
                  "test_find_sequence_whensucceed",
                  "false"
                ],
                [
                  "test_find_pickups_whenerroroccured",
                  "false"
                ],
                [
                  "test_find_pickups_whensucceed",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_find_sequence_whenerroroccured",
                  "false"
                ],
                [
                  "test_find_sequence_whensucceed",
                  "false"
                ],
                [
                  "test_find_pickups_whenerroroccured",
                  "false"
                ],
                [
                  "test_find_pickups_whensucceed",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_find_sequence_whenerroroccured",
                  "false"
                ],
                [
                  "test_find_sequence_whensucceed",
                  "false"
                ],
                [
                  "test_find_pickups_whenerroroccured",
                  "false"
                ],
                [
                  "test_find_pickups_whensucceed",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_find_sequence_whenerroroccured",
                  "false"
                ],
                [
                  "test_find_sequence_whensucceed",
                  "false"
                ],
                [
                  "test_find_pickups_whenerroroccured",
                  "false"
                ],
                [
                  "test_find_pickups_whensucceed",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_sequence_whenerroroccured",
                "false"
              ],
              [
                "test_find_sequence_whensucceed",
                "false"
              ],
              [
                "test_find_pickups_whenerroroccured",
                "false"
              ],
              [
                "test_find_pickups_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_find_sequence_whenerroroccured",
                "false"
              ],
              [
                "test_find_sequence_whensucceed",
                "false"
              ],
              [
                "test_find_pickups_whenerroroccured",
                "false"
              ],
              [
                "test_find_pickups_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_find_sequence_whenerroroccured",
                []
              ],
              [
                "test_find_sequence_whensucceed",
                []
              ],
              [
                "test_find_pickups_whenerroroccured",
                []
              ],
              [
                "test_find_pickups_whensucceed",
                []
              ],
              [
                "test_initiation",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_sequence_whenerroroccured",
                "false"
              ],
              [
                "test_find_sequence_whensucceed",
                "false"
              ],
              [
                "test_find_pickups_whenerroroccured",
                "false"
              ],
              [
                "test_find_pickups_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_sequence_whenerroroccured",
                "false"
              ],
              [
                "test_find_sequence_whensucceed",
                "false"
              ],
              [
                "test_find_pickups_whenerroroccured",
                "false"
              ],
              [
                "test_find_pickups_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_find_sequence_whenerroroccured",
                  "0"
                ],
                [
                  "test_find_sequence_whensucceed",
                  "0"
                ],
                [
                  "test_find_pickups_whenerroroccured",
                  "0"
                ],
                [
                  "test_find_pickups_whensucceed",
                  "0"
                ],
                [
                  "test_initiation",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_find_sequence_whenerroroccured",
                  "0"
                ],
                [
                  "test_find_sequence_whensucceed",
                  "0"
                ],
                [
                  "test_find_pickups_whenerroroccured",
                  "0"
                ],
                [
                  "test_find_pickups_whensucceed",
                  "0"
                ],
                [
                  "test_initiation",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_find_sequence_whenerroroccured",
                "false"
              ],
              [
                "test_find_sequence_whensucceed",
                "false"
              ],
              [
                "test_find_pickups_whenerroroccured",
                "false"
              ],
              [
                "test_find_pickups_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_sequence_whenerroroccured",
                "false"
              ],
              [
                "test_find_sequence_whensucceed",
                "false"
              ],
              [
                "test_find_pickups_whenerroroccured",
                "false"
              ],
              [
                "test_find_pickups_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_sequence_whenerroroccured",
                "1"
              ],
              [
                "test_find_sequence_whensucceed",
                "2"
              ],
              [
                "test_find_pickups_whenerroroccured",
                "1"
              ],
              [
                "test_find_pickups_whensucceed",
                "2"
              ],
              [
                "test_initiation",
                "3"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": true,
            "detail": [
              [
                "test_find_sequence_whenerroroccured",
                [
                  "modes",
                  "start",
                  "intermediate_destinations",
                  "end",
                  "expected_response"
                ]
              ],
              [
                "test_find_sequence_whensucceed",
                [
                  "modes",
                  "response",
                  "start",
                  "intermediate_destinations",
                  "end",
                  "expected_response"
                ]
              ],
              [
                "test_find_pickups_whenerroroccured",
                [
                  "modes",
                  "rest_times",
                  "start",
                  "driver_cost",
                  "intermediate_destinations",
                  "end",
                  "departure",
                  "vehicle_cost",
                  "expected_response",
                  "max_detour",
                  "capacity"
                ]
              ],
              [
                "test_find_pickups_whensucceed",
                [
                  "modes",
                  "rest_times",
                  "response",
                  "start",
                  "driver_cost",
                  "intermediate_destinations",
                  "end",
                  "departure",
                  "vehicle_cost",
                  "expected_response",
                  "max_detour",
                  "capacity"
                ]
              ],
              [
                "test_initiation",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_find_sequence_whenerroroccured",
                [
                  "self._api"
                ]
              ],
              [
                "test_find_sequence_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_find_pickups_whenerroroccured",
                [
                  "self._api"
                ]
              ],
              [
                "test_find_pickups_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_initiation",
                [
                  "self._api"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5588321647781005,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_initiation",
                  "test_find_sequence_whensucceed",
                  0.1009049958219026
                ],
                [
                  "test_initiation",
                  "test_find_pickups_whenerroroccured",
                  0.0588737723739079
                ],
                [
                  "test_initiation",
                  "test_find_pickups_whensucceed",
                  0.0819669844484913
                ],
                [
                  "test_find_sequence_whenerroroccured",
                  "test_find_pickups_whensucceed",
                  0.8186981040082737
                ],
                [
                  "test_find_sequence_whenerroroccured",
                  "test_find_pickups_whenerroroccured",
                  0.8292524157305181
                ],
                [
                  "test_find_sequence_whensucceed",
                  "test_find_sequence_whenerroroccured",
                  0.9816657231206732
                ],
                [
                  "test_initiation",
                  "test_find_sequence_whenerroroccured",
                  0.0664573230774577
                ],
                [
                  "test_find_pickups_whensucceed",
                  "test_find_pickups_whenerroroccured",
                  0.9918717409907627
                ],
                [
                  "test_find_sequence_whensucceed",
                  "test_find_pickups_whensucceed",
                  0.835601961678421
                ],
                [
                  "test_find_sequence_whensucceed",
                  "test_find_pickups_whenerroroccured",
                  0.823028626530597
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_find_sequence_whenerroroccured",
                "false"
              ],
              [
                "test_find_sequence_whensucceed",
                "false"
              ],
              [
                "test_find_pickups_whenerroroccured",
                "false"
              ],
              [
                "test_find_pickups_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      }
    ]
  },
  {
    "name": "tests_\u0026_test_geocoder_reverse_api.py",
    "testCases": [
      {
        "name": "GeocoderReverseApiTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_retrieve_addresses_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_initiation",
                  "[PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_retrieve_addresses_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_retrieve_addresses_whenerroroccured",
                  "[]"
                ],
                [
                  "test_initiation",
                  "[]"
                ],
                [
                  "test_retrieve_addresses_whensucceed",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_retrieve_addresses_whenerroroccured",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_retrieve_addresses_whensucceed",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_retrieve_addresses_whenerroroccured",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_retrieve_addresses_whensucceed",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_retrieve_addresses_whenerroroccured",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_retrieve_addresses_whensucceed",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_retrieve_addresses_whenerroroccured",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_retrieve_addresses_whensucceed",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_retrieve_addresses_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_retrieve_addresses_whensucceed",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_retrieve_addresses_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_retrieve_addresses_whensucceed",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_retrieve_addresses_whenerroroccured",
                []
              ],
              [
                "test_initiation",
                []
              ],
              [
                "test_retrieve_addresses_whensucceed",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_retrieve_addresses_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_retrieve_addresses_whensucceed",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_retrieve_addresses_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_retrieve_addresses_whensucceed",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_retrieve_addresses_whenerroroccured",
                  "0"
                ],
                [
                  "test_initiation",
                  "0"
                ],
                [
                  "test_retrieve_addresses_whensucceed",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_retrieve_addresses_whenerroroccured",
                  "0"
                ],
                [
                  "test_initiation",
                  "0"
                ],
                [
                  "test_retrieve_addresses_whensucceed",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_retrieve_addresses_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_retrieve_addresses_whensucceed",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_retrieve_addresses_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_retrieve_addresses_whensucceed",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_retrieve_addresses_whenerroroccured",
                "1"
              ],
              [
                "test_initiation",
                "3"
              ],
              [
                "test_retrieve_addresses_whensucceed",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_retrieve_addresses_whenerroroccured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_initiation",
                []
              ],
              [
                "test_retrieve_addresses_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_retrieve_addresses_whenerroroccured",
                [
                  "self._api"
                ]
              ],
              [
                "test_initiation",
                [
                  "self._api"
                ]
              ],
              [
                "test_retrieve_addresses_whensucceed",
                [
                  "self._api"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.3939611666902578,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_initiation",
                  "test_retrieve_addresses_whensucceed",
                  0.29364006844420665
                ],
                [
                  "test_retrieve_addresses_whensucceed",
                  "test_retrieve_addresses_whenerroroccured",
                  0.737057642422876
                ],
                [
                  "test_initiation",
                  "test_retrieve_addresses_whenerroroccured",
                  0.15118578920369088
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_retrieve_addresses_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_retrieve_addresses_whensucceed",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_destination_weather_api.py",
    "testCases": [
      {
        "name": "DestinationWeatherApiTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_weather_product_type_alerts",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_weather_product_type_nws_alerts",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_invalid_request_is_thrown",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_unauthorized_is_thrown",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_weather_product_type_forecast_7days",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_weather_product_type_forecast_7days_simple",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_weather_product_type_forecast_astronomy",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_weather_product_type_forecast_hourly",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_initiation",
                  "[PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_weather_for_location_name",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_weather_for_zip_code",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_weather_for_coordinates",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_weather_product_type_alerts",
                  "[]"
                ],
                [
                  "test_weather_product_type_nws_alerts",
                  "[]"
                ],
                [
                  "test_invalid_request_is_thrown",
                  "[]"
                ],
                [
                  "test_unauthorized_is_thrown",
                  "[]"
                ],
                [
                  "test_weather_product_type_forecast_7days",
                  "[]"
                ],
                [
                  "test_weather_product_type_forecast_7days_simple",
                  "[]"
                ],
                [
                  "test_weather_product_type_forecast_astronomy",
                  "[]"
                ],
                [
                  "test_weather_product_type_forecast_hourly",
                  "[]"
                ],
                [
                  "test_initiation",
                  "[]"
                ],
                [
                  "test_weather_for_location_name",
                  "[]"
                ],
                [
                  "test_weather_for_zip_code",
                  "[]"
                ],
                [
                  "test_weather_for_coordinates",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_weather_product_type_alerts",
                  "false"
                ],
                [
                  "test_weather_product_type_nws_alerts",
                  "false"
                ],
                [
                  "test_invalid_request_is_thrown",
                  "false"
                ],
                [
                  "test_unauthorized_is_thrown",
                  "false"
                ],
                [
                  "test_weather_product_type_forecast_7days",
                  "false"
                ],
                [
                  "test_weather_product_type_forecast_7days_simple",
                  "false"
                ],
                [
                  "test_weather_product_type_forecast_astronomy",
                  "false"
                ],
                [
                  "test_weather_product_type_forecast_hourly",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_weather_for_location_name",
                  "false"
                ],
                [
                  "test_weather_for_zip_code",
                  "false"
                ],
                [
                  "test_weather_for_coordinates",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_weather_product_type_alerts",
                  "false"
                ],
                [
                  "test_weather_product_type_nws_alerts",
                  "false"
                ],
                [
                  "test_invalid_request_is_thrown",
                  "false"
                ],
                [
                  "test_unauthorized_is_thrown",
                  "false"
                ],
                [
                  "test_weather_product_type_forecast_7days",
                  "false"
                ],
                [
                  "test_weather_product_type_forecast_7days_simple",
                  "false"
                ],
                [
                  "test_weather_product_type_forecast_astronomy",
                  "false"
                ],
                [
                  "test_weather_product_type_forecast_hourly",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_weather_for_location_name",
                  "false"
                ],
                [
                  "test_weather_for_zip_code",
                  "false"
                ],
                [
                  "test_weather_for_coordinates",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_weather_product_type_alerts",
                  "false"
                ],
                [
                  "test_weather_product_type_nws_alerts",
                  "false"
                ],
                [
                  "test_invalid_request_is_thrown",
                  "false"
                ],
                [
                  "test_unauthorized_is_thrown",
                  "false"
                ],
                [
                  "test_weather_product_type_forecast_7days",
                  "false"
                ],
                [
                  "test_weather_product_type_forecast_7days_simple",
                  "false"
                ],
                [
                  "test_weather_product_type_forecast_astronomy",
                  "false"
                ],
                [
                  "test_weather_product_type_forecast_hourly",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_weather_for_location_name",
                  "false"
                ],
                [
                  "test_weather_for_zip_code",
                  "false"
                ],
                [
                  "test_weather_for_coordinates",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_weather_product_type_alerts",
                  "false"
                ],
                [
                  "test_weather_product_type_nws_alerts",
                  "false"
                ],
                [
                  "test_invalid_request_is_thrown",
                  "false"
                ],
                [
                  "test_unauthorized_is_thrown",
                  "false"
                ],
                [
                  "test_weather_product_type_forecast_7days",
                  "false"
                ],
                [
                  "test_weather_product_type_forecast_7days_simple",
                  "false"
                ],
                [
                  "test_weather_product_type_forecast_astronomy",
                  "false"
                ],
                [
                  "test_weather_product_type_forecast_hourly",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_weather_for_location_name",
                  "false"
                ],
                [
                  "test_weather_for_zip_code",
                  "false"
                ],
                [
                  "test_weather_for_coordinates",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_weather_product_type_alerts",
                "false"
              ],
              [
                "test_weather_product_type_nws_alerts",
                "false"
              ],
              [
                "test_invalid_request_is_thrown",
                "false"
              ],
              [
                "test_unauthorized_is_thrown",
                "false"
              ],
              [
                "test_weather_product_type_forecast_7days",
                "false"
              ],
              [
                "test_weather_product_type_forecast_7days_simple",
                "false"
              ],
              [
                "test_weather_product_type_forecast_astronomy",
                "false"
              ],
              [
                "test_weather_product_type_forecast_hourly",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_weather_for_location_name",
                "false"
              ],
              [
                "test_weather_for_zip_code",
                "false"
              ],
              [
                "test_weather_for_coordinates",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_weather_product_type_alerts",
                "false"
              ],
              [
                "test_weather_product_type_nws_alerts",
                "false"
              ],
              [
                "test_invalid_request_is_thrown",
                "false"
              ],
              [
                "test_unauthorized_is_thrown",
                "false"
              ],
              [
                "test_weather_product_type_forecast_7days",
                "false"
              ],
              [
                "test_weather_product_type_forecast_7days_simple",
                "false"
              ],
              [
                "test_weather_product_type_forecast_astronomy",
                "false"
              ],
              [
                "test_weather_product_type_forecast_hourly",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_weather_for_location_name",
                "false"
              ],
              [
                "test_weather_for_zip_code",
                "false"
              ],
              [
                "test_weather_for_coordinates",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_weather_product_type_alerts",
                []
              ],
              [
                "test_weather_product_type_nws_alerts",
                []
              ],
              [
                "test_invalid_request_is_thrown",
                []
              ],
              [
                "test_unauthorized_is_thrown",
                []
              ],
              [
                "test_weather_product_type_forecast_7days",
                []
              ],
              [
                "test_weather_product_type_forecast_7days_simple",
                []
              ],
              [
                "test_weather_product_type_forecast_astronomy",
                []
              ],
              [
                "test_weather_product_type_forecast_hourly",
                []
              ],
              [
                "test_initiation",
                []
              ],
              [
                "test_weather_for_location_name",
                []
              ],
              [
                "test_weather_for_zip_code",
                []
              ],
              [
                "test_weather_for_coordinates",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_weather_product_type_alerts",
                "false"
              ],
              [
                "test_weather_product_type_nws_alerts",
                "false"
              ],
              [
                "test_invalid_request_is_thrown",
                "false"
              ],
              [
                "test_unauthorized_is_thrown",
                "false"
              ],
              [
                "test_weather_product_type_forecast_7days",
                "false"
              ],
              [
                "test_weather_product_type_forecast_7days_simple",
                "false"
              ],
              [
                "test_weather_product_type_forecast_astronomy",
                "false"
              ],
              [
                "test_weather_product_type_forecast_hourly",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_weather_for_location_name",
                "false"
              ],
              [
                "test_weather_for_zip_code",
                "false"
              ],
              [
                "test_weather_for_coordinates",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_weather_product_type_alerts",
                "false"
              ],
              [
                "test_weather_product_type_nws_alerts",
                "false"
              ],
              [
                "test_invalid_request_is_thrown",
                "false"
              ],
              [
                "test_unauthorized_is_thrown",
                "false"
              ],
              [
                "test_weather_product_type_forecast_7days",
                "false"
              ],
              [
                "test_weather_product_type_forecast_7days_simple",
                "false"
              ],
              [
                "test_weather_product_type_forecast_astronomy",
                "false"
              ],
              [
                "test_weather_product_type_forecast_hourly",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_weather_for_location_name",
                "false"
              ],
              [
                "test_weather_for_zip_code",
                "false"
              ],
              [
                "test_weather_for_coordinates",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_weather_product_type_alerts",
                  "0"
                ],
                [
                  "test_weather_product_type_nws_alerts",
                  "0"
                ],
                [
                  "test_invalid_request_is_thrown",
                  "0"
                ],
                [
                  "test_unauthorized_is_thrown",
                  "0"
                ],
                [
                  "test_weather_product_type_forecast_7days",
                  "0"
                ],
                [
                  "test_weather_product_type_forecast_7days_simple",
                  "0"
                ],
                [
                  "test_weather_product_type_forecast_astronomy",
                  "0"
                ],
                [
                  "test_weather_product_type_forecast_hourly",
                  "0"
                ],
                [
                  "test_initiation",
                  "0"
                ],
                [
                  "test_weather_for_location_name",
                  "0"
                ],
                [
                  "test_weather_for_zip_code",
                  "0"
                ],
                [
                  "test_weather_for_coordinates",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_weather_product_type_alerts",
                  "0"
                ],
                [
                  "test_weather_product_type_nws_alerts",
                  "0"
                ],
                [
                  "test_invalid_request_is_thrown",
                  "0"
                ],
                [
                  "test_unauthorized_is_thrown",
                  "0"
                ],
                [
                  "test_weather_product_type_forecast_7days",
                  "0"
                ],
                [
                  "test_weather_product_type_forecast_7days_simple",
                  "0"
                ],
                [
                  "test_weather_product_type_forecast_astronomy",
                  "0"
                ],
                [
                  "test_weather_product_type_forecast_hourly",
                  "0"
                ],
                [
                  "test_initiation",
                  "0"
                ],
                [
                  "test_weather_for_location_name",
                  "0"
                ],
                [
                  "test_weather_for_zip_code",
                  "0"
                ],
                [
                  "test_weather_for_coordinates",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_weather_product_type_alerts",
                "false"
              ],
              [
                "test_weather_product_type_nws_alerts",
                "false"
              ],
              [
                "test_invalid_request_is_thrown",
                "false"
              ],
              [
                "test_unauthorized_is_thrown",
                "false"
              ],
              [
                "test_weather_product_type_forecast_7days",
                "false"
              ],
              [
                "test_weather_product_type_forecast_7days_simple",
                "false"
              ],
              [
                "test_weather_product_type_forecast_astronomy",
                "false"
              ],
              [
                "test_weather_product_type_forecast_hourly",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_weather_for_location_name",
                "false"
              ],
              [
                "test_weather_for_zip_code",
                "false"
              ],
              [
                "test_weather_for_coordinates",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_weather_product_type_alerts",
                "false"
              ],
              [
                "test_weather_product_type_nws_alerts",
                "false"
              ],
              [
                "test_invalid_request_is_thrown",
                "false"
              ],
              [
                "test_unauthorized_is_thrown",
                "false"
              ],
              [
                "test_weather_product_type_forecast_7days",
                "false"
              ],
              [
                "test_weather_product_type_forecast_7days_simple",
                "false"
              ],
              [
                "test_weather_product_type_forecast_astronomy",
                "false"
              ],
              [
                "test_weather_product_type_forecast_hourly",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_weather_for_location_name",
                "false"
              ],
              [
                "test_weather_for_zip_code",
                "false"
              ],
              [
                "test_weather_for_coordinates",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_weather_product_type_alerts",
                "2"
              ],
              [
                "test_weather_product_type_nws_alerts",
                "2"
              ],
              [
                "test_invalid_request_is_thrown",
                "1"
              ],
              [
                "test_unauthorized_is_thrown",
                "1"
              ],
              [
                "test_weather_product_type_forecast_7days",
                "2"
              ],
              [
                "test_weather_product_type_forecast_7days_simple",
                "2"
              ],
              [
                "test_weather_product_type_forecast_astronomy",
                "2"
              ],
              [
                "test_weather_product_type_forecast_hourly",
                "2"
              ],
              [
                "test_initiation",
                "3"
              ],
              [
                "test_weather_for_location_name",
                "2"
              ],
              [
                "test_weather_for_zip_code",
                "2"
              ],
              [
                "test_weather_for_coordinates",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_weather_product_type_alerts",
                [
                  "product",
                  "expectedResponse",
                  "response",
                  "zip_code"
                ]
              ],
              [
                "test_weather_product_type_nws_alerts",
                [
                  "product",
                  "expectedResponse",
                  "response",
                  "zip_code"
                ]
              ],
              [
                "test_invalid_request_is_thrown",
                [
                  "product",
                  "expectedResponse",
                  "name"
                ]
              ],
              [
                "test_unauthorized_is_thrown",
                [
                  "product",
                  "expectedResponse",
                  "name"
                ]
              ],
              [
                "test_weather_product_type_forecast_7days",
                [
                  "product",
                  "expectedResponse",
                  "response",
                  "zip_code"
                ]
              ],
              [
                "test_weather_product_type_forecast_7days_simple",
                [
                  "product",
                  "expectedResponse",
                  "response",
                  "zip_code"
                ]
              ],
              [
                "test_weather_product_type_forecast_astronomy",
                [
                  "product",
                  "expectedResponse",
                  "response",
                  "zip_code"
                ]
              ],
              [
                "test_weather_product_type_forecast_hourly",
                [
                  "product",
                  "expectedResponse",
                  "response",
                  "zip_code"
                ]
              ],
              [
                "test_initiation",
                []
              ],
              [
                "test_weather_for_location_name",
                [
                  "product",
                  "expectedResponse",
                  "response",
                  "name"
                ]
              ],
              [
                "test_weather_for_zip_code",
                [
                  "product",
                  "expectedResponse",
                  "response",
                  "zip_code"
                ]
              ],
              [
                "test_weather_for_coordinates",
                [
                  "product",
                  "expectedResponse",
                  "response",
                  "latitude",
                  "longitude"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_weather_product_type_alerts",
                [
                  "self._api"
                ]
              ],
              [
                "test_weather_product_type_nws_alerts",
                [
                  "self._api"
                ]
              ],
              [
                "test_invalid_request_is_thrown",
                [
                  "self._api"
                ]
              ],
              [
                "test_unauthorized_is_thrown",
                [
                  "self._api"
                ]
              ],
              [
                "test_weather_product_type_forecast_7days",
                [
                  "self._api"
                ]
              ],
              [
                "test_weather_product_type_forecast_7days_simple",
                [
                  "self._api"
                ]
              ],
              [
                "test_weather_product_type_forecast_astronomy",
                [
                  "self._api"
                ]
              ],
              [
                "test_weather_product_type_forecast_hourly",
                [
                  "self._api"
                ]
              ],
              [
                "test_initiation",
                [
                  "self._api"
                ]
              ],
              [
                "test_weather_for_location_name",
                [
                  "self._api"
                ]
              ],
              [
                "test_weather_for_zip_code",
                [
                  "self._api"
                ]
              ],
              [
                "test_weather_for_coordinates",
                [
                  "self._api"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7519358052987334,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_weather_for_location_name",
                  "test_weather_product_type_nws_alerts",
                  0.8476451465883793
                ],
                [
                  "test_weather_for_coordinates",
                  "test_weather_product_type_nws_alerts",
                  0.7526334547427613
                ],
                [
                  "test_initiation",
                  "test_unauthorized_is_thrown",
                  0.22566773346211
                ],
                [
                  "test_invalid_request_is_thrown",
                  "test_weather_for_zip_code",
                  0.720294057598537
                ],
                [
                  "test_weather_for_location_name",
                  "test_weather_product_type_forecast_astronomy",
                  0.8536832237299736
                ],
                [
                  "test_weather_product_type_forecast_7days",
                  "test_weather_product_type_forecast_7days_simple",
                  0.9679550283649222
                ],
                [
                  "test_unauthorized_is_thrown",
                  "test_weather_product_type_alerts",
                  0.7584812152355406
                ],
                [
                  "test_weather_for_zip_code",
                  "test_weather_product_type_alerts",
                  0.9401880564188067
                ],
                [
                  "test_weather_product_type_forecast_7days_simple",
                  "test_weather_product_type_forecast_astronomy",
                  0.9352331628186772
                ],
                [
                  "test_weather_for_location_name",
                  "test_weather_product_type_forecast_7days",
                  0.8900247334690085
                ],
                [
                  "test_weather_for_location_name",
                  "test_weather_product_type_forecast_hourly",
                  0.8536832237299736
                ],
                [
                  "test_invalid_request_is_thrown",
                  "test_weather_for_coordinates",
                  0.7062065812274455
                ],
                [
                  "test_weather_for_coordinates",
                  "test_weather_for_zip_code",
                  0.8218411287420957
                ],
                [
                  "test_invalid_request_is_thrown",
                  "test_weather_product_type_alerts",
                  0.7115184490941613
                ],
                [
                  "test_weather_for_coordinates",
                  "test_weather_product_type_forecast_7days_simple",
                  0.8292831913012185
                ],
                [
                  "test_weather_product_type_alerts",
                  "test_weather_product_type_forecast_7days",
                  0.9410092614535138
                ],
                [
                  "test_weather_for_coordinates",
                  "test_weather_product_type_forecast_7days",
                  0.8567373142345786
                ],
                [
                  "test_initiation",
                  "test_weather_product_type_nws_alerts",
                  0.2970442628930023
                ],
                [
                  "test_weather_for_coordinates",
                  "test_weather_product_type_forecast_astronomy",
                  0.757579844981551
                ],
                [
                  "test_invalid_request_is_thrown",
                  "test_unauthorized_is_thrown",
                  0.8670162465128156
                ],
                [
                  "test_unauthorized_is_thrown",
                  "test_weather_product_type_forecast_hourly",
                  0.7519710297199615
                ],
                [
                  "test_weather_for_location_name",
                  "test_weather_for_zip_code",
                  0.8884955150986626
                ],
                [
                  "test_unauthorized_is_thrown",
                  "test_weather_for_location_name",
                  0.8506264994993676
                ],
                [
                  "test_weather_product_type_forecast_7days",
                  "test_weather_product_type_forecast_hourly",
                  0.9468709523731814
                ],
                [
                  "test_weather_for_zip_code",
                  "test_weather_product_type_forecast_7days",
                  0.9612103512585141
                ],
                [
                  "test_weather_product_type_alerts",
                  "test_weather_product_type_forecast_7days_simple",
                  0.9108546463618902
                ],
                [
                  "test_unauthorized_is_thrown",
                  "test_weather_for_coordinates",
                  0.75281874506369
                ],
                [
                  "test_weather_for_zip_code",
                  "test_weather_product_type_forecast_7days_simple",
                  0.9304083928170916
                ],
                [
                  "test_initiation",
                  "test_weather_product_type_forecast_astronomy",
                  0.29559878344928797
                ],
                [
                  "test_invalid_request_is_thrown",
                  "test_weather_product_type_forecast_hourly",
                  0.7054113537458321
                ],
                [
                  "test_weather_product_type_forecast_hourly",
                  "test_weather_product_type_nws_alerts",
                  0.9463527228834344
                ],
                [
                  "test_invalid_request_is_thrown",
                  "test_weather_for_location_name",
                  0.7979583877950542
                ],
                [
                  "test_weather_product_type_alerts",
                  "test_weather_product_type_forecast_astronomy",
                  0.9455662336814812
                ],
                [
                  "test_initiation",
                  "test_weather_product_type_forecast_7days_simple",
                  0.2847473987257497
                ],
                [
                  "test_weather_product_type_forecast_astronomy",
                  "test_weather_product_type_forecast_hourly",
                  0.970873786407767
                ],
                [
                  "test_initiation",
                  "test_weather_product_type_forecast_7days",
                  0.29417420270727607
                ],
                [
                  "test_weather_for_zip_code",
                  "test_weather_product_type_forecast_astronomy",
                  0.9268402956074873
                ],
                [
                  "test_weather_product_type_forecast_7days_simple",
                  "test_weather_product_type_forecast_hourly",
                  0.9352331628186772
                ],
                [
                  "test_unauthorized_is_thrown",
                  "test_weather_product_type_nws_alerts",
                  0.7434602978625828
                ],
                [
                  "test_weather_for_zip_code",
                  "test_weather_product_type_nws_alerts",
                  0.9215686274509806
                ],
                [
                  "test_initiation",
                  "test_weather_for_coordinates",
                  0.29123468555367926
                ],
                [
                  "test_weather_product_type_alerts",
                  "test_weather_product_type_nws_alerts",
                  0.9701940582194069
                ],
                [
                  "test_weather_product_type_forecast_7days",
                  "test_weather_product_type_nws_alerts",
                  0.9320827648567409
                ],
                [
                  "test_initiation",
                  "test_weather_product_type_alerts",
                  0.30304576336566325
                ],
                [
                  "test_weather_for_location_name",
                  "test_weather_product_type_alerts",
                  0.8647710210232319
                ],
                [
                  "test_weather_for_location_name",
                  "test_weather_product_type_forecast_7days_simple",
                  0.861503916130476
                ],
                [
                  "test_initiation",
                  "test_weather_for_zip_code",
                  0.2970442628930023
                ],
                [
                  "test_unauthorized_is_thrown",
                  "test_weather_for_zip_code",
                  0.7678360453334871
                ],
                [
                  "test_weather_for_coordinates",
                  "test_weather_product_type_alerts",
                  0.7678397071389106
                ],
                [
                  "test_weather_for_location_name",
                  "test_weather_for_coordinates",
                  0.8560990806335566
                ],
                [
                  "test_invalid_request_is_thrown",
                  "test_weather_product_type_forecast_7days",
                  0.7359800721939872
                ],
                [
                  "test_invalid_request_is_thrown",
                  "test_weather_product_type_forecast_astronomy",
                  0.7054113537458321
                ],
                [
                  "test_invalid_request_is_thrown",
                  "test_weather_product_type_forecast_7days_simple",
                  0.7233555441435721
                ],
                [
                  "test_weather_product_type_forecast_astronomy",
                  "test_weather_product_type_nws_alerts",
                  0.9463527228834344
                ],
                [
                  "test_weather_product_type_alerts",
                  "test_weather_product_type_forecast_hourly",
                  0.9455662336814812
                ],
                [
                  "test_initiation",
                  "test_invalid_request_is_thrown",
                  0.21169509870286277
                ],
                [
                  "test_weather_for_zip_code",
                  "test_weather_product_type_forecast_hourly",
                  0.9268402956074873
                ],
                [
                  "test_weather_product_type_forecast_7days_simple",
                  "test_weather_product_type_nws_alerts",
                  0.9116122636692716
                ],
                [
                  "test_weather_for_coordinates",
                  "test_weather_product_type_forecast_hourly",
                  0.757579844981551
                ],
                [
                  "test_invalid_request_is_thrown",
                  "test_weather_product_type_nws_alerts",
                  0.6974275795795359
                ],
                [
                  "test_unauthorized_is_thrown",
                  "test_weather_product_type_forecast_7days",
                  0.7845573930760598
                ],
                [
                  "test_initiation",
                  "test_weather_for_location_name",
                  0.309426373877638
                ],
                [
                  "test_unauthorized_is_thrown",
                  "test_weather_product_type_forecast_7days_simple",
                  0.7710996009560598
                ],
                [
                  "test_unauthorized_is_thrown",
                  "test_weather_product_type_forecast_astronomy",
                  0.7519710297199615
                ],
                [
                  "test_initiation",
                  "test_weather_product_type_forecast_hourly",
                  0.29559878344928797
                ],
                [
                  "test_weather_product_type_forecast_7days",
                  "test_weather_product_type_forecast_astronomy",
                  0.9468709523731814
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_weather_product_type_alerts",
                "false"
              ],
              [
                "test_weather_product_type_nws_alerts",
                "false"
              ],
              [
                "test_invalid_request_is_thrown",
                "false"
              ],
              [
                "test_unauthorized_is_thrown",
                "false"
              ],
              [
                "test_weather_product_type_forecast_7days",
                "false"
              ],
              [
                "test_weather_product_type_forecast_7days_simple",
                "false"
              ],
              [
                "test_weather_product_type_forecast_astronomy",
                "false"
              ],
              [
                "test_weather_product_type_forecast_hourly",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_weather_for_location_name",
                "false"
              ],
              [
                "test_weather_for_zip_code",
                "false"
              ],
              [
                "test_weather_for_coordinates",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 12
      }
    ]
  },
  {
    "name": "tests_\u0026_test_ev_charging_stations_api.py",
    "testCases": [
      {
        "name": "EVChargingStationsApi",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_get_station_details_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_initiation",
                  "[PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_get_stations_corridor_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_get_stations_corridor_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_get_station_details_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_get_stations_bounding_box_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_get_stations_circular_search_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_get_stations_bounding_box_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_get_stations_circular_search_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_get_station_details_whenerroroccured",
                  "[]"
                ],
                [
                  "test_initiation",
                  "[]"
                ],
                [
                  "test_get_stations_corridor_whensucceed",
                  "[]"
                ],
                [
                  "test_get_stations_corridor_whenerroroccured",
                  "[]"
                ],
                [
                  "test_get_station_details_whensucceed",
                  "[]"
                ],
                [
                  "test_get_stations_bounding_box_whensucceed",
                  "[]"
                ],
                [
                  "test_get_stations_circular_search_whensucceed",
                  "[]"
                ],
                [
                  "test_get_stations_bounding_box_whenerroroccured",
                  "[]"
                ],
                [
                  "test_get_stations_circular_search_whenerroroccured",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_get_station_details_whenerroroccured",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_get_stations_corridor_whensucceed",
                  "false"
                ],
                [
                  "test_get_stations_corridor_whenerroroccured",
                  "false"
                ],
                [
                  "test_get_station_details_whensucceed",
                  "false"
                ],
                [
                  "test_get_stations_bounding_box_whensucceed",
                  "false"
                ],
                [
                  "test_get_stations_circular_search_whensucceed",
                  "false"
                ],
                [
                  "test_get_stations_bounding_box_whenerroroccured",
                  "false"
                ],
                [
                  "test_get_stations_circular_search_whenerroroccured",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_get_station_details_whenerroroccured",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_get_stations_corridor_whensucceed",
                  "false"
                ],
                [
                  "test_get_stations_corridor_whenerroroccured",
                  "false"
                ],
                [
                  "test_get_station_details_whensucceed",
                  "false"
                ],
                [
                  "test_get_stations_bounding_box_whensucceed",
                  "false"
                ],
                [
                  "test_get_stations_circular_search_whensucceed",
                  "false"
                ],
                [
                  "test_get_stations_bounding_box_whenerroroccured",
                  "false"
                ],
                [
                  "test_get_stations_circular_search_whenerroroccured",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_get_station_details_whenerroroccured",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_get_stations_corridor_whensucceed",
                  "false"
                ],
                [
                  "test_get_stations_corridor_whenerroroccured",
                  "false"
                ],
                [
                  "test_get_station_details_whensucceed",
                  "false"
                ],
                [
                  "test_get_stations_bounding_box_whensucceed",
                  "false"
                ],
                [
                  "test_get_stations_circular_search_whensucceed",
                  "false"
                ],
                [
                  "test_get_stations_bounding_box_whenerroroccured",
                  "false"
                ],
                [
                  "test_get_stations_circular_search_whenerroroccured",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_get_station_details_whenerroroccured",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_get_stations_corridor_whensucceed",
                  "false"
                ],
                [
                  "test_get_stations_corridor_whenerroroccured",
                  "false"
                ],
                [
                  "test_get_station_details_whensucceed",
                  "false"
                ],
                [
                  "test_get_stations_bounding_box_whensucceed",
                  "false"
                ],
                [
                  "test_get_stations_circular_search_whensucceed",
                  "false"
                ],
                [
                  "test_get_stations_bounding_box_whenerroroccured",
                  "false"
                ],
                [
                  "test_get_stations_circular_search_whenerroroccured",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_station_details_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_get_stations_corridor_whensucceed",
                "false"
              ],
              [
                "test_get_stations_corridor_whenerroroccured",
                "false"
              ],
              [
                "test_get_station_details_whensucceed",
                "false"
              ],
              [
                "test_get_stations_bounding_box_whensucceed",
                "false"
              ],
              [
                "test_get_stations_circular_search_whensucceed",
                "false"
              ],
              [
                "test_get_stations_bounding_box_whenerroroccured",
                "false"
              ],
              [
                "test_get_stations_circular_search_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_get_station_details_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_get_stations_corridor_whensucceed",
                "false"
              ],
              [
                "test_get_stations_corridor_whenerroroccured",
                "false"
              ],
              [
                "test_get_station_details_whensucceed",
                "false"
              ],
              [
                "test_get_stations_bounding_box_whensucceed",
                "false"
              ],
              [
                "test_get_stations_circular_search_whensucceed",
                "false"
              ],
              [
                "test_get_stations_bounding_box_whenerroroccured",
                "false"
              ],
              [
                "test_get_stations_circular_search_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_get_station_details_whenerroroccured",
                []
              ],
              [
                "test_initiation",
                []
              ],
              [
                "test_get_stations_corridor_whensucceed",
                []
              ],
              [
                "test_get_stations_corridor_whenerroroccured",
                []
              ],
              [
                "test_get_station_details_whensucceed",
                []
              ],
              [
                "test_get_stations_bounding_box_whensucceed",
                []
              ],
              [
                "test_get_stations_circular_search_whensucceed",
                []
              ],
              [
                "test_get_stations_bounding_box_whenerroroccured",
                []
              ],
              [
                "test_get_stations_circular_search_whenerroroccured",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_station_details_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_get_stations_corridor_whensucceed",
                "false"
              ],
              [
                "test_get_stations_corridor_whenerroroccured",
                "false"
              ],
              [
                "test_get_station_details_whensucceed",
                "false"
              ],
              [
                "test_get_stations_bounding_box_whensucceed",
                "false"
              ],
              [
                "test_get_stations_circular_search_whensucceed",
                "false"
              ],
              [
                "test_get_stations_bounding_box_whenerroroccured",
                "false"
              ],
              [
                "test_get_stations_circular_search_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_station_details_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_get_stations_corridor_whensucceed",
                "false"
              ],
              [
                "test_get_stations_corridor_whenerroroccured",
                "false"
              ],
              [
                "test_get_station_details_whensucceed",
                "false"
              ],
              [
                "test_get_stations_bounding_box_whensucceed",
                "false"
              ],
              [
                "test_get_stations_circular_search_whensucceed",
                "false"
              ],
              [
                "test_get_stations_bounding_box_whenerroroccured",
                "false"
              ],
              [
                "test_get_stations_circular_search_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_get_station_details_whenerroroccured",
                  "0"
                ],
                [
                  "test_initiation",
                  "0"
                ],
                [
                  "test_get_stations_corridor_whensucceed",
                  "0"
                ],
                [
                  "test_get_stations_corridor_whenerroroccured",
                  "0"
                ],
                [
                  "test_get_station_details_whensucceed",
                  "0"
                ],
                [
                  "test_get_stations_bounding_box_whensucceed",
                  "0"
                ],
                [
                  "test_get_stations_circular_search_whensucceed",
                  "0"
                ],
                [
                  "test_get_stations_bounding_box_whenerroroccured",
                  "0"
                ],
                [
                  "test_get_stations_circular_search_whenerroroccured",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_get_station_details_whenerroroccured",
                  "0"
                ],
                [
                  "test_initiation",
                  "0"
                ],
                [
                  "test_get_stations_corridor_whensucceed",
                  "0"
                ],
                [
                  "test_get_stations_corridor_whenerroroccured",
                  "0"
                ],
                [
                  "test_get_station_details_whensucceed",
                  "0"
                ],
                [
                  "test_get_stations_bounding_box_whensucceed",
                  "0"
                ],
                [
                  "test_get_stations_circular_search_whensucceed",
                  "0"
                ],
                [
                  "test_get_stations_bounding_box_whenerroroccured",
                  "0"
                ],
                [
                  "test_get_stations_circular_search_whenerroroccured",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_get_station_details_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_get_stations_corridor_whensucceed",
                "false"
              ],
              [
                "test_get_stations_corridor_whenerroroccured",
                "false"
              ],
              [
                "test_get_station_details_whensucceed",
                "false"
              ],
              [
                "test_get_stations_bounding_box_whensucceed",
                "false"
              ],
              [
                "test_get_stations_circular_search_whensucceed",
                "false"
              ],
              [
                "test_get_stations_bounding_box_whenerroroccured",
                "false"
              ],
              [
                "test_get_stations_circular_search_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_station_details_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_get_stations_corridor_whensucceed",
                "false"
              ],
              [
                "test_get_stations_corridor_whenerroroccured",
                "false"
              ],
              [
                "test_get_station_details_whensucceed",
                "false"
              ],
              [
                "test_get_stations_bounding_box_whensucceed",
                "false"
              ],
              [
                "test_get_stations_circular_search_whensucceed",
                "false"
              ],
              [
                "test_get_stations_bounding_box_whenerroroccured",
                "false"
              ],
              [
                "test_get_stations_circular_search_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_station_details_whenerroroccured",
                "1"
              ],
              [
                "test_initiation",
                "4"
              ],
              [
                "test_get_stations_corridor_whensucceed",
                "2"
              ],
              [
                "test_get_stations_corridor_whenerroroccured",
                "1"
              ],
              [
                "test_get_station_details_whensucceed",
                "2"
              ],
              [
                "test_get_stations_bounding_box_whensucceed",
                "2"
              ],
              [
                "test_get_stations_circular_search_whensucceed",
                "2"
              ],
              [
                "test_get_stations_bounding_box_whenerroroccured",
                "1"
              ],
              [
                "test_get_stations_circular_search_whenerroroccured",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_get_station_details_whenerroroccured",
                [
                  "station_id",
                  "expected_response"
                ]
              ],
              [
                "test_initiation",
                []
              ],
              [
                "test_get_stations_corridor_whensucceed",
                [
                  "response",
                  "expected_response"
                ]
              ],
              [
                "test_get_stations_corridor_whenerroroccured",
                [
                  "expected_response"
                ]
              ],
              [
                "test_get_station_details_whensucceed",
                [
                  "response",
                  "station_id",
                  "expected_response"
                ]
              ],
              [
                "test_get_stations_bounding_box_whensucceed",
                [
                  "response",
                  "expected_response"
                ]
              ],
              [
                "test_get_stations_circular_search_whensucceed",
                [
                  "response",
                  "expected_response"
                ]
              ],
              [
                "test_get_stations_bounding_box_whenerroroccured",
                [
                  "expected_response"
                ]
              ],
              [
                "test_get_stations_circular_search_whenerroroccured",
                [
                  "expected_response"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_get_station_details_whenerroroccured",
                [
                  "self._api"
                ]
              ],
              [
                "test_initiation",
                [
                  "self._api"
                ]
              ],
              [
                "test_get_stations_corridor_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_get_stations_corridor_whenerroroccured",
                [
                  "self._api"
                ]
              ],
              [
                "test_get_station_details_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_get_stations_bounding_box_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_get_stations_circular_search_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_get_stations_bounding_box_whenerroroccured",
                [
                  "self._api"
                ]
              ],
              [
                "test_get_stations_circular_search_whenerroroccured",
                [
                  "self._api"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5765526174655035,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_initiation",
                  "test_get_stations_circular_search_whensucceed",
                  0.273754364331662
                ],
                [
                  "test_get_stations_bounding_box_whensucceed",
                  "test_get_stations_bounding_box_whenerroroccured",
                  0.8050036160898956
                ],
                [
                  "test_get_stations_corridor_whenerroroccured",
                  "test_get_station_details_whenerroroccured",
                  0.418201405159082
                ],
                [
                  "test_get_stations_circular_search_whensucceed",
                  "test_get_stations_bounding_box_whensucceed",
                  0.8921208096610144
                ],
                [
                  "test_get_stations_circular_search_whensucceed",
                  "test_get_stations_corridor_whenerroroccured",
                  0.603051007392137
                ],
                [
                  "test_get_stations_circular_search_whenerroroccured",
                  "test_get_station_details_whensucceed",
                  0.6023808788584558
                ],
                [
                  "test_get_stations_bounding_box_whenerroroccured",
                  "test_get_stations_corridor_whensucceed",
                  0.7592969529407437
                ],
                [
                  "test_initiation",
                  "test_get_stations_circular_search_whenerroroccured",
                  0.17605070990773197
                ],
                [
                  "test_get_stations_circular_search_whenerroroccured",
                  "test_get_stations_bounding_box_whensucceed",
                  0.6517396372743648
                ],
                [
                  "test_get_stations_bounding_box_whensucceed",
                  "test_get_stations_corridor_whenerroroccured",
                  0.6875495074542749
                ],
                [
                  "test_get_stations_circular_search_whensucceed",
                  "test_get_stations_bounding_box_whenerroroccured",
                  0.6573757351339165
                ],
                [
                  "test_get_stations_circular_search_whenerroroccured",
                  "test_get_stations_bounding_box_whenerroroccured",
                  0.8105746418436737
                ],
                [
                  "test_get_stations_bounding_box_whensucceed",
                  "test_get_station_details_whenerroroccured",
                  0.555805430176961
                ],
                [
                  "test_get_stations_circular_search_whensucceed",
                  "test_get_stations_corridor_whensucceed",
                  0.8545160236118451
                ],
                [
                  "test_initiation",
                  "test_get_stations_corridor_whensucceed",
                  0.21514499158934372
                ],
                [
                  "test_get_stations_bounding_box_whenerroroccured",
                  "test_get_station_details_whenerroroccured",
                  0.607832400644065
                ],
                [
                  "test_get_stations_circular_search_whensucceed",
                  "test_get_station_details_whenerroroccured",
                  0.5982930264130991
                ],
                [
                  "test_get_stations_circular_search_whenerroroccured",
                  "test_get_station_details_whenerroroccured",
                  0.6929023281557339
                ],
                [
                  "test_initiation",
                  "test_get_station_details_whensucceed",
                  0.266163655172705
                ],
                [
                  "test_get_stations_circular_search_whensucceed",
                  "test_get_station_details_whensucceed",
                  0.7155247190578159
                ],
                [
                  "test_get_stations_bounding_box_whensucceed",
                  "test_get_station_details_whensucceed",
                  0.6647119500329702
                ],
                [
                  "test_initiation",
                  "test_get_station_details_whenerroroccured",
                  0.1774341043905996
                ],
                [
                  "test_get_stations_circular_search_whenerroroccured",
                  "test_get_stations_corridor_whenerroroccured",
                  0.6923076923076923
                ],
                [
                  "test_get_stations_bounding_box_whensucceed",
                  "test_get_stations_corridor_whensucceed",
                  0.9155152341550176
                ],
                [
                  "test_get_stations_corridor_whensucceed",
                  "test_get_station_details_whenerroroccured",
                  0.470201629295894
                ],
                [
                  "test_initiation",
                  "test_get_stations_corridor_whenerroroccured",
                  0.10833889840475815
                ],
                [
                  "test_initiation",
                  "test_get_stations_bounding_box_whensucceed",
                  0.25431378189777376
                ],
                [
                  "test_get_station_details_whensucceed",
                  "test_get_station_details_whenerroroccured",
                  0.9065508345285528
                ],
                [
                  "test_initiation",
                  "test_get_stations_bounding_box_whenerroroccured",
                  0.15746454193631376
                ],
                [
                  "test_get_stations_circular_search_whenerroroccured",
                  "test_get_stations_corridor_whensucceed",
                  0.6388777883377794
                ],
                [
                  "test_get_stations_corridor_whensucceed",
                  "test_get_station_details_whensucceed",
                  0.5623346317765233
                ],
                [
                  "test_get_stations_bounding_box_whenerroroccured",
                  "test_get_station_details_whensucceed",
                  0.5282214092053228
                ],
                [
                  "test_get_stations_circular_search_whensucceed",
                  "test_get_stations_circular_search_whenerroroccured",
                  0.7683760704982201
                ],
                [
                  "test_get_stations_corridor_whenerroroccured",
                  "test_get_station_details_whensucceed",
                  0.3634273778934877
                ],
                [
                  "test_get_stations_bounding_box_whenerroroccured",
                  "test_get_stations_corridor_whenerroroccured",
                  0.8428256222883822
                ],
                [
                  "test_get_stations_corridor_whensucceed",
                  "test_get_stations_corridor_whenerroroccured",
                  0.8617108209403137
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_get_station_details_whenerroroccured",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_get_stations_corridor_whensucceed",
                "false"
              ],
              [
                "test_get_stations_corridor_whenerroroccured",
                "false"
              ],
              [
                "test_get_station_details_whensucceed",
                "false"
              ],
              [
                "test_get_stations_bounding_box_whensucceed",
                "false"
              ],
              [
                "test_get_stations_circular_search_whensucceed",
                "false"
              ],
              [
                "test_get_stations_bounding_box_whenerroroccured",
                "false"
              ],
              [
                "test_get_stations_circular_search_whenerroroccured",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 9
      }
    ]
  },
  {
    "name": "tests_\u0026_test_geocoder_autocomplete_api.py",
    "testCases": [
      {
        "name": "GeocoderAutoCompleteApiTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_addresssuggestion_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_limitresultsbyaddress_whensucceed",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_initiation",
                  "[PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_addresssuggestion_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_limitresultsbyaddress_whenerroroccured",
                  "[PyCallExpression: self.assertRaises]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_addresssuggestion_whensucceed",
                  "[]"
                ],
                [
                  "test_limitresultsbyaddress_whensucceed",
                  "[]"
                ],
                [
                  "test_initiation",
                  "[]"
                ],
                [
                  "test_addresssuggestion_whenerroroccured",
                  "[]"
                ],
                [
                  "test_limitresultsbyaddress_whenerroroccured",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_addresssuggestion_whensucceed",
                  "false"
                ],
                [
                  "test_limitresultsbyaddress_whensucceed",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_addresssuggestion_whenerroroccured",
                  "false"
                ],
                [
                  "test_limitresultsbyaddress_whenerroroccured",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_addresssuggestion_whensucceed",
                  "false"
                ],
                [
                  "test_limitresultsbyaddress_whensucceed",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_addresssuggestion_whenerroroccured",
                  "false"
                ],
                [
                  "test_limitresultsbyaddress_whenerroroccured",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_addresssuggestion_whensucceed",
                  "false"
                ],
                [
                  "test_limitresultsbyaddress_whensucceed",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_addresssuggestion_whenerroroccured",
                  "false"
                ],
                [
                  "test_limitresultsbyaddress_whenerroroccured",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_addresssuggestion_whensucceed",
                  "false"
                ],
                [
                  "test_limitresultsbyaddress_whensucceed",
                  "false"
                ],
                [
                  "test_initiation",
                  "false"
                ],
                [
                  "test_addresssuggestion_whenerroroccured",
                  "false"
                ],
                [
                  "test_limitresultsbyaddress_whenerroroccured",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_addresssuggestion_whensucceed",
                "false"
              ],
              [
                "test_limitresultsbyaddress_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_addresssuggestion_whenerroroccured",
                "false"
              ],
              [
                "test_limitresultsbyaddress_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_addresssuggestion_whensucceed",
                "false"
              ],
              [
                "test_limitresultsbyaddress_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_addresssuggestion_whenerroroccured",
                "false"
              ],
              [
                "test_limitresultsbyaddress_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_addresssuggestion_whensucceed",
                []
              ],
              [
                "test_limitresultsbyaddress_whensucceed",
                []
              ],
              [
                "test_initiation",
                []
              ],
              [
                "test_addresssuggestion_whenerroroccured",
                []
              ],
              [
                "test_limitresultsbyaddress_whenerroroccured",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_addresssuggestion_whensucceed",
                "false"
              ],
              [
                "test_limitresultsbyaddress_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_addresssuggestion_whenerroroccured",
                "false"
              ],
              [
                "test_limitresultsbyaddress_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_addresssuggestion_whensucceed",
                "false"
              ],
              [
                "test_limitresultsbyaddress_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_addresssuggestion_whenerroroccured",
                "false"
              ],
              [
                "test_limitresultsbyaddress_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_addresssuggestion_whensucceed",
                  "0"
                ],
                [
                  "test_limitresultsbyaddress_whensucceed",
                  "0"
                ],
                [
                  "test_initiation",
                  "0"
                ],
                [
                  "test_addresssuggestion_whenerroroccured",
                  "0"
                ],
                [
                  "test_limitresultsbyaddress_whenerroroccured",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_addresssuggestion_whensucceed",
                  "0"
                ],
                [
                  "test_limitresultsbyaddress_whensucceed",
                  "0"
                ],
                [
                  "test_initiation",
                  "0"
                ],
                [
                  "test_addresssuggestion_whenerroroccured",
                  "0"
                ],
                [
                  "test_limitresultsbyaddress_whenerroroccured",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_addresssuggestion_whensucceed",
                "false"
              ],
              [
                "test_limitresultsbyaddress_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_addresssuggestion_whenerroroccured",
                "false"
              ],
              [
                "test_limitresultsbyaddress_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_addresssuggestion_whensucceed",
                "false"
              ],
              [
                "test_limitresultsbyaddress_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_addresssuggestion_whenerroroccured",
                "false"
              ],
              [
                "test_limitresultsbyaddress_whenerroroccured",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_addresssuggestion_whensucceed",
                "2"
              ],
              [
                "test_limitresultsbyaddress_whensucceed",
                "2"
              ],
              [
                "test_initiation",
                "3"
              ],
              [
                "test_addresssuggestion_whenerroroccured",
                "1"
              ],
              [
                "test_limitresultsbyaddress_whenerroroccured",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_addresssuggestion_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_limitresultsbyaddress_whensucceed",
                [
                  "expectedResponse",
                  "response"
                ]
              ],
              [
                "test_initiation",
                []
              ],
              [
                "test_addresssuggestion_whenerroroccured",
                [
                  "expectedResponse"
                ]
              ],
              [
                "test_limitresultsbyaddress_whenerroroccured",
                [
                  "expectedResponse"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_addresssuggestion_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_limitresultsbyaddress_whensucceed",
                [
                  "self._api"
                ]
              ],
              [
                "test_initiation",
                [
                  "self._api"
                ]
              ],
              [
                "test_addresssuggestion_whenerroroccured",
                [
                  "self._api"
                ]
              ],
              [
                "test_limitresultsbyaddress_whenerroroccured",
                [
                  "self._api"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5251360482261583,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_addresssuggestion_whensucceed",
                  "test_limitresultsbyaddress_whensucceed",
                  0.8101056637505245
                ],
                [
                  "test_initiation",
                  "test_limitresultsbyaddress_whensucceed",
                  0.3299831645537222
                ],
                [
                  "test_initiation",
                  "test_addresssuggestion_whensucceed",
                  0.3037741256219224
                ],
                [
                  "test_addresssuggestion_whenerroroccured",
                  "test_limitresultsbyaddress_whenerroroccured",
                  0.79609793984444
                ],
                [
                  "test_addresssuggestion_whensucceed",
                  "test_addresssuggestion_whenerroroccured",
                  0.7892283294029704
                ],
                [
                  "test_addresssuggestion_whensucceed",
                  "test_limitresultsbyaddress_whenerroroccured",
                  0.6124634744884919
                ],
                [
                  "test_addresssuggestion_whenerroroccured",
                  "test_limitresultsbyaddress_whensucceed",
                  0.5919600211726014
                ],
                [
                  "test_limitresultsbyaddress_whensucceed",
                  "test_limitresultsbyaddress_whenerroroccured",
                  0.7111887749987416
                ],
                [
                  "test_initiation",
                  "test_addresssuggestion_whenerroroccured",
                  0.14433756729740643
                ],
                [
                  "test_initiation",
                  "test_limitresultsbyaddress_whenerroroccured",
                  0.16222142113076254
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_addresssuggestion_whensucceed",
                "false"
              ],
              [
                "test_limitresultsbyaddress_whensucceed",
                "false"
              ],
              [
                "test_initiation",
                "false"
              ],
              [
                "test_addresssuggestion_whenerroroccured",
                "false"
              ],
              [
                "test_limitresultsbyaddress_whenerroroccured",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      }
    ]
  }
]