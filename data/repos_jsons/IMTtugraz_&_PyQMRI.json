[
  {
    "name": "test_\u0026_test_gradient.py",
    "testCases": [
      {
        "name": "GradientTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_adj_outofplace",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_grad_outofplace",
                  "[]"
                ],
                [
                  "test_grad_inplace",
                  "[]"
                ],
                [
                  "test_adj_inplace",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_adj_outofplace",
                  "[]"
                ],
                [
                  "test_grad_outofplace",
                  "[]"
                ],
                [
                  "test_grad_inplace",
                  "[]"
                ],
                [
                  "test_adj_inplace",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_grad_outofplace",
                  "false"
                ],
                [
                  "test_grad_inplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_grad_outofplace",
                  "false"
                ],
                [
                  "test_grad_inplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_grad_outofplace",
                  "false"
                ],
                [
                  "test_grad_inplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_grad_outofplace",
                  "false"
                ],
                [
                  "test_grad_inplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_grad_outofplace",
                "false"
              ],
              [
                "test_grad_inplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_grad_outofplace",
                "false"
              ],
              [
                "test_grad_inplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_adj_outofplace",
                [
                  "self.dz"
                ]
              ],
              [
                "test_grad_outofplace",
                [
                  "self.divin"
                ]
              ],
              [
                "test_grad_inplace",
                []
              ],
              [
                "test_adj_inplace",
                [
                  "self.dz"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_grad_outofplace",
                "false"
              ],
              [
                "test_grad_inplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_grad_outofplace",
                "false"
              ],
              [
                "test_grad_inplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_adj_outofplace",
                  "0"
                ],
                [
                  "test_grad_outofplace",
                  "0"
                ],
                [
                  "test_grad_inplace",
                  "0"
                ],
                [
                  "test_adj_inplace",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_adj_outofplace",
                  "0"
                ],
                [
                  "test_grad_outofplace",
                  "0"
                ],
                [
                  "test_grad_inplace",
                  "0"
                ],
                [
                  "test_adj_inplace",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_adj_outofplace",
                "true"
              ],
              [
                "test_grad_outofplace",
                "false"
              ],
              [
                "test_grad_inplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_grad_outofplace",
                "false"
              ],
              [
                "test_grad_inplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "1"
              ],
              [
                "test_grad_outofplace",
                "1"
              ],
              [
                "test_grad_inplace",
                "1"
              ],
              [
                "test_adj_inplace",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                [
                  "outgrad",
                  "a",
                  "b",
                  "outdiv",
                  "inpgrad",
                  "inpdiv"
                ]
              ],
              [
                "test_grad_outofplace",
                [
                  "outp",
                  "gradx",
                  "inp",
                  "grady",
                  "gradz",
                  "grad"
                ]
              ],
              [
                "test_grad_inplace",
                [
                  "outp",
                  "gradx",
                  "inp",
                  "grady",
                  "gradz",
                  "grad"
                ]
              ],
              [
                "test_adj_inplace",
                [
                  "outgrad",
                  "a",
                  "b",
                  "outdiv",
                  "inpgrad",
                  "inpdiv"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                [
                  "self.gradin",
                  "self.queue",
                  "self.grad",
                  "self.divin"
                ]
              ],
              [
                "test_grad_outofplace",
                [
                  "self.gradin",
                  "self.queue",
                  "self.grad",
                  "self.dz"
                ]
              ],
              [
                "test_grad_inplace",
                [
                  "self.gradin",
                  "self.queue",
                  "self.grad",
                  "self.divin",
                  "self.dz"
                ]
              ],
              [
                "test_adj_inplace",
                [
                  "self.gradin",
                  "self.queue",
                  "self.grad",
                  "self.divin"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7210497867762827,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_grad_outofplace",
                  "test_grad_inplace",
                  0.981816665148827
                ],
                [
                  "test_adj_outofplace",
                  "test_adj_inplace",
                  0.9477971673193287
                ],
                [
                  "test_grad_outofplace",
                  "test_adj_outofplace",
                  0.6018638490003064
                ],
                [
                  "test_grad_outofplace",
                  "test_adj_inplace",
                  0.5781866027463226
                ],
                [
                  "test_grad_inplace",
                  "test_adj_outofplace",
                  0.6145567553830829
                ],
                [
                  "test_grad_inplace",
                  "test_adj_inplace",
                  0.6020776810598286
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_grad_outofplace",
                "false"
              ],
              [
                "test_grad_inplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      },
      {
        "name": "GradientStreamedTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_grad_inplace",
                  "[]"
                ],
                [
                  "test_adj_inplace",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_adj_outofplace",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_grad_outofplace",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_grad_inplace",
                  "[]"
                ],
                [
                  "test_adj_inplace",
                  "[]"
                ],
                [
                  "test_adj_outofplace",
                  "[]"
                ],
                [
                  "test_grad_outofplace",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_grad_inplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ],
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_grad_outofplace",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_grad_inplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ],
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_grad_outofplace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_grad_inplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ],
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_grad_outofplace",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_grad_inplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ],
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_grad_outofplace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_grad_inplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_grad_outofplace",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_grad_inplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_grad_outofplace",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_grad_inplace",
                []
              ],
              [
                "test_adj_inplace",
                [
                  "self.dz"
                ]
              ],
              [
                "test_adj_outofplace",
                [
                  "self.dz"
                ]
              ],
              [
                "test_grad_outofplace",
                [
                  "self.divin"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_grad_inplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_grad_outofplace",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_grad_inplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_grad_outofplace",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_grad_inplace",
                  "0"
                ],
                [
                  "test_adj_inplace",
                  "0"
                ],
                [
                  "test_adj_outofplace",
                  "0"
                ],
                [
                  "test_grad_outofplace",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_grad_inplace",
                  "0"
                ],
                [
                  "test_adj_inplace",
                  "0"
                ],
                [
                  "test_adj_outofplace",
                  "0"
                ],
                [
                  "test_grad_outofplace",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_grad_inplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "true"
              ],
              [
                "test_adj_outofplace",
                "true"
              ],
              [
                "test_grad_outofplace",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_grad_inplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_grad_outofplace",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_grad_inplace",
                "1"
              ],
              [
                "test_adj_inplace",
                "1"
              ],
              [
                "test_adj_outofplace",
                "1"
              ],
              [
                "test_grad_outofplace",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_grad_inplace",
                [
                  "outp",
                  "gradx",
                  "grady",
                  "gradz",
                  "grad"
                ]
              ],
              [
                "test_adj_inplace",
                [
                  "outgrad",
                  "a",
                  "b",
                  "outdiv"
                ]
              ],
              [
                "test_adj_outofplace",
                [
                  "outgrad",
                  "a",
                  "b",
                  "outdiv"
                ]
              ],
              [
                "test_grad_outofplace",
                [
                  "outp",
                  "gradx",
                  "grady",
                  "gradz",
                  "grad"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_grad_inplace",
                [
                  "self.gradin",
                  "self.grad",
                  "self.divin",
                  "self.dz"
                ]
              ],
              [
                "test_adj_inplace",
                [
                  "self.gradin",
                  "self.grad",
                  "self.divin"
                ]
              ],
              [
                "test_adj_outofplace",
                [
                  "self.gradin",
                  "self.grad",
                  "self.divin"
                ]
              ],
              [
                "test_grad_outofplace",
                [
                  "self.gradin",
                  "self.grad",
                  "self.dz"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6385277079815329,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_grad_inplace",
                  "test_adj_outofplace",
                  0.4372539233467497
                ],
                [
                  "test_grad_inplace",
                  "test_adj_inplace",
                  0.5419377503287257
                ],
                [
                  "test_adj_outofplace",
                  "test_adj_inplace",
                  0.8940020829953894
                ],
                [
                  "test_grad_outofplace",
                  "test_grad_inplace",
                  0.9787081768034213
                ],
                [
                  "test_grad_outofplace",
                  "test_adj_outofplace",
                  0.47004895117195983
                ],
                [
                  "test_grad_outofplace",
                  "test_adj_inplace",
                  0.5092153632429516
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_grad_inplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_grad_outofplace",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "test_\u0026_test_LinearDataOperator.py",
    "testCases": [
      {
        "name": "OperatorKspaceRadial",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_adj_outofplace",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_adj_inplace",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_adj_outofplace",
                  "[]"
                ],
                [
                  "test_adj_inplace",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_adj_outofplace",
                [
                  "self.model_gradient",
                  "self.C"
                ]
              ],
              [
                "test_adj_inplace",
                [
                  "self.model_gradient",
                  "self.C"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_adj_outofplace",
                  "0"
                ],
                [
                  "test_adj_inplace",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_adj_outofplace",
                  "0"
                ],
                [
                  "test_adj_inplace",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_adj_outofplace",
                "true"
              ],
              [
                "test_adj_inplace",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "1"
              ],
              [
                "test_adj_inplace",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                [
                  "a",
                  "b",
                  "inpadj",
                  "outfwd",
                  "inpfwd",
                  "outadj"
                ]
              ],
              [
                "test_adj_inplace",
                [
                  "a",
                  "b",
                  "inpadj",
                  "outfwd",
                  "inpfwd",
                  "outadj"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                [
                  "self.opinfwd",
                  "self.opinadj",
                  "self.op",
                  "self.coil_buf",
                  "self.queue",
                  "self.grad_buf"
                ]
              ],
              [
                "test_adj_inplace",
                [
                  "self.opinfwd",
                  "self.opinadj",
                  "self.op",
                  "self.coil_buf",
                  "self.queue",
                  "self.grad_buf"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9514212362131041,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_adj_outofplace",
                  "test_adj_inplace",
                  0.9514212362131041
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "OperatorKspaceCartesian",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_adj_inplace",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_adj_outofplace",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_adj_inplace",
                  "[]"
                ],
                [
                  "test_adj_outofplace",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_adj_inplace",
                  "false"
                ],
                [
                  "test_adj_outofplace",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_adj_inplace",
                  "false"
                ],
                [
                  "test_adj_outofplace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_adj_inplace",
                  "false"
                ],
                [
                  "test_adj_outofplace",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_adj_inplace",
                  "false"
                ],
                [
                  "test_adj_outofplace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_adj_inplace",
                [
                  "self.model_gradient",
                  "self.C"
                ]
              ],
              [
                "test_adj_outofplace",
                [
                  "self.model_gradient",
                  "self.C"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_adj_inplace",
                  "0"
                ],
                [
                  "test_adj_outofplace",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_adj_inplace",
                  "0"
                ],
                [
                  "test_adj_outofplace",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_adj_inplace",
                "true"
              ],
              [
                "test_adj_outofplace",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                "1"
              ],
              [
                "test_adj_outofplace",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                [
                  "a",
                  "b",
                  "inpadj",
                  "outfwd",
                  "inpfwd",
                  "outadj"
                ]
              ],
              [
                "test_adj_outofplace",
                [
                  "a",
                  "b",
                  "inpadj",
                  "outfwd",
                  "inpfwd",
                  "outadj"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                [
                  "self.opinfwd",
                  "self.opinadj",
                  "self.op",
                  "self.coil_buf",
                  "self.queue",
                  "self.grad_buf"
                ]
              ],
              [
                "test_adj_outofplace",
                [
                  "self.opinfwd",
                  "self.opinadj",
                  "self.op",
                  "self.coil_buf",
                  "self.queue",
                  "self.grad_buf"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9514212362131041,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_adj_outofplace",
                  "test_adj_inplace",
                  0.9514212362131041
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "OperatorKspaceSMSCartesian",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_adj_outofplace",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_adj_inplace",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_adj_outofplace",
                  "[]"
                ],
                [
                  "test_adj_inplace",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_adj_outofplace",
                [
                  "self.model_gradient",
                  "self.C"
                ]
              ],
              [
                "test_adj_inplace",
                [
                  "self.model_gradient",
                  "self.C"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_adj_outofplace",
                  "0"
                ],
                [
                  "test_adj_inplace",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_adj_outofplace",
                  "0"
                ],
                [
                  "test_adj_inplace",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_adj_outofplace",
                "true"
              ],
              [
                "test_adj_inplace",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "1"
              ],
              [
                "test_adj_inplace",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                [
                  "a",
                  "b",
                  "inpadj",
                  "outfwd",
                  "inpfwd",
                  "outadj"
                ]
              ],
              [
                "test_adj_inplace",
                [
                  "a",
                  "b",
                  "inpadj",
                  "outfwd",
                  "inpfwd",
                  "outadj"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                [
                  "self.opinfwd",
                  "self.opinadj",
                  "self.op",
                  "self.coil_buf",
                  "self.queue",
                  "self.grad_buf"
                ]
              ],
              [
                "test_adj_inplace",
                [
                  "self.opinfwd",
                  "self.opinadj",
                  "self.op",
                  "self.coil_buf",
                  "self.queue",
                  "self.grad_buf"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9514212362131041,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_adj_outofplace",
                  "test_adj_inplace",
                  0.9514212362131041
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "OperatorImageSpace",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_adj_outofplace",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_adj_inplace",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_adj_outofplace",
                  "[]"
                ],
                [
                  "test_adj_inplace",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_adj_outofplace",
                [
                  "self.model_gradient"
                ]
              ],
              [
                "test_adj_inplace",
                [
                  "self.model_gradient"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_adj_outofplace",
                  "0"
                ],
                [
                  "test_adj_inplace",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_adj_outofplace",
                  "0"
                ],
                [
                  "test_adj_inplace",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_adj_outofplace",
                "true"
              ],
              [
                "test_adj_inplace",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "1"
              ],
              [
                "test_adj_inplace",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                [
                  "a",
                  "b",
                  "inpadj",
                  "outfwd",
                  "inpfwd",
                  "outadj"
                ]
              ],
              [
                "test_adj_inplace",
                [
                  "a",
                  "b",
                  "inpadj",
                  "outfwd",
                  "inpfwd",
                  "outadj"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                [
                  "self.opinfwd",
                  "self.opinadj",
                  "self.op",
                  "self.queue",
                  "self.grad_buf"
                ]
              ],
              [
                "test_adj_inplace",
                [
                  "self.opinfwd",
                  "self.opinadj",
                  "self.op",
                  "self.queue",
                  "self.grad_buf"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.950033737592567,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_adj_outofplace",
                  "test_adj_inplace",
                  0.950033737592567
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "OperatorImageSpaceStreamed",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_adj_outofplace",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_adj_inplace",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_adj_outofplace",
                  "[]"
                ],
                [
                  "test_adj_inplace",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                []
              ],
              [
                "test_adj_inplace",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_adj_outofplace",
                  "0"
                ],
                [
                  "test_adj_inplace",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_adj_outofplace",
                  "0"
                ],
                [
                  "test_adj_inplace",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_adj_outofplace",
                "true"
              ],
              [
                "test_adj_inplace",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "1"
              ],
              [
                "test_adj_inplace",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                [
                  "a",
                  "b",
                  "outfwd",
                  "outadj"
                ]
              ],
              [
                "test_adj_inplace",
                [
                  "a",
                  "b",
                  "outfwd",
                  "outadj"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                [
                  "self.opinfwd",
                  "self.op",
                  "self.opinadj",
                  "self.model_gradient"
                ]
              ],
              [
                "test_adj_inplace",
                [
                  "self.opinfwd",
                  "self.opinadj",
                  "self.op",
                  "self.model_gradient"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9028423882990055,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_adj_outofplace",
                  "test_adj_inplace",
                  0.9028423882990055
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "OperatorCartesianKSpaceStreamed",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_adj_inplace",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_adj_outofplace",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_adj_inplace",
                  "[]"
                ],
                [
                  "test_adj_outofplace",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_adj_inplace",
                  "false"
                ],
                [
                  "test_adj_outofplace",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_adj_inplace",
                  "false"
                ],
                [
                  "test_adj_outofplace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_adj_inplace",
                  "false"
                ],
                [
                  "test_adj_outofplace",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_adj_inplace",
                  "false"
                ],
                [
                  "test_adj_outofplace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                []
              ],
              [
                "test_adj_outofplace",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_adj_inplace",
                  "0"
                ],
                [
                  "test_adj_outofplace",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_adj_inplace",
                  "0"
                ],
                [
                  "test_adj_outofplace",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_adj_inplace",
                "true"
              ],
              [
                "test_adj_outofplace",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                "1"
              ],
              [
                "test_adj_outofplace",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                [
                  "a",
                  "b",
                  "outfwd",
                  "outadj"
                ]
              ],
              [
                "test_adj_outofplace",
                [
                  "a",
                  "b",
                  "outfwd",
                  "outadj"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                [
                  "self.opinfwd",
                  "self.opinadj",
                  "self.op",
                  "self.model_gradient",
                  "self.C"
                ]
              ],
              [
                "test_adj_outofplace",
                [
                  "self.opinfwd",
                  "self.op",
                  "self.opinadj",
                  "self.model_gradient",
                  "self.C"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9079589055788833,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_adj_outofplace",
                  "test_adj_inplace",
                  0.9079589055788833
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "OperatorKspaceSMSCartesianStreamed",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_adj_inplace",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_adj_outofplace",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_adj_inplace",
                  "[]"
                ],
                [
                  "test_adj_outofplace",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_adj_inplace",
                  "false"
                ],
                [
                  "test_adj_outofplace",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_adj_inplace",
                  "false"
                ],
                [
                  "test_adj_outofplace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_adj_inplace",
                  "false"
                ],
                [
                  "test_adj_outofplace",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_adj_inplace",
                  "false"
                ],
                [
                  "test_adj_outofplace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_adj_inplace",
                [
                  "self.queue"
                ]
              ],
              [
                "test_adj_outofplace",
                [
                  "self.queue"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_adj_inplace",
                  "0"
                ],
                [
                  "test_adj_outofplace",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_adj_inplace",
                  "0"
                ],
                [
                  "test_adj_outofplace",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_adj_inplace",
                "true"
              ],
              [
                "test_adj_outofplace",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                "1"
              ],
              [
                "test_adj_outofplace",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                [
                  "a",
                  "b",
                  "outfwd",
                  "outadj"
                ]
              ],
              [
                "test_adj_outofplace",
                [
                  "a",
                  "b",
                  "outfwd",
                  "outadj"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                [
                  "self.opinfwd",
                  "self.opinadj",
                  "self.op",
                  "self.model_gradient",
                  "self.C"
                ]
              ],
              [
                "test_adj_outofplace",
                [
                  "self.opinfwd",
                  "self.op",
                  "self.opinadj",
                  "self.model_gradient",
                  "self.C"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9079589055788833,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_adj_outofplace",
                  "test_adj_inplace",
                  0.9079589055788833
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "OperatorRadialKSpaceStreamed",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_adj_outofplace",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_adj_inplace",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_adj_outofplace",
                  "[]"
                ],
                [
                  "test_adj_inplace",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                []
              ],
              [
                "test_adj_inplace",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_adj_outofplace",
                  "0"
                ],
                [
                  "test_adj_inplace",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_adj_outofplace",
                  "0"
                ],
                [
                  "test_adj_inplace",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_adj_outofplace",
                "true"
              ],
              [
                "test_adj_inplace",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "1"
              ],
              [
                "test_adj_inplace",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                [
                  "a",
                  "b",
                  "outfwd",
                  "outadj"
                ]
              ],
              [
                "test_adj_inplace",
                [
                  "a",
                  "b",
                  "outfwd",
                  "outadj"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                [
                  "self.opinfwd",
                  "self.op",
                  "self.opinadj",
                  "self.model_gradient",
                  "self.C"
                ]
              ],
              [
                "test_adj_inplace",
                [
                  "self.opinfwd",
                  "self.opinadj",
                  "self.op",
                  "self.model_gradient",
                  "self.C"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9079589055788833,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_adj_outofplace",
                  "test_adj_inplace",
                  0.9079589055788833
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "test_\u0026_test_symmetrized_gradient.py",
    "testCases": [
      {
        "name": "SymmetrizedGradientTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_sym_grad_inplace",
                  "[]"
                ],
                [
                  "test_sym_grad_outofplace",
                  "[]"
                ],
                [
                  "test_adj_outofplace",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_adj_inplace",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_sym_grad_inplace",
                  "[]"
                ],
                [
                  "test_sym_grad_outofplace",
                  "[]"
                ],
                [
                  "test_adj_outofplace",
                  "[]"
                ],
                [
                  "test_adj_inplace",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_sym_grad_inplace",
                  "false"
                ],
                [
                  "test_sym_grad_outofplace",
                  "false"
                ],
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_sym_grad_inplace",
                  "false"
                ],
                [
                  "test_sym_grad_outofplace",
                  "false"
                ],
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_sym_grad_inplace",
                  "false"
                ],
                [
                  "test_sym_grad_outofplace",
                  "false"
                ],
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_sym_grad_inplace",
                  "false"
                ],
                [
                  "test_sym_grad_outofplace",
                  "false"
                ],
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_sym_grad_inplace",
                "false"
              ],
              [
                "test_sym_grad_outofplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_sym_grad_inplace",
                "false"
              ],
              [
                "test_sym_grad_outofplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_sym_grad_inplace",
                []
              ],
              [
                "test_sym_grad_outofplace",
                [
                  "self.symdivin"
                ]
              ],
              [
                "test_adj_outofplace",
                [
                  "self.weights",
                  "self.dz"
                ]
              ],
              [
                "test_adj_inplace",
                [
                  "self.weights",
                  "self.dz"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_sym_grad_inplace",
                "false"
              ],
              [
                "test_sym_grad_outofplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_sym_grad_inplace",
                "false"
              ],
              [
                "test_sym_grad_outofplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_sym_grad_inplace",
                  "0"
                ],
                [
                  "test_sym_grad_outofplace",
                  "0"
                ],
                [
                  "test_adj_outofplace",
                  "0"
                ],
                [
                  "test_adj_inplace",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_sym_grad_inplace",
                  "0"
                ],
                [
                  "test_sym_grad_outofplace",
                  "0"
                ],
                [
                  "test_adj_outofplace",
                  "0"
                ],
                [
                  "test_adj_inplace",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_sym_grad_inplace",
                "false"
              ],
              [
                "test_sym_grad_outofplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "true"
              ],
              [
                "test_adj_inplace",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_sym_grad_inplace",
                "false"
              ],
              [
                "test_sym_grad_outofplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_sym_grad_inplace",
                "1"
              ],
              [
                "test_sym_grad_outofplace",
                "1"
              ],
              [
                "test_adj_outofplace",
                "1"
              ],
              [
                "test_adj_inplace",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_sym_grad_inplace",
                [
                  "symgrad",
                  "outp",
                  "gradx",
                  "inp",
                  "grady",
                  "gradz"
                ]
              ],
              [
                "test_sym_grad_outofplace",
                [
                  "symgrad",
                  "outp",
                  "gradx",
                  "inp",
                  "grady",
                  "gradz"
                ]
              ],
              [
                "test_adj_outofplace",
                [
                  "a1",
                  "outgrad",
                  "a2",
                  "a",
                  "b",
                  "outdiv",
                  "inpgrad",
                  "inpdiv"
                ]
              ],
              [
                "test_adj_inplace",
                [
                  "a1",
                  "outgrad",
                  "a2",
                  "a",
                  "b",
                  "outdiv",
                  "inpgrad",
                  "inpdiv"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_sym_grad_inplace",
                [
                  "self.symgrad",
                  "self.symgradin",
                  "self.queue",
                  "self.symdivin",
                  "self.weights",
                  "self.dz"
                ]
              ],
              [
                "test_sym_grad_outofplace",
                [
                  "self.symgrad",
                  "self.symgradin",
                  "self.queue",
                  "self.weights",
                  "self.dz"
                ]
              ],
              [
                "test_adj_outofplace",
                [
                  "self.symgrad",
                  "self.symgradin",
                  "self.queue",
                  "self.symdivin"
                ]
              ],
              [
                "test_adj_inplace",
                [
                  "self.symgrad",
                  "self.symgradin",
                  "self.queue",
                  "self.symdivin"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7419762005320644,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_sym_grad_outofplace",
                  "test_adj_inplace",
                  0.6113432337421618
                ],
                [
                  "test_sym_grad_outofplace",
                  "test_adj_outofplace",
                  0.621855593591592
                ],
                [
                  "test_sym_grad_inplace",
                  "test_adj_outofplace",
                  0.6269674753109103
                ],
                [
                  "test_sym_grad_inplace",
                  "test_adj_inplace",
                  0.6202454620003155
                ],
                [
                  "test_sym_grad_outofplace",
                  "test_sym_grad_inplace",
                  0.9956568741544051
                ],
                [
                  "test_adj_outofplace",
                  "test_adj_inplace",
                  0.9757885643930013
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_sym_grad_inplace",
                "false"
              ],
              [
                "test_sym_grad_outofplace",
                "false"
              ],
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      },
      {
        "name": "SymmetrizedGradientStreamedTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_adj_outofplace",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_adj_inplace",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_grad_outofplace",
                  "[]"
                ],
                [
                  "test_grad_inplace",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_adj_outofplace",
                  "[]"
                ],
                [
                  "test_adj_inplace",
                  "[]"
                ],
                [
                  "test_grad_outofplace",
                  "[]"
                ],
                [
                  "test_grad_inplace",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ],
                [
                  "test_grad_outofplace",
                  "false"
                ],
                [
                  "test_grad_inplace",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ],
                [
                  "test_grad_outofplace",
                  "false"
                ],
                [
                  "test_grad_inplace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ],
                [
                  "test_grad_outofplace",
                  "false"
                ],
                [
                  "test_grad_inplace",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_adj_outofplace",
                  "false"
                ],
                [
                  "test_adj_inplace",
                  "false"
                ],
                [
                  "test_grad_outofplace",
                  "false"
                ],
                [
                  "test_grad_inplace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_grad_outofplace",
                "false"
              ],
              [
                "test_grad_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_grad_outofplace",
                "false"
              ],
              [
                "test_grad_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_adj_outofplace",
                [
                  "self.weights",
                  "self.dz"
                ]
              ],
              [
                "test_adj_inplace",
                [
                  "self.weights",
                  "self.dz"
                ]
              ],
              [
                "test_grad_outofplace",
                [
                  "self.symdivin"
                ]
              ],
              [
                "test_grad_inplace",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_grad_outofplace",
                "false"
              ],
              [
                "test_grad_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_grad_outofplace",
                "false"
              ],
              [
                "test_grad_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_adj_outofplace",
                  "0"
                ],
                [
                  "test_adj_inplace",
                  "0"
                ],
                [
                  "test_grad_outofplace",
                  "0"
                ],
                [
                  "test_grad_inplace",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_adj_outofplace",
                  "0"
                ],
                [
                  "test_adj_inplace",
                  "0"
                ],
                [
                  "test_grad_outofplace",
                  "0"
                ],
                [
                  "test_grad_inplace",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_adj_outofplace",
                "true"
              ],
              [
                "test_adj_inplace",
                "true"
              ],
              [
                "test_grad_outofplace",
                "false"
              ],
              [
                "test_grad_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_grad_outofplace",
                "false"
              ],
              [
                "test_grad_inplace",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "1"
              ],
              [
                "test_adj_inplace",
                "1"
              ],
              [
                "test_grad_outofplace",
                "1"
              ],
              [
                "test_grad_inplace",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                [
                  "a1",
                  "outgrad",
                  "a2",
                  "a",
                  "b",
                  "outdiv"
                ]
              ],
              [
                "test_adj_inplace",
                [
                  "a1",
                  "outgrad",
                  "a2",
                  "a",
                  "b",
                  "outdiv"
                ]
              ],
              [
                "test_grad_outofplace",
                [
                  "symgrad",
                  "outp",
                  "gradx",
                  "grady",
                  "gradz"
                ]
              ],
              [
                "test_grad_inplace",
                [
                  "symgrad",
                  "outp",
                  "gradx",
                  "grady",
                  "gradz"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                [
                  "self.symgrad",
                  "self.symgradin",
                  "self.symdivin"
                ]
              ],
              [
                "test_adj_inplace",
                [
                  "self.symgrad",
                  "self.symgradin",
                  "self.symdivin"
                ]
              ],
              [
                "test_grad_outofplace",
                [
                  "self.symgrad",
                  "self.symgradin",
                  "self.weights",
                  "self.dz"
                ]
              ],
              [
                "test_grad_inplace",
                [
                  "self.symgrad",
                  "self.symgradin",
                  "self.symdivin",
                  "self.weights",
                  "self.dz"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7461664970268713,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_grad_outofplace",
                  "test_grad_inplace",
                  0.9953971022180044
                ],
                [
                  "test_grad_outofplace",
                  "test_adj_outofplace",
                  0.6261722075165388
                ],
                [
                  "test_grad_inplace",
                  "test_adj_inplace",
                  0.6405175404029937
                ],
                [
                  "test_grad_outofplace",
                  "test_adj_inplace",
                  0.63169996537597
                ],
                [
                  "test_grad_inplace",
                  "test_adj_outofplace",
                  0.6173402010921648
                ],
                [
                  "test_adj_outofplace",
                  "test_adj_inplace",
                  0.9658719655555563
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_adj_outofplace",
                "false"
              ],
              [
                "test_adj_inplace",
                "false"
              ],
              [
                "test_grad_outofplace",
                "false"
              ],
              [
                "test_grad_inplace",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  }
]