[
  {
    "name": "adsputils_\u0026_tests_\u0026_test_app.py",
    "testCases": [
      {
        "name": "TestUpdateRecords",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_config",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertFalse]"
                ],
                [
                  "test_app_task",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual, PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_config",
                  "[]"
                ],
                [
                  "test_app_task",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_config",
                  "false"
                ],
                [
                  "test_app_task",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_config",
                  "false"
                ],
                [
                  "test_app_task",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_config",
                  "false"
                ],
                [
                  "test_app_task",
                  "true"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_config",
                  "false"
                ],
                [
                  "test_app_task",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_config",
                "false"
              ],
              [
                "test_app_task",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_config",
                "false"
              ],
              [
                "test_app_task",
                "true"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_config",
                []
              ],
              [
                "test_app_task",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_config",
                "false"
              ],
              [
                "test_app_task",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_config",
                "false"
              ],
              [
                "test_app_task",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_config",
                  "0"
                ],
                [
                  "test_app_task",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_config",
                  "0"
                ],
                [
                  "test_app_task",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_config",
                "false"
              ],
              [
                "test_app_task",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_config",
                "false"
              ],
              [
                "test_app_task",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_config",
                "4"
              ],
              [
                "test_app_task",
                "4"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_config",
                [
                  "app"
                ]
              ],
              [
                "test_app_task",
                [
                  "args",
                  "app",
                  "processed",
                  "second_half",
                  "first_half"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_config",
                []
              ],
              [
                "test_app_task",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.31661889512863134,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_config",
                  "test_app_task",
                  0.31661889512863134
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_config",
                "false"
              ],
              [
                "test_app_task",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "adsputils_\u0026_tests_\u0026_test_utils.py",
    "testCases": [
      {
        "name": "TestAdsOrcidCelery",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_setup_logging",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_get_date",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_update_from_env",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_load_config",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_load_module",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_setup_logging",
                  "[]"
                ],
                [
                  "test_get_date",
                  "[]"
                ],
                [
                  "test_update_from_env",
                  "[]"
                ],
                [
                  "test_load_config",
                  "[]"
                ],
                [
                  "test_load_module",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_setup_logging",
                  "true"
                ],
                [
                  "test_get_date",
                  "false"
                ],
                [
                  "test_update_from_env",
                  "false"
                ],
                [
                  "test_load_config",
                  "false"
                ],
                [
                  "test_load_module",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_setup_logging",
                  "false"
                ],
                [
                  "test_get_date",
                  "false"
                ],
                [
                  "test_update_from_env",
                  "false"
                ],
                [
                  "test_load_config",
                  "false"
                ],
                [
                  "test_load_module",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_setup_logging",
                  "false"
                ],
                [
                  "test_get_date",
                  "false"
                ],
                [
                  "test_update_from_env",
                  "false"
                ],
                [
                  "test_load_config",
                  "false"
                ],
                [
                  "test_load_module",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_setup_logging",
                  "false"
                ],
                [
                  "test_get_date",
                  "false"
                ],
                [
                  "test_update_from_env",
                  "false"
                ],
                [
                  "test_load_config",
                  "false"
                ],
                [
                  "test_load_module",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_setup_logging",
                "false"
              ],
              [
                "test_get_date",
                "false"
              ],
              [
                "test_update_from_env",
                "false"
              ],
              [
                "test_load_config",
                "false"
              ],
              [
                "test_load_module",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_setup_logging",
                "false"
              ],
              [
                "test_get_date",
                "false"
              ],
              [
                "test_update_from_env",
                "false"
              ],
              [
                "test_load_config",
                "false"
              ],
              [
                "test_load_module",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_setup_logging",
                []
              ],
              [
                "test_get_date",
                []
              ],
              [
                "test_update_from_env",
                []
              ],
              [
                "test_load_config",
                []
              ],
              [
                "test_load_module",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_setup_logging",
                "false"
              ],
              [
                "test_get_date",
                "false"
              ],
              [
                "test_update_from_env",
                "false"
              ],
              [
                "test_load_config",
                "false"
              ],
              [
                "test_load_module",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_setup_logging",
                "false"
              ],
              [
                "test_get_date",
                "false"
              ],
              [
                "test_update_from_env",
                "false"
              ],
              [
                "test_load_config",
                "false"
              ],
              [
                "test_load_module",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_setup_logging",
                  "0"
                ],
                [
                  "test_get_date",
                  "0"
                ],
                [
                  "test_update_from_env",
                  "0"
                ],
                [
                  "test_load_config",
                  "0"
                ],
                [
                  "test_load_module",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_setup_logging",
                  "0"
                ],
                [
                  "test_get_date",
                  "0"
                ],
                [
                  "test_update_from_env",
                  "0"
                ],
                [
                  "test_load_config",
                  "0"
                ],
                [
                  "test_load_module",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_setup_logging",
                "false"
              ],
              [
                "test_get_date",
                "false"
              ],
              [
                "test_update_from_env",
                "false"
              ],
              [
                "test_load_config",
                "false"
              ],
              [
                "test_load_module",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_setup_logging",
                "false"
              ],
              [
                "test_get_date",
                "false"
              ],
              [
                "test_update_from_env",
                "false"
              ],
              [
                "test_load_config",
                "false"
              ],
              [
                "test_load_module",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_setup_logging",
                "1"
              ],
              [
                "test_get_date",
                "10"
              ],
              [
                "test_update_from_env",
                "1"
              ],
              [
                "test_load_config",
                "5"
              ],
              [
                "test_load_module",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_setup_logging",
                [
                  "f",
                  "test_data"
                ]
              ],
              [
                "test_get_date",
                [
                  "d",
                  "d1",
                  "d2",
                  "d3"
                ]
              ],
              [
                "test_update_from_env",
                [
                  "conf"
                ]
              ],
              [
                "test_load_config",
                [
                  "c",
                  "f"
                ]
              ],
              [
                "test_load_module",
                [
                  "f",
                  "x"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_setup_logging",
                []
              ],
              [
                "test_get_date",
                []
              ],
              [
                "test_update_from_env",
                []
              ],
              [
                "test_load_config",
                []
              ],
              [
                "test_load_module",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.24144037145156177,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_load_config",
                  "test_get_date",
                  0.141090936157906
                ],
                [
                  "test_setup_logging",
                  "test_update_from_env",
                  0.32092515910485875
                ],
                [
                  "test_get_date",
                  "test_update_from_env",
                  0.33870407269679037
                ],
                [
                  "test_load_module",
                  "test_setup_logging",
                  0.2862512870383358
                ],
                [
                  "test_load_config",
                  "test_load_module",
                  0.3293790613225678
                ],
                [
                  "test_load_config",
                  "test_update_from_env",
                  0.1267974670939461
                ],
                [
                  "test_setup_logging",
                  "test_get_date",
                  0.15167409914295432
                ],
                [
                  "test_load_module",
                  "test_update_from_env",
                  0.38495910026827934
                ],
                [
                  "test_load_config",
                  "test_setup_logging",
                  0.14816242607110047
                ],
                [
                  "test_load_module",
                  "test_get_date",
                  0.18646010561887894
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_setup_logging",
                "false"
              ],
              [
                "test_get_date",
                "true"
              ],
              [
                "test_update_from_env",
                "false"
              ],
              [
                "test_load_config",
                "false"
              ],
              [
                "test_load_module",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      },
      {
        "name": "TestDbType",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_utcdatetime_type",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_utcdatetime_type",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_utcdatetime_type",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_utcdatetime_type",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_utcdatetime_type",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_utcdatetime_type",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_utcdatetime_type",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_utcdatetime_type",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_utcdatetime_type",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_utcdatetime_type",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_utcdatetime_type",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_utcdatetime_type",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_utcdatetime_type",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_utcdatetime_type",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_utcdatetime_type",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_utcdatetime_type",
                "5"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_utcdatetime_type",
                [
                  "current",
                  "t",
                  "created",
                  "id",
                  "updated",
                  "m",
                  "base",
                  "__tablename__"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_utcdatetime_type",
                [
                  "self.app"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_utcdatetime_type",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "adsputils_\u0026_tests_\u0026_test_serializer.py",
    "testCases": [
      {
        "name": "TestAdsOrcidCelery",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_utf8",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_serializer",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_utf8",
                  "[]"
                ],
                [
                  "test_serializer",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_utf8",
                  "false"
                ],
                [
                  "test_serializer",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_utf8",
                  "false"
                ],
                [
                  "test_serializer",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_utf8",
                  "false"
                ],
                [
                  "test_serializer",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_utf8",
                  "false"
                ],
                [
                  "test_serializer",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_utf8",
                "false"
              ],
              [
                "test_serializer",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_utf8",
                "false"
              ],
              [
                "test_serializer",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_utf8",
                []
              ],
              [
                "test_serializer",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_utf8",
                "false"
              ],
              [
                "test_serializer",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_utf8",
                "false"
              ],
              [
                "test_serializer",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_utf8",
                  "0"
                ],
                [
                  "test_serializer",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_utf8",
                  "0"
                ],
                [
                  "test_serializer",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_utf8",
                "false"
              ],
              [
                "test_serializer",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_utf8",
                "false"
              ],
              [
                "test_serializer",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_utf8",
                "2"
              ],
              [
                "test_serializer",
                "7"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_utf8",
                [
                  "b",
                  "ctype",
                  "data",
                  "enc",
                  "o"
                ]
              ],
              [
                "test_serializer",
                [
                  "b",
                  "data",
                  "content_type",
                  "test",
                  "test_data",
                  "cls",
                  "encoding",
                  "o"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_utf8",
                []
              ],
              [
                "test_serializer",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6016680876188614,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_serializer",
                  "test_utf8",
                  0.6016680876188614
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_utf8",
                "false"
              ],
              [
                "test_serializer",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  }
]