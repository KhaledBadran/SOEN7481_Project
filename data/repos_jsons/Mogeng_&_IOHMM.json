[
  {
    "name": "tests_\u0026_test_GLM.py",
    "testCases": [
      {
        "name": "PoissonTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_glm_sample_weight_all_half",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_glm_IRLS",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_ols_multicolinearty",
                  "[]"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_glm_regularized",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_glm_one_data_point",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_glm_sample_weight_all_half",
                  "[]"
                ],
                [
                  "test_glm_IRLS",
                  "[]"
                ],
                [
                  "test_ols_multicolinearty",
                  "[]"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "[]"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_glm_regularized",
                  "[]"
                ],
                [
                  "test_glm_one_data_point",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_glm_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_glm_IRLS",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_glm_regularized",
                  "false"
                ],
                [
                  "test_glm_one_data_point",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_glm_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_glm_IRLS",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_glm_regularized",
                  "false"
                ],
                [
                  "test_glm_one_data_point",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_glm_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_glm_IRLS",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_glm_regularized",
                  "false"
                ],
                [
                  "test_glm_one_data_point",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_glm_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_glm_IRLS",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_glm_regularized",
                  "false"
                ],
                [
                  "test_glm_one_data_point",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_sample_weight_all_half",
                [
                  "self.data"
                ]
              ],
              [
                "test_glm_IRLS",
                [
                  "self.data"
                ]
              ],
              [
                "test_ols_multicolinearty",
                [
                  "self.data"
                ]
              ],
              [
                "test_glm_sample_weight_all_zero",
                [
                  "self.data"
                ]
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                [
                  "self.data"
                ]
              ],
              [
                "test_glm_regularized",
                [
                  "self.data"
                ]
              ],
              [
                "test_glm_one_data_point",
                [
                  "self.data"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_sample_weight_all_half",
                "true"
              ],
              [
                "test_glm_IRLS",
                "true"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "true"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_regularized",
                "true"
              ],
              [
                "test_glm_one_data_point",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_glm_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_glm_IRLS",
                  "0"
                ],
                [
                  "test_ols_multicolinearty",
                  "0"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "0"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_glm_regularized",
                  "0"
                ],
                [
                  "test_glm_one_data_point",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_glm_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_glm_IRLS",
                  "0"
                ],
                [
                  "test_ols_multicolinearty",
                  "0"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "0"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_glm_regularized",
                  "0"
                ],
                [
                  "test_glm_one_data_point",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_glm_IRLS",
                "true"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_sample_weight_all_half",
                "9"
              ],
              [
                "test_glm_IRLS",
                "14"
              ],
              [
                "test_ols_multicolinearty",
                "5"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "1"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "3"
              ],
              [
                "test_glm_regularized",
                "8"
              ],
              [
                "test_glm_one_data_point",
                "4"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_sample_weight_all_half",
                []
              ],
              [
                "test_glm_IRLS",
                [
                  "json_dict"
                ]
              ],
              [
                "test_ols_multicolinearty",
                [
                  "X"
                ]
              ],
              [
                "test_glm_sample_weight_all_zero",
                []
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                [
                  "len_half"
                ]
              ],
              [
                "test_glm_regularized",
                []
              ],
              [
                "test_glm_one_data_point",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_sample_weight_all_half",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_glm_IRLS",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_ols_multicolinearty",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_glm_sample_weight_all_zero",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_glm_regularized",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_glm_one_data_point",
                [
                  "self.Y",
                  "self.X"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7160923455328359,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_glm_regularized",
                  "test_glm_sample_weight_all_half",
                  0.9860443414220468
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "test_ols_multicolinearty",
                  0.7849554639306358
                ],
                [
                  "test_glm_IRLS",
                  "test_glm_sample_weight_all_half",
                  0.9858069546546194
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "test_ols_multicolinearty",
                  0.6917391201887908
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "test_glm_one_data_point",
                  0.6117253825751168
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "test_GLM_sample_weight_half_zero_half_one",
                  0.523797675369424
                ],
                [
                  "test_glm_one_data_point",
                  "test_ols_multicolinearty",
                  0.7369094712580091
                ],
                [
                  "test_glm_regularized",
                  "test_ols_multicolinearty",
                  0.6967834015708189
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "test_glm_one_data_point",
                  0.6482264074500403
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "test_GLM_sample_weight_half_zero_half_one",
                  0.7672501344924734
                ],
                [
                  "test_glm_regularized",
                  "test_glm_sample_weight_all_zero",
                  0.5454545454545454
                ],
                [
                  "test_glm_regularized",
                  "test_GLM_sample_weight_half_zero_half_one",
                  0.5162449884525734
                ],
                [
                  "test_glm_IRLS",
                  "test_ols_multicolinearty",
                  0.7085036807739596
                ],
                [
                  "test_glm_regularized",
                  "test_glm_one_data_point",
                  0.8559175734733901
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "test_glm_one_data_point",
                  0.8471109751361574
                ],
                [
                  "test_glm_IRLS",
                  "test_glm_sample_weight_all_zero",
                  0.524528705554908
                ],
                [
                  "test_glm_IRLS",
                  "test_GLM_sample_weight_half_zero_half_one",
                  0.5292423713518898
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "test_glm_sample_weight_all_zero",
                  0.5555603073297949
                ],
                [
                  "test_glm_IRLS",
                  "test_glm_regularized",
                  0.9754622668684053
                ],
                [
                  "test_glm_IRLS",
                  "test_glm_one_data_point",
                  0.8377642871924815
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "test_ols_multicolinearty",
                  0.708911201689472
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_regularized",
                "true"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      },
      {
        "name": "GammaTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_glm_IRLS",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_glm_regularized",
                  "[]"
                ],
                [
                  "test_ols_multicolinearty",
                  "[]"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_glm_one_data_point",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "[PyCallExpression: self.assertRaises]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_glm_IRLS",
                  "[]"
                ],
                [
                  "test_glm_regularized",
                  "[]"
                ],
                [
                  "test_ols_multicolinearty",
                  "[]"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "[]"
                ],
                [
                  "test_glm_one_data_point",
                  "[]"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_glm_IRLS",
                  "false"
                ],
                [
                  "test_glm_regularized",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_glm_one_data_point",
                  "false"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_glm_IRLS",
                  "false"
                ],
                [
                  "test_glm_regularized",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_glm_one_data_point",
                  "false"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_glm_IRLS",
                  "false"
                ],
                [
                  "test_glm_regularized",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_glm_one_data_point",
                  "false"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_glm_IRLS",
                  "false"
                ],
                [
                  "test_glm_regularized",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_glm_one_data_point",
                  "false"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_glm_regularized",
                "true"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_IRLS",
                [
                  "self.data"
                ]
              ],
              [
                "test_glm_regularized",
                [
                  "self.data",
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_ols_multicolinearty",
                [
                  "self.data"
                ]
              ],
              [
                "test_glm_sample_weight_all_half",
                [
                  "self.data"
                ]
              ],
              [
                "test_glm_one_data_point",
                [
                  "self.data"
                ]
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                [
                  "self.data"
                ]
              ],
              [
                "test_glm_sample_weight_all_zero",
                [
                  "self.data"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_IRLS",
                "true"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "true"
              ],
              [
                "test_glm_one_data_point",
                "true"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_glm_IRLS",
                  "0"
                ],
                [
                  "test_glm_regularized",
                  "0"
                ],
                [
                  "test_ols_multicolinearty",
                  "0"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_glm_one_data_point",
                  "0"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_glm_IRLS",
                  "0"
                ],
                [
                  "test_glm_regularized",
                  "0"
                ],
                [
                  "test_ols_multicolinearty",
                  "0"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_glm_one_data_point",
                  "0"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_IRLS",
                "14"
              ],
              [
                "test_glm_regularized",
                "0"
              ],
              [
                "test_ols_multicolinearty",
                "4"
              ],
              [
                "test_glm_sample_weight_all_half",
                "9"
              ],
              [
                "test_glm_one_data_point",
                "4"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "3"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_IRLS",
                [
                  "json_dict"
                ]
              ],
              [
                "test_glm_regularized",
                []
              ],
              [
                "test_ols_multicolinearty",
                [
                  "X"
                ]
              ],
              [
                "test_glm_sample_weight_all_half",
                []
              ],
              [
                "test_glm_one_data_point",
                []
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                [
                  "len_half"
                ]
              ],
              [
                "test_glm_sample_weight_all_zero",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_IRLS",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_glm_regularized",
                []
              ],
              [
                "test_ols_multicolinearty",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_glm_sample_weight_all_half",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_glm_one_data_point",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_glm_sample_weight_all_zero",
                [
                  "self.Y",
                  "self.X"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.49803755266860555,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_glm_sample_weight_all_half",
                  "test_GLM_sample_weight_half_zero_half_one",
                  0.47851148063009186
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "test_ols_multicolinearty",
                  0.7227210002059407
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "test_glm_sample_weight_all_zero",
                  0.5079444971105784
                ],
                [
                  "test_glm_regularized",
                  "test_glm_sample_weight_all_half",
                  0.013460902380341908
                ],
                [
                  "test_glm_IRLS",
                  "test_glm_one_data_point",
                  0.7835695930837983
                ],
                [
                  "test_glm_regularized",
                  "test_ols_multicolinearty",
                  0.03366221139379705
                ],
                [
                  "test_glm_IRLS",
                  "test_glm_regularized",
                  0.009091326516769261
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "test_glm_one_data_point",
                  0.6802136259558411
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "test_glm_one_data_point",
                  0.6431602429169263
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "test_ols_multicolinearty",
                  0.799355377812315
                ],
                [
                  "test_glm_regularized",
                  "test_glm_one_data_point",
                  0.05038637736509177
                ],
                [
                  "test_glm_IRLS",
                  "test_glm_sample_weight_all_half",
                  0.9888098667003623
                ],
                [
                  "test_glm_regularized",
                  "test_glm_sample_weight_all_zero",
                  0.14638501094227999
                ],
                [
                  "test_glm_IRLS",
                  "test_glm_sample_weight_all_zero",
                  0.49980207654815856
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "test_glm_one_data_point",
                  0.7716933484209145
                ],
                [
                  "test_glm_IRLS",
                  "test_GLM_sample_weight_half_zero_half_one",
                  0.48136747043112443
                ],
                [
                  "test_glm_regularized",
                  "test_GLM_sample_weight_half_zero_half_one",
                  0.06417938247608371
                ],
                [
                  "test_glm_IRLS",
                  "test_ols_multicolinearty",
                  0.6268599609428189
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "test_ols_multicolinearty",
                  0.6313524131264803
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "test_GLM_sample_weight_half_zero_half_one",
                  0.7672501344924734
                ],
                [
                  "test_glm_one_data_point",
                  "test_ols_multicolinearty",
                  0.7590123065885291
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      },
      {
        "name": "GaussianTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_glm_IRLS",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_glm_regularized",
                  "[]"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_glm_one_data_point",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_ols_multicolinearty",
                  "[]"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_glm_IRLS",
                  "[]"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_glm_regularized",
                  "[]"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "[]"
                ],
                [
                  "test_glm_one_data_point",
                  "[]"
                ],
                [
                  "test_ols_multicolinearty",
                  "[]"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_glm_IRLS",
                  "false"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_glm_regularized",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_glm_one_data_point",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_glm_IRLS",
                  "false"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_glm_regularized",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_glm_one_data_point",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_glm_IRLS",
                  "false"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_glm_regularized",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_glm_one_data_point",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_glm_IRLS",
                  "false"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_glm_regularized",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_glm_one_data_point",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_regularized",
                "true"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_IRLS",
                [
                  "self.data"
                ]
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                [
                  "self.data"
                ]
              ],
              [
                "test_glm_regularized",
                [
                  "self.data",
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_glm_sample_weight_all_zero",
                [
                  "self.data"
                ]
              ],
              [
                "test_glm_one_data_point",
                [
                  "self.data"
                ]
              ],
              [
                "test_ols_multicolinearty",
                [
                  "self.data"
                ]
              ],
              [
                "test_glm_sample_weight_all_half",
                [
                  "self.data"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_IRLS",
                "true"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "true"
              ],
              [
                "test_glm_one_data_point",
                "true"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_glm_IRLS",
                  "0"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_glm_regularized",
                  "0"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "0"
                ],
                [
                  "test_glm_one_data_point",
                  "0"
                ],
                [
                  "test_ols_multicolinearty",
                  "0"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_glm_IRLS",
                  "0"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_glm_regularized",
                  "0"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "0"
                ],
                [
                  "test_glm_one_data_point",
                  "0"
                ],
                [
                  "test_ols_multicolinearty",
                  "0"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_IRLS",
                "14"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "3"
              ],
              [
                "test_glm_regularized",
                "0"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "1"
              ],
              [
                "test_glm_one_data_point",
                "4"
              ],
              [
                "test_ols_multicolinearty",
                "4"
              ],
              [
                "test_glm_sample_weight_all_half",
                "9"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_IRLS",
                [
                  "json_dict"
                ]
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                [
                  "len_half"
                ]
              ],
              [
                "test_glm_regularized",
                []
              ],
              [
                "test_glm_sample_weight_all_zero",
                []
              ],
              [
                "test_glm_one_data_point",
                []
              ],
              [
                "test_ols_multicolinearty",
                [
                  "X"
                ]
              ],
              [
                "test_glm_sample_weight_all_half",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_IRLS",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_glm_regularized",
                []
              ],
              [
                "test_glm_sample_weight_all_zero",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_glm_one_data_point",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_ols_multicolinearty",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_glm_sample_weight_all_half",
                [
                  "self.Y",
                  "self.X"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5041890916950236,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "test_glm_one_data_point",
                  0.6500736652237377
                ],
                [
                  "test_glm_IRLS",
                  "test_glm_sample_weight_all_zero",
                  0.5176608048396919
                ],
                [
                  "test_glm_regularized",
                  "test_glm_one_data_point",
                  0.05092798780987829
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "test_glm_sample_weight_all_zero",
                  0.5343361096311322
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "test_ols_multicolinearty",
                  0.6555959640709147
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "test_GLM_sample_weight_half_zero_half_one",
                  0.5125995118336095
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "test_glm_one_data_point",
                  0.6875253404264876
                ],
                [
                  "test_glm_regularized",
                  "test_GLM_sample_weight_half_zero_half_one",
                  0.06417938247608371
                ],
                [
                  "test_glm_IRLS",
                  "test_ols_multicolinearty",
                  0.668208383511862
                ],
                [
                  "test_glm_regularized",
                  "test_ols_multicolinearty",
                  0.033951991873252194
                ],
                [
                  "test_glm_IRLS",
                  "test_GLM_sample_weight_half_zero_half_one",
                  0.5297438542224311
                ],
                [
                  "test_glm_one_data_point",
                  "test_ols_multicolinearty",
                  0.7536023054755042
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "test_ols_multicolinearty",
                  0.8026049162818213
                ],
                [
                  "test_glm_IRLS",
                  "test_glm_sample_weight_all_half",
                  0.9851632231042199
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "test_GLM_sample_weight_half_zero_half_one",
                  0.7672501344924734
                ],
                [
                  "test_glm_IRLS",
                  "test_glm_regularized",
                  0.014872275085960772
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "test_ols_multicolinearty",
                  0.7206590917723424
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "test_glm_one_data_point",
                  0.7301882159829832
                ],
                [
                  "test_glm_regularized",
                  "test_glm_sample_weight_all_half",
                  0.02059679927723361
                ],
                [
                  "test_glm_regularized",
                  "test_glm_sample_weight_all_zero",
                  0.14638501094227999
                ],
                [
                  "test_glm_IRLS",
                  "test_glm_one_data_point",
                  0.7418459572615949
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      },
      {
        "name": "BinomialTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_glm_sample_weight_all_zero",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_glm_IRLS",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_glm_regularized",
                  "[]"
                ],
                [
                  "test_ols_multicolinearty",
                  "[]"
                ],
                [
                  "test_glm_one_data_point",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_glm_sample_weight_all_zero",
                  "[]"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "[]"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_glm_IRLS",
                  "[]"
                ],
                [
                  "test_glm_regularized",
                  "[]"
                ],
                [
                  "test_ols_multicolinearty",
                  "[]"
                ],
                [
                  "test_glm_one_data_point",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_glm_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_glm_IRLS",
                  "false"
                ],
                [
                  "test_glm_regularized",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_glm_one_data_point",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_glm_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_glm_IRLS",
                  "false"
                ],
                [
                  "test_glm_regularized",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_glm_one_data_point",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_glm_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_glm_IRLS",
                  "false"
                ],
                [
                  "test_glm_regularized",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_glm_one_data_point",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_glm_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_glm_IRLS",
                  "false"
                ],
                [
                  "test_glm_regularized",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_glm_one_data_point",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_glm_regularized",
                "true"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_sample_weight_all_zero",
                [
                  "self.data"
                ]
              ],
              [
                "test_glm_sample_weight_all_half",
                [
                  "self.data"
                ]
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                [
                  "self.data"
                ]
              ],
              [
                "test_glm_IRLS",
                [
                  "self.data"
                ]
              ],
              [
                "test_glm_regularized",
                [
                  "self.data",
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_ols_multicolinearty",
                [
                  "self.data"
                ]
              ],
              [
                "test_glm_one_data_point",
                [
                  "self.data"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_sample_weight_all_zero",
                "true"
              ],
              [
                "test_glm_sample_weight_all_half",
                "true"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_IRLS",
                "true"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_glm_sample_weight_all_zero",
                  "0"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_glm_IRLS",
                  "0"
                ],
                [
                  "test_glm_regularized",
                  "0"
                ],
                [
                  "test_ols_multicolinearty",
                  "0"
                ],
                [
                  "test_glm_one_data_point",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_glm_sample_weight_all_zero",
                  "0"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_glm_IRLS",
                  "0"
                ],
                [
                  "test_glm_regularized",
                  "0"
                ],
                [
                  "test_ols_multicolinearty",
                  "0"
                ],
                [
                  "test_glm_one_data_point",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "true"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_IRLS",
                "true"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_sample_weight_all_zero",
                "1"
              ],
              [
                "test_glm_sample_weight_all_half",
                "10"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "3"
              ],
              [
                "test_glm_IRLS",
                "15"
              ],
              [
                "test_glm_regularized",
                "0"
              ],
              [
                "test_ols_multicolinearty",
                "5"
              ],
              [
                "test_glm_one_data_point",
                "4"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_sample_weight_all_zero",
                []
              ],
              [
                "test_glm_sample_weight_all_half",
                [
                  "pred"
                ]
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                [
                  "len_half"
                ]
              ],
              [
                "test_glm_IRLS",
                [
                  "json_dict",
                  "pred"
                ]
              ],
              [
                "test_glm_regularized",
                []
              ],
              [
                "test_ols_multicolinearty",
                [
                  "X"
                ]
              ],
              [
                "test_glm_one_data_point",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_sample_weight_all_zero",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_glm_sample_weight_all_half",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_glm_IRLS",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_glm_regularized",
                []
              ],
              [
                "test_ols_multicolinearty",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_glm_one_data_point",
                [
                  "self.Y",
                  "self.X"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4696909084322146,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_glm_sample_weight_all_half",
                  "test_GLM_sample_weight_half_zero_half_one",
                  0.40367237227891944
                ],
                [
                  "test_glm_IRLS",
                  "test_ols_multicolinearty",
                  0.5732341435466081
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "test_ols_multicolinearty",
                  0.7922754715117605
                ],
                [
                  "test_glm_one_data_point",
                  "test_ols_multicolinearty",
                  0.7285774544249181
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "test_ols_multicolinearty",
                  0.6909422044885541
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "test_glm_one_data_point",
                  0.5922159206056261
                ],
                [
                  "test_glm_regularized",
                  "test_glm_one_data_point",
                  0.06970150353573229
                ],
                [
                  "test_glm_regularized",
                  "test_ols_multicolinearty",
                  0.06601782722034923
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "test_glm_one_data_point",
                  0.6052408050568846
                ],
                [
                  "test_glm_IRLS",
                  "test_glm_sample_weight_all_zero",
                  0.4585620689217218
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "test_glm_sample_weight_all_zero",
                  0.4570782820293727
                ],
                [
                  "test_glm_IRLS",
                  "test_glm_one_data_point",
                  0.7400064737403461
                ],
                [
                  "test_glm_regularized",
                  "test_GLM_sample_weight_half_zero_half_one",
                  0.09076335312240773
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "test_glm_one_data_point",
                  0.7372772462293737
                ],
                [
                  "test_glm_IRLS",
                  "test_glm_regularized",
                  0.005819837000384103
                ],
                [
                  "test_glm_regularized",
                  "test_glm_sample_weight_all_half",
                  0.0047595403023152115
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "test_ols_multicolinearty",
                  0.5651206138109818
                ],
                [
                  "test_glm_regularized",
                  "test_glm_sample_weight_all_zero",
                  0.10350983390135314
                ],
                [
                  "test_glm_IRLS",
                  "test_GLM_sample_weight_half_zero_half_one",
                  0.411777674608604
                ],
                [
                  "test_glm_IRLS",
                  "test_glm_sample_weight_all_half",
                  0.9997063162478221
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "test_GLM_sample_weight_half_zero_half_one",
                  0.7672501344924734
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      },
      {
        "name": "InverseGaussianTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_glm_one_data_point",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_ols_multicolinearty",
                  "[]"
                ],
                [
                  "test_glm_regularized",
                  "[]"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_glm_IRLS",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_glm_one_data_point",
                  "[]"
                ],
                [
                  "test_ols_multicolinearty",
                  "[]"
                ],
                [
                  "test_glm_regularized",
                  "[]"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "[]"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "[]"
                ],
                [
                  "test_glm_IRLS",
                  "[]"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_glm_one_data_point",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_glm_regularized",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_glm_IRLS",
                  "false"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_glm_one_data_point",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_glm_regularized",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_glm_IRLS",
                  "false"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_glm_one_data_point",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_glm_regularized",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_glm_IRLS",
                  "false"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_glm_one_data_point",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_glm_regularized",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_glm_IRLS",
                  "false"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_one_data_point",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_regularized",
                "true"
              ],
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_one_data_point",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_one_data_point",
                [
                  "self.res"
                ]
              ],
              [
                "test_ols_multicolinearty",
                [
                  "self.res"
                ]
              ],
              [
                "test_glm_regularized",
                [
                  "self.res",
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_glm_sample_weight_all_half",
                []
              ],
              [
                "test_glm_sample_weight_all_zero",
                [
                  "self.res"
                ]
              ],
              [
                "test_glm_IRLS",
                []
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                [
                  "self.res"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_one_data_point",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_one_data_point",
                "true"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "true"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "true"
              ],
              [
                "test_glm_IRLS",
                "true"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_glm_one_data_point",
                  "0"
                ],
                [
                  "test_ols_multicolinearty",
                  "0"
                ],
                [
                  "test_glm_regularized",
                  "0"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "0"
                ],
                [
                  "test_glm_IRLS",
                  "0"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_glm_one_data_point",
                  "0"
                ],
                [
                  "test_ols_multicolinearty",
                  "0"
                ],
                [
                  "test_glm_regularized",
                  "0"
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "0"
                ],
                [
                  "test_glm_IRLS",
                  "0"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_one_data_point",
                "true"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "true"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_glm_IRLS",
                "true"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_one_data_point",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_one_data_point",
                "4"
              ],
              [
                "test_ols_multicolinearty",
                "4"
              ],
              [
                "test_glm_regularized",
                "0"
              ],
              [
                "test_glm_sample_weight_all_half",
                "9"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "1"
              ],
              [
                "test_glm_IRLS",
                "14"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "3"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_one_data_point",
                []
              ],
              [
                "test_ols_multicolinearty",
                [
                  "X"
                ]
              ],
              [
                "test_glm_regularized",
                []
              ],
              [
                "test_glm_sample_weight_all_half",
                []
              ],
              [
                "test_glm_sample_weight_all_zero",
                []
              ],
              [
                "test_glm_IRLS",
                [
                  "json_dict"
                ]
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                [
                  "len_half"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_one_data_point",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_ols_multicolinearty",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_glm_regularized",
                []
              ],
              [
                "test_glm_sample_weight_all_half",
                [
                  "self.res",
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_glm_sample_weight_all_zero",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_glm_IRLS",
                [
                  "self.res",
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                [
                  "self.Y",
                  "self.X"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5215872668649711,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "test_glm_one_data_point",
                  0.631028664512861
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "test_ols_multicolinearty",
                  0.7225626249732675
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "test_glm_sample_weight_all_zero",
                  0.5860379032114932
                ],
                [
                  "test_glm_IRLS",
                  "test_glm_sample_weight_all_zero",
                  0.5282060210185568
                ],
                [
                  "test_glm_regularized",
                  "test_glm_sample_weight_all_half",
                  0.04474622547326825
                ],
                [
                  "test_glm_IRLS",
                  "test_ols_multicolinearty",
                  0.7582726030303371
                ],
                [
                  "test_glm_regularized",
                  "test_GLM_sample_weight_half_zero_half_one",
                  0.06388765649999399
                ],
                [
                  "test_glm_IRLS",
                  "test_glm_regularized",
                  0.03912303982179757
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "test_GLM_sample_weight_half_zero_half_one",
                  0.6193918212532793
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "test_ols_multicolinearty",
                  0.8038737599775981
                ],
                [
                  "test_glm_regularized",
                  "test_glm_sample_weight_all_zero",
                  0.14552137502179976
                ],
                [
                  "test_glm_IRLS",
                  "test_GLM_sample_weight_half_zero_half_one",
                  0.6706936200477749
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "test_glm_one_data_point",
                  0.6697133644254595
                ],
                [
                  "test_glm_IRLS",
                  "test_glm_one_data_point",
                  0.679138532375028
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "test_GLM_sample_weight_half_zero_half_one",
                  0.7695866241661851
                ],
                [
                  "test_glm_one_data_point",
                  "test_ols_multicolinearty",
                  0.7530541488744215
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "test_glm_one_data_point",
                  0.7430322025038206
                ],
                [
                  "test_glm_IRLS",
                  "test_glm_sample_weight_all_half",
                  0.8996181855477065
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "test_ols_multicolinearty",
                  0.7435458219165756
                ],
                [
                  "test_glm_regularized",
                  "test_glm_one_data_point",
                  0.04844384105989372
                ],
                [
                  "test_glm_regularized",
                  "test_ols_multicolinearty",
                  0.033854568453276626
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_one_data_point",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      },
      {
        "name": "NegativeBinomialTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_glm_sample_weight_all_half",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_glm_regularized",
                  "[]"
                ],
                [
                  "test_ols_multicolinearty",
                  "[]"
                ],
                [
                  "test_glm_IRLS",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_glm_one_data_point",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_glm_sample_weight_all_half",
                  "[]"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "[]"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_glm_regularized",
                  "[]"
                ],
                [
                  "test_ols_multicolinearty",
                  "[]"
                ],
                [
                  "test_glm_IRLS",
                  "[]"
                ],
                [
                  "test_glm_one_data_point",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_glm_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_glm_regularized",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_glm_IRLS",
                  "false"
                ],
                [
                  "test_glm_one_data_point",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_glm_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_glm_regularized",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_glm_IRLS",
                  "false"
                ],
                [
                  "test_glm_one_data_point",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_glm_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_glm_regularized",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_glm_IRLS",
                  "false"
                ],
                [
                  "test_glm_one_data_point",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_glm_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_glm_regularized",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_glm_IRLS",
                  "false"
                ],
                [
                  "test_glm_one_data_point",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_regularized",
                "true"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_sample_weight_all_half",
                []
              ],
              [
                "test_glm_sample_weight_all_zero",
                []
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                []
              ],
              [
                "test_glm_regularized",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_ols_multicolinearty",
                []
              ],
              [
                "test_glm_IRLS",
                []
              ],
              [
                "test_glm_one_data_point",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_sample_weight_all_half",
                "true"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "true"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_IRLS",
                "true"
              ],
              [
                "test_glm_one_data_point",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_glm_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "0"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_glm_regularized",
                  "0"
                ],
                [
                  "test_ols_multicolinearty",
                  "0"
                ],
                [
                  "test_glm_IRLS",
                  "0"
                ],
                [
                  "test_glm_one_data_point",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_glm_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "0"
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_glm_regularized",
                  "0"
                ],
                [
                  "test_ols_multicolinearty",
                  "0"
                ],
                [
                  "test_glm_IRLS",
                  "0"
                ],
                [
                  "test_glm_one_data_point",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_sample_weight_all_half",
                "true"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_IRLS",
                "true"
              ],
              [
                "test_glm_one_data_point",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_sample_weight_all_half",
                "9"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "1"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "3"
              ],
              [
                "test_glm_regularized",
                "0"
              ],
              [
                "test_ols_multicolinearty",
                "4"
              ],
              [
                "test_glm_IRLS",
                "14"
              ],
              [
                "test_glm_one_data_point",
                "4"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_sample_weight_all_half",
                []
              ],
              [
                "test_glm_sample_weight_all_zero",
                []
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                [
                  "len_half"
                ]
              ],
              [
                "test_glm_regularized",
                []
              ],
              [
                "test_ols_multicolinearty",
                [
                  "X"
                ]
              ],
              [
                "test_glm_IRLS",
                [
                  "json_dict"
                ]
              ],
              [
                "test_glm_one_data_point",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_glm_sample_weight_all_half",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_glm_sample_weight_all_zero",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_glm_regularized",
                []
              ],
              [
                "test_ols_multicolinearty",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_glm_IRLS",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_glm_one_data_point",
                [
                  "self.Y",
                  "self.X"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5003964151710176,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_glm_IRLS",
                  "test_glm_sample_weight_all_half",
                  0.9886286568729131
                ],
                [
                  "test_glm_regularized",
                  "test_glm_sample_weight_all_zero",
                  0.14552137502179976
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "test_ols_multicolinearty",
                  0.8038737599775981
                ],
                [
                  "test_glm_regularized",
                  "test_ols_multicolinearty",
                  0.033854568453276626
                ],
                [
                  "test_glm_IRLS",
                  "test_glm_sample_weight_all_zero",
                  0.5119156088838482
                ],
                [
                  "test_glm_one_data_point",
                  "test_ols_multicolinearty",
                  0.7439643645196868
                ],
                [
                  "test_glm_IRLS",
                  "test_glm_one_data_point",
                  0.7355908889732804
                ],
                [
                  "test_glm_IRLS",
                  "test_ols_multicolinearty",
                  0.6575726921400934
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "test_glm_one_data_point",
                  0.676359706861913
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "test_ols_multicolinearty",
                  0.7225626249732675
                ],
                [
                  "test_glm_regularized",
                  "test_glm_sample_weight_all_half",
                  0.018715306490217225
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "test_glm_sample_weight_all_zero",
                  0.5310780412101108
                ],
                [
                  "test_glm_IRLS",
                  "test_glm_regularized",
                  0.012948970103254506
                ],
                [
                  "test_glm_sample_weight_all_zero",
                  "test_GLM_sample_weight_half_zero_half_one",
                  0.7695866241661851
                ],
                [
                  "test_glm_IRLS",
                  "test_GLM_sample_weight_half_zero_half_one",
                  0.5152111976764727
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "test_ols_multicolinearty",
                  0.6541905799997676
                ],
                [
                  "test_glm_regularized",
                  "test_GLM_sample_weight_half_zero_half_one",
                  0.06388765649999399
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "test_glm_one_data_point",
                  0.7304764358588511
                ],
                [
                  "test_GLM_sample_weight_half_zero_half_one",
                  "test_glm_one_data_point",
                  0.6372910938062775
                ],
                [
                  "test_glm_regularized",
                  "test_glm_one_data_point",
                  0.04892460547900816
                ],
                [
                  "test_glm_sample_weight_all_half",
                  "test_GLM_sample_weight_half_zero_half_one",
                  0.506169960623555
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_glm_sample_weight_all_half",
                "false"
              ],
              [
                "test_glm_sample_weight_all_zero",
                "false"
              ],
              [
                "test_GLM_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_glm_regularized",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_glm_IRLS",
                "false"
              ],
              [
                "test_glm_one_data_point",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      }
    ]
  },
  {
    "name": "tests_\u0026_test_OLS.py",
    "testCases": [
      {
        "name": "UnivariateOLSTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_ols_sample_weight_all_half",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_ols_one_data_point",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_ols",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_ols_l1_regularized",
                  "[]"
                ],
                [
                  "test_ols_elastic_net_regularized",
                  "[]"
                ],
                [
                  "test_ols_multicolinearty",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_ols_l2_regularized",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_ols_sample_weight_all_half",
                  "[]"
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "[]"
                ],
                [
                  "test_ols_one_data_point",
                  "[]"
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_ols",
                  "[]"
                ],
                [
                  "test_ols_l1_regularized",
                  "[]"
                ],
                [
                  "test_ols_elastic_net_regularized",
                  "[]"
                ],
                [
                  "test_ols_multicolinearty",
                  "[]"
                ],
                [
                  "test_ols_l2_regularized",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_ols_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_ols_one_data_point",
                  "false"
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_ols",
                  "false"
                ],
                [
                  "test_ols_l1_regularized",
                  "false"
                ],
                [
                  "test_ols_elastic_net_regularized",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_ols_l2_regularized",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_ols_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_ols_one_data_point",
                  "false"
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_ols",
                  "false"
                ],
                [
                  "test_ols_l1_regularized",
                  "false"
                ],
                [
                  "test_ols_elastic_net_regularized",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_ols_l2_regularized",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_ols_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_ols_one_data_point",
                  "false"
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_ols",
                  "false"
                ],
                [
                  "test_ols_l1_regularized",
                  "false"
                ],
                [
                  "test_ols_elastic_net_regularized",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_ols_l2_regularized",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_ols_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_ols_one_data_point",
                  "false"
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_ols",
                  "false"
                ],
                [
                  "test_ols_l1_regularized",
                  "false"
                ],
                [
                  "test_ols_elastic_net_regularized",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_ols_l2_regularized",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": true,
            "detail": [
              [
                "test_ols_sample_weight_all_half",
                "false"
              ],
              [
                "test_ols_sample_weight_all_zero",
                "false"
              ],
              [
                "test_ols_one_data_point",
                "false"
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_ols",
                "false"
              ],
              [
                "test_ols_l1_regularized",
                "true"
              ],
              [
                "test_ols_elastic_net_regularized",
                "true"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_ols_l2_regularized",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_ols_sample_weight_all_half",
                "false"
              ],
              [
                "test_ols_sample_weight_all_zero",
                "false"
              ],
              [
                "test_ols_one_data_point",
                "false"
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_ols",
                "false"
              ],
              [
                "test_ols_l1_regularized",
                "false"
              ],
              [
                "test_ols_elastic_net_regularized",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_ols_l2_regularized",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_ols_sample_weight_all_half",
                []
              ],
              [
                "test_ols_sample_weight_all_zero",
                []
              ],
              [
                "test_ols_one_data_point",
                []
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                []
              ],
              [
                "test_ols",
                []
              ],
              [
                "test_ols_l1_regularized",
                [
                  "self.data_longley"
                ]
              ],
              [
                "test_ols_elastic_net_regularized",
                [
                  "self.data_longley"
                ]
              ],
              [
                "test_ols_multicolinearty",
                []
              ],
              [
                "test_ols_l2_regularized",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_ols_sample_weight_all_half",
                "false"
              ],
              [
                "test_ols_sample_weight_all_zero",
                "false"
              ],
              [
                "test_ols_one_data_point",
                "false"
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_ols",
                "false"
              ],
              [
                "test_ols_l1_regularized",
                "false"
              ],
              [
                "test_ols_elastic_net_regularized",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_ols_l2_regularized",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_ols_sample_weight_all_half",
                "false"
              ],
              [
                "test_ols_sample_weight_all_zero",
                "true"
              ],
              [
                "test_ols_one_data_point",
                "false"
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_ols",
                "false"
              ],
              [
                "test_ols_l1_regularized",
                "false"
              ],
              [
                "test_ols_elastic_net_regularized",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_ols_l2_regularized",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_ols_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "0"
                ],
                [
                  "test_ols_one_data_point",
                  "0"
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_ols",
                  "0"
                ],
                [
                  "test_ols_l1_regularized",
                  "0"
                ],
                [
                  "test_ols_elastic_net_regularized",
                  "0"
                ],
                [
                  "test_ols_multicolinearty",
                  "0"
                ],
                [
                  "test_ols_l2_regularized",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_ols_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "0"
                ],
                [
                  "test_ols_one_data_point",
                  "0"
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_ols",
                  "0"
                ],
                [
                  "test_ols_l1_regularized",
                  "0"
                ],
                [
                  "test_ols_elastic_net_regularized",
                  "0"
                ],
                [
                  "test_ols_multicolinearty",
                  "0"
                ],
                [
                  "test_ols_l2_regularized",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_ols_sample_weight_all_half",
                "false"
              ],
              [
                "test_ols_sample_weight_all_zero",
                "false"
              ],
              [
                "test_ols_one_data_point",
                "false"
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_ols",
                "false"
              ],
              [
                "test_ols_l1_regularized",
                "false"
              ],
              [
                "test_ols_elastic_net_regularized",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_ols_l2_regularized",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_ols_sample_weight_all_half",
                "false"
              ],
              [
                "test_ols_sample_weight_all_zero",
                "false"
              ],
              [
                "test_ols_one_data_point",
                "false"
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_ols",
                "false"
              ],
              [
                "test_ols_l1_regularized",
                "false"
              ],
              [
                "test_ols_elastic_net_regularized",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_ols_l2_regularized",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_ols_sample_weight_all_half",
                "6"
              ],
              [
                "test_ols_sample_weight_all_zero",
                "1"
              ],
              [
                "test_ols_one_data_point",
                "4"
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                "3"
              ],
              [
                "test_ols",
                "12"
              ],
              [
                "test_ols_l1_regularized",
                "0"
              ],
              [
                "test_ols_elastic_net_regularized",
                "0"
              ],
              [
                "test_ols_multicolinearty",
                "5"
              ],
              [
                "test_ols_l2_regularized",
                "7"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_ols_sample_weight_all_half",
                []
              ],
              [
                "test_ols_sample_weight_all_zero",
                []
              ],
              [
                "test_ols_one_data_point",
                []
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                [
                  "len_half"
                ]
              ],
              [
                "test_ols",
                [
                  "json_dict"
                ]
              ],
              [
                "test_ols_l1_regularized",
                []
              ],
              [
                "test_ols_elastic_net_regularized",
                []
              ],
              [
                "test_ols_multicolinearty",
                [
                  "X"
                ]
              ],
              [
                "test_ols_l2_regularized",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_ols_sample_weight_all_half",
                [
                  "self.data_longley"
                ]
              ],
              [
                "test_ols_sample_weight_all_zero",
                [
                  "self.data_longley"
                ]
              ],
              [
                "test_ols_one_data_point",
                [
                  "self.data_longley"
                ]
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                [
                  "self.data_longley"
                ]
              ],
              [
                "test_ols",
                [
                  "self.data_longley"
                ]
              ],
              [
                "test_ols_l1_regularized",
                []
              ],
              [
                "test_ols_elastic_net_regularized",
                []
              ],
              [
                "test_ols_multicolinearty",
                [
                  "self.data_longley"
                ]
              ],
              [
                "test_ols_l2_regularized",
                [
                  "self.data_longley"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4788286644909994,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_ols_one_data_point",
                  "test_ols_multicolinearty",
                  0.7725346197371433
                ],
                [
                  "test_ols",
                  "test_ols_multicolinearty",
                  0.6895531223529233
                ],
                [
                  "test_ols",
                  "test_ols_sample_weight_all_zero",
                  0.5248952430085793
                ],
                [
                  "test_ols_elastic_net_regularized",
                  "test_ols_multicolinearty",
                  0.16858828549026628
                ],
                [
                  "test_ols_l1_regularized",
                  "test_ols_l2_regularized",
                  0.1582150389097374
                ],
                [
                  "test_ols_l2_regularized",
                  "test_ols_sample_weight_all_half",
                  0.8320485828933217
                ],
                [
                  "test_ols_l1_regularized",
                  "test_ols_sample_weight_half_zero_half_one",
                  0.22596922689443352
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "test_ols_multicolinearty",
                  0.6511192534004325
                ],
                [
                  "test_ols",
                  "test_ols_one_data_point",
                  0.7214848034579704
                ],
                [
                  "test_ols_elastic_net_regularized",
                  "test_ols_sample_weight_all_zero",
                  0.18371173070873834
                ],
                [
                  "test_ols_elastic_net_regularized",
                  "test_ols_one_data_point",
                  0.15510938012770425
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "test_ols_sample_weight_half_zero_half_one",
                  0.752772652709081
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "test_ols_one_data_point",
                  0.6988911581828603
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "test_ols_multicolinearty",
                  0.7268012858687843
                ],
                [
                  "test_ols_l2_regularized",
                  "test_ols_elastic_net_regularized",
                  0.11117813545008574
                ],
                [
                  "test_ols_l1_regularized",
                  "test_ols_one_data_point",
                  0.24374331162924956
                ],
                [
                  "test_ols",
                  "test_ols_elastic_net_regularized",
                  0.10067202009503794
                ],
                [
                  "test_ols_l1_regularized",
                  "test_ols_sample_weight_all_zero",
                  0.26536138880151094
                ],
                [
                  "test_ols_elastic_net_regularized",
                  "test_ols_sample_weight_all_half",
                  0.10124890828534827
                ],
                [
                  "test_ols_l2_regularized",
                  "test_ols_multicolinearty",
                  0.6055537785080393
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "test_ols_sample_weight_half_zero_half_one",
                  0.5058369315534726
                ],
                [
                  "test_ols_l1_regularized",
                  "test_ols_sample_weight_all_half",
                  0.1656800317396608
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "test_ols_one_data_point",
                  0.6389104571987859
                ],
                [
                  "test_ols",
                  "test_ols_sample_weight_all_half",
                  0.9753444666257121
                ],
                [
                  "test_ols_l2_regularized",
                  "test_ols_sample_weight_all_zero",
                  0.4111131084409499
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "test_ols_sample_weight_all_zero",
                  0.5241990703432919
                ],
                [
                  "test_ols_l2_regularized",
                  "test_ols_one_data_point",
                  0.5230282397651671
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "test_ols_multicolinearty",
                  0.7936109668075673
                ],
                [
                  "test_ols_l1_regularized",
                  "test_ols_elastic_net_regularized",
                  0.9333333333333333
                ],
                [
                  "test_ols",
                  "test_ols_l2_regularized",
                  0.8217283091761997
                ],
                [
                  "test_ols_elastic_net_regularized",
                  "test_ols_sample_weight_half_zero_half_one",
                  0.1536590742882148
                ],
                [
                  "test_ols",
                  "test_ols_l1_regularized",
                  0.16970426244592107
                ],
                [
                  "test_ols_l1_regularized",
                  "test_ols_multicolinearty",
                  0.26299772536481536
                ],
                [
                  "test_ols_l2_regularized",
                  "test_ols_sample_weight_half_zero_half_one",
                  0.43481833814804693
                ],
                [
                  "test_ols",
                  "test_ols_sample_weight_half_zero_half_one",
                  0.5514303920708247
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "test_ols_one_data_point",
                  0.6829852878627684
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_ols_sample_weight_all_half",
                "false"
              ],
              [
                "test_ols_sample_weight_all_zero",
                "false"
              ],
              [
                "test_ols_one_data_point",
                "false"
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_ols",
                "false"
              ],
              [
                "test_ols_l1_regularized",
                "false"
              ],
              [
                "test_ols_elastic_net_regularized",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "true"
              ],
              [
                "test_ols_l2_regularized",
                "true"
              ]
            ]
          }
        ],
        "numberOfMethods": 9
      },
      {
        "name": "IndependentMultivariateOLSTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_ols_l1_regularized",
                  "[]"
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_ols_multicolinearty",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_ols",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_ols_l2_regularized",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_ols_one_data_point",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_ols_l1_regularized",
                  "[]"
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "[]"
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_ols_multicolinearty",
                  "[]"
                ],
                [
                  "test_ols",
                  "[]"
                ],
                [
                  "test_ols_l2_regularized",
                  "[]"
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "[]"
                ],
                [
                  "test_ols_one_data_point",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_ols_l1_regularized",
                  "false"
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_ols",
                  "false"
                ],
                [
                  "test_ols_l2_regularized",
                  "false"
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_ols_one_data_point",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_ols_l1_regularized",
                  "false"
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_ols",
                  "false"
                ],
                [
                  "test_ols_l2_regularized",
                  "false"
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_ols_one_data_point",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_ols_l1_regularized",
                  "false"
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_ols",
                  "false"
                ],
                [
                  "test_ols_l2_regularized",
                  "false"
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_ols_one_data_point",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_ols_l1_regularized",
                  "false"
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_ols",
                  "false"
                ],
                [
                  "test_ols_l2_regularized",
                  "false"
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_ols_one_data_point",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": true,
            "detail": [
              [
                "test_ols_l1_regularized",
                "true"
              ],
              [
                "test_ols_sample_weight_all_zero",
                "false"
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_ols",
                "false"
              ],
              [
                "test_ols_l2_regularized",
                "false"
              ],
              [
                "test_ols_sample_weight_all_half",
                "false"
              ],
              [
                "test_ols_one_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_ols_l1_regularized",
                "false"
              ],
              [
                "test_ols_sample_weight_all_zero",
                "false"
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_ols",
                "false"
              ],
              [
                "test_ols_l2_regularized",
                "false"
              ],
              [
                "test_ols_sample_weight_all_half",
                "false"
              ],
              [
                "test_ols_one_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_ols_l1_regularized",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_ols_sample_weight_all_zero",
                []
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                []
              ],
              [
                "test_ols_multicolinearty",
                []
              ],
              [
                "test_ols",
                []
              ],
              [
                "test_ols_l2_regularized",
                []
              ],
              [
                "test_ols_sample_weight_all_half",
                []
              ],
              [
                "test_ols_one_data_point",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_ols_l1_regularized",
                "false"
              ],
              [
                "test_ols_sample_weight_all_zero",
                "false"
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_ols",
                "false"
              ],
              [
                "test_ols_l2_regularized",
                "false"
              ],
              [
                "test_ols_sample_weight_all_half",
                "false"
              ],
              [
                "test_ols_one_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_ols_l1_regularized",
                "false"
              ],
              [
                "test_ols_sample_weight_all_zero",
                "true"
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_ols",
                "false"
              ],
              [
                "test_ols_l2_regularized",
                "false"
              ],
              [
                "test_ols_sample_weight_all_half",
                "false"
              ],
              [
                "test_ols_one_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_ols_l1_regularized",
                  "0"
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "0"
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_ols_multicolinearty",
                  "0"
                ],
                [
                  "test_ols",
                  "0"
                ],
                [
                  "test_ols_l2_regularized",
                  "0"
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_ols_one_data_point",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_ols_l1_regularized",
                  "0"
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "0"
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_ols_multicolinearty",
                  "0"
                ],
                [
                  "test_ols",
                  "0"
                ],
                [
                  "test_ols_l2_regularized",
                  "0"
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_ols_one_data_point",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_ols_l1_regularized",
                "false"
              ],
              [
                "test_ols_sample_weight_all_zero",
                "false"
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_ols",
                "true"
              ],
              [
                "test_ols_l2_regularized",
                "true"
              ],
              [
                "test_ols_sample_weight_all_half",
                "true"
              ],
              [
                "test_ols_one_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_ols_l1_regularized",
                "false"
              ],
              [
                "test_ols_sample_weight_all_zero",
                "false"
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_ols",
                "false"
              ],
              [
                "test_ols_l2_regularized",
                "false"
              ],
              [
                "test_ols_sample_weight_all_half",
                "false"
              ],
              [
                "test_ols_one_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_ols_l1_regularized",
                "0"
              ],
              [
                "test_ols_sample_weight_all_zero",
                "1"
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                "3"
              ],
              [
                "test_ols_multicolinearty",
                "4"
              ],
              [
                "test_ols",
                "11"
              ],
              [
                "test_ols_l2_regularized",
                "6"
              ],
              [
                "test_ols_sample_weight_all_half",
                "8"
              ],
              [
                "test_ols_one_data_point",
                "4"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_ols_l1_regularized",
                []
              ],
              [
                "test_ols_sample_weight_all_zero",
                []
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                [
                  "len_half"
                ]
              ],
              [
                "test_ols_multicolinearty",
                [
                  "X"
                ]
              ],
              [
                "test_ols",
                [
                  "json_dict"
                ]
              ],
              [
                "test_ols_l2_regularized",
                []
              ],
              [
                "test_ols_sample_weight_all_half",
                []
              ],
              [
                "test_ols_one_data_point",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_ols_l1_regularized",
                []
              ],
              [
                "test_ols_sample_weight_all_zero",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_ols_multicolinearty",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_ols",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_ols_l2_regularized",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_ols_sample_weight_all_half",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_ols_one_data_point",
                [
                  "self.Y",
                  "self.X"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5950276985548895,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_ols",
                  "test_ols_sample_weight_half_zero_half_one",
                  0.6633250238768109
                ],
                [
                  "test_ols_l1_regularized",
                  "test_ols_sample_weight_all_zero",
                  0.303064062678102
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "test_ols_sample_weight_half_zero_half_one",
                  0.5929671496532936
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "test_ols_multicolinearty",
                  0.6918685260050833
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "test_ols_multicolinearty",
                  0.7908163473153065
                ],
                [
                  "test_ols",
                  "test_ols_one_data_point",
                  0.6675128254293242
                ],
                [
                  "test_ols_l1_regularized",
                  "test_ols_one_data_point",
                  0.18772685508391054
                ],
                [
                  "test_ols_l2_regularized",
                  "test_ols_sample_weight_all_half",
                  0.9578755459117795
                ],
                [
                  "test_ols",
                  "test_ols_multicolinearty",
                  0.7100876419868279
                ],
                [
                  "test_ols_one_data_point",
                  "test_ols_multicolinearty",
                  0.7070866624291401
                ],
                [
                  "test_ols_l1_regularized",
                  "test_ols_sample_weight_all_half",
                  0.24522764600974936
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "test_ols_one_data_point",
                  0.5880049920635725
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "test_ols_one_data_point",
                  0.6965945655236426
                ],
                [
                  "test_ols_l2_regularized",
                  "test_ols_sample_weight_half_zero_half_one",
                  0.631697384389942
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "test_ols_sample_weight_all_zero",
                  0.6020797289396148
                ],
                [
                  "test_ols_l1_regularized",
                  "test_ols_sample_weight_half_zero_half_one",
                  0.2580750434422919
                ],
                [
                  "test_ols",
                  "test_ols_sample_weight_all_zero",
                  0.5438169412024009
                ],
                [
                  "test_ols_l2_regularized",
                  "test_ols_one_data_point",
                  0.7078468164256693
                ],
                [
                  "test_ols",
                  "test_ols_sample_weight_all_half",
                  0.9115427163577664
                ],
                [
                  "test_ols_l2_regularized",
                  "test_ols_sample_weight_all_zero",
                  0.6318388029430319
                ],
                [
                  "test_ols_l1_regularized",
                  "test_ols_multicolinearty",
                  0.30045409013696167
                ],
                [
                  "test_ols",
                  "test_ols_l2_regularized",
                  0.9169817217179003
                ],
                [
                  "test_ols",
                  "test_ols_l1_regularized",
                  0.20533365781146876
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "test_ols_sample_weight_half_zero_half_one",
                  0.752772652709081
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "test_ols_multicolinearty",
                  0.7594740597661167
                ],
                [
                  "test_ols_l2_regularized",
                  "test_ols_l1_regularized",
                  0.28539022461082225
                ],
                [
                  "test_ols_l2_regularized",
                  "test_ols_multicolinearty",
                  0.7125270866259541
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "test_ols_one_data_point",
                  0.6387867884913393
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_ols_l1_regularized",
                "false"
              ],
              [
                "test_ols_sample_weight_all_zero",
                "false"
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "true"
              ],
              [
                "test_ols",
                "false"
              ],
              [
                "test_ols_l2_regularized",
                "true"
              ],
              [
                "test_ols_sample_weight_all_half",
                "false"
              ],
              [
                "test_ols_one_data_point",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 8
      },
      {
        "name": "PerfectCorrelationMultivariateOLSTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_ols_one_data_point",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_ols_multicolinearty",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_ols_l1_regularized",
                  "[]"
                ],
                [
                  "test_ols_l2_regularized",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_ols",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_ols_elastic_net_regularized",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_ols_one_data_point",
                  "[]"
                ],
                [
                  "test_ols_multicolinearty",
                  "[]"
                ],
                [
                  "test_ols_l1_regularized",
                  "[]"
                ],
                [
                  "test_ols_l2_regularized",
                  "[]"
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "[]"
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_ols",
                  "[]"
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "[]"
                ],
                [
                  "test_ols_elastic_net_regularized",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_ols_one_data_point",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_ols_l1_regularized",
                  "false"
                ],
                [
                  "test_ols_l2_regularized",
                  "false"
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_ols",
                  "false"
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_ols_elastic_net_regularized",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_ols_one_data_point",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_ols_l1_regularized",
                  "false"
                ],
                [
                  "test_ols_l2_regularized",
                  "false"
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_ols",
                  "false"
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_ols_elastic_net_regularized",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_ols_one_data_point",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_ols_l1_regularized",
                  "false"
                ],
                [
                  "test_ols_l2_regularized",
                  "false"
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_ols",
                  "false"
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_ols_elastic_net_regularized",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_ols_one_data_point",
                  "false"
                ],
                [
                  "test_ols_multicolinearty",
                  "false"
                ],
                [
                  "test_ols_l1_regularized",
                  "false"
                ],
                [
                  "test_ols_l2_regularized",
                  "false"
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_ols",
                  "false"
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_ols_elastic_net_regularized",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": true,
            "detail": [
              [
                "test_ols_one_data_point",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_ols_l1_regularized",
                "true"
              ],
              [
                "test_ols_l2_regularized",
                "false"
              ],
              [
                "test_ols_sample_weight_all_half",
                "false"
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_ols",
                "false"
              ],
              [
                "test_ols_sample_weight_all_zero",
                "false"
              ],
              [
                "test_ols_elastic_net_regularized",
                "true"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_ols_one_data_point",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_ols_l1_regularized",
                "false"
              ],
              [
                "test_ols_l2_regularized",
                "false"
              ],
              [
                "test_ols_sample_weight_all_half",
                "false"
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_ols",
                "false"
              ],
              [
                "test_ols_sample_weight_all_zero",
                "false"
              ],
              [
                "test_ols_elastic_net_regularized",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_ols_one_data_point",
                [
                  "self.data_longley"
                ]
              ],
              [
                "test_ols_multicolinearty",
                [
                  "self.data_longley"
                ]
              ],
              [
                "test_ols_l1_regularized",
                [
                  "self.data_longley",
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_ols_l2_regularized",
                []
              ],
              [
                "test_ols_sample_weight_all_half",
                []
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                []
              ],
              [
                "test_ols",
                []
              ],
              [
                "test_ols_sample_weight_all_zero",
                [
                  "self.data_longley"
                ]
              ],
              [
                "test_ols_elastic_net_regularized",
                [
                  "self.data_longley",
                  "self.Y",
                  "self.X"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_ols_one_data_point",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_ols_l1_regularized",
                "false"
              ],
              [
                "test_ols_l2_regularized",
                "false"
              ],
              [
                "test_ols_sample_weight_all_half",
                "false"
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_ols",
                "false"
              ],
              [
                "test_ols_sample_weight_all_zero",
                "false"
              ],
              [
                "test_ols_elastic_net_regularized",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_ols_one_data_point",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_ols_l1_regularized",
                "false"
              ],
              [
                "test_ols_l2_regularized",
                "false"
              ],
              [
                "test_ols_sample_weight_all_half",
                "false"
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_ols",
                "false"
              ],
              [
                "test_ols_sample_weight_all_zero",
                "true"
              ],
              [
                "test_ols_elastic_net_regularized",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_ols_one_data_point",
                  "0"
                ],
                [
                  "test_ols_multicolinearty",
                  "0"
                ],
                [
                  "test_ols_l1_regularized",
                  "0"
                ],
                [
                  "test_ols_l2_regularized",
                  "0"
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_ols",
                  "0"
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "0"
                ],
                [
                  "test_ols_elastic_net_regularized",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_ols_one_data_point",
                  "0"
                ],
                [
                  "test_ols_multicolinearty",
                  "0"
                ],
                [
                  "test_ols_l1_regularized",
                  "0"
                ],
                [
                  "test_ols_l2_regularized",
                  "0"
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_ols",
                  "0"
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "0"
                ],
                [
                  "test_ols_elastic_net_regularized",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_ols_one_data_point",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_ols_l1_regularized",
                "false"
              ],
              [
                "test_ols_l2_regularized",
                "false"
              ],
              [
                "test_ols_sample_weight_all_half",
                "false"
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_ols",
                "false"
              ],
              [
                "test_ols_sample_weight_all_zero",
                "false"
              ],
              [
                "test_ols_elastic_net_regularized",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_ols_one_data_point",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "false"
              ],
              [
                "test_ols_l1_regularized",
                "false"
              ],
              [
                "test_ols_l2_regularized",
                "false"
              ],
              [
                "test_ols_sample_weight_all_half",
                "false"
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_ols",
                "false"
              ],
              [
                "test_ols_sample_weight_all_zero",
                "false"
              ],
              [
                "test_ols_elastic_net_regularized",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_ols_one_data_point",
                "4"
              ],
              [
                "test_ols_multicolinearty",
                "5"
              ],
              [
                "test_ols_l1_regularized",
                "0"
              ],
              [
                "test_ols_l2_regularized",
                "6"
              ],
              [
                "test_ols_sample_weight_all_half",
                "5"
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                "3"
              ],
              [
                "test_ols",
                "8"
              ],
              [
                "test_ols_sample_weight_all_zero",
                "1"
              ],
              [
                "test_ols_elastic_net_regularized",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_ols_one_data_point",
                []
              ],
              [
                "test_ols_multicolinearty",
                [
                  "X"
                ]
              ],
              [
                "test_ols_l1_regularized",
                []
              ],
              [
                "test_ols_l2_regularized",
                [
                  "res"
                ]
              ],
              [
                "test_ols_sample_weight_all_half",
                [
                  "res"
                ]
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                [
                  "len_half"
                ]
              ],
              [
                "test_ols",
                []
              ],
              [
                "test_ols_sample_weight_all_zero",
                []
              ],
              [
                "test_ols_elastic_net_regularized",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_ols_one_data_point",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_ols_multicolinearty",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_ols_l1_regularized",
                []
              ],
              [
                "test_ols_l2_regularized",
                [
                  "self.data_longley",
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_ols_sample_weight_all_half",
                [
                  "self.data_longley",
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                [
                  "self.data_longley",
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_ols",
                [
                  "self.data_longley",
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_ols_sample_weight_all_zero",
                [
                  "self.Y",
                  "self.X"
                ]
              ],
              [
                "test_ols_elastic_net_regularized",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.47228024768161503,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_ols_elastic_net_regularized",
                  "test_ols_one_data_point",
                  0.14704292441876154
                ],
                [
                  "test_ols",
                  "test_ols_one_data_point",
                  0.6717326558057773
                ],
                [
                  "test_ols_l2_regularized",
                  "test_ols_multicolinearty",
                  0.6326511639835664
                ],
                [
                  "test_ols_one_data_point",
                  "test_ols_multicolinearty",
                  0.7859387750789734
                ],
                [
                  "test_ols_elastic_net_regularized",
                  "test_ols_sample_weight_all_half",
                  0.10164723215155264
                ],
                [
                  "test_ols",
                  "test_ols_sample_weight_all_zero",
                  0.46895186163117974
                ],
                [
                  "test_ols_elastic_net_regularized",
                  "test_ols_sample_weight_all_zero",
                  0.18371173070873834
                ],
                [
                  "test_ols_l2_regularized",
                  "test_ols_sample_weight_half_zero_half_one",
                  0.38590058714169306
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "test_ols_sample_weight_half_zero_half_one",
                  0.46244548216693987
                ],
                [
                  "test_ols",
                  "test_ols_l2_regularized",
                  0.8636211513732731
                ],
                [
                  "test_ols_l2_regularized",
                  "test_ols_one_data_point",
                  0.5903594791310406
                ],
                [
                  "test_ols",
                  "test_ols_elastic_net_regularized",
                  0.08375884817158914
                ],
                [
                  "test_ols_l1_regularized",
                  "test_ols_l2_regularized",
                  0.14697323162637674
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "test_ols_sample_weight_all_zero",
                  0.49796770507505733
                ],
                [
                  "test_ols_l1_regularized",
                  "test_ols_sample_weight_all_half",
                  0.17618853572935791
                ],
                [
                  "test_ols_l1_regularized",
                  "test_ols_sample_weight_all_zero",
                  0.26536138880151094
                ],
                [
                  "test_ols_l1_regularized",
                  "test_ols_one_data_point",
                  0.23894475218048752
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "test_ols_one_data_point",
                  0.6692713365198597
                ],
                [
                  "test_ols_l2_regularized",
                  "test_ols_sample_weight_all_half",
                  0.8560410376561041
                ],
                [
                  "test_ols_l2_regularized",
                  "test_ols_sample_weight_all_zero",
                  0.3797660380275826
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "test_ols_multicolinearty",
                  0.7939148562913161
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "test_ols_one_data_point",
                  0.6490746184841618
                ],
                [
                  "test_ols",
                  "test_ols_l1_regularized",
                  0.1521334181075803
                ],
                [
                  "test_ols_l1_regularized",
                  "test_ols_elastic_net_regularized",
                  0.9333333333333333
                ],
                [
                  "test_ols_l2_regularized",
                  "test_ols_elastic_net_regularized",
                  0.10037196306191581
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "test_ols_multicolinearty",
                  0.7755387557133117
                ],
                [
                  "test_ols_sample_weight_half_zero_half_one",
                  "test_ols_one_data_point",
                  0.621348190287518
                ],
                [
                  "test_ols",
                  "test_ols_multicolinearty",
                  0.6641119747296484
                ],
                [
                  "test_ols_l1_regularized",
                  "test_ols_sample_weight_half_zero_half_one",
                  0.22596922689443352
                ],
                [
                  "test_ols_l1_regularized",
                  "test_ols_multicolinearty",
                  0.2791635961192618
                ],
                [
                  "test_ols_sample_weight_all_half",
                  "test_ols_multicolinearty",
                  0.6971780255282648
                ],
                [
                  "test_ols_elastic_net_regularized",
                  "test_ols_sample_weight_half_zero_half_one",
                  0.1536590742882148
                ],
                [
                  "test_ols_elastic_net_regularized",
                  "test_ols_multicolinearty",
                  0.17703057314880014
                ],
                [
                  "test_ols",
                  "test_ols_sample_weight_all_half",
                  0.990850563207579
                ],
                [
                  "test_ols",
                  "test_ols_sample_weight_half_zero_half_one",
                  0.4273621772542987
                ],
                [
                  "test_ols_sample_weight_all_zero",
                  "test_ols_sample_weight_half_zero_half_one",
                  0.752772652709081
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_ols_one_data_point",
                "false"
              ],
              [
                "test_ols_multicolinearty",
                "true"
              ],
              [
                "test_ols_l1_regularized",
                "false"
              ],
              [
                "test_ols_l2_regularized",
                "true"
              ],
              [
                "test_ols_sample_weight_all_half",
                "false"
              ],
              [
                "test_ols_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_ols",
                "false"
              ],
              [
                "test_ols_sample_weight_all_zero",
                "false"
              ],
              [
                "test_ols_elastic_net_regularized",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 9
      }
    ]
  },
  {
    "name": "tests_\u0026_test_HMM_utils.py",
    "testCases": [
      {
        "name": "HMMUtilsTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_forward_backward",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_cal_alpha_beta",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_forward_backward",
                  "[]"
                ],
                [
                  "test_cal_alpha_beta",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_forward_backward",
                  "false"
                ],
                [
                  "test_cal_alpha_beta",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_forward_backward",
                  "false"
                ],
                [
                  "test_cal_alpha_beta",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_forward_backward",
                  "false"
                ],
                [
                  "test_cal_alpha_beta",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_forward_backward",
                  "false"
                ],
                [
                  "test_cal_alpha_beta",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_forward_backward",
                "false"
              ],
              [
                "test_cal_alpha_beta",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_forward_backward",
                "false"
              ],
              [
                "test_cal_alpha_beta",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_forward_backward",
                []
              ],
              [
                "test_cal_alpha_beta",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_forward_backward",
                "false"
              ],
              [
                "test_cal_alpha_beta",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_forward_backward",
                "true"
              ],
              [
                "test_cal_alpha_beta",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_forward_backward",
                  "0"
                ],
                [
                  "test_cal_alpha_beta",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_forward_backward",
                  "0"
                ],
                [
                  "test_cal_alpha_beta",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_forward_backward",
                "false"
              ],
              [
                "test_cal_alpha_beta",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_forward_backward",
                "false"
              ],
              [
                "test_cal_alpha_beta",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_forward_backward",
                "3"
              ],
              [
                "test_cal_alpha_beta",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_forward_backward",
                [
                  "log_gamma",
                  "log_likelihood",
                  "log_epsilon"
                ]
              ],
              [
                "test_cal_alpha_beta",
                [
                  "log_beta",
                  "log_alpha"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_forward_backward",
                [
                  "self.log_Ey",
                  "self.log_prob_transition",
                  "self.log_prob_initial"
                ]
              ],
              [
                "test_cal_alpha_beta",
                [
                  "self.log_Ey",
                  "self.log_prob_transition",
                  "self.log_prob_initial"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8304261449290986,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_cal_alpha_beta",
                  "test_forward_backward",
                  0.8304261449290986
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_forward_backward",
                "false"
              ],
              [
                "test_cal_alpha_beta",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_DiscreteMNL.py",
    "testCases": [
      {
        "name": "DiscreteMNLUnaryTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_lr",
                  "[]"
                ],
                [
                  "test_lr_one_data_point",
                  "[]"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_lr",
                  "[]"
                ],
                [
                  "test_lr_one_data_point",
                  "[]"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_lr",
                  "false"
                ],
                [
                  "test_lr_one_data_point",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_lr",
                  "false"
                ],
                [
                  "test_lr_one_data_point",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_lr",
                  "false"
                ],
                [
                  "test_lr_one_data_point",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_lr",
                  "false"
                ],
                [
                  "test_lr_one_data_point",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_lr",
                "false"
              ],
              [
                "test_lr_one_data_point",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_lr",
                "false"
              ],
              [
                "test_lr_one_data_point",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_lr",
                []
              ],
              [
                "test_lr_one_data_point",
                []
              ],
              [
                "test_lr_sample_weight_all_half",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_lr",
                "false"
              ],
              [
                "test_lr_one_data_point",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_lr",
                "false"
              ],
              [
                "test_lr_one_data_point",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_lr",
                  "0"
                ],
                [
                  "test_lr_one_data_point",
                  "0"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_lr",
                  "0"
                ],
                [
                  "test_lr_one_data_point",
                  "0"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_lr",
                "false"
              ],
              [
                "test_lr_one_data_point",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_lr",
                "false"
              ],
              [
                "test_lr_one_data_point",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_lr",
                "3"
              ],
              [
                "test_lr_one_data_point",
                "3"
              ],
              [
                "test_lr_sample_weight_all_half",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_lr",
                []
              ],
              [
                "test_lr_one_data_point",
                []
              ],
              [
                "test_lr_sample_weight_all_half",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_lr",
                [
                  "self.y",
                  "self.data_spector"
                ]
              ],
              [
                "test_lr_one_data_point",
                [
                  "self.y",
                  "self.data_spector"
                ]
              ],
              [
                "test_lr_sample_weight_all_half",
                [
                  "self.y",
                  "self.data_spector"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6888083177070606,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_lr",
                  "test_lr_sample_weight_all_half",
                  0.7303831843351789
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_one_data_point",
                  0.7077036884746161
                ],
                [
                  "test_lr",
                  "test_lr_one_data_point",
                  0.6283380803113869
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_lr",
                "false"
              ],
              [
                "test_lr_one_data_point",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      },
      {
        "name": "DiscreteMNLBinaryTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_lr_sample_weight_all_zero",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_lr",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_lr_regularized",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_lr_two_data_point",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_lr_multicolinearty",
                  "[]"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_lr_sample_weight_all_zero",
                  "[]"
                ],
                [
                  "test_lr",
                  "[]"
                ],
                [
                  "test_lr_regularized",
                  "[]"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_lr_two_data_point",
                  "[]"
                ],
                [
                  "test_lr_multicolinearty",
                  "[]"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_lr_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_lr",
                  "false"
                ],
                [
                  "test_lr_regularized",
                  "false"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_lr_two_data_point",
                  "false"
                ],
                [
                  "test_lr_multicolinearty",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_lr_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_lr",
                  "false"
                ],
                [
                  "test_lr_regularized",
                  "false"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_lr_two_data_point",
                  "false"
                ],
                [
                  "test_lr_multicolinearty",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_lr_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_lr",
                  "false"
                ],
                [
                  "test_lr_regularized",
                  "false"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_lr_two_data_point",
                  "true"
                ],
                [
                  "test_lr_multicolinearty",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_lr_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_lr",
                  "false"
                ],
                [
                  "test_lr_regularized",
                  "false"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_lr_two_data_point",
                  "false"
                ],
                [
                  "test_lr_multicolinearty",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_sample_weight_all_zero",
                "false"
              ],
              [
                "test_lr",
                "false"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_two_data_point",
                "false"
              ],
              [
                "test_lr_multicolinearty",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_sample_weight_all_zero",
                "false"
              ],
              [
                "test_lr",
                "false"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_two_data_point",
                "false"
              ],
              [
                "test_lr_multicolinearty",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_sample_weight_all_zero",
                []
              ],
              [
                "test_lr",
                []
              ],
              [
                "test_lr_regularized",
                []
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                []
              ],
              [
                "test_lr_two_data_point",
                []
              ],
              [
                "test_lr_multicolinearty",
                []
              ],
              [
                "test_lr_sample_weight_all_half",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_sample_weight_all_zero",
                "false"
              ],
              [
                "test_lr",
                "false"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_two_data_point",
                "false"
              ],
              [
                "test_lr_multicolinearty",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_lr_sample_weight_all_zero",
                "true"
              ],
              [
                "test_lr",
                "true"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_two_data_point",
                "false"
              ],
              [
                "test_lr_multicolinearty",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_lr_sample_weight_all_zero",
                  "0"
                ],
                [
                  "test_lr",
                  "0"
                ],
                [
                  "test_lr_regularized",
                  "0"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_lr_two_data_point",
                  "0"
                ],
                [
                  "test_lr_multicolinearty",
                  "0"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_lr_sample_weight_all_zero",
                  "0"
                ],
                [
                  "test_lr",
                  "0"
                ],
                [
                  "test_lr_regularized",
                  "0"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_lr_two_data_point",
                  "0"
                ],
                [
                  "test_lr_multicolinearty",
                  "0"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_lr_sample_weight_all_zero",
                "false"
              ],
              [
                "test_lr",
                "false"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_two_data_point",
                "true"
              ],
              [
                "test_lr_multicolinearty",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_sample_weight_all_zero",
                "false"
              ],
              [
                "test_lr",
                "false"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_two_data_point",
                "false"
              ],
              [
                "test_lr_multicolinearty",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_sample_weight_all_zero",
                "1"
              ],
              [
                "test_lr",
                "7"
              ],
              [
                "test_lr_regularized",
                "3"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "1"
              ],
              [
                "test_lr_two_data_point",
                "7"
              ],
              [
                "test_lr_multicolinearty",
                "3"
              ],
              [
                "test_lr_sample_weight_all_half",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_sample_weight_all_zero",
                []
              ],
              [
                "test_lr",
                [
                  "json_dict"
                ]
              ],
              [
                "test_lr_regularized",
                []
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                [
                  "len_half"
                ]
              ],
              [
                "test_lr_two_data_point",
                []
              ],
              [
                "test_lr_multicolinearty",
                [
                  "X"
                ]
              ],
              [
                "test_lr_sample_weight_all_half",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_sample_weight_all_zero",
                [
                  "self.data_spector"
                ]
              ],
              [
                "test_lr",
                [
                  "self.data_spector"
                ]
              ],
              [
                "test_lr_regularized",
                [
                  "self.data_spector"
                ]
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                [
                  "self.data_spector"
                ]
              ],
              [
                "test_lr_two_data_point",
                [
                  "self.data_spector"
                ]
              ],
              [
                "test_lr_multicolinearty",
                [
                  "self.data_spector"
                ]
              ],
              [
                "test_lr_sample_weight_all_half",
                [
                  "self.data_spector"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6312514438256436,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_lr_sample_weight_all_zero",
                  "test_lr_multicolinearty",
                  0.7604684665624626
                ],
                [
                  "test_lr_regularized",
                  "test_lr_multicolinearty",
                  0.542347051979493
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_multicolinearty",
                  0.8122387400581969
                ],
                [
                  "test_lr",
                  "test_lr_sample_weight_all_zero",
                  0.4448538204614321
                ],
                [
                  "test_lr",
                  "test_lr_sample_weight_half_zero_half_one",
                  0.44818693799573384
                ],
                [
                  "test_lr",
                  "test_lr_two_data_point",
                  0.4240951009678855
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "test_lr_two_data_point",
                  0.7061187922063302
                ],
                [
                  "test_lr_regularized",
                  "test_lr_sample_weight_half_zero_half_one",
                  0.41876488162930536
                ],
                [
                  "test_lr",
                  "test_lr_multicolinearty",
                  0.5847861586438998
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_sample_weight_half_zero_half_one",
                  0.7244198720313445
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_two_data_point",
                  0.7699939140974874
                ],
                [
                  "test_lr_regularized",
                  "test_lr_two_data_point",
                  0.3872256898693692
                ],
                [
                  "test_lr",
                  "test_lr_sample_weight_all_half",
                  0.5215428092445844
                ],
                [
                  "test_lr_regularized",
                  "test_lr_sample_weight_all_zero",
                  0.42753989117157587
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "test_lr_sample_weight_half_zero_half_one",
                  0.8218757473830581
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_sample_weight_all_zero",
                  0.7707678295037003
                ],
                [
                  "test_lr_two_data_point",
                  "test_lr_multicolinearty",
                  0.789470922977901
                ],
                [
                  "test_lr_regularized",
                  "test_lr_sample_weight_all_half",
                  0.4848987647508558
                ],
                [
                  "test_lr",
                  "test_lr_regularized",
                  0.9824847289308641
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "test_lr_two_data_point",
                  0.6792854488545267
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "test_lr_multicolinearty",
                  0.7549147510185092
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_sample_weight_all_zero",
                "false"
              ],
              [
                "test_lr",
                "false"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_two_data_point",
                "false"
              ],
              [
                "test_lr_multicolinearty",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      },
      {
        "name": "DiscreteMNLMultinomialTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_lr",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_lr_regularized",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_lr_three_data_point",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_lr_multicolinearty",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_lr",
                  "[]"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "[]"
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "[]"
                ],
                [
                  "test_lr_regularized",
                  "[]"
                ],
                [
                  "test_lr_three_data_point",
                  "[]"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_lr_multicolinearty",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_lr",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_lr_regularized",
                  "false"
                ],
                [
                  "test_lr_three_data_point",
                  "false"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_lr_multicolinearty",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_lr",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_lr_regularized",
                  "false"
                ],
                [
                  "test_lr_three_data_point",
                  "false"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_lr_multicolinearty",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_lr",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_lr_regularized",
                  "false"
                ],
                [
                  "test_lr_three_data_point",
                  "false"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_lr_multicolinearty",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_lr",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_lr_regularized",
                  "false"
                ],
                [
                  "test_lr_three_data_point",
                  "false"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_lr_multicolinearty",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_lr",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_sample_weight_all_zero",
                "false"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_lr_three_data_point",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_multicolinearty",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_lr",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_sample_weight_all_zero",
                "false"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_lr_three_data_point",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_multicolinearty",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_lr",
                []
              ],
              [
                "test_lr_sample_weight_all_half",
                []
              ],
              [
                "test_lr_sample_weight_all_zero",
                []
              ],
              [
                "test_lr_regularized",
                []
              ],
              [
                "test_lr_three_data_point",
                []
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                []
              ],
              [
                "test_lr_multicolinearty",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_lr",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_sample_weight_all_zero",
                "false"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_lr_three_data_point",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_multicolinearty",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_lr",
                "true"
              ],
              [
                "test_lr_sample_weight_all_half",
                "true"
              ],
              [
                "test_lr_sample_weight_all_zero",
                "true"
              ],
              [
                "test_lr_regularized",
                "true"
              ],
              [
                "test_lr_three_data_point",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_multicolinearty",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_lr",
                  "0"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "0"
                ],
                [
                  "test_lr_regularized",
                  "0"
                ],
                [
                  "test_lr_three_data_point",
                  "0"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_lr_multicolinearty",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_lr",
                  "0"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "0"
                ],
                [
                  "test_lr_regularized",
                  "0"
                ],
                [
                  "test_lr_three_data_point",
                  "0"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_lr_multicolinearty",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_lr",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_sample_weight_all_zero",
                "false"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_lr_three_data_point",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_multicolinearty",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_lr",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_sample_weight_all_zero",
                "false"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_lr_three_data_point",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_multicolinearty",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_lr",
                "6"
              ],
              [
                "test_lr_sample_weight_all_half",
                "3"
              ],
              [
                "test_lr_sample_weight_all_zero",
                "1"
              ],
              [
                "test_lr_regularized",
                "2"
              ],
              [
                "test_lr_three_data_point",
                "4"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "1"
              ],
              [
                "test_lr_multicolinearty",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_lr",
                [
                  "json_dict"
                ]
              ],
              [
                "test_lr_sample_weight_all_half",
                []
              ],
              [
                "test_lr_sample_weight_all_zero",
                []
              ],
              [
                "test_lr_regularized",
                []
              ],
              [
                "test_lr_three_data_point",
                []
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                [
                  "len_half"
                ]
              ],
              [
                "test_lr_multicolinearty",
                [
                  "X"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_lr",
                [
                  "self.data_anes96"
                ]
              ],
              [
                "test_lr_sample_weight_all_half",
                [
                  "self.data_anes96"
                ]
              ],
              [
                "test_lr_sample_weight_all_zero",
                [
                  "self.data_anes96"
                ]
              ],
              [
                "test_lr_regularized",
                [
                  "self.data_anes96"
                ]
              ],
              [
                "test_lr_three_data_point",
                [
                  "self.data_anes96"
                ]
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                [
                  "self.data_anes96"
                ]
              ],
              [
                "test_lr_multicolinearty",
                [
                  "self.data_anes96"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7535684630050347,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_lr",
                  "test_lr_sample_weight_half_zero_half_one",
                  0.6548699877492484
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "test_lr_multicolinearty",
                  0.7928624885941324
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "test_lr_three_data_point",
                  0.6246858160576926
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_multicolinearty",
                  0.8494955234937134
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "test_lr_sample_weight_half_zero_half_one",
                  0.8315619032294627
                ],
                [
                  "test_lr_regularized",
                  "test_lr_sample_weight_all_zero",
                  0.7968693755362093
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_sample_weight_half_zero_half_one",
                  0.8482935310610414
                ],
                [
                  "test_lr_three_data_point",
                  "test_lr_multicolinearty",
                  0.707642382754885
                ],
                [
                  "test_lr",
                  "test_lr_sample_weight_all_zero",
                  0.647150228929434
                ],
                [
                  "test_lr_regularized",
                  "test_lr_sample_weight_all_half",
                  0.9247777825243649
                ],
                [
                  "test_lr_regularized",
                  "test_lr_sample_weight_half_zero_half_one",
                  0.7517296073704977
                ],
                [
                  "test_lr",
                  "test_lr_three_data_point",
                  0.588550309218896
                ],
                [
                  "test_lr_regularized",
                  "test_lr_multicolinearty",
                  0.7990049582215517
                ],
                [
                  "test_lr",
                  "test_lr_regularized",
                  0.831401690657874
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "test_lr_multicolinearty",
                  0.7849737465355435
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_three_data_point",
                  0.6859242981132119
                ],
                [
                  "test_lr",
                  "test_lr_sample_weight_all_half",
                  0.8135602877970026
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "test_lr_three_data_point",
                  0.6379575639794209
                ],
                [
                  "test_lr",
                  "test_lr_multicolinearty",
                  0.720301950601079
                ],
                [
                  "test_lr_regularized",
                  "test_lr_three_data_point",
                  0.6655994229555989
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_sample_weight_all_zero",
                  0.8677248677248677
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_lr",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_sample_weight_all_zero",
                "false"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_lr_three_data_point",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_multicolinearty",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      }
    ]
  },
  {
    "name": "tests_\u0026_test_family_wrapper.py",
    "testCases": [
      {
        "name": "PoissonTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_init",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_loglike_per_sample",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test_loglike_per_sample",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_loglike_per_sample",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_loglike_per_sample",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_loglike_per_sample",
                  "true"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_loglike_per_sample",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_loglike_per_sample",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_loglike_per_sample",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                []
              ],
              [
                "test_loglike_per_sample",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_loglike_per_sample",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_loglike_per_sample",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_loglike_per_sample",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_loglike_per_sample",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_loglike_per_sample",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_loglike_per_sample",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "1"
              ],
              [
                "test_loglike_per_sample",
                "8"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                []
              ],
              [
                "test_loglike_per_sample",
                [
                  "endog",
                  "mu",
                  "scale",
                  "lps"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                [
                  "self.forwarding_family",
                  "self.family"
                ]
              ],
              [
                "test_loglike_per_sample",
                [
                  "self.forwarding_family",
                  "self.family"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.12987012987012986,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init",
                  "test_loglike_per_sample",
                  0.12987012987012986
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_loglike_per_sample",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "GaussianTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_init",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_loglike_per_sample",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test_loglike_per_sample",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_loglike_per_sample",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_loglike_per_sample",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_loglike_per_sample",
                  "true"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_loglike_per_sample",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_loglike_per_sample",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_loglike_per_sample",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_init",
                []
              ],
              [
                "test_loglike_per_sample",
                [
                  "self.family"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_loglike_per_sample",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_loglike_per_sample",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_loglike_per_sample",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_loglike_per_sample",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_loglike_per_sample",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_loglike_per_sample",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "1"
              ],
              [
                "test_loglike_per_sample",
                "12"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                []
              ],
              [
                "test_loglike_per_sample",
                [
                  "endog",
                  "mu",
                  "scale",
                  "lps"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                [
                  "self.forwarding_family",
                  "self.family"
                ]
              ],
              [
                "test_loglike_per_sample",
                [
                  "self.forwarding_family"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.059163571188397705,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init",
                  "test_loglike_per_sample",
                  0.059163571188397705
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_loglike_per_sample",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "GammaTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_loglike_per_sample",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_init",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_loglike_per_sample",
                  "[]"
                ],
                [
                  "test_init",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_loglike_per_sample",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_loglike_per_sample",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_loglike_per_sample",
                  "true"
                ],
                [
                  "test_init",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_loglike_per_sample",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                []
              ],
              [
                "test_init",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_loglike_per_sample",
                "true"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_loglike_per_sample",
                  "0"
                ],
                [
                  "test_init",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_loglike_per_sample",
                  "0"
                ],
                [
                  "test_init",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                "14"
              ],
              [
                "test_init",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                [
                  "endog",
                  "mu",
                  "scale",
                  "lps"
                ]
              ],
              [
                "test_init",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                [
                  "self.forwarding_family",
                  "self.family"
                ]
              ],
              [
                "test_init",
                [
                  "self.forwarding_family",
                  "self.family"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.08531425379248161,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init",
                  "test_loglike_per_sample",
                  0.08531425379248161
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "BinomialTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_loglike_per_sample",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_init",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_loglike_per_sample",
                  "[]"
                ],
                [
                  "test_init",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_loglike_per_sample",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_loglike_per_sample",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_loglike_per_sample",
                  "true"
                ],
                [
                  "test_init",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_loglike_per_sample",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                []
              ],
              [
                "test_init",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_loglike_per_sample",
                "true"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_loglike_per_sample",
                  "0"
                ],
                [
                  "test_init",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_loglike_per_sample",
                  "0"
                ],
                [
                  "test_init",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                "8"
              ],
              [
                "test_init",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                [
                  "endog",
                  "mu",
                  "scale",
                  "lps"
                ]
              ],
              [
                "test_init",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                [
                  "self.forwarding_family",
                  "self.family"
                ]
              ],
              [
                "test_init",
                [
                  "self.forwarding_family",
                  "self.family"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.10385482340819023,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init",
                  "test_loglike_per_sample",
                  0.10385482340819023
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "InverseGaussianTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_init",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_loglike_per_sample",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test_loglike_per_sample",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_loglike_per_sample",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_loglike_per_sample",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_loglike_per_sample",
                  "true"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_loglike_per_sample",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_loglike_per_sample",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_loglike_per_sample",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                []
              ],
              [
                "test_loglike_per_sample",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_loglike_per_sample",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_loglike_per_sample",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_loglike_per_sample",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_loglike_per_sample",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_loglike_per_sample",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_loglike_per_sample",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "1"
              ],
              [
                "test_loglike_per_sample",
                "14"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                []
              ],
              [
                "test_loglike_per_sample",
                [
                  "endog",
                  "mu",
                  "scale",
                  "lps"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                [
                  "self.forwarding_family",
                  "self.family"
                ]
              ],
              [
                "test_loglike_per_sample",
                [
                  "self.forwarding_family",
                  "self.family"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.08531425379248161,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init",
                  "test_loglike_per_sample",
                  0.08531425379248161
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_loglike_per_sample",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "NegativeBinomialTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_loglike_per_sample",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_init",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_loglike_per_sample",
                  "[]"
                ],
                [
                  "test_init",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_loglike_per_sample",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_loglike_per_sample",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_loglike_per_sample",
                  "true"
                ],
                [
                  "test_init",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_loglike_per_sample",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                []
              ],
              [
                "test_init",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_loglike_per_sample",
                "true"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_loglike_per_sample",
                  "0"
                ],
                [
                  "test_init",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_loglike_per_sample",
                  "0"
                ],
                [
                  "test_init",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                "14"
              ],
              [
                "test_init",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                [
                  "endog",
                  "mu",
                  "scale",
                  "lps"
                ]
              ],
              [
                "test_init",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                [
                  "self.forwarding_family",
                  "self.family"
                ]
              ],
              [
                "test_init",
                [
                  "self.forwarding_family",
                  "self.family"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.08531425379248161,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init",
                  "test_loglike_per_sample",
                  0.08531425379248161
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_loglike_per_sample",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_CrossentropyMNL.py",
    "testCases": [
      {
        "name": "CrossEntropyMNLUnaryTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_lr_sample_weight_all_half",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_lr",
                  "[]"
                ],
                [
                  "test_label_encoder",
                  "[]"
                ],
                [
                  "test_lr_one_data_point",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_lr_sample_weight_all_half",
                  "[]"
                ],
                [
                  "test_lr",
                  "[]"
                ],
                [
                  "test_label_encoder",
                  "[]"
                ],
                [
                  "test_lr_one_data_point",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_lr_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_lr",
                  "false"
                ],
                [
                  "test_label_encoder",
                  "false"
                ],
                [
                  "test_lr_one_data_point",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_lr_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_lr",
                  "false"
                ],
                [
                  "test_label_encoder",
                  "false"
                ],
                [
                  "test_lr_one_data_point",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_lr_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_lr",
                  "false"
                ],
                [
                  "test_label_encoder",
                  "false"
                ],
                [
                  "test_lr_one_data_point",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_lr_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_lr",
                  "false"
                ],
                [
                  "test_label_encoder",
                  "false"
                ],
                [
                  "test_lr_one_data_point",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr",
                "false"
              ],
              [
                "test_label_encoder",
                "false"
              ],
              [
                "test_lr_one_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr",
                "false"
              ],
              [
                "test_label_encoder",
                "false"
              ],
              [
                "test_lr_one_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_lr_sample_weight_all_half",
                []
              ],
              [
                "test_lr",
                []
              ],
              [
                "test_label_encoder",
                [
                  "self.y",
                  "self.data_spector"
                ]
              ],
              [
                "test_lr_one_data_point",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr",
                "false"
              ],
              [
                "test_label_encoder",
                "false"
              ],
              [
                "test_lr_one_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_lr_sample_weight_all_half",
                "true"
              ],
              [
                "test_lr",
                "false"
              ],
              [
                "test_label_encoder",
                "false"
              ],
              [
                "test_lr_one_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_lr_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_lr",
                  "0"
                ],
                [
                  "test_label_encoder",
                  "0"
                ],
                [
                  "test_lr_one_data_point",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_lr_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_lr",
                  "0"
                ],
                [
                  "test_label_encoder",
                  "0"
                ],
                [
                  "test_lr_one_data_point",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr",
                "false"
              ],
              [
                "test_label_encoder",
                "false"
              ],
              [
                "test_lr_one_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr",
                "false"
              ],
              [
                "test_label_encoder",
                "false"
              ],
              [
                "test_lr_one_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_sample_weight_all_half",
                "2"
              ],
              [
                "test_lr",
                "3"
              ],
              [
                "test_label_encoder",
                "6"
              ],
              [
                "test_lr_one_data_point",
                "3"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_sample_weight_all_half",
                []
              ],
              [
                "test_lr",
                []
              ],
              [
                "test_label_encoder",
                [
                  "sample_weight_repeated",
                  "Y_repeated",
                  "x",
                  "y",
                  "X_repeated",
                  "sample_weight"
                ]
              ],
              [
                "test_lr_one_data_point",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_lr_sample_weight_all_half",
                [
                  "self.y",
                  "self.data_spector"
                ]
              ],
              [
                "test_lr",
                [
                  "self.y",
                  "self.data_spector"
                ]
              ],
              [
                "test_label_encoder",
                []
              ],
              [
                "test_lr_one_data_point",
                [
                  "self.y",
                  "self.data_spector"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6768525630234429,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_one_data_point",
                  0.7149728254806108
                ],
                [
                  "test_label_encoder",
                  "test_lr",
                  0.6788496209333965
                ],
                [
                  "test_label_encoder",
                  "test_lr_sample_weight_all_half",
                  0.578880568204898
                ],
                [
                  "test_lr",
                  "test_lr_one_data_point",
                  0.71062689207587
                ],
                [
                  "test_label_encoder",
                  "test_lr_one_data_point",
                  0.6674016726168652
                ],
                [
                  "test_lr",
                  "test_lr_sample_weight_all_half",
                  0.7103837988290168
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr",
                "false"
              ],
              [
                "test_label_encoder",
                "false"
              ],
              [
                "test_lr_one_data_point",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      },
      {
        "name": "CrossEntropyMNLBinaryTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_lr_multicolinearty",
                  "[]"
                ],
                [
                  "test_lr_disturbed_multicolinearty",
                  "[]"
                ],
                [
                  "test_lr_regularized",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_lr_disturbed",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_lr",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_lr_disturbed_two_data_point",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_lr_two_data_point",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_lr_multicolinearty",
                  "[]"
                ],
                [
                  "test_lr_disturbed_multicolinearty",
                  "[]"
                ],
                [
                  "test_lr_regularized",
                  "[]"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "[]"
                ],
                [
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "[]"
                ],
                [
                  "test_lr_disturbed",
                  "[]"
                ],
                [
                  "test_lr",
                  "[]"
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "[]"
                ],
                [
                  "test_lr_disturbed_two_data_point",
                  "[]"
                ],
                [
                  "test_lr_two_data_point",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_lr_multicolinearty",
                  "false"
                ],
                [
                  "test_lr_disturbed_multicolinearty",
                  "false"
                ],
                [
                  "test_lr_regularized",
                  "false"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_lr_disturbed",
                  "false"
                ],
                [
                  "test_lr",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_lr_disturbed_two_data_point",
                  "false"
                ],
                [
                  "test_lr_two_data_point",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_lr_multicolinearty",
                  "false"
                ],
                [
                  "test_lr_disturbed_multicolinearty",
                  "false"
                ],
                [
                  "test_lr_regularized",
                  "false"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_lr_disturbed",
                  "false"
                ],
                [
                  "test_lr",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_lr_disturbed_two_data_point",
                  "false"
                ],
                [
                  "test_lr_two_data_point",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_lr_multicolinearty",
                  "false"
                ],
                [
                  "test_lr_disturbed_multicolinearty",
                  "false"
                ],
                [
                  "test_lr_regularized",
                  "false"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_lr_disturbed",
                  "false"
                ],
                [
                  "test_lr",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_lr_disturbed_two_data_point",
                  "false"
                ],
                [
                  "test_lr_two_data_point",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_lr_multicolinearty",
                  "false"
                ],
                [
                  "test_lr_disturbed_multicolinearty",
                  "false"
                ],
                [
                  "test_lr_regularized",
                  "false"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_lr_disturbed",
                  "false"
                ],
                [
                  "test_lr",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_lr_disturbed_two_data_point",
                  "false"
                ],
                [
                  "test_lr_two_data_point",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_multicolinearty",
                "false"
              ],
              [
                "test_lr_disturbed_multicolinearty",
                "false"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed",
                "false"
              ],
              [
                "test_lr",
                "false"
              ],
              [
                "test_lr_sample_weight_all_zero",
                "false"
              ],
              [
                "test_lr_disturbed_two_data_point",
                "false"
              ],
              [
                "test_lr_two_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_multicolinearty",
                "false"
              ],
              [
                "test_lr_disturbed_multicolinearty",
                "false"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed",
                "false"
              ],
              [
                "test_lr",
                "false"
              ],
              [
                "test_lr_sample_weight_all_zero",
                "false"
              ],
              [
                "test_lr_disturbed_two_data_point",
                "false"
              ],
              [
                "test_lr_two_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_lr_multicolinearty",
                [
                  "self.y_disturbed"
                ]
              ],
              [
                "test_lr_disturbed_multicolinearty",
                [
                  "self.y"
                ]
              ],
              [
                "test_lr_regularized",
                [
                  "self.y_disturbed"
                ]
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                [
                  "self.y_disturbed"
                ]
              ],
              [
                "test_lr_disturbed_sample_weight_all_half",
                [
                  "self.y"
                ]
              ],
              [
                "test_lr_disturbed_sample_weight_half_zero_half_one",
                [
                  "self.y"
                ]
              ],
              [
                "test_lr_sample_weight_all_half",
                [
                  "self.y_disturbed"
                ]
              ],
              [
                "test_lr_disturbed",
                [
                  "self.y"
                ]
              ],
              [
                "test_lr",
                [
                  "self.y_disturbed"
                ]
              ],
              [
                "test_lr_sample_weight_all_zero",
                [
                  "self.y_disturbed"
                ]
              ],
              [
                "test_lr_disturbed_two_data_point",
                [
                  "self.y"
                ]
              ],
              [
                "test_lr_two_data_point",
                [
                  "self.y_disturbed"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_multicolinearty",
                "false"
              ],
              [
                "test_lr_disturbed_multicolinearty",
                "false"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed",
                "false"
              ],
              [
                "test_lr",
                "false"
              ],
              [
                "test_lr_sample_weight_all_zero",
                "false"
              ],
              [
                "test_lr_disturbed_two_data_point",
                "false"
              ],
              [
                "test_lr_two_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_lr_multicolinearty",
                "false"
              ],
              [
                "test_lr_disturbed_multicolinearty",
                "false"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed",
                "false"
              ],
              [
                "test_lr",
                "true"
              ],
              [
                "test_lr_sample_weight_all_zero",
                "true"
              ],
              [
                "test_lr_disturbed_two_data_point",
                "false"
              ],
              [
                "test_lr_two_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_lr_multicolinearty",
                  "0"
                ],
                [
                  "test_lr_disturbed_multicolinearty",
                  "0"
                ],
                [
                  "test_lr_regularized",
                  "0"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_lr_disturbed",
                  "0"
                ],
                [
                  "test_lr",
                  "0"
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "0"
                ],
                [
                  "test_lr_disturbed_two_data_point",
                  "0"
                ],
                [
                  "test_lr_two_data_point",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_lr_multicolinearty",
                  "0"
                ],
                [
                  "test_lr_disturbed_multicolinearty",
                  "0"
                ],
                [
                  "test_lr_regularized",
                  "0"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_lr_disturbed",
                  "0"
                ],
                [
                  "test_lr",
                  "0"
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "0"
                ],
                [
                  "test_lr_disturbed_two_data_point",
                  "0"
                ],
                [
                  "test_lr_two_data_point",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_multicolinearty",
                "false"
              ],
              [
                "test_lr_disturbed_multicolinearty",
                "false"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed",
                "false"
              ],
              [
                "test_lr",
                "false"
              ],
              [
                "test_lr_sample_weight_all_zero",
                "false"
              ],
              [
                "test_lr_disturbed_two_data_point",
                "false"
              ],
              [
                "test_lr_two_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_multicolinearty",
                "false"
              ],
              [
                "test_lr_disturbed_multicolinearty",
                "false"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed",
                "false"
              ],
              [
                "test_lr",
                "false"
              ],
              [
                "test_lr_sample_weight_all_zero",
                "false"
              ],
              [
                "test_lr_disturbed_two_data_point",
                "false"
              ],
              [
                "test_lr_two_data_point",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_multicolinearty",
                "3"
              ],
              [
                "test_lr_disturbed_multicolinearty",
                "3"
              ],
              [
                "test_lr_regularized",
                "3"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "1"
              ],
              [
                "test_lr_disturbed_sample_weight_all_half",
                "3"
              ],
              [
                "test_lr_disturbed_sample_weight_half_zero_half_one",
                "1"
              ],
              [
                "test_lr_sample_weight_all_half",
                "2"
              ],
              [
                "test_lr_disturbed",
                "3"
              ],
              [
                "test_lr",
                "7"
              ],
              [
                "test_lr_sample_weight_all_zero",
                "1"
              ],
              [
                "test_lr_disturbed_two_data_point",
                "4"
              ],
              [
                "test_lr_two_data_point",
                "4"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_multicolinearty",
                [
                  "X"
                ]
              ],
              [
                "test_lr_disturbed_multicolinearty",
                [
                  "X"
                ]
              ],
              [
                "test_lr_regularized",
                []
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                [
                  "len_half"
                ]
              ],
              [
                "test_lr_disturbed_sample_weight_all_half",
                []
              ],
              [
                "test_lr_disturbed_sample_weight_half_zero_half_one",
                [
                  "len_half"
                ]
              ],
              [
                "test_lr_sample_weight_all_half",
                []
              ],
              [
                "test_lr_disturbed",
                []
              ],
              [
                "test_lr",
                [
                  "json_dict"
                ]
              ],
              [
                "test_lr_sample_weight_all_zero",
                []
              ],
              [
                "test_lr_disturbed_two_data_point",
                []
              ],
              [
                "test_lr_two_data_point",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_multicolinearty",
                [
                  "self.y",
                  "self.data_spector"
                ]
              ],
              [
                "test_lr_disturbed_multicolinearty",
                [
                  "self.y_disturbed",
                  "self.data_spector"
                ]
              ],
              [
                "test_lr_regularized",
                [
                  "self.y",
                  "self.data_spector"
                ]
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                [
                  "self.y",
                  "self.data_spector"
                ]
              ],
              [
                "test_lr_disturbed_sample_weight_all_half",
                [
                  "self.y_disturbed",
                  "self.data_spector"
                ]
              ],
              [
                "test_lr_disturbed_sample_weight_half_zero_half_one",
                [
                  "self.y_disturbed",
                  "self.data_spector"
                ]
              ],
              [
                "test_lr_sample_weight_all_half",
                [
                  "self.y",
                  "self.data_spector"
                ]
              ],
              [
                "test_lr_disturbed",
                [
                  "self.y_disturbed",
                  "self.data_spector"
                ]
              ],
              [
                "test_lr",
                [
                  "self.y",
                  "self.data_spector"
                ]
              ],
              [
                "test_lr_sample_weight_all_zero",
                [
                  "self.y",
                  "self.data_spector"
                ]
              ],
              [
                "test_lr_disturbed_two_data_point",
                [
                  "self.y_disturbed",
                  "self.data_spector"
                ]
              ],
              [
                "test_lr_two_data_point",
                [
                  "self.y",
                  "self.data_spector"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.632010606882206,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_lr_disturbed",
                  "test_lr_disturbed_two_data_point",
                  0.4035982802916504
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "test_lr_disturbed_two_data_point",
                  0.5762166932703561
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_multicolinearty",
                  0.8101112003775273
                ],
                [
                  "test_lr",
                  "test_lr_disturbed",
                  0.9814683129468964
                ],
                [
                  "test_lr",
                  "test_lr_sample_weight_all_zero",
                  0.4436813721081619
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_two_data_point",
                  0.7418533794838328
                ],
                [
                  "test_lr_disturbed_two_data_point",
                  "test_lr_disturbed_multicolinearty",
                  0.7584977095389521
                ],
                [
                  "test_lr_regularized",
                  "test_lr_disturbed_multicolinearty",
                  0.5358186293962895
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "test_lr_disturbed_multicolinearty",
                  0.5558464439445054
                ],
                [
                  "test_lr_disturbed",
                  "test_lr_sample_weight_all_zero",
                  0.42785575572935813
                ],
                [
                  "test_lr",
                  "test_lr_sample_weight_all_half",
                  0.5216387138348763
                ],
                [
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  "test_lr_two_data_point",
                  0.5882201177932833
                ],
                [
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  "test_lr_disturbed_multicolinearty",
                  0.7592041073158754
                ],
                [
                  "test_lr_regularized",
                  "test_lr_sample_weight_half_zero_half_one",
                  0.4170720294296786
                ],
                [
                  "test_lr_regularized",
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  0.41341877338933597
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_disturbed_two_data_point",
                  0.7596543734747933
                ],
                [
                  "test_lr",
                  "test_lr_disturbed_two_data_point",
                  0.4354179529065135
                ],
                [
                  "test_lr",
                  "test_lr_two_data_point",
                  0.4407797398961113
                ],
                [
                  "test_lr_disturbed",
                  "test_lr_disturbed_sample_weight_all_half",
                  0.9940585066854173
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "test_lr_multicolinearty",
                  0.7522726853113851
                ],
                [
                  "test_lr_multicolinearty",
                  "test_lr_disturbed_multicolinearty",
                  0.9743645707254008
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "test_lr_multicolinearty",
                  0.5530626467049238
                ],
                [
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  "test_lr_multicolinearty",
                  0.7457584237434877
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "test_lr_disturbed_two_data_point",
                  0.5670113115999494
                ],
                [
                  "test_lr_disturbed",
                  "test_lr_multicolinearty",
                  0.5441271118256349
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_disturbed_sample_weight_all_half",
                  0.5164645656207278
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  0.9824427127196648
                ],
                [
                  "test_lr_two_data_point",
                  "test_lr_disturbed_multicolinearty",
                  0.748859710082346
                ],
                [
                  "test_lr_regularized",
                  "test_lr_disturbed_sample_weight_all_half",
                  0.9928763428477766
                ],
                [
                  "test_lr",
                  "test_lr_disturbed_multicolinearty",
                  0.5787276138794714
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  0.7108544937842506
                ],
                [
                  "test_lr_regularized",
                  "test_lr_sample_weight_all_half",
                  0.4845715339719781
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "test_lr_sample_weight_half_zero_half_one",
                  0.8235856765100251
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "test_lr_sample_weight_all_zero",
                  0.43921989061999517
                ],
                [
                  "test_lr_two_data_point",
                  "test_lr_multicolinearty",
                  0.7588488647458507
                ],
                [
                  "test_lr_disturbed",
                  "test_lr_disturbed_multicolinearty",
                  0.5448726262731397
                ],
                [
                  "test_lr_disturbed",
                  "test_lr_sample_weight_half_zero_half_one",
                  0.41892613909934767
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "test_lr_disturbed_multicolinearty",
                  0.7333716711853314
                ],
                [
                  "test_lr_regularized",
                  "test_lr_multicolinearty",
                  0.5445700318109205
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "test_lr_two_data_point",
                  0.5934180401826364
                ],
                [
                  "test_lr_regularized",
                  "test_lr_disturbed_two_data_point",
                  0.4016404315067655
                ],
                [
                  "test_lr",
                  "test_lr_sample_weight_half_zero_half_one",
                  0.44643171236015705
                ],
                [
                  "test_lr_regularized",
                  "test_lr_sample_weight_all_zero",
                  0.42588941433819216
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_disturbed_multicolinearty",
                  0.7888934916555407
                ],
                [
                  "test_lr",
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  0.4425212862593935
                ],
                [
                  "test_lr_disturbed",
                  "test_lr_regularized",
                  0.9975593212709024
                ],
                [
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  "test_lr_disturbed_two_data_point",
                  0.5722266625639146
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  0.8101870146922928
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "test_lr_multicolinearty",
                  0.7566723060068075
                ],
                [
                  "test_lr",
                  "test_lr_regularized",
                  0.9826479528170409
                ],
                [
                  "test_lr_disturbed",
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  0.41960487946232844
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_sample_weight_half_zero_half_one",
                  0.7244538141737679
                ],
                [
                  "test_lr",
                  "test_lr_disturbed_sample_weight_all_half",
                  0.9779258311188032
                ],
                [
                  "test_lr_disturbed",
                  "test_lr_two_data_point",
                  0.40326727101256143
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_sample_weight_all_zero",
                  0.7638925273126549
                ],
                [
                  "test_lr_regularized",
                  "test_lr_two_data_point",
                  0.4043931505801704
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "test_lr_two_data_point",
                  0.4080362687443725
                ],
                [
                  "test_lr_disturbed_two_data_point",
                  "test_lr_multicolinearty",
                  0.7551046089051845
                ],
                [
                  "test_lr_two_data_point",
                  "test_lr_disturbed_two_data_point",
                  0.9793881463581324
                ],
                [
                  "test_lr_disturbed",
                  "test_lr_sample_weight_all_half",
                  0.48553365235071216
                ],
                [
                  "test_lr",
                  "test_lr_multicolinearty",
                  0.5879472157334498
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "test_lr_disturbed_multicolinearty",
                  0.7424448780245374
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "test_lr_two_data_point",
                  0.6030521329039471
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "test_lr_sample_weight_half_zero_half_one",
                  0.4240585374415378
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  0.4277932202068474
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "test_lr_disturbed_two_data_point",
                  0.40851557136791866
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_multicolinearty",
                "false"
              ],
              [
                "test_lr_disturbed_multicolinearty",
                "false"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed",
                "false"
              ],
              [
                "test_lr",
                "false"
              ],
              [
                "test_lr_sample_weight_all_zero",
                "false"
              ],
              [
                "test_lr_disturbed_two_data_point",
                "false"
              ],
              [
                "test_lr_two_data_point",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 12
      },
      {
        "name": "CrossEntropyMNLMultinomialTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_lr_multicolinearty",
                  "[]"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_lr_disturbed_multicolinearty",
                  "[]"
                ],
                [
                  "test_lr_three_data_point",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_lr_disturbed",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_lr_disturbed_regularized",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_lr_regularized",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_label_encoder",
                  "[]"
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_lr_disturbed_three_data_point",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_lr",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_lr_multicolinearty",
                  "[]"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "[]"
                ],
                [
                  "test_lr_disturbed_multicolinearty",
                  "[]"
                ],
                [
                  "test_lr_three_data_point",
                  "[]"
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "[]"
                ],
                [
                  "test_lr_disturbed",
                  "[]"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_lr_disturbed_regularized",
                  "[]"
                ],
                [
                  "test_lr_regularized",
                  "[]"
                ],
                [
                  "test_label_encoder",
                  "[]"
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "[]"
                ],
                [
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  "[]"
                ],
                [
                  "test_lr_disturbed_three_data_point",
                  "[]"
                ],
                [
                  "test_lr",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_lr_multicolinearty",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_lr_disturbed_multicolinearty",
                  "false"
                ],
                [
                  "test_lr_three_data_point",
                  "false"
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_lr_disturbed",
                  "false"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_lr_disturbed_regularized",
                  "false"
                ],
                [
                  "test_lr_regularized",
                  "false"
                ],
                [
                  "test_label_encoder",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_lr_disturbed_three_data_point",
                  "false"
                ],
                [
                  "test_lr",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_lr_multicolinearty",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_lr_disturbed_multicolinearty",
                  "false"
                ],
                [
                  "test_lr_three_data_point",
                  "false"
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_lr_disturbed",
                  "false"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_lr_disturbed_regularized",
                  "false"
                ],
                [
                  "test_lr_regularized",
                  "false"
                ],
                [
                  "test_label_encoder",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_lr_disturbed_three_data_point",
                  "false"
                ],
                [
                  "test_lr",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_lr_multicolinearty",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_lr_disturbed_multicolinearty",
                  "false"
                ],
                [
                  "test_lr_three_data_point",
                  "false"
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_lr_disturbed",
                  "false"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_lr_disturbed_regularized",
                  "false"
                ],
                [
                  "test_lr_regularized",
                  "false"
                ],
                [
                  "test_label_encoder",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_lr_disturbed_three_data_point",
                  "false"
                ],
                [
                  "test_lr",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_lr_multicolinearty",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_lr_disturbed_multicolinearty",
                  "false"
                ],
                [
                  "test_lr_three_data_point",
                  "false"
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "false"
                ],
                [
                  "test_lr_disturbed",
                  "false"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_lr_disturbed_regularized",
                  "false"
                ],
                [
                  "test_lr_regularized",
                  "false"
                ],
                [
                  "test_label_encoder",
                  "false"
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "false"
                ],
                [
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  "false"
                ],
                [
                  "test_lr_disturbed_three_data_point",
                  "false"
                ],
                [
                  "test_lr",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_multicolinearty",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed_multicolinearty",
                "false"
              ],
              [
                "test_lr_three_data_point",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_disturbed_regularized",
                "false"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_label_encoder",
                "false"
              ],
              [
                "test_lr_sample_weight_all_zero",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_disturbed_three_data_point",
                "false"
              ],
              [
                "test_lr",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_multicolinearty",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed_multicolinearty",
                "false"
              ],
              [
                "test_lr_three_data_point",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_disturbed_regularized",
                "false"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_label_encoder",
                "false"
              ],
              [
                "test_lr_sample_weight_all_zero",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_disturbed_three_data_point",
                "false"
              ],
              [
                "test_lr",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_lr_multicolinearty",
                [
                  "self.y_disturbed"
                ]
              ],
              [
                "test_lr_sample_weight_all_half",
                [
                  "self.y_disturbed"
                ]
              ],
              [
                "test_lr_disturbed_multicolinearty",
                [
                  "self.y"
                ]
              ],
              [
                "test_lr_three_data_point",
                [
                  "self.y_disturbed"
                ]
              ],
              [
                "test_lr_disturbed_sample_weight_all_half",
                [
                  "self.y"
                ]
              ],
              [
                "test_lr_disturbed",
                [
                  "self.y"
                ]
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                [
                  "self.y_disturbed"
                ]
              ],
              [
                "test_lr_disturbed_regularized",
                [
                  "self.y"
                ]
              ],
              [
                "test_lr_regularized",
                [
                  "self.y_disturbed"
                ]
              ],
              [
                "test_label_encoder",
                [
                  "self.data_anes96",
                  "self.y",
                  "self.y_disturbed"
                ]
              ],
              [
                "test_lr_sample_weight_all_zero",
                [
                  "self.y"
                ]
              ],
              [
                "test_lr_disturbed_sample_weight_half_zero_half_one",
                [
                  "self.y"
                ]
              ],
              [
                "test_lr_disturbed_three_data_point",
                [
                  "self.y"
                ]
              ],
              [
                "test_lr",
                [
                  "self.y_disturbed"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_multicolinearty",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed_multicolinearty",
                "false"
              ],
              [
                "test_lr_three_data_point",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_disturbed_regularized",
                "false"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_label_encoder",
                "false"
              ],
              [
                "test_lr_sample_weight_all_zero",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_disturbed_three_data_point",
                "false"
              ],
              [
                "test_lr",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_lr_multicolinearty",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "true"
              ],
              [
                "test_lr_disturbed_multicolinearty",
                "false"
              ],
              [
                "test_lr_three_data_point",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_all_half",
                "true"
              ],
              [
                "test_lr_disturbed",
                "true"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_disturbed_regularized",
                "true"
              ],
              [
                "test_lr_regularized",
                "true"
              ],
              [
                "test_label_encoder",
                "false"
              ],
              [
                "test_lr_sample_weight_all_zero",
                "true"
              ],
              [
                "test_lr_disturbed_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_disturbed_three_data_point",
                "false"
              ],
              [
                "test_lr",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_lr_multicolinearty",
                  "0"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_lr_disturbed_multicolinearty",
                  "0"
                ],
                [
                  "test_lr_three_data_point",
                  "0"
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_lr_disturbed",
                  "0"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_lr_disturbed_regularized",
                  "0"
                ],
                [
                  "test_lr_regularized",
                  "0"
                ],
                [
                  "test_label_encoder",
                  "0"
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "0"
                ],
                [
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_lr_disturbed_three_data_point",
                  "0"
                ],
                [
                  "test_lr",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_lr_multicolinearty",
                  "0"
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_lr_disturbed_multicolinearty",
                  "0"
                ],
                [
                  "test_lr_three_data_point",
                  "0"
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "0"
                ],
                [
                  "test_lr_disturbed",
                  "0"
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_lr_disturbed_regularized",
                  "0"
                ],
                [
                  "test_lr_regularized",
                  "0"
                ],
                [
                  "test_label_encoder",
                  "0"
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "0"
                ],
                [
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  "0"
                ],
                [
                  "test_lr_disturbed_three_data_point",
                  "0"
                ],
                [
                  "test_lr",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_multicolinearty",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed_multicolinearty",
                "false"
              ],
              [
                "test_lr_three_data_point",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_disturbed_regularized",
                "false"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_label_encoder",
                "false"
              ],
              [
                "test_lr_sample_weight_all_zero",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_disturbed_three_data_point",
                "false"
              ],
              [
                "test_lr",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_multicolinearty",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed_multicolinearty",
                "false"
              ],
              [
                "test_lr_three_data_point",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_disturbed_regularized",
                "false"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_label_encoder",
                "false"
              ],
              [
                "test_lr_sample_weight_all_zero",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_disturbed_three_data_point",
                "false"
              ],
              [
                "test_lr",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_multicolinearty",
                "2"
              ],
              [
                "test_lr_sample_weight_all_half",
                "3"
              ],
              [
                "test_lr_disturbed_multicolinearty",
                "2"
              ],
              [
                "test_lr_three_data_point",
                "4"
              ],
              [
                "test_lr_disturbed_sample_weight_all_half",
                "3"
              ],
              [
                "test_lr_disturbed",
                "2"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "1"
              ],
              [
                "test_lr_disturbed_regularized",
                "2"
              ],
              [
                "test_lr_regularized",
                "2"
              ],
              [
                "test_label_encoder",
                "6"
              ],
              [
                "test_lr_sample_weight_all_zero",
                "1"
              ],
              [
                "test_lr_disturbed_sample_weight_half_zero_half_one",
                "1"
              ],
              [
                "test_lr_disturbed_three_data_point",
                "4"
              ],
              [
                "test_lr",
                "6"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_multicolinearty",
                [
                  "X"
                ]
              ],
              [
                "test_lr_sample_weight_all_half",
                []
              ],
              [
                "test_lr_disturbed_multicolinearty",
                [
                  "X"
                ]
              ],
              [
                "test_lr_three_data_point",
                []
              ],
              [
                "test_lr_disturbed_sample_weight_all_half",
                []
              ],
              [
                "test_lr_disturbed",
                []
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                [
                  "len_half"
                ]
              ],
              [
                "test_lr_disturbed_regularized",
                []
              ],
              [
                "test_lr_regularized",
                []
              ],
              [
                "test_label_encoder",
                [
                  "sample_weight_repeated",
                  "Y_repeated",
                  "x",
                  "y",
                  "X_repeated",
                  "sample_weight"
                ]
              ],
              [
                "test_lr_sample_weight_all_zero",
                []
              ],
              [
                "test_lr_disturbed_sample_weight_half_zero_half_one",
                [
                  "len_half"
                ]
              ],
              [
                "test_lr_disturbed_three_data_point",
                []
              ],
              [
                "test_lr",
                [
                  "json_dict"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_lr_multicolinearty",
                [
                  "self.data_anes96",
                  "self.y"
                ]
              ],
              [
                "test_lr_sample_weight_all_half",
                [
                  "self.data_anes96",
                  "self.y"
                ]
              ],
              [
                "test_lr_disturbed_multicolinearty",
                [
                  "self.data_anes96",
                  "self.y_disturbed"
                ]
              ],
              [
                "test_lr_three_data_point",
                [
                  "self.data_anes96",
                  "self.y"
                ]
              ],
              [
                "test_lr_disturbed_sample_weight_all_half",
                [
                  "self.data_anes96",
                  "self.y_disturbed"
                ]
              ],
              [
                "test_lr_disturbed",
                [
                  "self.data_anes96",
                  "self.y_disturbed"
                ]
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                [
                  "self.data_anes96",
                  "self.y"
                ]
              ],
              [
                "test_lr_disturbed_regularized",
                [
                  "self.data_anes96",
                  "self.y_disturbed"
                ]
              ],
              [
                "test_lr_regularized",
                [
                  "self.data_anes96",
                  "self.y"
                ]
              ],
              [
                "test_label_encoder",
                []
              ],
              [
                "test_lr_sample_weight_all_zero",
                [
                  "self.data_anes96",
                  "self.y_disturbed"
                ]
              ],
              [
                "test_lr_disturbed_sample_weight_half_zero_half_one",
                [
                  "self.data_anes96",
                  "self.y_disturbed"
                ]
              ],
              [
                "test_lr_disturbed_three_data_point",
                [
                  "self.data_anes96",
                  "self.y_disturbed"
                ]
              ],
              [
                "test_lr",
                [
                  "self.data_anes96",
                  "self.y"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.723937779586562,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_label_encoder",
                  "test_lr",
                  0.4327670602218327
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_disturbed_multicolinearty",
                  0.8019376810231134
                ],
                [
                  "test_lr_three_data_point",
                  "test_lr_multicolinearty",
                  0.6813294146347202
                ],
                [
                  "test_lr_multicolinearty",
                  "test_lr_disturbed_multicolinearty",
                  0.9682465598409956
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_disturbed_three_data_point",
                  0.6433436607527279
                ],
                [
                  "test_lr_disturbed",
                  "test_lr_sample_weight_half_zero_half_one",
                  0.7308664867819663
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_multicolinearty",
                  0.8241290821356505
                ],
                [
                  "test_lr_regularized",
                  "test_lr_disturbed_sample_weight_all_half",
                  0.8886848327044624
                ],
                [
                  "test_lr_three_data_point",
                  "test_lr_disturbed_three_data_point",
                  0.9929803920661814
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "test_lr_sample_weight_all_zero",
                  0.8368498099155646
                ],
                [
                  "test_lr_disturbed_regularized",
                  "test_lr_three_data_point",
                  0.6441863528242965
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "test_lr_disturbed_three_data_point",
                  0.6467754128649275
                ],
                [
                  "test_label_encoder",
                  "test_lr_disturbed_sample_weight_all_half",
                  0.5284594332876104
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "test_lr_disturbed_multicolinearty",
                  0.8287869137556373
                ],
                [
                  "test_lr",
                  "test_lr_sample_weight_half_zero_half_one",
                  0.6356158082769762
                ],
                [
                  "test_lr",
                  "test_lr_sample_weight_all_half",
                  0.7915454237086825
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  0.8452780838305063
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  0.7997921677255232
                ],
                [
                  "test_lr",
                  "test_lr_disturbed_three_data_point",
                  0.5514142676318742
                ],
                [
                  "test_lr",
                  "test_lr_disturbed_multicolinearty",
                  0.671594523953139
                ],
                [
                  "test_lr_disturbed",
                  "test_lr_disturbed_regularized",
                  0.9739535620791494
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_three_data_point",
                  0.6450838415369244
                ],
                [
                  "test_lr_disturbed_three_data_point",
                  "test_lr_multicolinearty",
                  0.6794914576457024
                ],
                [
                  "test_lr_disturbed_three_data_point",
                  "test_lr_disturbed_multicolinearty",
                  0.6813026725216612
                ],
                [
                  "test_lr_disturbed",
                  "test_lr_disturbed_sample_weight_all_half",
                  0.9107125101544614
                ],
                [
                  "test_lr_regularized",
                  "test_lr_sample_weight_all_half",
                  0.9043124374062601
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "test_lr_three_data_point",
                  0.575210927065073
                ],
                [
                  "test_lr",
                  "test_lr_disturbed",
                  0.8074203756142612
                ],
                [
                  "test_lr_disturbed",
                  "test_lr_disturbed_multicolinearty",
                  0.7552470597266013
                ],
                [
                  "test_label_encoder",
                  "test_lr_sample_weight_all_zero",
                  0.5502626190422059
                ],
                [
                  "test_lr",
                  "test_lr_disturbed_regularized",
                  0.7871367599949985
                ],
                [
                  "test_label_encoder",
                  "test_lr_disturbed_multicolinearty",
                  0.5906632670443551
                ],
                [
                  "test_lr_disturbed",
                  "test_lr_regularized",
                  0.9472551135958184
                ],
                [
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  "test_lr_three_data_point",
                  0.5711226668148374
                ],
                [
                  "test_lr",
                  "test_lr_sample_weight_all_zero",
                  0.5933860811072148
                ],
                [
                  "test_lr",
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  0.6310982257326754
                ],
                [
                  "test_label_encoder",
                  "test_lr_disturbed",
                  0.485504235240324
                ],
                [
                  "test_label_encoder",
                  "test_lr_sample_weight_half_zero_half_one",
                  0.5331343269413543
                ],
                [
                  "test_lr_disturbed",
                  "test_lr_three_data_point",
                  0.6378787499192115
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "test_lr_disturbed_three_data_point",
                  0.5836478820935035
                ],
                [
                  "test_lr_three_data_point",
                  "test_lr_disturbed_multicolinearty",
                  0.6702289115285839
                ],
                [
                  "test_label_encoder",
                  "test_lr_disturbed_regularized",
                  0.4940925078097397
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_disturbed_sample_weight_all_half",
                  0.9751381502645194
                ],
                [
                  "test_lr_disturbed",
                  "test_lr_multicolinearty",
                  0.7297479495020048
                ],
                [
                  "test_lr_disturbed_regularized",
                  "test_lr_disturbed_three_data_point",
                  0.6567889634911905
                ],
                [
                  "test_lr_disturbed_regularized",
                  "test_lr_sample_weight_all_zero",
                  0.7616775379093997
                ],
                [
                  "test_lr_disturbed_regularized",
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  0.7440411959113262
                ],
                [
                  "test_lr_regularized",
                  "test_lr_disturbed_three_data_point",
                  0.6550715792540233
                ],
                [
                  "test_lr_disturbed",
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  0.7439278158760617
                ],
                [
                  "test_lr_regularized",
                  "test_lr_disturbed_multicolinearty",
                  0.7341480668301309
                ],
                [
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  "test_lr_multicolinearty",
                  0.7667205739077614
                ],
                [
                  "test_lr_regularized",
                  "test_lr_multicolinearty",
                  0.7542046462283485
                ],
                [
                  "test_label_encoder",
                  "test_lr_multicolinearty",
                  0.6004459835427419
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "test_lr_disturbed_three_data_point",
                  0.5736592357380144
                ],
                [
                  "test_lr",
                  "test_lr_regularized",
                  0.8129587771849033
                ],
                [
                  "test_label_encoder",
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  0.5293451223655798
                ],
                [
                  "test_label_encoder",
                  "test_lr_disturbed_three_data_point",
                  0.6782377387732258
                ],
                [
                  "test_lr",
                  "test_lr_three_data_point",
                  0.552905788526853
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "test_lr_disturbed_multicolinearty",
                  0.7602281026513269
                ],
                [
                  "test_lr_disturbed_regularized",
                  "test_lr_disturbed_multicolinearty",
                  0.7619061440486805
                ],
                [
                  "test_label_encoder",
                  "test_lr_three_data_point",
                  0.6800723045770595
                ],
                [
                  "test_lr_disturbed_regularized",
                  "test_lr_sample_weight_half_zero_half_one",
                  0.7259495299358205
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "test_lr_multicolinearty",
                  0.7769610354753802
                ],
                [
                  "test_label_encoder",
                  "test_lr_regularized",
                  0.5038005575232822
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_sample_weight_half_zero_half_one",
                  0.8431544230851202
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "test_lr_multicolinearty",
                  0.7423131745675768
                ],
                [
                  "test_lr_regularized",
                  "test_lr_three_data_point",
                  0.6568434828943845
                ],
                [
                  "test_lr_disturbed_regularized",
                  "test_lr_sample_weight_all_half",
                  0.882496144371169
                ],
                [
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  "test_lr_disturbed_multicolinearty",
                  0.7797565878407754
                ],
                [
                  "test_lr_disturbed_regularized",
                  "test_lr_multicolinearty",
                  0.7319261523950871
                ],
                [
                  "test_lr_disturbed",
                  "test_lr_disturbed_three_data_point",
                  0.6474174393471271
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "test_lr_disturbed_multicolinearty",
                  0.7596278293047439
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "test_lr_sample_weight_half_zero_half_one",
                  0.7870703487092509
                ],
                [
                  "test_lr",
                  "test_lr_multicolinearty",
                  0.6878702306800517
                ],
                [
                  "test_lr_disturbed",
                  "test_lr_sample_weight_all_zero",
                  0.7573811200384598
                ],
                [
                  "test_lr_sample_weight_half_zero_half_one",
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  0.9871863101333284
                ],
                [
                  "test_label_encoder",
                  "test_lr_sample_weight_all_half",
                  0.5350903003374992
                ],
                [
                  "test_lr_regularized",
                  "test_lr_sample_weight_half_zero_half_one",
                  0.7402131627874514
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "test_lr_multicolinearty",
                  0.8051173347958769
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "test_lr_sample_weight_half_zero_half_one",
                  0.8273852041070789
                ],
                [
                  "test_lr_regularized",
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  0.7349521638951567
                ],
                [
                  "test_lr_sample_weight_all_zero",
                  "test_lr_three_data_point",
                  0.5776752808572254
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_sample_weight_all_zero",
                  0.8185287822415216
                ],
                [
                  "test_lr_sample_weight_all_half",
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  0.8318125018472123
                ],
                [
                  "test_lr_disturbed",
                  "test_lr_sample_weight_all_half",
                  0.8919762652414079
                ],
                [
                  "test_lr_disturbed_regularized",
                  "test_lr_disturbed_sample_weight_all_half",
                  0.9062491693104437
                ],
                [
                  "test_lr_disturbed_sample_weight_half_zero_half_one",
                  "test_lr_disturbed_three_data_point",
                  0.5783179243018661
                ],
                [
                  "test_lr_regularized",
                  "test_lr_sample_weight_all_zero",
                  0.7562051853647911
                ],
                [
                  "test_lr_regularized",
                  "test_lr_disturbed_regularized",
                  0.965163222488229
                ],
                [
                  "test_lr",
                  "test_lr_disturbed_sample_weight_all_half",
                  0.7788519146064719
                ],
                [
                  "test_lr_disturbed_sample_weight_all_half",
                  "test_lr_three_data_point",
                  0.6370899287589037
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_lr_multicolinearty",
                "false"
              ],
              [
                "test_lr_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed_multicolinearty",
                "false"
              ],
              [
                "test_lr_three_data_point",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_all_half",
                "false"
              ],
              [
                "test_lr_disturbed",
                "false"
              ],
              [
                "test_lr_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_disturbed_regularized",
                "false"
              ],
              [
                "test_lr_regularized",
                "false"
              ],
              [
                "test_label_encoder",
                "false"
              ],
              [
                "test_lr_sample_weight_all_zero",
                "false"
              ],
              [
                "test_lr_disturbed_sample_weight_half_zero_half_one",
                "false"
              ],
              [
                "test_lr_disturbed_three_data_point",
                "false"
              ],
              [
                "test_lr",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 14
      }
    ]
  },
  {
    "name": "tests_\u0026_test_SupervisedIOHMM.py",
    "testCases": [
      {
        "name": "SupervisedIOHMMTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_from_config",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_train_no_covariates",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertSetEqual]"
                ],
                [
                  "test_from_json",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_from_config",
                  "[]"
                ],
                [
                  "test_train_no_covariates",
                  "[]"
                ],
                [
                  "test_from_json",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_from_config",
                  "false"
                ],
                [
                  "test_train_no_covariates",
                  "false"
                ],
                [
                  "test_from_json",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_from_config",
                  "false"
                ],
                [
                  "test_train_no_covariates",
                  "false"
                ],
                [
                  "test_from_json",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_from_config",
                  "false"
                ],
                [
                  "test_train_no_covariates",
                  "false"
                ],
                [
                  "test_from_json",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_from_config",
                  "false"
                ],
                [
                  "test_train_no_covariates",
                  "false"
                ],
                [
                  "test_from_json",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_from_config",
                "false"
              ],
              [
                "test_train_no_covariates",
                "false"
              ],
              [
                "test_from_json",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_from_config",
                "false"
              ],
              [
                "test_train_no_covariates",
                "false"
              ],
              [
                "test_from_json",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_from_config",
                []
              ],
              [
                "test_train_no_covariates",
                []
              ],
              [
                "test_from_json",
                [
                  "self.data_speed",
                  "self.states"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_from_config",
                "false"
              ],
              [
                "test_train_no_covariates",
                "false"
              ],
              [
                "test_from_json",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_from_config",
                "false"
              ],
              [
                "test_train_no_covariates",
                "false"
              ],
              [
                "test_from_json",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_from_config",
                  "0"
                ],
                [
                  "test_train_no_covariates",
                  "0"
                ],
                [
                  "test_from_json",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_from_config",
                  "0"
                ],
                [
                  "test_train_no_covariates",
                  "0"
                ],
                [
                  "test_from_json",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_from_config",
                "false"
              ],
              [
                "test_train_no_covariates",
                "false"
              ],
              [
                "test_from_json",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_from_config",
                "false"
              ],
              [
                "test_train_no_covariates",
                "false"
              ],
              [
                "test_from_json",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_from_config",
                "7"
              ],
              [
                "test_train_no_covariates",
                "8"
              ],
              [
                "test_from_json",
                "7"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_from_config",
                [
                  "json_dict"
                ]
              ],
              [
                "test_train_no_covariates",
                [
                  "json_dict"
                ]
              ],
              [
                "test_from_json",
                [
                  "json_dict"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_from_config",
                [
                  "self.data_speed",
                  "self.states"
                ]
              ],
              [
                "test_train_no_covariates",
                [
                  "self.data_speed",
                  "self.states"
                ]
              ],
              [
                "test_from_json",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8640977693651438,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_train_no_covariates",
                  "test_from_json",
                  0.8800457676301998
                ],
                [
                  "test_from_json",
                  "test_from_config",
                  0.8863422047450765
                ],
                [
                  "test_train_no_covariates",
                  "test_from_config",
                  0.8259053357201553
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_from_config",
                "false"
              ],
              [
                "test_train_no_covariates",
                "false"
              ],
              [
                "test_from_json",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_UnSupervisedIOHMM.py",
    "testCases": [
      {
        "name": "UnSupervisedIOHMMTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_train_no_covariates",
                  "[]"
                ],
                [
                  "test_train_multivariate",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertSetEqual]"
                ],
                [
                  "test_from_config",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_from_json",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_train_covariates_for_transition",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_train_no_covariates",
                  "[]"
                ],
                [
                  "test_train_multivariate",
                  "[]"
                ],
                [
                  "test_from_config",
                  "[]"
                ],
                [
                  "test_from_json",
                  "[]"
                ],
                [
                  "test_train_covariates_for_transition",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_train_no_covariates",
                  "false"
                ],
                [
                  "test_train_multivariate",
                  "false"
                ],
                [
                  "test_from_config",
                  "false"
                ],
                [
                  "test_from_json",
                  "false"
                ],
                [
                  "test_train_covariates_for_transition",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_train_no_covariates",
                  "false"
                ],
                [
                  "test_train_multivariate",
                  "false"
                ],
                [
                  "test_from_config",
                  "false"
                ],
                [
                  "test_from_json",
                  "false"
                ],
                [
                  "test_train_covariates_for_transition",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_train_no_covariates",
                  "false"
                ],
                [
                  "test_train_multivariate",
                  "false"
                ],
                [
                  "test_from_config",
                  "false"
                ],
                [
                  "test_from_json",
                  "false"
                ],
                [
                  "test_train_covariates_for_transition",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_train_no_covariates",
                  "false"
                ],
                [
                  "test_train_multivariate",
                  "false"
                ],
                [
                  "test_from_config",
                  "false"
                ],
                [
                  "test_from_json",
                  "false"
                ],
                [
                  "test_train_covariates_for_transition",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_train_no_covariates",
                "false"
              ],
              [
                "test_train_multivariate",
                "false"
              ],
              [
                "test_from_config",
                "false"
              ],
              [
                "test_from_json",
                "false"
              ],
              [
                "test_train_covariates_for_transition",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_train_no_covariates",
                "false"
              ],
              [
                "test_train_multivariate",
                "false"
              ],
              [
                "test_from_config",
                "false"
              ],
              [
                "test_from_json",
                "false"
              ],
              [
                "test_train_covariates_for_transition",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_train_no_covariates",
                []
              ],
              [
                "test_train_multivariate",
                []
              ],
              [
                "test_from_config",
                []
              ],
              [
                "test_from_json",
                []
              ],
              [
                "test_train_covariates_for_transition",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_train_no_covariates",
                "false"
              ],
              [
                "test_train_multivariate",
                "false"
              ],
              [
                "test_from_config",
                "false"
              ],
              [
                "test_from_json",
                "false"
              ],
              [
                "test_train_covariates_for_transition",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_train_no_covariates",
                "false"
              ],
              [
                "test_train_multivariate",
                "false"
              ],
              [
                "test_from_config",
                "false"
              ],
              [
                "test_from_json",
                "false"
              ],
              [
                "test_train_covariates_for_transition",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_train_no_covariates",
                  "0"
                ],
                [
                  "test_train_multivariate",
                  "0"
                ],
                [
                  "test_from_config",
                  "0"
                ],
                [
                  "test_from_json",
                  "0"
                ],
                [
                  "test_train_covariates_for_transition",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_train_no_covariates",
                  "0"
                ],
                [
                  "test_train_multivariate",
                  "0"
                ],
                [
                  "test_from_config",
                  "0"
                ],
                [
                  "test_from_json",
                  "0"
                ],
                [
                  "test_train_covariates_for_transition",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_train_no_covariates",
                "false"
              ],
              [
                "test_train_multivariate",
                "false"
              ],
              [
                "test_from_config",
                "false"
              ],
              [
                "test_from_json",
                "false"
              ],
              [
                "test_train_covariates_for_transition",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_train_no_covariates",
                "false"
              ],
              [
                "test_train_multivariate",
                "false"
              ],
              [
                "test_from_config",
                "false"
              ],
              [
                "test_from_json",
                "false"
              ],
              [
                "test_train_covariates_for_transition",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_train_no_covariates",
                "8"
              ],
              [
                "test_train_multivariate",
                "8"
              ],
              [
                "test_from_config",
                "7"
              ],
              [
                "test_from_json",
                "7"
              ],
              [
                "test_train_covariates_for_transition",
                "6"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_train_no_covariates",
                []
              ],
              [
                "test_train_multivariate",
                [
                  "json_dict"
                ]
              ],
              [
                "test_from_config",
                [
                  "json_dict"
                ]
              ],
              [
                "test_from_json",
                [
                  "json_dict"
                ]
              ],
              [
                "test_train_covariates_for_transition",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_train_no_covariates",
                [
                  "self.data_speed"
                ]
              ],
              [
                "test_train_multivariate",
                [
                  "self.data_speed"
                ]
              ],
              [
                "test_from_config",
                [
                  "self.data_speed"
                ]
              ],
              [
                "test_from_json",
                [
                  "self.data_speed"
                ]
              ],
              [
                "test_train_covariates_for_transition",
                [
                  "self.data_speed"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.836264928878963,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_train_no_covariates",
                  "test_train_multivariate",
                  0.8436260840821529
                ],
                [
                  "test_train_multivariate",
                  "test_from_json",
                  0.8551600627622117
                ],
                [
                  "test_train_covariates_for_transition",
                  "test_train_multivariate",
                  0.9029116709826647
                ],
                [
                  "test_train_no_covariates",
                  "test_from_json",
                  0.8624013862012958
                ],
                [
                  "test_from_json",
                  "test_from_config",
                  0.8366778975843812
                ],
                [
                  "test_train_covariates_for_transition",
                  "test_from_config",
                  0.7571284874952731
                ],
                [
                  "test_train_no_covariates",
                  "test_train_covariates_for_transition",
                  0.9257949351573522
                ],
                [
                  "test_train_covariates_for_transition",
                  "test_from_json",
                  0.8806475591613198
                ],
                [
                  "test_train_no_covariates",
                  "test_from_config",
                  0.7367114605568006
                ],
                [
                  "test_train_multivariate",
                  "test_from_config",
                  0.761589744806178
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_train_no_covariates",
                "false"
              ],
              [
                "test_train_multivariate",
                "false"
              ],
              [
                "test_from_config",
                "false"
              ],
              [
                "test_from_json",
                "false"
              ],
              [
                "test_train_covariates_for_transition",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      }
    ]
  },
  {
    "name": "tests_\u0026_test_SemiSupervisedIOHMM.py",
    "testCases": [
      {
        "name": "SemiSupervisedIOHMMTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_train_no_covariates",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertSetEqual]"
                ],
                [
                  "test_from_json",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_from_config",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_train_no_covariates",
                  "[]"
                ],
                [
                  "test_from_json",
                  "[]"
                ],
                [
                  "test_from_config",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_train_no_covariates",
                  "false"
                ],
                [
                  "test_from_json",
                  "false"
                ],
                [
                  "test_from_config",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_train_no_covariates",
                  "false"
                ],
                [
                  "test_from_json",
                  "false"
                ],
                [
                  "test_from_config",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_train_no_covariates",
                  "false"
                ],
                [
                  "test_from_json",
                  "false"
                ],
                [
                  "test_from_config",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_train_no_covariates",
                  "false"
                ],
                [
                  "test_from_json",
                  "false"
                ],
                [
                  "test_from_config",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_train_no_covariates",
                "false"
              ],
              [
                "test_from_json",
                "false"
              ],
              [
                "test_from_config",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_train_no_covariates",
                "false"
              ],
              [
                "test_from_json",
                "false"
              ],
              [
                "test_from_config",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_train_no_covariates",
                []
              ],
              [
                "test_from_json",
                [
                  "self.data_speed",
                  "self.states"
                ]
              ],
              [
                "test_from_config",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_train_no_covariates",
                "false"
              ],
              [
                "test_from_json",
                "false"
              ],
              [
                "test_from_config",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_train_no_covariates",
                "false"
              ],
              [
                "test_from_json",
                "false"
              ],
              [
                "test_from_config",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_train_no_covariates",
                  "0"
                ],
                [
                  "test_from_json",
                  "0"
                ],
                [
                  "test_from_config",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_train_no_covariates",
                  "0"
                ],
                [
                  "test_from_json",
                  "0"
                ],
                [
                  "test_from_config",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_train_no_covariates",
                "false"
              ],
              [
                "test_from_json",
                "false"
              ],
              [
                "test_from_config",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_train_no_covariates",
                "false"
              ],
              [
                "test_from_json",
                "false"
              ],
              [
                "test_from_config",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_train_no_covariates",
                "14"
              ],
              [
                "test_from_json",
                "13"
              ],
              [
                "test_from_config",
                "13"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_train_no_covariates",
                [
                  "json_dict"
                ]
              ],
              [
                "test_from_json",
                [
                  "json_dict"
                ]
              ],
              [
                "test_from_config",
                [
                  "json_dict"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_train_no_covariates",
                [
                  "self.data_speed",
                  "self.states"
                ]
              ],
              [
                "test_from_json",
                []
              ],
              [
                "test_from_config",
                [
                  "self.data_speed",
                  "self.states"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9568953025498153,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_train_no_covariates",
                  "test_from_config",
                  0.943280111659428
                ],
                [
                  "test_train_no_covariates",
                  "test_from_json",
                  0.9606219411745415
                ],
                [
                  "test_from_json",
                  "test_from_config",
                  0.9667838548154761
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_train_no_covariates",
                "false"
              ],
              [
                "test_from_json",
                "false"
              ],
              [
                "test_from_config",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  }
]