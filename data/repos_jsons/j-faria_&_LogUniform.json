[
  {
    "name": "loguniform_\u0026_tests_\u0026_test_LogUniform.py",
    "testCases": [
      {
        "name": "test_constructor",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test4",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test1",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test2",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test3",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test4",
                  "[]"
                ],
                [
                  "test1",
                  "[]"
                ],
                [
                  "test2",
                  "[]"
                ],
                [
                  "test3",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test4",
                  "false"
                ],
                [
                  "test1",
                  "false"
                ],
                [
                  "test2",
                  "false"
                ],
                [
                  "test3",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test4",
                  "false"
                ],
                [
                  "test1",
                  "false"
                ],
                [
                  "test2",
                  "false"
                ],
                [
                  "test3",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test4",
                  "false"
                ],
                [
                  "test1",
                  "true"
                ],
                [
                  "test2",
                  "false"
                ],
                [
                  "test3",
                  "true"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test4",
                  "false"
                ],
                [
                  "test1",
                  "false"
                ],
                [
                  "test2",
                  "false"
                ],
                [
                  "test3",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test4",
                "false"
              ],
              [
                "test1",
                "false"
              ],
              [
                "test2",
                "false"
              ],
              [
                "test3",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test4",
                "false"
              ],
              [
                "test1",
                "false"
              ],
              [
                "test2",
                "false"
              ],
              [
                "test3",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test4",
                []
              ],
              [
                "test1",
                []
              ],
              [
                "test2",
                []
              ],
              [
                "test3",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test4",
                "false"
              ],
              [
                "test1",
                "false"
              ],
              [
                "test2",
                "false"
              ],
              [
                "test3",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test4",
                "true"
              ],
              [
                "test1",
                "false"
              ],
              [
                "test2",
                "false"
              ],
              [
                "test3",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test4",
                  "0"
                ],
                [
                  "test1",
                  "0"
                ],
                [
                  "test2",
                  "0"
                ],
                [
                  "test3",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test4",
                  "0"
                ],
                [
                  "test1",
                  "0"
                ],
                [
                  "test2",
                  "0"
                ],
                [
                  "test3",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test4",
                "false"
              ],
              [
                "test1",
                "false"
              ],
              [
                "test2",
                "false"
              ],
              [
                "test3",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test4",
                "false"
              ],
              [
                "test1",
                "false"
              ],
              [
                "test2",
                "false"
              ],
              [
                "test3",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test4",
                "4"
              ],
              [
                "test1",
                "2"
              ],
              [
                "test2",
                "1"
              ],
              [
                "test3",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test4",
                [
                  "d"
                ]
              ],
              [
                "test1",
                []
              ],
              [
                "test2",
                []
              ],
              [
                "test3",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test4",
                []
              ],
              [
                "test1",
                []
              ],
              [
                "test2",
                []
              ],
              [
                "test3",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.65526144376597,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test3",
                  "test4",
                  0.5226209567526089
                ],
                [
                  "test1",
                  "test4",
                  0.4329044892947799
                ],
                [
                  "test2",
                  "test4",
                  0.5114628069552573
                ],
                [
                  "test2",
                  "test3",
                  0.9707253433941511
                ],
                [
                  "test1",
                  "test2",
                  0.7504787743864565
                ],
                [
                  "test1",
                  "test3",
                  0.7433762918125657
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test4",
                "false"
              ],
              [
                "test1",
                "false"
              ],
              [
                "test2",
                "false"
              ],
              [
                "test3",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      },
      {
        "name": "test_methods",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_pdf",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertNotEqual, PyCallExpression: self.assertGreater, PyCallExpression: self.assertNotEqual, PyCallExpression: self.assertGreater]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_pdf",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_pdf",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_pdf",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_pdf",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_pdf",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_pdf",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_pdf",
                "true"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_pdf",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_pdf",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_pdf",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_pdf",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_pdf",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_pdf",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_pdf",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_pdf",
                "7"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_pdf",
                [
                  "a",
                  "b",
                  "d",
                  "x"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_pdf",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_pdf",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "loguniform_\u0026_tests_\u0026_test_ModifiedLogUniform.py",
    "testCases": [
      {
        "name": "test_constructor",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test3",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test4",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test2",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test1",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test3",
                  "[]"
                ],
                [
                  "test4",
                  "[]"
                ],
                [
                  "test2",
                  "[]"
                ],
                [
                  "test1",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test3",
                  "false"
                ],
                [
                  "test4",
                  "false"
                ],
                [
                  "test2",
                  "false"
                ],
                [
                  "test1",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test3",
                  "false"
                ],
                [
                  "test4",
                  "false"
                ],
                [
                  "test2",
                  "false"
                ],
                [
                  "test1",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test3",
                  "true"
                ],
                [
                  "test4",
                  "false"
                ],
                [
                  "test2",
                  "false"
                ],
                [
                  "test1",
                  "true"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test3",
                  "false"
                ],
                [
                  "test4",
                  "false"
                ],
                [
                  "test2",
                  "false"
                ],
                [
                  "test1",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test3",
                "false"
              ],
              [
                "test4",
                "false"
              ],
              [
                "test2",
                "false"
              ],
              [
                "test1",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test3",
                "false"
              ],
              [
                "test4",
                "false"
              ],
              [
                "test2",
                "false"
              ],
              [
                "test1",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test3",
                []
              ],
              [
                "test4",
                []
              ],
              [
                "test2",
                []
              ],
              [
                "test1",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test3",
                "false"
              ],
              [
                "test4",
                "false"
              ],
              [
                "test2",
                "false"
              ],
              [
                "test1",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test3",
                "false"
              ],
              [
                "test4",
                "true"
              ],
              [
                "test2",
                "false"
              ],
              [
                "test1",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test3",
                  "0"
                ],
                [
                  "test4",
                  "0"
                ],
                [
                  "test2",
                  "0"
                ],
                [
                  "test1",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test3",
                  "0"
                ],
                [
                  "test4",
                  "0"
                ],
                [
                  "test2",
                  "0"
                ],
                [
                  "test1",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test3",
                "false"
              ],
              [
                "test4",
                "false"
              ],
              [
                "test2",
                "false"
              ],
              [
                "test1",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test3",
                "false"
              ],
              [
                "test4",
                "false"
              ],
              [
                "test2",
                "false"
              ],
              [
                "test1",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test3",
                "2"
              ],
              [
                "test4",
                "4"
              ],
              [
                "test2",
                "1"
              ],
              [
                "test1",
                "3"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test3",
                []
              ],
              [
                "test4",
                [
                  "d"
                ]
              ],
              [
                "test2",
                []
              ],
              [
                "test1",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test3",
                []
              ],
              [
                "test4",
                []
              ],
              [
                "test2",
                []
              ],
              [
                "test1",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6429639562579209,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test2",
                  "test4",
                  0.5114628069552573
                ],
                [
                  "test1",
                  "test4",
                  0.42135048580019224
                ],
                [
                  "test2",
                  "test3",
                  0.9707253433941511
                ],
                [
                  "test3",
                  "test4",
                  0.5226209567526089
                ],
                [
                  "test1",
                  "test3",
                  0.7235359517703827
                ],
                [
                  "test1",
                  "test2",
                  0.7080881928749334
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test3",
                "false"
              ],
              [
                "test4",
                "false"
              ],
              [
                "test2",
                "false"
              ],
              [
                "test1",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      },
      {
        "name": "test_methods",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_pdf",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertNotEqual, PyCallExpression: self.assertGreater, PyCallExpression: self.assertGreater, PyCallExpression: self.assertEqual, PyCallExpression: self.assertNotEqual, PyCallExpression: self.assertGreater]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_pdf",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_pdf",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_pdf",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_pdf",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_pdf",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_pdf",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_pdf",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_pdf",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_pdf",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_pdf",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_pdf",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_pdf",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_pdf",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_pdf",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_pdf",
                "7"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_pdf",
                [
                  "d"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_pdf",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_pdf",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  }
]