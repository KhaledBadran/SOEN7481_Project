[
  {
    "name": "tests_\u0026_test_call.py",
    "testCases": [
      {
        "name": "TestEval",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_call_custom_encoder",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_call_js",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_call_custom_encoder",
                  "[]"
                ],
                [
                  "test_call_js",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_call_custom_encoder",
                  "true"
                ],
                [
                  "test_call_js",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_call_custom_encoder",
                  "false"
                ],
                [
                  "test_call_js",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_call_custom_encoder",
                  "false"
                ],
                [
                  "test_call_js",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_call_custom_encoder",
                  "false"
                ],
                [
                  "test_call_js",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_call_custom_encoder",
                "false"
              ],
              [
                "test_call_js",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_call_custom_encoder",
                "false"
              ],
              [
                "test_call_js",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_call_custom_encoder",
                []
              ],
              [
                "test_call_js",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_call_custom_encoder",
                "false"
              ],
              [
                "test_call_js",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_call_custom_encoder",
                "false"
              ],
              [
                "test_call_js",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_call_custom_encoder",
                  "0"
                ],
                [
                  "test_call_js",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_call_custom_encoder",
                  "0"
                ],
                [
                  "test_call_js",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_call_custom_encoder",
                "false"
              ],
              [
                "test_call_js",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_call_custom_encoder",
                "false"
              ],
              [
                "test_call_js",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_call_custom_encoder",
                "1"
              ],
              [
                "test_call_js",
                "3"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_call_custom_encoder",
                [
                  "js_func",
                  "now"
                ]
              ],
              [
                "test_call_js",
                [
                  "js_func"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_call_custom_encoder",
                [
                  "self.mr"
                ]
              ],
              [
                "test_call_js",
                [
                  "self.mr"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4367957869511416,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_call_js",
                  "test_call_custom_encoder",
                  0.4367957869511416
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_call_custom_encoder",
                "false"
              ],
              [
                "test_call_js",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_eval.py",
    "testCases": [
      {
        "name": "Test",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_global",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_max_memory_hard",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_invalid",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_timeout",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_multiple_ctx",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_fun",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_exception_thrown",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_max_memory_soft",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_cannot_parse",
                  "[]"
                ],
                [
                  "test_symbol",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_null_byte",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_global",
                  "[]"
                ],
                [
                  "test_max_memory_hard",
                  "[]"
                ],
                [
                  "test_invalid",
                  "[]"
                ],
                [
                  "test_timeout",
                  "[PyAssertStatement]"
                ],
                [
                  "test_multiple_ctx",
                  "[]"
                ],
                [
                  "test_fun",
                  "[]"
                ],
                [
                  "test_exception_thrown",
                  "[]"
                ],
                [
                  "test_max_memory_soft",
                  "[]"
                ],
                [
                  "test_cannot_parse",
                  "[]"
                ],
                [
                  "test_symbol",
                  "[]"
                ],
                [
                  "test_null_byte",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_global",
                  "false"
                ],
                [
                  "test_max_memory_hard",
                  "false"
                ],
                [
                  "test_invalid",
                  "false"
                ],
                [
                  "test_timeout",
                  "false"
                ],
                [
                  "test_multiple_ctx",
                  "false"
                ],
                [
                  "test_fun",
                  "false"
                ],
                [
                  "test_exception_thrown",
                  "false"
                ],
                [
                  "test_max_memory_soft",
                  "false"
                ],
                [
                  "test_cannot_parse",
                  "false"
                ],
                [
                  "test_symbol",
                  "false"
                ],
                [
                  "test_null_byte",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_global",
                  "false"
                ],
                [
                  "test_max_memory_hard",
                  "false"
                ],
                [
                  "test_invalid",
                  "false"
                ],
                [
                  "test_timeout",
                  "false"
                ],
                [
                  "test_multiple_ctx",
                  "false"
                ],
                [
                  "test_fun",
                  "false"
                ],
                [
                  "test_exception_thrown",
                  "false"
                ],
                [
                  "test_max_memory_soft",
                  "false"
                ],
                [
                  "test_cannot_parse",
                  "false"
                ],
                [
                  "test_symbol",
                  "false"
                ],
                [
                  "test_null_byte",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_global",
                  "false"
                ],
                [
                  "test_max_memory_hard",
                  "false"
                ],
                [
                  "test_invalid",
                  "false"
                ],
                [
                  "test_timeout",
                  "false"
                ],
                [
                  "test_multiple_ctx",
                  "false"
                ],
                [
                  "test_fun",
                  "false"
                ],
                [
                  "test_exception_thrown",
                  "false"
                ],
                [
                  "test_max_memory_soft",
                  "false"
                ],
                [
                  "test_cannot_parse",
                  "false"
                ],
                [
                  "test_symbol",
                  "false"
                ],
                [
                  "test_null_byte",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_global",
                  "false"
                ],
                [
                  "test_max_memory_hard",
                  "false"
                ],
                [
                  "test_invalid",
                  "false"
                ],
                [
                  "test_timeout",
                  "false"
                ],
                [
                  "test_multiple_ctx",
                  "false"
                ],
                [
                  "test_fun",
                  "false"
                ],
                [
                  "test_exception_thrown",
                  "false"
                ],
                [
                  "test_max_memory_soft",
                  "false"
                ],
                [
                  "test_cannot_parse",
                  "false"
                ],
                [
                  "test_symbol",
                  "false"
                ],
                [
                  "test_null_byte",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_global",
                "false"
              ],
              [
                "test_max_memory_hard",
                "false"
              ],
              [
                "test_invalid",
                "false"
              ],
              [
                "test_timeout",
                "false"
              ],
              [
                "test_multiple_ctx",
                "false"
              ],
              [
                "test_fun",
                "false"
              ],
              [
                "test_exception_thrown",
                "false"
              ],
              [
                "test_max_memory_soft",
                "false"
              ],
              [
                "test_cannot_parse",
                "false"
              ],
              [
                "test_symbol",
                "false"
              ],
              [
                "test_null_byte",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_global",
                "false"
              ],
              [
                "test_max_memory_hard",
                "false"
              ],
              [
                "test_invalid",
                "false"
              ],
              [
                "test_timeout",
                "false"
              ],
              [
                "test_multiple_ctx",
                "false"
              ],
              [
                "test_fun",
                "false"
              ],
              [
                "test_exception_thrown",
                "false"
              ],
              [
                "test_max_memory_soft",
                "false"
              ],
              [
                "test_cannot_parse",
                "false"
              ],
              [
                "test_symbol",
                "false"
              ],
              [
                "test_null_byte",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_global",
                []
              ],
              [
                "test_max_memory_hard",
                []
              ],
              [
                "test_invalid",
                []
              ],
              [
                "test_timeout",
                []
              ],
              [
                "test_multiple_ctx",
                [
                  "self.mr"
                ]
              ],
              [
                "test_fun",
                []
              ],
              [
                "test_exception_thrown",
                [
                  "self.mr"
                ]
              ],
              [
                "test_max_memory_soft",
                []
              ],
              [
                "test_cannot_parse",
                [
                  "self.mr"
                ]
              ],
              [
                "test_symbol",
                []
              ],
              [
                "test_null_byte",
                [
                  "self.mr"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_global",
                "false"
              ],
              [
                "test_max_memory_hard",
                "false"
              ],
              [
                "test_invalid",
                "false"
              ],
              [
                "test_timeout",
                "false"
              ],
              [
                "test_multiple_ctx",
                "false"
              ],
              [
                "test_fun",
                "false"
              ],
              [
                "test_exception_thrown",
                "false"
              ],
              [
                "test_max_memory_soft",
                "false"
              ],
              [
                "test_cannot_parse",
                "false"
              ],
              [
                "test_symbol",
                "false"
              ],
              [
                "test_null_byte",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_global",
                "true"
              ],
              [
                "test_max_memory_hard",
                "false"
              ],
              [
                "test_invalid",
                "false"
              ],
              [
                "test_timeout",
                "false"
              ],
              [
                "test_multiple_ctx",
                "true"
              ],
              [
                "test_fun",
                "true"
              ],
              [
                "test_exception_thrown",
                "false"
              ],
              [
                "test_max_memory_soft",
                "false"
              ],
              [
                "test_cannot_parse",
                "false"
              ],
              [
                "test_symbol",
                "false"
              ],
              [
                "test_null_byte",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_global",
                  "0"
                ],
                [
                  "test_max_memory_hard",
                  "0"
                ],
                [
                  "test_invalid",
                  "0"
                ],
                [
                  "test_timeout",
                  "0"
                ],
                [
                  "test_multiple_ctx",
                  "0"
                ],
                [
                  "test_fun",
                  "0"
                ],
                [
                  "test_exception_thrown",
                  "0"
                ],
                [
                  "test_max_memory_soft",
                  "0"
                ],
                [
                  "test_cannot_parse",
                  "0"
                ],
                [
                  "test_symbol",
                  "0"
                ],
                [
                  "test_null_byte",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_global",
                  "0"
                ],
                [
                  "test_max_memory_hard",
                  "0"
                ],
                [
                  "test_invalid",
                  "0"
                ],
                [
                  "test_timeout",
                  "0"
                ],
                [
                  "test_multiple_ctx",
                  "0"
                ],
                [
                  "test_fun",
                  "0"
                ],
                [
                  "test_exception_thrown",
                  "0"
                ],
                [
                  "test_max_memory_soft",
                  "0"
                ],
                [
                  "test_cannot_parse",
                  "0"
                ],
                [
                  "test_symbol",
                  "0"
                ],
                [
                  "test_null_byte",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_global",
                "false"
              ],
              [
                "test_max_memory_hard",
                "false"
              ],
              [
                "test_invalid",
                "false"
              ],
              [
                "test_timeout",
                "false"
              ],
              [
                "test_multiple_ctx",
                "false"
              ],
              [
                "test_fun",
                "false"
              ],
              [
                "test_exception_thrown",
                "false"
              ],
              [
                "test_max_memory_soft",
                "false"
              ],
              [
                "test_cannot_parse",
                "false"
              ],
              [
                "test_symbol",
                "false"
              ],
              [
                "test_null_byte",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_global",
                "false"
              ],
              [
                "test_max_memory_hard",
                "false"
              ],
              [
                "test_invalid",
                "false"
              ],
              [
                "test_timeout",
                "false"
              ],
              [
                "test_multiple_ctx",
                "false"
              ],
              [
                "test_fun",
                "false"
              ],
              [
                "test_exception_thrown",
                "false"
              ],
              [
                "test_max_memory_soft",
                "false"
              ],
              [
                "test_cannot_parse",
                "false"
              ],
              [
                "test_symbol",
                "false"
              ],
              [
                "test_null_byte",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_global",
                "1"
              ],
              [
                "test_max_memory_hard",
                "1"
              ],
              [
                "test_invalid",
                "1"
              ],
              [
                "test_timeout",
                "2"
              ],
              [
                "test_multiple_ctx",
                "3"
              ],
              [
                "test_fun",
                "3"
              ],
              [
                "test_exception_thrown",
                "1"
              ],
              [
                "test_max_memory_soft",
                "2"
              ],
              [
                "test_cannot_parse",
                "1"
              ],
              [
                "test_symbol",
                "1"
              ],
              [
                "test_null_byte",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_global",
                []
              ],
              [
                "test_max_memory_hard",
                []
              ],
              [
                "test_invalid",
                []
              ],
              [
                "test_timeout",
                [
                  "duration",
                  "start_time",
                  "timeout_ms"
                ]
              ],
              [
                "test_multiple_ctx",
                [
                  "c3",
                  "c1",
                  "c2"
                ]
              ],
              [
                "test_fun",
                [
                  "res"
                ]
              ],
              [
                "test_exception_thrown",
                [
                  "context",
                  "js_source"
                ]
              ],
              [
                "test_max_memory_soft",
                []
              ],
              [
                "test_cannot_parse",
                [
                  "context",
                  "js_source"
                ]
              ],
              [
                "test_symbol",
                [
                  "res"
                ]
              ],
              [
                "test_null_byte",
                [
                  "in_val",
                  "result",
                  "s",
                  "context"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_global",
                [
                  "self.mr"
                ]
              ],
              [
                "test_max_memory_hard",
                [
                  "self.mr"
                ]
              ],
              [
                "test_invalid",
                [
                  "self.mr"
                ]
              ],
              [
                "test_timeout",
                [
                  "self.mr"
                ]
              ],
              [
                "test_multiple_ctx",
                []
              ],
              [
                "test_fun",
                [
                  "self.mr"
                ]
              ],
              [
                "test_exception_thrown",
                []
              ],
              [
                "test_max_memory_soft",
                [
                  "self.mr"
                ]
              ],
              [
                "test_cannot_parse",
                []
              ],
              [
                "test_symbol",
                [
                  "self.mr"
                ]
              ],
              [
                "test_null_byte",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.35934582092496037,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_max_memory_soft",
                  "test_max_memory_hard",
                  0.9179284245476836
                ],
                [
                  "test_invalid",
                  "test_fun",
                  0.18791150700070725
                ],
                [
                  "test_null_byte",
                  "test_max_memory_hard",
                  0.5188745216627708
                ],
                [
                  "test_global",
                  "test_exception_thrown",
                  0.2526455763199557
                ],
                [
                  "test_fun",
                  "test_multiple_ctx",
                  0.20121211421499824
                ],
                [
                  "test_cannot_parse",
                  "test_null_byte",
                  0.475760826760042
                ],
                [
                  "test_null_byte",
                  "test_symbol",
                  0.35082320772281167
                ],
                [
                  "test_exception_thrown",
                  "test_max_memory_hard",
                  0.3660490330955575
                ],
                [
                  "test_max_memory_soft",
                  "test_symbol",
                  0.23870495801314426
                ],
                [
                  "test_global",
                  "test_max_memory_hard",
                  0.34646743359179166
                ],
                [
                  "test_fun",
                  "test_timeout",
                  0.15095427775864667
                ],
                [
                  "test_fun",
                  "test_symbol",
                  0.2689170581811257
                ],
                [
                  "test_cannot_parse",
                  "test_max_memory_soft",
                  0.3034821003038457
                ],
                [
                  "test_fun",
                  "test_cannot_parse",
                  0.13675713199027156
                ],
                [
                  "test_fun",
                  "test_max_memory_soft",
                  0.19257550524643166
                ],
                [
                  "test_multiple_ctx",
                  "test_max_memory_hard",
                  0.4994107246037418
                ],
                [
                  "test_timeout",
                  "test_max_memory_soft",
                  0.42878392055010317
                ],
                [
                  "test_global",
                  "test_multiple_ctx",
                  0.3431991115272901
                ],
                [
                  "test_multiple_ctx",
                  "test_exception_thrown",
                  0.4595510078188375
                ],
                [
                  "test_invalid",
                  "test_max_memory_hard",
                  0.25197631533948484
                ],
                [
                  "test_fun",
                  "test_exception_thrown",
                  0.2088900483267183
                ],
                [
                  "test_exception_thrown",
                  "test_null_byte",
                  0.49547873987628815
                ],
                [
                  "test_invalid",
                  "test_multiple_ctx",
                  0.2402393780691031
                ],
                [
                  "test_exception_thrown",
                  "test_timeout",
                  0.3382614429439245
                ],
                [
                  "test_exception_thrown",
                  "test_cannot_parse",
                  0.7278144450826871
                ],
                [
                  "test_invalid",
                  "test_exception_thrown",
                  0.5895063447465633
                ],
                [
                  "test_fun",
                  "test_max_memory_hard",
                  0.18466207166131926
                ],
                [
                  "test_global",
                  "test_fun",
                  0.5261522196019803
                ],
                [
                  "test_global",
                  "test_symbol",
                  0.29814239699997197
                ],
                [
                  "test_exception_thrown",
                  "test_max_memory_soft",
                  0.3236453576250939
                ],
                [
                  "test_invalid",
                  "test_symbol",
                  0.447213595499958
                ],
                [
                  "test_invalid",
                  "test_global",
                  0.25000000000000006
                ],
                [
                  "test_invalid",
                  "test_max_memory_soft",
                  0.24019223070763068
                ],
                [
                  "test_multiple_ctx",
                  "test_cannot_parse",
                  0.4839321495127531
                ],
                [
                  "test_multiple_ctx",
                  "test_timeout",
                  0.44488101840150646
                ],
                [
                  "test_cannot_parse",
                  "test_max_memory_hard",
                  0.3438409530367517
                ],
                [
                  "test_multiple_ctx",
                  "test_max_memory_soft",
                  0.5055937290709827
                ],
                [
                  "test_timeout",
                  "test_max_memory_hard",
                  0.43704152091682436
                ],
                [
                  "test_fun",
                  "test_null_byte",
                  0.22111487100582305
                ],
                [
                  "test_max_memory_hard",
                  "test_symbol",
                  0.253546276418555
                ],
                [
                  "test_global",
                  "test_null_byte",
                  0.3268602252303067
                ],
                [
                  "test_multiple_ctx",
                  "test_symbol",
                  0.35301160986857405
                ],
                [
                  "test_cannot_parse",
                  "test_symbol",
                  0.4746444525345672
                ],
                [
                  "test_timeout",
                  "test_symbol",
                  0.2449489742783178
                ],
                [
                  "test_exception_thrown",
                  "test_symbol",
                  0.5272705040082966
                ],
                [
                  "test_cannot_parse",
                  "test_timeout",
                  0.3183410061060032
                ],
                [
                  "test_null_byte",
                  "test_timeout",
                  0.36999268492037357
                ],
                [
                  "test_global",
                  "test_timeout",
                  0.3042903097250923
                ],
                [
                  "test_null_byte",
                  "test_max_memory_soft",
                  0.4710557197659957
                ],
                [
                  "test_invalid",
                  "test_null_byte",
                  0.19611613513818402
                ],
                [
                  "test_invalid",
                  "test_timeout",
                  0.2738612787525831
                ],
                [
                  "test_global",
                  "test_cannot_parse",
                  0.227429413073671
                ],
                [
                  "test_invalid",
                  "test_cannot_parse",
                  0.3790490217894517
                ],
                [
                  "test_global",
                  "test_max_memory_soft",
                  0.3469443332443554
                ],
                [
                  "test_multiple_ctx",
                  "test_null_byte",
                  0.49807093668337127
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_global",
                "false"
              ],
              [
                "test_max_memory_hard",
                "false"
              ],
              [
                "test_invalid",
                "false"
              ],
              [
                "test_timeout",
                "false"
              ],
              [
                "test_multiple_ctx",
                "false"
              ],
              [
                "test_fun",
                "false"
              ],
              [
                "test_exception_thrown",
                "false"
              ],
              [
                "test_max_memory_soft",
                "true"
              ],
              [
                "test_cannot_parse",
                "false"
              ],
              [
                "test_symbol",
                "false"
              ],
              [
                "test_null_byte",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 11
      }
    ]
  },
  {
    "name": "tests_\u0026_test_babel.py",
    "testCases": [
      {
        "name": "Test",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_babel",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_babel",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_babel",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_babel",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_babel",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_babel",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_babel",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_babel",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_babel",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_babel",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_babel",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_babel",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_babel",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_babel",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_babel",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_babel",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_babel",
                [
                  "path",
                  "babel_source",
                  "context",
                  "source"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_babel",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_babel",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_types.py",
    "testCases": [
      {
        "name": "Test",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_numbers",
                  "[]"
                ],
                [
                  "test_unicode",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_function",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_date",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_exception",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertIn]"
                ],
                [
                  "test_invalid_key",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_arrays",
                  "[]"
                ],
                [
                  "test_hash",
                  "[]"
                ],
                [
                  "test_complex",
                  "[]"
                ],
                [
                  "test_timestamp",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_str",
                  "[]"
                ],
                [
                  "test_none",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_numbers",
                  "[]"
                ],
                [
                  "test_unicode",
                  "[]"
                ],
                [
                  "test_function",
                  "[]"
                ],
                [
                  "test_date",
                  "[]"
                ],
                [
                  "test_exception",
                  "[]"
                ],
                [
                  "test_invalid_key",
                  "[]"
                ],
                [
                  "test_arrays",
                  "[]"
                ],
                [
                  "test_hash",
                  "[]"
                ],
                [
                  "test_complex",
                  "[]"
                ],
                [
                  "test_timestamp",
                  "[]"
                ],
                [
                  "test_str",
                  "[]"
                ],
                [
                  "test_none",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_numbers",
                  "false"
                ],
                [
                  "test_unicode",
                  "false"
                ],
                [
                  "test_function",
                  "false"
                ],
                [
                  "test_date",
                  "false"
                ],
                [
                  "test_exception",
                  "false"
                ],
                [
                  "test_invalid_key",
                  "false"
                ],
                [
                  "test_arrays",
                  "false"
                ],
                [
                  "test_hash",
                  "false"
                ],
                [
                  "test_complex",
                  "false"
                ],
                [
                  "test_timestamp",
                  "false"
                ],
                [
                  "test_str",
                  "false"
                ],
                [
                  "test_none",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_numbers",
                  "false"
                ],
                [
                  "test_unicode",
                  "false"
                ],
                [
                  "test_function",
                  "false"
                ],
                [
                  "test_date",
                  "false"
                ],
                [
                  "test_exception",
                  "false"
                ],
                [
                  "test_invalid_key",
                  "false"
                ],
                [
                  "test_arrays",
                  "false"
                ],
                [
                  "test_hash",
                  "false"
                ],
                [
                  "test_complex",
                  "false"
                ],
                [
                  "test_timestamp",
                  "false"
                ],
                [
                  "test_str",
                  "false"
                ],
                [
                  "test_none",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_numbers",
                  "false"
                ],
                [
                  "test_unicode",
                  "false"
                ],
                [
                  "test_function",
                  "false"
                ],
                [
                  "test_date",
                  "false"
                ],
                [
                  "test_exception",
                  "false"
                ],
                [
                  "test_invalid_key",
                  "false"
                ],
                [
                  "test_arrays",
                  "false"
                ],
                [
                  "test_hash",
                  "false"
                ],
                [
                  "test_complex",
                  "false"
                ],
                [
                  "test_timestamp",
                  "false"
                ],
                [
                  "test_str",
                  "false"
                ],
                [
                  "test_none",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_numbers",
                  "false"
                ],
                [
                  "test_unicode",
                  "false"
                ],
                [
                  "test_function",
                  "false"
                ],
                [
                  "test_date",
                  "false"
                ],
                [
                  "test_exception",
                  "false"
                ],
                [
                  "test_invalid_key",
                  "false"
                ],
                [
                  "test_arrays",
                  "false"
                ],
                [
                  "test_hash",
                  "false"
                ],
                [
                  "test_complex",
                  "false"
                ],
                [
                  "test_timestamp",
                  "false"
                ],
                [
                  "test_str",
                  "false"
                ],
                [
                  "test_none",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_numbers",
                "false"
              ],
              [
                "test_unicode",
                "false"
              ],
              [
                "test_function",
                "false"
              ],
              [
                "test_date",
                "false"
              ],
              [
                "test_exception",
                "false"
              ],
              [
                "test_invalid_key",
                "false"
              ],
              [
                "test_arrays",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test_complex",
                "false"
              ],
              [
                "test_timestamp",
                "false"
              ],
              [
                "test_str",
                "false"
              ],
              [
                "test_none",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_numbers",
                "false"
              ],
              [
                "test_unicode",
                "false"
              ],
              [
                "test_function",
                "false"
              ],
              [
                "test_date",
                "false"
              ],
              [
                "test_exception",
                "false"
              ],
              [
                "test_invalid_key",
                "false"
              ],
              [
                "test_arrays",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test_complex",
                "false"
              ],
              [
                "test_timestamp",
                "false"
              ],
              [
                "test_str",
                "false"
              ],
              [
                "test_none",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_numbers",
                [
                  "self.mr"
                ]
              ],
              [
                "test_unicode",
                []
              ],
              [
                "test_function",
                []
              ],
              [
                "test_date",
                []
              ],
              [
                "test_exception",
                []
              ],
              [
                "test_invalid_key",
                []
              ],
              [
                "test_arrays",
                [
                  "self.mr"
                ]
              ],
              [
                "test_hash",
                [
                  "self.mr"
                ]
              ],
              [
                "test_complex",
                [
                  "self.mr"
                ]
              ],
              [
                "test_timestamp",
                []
              ],
              [
                "test_str",
                [
                  "self.mr"
                ]
              ],
              [
                "test_none",
                [
                  "self.mr"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_numbers",
                "false"
              ],
              [
                "test_unicode",
                "false"
              ],
              [
                "test_function",
                "false"
              ],
              [
                "test_date",
                "false"
              ],
              [
                "test_exception",
                "false"
              ],
              [
                "test_invalid_key",
                "false"
              ],
              [
                "test_arrays",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test_complex",
                "false"
              ],
              [
                "test_timestamp",
                "false"
              ],
              [
                "test_str",
                "false"
              ],
              [
                "test_none",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_numbers",
                "false"
              ],
              [
                "test_unicode",
                "false"
              ],
              [
                "test_function",
                "false"
              ],
              [
                "test_date",
                "false"
              ],
              [
                "test_exception",
                "false"
              ],
              [
                "test_invalid_key",
                "false"
              ],
              [
                "test_arrays",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test_complex",
                "false"
              ],
              [
                "test_timestamp",
                "false"
              ],
              [
                "test_str",
                "false"
              ],
              [
                "test_none",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_numbers",
                  "0"
                ],
                [
                  "test_unicode",
                  "0"
                ],
                [
                  "test_function",
                  "0"
                ],
                [
                  "test_date",
                  "0"
                ],
                [
                  "test_exception",
                  "0"
                ],
                [
                  "test_invalid_key",
                  "0"
                ],
                [
                  "test_arrays",
                  "0"
                ],
                [
                  "test_hash",
                  "0"
                ],
                [
                  "test_complex",
                  "0"
                ],
                [
                  "test_timestamp",
                  "0"
                ],
                [
                  "test_str",
                  "0"
                ],
                [
                  "test_none",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_numbers",
                  "0"
                ],
                [
                  "test_unicode",
                  "0"
                ],
                [
                  "test_function",
                  "0"
                ],
                [
                  "test_date",
                  "0"
                ],
                [
                  "test_exception",
                  "0"
                ],
                [
                  "test_invalid_key",
                  "0"
                ],
                [
                  "test_arrays",
                  "0"
                ],
                [
                  "test_hash",
                  "0"
                ],
                [
                  "test_complex",
                  "0"
                ],
                [
                  "test_timestamp",
                  "0"
                ],
                [
                  "test_str",
                  "0"
                ],
                [
                  "test_none",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_numbers",
                "false"
              ],
              [
                "test_unicode",
                "false"
              ],
              [
                "test_function",
                "false"
              ],
              [
                "test_date",
                "false"
              ],
              [
                "test_exception",
                "false"
              ],
              [
                "test_invalid_key",
                "false"
              ],
              [
                "test_arrays",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test_complex",
                "false"
              ],
              [
                "test_timestamp",
                "false"
              ],
              [
                "test_str",
                "false"
              ],
              [
                "test_none",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_numbers",
                "false"
              ],
              [
                "test_unicode",
                "false"
              ],
              [
                "test_function",
                "false"
              ],
              [
                "test_date",
                "false"
              ],
              [
                "test_exception",
                "false"
              ],
              [
                "test_invalid_key",
                "false"
              ],
              [
                "test_arrays",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test_complex",
                "false"
              ],
              [
                "test_timestamp",
                "false"
              ],
              [
                "test_str",
                "false"
              ],
              [
                "test_none",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_numbers",
                "0"
              ],
              [
                "test_unicode",
                "1"
              ],
              [
                "test_function",
                "1"
              ],
              [
                "test_date",
                "1"
              ],
              [
                "test_exception",
                "2"
              ],
              [
                "test_invalid_key",
                "1"
              ],
              [
                "test_arrays",
                "0"
              ],
              [
                "test_hash",
                "0"
              ],
              [
                "test_complex",
                "0"
              ],
              [
                "test_timestamp",
                "1"
              ],
              [
                "test_str",
                "0"
              ],
              [
                "test_none",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_numbers",
                []
              ],
              [
                "test_unicode",
                [
                  "res",
                  "ustr"
                ]
              ],
              [
                "test_function",
                [
                  "res"
                ]
              ],
              [
                "test_date",
                [
                  "res"
                ]
              ],
              [
                "test_exception",
                [
                  "js_source"
                ]
              ],
              [
                "test_invalid_key",
                [
                  "fun"
                ]
              ],
              [
                "test_arrays",
                []
              ],
              [
                "test_hash",
                []
              ],
              [
                "test_complex",
                []
              ],
              [
                "test_timestamp",
                [
                  "val",
                  "res"
                ]
              ],
              [
                "test_str",
                []
              ],
              [
                "test_none",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_numbers",
                []
              ],
              [
                "test_unicode",
                [
                  "self.mr"
                ]
              ],
              [
                "test_function",
                [
                  "self.mr"
                ]
              ],
              [
                "test_date",
                [
                  "self.mr"
                ]
              ],
              [
                "test_exception",
                [
                  "self.mr"
                ]
              ],
              [
                "test_invalid_key",
                [
                  "self.mr"
                ]
              ],
              [
                "test_arrays",
                []
              ],
              [
                "test_hash",
                []
              ],
              [
                "test_complex",
                []
              ],
              [
                "test_timestamp",
                [
                  "self.mr"
                ]
              ],
              [
                "test_str",
                []
              ],
              [
                "test_none",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.2250803024936397,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_numbers",
                  "test_timestamp",
                  0.03724840446384682
                ],
                [
                  "test_str",
                  "test_unicode",
                  0.20100756305184242
                ],
                [
                  "test_hash",
                  "test_timestamp",
                  0.2073903389460851
                ],
                [
                  "test_numbers",
                  "test_none",
                  0.37099111660813455
                ],
                [
                  "test_none",
                  "test_complex",
                  0.06704015231539909
                ],
                [
                  "test_function",
                  "test_date",
                  0.13300169865599867
                ],
                [
                  "test_complex",
                  "test_timestamp",
                  0.2961637038376289
                ],
                [
                  "test_arrays",
                  "test_none",
                  0.11359236684941296
                ],
                [
                  "test_arrays",
                  "test_timestamp",
                  0.2737187540076958
                ],
                [
                  "test_str",
                  "test_complex",
                  0.04519846147055687
                ],
                [
                  "test_str",
                  "test_date",
                  0.03884410610895813
                ],
                [
                  "test_unicode",
                  "test_function",
                  0.30588764516074896
                ],
                [
                  "test_arrays",
                  "test_hash",
                  0.2566324512873683
                ],
                [
                  "test_str",
                  "test_function",
                  0.13834289277321493
                ],
                [
                  "test_unicode",
                  "test_complex",
                  0.3997502341311261
                ],
                [
                  "test_none",
                  "test_timestamp",
                  0.16064386578049977
                ],
                [
                  "test_function",
                  "test_exception",
                  0.4150286783196448
                ],
                [
                  "test_str",
                  "test_invalid_key",
                  0.09417632186960222
                ],
                [
                  "test_invalid_key",
                  "test_date",
                  0.2917410544124243
                ],
                [
                  "test_hash",
                  "test_complex",
                  0.28128250956514506
                ],
                [
                  "test_unicode",
                  "test_date",
                  0.44017369470723444
                ],
                [
                  "test_numbers",
                  "test_hash",
                  0.05986843400892498
                ],
                [
                  "test_numbers",
                  "test_invalid_key",
                  0.032388929412563196
                ],
                [
                  "test_none",
                  "test_function",
                  0.2051956704170308
                ],
                [
                  "test_str",
                  "test_arrays",
                  0.07658395810674835
                ],
                [
                  "test_complex",
                  "test_exception",
                  0.16949423051458823
                ],
                [
                  "test_arrays",
                  "test_invalid_key",
                  0.23800905112740578
                ],
                [
                  "test_none",
                  "test_date",
                  0.05761512019156774
                ],
                [
                  "test_str",
                  "test_exception",
                  0.09090909090909091
                ],
                [
                  "test_hash",
                  "test_function",
                  0.13245323570650439
                ],
                [
                  "test_unicode",
                  "test_hash",
                  0.24056261216234406
                ],
                [
                  "test_numbers",
                  "test_date",
                  0.013359186108363499
                ],
                [
                  "test_str",
                  "test_none",
                  0.26967994498529685
                ],
                [
                  "test_complex",
                  "test_invalid_key",
                  0.292642958813011
                ],
                [
                  "test_function",
                  "test_timestamp",
                  0.45324710388668105
                ],
                [
                  "test_str",
                  "test_timestamp",
                  0.10830607221477646
                ],
                [
                  "test_hash",
                  "test_date",
                  0.2417376010743206
                ],
                [
                  "test_arrays",
                  "test_complex",
                  0.7234487096678769
                ],
                [
                  "test_arrays",
                  "test_exception",
                  0.1723139057401838
                ],
                [
                  "test_complex",
                  "test_date",
                  0.8304431831622362
                ],
                [
                  "test_none",
                  "test_hash",
                  0.2581988897471611
                ],
                [
                  "test_timestamp",
                  "test_date",
                  0.42806759811789763
                ],
                [
                  "test_str",
                  "test_numbers",
                  0.06253053994807224
                ],
                [
                  "test_unicode",
                  "test_none",
                  0.14907119849998599
                ],
                [
                  "test_unicode",
                  "test_timestamp",
                  0.4789474720713998
                ],
                [
                  "test_numbers",
                  "test_exception",
                  0.03126526997403612
                ],
                [
                  "test_numbers",
                  "test_arrays",
                  0.026338599384765356
                ],
                [
                  "test_hash",
                  "test_exception",
                  0.13055824196677338
                ],
                [
                  "test_complex",
                  "test_function",
                  0.03439087249804544
                ],
                [
                  "test_unicode",
                  "test_arrays",
                  0.35983369316720637
                ],
                [
                  "test_none",
                  "test_exception",
                  0.13483997249264842
                ],
                [
                  "test_numbers",
                  "test_complex",
                  0.01554456310316833
                ],
                [
                  "test_invalid_key",
                  "test_timestamp",
                  0.36464526374458933
                ],
                [
                  "test_date",
                  "test_exception",
                  0.18450950401755115
                ],
                [
                  "test_function",
                  "test_invalid_key",
                  0.3582871819500093
                ],
                [
                  "test_unicode",
                  "test_numbers",
                  0.03456505649101418
                ],
                [
                  "test_hash",
                  "test_invalid_key",
                  0.1803339269334865
                ],
                [
                  "test_unicode",
                  "test_invalid_key",
                  0.3383764840919798
                ],
                [
                  "test_arrays",
                  "test_date",
                  0.7935373416009219
                ],
                [
                  "test_str",
                  "test_hash",
                  0.17407765595569785
                ],
                [
                  "test_unicode",
                  "test_exception",
                  0.2763853991962833
                ],
                [
                  "test_arrays",
                  "test_function",
                  0.058271654674806495
                ],
                [
                  "test_invalid_key",
                  "test_exception",
                  0.49442568981541163
                ],
                [
                  "test_numbers",
                  "test_function",
                  0.047578606806980644
                ],
                [
                  "test_none",
                  "test_invalid_key",
                  0.13968605915391563
                ],
                [
                  "test_timestamp",
                  "test_exception",
                  0.3249182166443294
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_numbers",
                "false"
              ],
              [
                "test_unicode",
                "false"
              ],
              [
                "test_function",
                "false"
              ],
              [
                "test_date",
                "false"
              ],
              [
                "test_exception",
                "false"
              ],
              [
                "test_invalid_key",
                "false"
              ],
              [
                "test_arrays",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test_complex",
                "false"
              ],
              [
                "test_timestamp",
                "false"
              ],
              [
                "test_str",
                "false"
              ],
              [
                "test_none",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 12
      }
    ]
  },
  {
    "name": "tests_\u0026_test_strict.py",
    "testCases": [
      {
        "name": "StrictTestCase",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_basic_string",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_basic_int",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_not_allowed_type",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_message",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_call",
                  "[PyCallExpression: self.assertIsNone, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_basic_array",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_basic_hash",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_basic_string",
                  "[]"
                ],
                [
                  "test_basic_int",
                  "[]"
                ],
                [
                  "test_not_allowed_type",
                  "[]"
                ],
                [
                  "test_message",
                  "[]"
                ],
                [
                  "test_call",
                  "[]"
                ],
                [
                  "test_basic_array",
                  "[]"
                ],
                [
                  "test_basic_hash",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_basic_string",
                  "false"
                ],
                [
                  "test_basic_int",
                  "false"
                ],
                [
                  "test_not_allowed_type",
                  "false"
                ],
                [
                  "test_message",
                  "false"
                ],
                [
                  "test_call",
                  "false"
                ],
                [
                  "test_basic_array",
                  "false"
                ],
                [
                  "test_basic_hash",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_basic_string",
                  "false"
                ],
                [
                  "test_basic_int",
                  "false"
                ],
                [
                  "test_not_allowed_type",
                  "false"
                ],
                [
                  "test_message",
                  "false"
                ],
                [
                  "test_call",
                  "false"
                ],
                [
                  "test_basic_array",
                  "false"
                ],
                [
                  "test_basic_hash",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_basic_string",
                  "false"
                ],
                [
                  "test_basic_int",
                  "false"
                ],
                [
                  "test_not_allowed_type",
                  "false"
                ],
                [
                  "test_message",
                  "false"
                ],
                [
                  "test_call",
                  "false"
                ],
                [
                  "test_basic_array",
                  "false"
                ],
                [
                  "test_basic_hash",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_basic_string",
                  "false"
                ],
                [
                  "test_basic_int",
                  "false"
                ],
                [
                  "test_not_allowed_type",
                  "false"
                ],
                [
                  "test_message",
                  "false"
                ],
                [
                  "test_call",
                  "false"
                ],
                [
                  "test_basic_array",
                  "false"
                ],
                [
                  "test_basic_hash",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_basic_string",
                "false"
              ],
              [
                "test_basic_int",
                "false"
              ],
              [
                "test_not_allowed_type",
                "false"
              ],
              [
                "test_message",
                "false"
              ],
              [
                "test_call",
                "false"
              ],
              [
                "test_basic_array",
                "false"
              ],
              [
                "test_basic_hash",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_basic_string",
                "false"
              ],
              [
                "test_basic_int",
                "false"
              ],
              [
                "test_not_allowed_type",
                "false"
              ],
              [
                "test_message",
                "false"
              ],
              [
                "test_call",
                "false"
              ],
              [
                "test_basic_array",
                "false"
              ],
              [
                "test_basic_hash",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_basic_string",
                []
              ],
              [
                "test_basic_int",
                []
              ],
              [
                "test_not_allowed_type",
                []
              ],
              [
                "test_message",
                []
              ],
              [
                "test_call",
                []
              ],
              [
                "test_basic_array",
                []
              ],
              [
                "test_basic_hash",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_basic_string",
                "false"
              ],
              [
                "test_basic_int",
                "false"
              ],
              [
                "test_not_allowed_type",
                "false"
              ],
              [
                "test_message",
                "false"
              ],
              [
                "test_call",
                "false"
              ],
              [
                "test_basic_array",
                "false"
              ],
              [
                "test_basic_hash",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_basic_string",
                "false"
              ],
              [
                "test_basic_int",
                "true"
              ],
              [
                "test_not_allowed_type",
                "false"
              ],
              [
                "test_message",
                "false"
              ],
              [
                "test_call",
                "true"
              ],
              [
                "test_basic_array",
                "false"
              ],
              [
                "test_basic_hash",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_basic_string",
                  "0"
                ],
                [
                  "test_basic_int",
                  "0"
                ],
                [
                  "test_not_allowed_type",
                  "0"
                ],
                [
                  "test_message",
                  "0"
                ],
                [
                  "test_call",
                  "0"
                ],
                [
                  "test_basic_array",
                  "0"
                ],
                [
                  "test_basic_hash",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_basic_string",
                  "0"
                ],
                [
                  "test_basic_int",
                  "0"
                ],
                [
                  "test_not_allowed_type",
                  "0"
                ],
                [
                  "test_message",
                  "0"
                ],
                [
                  "test_call",
                  "0"
                ],
                [
                  "test_basic_array",
                  "0"
                ],
                [
                  "test_basic_hash",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_basic_string",
                "false"
              ],
              [
                "test_basic_int",
                "false"
              ],
              [
                "test_not_allowed_type",
                "false"
              ],
              [
                "test_message",
                "false"
              ],
              [
                "test_call",
                "false"
              ],
              [
                "test_basic_array",
                "false"
              ],
              [
                "test_basic_hash",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_basic_string",
                "false"
              ],
              [
                "test_basic_int",
                "false"
              ],
              [
                "test_not_allowed_type",
                "false"
              ],
              [
                "test_message",
                "false"
              ],
              [
                "test_call",
                "false"
              ],
              [
                "test_basic_array",
                "false"
              ],
              [
                "test_basic_hash",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_basic_string",
                "1"
              ],
              [
                "test_basic_int",
                "1"
              ],
              [
                "test_not_allowed_type",
                "1"
              ],
              [
                "test_message",
                "1"
              ],
              [
                "test_call",
                "2"
              ],
              [
                "test_basic_array",
                "1"
              ],
              [
                "test_basic_hash",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_basic_string",
                []
              ],
              [
                "test_basic_int",
                []
              ],
              [
                "test_not_allowed_type",
                []
              ],
              [
                "test_message",
                [
                  "res"
                ]
              ],
              [
                "test_call",
                [
                  "js_func"
                ]
              ],
              [
                "test_basic_array",
                []
              ],
              [
                "test_basic_hash",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_basic_string",
                [
                  "self.mr"
                ]
              ],
              [
                "test_basic_int",
                [
                  "self.mr"
                ]
              ],
              [
                "test_not_allowed_type",
                [
                  "self.mr"
                ]
              ],
              [
                "test_message",
                [
                  "self.mr"
                ]
              ],
              [
                "test_call",
                [
                  "self.mr"
                ]
              ],
              [
                "test_basic_array",
                [
                  "self.mr"
                ]
              ],
              [
                "test_basic_hash",
                [
                  "self.mr"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.2962534254264961,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_basic_hash",
                  "test_basic_array",
                  0.2361125344403821
                ],
                [
                  "test_basic_array",
                  "test_not_allowed_type",
                  0.12097167578182677
                ],
                [
                  "test_basic_int",
                  "test_call",
                  0.2519763153394848
                ],
                [
                  "test_basic_hash",
                  "test_call",
                  0.2857142857142857
                ],
                [
                  "test_basic_array",
                  "test_message",
                  0.3306121993780585
                ],
                [
                  "test_basic_int",
                  "test_basic_string",
                  0.4444444444444444
                ],
                [
                  "test_basic_string",
                  "test_basic_hash",
                  0.5039526306789696
                ],
                [
                  "test_basic_string",
                  "test_basic_array",
                  0.20823168251814142
                ],
                [
                  "test_basic_int",
                  "test_basic_array",
                  0.41646336503628284
                ],
                [
                  "test_basic_int",
                  "test_basic_hash",
                  0.5039526306789696
                ],
                [
                  "test_basic_int",
                  "test_message",
                  0.19245008972987526
                ],
                [
                  "test_basic_hash",
                  "test_message",
                  0.21821789023599236
                ],
                [
                  "test_not_allowed_type",
                  "test_message",
                  0.4472135954999579
                ],
                [
                  "test_call",
                  "test_message",
                  0.32732683535398854
                ],
                [
                  "test_basic_int",
                  "test_not_allowed_type",
                  0.2581988897471611
                ],
                [
                  "test_basic_hash",
                  "test_not_allowed_type",
                  0.2927700218845599
                ],
                [
                  "test_basic_string",
                  "test_not_allowed_type",
                  0.2581988897471611
                ],
                [
                  "test_basic_string",
                  "test_message",
                  0.19245008972987526
                ],
                [
                  "test_basic_string",
                  "test_call",
                  0.2519763153394848
                ],
                [
                  "test_not_allowed_type",
                  "test_call",
                  0.24397501823713327
                ],
                [
                  "test_basic_array",
                  "test_call",
                  0.2361125344403821
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_basic_string",
                "false"
              ],
              [
                "test_basic_int",
                "false"
              ],
              [
                "test_not_allowed_type",
                "false"
              ],
              [
                "test_message",
                "false"
              ],
              [
                "test_call",
                "false"
              ],
              [
                "test_basic_array",
                "false"
              ],
              [
                "test_basic_hash",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      }
    ]
  },
  {
    "name": "tests_\u0026_test_array_growth.py",
    "testCases": [
      {
        "name": "Test",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_shrinking_array",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_growing_array",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_shrinking_array",
                  "[]"
                ],
                [
                  "test_growing_array",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_shrinking_array",
                  "false"
                ],
                [
                  "test_growing_array",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_shrinking_array",
                  "false"
                ],
                [
                  "test_growing_array",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_shrinking_array",
                  "false"
                ],
                [
                  "test_growing_array",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_shrinking_array",
                  "false"
                ],
                [
                  "test_growing_array",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_shrinking_array",
                "false"
              ],
              [
                "test_growing_array",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_shrinking_array",
                "false"
              ],
              [
                "test_growing_array",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_shrinking_array",
                []
              ],
              [
                "test_growing_array",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_shrinking_array",
                "false"
              ],
              [
                "test_growing_array",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_shrinking_array",
                "false"
              ],
              [
                "test_growing_array",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_shrinking_array",
                  "0"
                ],
                [
                  "test_growing_array",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_shrinking_array",
                  "0"
                ],
                [
                  "test_growing_array",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_shrinking_array",
                "false"
              ],
              [
                "test_growing_array",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_shrinking_array",
                "false"
              ],
              [
                "test_growing_array",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_shrinking_array",
                "1"
              ],
              [
                "test_growing_array",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_shrinking_array",
                [
                  "res",
                  "array",
                  "js"
                ]
              ],
              [
                "test_growing_array",
                [
                  "res",
                  "js"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_shrinking_array",
                [
                  "self.mr"
                ]
              ],
              [
                "test_growing_array",
                [
                  "self.mr"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8233386485095285,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_growing_array",
                  "test_shrinking_array",
                  0.8233386485095285
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_shrinking_array",
                "false"
              ],
              [
                "test_growing_array",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  }
]