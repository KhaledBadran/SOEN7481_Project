[
  {
    "name": "tests_\u0026_test_google_api.py",
    "testCases": [
      {
        "name": "TestGoogleApi",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_search_params",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_init",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_search_params",
                  "[]"
                ],
                [
                  "test_init",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_search_params",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_search_params",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_search_params",
                  "true"
                ],
                [
                  "test_init",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_search_params",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_search_params",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_search_params",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_search_params",
                [
                  "self._api_key",
                  "self._api_cx"
                ]
              ],
              [
                "test_init",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_search_params",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_search_params",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_search_params",
                  "0"
                ],
                [
                  "test_init",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_search_params",
                  "0"
                ],
                [
                  "test_init",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_search_params",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_search_params",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_search_params",
                "3"
              ],
              [
                "test_init",
                "4"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_search_params",
                [
                  "assert_params",
                  "params"
                ]
              ],
              [
                "test_init",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_search_params",
                [
                  "self._api"
                ]
              ],
              [
                "test_init",
                [
                  "self._api",
                  "self._api_key",
                  "self._api_cx"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6190197206201786,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init",
                  "test_search_params",
                  0.6190197206201786
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_search_params",
                "false"
              ],
              [
                "test_init",
                "true"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_fetch_resize_save.py",
    "testCases": [
      {
        "name": "TestFetchResizeSave",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_search_path",
                  "[]"
                ],
                [
                  "test_paging",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_init",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertNotEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_bytes_io",
                  "[]"
                ],
                [
                  "test_progressbar",
                  "[]"
                ],
                [
                  "test_search_url",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_search_path",
                  "[]"
                ],
                [
                  "test_paging",
                  "[]"
                ],
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test_bytes_io",
                  "[]"
                ],
                [
                  "test_progressbar",
                  "[]"
                ],
                [
                  "test_search_url",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_search_path",
                  "false"
                ],
                [
                  "test_paging",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_bytes_io",
                  "true"
                ],
                [
                  "test_progressbar",
                  "false"
                ],
                [
                  "test_search_url",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_search_path",
                  "false"
                ],
                [
                  "test_paging",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_bytes_io",
                  "false"
                ],
                [
                  "test_progressbar",
                  "false"
                ],
                [
                  "test_search_url",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_search_path",
                  "false"
                ],
                [
                  "test_paging",
                  "true"
                ],
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_bytes_io",
                  "false"
                ],
                [
                  "test_progressbar",
                  "false"
                ],
                [
                  "test_search_url",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_search_path",
                  "false"
                ],
                [
                  "test_paging",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_bytes_io",
                  "false"
                ],
                [
                  "test_progressbar",
                  "false"
                ],
                [
                  "test_search_url",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_search_path",
                "false"
              ],
              [
                "test_paging",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_bytes_io",
                "false"
              ],
              [
                "test_progressbar",
                "false"
              ],
              [
                "test_search_url",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_search_path",
                "false"
              ],
              [
                "test_paging",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_bytes_io",
                "false"
              ],
              [
                "test_progressbar",
                "false"
              ],
              [
                "test_search_url",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_search_path",
                [
                  "self._api_key",
                  "self._api_cx",
                  "self._file_paths"
                ]
              ],
              [
                "test_paging",
                [
                  "self._api_key",
                  "self._api_cx",
                  "self._base_dir",
                  "self._file_paths"
                ]
              ],
              [
                "test_init",
                [
                  "self._base_dir",
                  "self._file_paths"
                ]
              ],
              [
                "test_bytes_io",
                [
                  "self._api_key",
                  "self._api_cx",
                  "self._base_dir",
                  "self._file_paths"
                ]
              ],
              [
                "test_progressbar",
                [
                  "self._frs",
                  "self._file_paths"
                ]
              ],
              [
                "test_search_url",
                [
                  "self._api_key",
                  "self._api_cx",
                  "self._base_dir",
                  "self._file_paths"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_search_path",
                "false"
              ],
              [
                "test_paging",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_bytes_io",
                "false"
              ],
              [
                "test_progressbar",
                "false"
              ],
              [
                "test_search_url",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_search_path",
                "false"
              ],
              [
                "test_paging",
                "true"
              ],
              [
                "test_init",
                "true"
              ],
              [
                "test_bytes_io",
                "false"
              ],
              [
                "test_progressbar",
                "false"
              ],
              [
                "test_search_url",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_search_path",
                  "0"
                ],
                [
                  "test_paging",
                  "0"
                ],
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_bytes_io",
                  "0"
                ],
                [
                  "test_progressbar",
                  "0"
                ],
                [
                  "test_search_url",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_search_path",
                  "0"
                ],
                [
                  "test_paging",
                  "0"
                ],
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_bytes_io",
                  "0"
                ],
                [
                  "test_progressbar",
                  "0"
                ],
                [
                  "test_search_url",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_search_path",
                "false"
              ],
              [
                "test_paging",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_bytes_io",
                "false"
              ],
              [
                "test_progressbar",
                "false"
              ],
              [
                "test_search_url",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_search_path",
                "false"
              ],
              [
                "test_paging",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_bytes_io",
                "false"
              ],
              [
                "test_progressbar",
                "false"
              ],
              [
                "test_search_url",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_search_path",
                "0"
              ],
              [
                "test_paging",
                "6"
              ],
              [
                "test_init",
                "14"
              ],
              [
                "test_bytes_io",
                "0"
              ],
              [
                "test_progressbar",
                "0"
              ],
              [
                "test_search_url",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_search_path",
                []
              ],
              [
                "test_paging",
                []
              ],
              [
                "test_init",
                [
                  "frs"
                ]
              ],
              [
                "test_bytes_io",
                [
                  "raw_image_data",
                  "my_bytes_io"
                ]
              ],
              [
                "test_progressbar",
                [
                  "progress_data",
                  "frs"
                ]
              ],
              [
                "test_search_url",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_search_path",
                [
                  "self._frs",
                  "self._base_dir"
                ]
              ],
              [
                "test_paging",
                [
                  "self._frs"
                ]
              ],
              [
                "test_init",
                [
                  "self._frs",
                  "self._api_key",
                  "self._api_cx"
                ]
              ],
              [
                "test_bytes_io",
                [
                  "self._frs"
                ]
              ],
              [
                "test_progressbar",
                [
                  "self._api_key",
                  "self._api_cx",
                  "self._base_dir"
                ]
              ],
              [
                "test_search_url",
                [
                  "self._frs"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.29003866956504787,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_search_path",
                  "test_bytes_io",
                  0.15256428831468236
                ],
                [
                  "test_init",
                  "test_paging",
                  0.6326612956243863
                ],
                [
                  "test_bytes_io",
                  "test_paging",
                  0.20380986614602725
                ],
                [
                  "test_progressbar",
                  "test_paging",
                  0.3684568126433864
                ],
                [
                  "test_search_url",
                  "test_search_path",
                  0.49541508402214957
                ],
                [
                  "test_search_path",
                  "test_progressbar",
                  0.25958843242933366
                ],
                [
                  "test_search_url",
                  "test_bytes_io",
                  0.22140372138502384
                ],
                [
                  "test_init",
                  "test_progressbar",
                  0.330642319621017
                ],
                [
                  "test_progressbar",
                  "test_bytes_io",
                  0.1834431778265252
                ],
                [
                  "test_init",
                  "test_search_path",
                  0.20623910947808277
                ],
                [
                  "test_search_path",
                  "test_paging",
                  0.23032671985243938
                ],
                [
                  "test_init",
                  "test_search_url",
                  0.32922722297459917
                ],
                [
                  "test_init",
                  "test_bytes_io",
                  0.12767167423347764
                ],
                [
                  "test_search_url",
                  "test_progressbar",
                  0.23309479542697095
                ],
                [
                  "test_search_url",
                  "test_paging",
                  0.37603552349761676
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_search_path",
                "false"
              ],
              [
                "test_paging",
                "false"
              ],
              [
                "test_init",
                "true"
              ],
              [
                "test_bytes_io",
                "false"
              ],
              [
                "test_progressbar",
                "false"
              ],
              [
                "test_search_url",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      }
    ]
  }
]