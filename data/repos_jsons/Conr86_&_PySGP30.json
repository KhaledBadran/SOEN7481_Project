[
  {
    "name": "tests_\u0026_test_sgp.py",
    "testCases": [
      {
        "name": "TestConstructor",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test_general_call",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test_general_call",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_general_call",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_general_call",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_general_call",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_general_call",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_general_call",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_general_call",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                []
              ],
              [
                "test_general_call",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_general_call",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_general_call",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_general_call",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_general_call",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_general_call",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_general_call",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_init",
                "0"
              ],
              [
                "test_general_call",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                [
                  "b"
                ]
              ],
              [
                "test_general_call",
                [
                  "b"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                [
                  "self.bus"
                ]
              ],
              [
                "test_general_call",
                [
                  "self.bus"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.43412157106222965,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init",
                  "test_general_call",
                  0.43412157106222965
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_general_call",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "SimpleReadTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_crc_fail",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_read",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_crc_ok",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_crc_fail",
                  "[]"
                ],
                [
                  "test_read",
                  "[]"
                ],
                [
                  "test_crc_ok",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_crc_fail",
                  "false"
                ],
                [
                  "test_read",
                  "false"
                ],
                [
                  "test_crc_ok",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_crc_fail",
                  "false"
                ],
                [
                  "test_read",
                  "false"
                ],
                [
                  "test_crc_ok",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_crc_fail",
                  "false"
                ],
                [
                  "test_read",
                  "false"
                ],
                [
                  "test_crc_ok",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_crc_fail",
                  "false"
                ],
                [
                  "test_read",
                  "false"
                ],
                [
                  "test_crc_ok",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_crc_fail",
                "false"
              ],
              [
                "test_read",
                "false"
              ],
              [
                "test_crc_ok",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_crc_fail",
                "false"
              ],
              [
                "test_read",
                "false"
              ],
              [
                "test_crc_ok",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_crc_fail",
                [
                  "self.sgp",
                  "self.bus"
                ]
              ],
              [
                "test_read",
                [
                  "self.bus"
                ]
              ],
              [
                "test_crc_ok",
                [
                  "self.bus"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_crc_fail",
                "false"
              ],
              [
                "test_read",
                "false"
              ],
              [
                "test_crc_ok",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_crc_fail",
                "false"
              ],
              [
                "test_read",
                "false"
              ],
              [
                "test_crc_ok",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_crc_fail",
                  "0"
                ],
                [
                  "test_read",
                  "0"
                ],
                [
                  "test_crc_ok",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_crc_fail",
                  "0"
                ],
                [
                  "test_read",
                  "0"
                ],
                [
                  "test_crc_ok",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_crc_fail",
                "false"
              ],
              [
                "test_read",
                "false"
              ],
              [
                "test_crc_ok",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_crc_fail",
                "false"
              ],
              [
                "test_read",
                "false"
              ],
              [
                "test_crc_ok",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_crc_fail",
                "2"
              ],
              [
                "test_read",
                "2"
              ],
              [
                "test_crc_ok",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_crc_fail",
                [
                  "bus",
                  "d",
                  "sgp"
                ]
              ],
              [
                "test_read",
                [
                  "d"
                ]
              ],
              [
                "test_crc_ok",
                [
                  "d"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_crc_fail",
                []
              ],
              [
                "test_read",
                [
                  "self.sgp"
                ]
              ],
              [
                "test_crc_ok",
                [
                  "self.sgp"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.3728580203629493,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_crc_ok",
                  "test_crc_fail",
                  0.5477225575051661
                ],
                [
                  "test_read",
                  "test_crc_fail",
                  0.3532086285506783
                ],
                [
                  "test_read",
                  "test_crc_ok",
                  0.21764287503300347
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_crc_fail",
                "true"
              ],
              [
                "test_read",
                "false"
              ],
              [
                "test_crc_ok",
                "true"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      },
      {
        "name": "TestBaselineMethods",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_save",
                  "[]"
                ],
                [
                  "test_save_load",
                  "[]"
                ],
                [
                  "test_load_fail_crc",
                  "[]"
                ],
                [
                  "test_save_fail",
                  "[]"
                ],
                [
                  "test_load_fail_broken_json",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_save",
                  "[]"
                ],
                [
                  "test_save_load",
                  "[]"
                ],
                [
                  "test_load_fail_crc",
                  "[]"
                ],
                [
                  "test_save_fail",
                  "[]"
                ],
                [
                  "test_load_fail_broken_json",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_save",
                  "false"
                ],
                [
                  "test_save_load",
                  "false"
                ],
                [
                  "test_load_fail_crc",
                  "false"
                ],
                [
                  "test_save_fail",
                  "false"
                ],
                [
                  "test_load_fail_broken_json",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_save",
                  "false"
                ],
                [
                  "test_save_load",
                  "false"
                ],
                [
                  "test_load_fail_crc",
                  "false"
                ],
                [
                  "test_save_fail",
                  "false"
                ],
                [
                  "test_load_fail_broken_json",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_save",
                  "false"
                ],
                [
                  "test_save_load",
                  "false"
                ],
                [
                  "test_load_fail_crc",
                  "false"
                ],
                [
                  "test_save_fail",
                  "false"
                ],
                [
                  "test_load_fail_broken_json",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_save",
                  "false"
                ],
                [
                  "test_save_load",
                  "false"
                ],
                [
                  "test_load_fail_crc",
                  "false"
                ],
                [
                  "test_save_fail",
                  "false"
                ],
                [
                  "test_load_fail_broken_json",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_save",
                "false"
              ],
              [
                "test_save_load",
                "false"
              ],
              [
                "test_load_fail_crc",
                "false"
              ],
              [
                "test_save_fail",
                "false"
              ],
              [
                "test_load_fail_broken_json",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_save",
                "false"
              ],
              [
                "test_save_load",
                "false"
              ],
              [
                "test_load_fail_crc",
                "false"
              ],
              [
                "test_save_fail",
                "false"
              ],
              [
                "test_load_fail_broken_json",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_save",
                [
                  "self.sgp",
                  "self.fsgp",
                  "self.bus"
                ]
              ],
              [
                "test_save_load",
                [
                  "self.sgp",
                  "self.fsgp",
                  "self.bus"
                ]
              ],
              [
                "test_load_fail_crc",
                [
                  "self.sgp",
                  "self.fsgp",
                  "self.bus"
                ]
              ],
              [
                "test_save_fail",
                [
                  "self.sgp",
                  "self.fsgp",
                  "self.bus"
                ]
              ],
              [
                "test_load_fail_broken_json",
                [
                  "self.sgp",
                  "self.fsgp",
                  "self.bus"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_save",
                "false"
              ],
              [
                "test_save_load",
                "false"
              ],
              [
                "test_load_fail_crc",
                "false"
              ],
              [
                "test_save_fail",
                "false"
              ],
              [
                "test_load_fail_broken_json",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_save",
                "false"
              ],
              [
                "test_save_load",
                "false"
              ],
              [
                "test_load_fail_crc",
                "false"
              ],
              [
                "test_save_fail",
                "false"
              ],
              [
                "test_load_fail_broken_json",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_save",
                  "0"
                ],
                [
                  "test_save_load",
                  "0"
                ],
                [
                  "test_load_fail_crc",
                  "0"
                ],
                [
                  "test_save_fail",
                  "0"
                ],
                [
                  "test_load_fail_broken_json",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_save",
                  "0"
                ],
                [
                  "test_save_load",
                  "0"
                ],
                [
                  "test_load_fail_crc",
                  "0"
                ],
                [
                  "test_save_fail",
                  "0"
                ],
                [
                  "test_load_fail_broken_json",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_save",
                "false"
              ],
              [
                "test_save_load",
                "false"
              ],
              [
                "test_load_fail_crc",
                "false"
              ],
              [
                "test_save_fail",
                "false"
              ],
              [
                "test_load_fail_broken_json",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_save",
                "false"
              ],
              [
                "test_save_load",
                "false"
              ],
              [
                "test_load_fail_crc",
                "false"
              ],
              [
                "test_save_fail",
                "false"
              ],
              [
                "test_load_fail_broken_json",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_save",
                "1"
              ],
              [
                "test_save_load",
                "2"
              ],
              [
                "test_load_fail_crc",
                "1"
              ],
              [
                "test_save_fail",
                "2"
              ],
              [
                "test_load_fail_broken_json",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_save",
                []
              ],
              [
                "test_save_load",
                []
              ],
              [
                "test_load_fail_crc",
                []
              ],
              [
                "test_save_fail",
                []
              ],
              [
                "test_load_fail_broken_json",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_save",
                []
              ],
              [
                "test_save_load",
                []
              ],
              [
                "test_load_fail_crc",
                []
              ],
              [
                "test_save_fail",
                []
              ],
              [
                "test_load_fail_broken_json",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.391005789447372,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_save_fail",
                  "test_load_fail_crc",
                  0.15590239111558085
                ],
                [
                  "test_save_fail",
                  "test_load_fail_broken_json",
                  0.33174440134851857
                ],
                [
                  "test_save",
                  "test_load_fail_crc",
                  0.25197631533948484
                ],
                [
                  "test_save",
                  "test_load_fail_broken_json",
                  0.41702882811414954
                ],
                [
                  "test_load_fail_crc",
                  "test_load_fail_broken_json",
                  0.8143807531137374
                ],
                [
                  "test_save",
                  "test_save_fail",
                  0.41247895569215265
                ],
                [
                  "test_save_fail",
                  "test_save_load",
                  0.3195048252113468
                ],
                [
                  "test_save_load",
                  "test_load_fail_crc",
                  0.22771001702132437
                ],
                [
                  "test_save_load",
                  "test_load_fail_broken_json",
                  0.3768673314407159
                ],
                [
                  "test_save",
                  "test_save_load",
                  0.6024640760767093
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_save",
                "false"
              ],
              [
                "test_save_load",
                "false"
              ],
              [
                "test_load_fail_crc",
                "false"
              ],
              [
                "test_save_fail",
                "false"
              ],
              [
                "test_load_fail_broken_json",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      }
    ]
  }
]