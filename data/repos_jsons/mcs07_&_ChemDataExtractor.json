[
  {
    "name": "tests_\u0026_test_text.py",
    "testCases": [
      {
        "name": "TestNormalization",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_normalize",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_normalize",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_normalize",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_normalize",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_normalize",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_normalize",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_normalize",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_normalize",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_normalize",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_normalize",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_normalize",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_normalize",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_normalize",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_normalize",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_normalize",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_normalize",
                "3"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_normalize",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_normalize",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_normalize",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      },
      {
        "name": "TestLaTeX",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_latex_to_unicode_math",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_latex_to_unicode_titles",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_latex_to_unicode_names",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_latex_to_unicode_math",
                  "[]"
                ],
                [
                  "test_latex_to_unicode_titles",
                  "[]"
                ],
                [
                  "test_latex_to_unicode_names",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_latex_to_unicode_math",
                  "false"
                ],
                [
                  "test_latex_to_unicode_titles",
                  "false"
                ],
                [
                  "test_latex_to_unicode_names",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_latex_to_unicode_math",
                  "false"
                ],
                [
                  "test_latex_to_unicode_titles",
                  "false"
                ],
                [
                  "test_latex_to_unicode_names",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_latex_to_unicode_math",
                  "false"
                ],
                [
                  "test_latex_to_unicode_titles",
                  "true"
                ],
                [
                  "test_latex_to_unicode_names",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_latex_to_unicode_math",
                  "false"
                ],
                [
                  "test_latex_to_unicode_titles",
                  "false"
                ],
                [
                  "test_latex_to_unicode_names",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_latex_to_unicode_math",
                "false"
              ],
              [
                "test_latex_to_unicode_titles",
                "false"
              ],
              [
                "test_latex_to_unicode_names",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_latex_to_unicode_math",
                "false"
              ],
              [
                "test_latex_to_unicode_titles",
                "false"
              ],
              [
                "test_latex_to_unicode_names",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_latex_to_unicode_math",
                []
              ],
              [
                "test_latex_to_unicode_titles",
                []
              ],
              [
                "test_latex_to_unicode_names",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_latex_to_unicode_math",
                "false"
              ],
              [
                "test_latex_to_unicode_titles",
                "false"
              ],
              [
                "test_latex_to_unicode_names",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_latex_to_unicode_math",
                "false"
              ],
              [
                "test_latex_to_unicode_titles",
                "false"
              ],
              [
                "test_latex_to_unicode_names",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_latex_to_unicode_math",
                  "0"
                ],
                [
                  "test_latex_to_unicode_titles",
                  "0"
                ],
                [
                  "test_latex_to_unicode_names",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_latex_to_unicode_math",
                  "0"
                ],
                [
                  "test_latex_to_unicode_titles",
                  "0"
                ],
                [
                  "test_latex_to_unicode_names",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_latex_to_unicode_math",
                "false"
              ],
              [
                "test_latex_to_unicode_titles",
                "false"
              ],
              [
                "test_latex_to_unicode_names",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_latex_to_unicode_math",
                "false"
              ],
              [
                "test_latex_to_unicode_titles",
                "false"
              ],
              [
                "test_latex_to_unicode_names",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_latex_to_unicode_math",
                "6"
              ],
              [
                "test_latex_to_unicode_titles",
                "3"
              ],
              [
                "test_latex_to_unicode_names",
                "10"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_latex_to_unicode_math",
                []
              ],
              [
                "test_latex_to_unicode_titles",
                []
              ],
              [
                "test_latex_to_unicode_names",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_latex_to_unicode_math",
                []
              ],
              [
                "test_latex_to_unicode_titles",
                []
              ],
              [
                "test_latex_to_unicode_names",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6622840914813772,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_latex_to_unicode_names",
                  "test_latex_to_unicode_titles",
                  0.6008581844358575
                ],
                [
                  "test_latex_to_unicode_titles",
                  "test_latex_to_unicode_math",
                  0.6208443322942593
                ],
                [
                  "test_latex_to_unicode_names",
                  "test_latex_to_unicode_math",
                  0.765149757714015
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_latex_to_unicode_math",
                "false"
              ],
              [
                "test_latex_to_unicode_titles",
                "false"
              ],
              [
                "test_latex_to_unicode_names",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      },
      {
        "name": "TestExtraction",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_extract_emails",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_extract_emails",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_extract_emails",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_extract_emails",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_extract_emails",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_extract_emails",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_emails",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_emails",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_emails",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_emails",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_emails",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_extract_emails",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_extract_emails",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_emails",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_emails",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_emails",
                "4"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_emails",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_emails",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_emails",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_model.py",
    "testCases": [
      {
        "name": "TestModel",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_is_contextual",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_is_unidentified",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_serialize",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_is_contextual",
                  "[]"
                ],
                [
                  "test_is_unidentified",
                  "[]"
                ],
                [
                  "test_serialize",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_is_contextual",
                  "false"
                ],
                [
                  "test_is_unidentified",
                  "false"
                ],
                [
                  "test_serialize",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_is_contextual",
                  "false"
                ],
                [
                  "test_is_unidentified",
                  "false"
                ],
                [
                  "test_serialize",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_is_contextual",
                  "false"
                ],
                [
                  "test_is_unidentified",
                  "false"
                ],
                [
                  "test_serialize",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_is_contextual",
                  "false"
                ],
                [
                  "test_is_unidentified",
                  "false"
                ],
                [
                  "test_serialize",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_is_contextual",
                "false"
              ],
              [
                "test_is_unidentified",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_is_contextual",
                "false"
              ],
              [
                "test_is_unidentified",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_is_contextual",
                []
              ],
              [
                "test_is_unidentified",
                []
              ],
              [
                "test_serialize",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_is_contextual",
                "false"
              ],
              [
                "test_is_unidentified",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_is_contextual",
                "false"
              ],
              [
                "test_is_unidentified",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_is_contextual",
                  "0"
                ],
                [
                  "test_is_unidentified",
                  "0"
                ],
                [
                  "test_serialize",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_is_contextual",
                  "0"
                ],
                [
                  "test_is_unidentified",
                  "0"
                ],
                [
                  "test_serialize",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_is_contextual",
                "false"
              ],
              [
                "test_is_unidentified",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_is_contextual",
                "false"
              ],
              [
                "test_is_unidentified",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_is_contextual",
                "8"
              ],
              [
                "test_is_unidentified",
                "5"
              ],
              [
                "test_serialize",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_is_contextual",
                []
              ],
              [
                "test_is_unidentified",
                []
              ],
              [
                "test_serialize",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_is_contextual",
                []
              ],
              [
                "test_is_unidentified",
                []
              ],
              [
                "test_serialize",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5431979769101449,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_serialize",
                  "test_is_contextual",
                  0.3962166124829593
                ],
                [
                  "test_is_unidentified",
                  "test_is_contextual",
                  0.6996778102514826
                ],
                [
                  "test_serialize",
                  "test_is_unidentified",
                  0.533699507995993
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_is_contextual",
                "true"
              ],
              [
                "test_is_unidentified",
                "true"
              ],
              [
                "test_serialize",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_biblio.py",
    "testCases": [
      {
        "name": "TestBibtexParser",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_bib1",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_parse_names",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_bib2",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_bib1",
                  "[]"
                ],
                [
                  "test_parse_names",
                  "[]"
                ],
                [
                  "test_bib2",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_bib1",
                  "false"
                ],
                [
                  "test_parse_names",
                  "false"
                ],
                [
                  "test_bib2",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_bib1",
                  "false"
                ],
                [
                  "test_parse_names",
                  "false"
                ],
                [
                  "test_bib2",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_bib1",
                  "false"
                ],
                [
                  "test_parse_names",
                  "false"
                ],
                [
                  "test_bib2",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_bib1",
                  "false"
                ],
                [
                  "test_parse_names",
                  "false"
                ],
                [
                  "test_bib2",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bib1",
                "false"
              ],
              [
                "test_parse_names",
                "false"
              ],
              [
                "test_bib2",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_bib1",
                "false"
              ],
              [
                "test_parse_names",
                "false"
              ],
              [
                "test_bib2",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_bib1",
                []
              ],
              [
                "test_parse_names",
                []
              ],
              [
                "test_bib2",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bib1",
                "false"
              ],
              [
                "test_parse_names",
                "false"
              ],
              [
                "test_bib2",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bib1",
                "false"
              ],
              [
                "test_parse_names",
                "false"
              ],
              [
                "test_bib2",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_bib1",
                  "0"
                ],
                [
                  "test_parse_names",
                  "0"
                ],
                [
                  "test_bib2",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_bib1",
                  "0"
                ],
                [
                  "test_parse_names",
                  "0"
                ],
                [
                  "test_bib2",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_bib1",
                "false"
              ],
              [
                "test_parse_names",
                "false"
              ],
              [
                "test_bib2",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bib1",
                "false"
              ],
              [
                "test_parse_names",
                "false"
              ],
              [
                "test_bib2",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bib1",
                "1"
              ],
              [
                "test_parse_names",
                "2"
              ],
              [
                "test_bib2",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_bib1",
                [
                  "bib"
                ]
              ],
              [
                "test_parse_names",
                [
                  "res"
                ]
              ],
              [
                "test_bib2",
                [
                  "bib"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_bib1",
                []
              ],
              [
                "test_parse_names",
                []
              ],
              [
                "test_bib2",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.648136642711595,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_bib1",
                  "test_parse_names",
                  0.4722049640673927
                ],
                [
                  "test_bib1",
                  "test_bib2",
                  0.9999999999999998
                ],
                [
                  "test_bib2",
                  "test_parse_names",
                  0.4722049640673927
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_bib1",
                "false"
              ],
              [
                "test_parse_names",
                "false"
              ],
              [
                "test_bib2",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      },
      {
        "name": "TestPersonName",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_capitalization",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_could_be",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertFalse, PyCallExpression: self.assertFalse, PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_names",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_equality",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_capitalization",
                  "[]"
                ],
                [
                  "test_could_be",
                  "[]"
                ],
                [
                  "test_names",
                  "[]"
                ],
                [
                  "test_equality",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_capitalization",
                  "false"
                ],
                [
                  "test_could_be",
                  "false"
                ],
                [
                  "test_names",
                  "false"
                ],
                [
                  "test_equality",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_capitalization",
                  "false"
                ],
                [
                  "test_could_be",
                  "false"
                ],
                [
                  "test_names",
                  "false"
                ],
                [
                  "test_equality",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_capitalization",
                  "false"
                ],
                [
                  "test_could_be",
                  "false"
                ],
                [
                  "test_names",
                  "false"
                ],
                [
                  "test_equality",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_capitalization",
                  "false"
                ],
                [
                  "test_could_be",
                  "false"
                ],
                [
                  "test_names",
                  "false"
                ],
                [
                  "test_equality",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_capitalization",
                "false"
              ],
              [
                "test_could_be",
                "false"
              ],
              [
                "test_names",
                "false"
              ],
              [
                "test_equality",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_capitalization",
                "false"
              ],
              [
                "test_could_be",
                "false"
              ],
              [
                "test_names",
                "false"
              ],
              [
                "test_equality",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_capitalization",
                []
              ],
              [
                "test_could_be",
                []
              ],
              [
                "test_names",
                []
              ],
              [
                "test_equality",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_capitalization",
                "false"
              ],
              [
                "test_could_be",
                "false"
              ],
              [
                "test_names",
                "false"
              ],
              [
                "test_equality",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_capitalization",
                "false"
              ],
              [
                "test_could_be",
                "false"
              ],
              [
                "test_names",
                "false"
              ],
              [
                "test_equality",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_capitalization",
                  "0"
                ],
                [
                  "test_could_be",
                  "0"
                ],
                [
                  "test_names",
                  "0"
                ],
                [
                  "test_equality",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_capitalization",
                  "0"
                ],
                [
                  "test_could_be",
                  "0"
                ],
                [
                  "test_names",
                  "0"
                ],
                [
                  "test_equality",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_capitalization",
                "false"
              ],
              [
                "test_could_be",
                "false"
              ],
              [
                "test_names",
                "false"
              ],
              [
                "test_equality",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_capitalization",
                "false"
              ],
              [
                "test_could_be",
                "false"
              ],
              [
                "test_names",
                "false"
              ],
              [
                "test_equality",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_capitalization",
                "1"
              ],
              [
                "test_could_be",
                "4"
              ],
              [
                "test_names",
                "18"
              ],
              [
                "test_equality",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_capitalization",
                [
                  "p"
                ]
              ],
              [
                "test_could_be",
                []
              ],
              [
                "test_names",
                [
                  "res"
                ]
              ],
              [
                "test_equality",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_capitalization",
                []
              ],
              [
                "test_could_be",
                []
              ],
              [
                "test_names",
                []
              ],
              [
                "test_equality",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6933895676343202,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_names",
                  "test_equality",
                  0.7839335789698619
                ],
                [
                  "test_capitalization",
                  "test_equality",
                  0.6260172668882551
                ],
                [
                  "test_names",
                  "test_capitalization",
                  0.5985907791683703
                ],
                [
                  "test_capitalization",
                  "test_could_be",
                  0.5659365525641551
                ],
                [
                  "test_equality",
                  "test_could_be",
                  0.8466948934438794
                ],
                [
                  "test_names",
                  "test_could_be",
                  0.7391643347713999
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_capitalization",
                "false"
              ],
              [
                "test_could_be",
                "false"
              ],
              [
                "test_names",
                "false"
              ],
              [
                "test_equality",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "tests_\u0026_test_extract.py",
    "testCases": [
      {
        "name": "TestExtract",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_parse_control_character",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_melting_point_heading_salt",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_parse_control_character",
                  "[]"
                ],
                [
                  "test_melting_point_heading_salt",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_parse_control_character",
                  "false"
                ],
                [
                  "test_melting_point_heading_salt",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_parse_control_character",
                  "false"
                ],
                [
                  "test_melting_point_heading_salt",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_parse_control_character",
                  "false"
                ],
                [
                  "test_melting_point_heading_salt",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_parse_control_character",
                  "false"
                ],
                [
                  "test_melting_point_heading_salt",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_parse_control_character",
                "false"
              ],
              [
                "test_melting_point_heading_salt",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_parse_control_character",
                "false"
              ],
              [
                "test_melting_point_heading_salt",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_parse_control_character",
                []
              ],
              [
                "test_melting_point_heading_salt",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_parse_control_character",
                "false"
              ],
              [
                "test_melting_point_heading_salt",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_parse_control_character",
                "false"
              ],
              [
                "test_melting_point_heading_salt",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_parse_control_character",
                  "0"
                ],
                [
                  "test_melting_point_heading_salt",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_parse_control_character",
                  "0"
                ],
                [
                  "test_melting_point_heading_salt",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_parse_control_character",
                "false"
              ],
              [
                "test_melting_point_heading_salt",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_parse_control_character",
                "false"
              ],
              [
                "test_melting_point_heading_salt",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_parse_control_character",
                "1"
              ],
              [
                "test_melting_point_heading_salt",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_parse_control_character",
                [
                  "d",
                  "expected"
                ]
              ],
              [
                "test_melting_point_heading_salt",
                [
                  "d",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_parse_control_character",
                []
              ],
              [
                "test_melting_point_heading_salt",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5779425624673186,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_melting_point_heading_salt",
                  "test_parse_control_character",
                  0.5779425624673186
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_parse_control_character",
                "false"
              ],
              [
                "test_melting_point_heading_salt",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_nlp_cem.py",
    "testCases": [
      {
        "name": "TestCrfCemTagger",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_false_pos",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_false_pos",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_false_pos",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_false_pos",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_false_pos",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_false_pos",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_false_pos",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_false_pos",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_false_pos",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_false_pos",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_false_pos",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_false_pos",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_false_pos",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_false_pos",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_false_pos",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_false_pos",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_false_pos",
                [
                  "dt"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_false_pos",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_false_pos",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      },
      {
        "name": "TestCemDictionaryTagger",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_unicode_combining_characters",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_unicode_combining_characters",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_unicode_combining_characters",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_unicode_combining_characters",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_unicode_combining_characters",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_unicode_combining_characters",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_unicode_combining_characters",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_unicode_combining_characters",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_unicode_combining_characters",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_unicode_combining_characters",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_unicode_combining_characters",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_unicode_combining_characters",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_unicode_combining_characters",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_unicode_combining_characters",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_unicode_combining_characters",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_unicode_combining_characters",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_unicode_combining_characters",
                [
                  "dt"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_unicode_combining_characters",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_unicode_combining_characters",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      },
      {
        "name": "TestCemTagger",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_cems_stoplist",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_stoplist",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_cems_stoplist",
                  "[]"
                ],
                [
                  "test_stoplist",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_cems_stoplist",
                  "false"
                ],
                [
                  "test_stoplist",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_cems_stoplist",
                  "false"
                ],
                [
                  "test_stoplist",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_cems_stoplist",
                  "false"
                ],
                [
                  "test_stoplist",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_cems_stoplist",
                  "false"
                ],
                [
                  "test_stoplist",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cems_stoplist",
                "false"
              ],
              [
                "test_stoplist",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_cems_stoplist",
                "false"
              ],
              [
                "test_stoplist",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_cems_stoplist",
                []
              ],
              [
                "test_stoplist",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cems_stoplist",
                "false"
              ],
              [
                "test_stoplist",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cems_stoplist",
                "false"
              ],
              [
                "test_stoplist",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_cems_stoplist",
                  "0"
                ],
                [
                  "test_stoplist",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_cems_stoplist",
                  "0"
                ],
                [
                  "test_stoplist",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_cems_stoplist",
                "false"
              ],
              [
                "test_stoplist",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cems_stoplist",
                "false"
              ],
              [
                "test_stoplist",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cems_stoplist",
                "3"
              ],
              [
                "test_stoplist",
                "3"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_cems_stoplist",
                []
              ],
              [
                "test_stoplist",
                [
                  "ct"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_cems_stoplist",
                []
              ],
              [
                "test_stoplist",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6284211711347499,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_stoplist",
                  "test_cems_stoplist",
                  0.6284211711347499
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_cems_stoplist",
                "false"
              ],
              [
                "test_stoplist",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_nlp_pos.py",
    "testCases": [
      {
        "name": "TestApPosTagger",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_text_sentence",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_tag_simple",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_text_sentence",
                  "[]"
                ],
                [
                  "test_tag_simple",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_text_sentence",
                  "false"
                ],
                [
                  "test_tag_simple",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_text_sentence",
                  "false"
                ],
                [
                  "test_tag_simple",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_text_sentence",
                  "false"
                ],
                [
                  "test_tag_simple",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_text_sentence",
                  "false"
                ],
                [
                  "test_tag_simple",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_text_sentence",
                "false"
              ],
              [
                "test_tag_simple",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_text_sentence",
                "false"
              ],
              [
                "test_tag_simple",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_text_sentence",
                [
                  "self.t"
                ]
              ],
              [
                "test_tag_simple",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_text_sentence",
                "false"
              ],
              [
                "test_tag_simple",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_text_sentence",
                "false"
              ],
              [
                "test_tag_simple",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_text_sentence",
                  "0"
                ],
                [
                  "test_tag_simple",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_text_sentence",
                  "0"
                ],
                [
                  "test_tag_simple",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_text_sentence",
                "false"
              ],
              [
                "test_tag_simple",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_text_sentence",
                "false"
              ],
              [
                "test_tag_simple",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_text_sentence",
                "1"
              ],
              [
                "test_tag_simple",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_text_sentence",
                [
                  "t"
                ]
              ],
              [
                "test_tag_simple",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_text_sentence",
                []
              ],
              [
                "test_tag_simple",
                [
                  "self.t"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.2681823057864538,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_tag_simple",
                  "test_text_sentence",
                  0.2681823057864538
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_text_sentence",
                "false"
              ],
              [
                "test_tag_simple",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "TestChemApPosTagger",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_text_sentence",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_tag_simple",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_text_sentence",
                  "[]"
                ],
                [
                  "test_tag_simple",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_text_sentence",
                  "false"
                ],
                [
                  "test_tag_simple",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_text_sentence",
                  "false"
                ],
                [
                  "test_tag_simple",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_text_sentence",
                  "false"
                ],
                [
                  "test_tag_simple",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_text_sentence",
                  "false"
                ],
                [
                  "test_tag_simple",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_text_sentence",
                "false"
              ],
              [
                "test_tag_simple",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_text_sentence",
                "false"
              ],
              [
                "test_tag_simple",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_text_sentence",
                [
                  "self.t"
                ]
              ],
              [
                "test_tag_simple",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_text_sentence",
                "false"
              ],
              [
                "test_tag_simple",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_text_sentence",
                "false"
              ],
              [
                "test_tag_simple",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_text_sentence",
                  "0"
                ],
                [
                  "test_tag_simple",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_text_sentence",
                  "0"
                ],
                [
                  "test_tag_simple",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_text_sentence",
                "false"
              ],
              [
                "test_tag_simple",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_text_sentence",
                "false"
              ],
              [
                "test_tag_simple",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_text_sentence",
                "1"
              ],
              [
                "test_tag_simple",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_text_sentence",
                [
                  "t"
                ]
              ],
              [
                "test_tag_simple",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_text_sentence",
                []
              ],
              [
                "test_tag_simple",
                [
                  "self.t"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.27370257726785924,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_tag_simple",
                  "test_text_sentence",
                  0.27370257726785924
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_text_sentence",
                "false"
              ],
              [
                "test_tag_simple",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_nlp_tag.py",
    "testCases": [
      {
        "name": "TestDictionaryTagger",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_dictionary_simple4",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_dictionary_simple",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_dictionary_simple2",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_dictionary_simple3",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_dictionary_simple4",
                  "[]"
                ],
                [
                  "test_dictionary_simple",
                  "[]"
                ],
                [
                  "test_dictionary_simple2",
                  "[]"
                ],
                [
                  "test_dictionary_simple3",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_dictionary_simple4",
                  "false"
                ],
                [
                  "test_dictionary_simple",
                  "false"
                ],
                [
                  "test_dictionary_simple2",
                  "false"
                ],
                [
                  "test_dictionary_simple3",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_dictionary_simple4",
                  "false"
                ],
                [
                  "test_dictionary_simple",
                  "false"
                ],
                [
                  "test_dictionary_simple2",
                  "false"
                ],
                [
                  "test_dictionary_simple3",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_dictionary_simple4",
                  "false"
                ],
                [
                  "test_dictionary_simple",
                  "false"
                ],
                [
                  "test_dictionary_simple2",
                  "false"
                ],
                [
                  "test_dictionary_simple3",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_dictionary_simple4",
                  "false"
                ],
                [
                  "test_dictionary_simple",
                  "false"
                ],
                [
                  "test_dictionary_simple2",
                  "false"
                ],
                [
                  "test_dictionary_simple3",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_dictionary_simple4",
                "false"
              ],
              [
                "test_dictionary_simple",
                "false"
              ],
              [
                "test_dictionary_simple2",
                "false"
              ],
              [
                "test_dictionary_simple3",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_dictionary_simple4",
                "false"
              ],
              [
                "test_dictionary_simple",
                "false"
              ],
              [
                "test_dictionary_simple2",
                "false"
              ],
              [
                "test_dictionary_simple3",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_dictionary_simple4",
                []
              ],
              [
                "test_dictionary_simple",
                []
              ],
              [
                "test_dictionary_simple2",
                []
              ],
              [
                "test_dictionary_simple3",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_dictionary_simple4",
                "false"
              ],
              [
                "test_dictionary_simple",
                "false"
              ],
              [
                "test_dictionary_simple2",
                "false"
              ],
              [
                "test_dictionary_simple3",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_dictionary_simple4",
                "false"
              ],
              [
                "test_dictionary_simple",
                "false"
              ],
              [
                "test_dictionary_simple2",
                "false"
              ],
              [
                "test_dictionary_simple3",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_dictionary_simple4",
                  "0"
                ],
                [
                  "test_dictionary_simple",
                  "0"
                ],
                [
                  "test_dictionary_simple2",
                  "0"
                ],
                [
                  "test_dictionary_simple3",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_dictionary_simple4",
                  "0"
                ],
                [
                  "test_dictionary_simple",
                  "0"
                ],
                [
                  "test_dictionary_simple2",
                  "0"
                ],
                [
                  "test_dictionary_simple3",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_dictionary_simple4",
                "false"
              ],
              [
                "test_dictionary_simple",
                "false"
              ],
              [
                "test_dictionary_simple2",
                "false"
              ],
              [
                "test_dictionary_simple3",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_dictionary_simple4",
                "false"
              ],
              [
                "test_dictionary_simple",
                "false"
              ],
              [
                "test_dictionary_simple2",
                "false"
              ],
              [
                "test_dictionary_simple3",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_dictionary_simple4",
                "1"
              ],
              [
                "test_dictionary_simple",
                "1"
              ],
              [
                "test_dictionary_simple2",
                "1"
              ],
              [
                "test_dictionary_simple3",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_dictionary_simple4",
                [
                  "dt"
                ]
              ],
              [
                "test_dictionary_simple",
                [
                  "dt"
                ]
              ],
              [
                "test_dictionary_simple2",
                [
                  "dt"
                ]
              ],
              [
                "test_dictionary_simple3",
                [
                  "dt"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_dictionary_simple4",
                []
              ],
              [
                "test_dictionary_simple",
                []
              ],
              [
                "test_dictionary_simple2",
                []
              ],
              [
                "test_dictionary_simple3",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9663604475911184,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_dictionary_simple2",
                  "test_dictionary_simple4",
                  0.9667858110777379
                ],
                [
                  "test_dictionary_simple",
                  "test_dictionary_simple2",
                  0.9838103104179061
                ],
                [
                  "test_dictionary_simple2",
                  "test_dictionary_simple3",
                  0.9190403569300937
                ],
                [
                  "test_dictionary_simple",
                  "test_dictionary_simple4",
                  0.984736012332894
                ],
                [
                  "test_dictionary_simple3",
                  "test_dictionary_simple4",
                  0.9833619282954167
                ],
                [
                  "test_dictionary_simple",
                  "test_dictionary_simple3",
                  0.9604282664926618
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_dictionary_simple4",
                "false"
              ],
              [
                "test_dictionary_simple",
                "false"
              ],
              [
                "test_dictionary_simple2",
                "false"
              ],
              [
                "test_dictionary_simple3",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "tests_\u0026_test_parse_mp.py",
    "testCases": [
      {
        "name": "TestParseMp",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_melting_range",
                  "[]"
                ],
                [
                  "test_bracket_obtained",
                  "[]"
                ],
                [
                  "test_solvent3",
                  "[]"
                ],
                [
                  "test_mp8",
                  "[]"
                ],
                [
                  "test_melting_point_of",
                  "[]"
                ],
                [
                  "test_degrees_only",
                  "[]"
                ],
                [
                  "test_having",
                  "[]"
                ],
                [
                  "test_colon",
                  "[]"
                ],
                [
                  "test_m_pt",
                  "[]"
                ],
                [
                  "test_gave",
                  "[]"
                ],
                [
                  "test_mp7",
                  "[]"
                ],
                [
                  "test_mp6",
                  "[]"
                ],
                [
                  "test_melting_point_colon",
                  "[]"
                ],
                [
                  "test_mp4",
                  "[]"
                ],
                [
                  "test_tm0",
                  "[]"
                ],
                [
                  "test_solvent",
                  "[]"
                ],
                [
                  "test_mp1",
                  "[]"
                ],
                [
                  "test_range_to",
                  "[]"
                ],
                [
                  "test_melting_at",
                  "[]"
                ],
                [
                  "test_cem_yield",
                  "[]"
                ],
                [
                  "test_mp3",
                  "[]"
                ],
                [
                  "test_solvent2",
                  "[]"
                ],
                [
                  "test_gave_label",
                  "[]"
                ],
                [
                  "test_mp5",
                  "[]"
                ],
                [
                  "test_mp2",
                  "[]"
                ],
                [
                  "test_tilde",
                  "[]"
                ],
                [
                  "test_melting_point",
                  "[]"
                ],
                [
                  "test_of_about",
                  "[]"
                ],
                [
                  "test_melting_point_range",
                  "[]"
                ],
                [
                  "test_melting_point_was",
                  "[]"
                ],
                [
                  "test_give_label",
                  "[]"
                ],
                [
                  "test_mp9",
                  "[]"
                ],
                [
                  "test_bracket",
                  "[]"
                ],
                [
                  "test_afforded",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_melting_range",
                  "[]"
                ],
                [
                  "test_bracket_obtained",
                  "[]"
                ],
                [
                  "test_solvent3",
                  "[]"
                ],
                [
                  "test_mp8",
                  "[]"
                ],
                [
                  "test_melting_point_of",
                  "[]"
                ],
                [
                  "test_degrees_only",
                  "[]"
                ],
                [
                  "test_having",
                  "[]"
                ],
                [
                  "test_colon",
                  "[]"
                ],
                [
                  "test_m_pt",
                  "[]"
                ],
                [
                  "test_gave",
                  "[]"
                ],
                [
                  "test_mp7",
                  "[]"
                ],
                [
                  "test_mp6",
                  "[]"
                ],
                [
                  "test_melting_point_colon",
                  "[]"
                ],
                [
                  "test_mp4",
                  "[]"
                ],
                [
                  "test_tm0",
                  "[]"
                ],
                [
                  "test_solvent",
                  "[]"
                ],
                [
                  "test_mp1",
                  "[]"
                ],
                [
                  "test_range_to",
                  "[]"
                ],
                [
                  "test_melting_at",
                  "[]"
                ],
                [
                  "test_cem_yield",
                  "[]"
                ],
                [
                  "test_mp3",
                  "[]"
                ],
                [
                  "test_solvent2",
                  "[]"
                ],
                [
                  "test_gave_label",
                  "[]"
                ],
                [
                  "test_mp5",
                  "[]"
                ],
                [
                  "test_mp2",
                  "[]"
                ],
                [
                  "test_tilde",
                  "[]"
                ],
                [
                  "test_melting_point",
                  "[]"
                ],
                [
                  "test_of_about",
                  "[]"
                ],
                [
                  "test_melting_point_range",
                  "[]"
                ],
                [
                  "test_melting_point_was",
                  "[]"
                ],
                [
                  "test_give_label",
                  "[]"
                ],
                [
                  "test_mp9",
                  "[]"
                ],
                [
                  "test_bracket",
                  "[]"
                ],
                [
                  "test_afforded",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_melting_range",
                  "false"
                ],
                [
                  "test_bracket_obtained",
                  "false"
                ],
                [
                  "test_solvent3",
                  "false"
                ],
                [
                  "test_mp8",
                  "false"
                ],
                [
                  "test_melting_point_of",
                  "false"
                ],
                [
                  "test_degrees_only",
                  "false"
                ],
                [
                  "test_having",
                  "false"
                ],
                [
                  "test_colon",
                  "false"
                ],
                [
                  "test_m_pt",
                  "false"
                ],
                [
                  "test_gave",
                  "false"
                ],
                [
                  "test_mp7",
                  "false"
                ],
                [
                  "test_mp6",
                  "false"
                ],
                [
                  "test_melting_point_colon",
                  "false"
                ],
                [
                  "test_mp4",
                  "false"
                ],
                [
                  "test_tm0",
                  "false"
                ],
                [
                  "test_solvent",
                  "false"
                ],
                [
                  "test_mp1",
                  "false"
                ],
                [
                  "test_range_to",
                  "false"
                ],
                [
                  "test_melting_at",
                  "false"
                ],
                [
                  "test_cem_yield",
                  "false"
                ],
                [
                  "test_mp3",
                  "false"
                ],
                [
                  "test_solvent2",
                  "false"
                ],
                [
                  "test_gave_label",
                  "false"
                ],
                [
                  "test_mp5",
                  "false"
                ],
                [
                  "test_mp2",
                  "false"
                ],
                [
                  "test_tilde",
                  "false"
                ],
                [
                  "test_melting_point",
                  "false"
                ],
                [
                  "test_of_about",
                  "false"
                ],
                [
                  "test_melting_point_range",
                  "false"
                ],
                [
                  "test_melting_point_was",
                  "false"
                ],
                [
                  "test_give_label",
                  "false"
                ],
                [
                  "test_mp9",
                  "false"
                ],
                [
                  "test_bracket",
                  "false"
                ],
                [
                  "test_afforded",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_melting_range",
                  "false"
                ],
                [
                  "test_bracket_obtained",
                  "false"
                ],
                [
                  "test_solvent3",
                  "false"
                ],
                [
                  "test_mp8",
                  "false"
                ],
                [
                  "test_melting_point_of",
                  "false"
                ],
                [
                  "test_degrees_only",
                  "false"
                ],
                [
                  "test_having",
                  "false"
                ],
                [
                  "test_colon",
                  "false"
                ],
                [
                  "test_m_pt",
                  "false"
                ],
                [
                  "test_gave",
                  "false"
                ],
                [
                  "test_mp7",
                  "false"
                ],
                [
                  "test_mp6",
                  "false"
                ],
                [
                  "test_melting_point_colon",
                  "false"
                ],
                [
                  "test_mp4",
                  "false"
                ],
                [
                  "test_tm0",
                  "false"
                ],
                [
                  "test_solvent",
                  "false"
                ],
                [
                  "test_mp1",
                  "false"
                ],
                [
                  "test_range_to",
                  "false"
                ],
                [
                  "test_melting_at",
                  "false"
                ],
                [
                  "test_cem_yield",
                  "false"
                ],
                [
                  "test_mp3",
                  "false"
                ],
                [
                  "test_solvent2",
                  "false"
                ],
                [
                  "test_gave_label",
                  "false"
                ],
                [
                  "test_mp5",
                  "false"
                ],
                [
                  "test_mp2",
                  "false"
                ],
                [
                  "test_tilde",
                  "false"
                ],
                [
                  "test_melting_point",
                  "false"
                ],
                [
                  "test_of_about",
                  "false"
                ],
                [
                  "test_melting_point_range",
                  "false"
                ],
                [
                  "test_melting_point_was",
                  "false"
                ],
                [
                  "test_give_label",
                  "false"
                ],
                [
                  "test_mp9",
                  "false"
                ],
                [
                  "test_bracket",
                  "false"
                ],
                [
                  "test_afforded",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_melting_range",
                  "false"
                ],
                [
                  "test_bracket_obtained",
                  "false"
                ],
                [
                  "test_solvent3",
                  "false"
                ],
                [
                  "test_mp8",
                  "false"
                ],
                [
                  "test_melting_point_of",
                  "false"
                ],
                [
                  "test_degrees_only",
                  "false"
                ],
                [
                  "test_having",
                  "false"
                ],
                [
                  "test_colon",
                  "false"
                ],
                [
                  "test_m_pt",
                  "false"
                ],
                [
                  "test_gave",
                  "false"
                ],
                [
                  "test_mp7",
                  "false"
                ],
                [
                  "test_mp6",
                  "false"
                ],
                [
                  "test_melting_point_colon",
                  "false"
                ],
                [
                  "test_mp4",
                  "false"
                ],
                [
                  "test_tm0",
                  "false"
                ],
                [
                  "test_solvent",
                  "false"
                ],
                [
                  "test_mp1",
                  "false"
                ],
                [
                  "test_range_to",
                  "false"
                ],
                [
                  "test_melting_at",
                  "false"
                ],
                [
                  "test_cem_yield",
                  "false"
                ],
                [
                  "test_mp3",
                  "false"
                ],
                [
                  "test_solvent2",
                  "false"
                ],
                [
                  "test_gave_label",
                  "false"
                ],
                [
                  "test_mp5",
                  "false"
                ],
                [
                  "test_mp2",
                  "false"
                ],
                [
                  "test_tilde",
                  "false"
                ],
                [
                  "test_melting_point",
                  "false"
                ],
                [
                  "test_of_about",
                  "false"
                ],
                [
                  "test_melting_point_range",
                  "false"
                ],
                [
                  "test_melting_point_was",
                  "false"
                ],
                [
                  "test_give_label",
                  "false"
                ],
                [
                  "test_mp9",
                  "false"
                ],
                [
                  "test_bracket",
                  "false"
                ],
                [
                  "test_afforded",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_melting_range",
                  "false"
                ],
                [
                  "test_bracket_obtained",
                  "false"
                ],
                [
                  "test_solvent3",
                  "false"
                ],
                [
                  "test_mp8",
                  "false"
                ],
                [
                  "test_melting_point_of",
                  "false"
                ],
                [
                  "test_degrees_only",
                  "false"
                ],
                [
                  "test_having",
                  "false"
                ],
                [
                  "test_colon",
                  "false"
                ],
                [
                  "test_m_pt",
                  "false"
                ],
                [
                  "test_gave",
                  "false"
                ],
                [
                  "test_mp7",
                  "false"
                ],
                [
                  "test_mp6",
                  "false"
                ],
                [
                  "test_melting_point_colon",
                  "false"
                ],
                [
                  "test_mp4",
                  "false"
                ],
                [
                  "test_tm0",
                  "false"
                ],
                [
                  "test_solvent",
                  "false"
                ],
                [
                  "test_mp1",
                  "false"
                ],
                [
                  "test_range_to",
                  "false"
                ],
                [
                  "test_melting_at",
                  "false"
                ],
                [
                  "test_cem_yield",
                  "false"
                ],
                [
                  "test_mp3",
                  "false"
                ],
                [
                  "test_solvent2",
                  "false"
                ],
                [
                  "test_gave_label",
                  "false"
                ],
                [
                  "test_mp5",
                  "false"
                ],
                [
                  "test_mp2",
                  "false"
                ],
                [
                  "test_tilde",
                  "false"
                ],
                [
                  "test_melting_point",
                  "false"
                ],
                [
                  "test_of_about",
                  "false"
                ],
                [
                  "test_melting_point_range",
                  "false"
                ],
                [
                  "test_melting_point_was",
                  "false"
                ],
                [
                  "test_give_label",
                  "false"
                ],
                [
                  "test_mp9",
                  "false"
                ],
                [
                  "test_bracket",
                  "false"
                ],
                [
                  "test_afforded",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_melting_range",
                "false"
              ],
              [
                "test_bracket_obtained",
                "false"
              ],
              [
                "test_solvent3",
                "false"
              ],
              [
                "test_mp8",
                "false"
              ],
              [
                "test_melting_point_of",
                "false"
              ],
              [
                "test_degrees_only",
                "false"
              ],
              [
                "test_having",
                "false"
              ],
              [
                "test_colon",
                "false"
              ],
              [
                "test_m_pt",
                "false"
              ],
              [
                "test_gave",
                "false"
              ],
              [
                "test_mp7",
                "false"
              ],
              [
                "test_mp6",
                "false"
              ],
              [
                "test_melting_point_colon",
                "false"
              ],
              [
                "test_mp4",
                "false"
              ],
              [
                "test_tm0",
                "false"
              ],
              [
                "test_solvent",
                "false"
              ],
              [
                "test_mp1",
                "false"
              ],
              [
                "test_range_to",
                "false"
              ],
              [
                "test_melting_at",
                "false"
              ],
              [
                "test_cem_yield",
                "false"
              ],
              [
                "test_mp3",
                "false"
              ],
              [
                "test_solvent2",
                "false"
              ],
              [
                "test_gave_label",
                "false"
              ],
              [
                "test_mp5",
                "false"
              ],
              [
                "test_mp2",
                "false"
              ],
              [
                "test_tilde",
                "false"
              ],
              [
                "test_melting_point",
                "false"
              ],
              [
                "test_of_about",
                "false"
              ],
              [
                "test_melting_point_range",
                "false"
              ],
              [
                "test_melting_point_was",
                "false"
              ],
              [
                "test_give_label",
                "false"
              ],
              [
                "test_mp9",
                "false"
              ],
              [
                "test_bracket",
                "false"
              ],
              [
                "test_afforded",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_melting_range",
                "false"
              ],
              [
                "test_bracket_obtained",
                "false"
              ],
              [
                "test_solvent3",
                "false"
              ],
              [
                "test_mp8",
                "false"
              ],
              [
                "test_melting_point_of",
                "false"
              ],
              [
                "test_degrees_only",
                "false"
              ],
              [
                "test_having",
                "false"
              ],
              [
                "test_colon",
                "false"
              ],
              [
                "test_m_pt",
                "false"
              ],
              [
                "test_gave",
                "false"
              ],
              [
                "test_mp7",
                "false"
              ],
              [
                "test_mp6",
                "false"
              ],
              [
                "test_melting_point_colon",
                "false"
              ],
              [
                "test_mp4",
                "false"
              ],
              [
                "test_tm0",
                "false"
              ],
              [
                "test_solvent",
                "false"
              ],
              [
                "test_mp1",
                "false"
              ],
              [
                "test_range_to",
                "false"
              ],
              [
                "test_melting_at",
                "false"
              ],
              [
                "test_cem_yield",
                "false"
              ],
              [
                "test_mp3",
                "false"
              ],
              [
                "test_solvent2",
                "false"
              ],
              [
                "test_gave_label",
                "false"
              ],
              [
                "test_mp5",
                "false"
              ],
              [
                "test_mp2",
                "false"
              ],
              [
                "test_tilde",
                "false"
              ],
              [
                "test_melting_point",
                "false"
              ],
              [
                "test_of_about",
                "false"
              ],
              [
                "test_melting_point_range",
                "false"
              ],
              [
                "test_melting_point_was",
                "false"
              ],
              [
                "test_give_label",
                "false"
              ],
              [
                "test_mp9",
                "false"
              ],
              [
                "test_bracket",
                "false"
              ],
              [
                "test_afforded",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_melting_range",
                []
              ],
              [
                "test_bracket_obtained",
                []
              ],
              [
                "test_solvent3",
                []
              ],
              [
                "test_mp8",
                []
              ],
              [
                "test_melting_point_of",
                []
              ],
              [
                "test_degrees_only",
                []
              ],
              [
                "test_having",
                []
              ],
              [
                "test_colon",
                []
              ],
              [
                "test_m_pt",
                []
              ],
              [
                "test_gave",
                []
              ],
              [
                "test_mp7",
                []
              ],
              [
                "test_mp6",
                []
              ],
              [
                "test_melting_point_colon",
                []
              ],
              [
                "test_mp4",
                []
              ],
              [
                "test_tm0",
                []
              ],
              [
                "test_solvent",
                []
              ],
              [
                "test_mp1",
                []
              ],
              [
                "test_range_to",
                []
              ],
              [
                "test_melting_at",
                []
              ],
              [
                "test_cem_yield",
                []
              ],
              [
                "test_mp3",
                []
              ],
              [
                "test_solvent2",
                []
              ],
              [
                "test_gave_label",
                []
              ],
              [
                "test_mp5",
                []
              ],
              [
                "test_mp2",
                []
              ],
              [
                "test_tilde",
                []
              ],
              [
                "test_melting_point",
                []
              ],
              [
                "test_of_about",
                []
              ],
              [
                "test_melting_point_range",
                []
              ],
              [
                "test_melting_point_was",
                []
              ],
              [
                "test_give_label",
                []
              ],
              [
                "test_mp9",
                []
              ],
              [
                "test_bracket",
                []
              ],
              [
                "test_afforded",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_melting_range",
                "false"
              ],
              [
                "test_bracket_obtained",
                "false"
              ],
              [
                "test_solvent3",
                "false"
              ],
              [
                "test_mp8",
                "false"
              ],
              [
                "test_melting_point_of",
                "false"
              ],
              [
                "test_degrees_only",
                "false"
              ],
              [
                "test_having",
                "false"
              ],
              [
                "test_colon",
                "false"
              ],
              [
                "test_m_pt",
                "false"
              ],
              [
                "test_gave",
                "false"
              ],
              [
                "test_mp7",
                "false"
              ],
              [
                "test_mp6",
                "false"
              ],
              [
                "test_melting_point_colon",
                "false"
              ],
              [
                "test_mp4",
                "false"
              ],
              [
                "test_tm0",
                "false"
              ],
              [
                "test_solvent",
                "false"
              ],
              [
                "test_mp1",
                "false"
              ],
              [
                "test_range_to",
                "false"
              ],
              [
                "test_melting_at",
                "false"
              ],
              [
                "test_cem_yield",
                "false"
              ],
              [
                "test_mp3",
                "false"
              ],
              [
                "test_solvent2",
                "false"
              ],
              [
                "test_gave_label",
                "false"
              ],
              [
                "test_mp5",
                "false"
              ],
              [
                "test_mp2",
                "false"
              ],
              [
                "test_tilde",
                "false"
              ],
              [
                "test_melting_point",
                "false"
              ],
              [
                "test_of_about",
                "false"
              ],
              [
                "test_melting_point_range",
                "false"
              ],
              [
                "test_melting_point_was",
                "false"
              ],
              [
                "test_give_label",
                "false"
              ],
              [
                "test_mp9",
                "false"
              ],
              [
                "test_bracket",
                "false"
              ],
              [
                "test_afforded",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_melting_range",
                "false"
              ],
              [
                "test_bracket_obtained",
                "false"
              ],
              [
                "test_solvent3",
                "false"
              ],
              [
                "test_mp8",
                "false"
              ],
              [
                "test_melting_point_of",
                "false"
              ],
              [
                "test_degrees_only",
                "false"
              ],
              [
                "test_having",
                "false"
              ],
              [
                "test_colon",
                "false"
              ],
              [
                "test_m_pt",
                "false"
              ],
              [
                "test_gave",
                "false"
              ],
              [
                "test_mp7",
                "false"
              ],
              [
                "test_mp6",
                "false"
              ],
              [
                "test_melting_point_colon",
                "false"
              ],
              [
                "test_mp4",
                "false"
              ],
              [
                "test_tm0",
                "false"
              ],
              [
                "test_solvent",
                "false"
              ],
              [
                "test_mp1",
                "false"
              ],
              [
                "test_range_to",
                "false"
              ],
              [
                "test_melting_at",
                "false"
              ],
              [
                "test_cem_yield",
                "false"
              ],
              [
                "test_mp3",
                "false"
              ],
              [
                "test_solvent2",
                "false"
              ],
              [
                "test_gave_label",
                "false"
              ],
              [
                "test_mp5",
                "false"
              ],
              [
                "test_mp2",
                "false"
              ],
              [
                "test_tilde",
                "false"
              ],
              [
                "test_melting_point",
                "false"
              ],
              [
                "test_of_about",
                "false"
              ],
              [
                "test_melting_point_range",
                "false"
              ],
              [
                "test_melting_point_was",
                "false"
              ],
              [
                "test_give_label",
                "false"
              ],
              [
                "test_mp9",
                "false"
              ],
              [
                "test_bracket",
                "false"
              ],
              [
                "test_afforded",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_melting_range",
                  "0"
                ],
                [
                  "test_bracket_obtained",
                  "0"
                ],
                [
                  "test_solvent3",
                  "0"
                ],
                [
                  "test_mp8",
                  "0"
                ],
                [
                  "test_melting_point_of",
                  "0"
                ],
                [
                  "test_degrees_only",
                  "0"
                ],
                [
                  "test_having",
                  "0"
                ],
                [
                  "test_colon",
                  "0"
                ],
                [
                  "test_m_pt",
                  "0"
                ],
                [
                  "test_gave",
                  "0"
                ],
                [
                  "test_mp7",
                  "0"
                ],
                [
                  "test_mp6",
                  "0"
                ],
                [
                  "test_melting_point_colon",
                  "0"
                ],
                [
                  "test_mp4",
                  "0"
                ],
                [
                  "test_tm0",
                  "0"
                ],
                [
                  "test_solvent",
                  "0"
                ],
                [
                  "test_mp1",
                  "0"
                ],
                [
                  "test_range_to",
                  "0"
                ],
                [
                  "test_melting_at",
                  "0"
                ],
                [
                  "test_cem_yield",
                  "0"
                ],
                [
                  "test_mp3",
                  "0"
                ],
                [
                  "test_solvent2",
                  "0"
                ],
                [
                  "test_gave_label",
                  "0"
                ],
                [
                  "test_mp5",
                  "0"
                ],
                [
                  "test_mp2",
                  "0"
                ],
                [
                  "test_tilde",
                  "0"
                ],
                [
                  "test_melting_point",
                  "0"
                ],
                [
                  "test_of_about",
                  "0"
                ],
                [
                  "test_melting_point_range",
                  "0"
                ],
                [
                  "test_melting_point_was",
                  "0"
                ],
                [
                  "test_give_label",
                  "0"
                ],
                [
                  "test_mp9",
                  "0"
                ],
                [
                  "test_bracket",
                  "0"
                ],
                [
                  "test_afforded",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_melting_range",
                  "0"
                ],
                [
                  "test_bracket_obtained",
                  "0"
                ],
                [
                  "test_solvent3",
                  "0"
                ],
                [
                  "test_mp8",
                  "0"
                ],
                [
                  "test_melting_point_of",
                  "0"
                ],
                [
                  "test_degrees_only",
                  "0"
                ],
                [
                  "test_having",
                  "0"
                ],
                [
                  "test_colon",
                  "0"
                ],
                [
                  "test_m_pt",
                  "0"
                ],
                [
                  "test_gave",
                  "0"
                ],
                [
                  "test_mp7",
                  "0"
                ],
                [
                  "test_mp6",
                  "0"
                ],
                [
                  "test_melting_point_colon",
                  "0"
                ],
                [
                  "test_mp4",
                  "0"
                ],
                [
                  "test_tm0",
                  "0"
                ],
                [
                  "test_solvent",
                  "0"
                ],
                [
                  "test_mp1",
                  "0"
                ],
                [
                  "test_range_to",
                  "0"
                ],
                [
                  "test_melting_at",
                  "0"
                ],
                [
                  "test_cem_yield",
                  "0"
                ],
                [
                  "test_mp3",
                  "0"
                ],
                [
                  "test_solvent2",
                  "0"
                ],
                [
                  "test_gave_label",
                  "0"
                ],
                [
                  "test_mp5",
                  "0"
                ],
                [
                  "test_mp2",
                  "0"
                ],
                [
                  "test_tilde",
                  "0"
                ],
                [
                  "test_melting_point",
                  "0"
                ],
                [
                  "test_of_about",
                  "0"
                ],
                [
                  "test_melting_point_range",
                  "0"
                ],
                [
                  "test_melting_point_was",
                  "0"
                ],
                [
                  "test_give_label",
                  "0"
                ],
                [
                  "test_mp9",
                  "0"
                ],
                [
                  "test_bracket",
                  "0"
                ],
                [
                  "test_afforded",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_melting_range",
                "false"
              ],
              [
                "test_bracket_obtained",
                "false"
              ],
              [
                "test_solvent3",
                "false"
              ],
              [
                "test_mp8",
                "false"
              ],
              [
                "test_melting_point_of",
                "false"
              ],
              [
                "test_degrees_only",
                "false"
              ],
              [
                "test_having",
                "false"
              ],
              [
                "test_colon",
                "false"
              ],
              [
                "test_m_pt",
                "false"
              ],
              [
                "test_gave",
                "false"
              ],
              [
                "test_mp7",
                "false"
              ],
              [
                "test_mp6",
                "false"
              ],
              [
                "test_melting_point_colon",
                "false"
              ],
              [
                "test_mp4",
                "false"
              ],
              [
                "test_tm0",
                "false"
              ],
              [
                "test_solvent",
                "false"
              ],
              [
                "test_mp1",
                "false"
              ],
              [
                "test_range_to",
                "false"
              ],
              [
                "test_melting_at",
                "false"
              ],
              [
                "test_cem_yield",
                "false"
              ],
              [
                "test_mp3",
                "false"
              ],
              [
                "test_solvent2",
                "false"
              ],
              [
                "test_gave_label",
                "false"
              ],
              [
                "test_mp5",
                "false"
              ],
              [
                "test_mp2",
                "false"
              ],
              [
                "test_tilde",
                "false"
              ],
              [
                "test_melting_point",
                "false"
              ],
              [
                "test_of_about",
                "false"
              ],
              [
                "test_melting_point_range",
                "false"
              ],
              [
                "test_melting_point_was",
                "false"
              ],
              [
                "test_give_label",
                "false"
              ],
              [
                "test_mp9",
                "false"
              ],
              [
                "test_bracket",
                "false"
              ],
              [
                "test_afforded",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_melting_range",
                "false"
              ],
              [
                "test_bracket_obtained",
                "false"
              ],
              [
                "test_solvent3",
                "false"
              ],
              [
                "test_mp8",
                "false"
              ],
              [
                "test_melting_point_of",
                "false"
              ],
              [
                "test_degrees_only",
                "false"
              ],
              [
                "test_having",
                "false"
              ],
              [
                "test_colon",
                "false"
              ],
              [
                "test_m_pt",
                "false"
              ],
              [
                "test_gave",
                "false"
              ],
              [
                "test_mp7",
                "false"
              ],
              [
                "test_mp6",
                "false"
              ],
              [
                "test_melting_point_colon",
                "false"
              ],
              [
                "test_mp4",
                "false"
              ],
              [
                "test_tm0",
                "false"
              ],
              [
                "test_solvent",
                "false"
              ],
              [
                "test_mp1",
                "false"
              ],
              [
                "test_range_to",
                "false"
              ],
              [
                "test_melting_at",
                "false"
              ],
              [
                "test_cem_yield",
                "false"
              ],
              [
                "test_mp3",
                "false"
              ],
              [
                "test_solvent2",
                "false"
              ],
              [
                "test_gave_label",
                "false"
              ],
              [
                "test_mp5",
                "false"
              ],
              [
                "test_mp2",
                "false"
              ],
              [
                "test_tilde",
                "false"
              ],
              [
                "test_melting_point",
                "false"
              ],
              [
                "test_of_about",
                "false"
              ],
              [
                "test_melting_point_range",
                "false"
              ],
              [
                "test_melting_point_was",
                "false"
              ],
              [
                "test_give_label",
                "false"
              ],
              [
                "test_mp9",
                "false"
              ],
              [
                "test_bracket",
                "false"
              ],
              [
                "test_afforded",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_melting_range",
                "0"
              ],
              [
                "test_bracket_obtained",
                "0"
              ],
              [
                "test_solvent3",
                "0"
              ],
              [
                "test_mp8",
                "0"
              ],
              [
                "test_melting_point_of",
                "0"
              ],
              [
                "test_degrees_only",
                "0"
              ],
              [
                "test_having",
                "0"
              ],
              [
                "test_colon",
                "0"
              ],
              [
                "test_m_pt",
                "0"
              ],
              [
                "test_gave",
                "0"
              ],
              [
                "test_mp7",
                "0"
              ],
              [
                "test_mp6",
                "0"
              ],
              [
                "test_melting_point_colon",
                "0"
              ],
              [
                "test_mp4",
                "0"
              ],
              [
                "test_tm0",
                "0"
              ],
              [
                "test_solvent",
                "0"
              ],
              [
                "test_mp1",
                "0"
              ],
              [
                "test_range_to",
                "0"
              ],
              [
                "test_melting_at",
                "0"
              ],
              [
                "test_cem_yield",
                "0"
              ],
              [
                "test_mp3",
                "0"
              ],
              [
                "test_solvent2",
                "0"
              ],
              [
                "test_gave_label",
                "0"
              ],
              [
                "test_mp5",
                "0"
              ],
              [
                "test_mp2",
                "0"
              ],
              [
                "test_tilde",
                "0"
              ],
              [
                "test_melting_point",
                "0"
              ],
              [
                "test_of_about",
                "0"
              ],
              [
                "test_melting_point_range",
                "0"
              ],
              [
                "test_melting_point_was",
                "0"
              ],
              [
                "test_give_label",
                "0"
              ],
              [
                "test_mp9",
                "0"
              ],
              [
                "test_bracket",
                "0"
              ],
              [
                "test_afforded",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_melting_range",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_bracket_obtained",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_solvent3",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_mp8",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_melting_point_of",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_degrees_only",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_having",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_colon",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_m_pt",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_gave",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_mp7",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_mp6",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_melting_point_colon",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_mp4",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_tm0",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_solvent",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_mp1",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_range_to",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_melting_at",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_cem_yield",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_mp3",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_solvent2",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_gave_label",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_mp5",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_mp2",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_tilde",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_melting_point",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_of_about",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_melting_point_range",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_melting_point_was",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_give_label",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_mp9",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_bracket",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_afforded",
                [
                  "s",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_melting_range",
                []
              ],
              [
                "test_bracket_obtained",
                []
              ],
              [
                "test_solvent3",
                []
              ],
              [
                "test_mp8",
                []
              ],
              [
                "test_melting_point_of",
                []
              ],
              [
                "test_degrees_only",
                []
              ],
              [
                "test_having",
                []
              ],
              [
                "test_colon",
                []
              ],
              [
                "test_m_pt",
                []
              ],
              [
                "test_gave",
                []
              ],
              [
                "test_mp7",
                []
              ],
              [
                "test_mp6",
                []
              ],
              [
                "test_melting_point_colon",
                []
              ],
              [
                "test_mp4",
                []
              ],
              [
                "test_tm0",
                []
              ],
              [
                "test_solvent",
                []
              ],
              [
                "test_mp1",
                []
              ],
              [
                "test_range_to",
                []
              ],
              [
                "test_melting_at",
                []
              ],
              [
                "test_cem_yield",
                []
              ],
              [
                "test_mp3",
                []
              ],
              [
                "test_solvent2",
                []
              ],
              [
                "test_gave_label",
                []
              ],
              [
                "test_mp5",
                []
              ],
              [
                "test_mp2",
                []
              ],
              [
                "test_tilde",
                []
              ],
              [
                "test_melting_point",
                []
              ],
              [
                "test_of_about",
                []
              ],
              [
                "test_melting_point_range",
                []
              ],
              [
                "test_melting_point_was",
                []
              ],
              [
                "test_give_label",
                []
              ],
              [
                "test_mp9",
                []
              ],
              [
                "test_bracket",
                []
              ],
              [
                "test_afforded",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6273225791365383,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_degrees_only",
                  "test_range_to",
                  0.47826086956521746
                ],
                [
                  "test_afforded",
                  "test_m_pt",
                  0.6563924617405256
                ],
                [
                  "test_mp4",
                  "test_afforded",
                  0.5157106231293968
                ],
                [
                  "test_bracket",
                  "test_tilde",
                  0.6369058317063352
                ],
                [
                  "test_melting_point_was",
                  "test_solvent",
                  0.7259079527665504
                ],
                [
                  "test_gave_label",
                  "test_bracket_obtained",
                  0.7309879850882874
                ],
                [
                  "test_degrees_only",
                  "test_melting_point_was",
                  0.643489452087787
                ],
                [
                  "test_of_about",
                  "test_solvent2",
                  0.5694162843474588
                ],
                [
                  "test_mp8",
                  "test_melting_point_range",
                  0.5298706638667394
                ],
                [
                  "test_mp1",
                  "test_melting_point",
                  0.5936168397046637
                ],
                [
                  "test_degrees_only",
                  "test_gave_label",
                  0.5934424260562083
                ],
                [
                  "test_melting_point_range",
                  "test_tilde",
                  0.613395615082148
                ],
                [
                  "test_mp4",
                  "test_solvent2",
                  0.6146646756784948
                ],
                [
                  "test_mp6",
                  "test_tm0",
                  0.4008918628686366
                ],
                [
                  "test_mp2",
                  "test_tm0",
                  0.6008945586016146
                ],
                [
                  "test_melting_point",
                  "test_bracket_obtained",
                  0.6115766297251507
                ],
                [
                  "test_melting_point_colon",
                  "test_colon",
                  0.718837754105693
                ],
                [
                  "test_mp3",
                  "test_gave",
                  0.43069267837532
                ],
                [
                  "test_melting_point_colon",
                  "test_having",
                  0.6864064729836442
                ],
                [
                  "test_mp2",
                  "test_m_pt",
                  0.6499336836196816
                ],
                [
                  "test_melting_point_of",
                  "test_melting_point_range",
                  0.9011533136409088
                ],
                [
                  "test_mp4",
                  "test_melting_point_colon",
                  0.6146646756784948
                ],
                [
                  "test_melting_at",
                  "test_solvent",
                  0.7677718959499146
                ],
                [
                  "test_mp6",
                  "test_mp8",
                  0.8145473933051938
                ],
                [
                  "test_melting_point_range",
                  "test_m_pt",
                  0.7126361214153362
                ],
                [
                  "test_mp6",
                  "test_bracket_obtained",
                  0.42142636082734264
                ],
                [
                  "test_mp8",
                  "test_melting_point_was",
                  0.5545288506304171
                ],
                [
                  "test_melting_point_colon",
                  "test_melting_at",
                  0.8931977372352651
                ],
                [
                  "test_mp7",
                  "test_melting_point_was",
                  0.6830118931367616
                ],
                [
                  "test_afforded",
                  "test_solvent3",
                  0.7098727864204516
                ],
                [
                  "test_melting_point",
                  "test_range_to",
                  0.7049073768502414
                ],
                [
                  "test_mp2",
                  "test_tilde",
                  0.6180314431495257
                ],
                [
                  "test_melting_point_range",
                  "test_solvent2",
                  0.7318978552073228
                ],
                [
                  "test_m_pt",
                  "test_tm0",
                  0.6210344279375828
                ],
                [
                  "test_mp3",
                  "test_melting_range",
                  0.7892800282301351
                ],
                [
                  "test_tilde",
                  "test_range_to",
                  0.8096409047527365
                ],
                [
                  "test_mp5",
                  "test_melting_point_range",
                  0.49453535504684026
                ],
                [
                  "test_degrees_only",
                  "test_of_about",
                  0.4766644271991385
                ],
                [
                  "test_mp2",
                  "test_degrees_only",
                  0.5808023194967749
                ],
                [
                  "test_of_about",
                  "test_tilde",
                  0.5459642140991688
                ],
                [
                  "test_mp2",
                  "test_solvent3",
                  0.6928465180980947
                ],
                [
                  "test_mp8",
                  "test_gave_label",
                  0.4760787155463121
                ],
                [
                  "test_mp6",
                  "test_range_to",
                  0.4153067471385755
                ],
                [
                  "test_solvent",
                  "test_solvent2",
                  0.7792865001991968
                ],
                [
                  "test_melting_point_colon",
                  "test_melting_range",
                  0.9309493362512627
                ],
                [
                  "test_m_pt",
                  "test_tilde",
                  0.6240377207533828
                ],
                [
                  "test_bracket",
                  "test_solvent2",
                  0.5883484054145521
                ],
                [
                  "test_mp4",
                  "test_solvent3",
                  0.6226998490772392
                ],
                [
                  "test_melting_point_was",
                  "test_melting_point",
                  0.9128709291752769
                ],
                [
                  "test_range_to",
                  "test_having",
                  0.6490831047035459
                ],
                [
                  "test_degrees_only",
                  "test_tm0",
                  0.4293769305575037
                ],
                [
                  "test_melting_point_colon",
                  "test_give_label",
                  0.6539985702138724
                ],
                [
                  "test_m_pt",
                  "test_of_about",
                  0.5926672593342223
                ],
                [
                  "test_mp1",
                  "test_mp4",
                  0.46980923864981705
                ],
                [
                  "test_melting_point",
                  "test_tm0",
                  0.6298438669252061
                ],
                [
                  "test_mp6",
                  "test_of_about",
                  0.38608369144856697
                ],
                [
                  "test_gave_label",
                  "test_range_to",
                  0.708834008900471
                ],
                [
                  "test_range_to",
                  "test_colon",
                  0.6918633884230079
                ],
                [
                  "test_mp7",
                  "test_range_to",
                  0.515779025308008
                ],
                [
                  "test_mp7",
                  "test_bracket_obtained",
                  0.5233791146525731
                ],
                [
                  "test_melting_point",
                  "test_of_about",
                  0.6440081861116378
                ],
                [
                  "test_range_to",
                  "test_cem_yield",
                  0.7343468193540316
                ],
                [
                  "test_mp9",
                  "test_melting_point_colon",
                  0.5853694070049635
                ],
                [
                  "test_give_label",
                  "test_solvent2",
                  0.677355662007225
                ],
                [
                  "test_bracket_obtained",
                  "test_range_to",
                  0.7544335361543179
                ],
                [
                  "test_mp4",
                  "test_m_pt",
                  0.6060915267313265
                ],
                [
                  "test_mp7",
                  "test_melting_point_range",
                  0.652640461959407
                ],
                [
                  "test_mp3",
                  "test_give_label",
                  0.6125171874850036
                ],
                [
                  "test_mp5",
                  "test_melting_at",
                  0.5669467095138407
                ],
                [
                  "test_mp5",
                  "test_range_to",
                  0.44293978391414907
                ],
                [
                  "test_afforded",
                  "test_bracket_obtained",
                  0.6303792792247442
                ],
                [
                  "test_melting_point_of",
                  "test_bracket_obtained",
                  0.5393598899705936
                ],
                [
                  "test_m_pt",
                  "test_bracket_obtained",
                  0.6197733194098475
                ],
                [
                  "test_give_label",
                  "test_solvent3",
                  0.6862103602064366
                ],
                [
                  "test_mp6",
                  "test_tilde",
                  0.4070386632407063
                ],
                [
                  "test_mp5",
                  "test_gave_label",
                  0.5126524163602468
                ],
                [
                  "test_mp9",
                  "test_solvent2",
                  0.599306773838415
                ],
                [
                  "test_melting_point_was",
                  "test_cem_yield",
                  0.5977687070220964
                ],
                [
                  "test_mp7",
                  "test_mp8",
                  0.6575433730910856
                ],
                [
                  "test_mp8",
                  "test_bracket_obtained",
                  0.41975697907115295
                ],
                [
                  "test_mp1",
                  "test_melting_point_colon",
                  0.5775502866109008
                ],
                [
                  "test_mp8",
                  "test_melting_range",
                  0.6081211398682971
                ],
                [
                  "test_mp2",
                  "test_mp5",
                  0.6020797289396148
                ],
                [
                  "test_give_label",
                  "test_tilde",
                  0.6270628803986196
                ],
                [
                  "test_mp2",
                  "test_afforded",
                  0.6500747741854638
                ],
                [
                  "test_mp9",
                  "test_tilde",
                  0.5672953457626895
                ],
                [
                  "test_mp5",
                  "test_melting_point_was",
                  0.5175491695067657
                ],
                [
                  "test_mp8",
                  "test_of_about",
                  0.4070663119804449
                ],
                [
                  "test_mp3",
                  "test_having",
                  0.5776508941874458
                ],
                [
                  "test_mp2",
                  "test_mp8",
                  0.5410897700310648
                ],
                [
                  "test_melting_point",
                  "test_tilde",
                  0.6797704848608184
                ],
                [
                  "test_melting_point",
                  "test_solvent3",
                  0.8500331705159768
                ],
                [
                  "test_mp2",
                  "test_bracket_obtained",
                  0.5225663435587974
                ],
                [
                  "test_gave_label",
                  "test_tilde",
                  0.6139406135149205
                ],
                [
                  "test_mp1",
                  "test_afforded",
                  0.6230201534126861
                ],
                [
                  "test_afforded",
                  "test_gave_label",
                  0.7149616862223859
                ],
                [
                  "test_tilde",
                  "test_tm0",
                  0.666312159195016
                ],
                [
                  "test_melting_point_of",
                  "test_range_to",
                  0.6216698721602092
                ],
                [
                  "test_melting_point_of",
                  "test_gave",
                  0.41678115475443384
                ],
                [
                  "test_mp1",
                  "test_bracket",
                  0.6781112260056126
                ],
                [
                  "test_mp8",
                  "test_range_to",
                  0.45568598056052745
                ],
                [
                  "test_cem_yield",
                  "test_tm0",
                  0.682048984263596
                ],
                [
                  "test_mp5",
                  "test_melting_range",
                  0.5666666666666667
                ],
                [
                  "test_mp2",
                  "test_of_about",
                  0.5659999567638939
                ],
                [
                  "test_mp6",
                  "test_melting_point_was",
                  0.5499631308702322
                ],
                [
                  "test_mp7",
                  "test_degrees_only",
                  0.5700715542877983
                ],
                [
                  "test_mp1",
                  "test_cem_yield",
                  0.6936202246133953
                ],
                [
                  "test_mp7",
                  "test_melting_range",
                  0.7374818456701372
                ],
                [
                  "test_afforded",
                  "test_range_to",
                  0.6843364477565327
                ],
                [
                  "test_m_pt",
                  "test_range_to",
                  0.6429194433426473
                ],
                [
                  "test_mp7",
                  "test_gave_label",
                  0.5969555529546483
                ],
                [
                  "test_melting_point_of",
                  "test_melting_point_was",
                  0.9200874124564722
                ],
                [
                  "test_give_label",
                  "test_solvent",
                  0.7571976388484817
                ],
                [
                  "test_mp8",
                  "test_melting_at",
                  0.6074559205553846
                ],
                [
                  "test_melting_point_colon",
                  "test_gave",
                  0.44769477620847115
                ],
                [
                  "test_mp7",
                  "test_of_about",
                  0.4794862386288527
                ],
                [
                  "test_gave",
                  "test_solvent2",
                  0.4616852379649859
                ],
                [
                  "test_mp2",
                  "test_melting_point_of",
                  0.6090001855940932
                ],
                [
                  "test_mp3",
                  "test_melting_point_range",
                  0.6998964726756152
                ],
                [
                  "test_melting_point_range",
                  "test_of_about",
                  0.6928304448026528
                ],
                [
                  "test_m_pt",
                  "test_solvent3",
                  0.784070202132019
                ],
                [
                  "test_melting_point_was",
                  "test_bracket",
                  0.5669467095138409
                ],
                [
                  "test_solvent3",
                  "test_tm0",
                  0.6203776439013834
                ],
                [
                  "test_melting_point_of",
                  "test_colon",
                  0.640105811358911
                ],
                [
                  "test_tilde",
                  "test_melting_at",
                  0.6797704848608184
                ],
                [
                  "test_melting_point",
                  "test_melting_point_colon",
                  0.9202643353333034
                ],
                [
                  "test_melting_point_of",
                  "test_give_label",
                  0.6088395348498794
                ],
                [
                  "test_melting_point_range",
                  "test_gave_label",
                  0.6294407455622117
                ],
                [
                  "test_degrees_only",
                  "test_melting_point_range",
                  0.6148754619013457
                ],
                [
                  "test_give_label",
                  "test_bracket",
                  0.6997023176561111
                ],
                [
                  "test_mp5",
                  "test_of_about",
                  0.4259713756852986
                ],
                [
                  "test_gave_label",
                  "test_solvent3",
                  0.7181848464596079
                ],
                [
                  "test_melting_point_was",
                  "test_melting_point_colon",
                  0.9142074905486913
                ],
                [
                  "test_of_about",
                  "test_solvent",
                  0.5974620914869887
                ],
                [
                  "test_melting_point_range",
                  "test_tm0",
                  0.6072306785645523
                ],
                [
                  "test_mp7",
                  "test_melting_at",
                  0.7482020418306247
                ],
                [
                  "test_solvent",
                  "test_tm0",
                  0.6362847629757779
                ],
                [
                  "test_mp6",
                  "test_melting_point_of",
                  0.5313148617302949
                ],
                [
                  "test_mp7",
                  "test_tm0",
                  0.4978768481584612
                ],
                [
                  "test_mp6",
                  "test_melting_point_colon",
                  0.587509704481518
                ],
                [
                  "test_mp5",
                  "test_tm0",
                  0.42756578441217674
                ],
                [
                  "test_of_about",
                  "test_solvent3",
                  0.5974620914869887
                ],
                [
                  "test_afforded",
                  "test_of_about",
                  0.6854202804692298
                ],
                [
                  "test_melting_at",
                  "test_having",
                  0.6900655593423543
                ],
                [
                  "test_mp1",
                  "test_mp2",
                  0.6521405955174384
                ],
                [
                  "test_mp5",
                  "test_mp8",
                  0.7167142005590644
                ],
                [
                  "test_degrees_only",
                  "test_m_pt",
                  0.6950480468569159
                ],
                [
                  "test_mp1",
                  "test_solvent",
                  0.6158950357943866
                ],
                [
                  "test_bracket",
                  "test_solvent3",
                  0.5960395606792698
                ],
                [
                  "test_tilde",
                  "test_melting_range",
                  0.7028634960055147
                ],
                [
                  "test_mp2",
                  "test_melting_point_was",
                  0.6303750805673781
                ],
                [
                  "test_mp4",
                  "test_tm0",
                  0.4556465897564383
                ],
                [
                  "test_bracket_obtained",
                  "test_solvent3",
                  0.5869391856534222
                ],
                [
                  "test_mp4",
                  "test_of_about",
                  0.43618430492216764
                ],
                [
                  "test_mp6",
                  "test_afforded",
                  0.44343337050786175
                ],
                [
                  "test_having",
                  "test_solvent",
                  0.5960395606792698
                ],
                [
                  "test_mp6",
                  "test_solvent3",
                  0.5951898958700064
                ],
                [
                  "test_melting_point_was",
                  "test_solvent3",
                  0.7759705701987263
                ],
                [
                  "test_solvent2",
                  "test_colon",
                  0.6875839387097933
                ],
                [
                  "test_mp8",
                  "test_tm0",
                  0.43811510771168916
                ],
                [
                  "test_mp2",
                  "test_range_to",
                  0.5808023194967749
                ],
                [
                  "test_mp9",
                  "test_melting_point",
                  0.6179143806533246
                ],
                [
                  "test_afforded",
                  "test_tm0",
                  0.6579490028442165
                ],
                [
                  "test_melting_range",
                  "test_colon",
                  0.7564886861514403
                ],
                [
                  "test_mp4",
                  "test_bracket",
                  0.5258011380119806
                ],
                [
                  "test_mp4",
                  "test_range_to",
                  0.4739205733550265
                ],
                [
                  "test_melting_point_was",
                  "test_tilde",
                  0.6419407387663695
                ],
                [
                  "test_range_to",
                  "test_solvent",
                  0.6765100914917385
                ],
                [
                  "test_mp9",
                  "test_degrees_only",
                  0.417423554968361
                ],
                [
                  "test_mp2",
                  "test_melting_point",
                  0.6905413026317789
                ],
                [
                  "test_melting_point",
                  "test_gave",
                  0.4725854085508103
                ],
                [
                  "test_of_about",
                  "test_bracket",
                  0.5573615359176036
                ],
                [
                  "test_mp8",
                  "test_m_pt",
                  0.5827715174143585
                ],
                [
                  "test_melting_point_range",
                  "test_solvent",
                  0.6697108225289159
                ],
                [
                  "test_mp7",
                  "test_tilde",
                  0.5055107012718832
                ],
                [
                  "test_mp4",
                  "test_bracket_obtained",
                  0.5177731682921968
                ],
                [
                  "test_mp8",
                  "test_mp9",
                  0.7777641644374811
                ],
                [
                  "test_melting_point_was",
                  "test_colon",
                  0.6625724621305176
                ],
                [
                  "test_bracket",
                  "test_solvent",
                  0.6125962151425828
                ],
                [
                  "test_degrees_only",
                  "test_melting_range",
                  0.6527533657682196
                ],
                [
                  "test_degrees_only",
                  "test_afforded",
                  0.5474691582052262
                ],
                [
                  "test_degrees_only",
                  "test_having",
                  0.46819109191731184
                ],
                [
                  "test_mp5",
                  "test_degrees_only",
                  0.44293978391414907
                ],
                [
                  "test_having",
                  "test_solvent3",
                  0.6457095240692089
                ],
                [
                  "test_degrees_only",
                  "test_colon",
                  0.5087230797227998
                ],
                [
                  "test_degrees_only",
                  "test_solvent3",
                  0.6765100914917385
                ],
                [
                  "test_gave_label",
                  "test_melting_range",
                  0.7306770072260991
                ],
                [
                  "test_bracket_obtained",
                  "test_tilde",
                  0.6271815075053181
                ],
                [
                  "test_mp7",
                  "test_m_pt",
                  0.7160390103945313
                ],
                [
                  "test_mp1",
                  "test_solvent3",
                  0.600497659899527
                ],
                [
                  "test_mp7",
                  "test_give_label",
                  0.5697001318001408
                ],
                [
                  "test_gave",
                  "test_tilde",
                  0.42406333521357437
                ],
                [
                  "test_mp2",
                  "test_gave",
                  0.42183120269766716
                ],
                [
                  "test_mp1",
                  "test_having",
                  0.5231143743471869
                ],
                [
                  "test_mp8",
                  "test_solvent2",
                  0.5910148054337526
                ],
                [
                  "test_mp7",
                  "test_solvent2",
                  0.7296418486438956
                ],
                [
                  "test_melting_point_of",
                  "test_solvent2",
                  0.7399853698407473
                ],
                [
                  "test_mp3",
                  "test_melting_point_of",
                  0.7076303701373625
                ],
                [
                  "test_mp4",
                  "test_mp7",
                  0.7890639581985629
                ],
                [
                  "test_mp3",
                  "test_mp6",
                  0.631586176939536
                ],
                [
                  "test_mp3",
                  "test_bracket_obtained",
                  0.5137830903923016
                ],
                [
                  "test_mp5",
                  "test_cem_yield",
                  0.5315619808967564
                ],
                [
                  "test_gave_label",
                  "test_solvent2",
                  0.7089175569585665
                ],
                [
                  "test_melting_point_of",
                  "test_tm0",
                  0.6139406135149205
                ],
                [
                  "test_mp9",
                  "test_bracket",
                  0.6040686963408963
                ],
                [
                  "test_cem_yield",
                  "test_solvent2",
                  0.6203339038421266
                ],
                [
                  "test_of_about",
                  "test_cem_yield",
                  0.5590868846039353
                ],
                [
                  "test_mp5",
                  "test_colon",
                  0.5346338310781813
                ],
                [
                  "test_give_label",
                  "test_bracket_obtained",
                  0.6890192121758832
                ],
                [
                  "test_mp8",
                  "test_give_label",
                  0.45336513297525605
                ],
                [
                  "test_tilde",
                  "test_solvent2",
                  0.6217618283580586
                ],
                [
                  "test_melting_at",
                  "test_melting_range",
                  0.9071147352221454
                ],
                [
                  "test_mp3",
                  "test_bracket",
                  0.521749194749951
                ],
                [
                  "test_mp6",
                  "test_solvent2",
                  0.587509704481518
                ],
                [
                  "test_melting_at",
                  "test_solvent3",
                  0.8500331705159768
                ],
                [
                  "test_melting_point_of",
                  "test_tilde",
                  0.6201736729460423
                ],
                [
                  "test_melting_point_was",
                  "test_solvent2",
                  0.7659576272164711
                ],
                [
                  "test_bracket_obtained",
                  "test_colon",
                  0.6571470397424246
                ],
                [
                  "test_gave_label",
                  "test_colon",
                  0.6943650748294137
                ],
                [
                  "test_give_label",
                  "test_range_to",
                  0.6691289711397209
                ],
                [
                  "test_mp3",
                  "test_gave_label",
                  0.6350852961085883
                ],
                [
                  "test_melting_point_of",
                  "test_of_about",
                  0.7004862622380466
                ],
                [
                  "test_mp3",
                  "test_degrees_only",
                  0.685248288864193
                ],
                [
                  "test_mp4",
                  "test_melting_point_of",
                  0.5571632067915716
                ],
                [
                  "test_bracket_obtained",
                  "test_solvent2",
                  0.5793654595023211
                ],
                [
                  "test_mp7",
                  "test_mp9",
                  0.5779060016016542
                ],
                [
                  "test_melting_point_colon",
                  "test_solvent",
                  0.7273340668525836
                ],
                [
                  "test_mp6",
                  "test_mp7",
                  0.7233178248398477
                ],
                [
                  "test_mp1",
                  "test_mp8",
                  0.45173283378470164
                ],
                [
                  "test_m_pt",
                  "test_melting_range",
                  0.8198915917499229
                ],
                [
                  "test_gave",
                  "test_bracket",
                  0.5796183046927177
                ],
                [
                  "test_melting_point_of",
                  "test_melting_range",
                  0.8444444444444443
                ],
                [
                  "test_gave",
                  "test_range_to",
                  0.4736677125283105
                ],
                [
                  "test_mp2",
                  "test_melting_at",
                  0.6905413026317789
                ],
                [
                  "test_afforded",
                  "test_melting_point_colon",
                  0.677355662007225
                ],
                [
                  "test_mp5",
                  "test_afforded",
                  0.5055542566164177
                ],
                [
                  "test_mp8",
                  "test_melting_point_of",
                  0.5357257660744522
                ],
                [
                  "test_afforded",
                  "test_melting_point_of",
                  0.6523280730534422
                ],
                [
                  "test_mp7",
                  "test_melting_point_of",
                  0.6598521777048596
                ],
                [
                  "test_mp2",
                  "test_gave_label",
                  0.6459422414661737
                ],
                [
                  "test_melting_point_colon",
                  "test_of_about",
                  0.6507614678256672
                ],
                [
                  "test_melting_point_was",
                  "test_of_about",
                  0.6270894413356964
                ],
                [
                  "test_melting_point",
                  "test_having",
                  0.7073171983259131
                ],
                [
                  "test_melting_range",
                  "test_having",
                  0.7150822278539669
                ],
                [
                  "test_of_about",
                  "test_tm0",
                  0.6973896739414052
                ],
                [
                  "test_mp4",
                  "test_mp9",
                  0.6770032003863301
                ],
                [
                  "test_range_to",
                  "test_tm0",
                  0.7769677791040542
                ],
                [
                  "test_mp5",
                  "test_having",
                  0.5477225575051661
                ],
                [
                  "test_mp1",
                  "test_melting_at",
                  0.5936168397046637
                ],
                [
                  "test_mp3",
                  "test_melting_at",
                  0.8023774198028778
                ],
                [
                  "test_bracket",
                  "test_tm0",
                  0.6805446536716204
                ],
                [
                  "test_mp8",
                  "test_bracket",
                  0.42626522732350247
                ],
                [
                  "test_mp6",
                  "test_mp9",
                  0.6934352751717213
                ],
                [
                  "test_colon",
                  "test_tm0",
                  0.641155664468923
                ],
                [
                  "test_mp1",
                  "test_gave_label",
                  0.6003002251876641
                ],
                [
                  "test_afforded",
                  "test_bracket",
                  0.6401531842385697
                ],
                [
                  "test_mp3",
                  "test_range_to",
                  0.5710402407201608
                ],
                [
                  "test_melting_point_was",
                  "test_tm0",
                  0.5749661560353624
                ],
                [
                  "test_mp7",
                  "test_bracket",
                  0.531494003452734
                ],
                [
                  "test_mp8",
                  "test_melting_point_colon",
                  0.5910148054337526
                ],
                [
                  "test_m_pt",
                  "test_solvent2",
                  0.7739527433912544
                ],
                [
                  "test_bracket_obtained",
                  "test_tm0",
                  0.6701540487876271
                ],
                [
                  "test_afforded",
                  "test_solvent2",
                  0.677355662007225
                ],
                [
                  "test_melting_point",
                  "test_melting_point_range",
                  0.872278375988647
                ],
                [
                  "test_mp9",
                  "test_give_label",
                  0.5967081414398551
                ],
                [
                  "test_melting_at",
                  "test_tm0",
                  0.6298438669252061
                ],
                [
                  "test_degrees_only",
                  "test_gave",
                  0.34614178992453465
                ],
                [
                  "test_melting_point_colon",
                  "test_cem_yield",
                  0.6485308994713141
                ],
                [
                  "test_mp5",
                  "test_solvent3",
                  0.5622440938352591
                ],
                [
                  "test_degrees_only",
                  "test_cem_yield",
                  0.44060809161241893
                ],
                [
                  "test_mp1",
                  "test_degrees_only",
                  0.3958262466638396
                ],
                [
                  "test_mp9",
                  "test_bracket_obtained",
                  0.5948457318923417
                ],
                [
                  "test_degrees_only",
                  "test_solvent",
                  0.6088590823425646
                ],
                [
                  "test_melting_point",
                  "test_melting_at",
                  0.9428571428571428
                ],
                [
                  "test_mp9",
                  "test_melting_point_of",
                  0.5449492609130661
                ],
                [
                  "test_mp4",
                  "test_tilde",
                  0.4342571563774075
                ],
                [
                  "test_mp3",
                  "test_mp8",
                  0.62066103936542
                ],
                [
                  "test_mp5",
                  "test_gave",
                  0.5372569573006374
                ],
                [
                  "test_melting_point",
                  "test_gave_label",
                  0.7216053531635458
                ],
                [
                  "test_mp6",
                  "test_m_pt",
                  0.5765566601970551
                ],
                [
                  "test_mp2",
                  "test_having",
                  0.5306686305052324
                ],
                [
                  "test_gave_label",
                  "test_tm0",
                  0.6666866984169955
                ],
                [
                  "test_melting_point_range",
                  "test_solvent3",
                  0.7653837971759039
                ],
                [
                  "test_bracket_obtained",
                  "test_melting_range",
                  0.6442354241315423
                ],
                [
                  "test_melting_point_was",
                  "test_m_pt",
                  0.7457995248167776
                ],
                [
                  "test_range_to",
                  "test_melting_range",
                  0.7149203529842406
                ],
                [
                  "test_melting_point_colon",
                  "test_tm0",
                  0.6123724356957946
                ],
                [
                  "test_mp7",
                  "test_melting_point_colon",
                  0.7296418486438956
                ],
                [
                  "test_of_about",
                  "test_melting_range",
                  0.6626221399549089
                ],
                [
                  "test_mp3",
                  "test_mp4",
                  0.6454972243679028
                ],
                [
                  "test_gave",
                  "test_give_label",
                  0.5989813235437299
                ],
                [
                  "test_gave",
                  "test_bracket_obtained",
                  0.5707686505883183
                ],
                [
                  "test_melting_at",
                  "test_colon",
                  0.7258117669812438
                ],
                [
                  "test_mp2",
                  "test_melting_point_range",
                  0.6023442460127328
                ],
                [
                  "test_melting_point_was",
                  "test_melting_range",
                  0.8740830418336486
                ],
                [
                  "test_mp9",
                  "test_range_to",
                  0.6715074579925807
                ],
                [
                  "test_melting_point_range",
                  "test_gave",
                  0.4379901597295465
                ],
                [
                  "test_mp6",
                  "test_melting_range",
                  0.5938224925220942
                ],
                [
                  "test_melting_at",
                  "test_cem_yield",
                  0.6548228100133979
                ],
                [
                  "test_give_label",
                  "test_melting_at",
                  0.6903591418101531
                ],
                [
                  "test_afforded",
                  "test_tilde",
                  0.6068350455470511
                ],
                [
                  "test_melting_point_of",
                  "test_m_pt",
                  0.7205107927499322
                ],
                [
                  "test_mp8",
                  "test_tilde",
                  0.41754865529128316
                ],
                [
                  "test_bracket",
                  "test_melting_range",
                  0.6542241659089485
                ],
                [
                  "test_melting_point_colon",
                  "test_tilde",
                  0.7105849466949241
                ],
                [
                  "test_tilde",
                  "test_solvent",
                  0.6973779695320638
                ],
                [
                  "test_mp5",
                  "test_melting_point",
                  0.5669467095138407
                ],
                [
                  "test_mp6",
                  "test_cem_yield",
                  0.5076298340185719
                ],
                [
                  "test_degrees_only",
                  "test_bracket",
                  0.4469096786483431
                ],
                [
                  "test_melting_point",
                  "test_cem_yield",
                  0.6548228100133979
                ],
                [
                  "test_cem_yield",
                  "test_solvent",
                  0.6141603882180455
                ],
                [
                  "test_mp4",
                  "test_melting_at",
                  0.6317636935053224
                ],
                [
                  "test_bracket_obtained",
                  "test_bracket",
                  0.9744743035863842
                ],
                [
                  "test_mp4",
                  "test_melting_range",
                  0.6324555320336759
                ],
                [
                  "test_range_to",
                  "test_solvent3",
                  0.659597339204445
                ],
                [
                  "test_melting_point_was",
                  "test_melting_point_range",
                  0.8872807226269156
                ],
                [
                  "test_mp7",
                  "test_solvent",
                  0.5702246141789408
                ],
                [
                  "test_of_about",
                  "test_melting_at",
                  0.6225412465745832
                ],
                [
                  "test_mp1",
                  "test_melting_point_range",
                  0.517799132897097
                ],
                [
                  "test_mp3",
                  "test_melting_point",
                  0.8023774198028778
                ],
                [
                  "test_of_about",
                  "test_colon",
                  0.545333506097419
                ],
                [
                  "test_mp8",
                  "test_melting_point",
                  0.6074559205553846
                ],
                [
                  "test_gave_label",
                  "test_bracket",
                  0.7423218080230883
                ],
                [
                  "test_bracket",
                  "test_colon",
                  0.6673359735450366
                ],
                [
                  "test_melting_point_colon",
                  "test_solvent3",
                  0.8052627168725033
                ],
                [
                  "test_mp4",
                  "test_colon",
                  0.6407751622464718
                ],
                [
                  "test_melting_point_range",
                  "test_give_label",
                  0.6021853510670764
                ],
                [
                  "test_melting_point_of",
                  "test_melting_point",
                  0.8819171036881969
                ],
                [
                  "test_mp2",
                  "test_mp6",
                  0.5450525003306662
                ],
                [
                  "test_melting_point_colon",
                  "test_solvent2",
                  0.7948717948717948
                ],
                [
                  "test_bracket_obtained",
                  "test_solvent",
                  0.6195469181897234
                ],
                [
                  "test_mp5",
                  "test_solvent",
                  0.4896964688242579
                ],
                [
                  "test_mp9",
                  "test_melting_range",
                  0.6357741377319104
                ],
                [
                  "test_solvent3",
                  "test_colon",
                  0.696572345547434
                ],
                [
                  "test_mp4",
                  "test_gave",
                  0.6531050382560849
                ],
                [
                  "test_solvent",
                  "test_colon",
                  0.5857540178467059
                ],
                [
                  "test_afforded",
                  "test_colon",
                  0.6405734512954462
                ],
                [
                  "test_melting_point_was",
                  "test_range_to",
                  0.6274022157855923
                ],
                [
                  "test_m_pt",
                  "test_cem_yield",
                  0.6896865432884053
                ],
                [
                  "test_afforded",
                  "test_give_label",
                  0.6808510638297872
                ],
                [
                  "test_melting_point_range",
                  "test_having",
                  0.6922186552431729
                ],
                [
                  "test_m_pt",
                  "test_having",
                  0.6293827811317889
                ],
                [
                  "test_solvent2",
                  "test_solvent3",
                  0.9091675835657295
                ],
                [
                  "test_melting_point_range",
                  "test_cem_yield",
                  0.5711877772788091
                ],
                [
                  "test_mp4",
                  "test_give_label",
                  0.5304452123616652
                ],
                [
                  "test_mp3",
                  "test_solvent",
                  0.6812012094229563
                ],
                [
                  "test_bracket",
                  "test_having",
                  0.5937500000000001
                ],
                [
                  "test_gave_label",
                  "test_cem_yield",
                  0.6821364068273881
                ],
                [
                  "test_mp9",
                  "test_melting_at",
                  0.6179143806533246
                ],
                [
                  "test_melting_point_colon",
                  "test_m_pt",
                  0.8006407690254356
                ],
                [
                  "test_mp7",
                  "test_melting_point",
                  0.7482020418306247
                ],
                [
                  "test_mp3",
                  "test_afforded",
                  0.6125171874850036
                ],
                [
                  "test_of_about",
                  "test_having",
                  0.6740186015747764
                ],
                [
                  "test_having",
                  "test_tm0",
                  0.6405126152203486
                ],
                [
                  "test_mp9",
                  "test_gave",
                  0.4562770625476131
                ],
                [
                  "test_mp5",
                  "test_mp7",
                  0.6550003234570297
                ],
                [
                  "test_mp8",
                  "test_solvent",
                  0.4726901187474408
                ],
                [
                  "test_mp4",
                  "test_mp6",
                  0.7624278685657041
                ],
                [
                  "test_range_to",
                  "test_solvent2",
                  0.6510860492118233
                ],
                [
                  "test_melting_point_range",
                  "test_colon",
                  0.6331099093758495
                ],
                [
                  "test_bracket_obtained",
                  "test_cem_yield",
                  0.6813625706091037
                ],
                [
                  "test_afforded",
                  "test_melting_range",
                  0.7175608803587865
                ],
                [
                  "test_mp1",
                  "test_melting_point_of",
                  0.5235208439728776
                ],
                [
                  "test_mp3",
                  "test_solvent2",
                  0.7893522173763262
                ],
                [
                  "test_mp1",
                  "test_bracket_obtained",
                  0.6677577748708329
                ],
                [
                  "test_melting_point",
                  "test_solvent",
                  0.7677718959499146
                ],
                [
                  "test_melting_range",
                  "test_solvent",
                  0.7496587917803454
                ],
                [
                  "test_mp6",
                  "test_solvent",
                  0.4591464910997192
                ],
                [
                  "test_melting_point_was",
                  "test_gave",
                  0.431409481018456
                ],
                [
                  "test_give_label",
                  "test_colon",
                  0.6548084168797894
                ],
                [
                  "test_degrees_only",
                  "test_melting_point",
                  0.7049073768502414
                ],
                [
                  "test_mp6",
                  "test_colon",
                  0.5524314742589911
                ],
                [
                  "test_bracket",
                  "test_cem_yield",
                  0.6919269613887299
                ],
                [
                  "test_mp3",
                  "test_solvent3",
                  0.7996709849747747
                ],
                [
                  "test_m_pt",
                  "test_bracket",
                  0.6293827811317889
                ],
                [
                  "test_give_label",
                  "test_having",
                  0.610378617529799
                ],
                [
                  "test_gave",
                  "test_melting_range",
                  0.48190321018481413
                ],
                [
                  "test_mp1",
                  "test_of_about",
                  0.5183356998163987
                ],
                [
                  "test_mp9",
                  "test_having",
                  0.6396021490668314
                ],
                [
                  "test_gave",
                  "test_gave_label",
                  0.6216513344949798
                ],
                [
                  "test_mp2",
                  "test_bracket",
                  0.5306686305052324
                ],
                [
                  "test_mp3",
                  "test_mp7",
                  0.7843814360935217
                ],
                [
                  "test_melting_point_of",
                  "test_bracket",
                  0.5477225575051662
                ],
                [
                  "test_melting_range",
                  "test_solvent3",
                  0.8222064167913465
                ],
                [
                  "test_gave",
                  "test_having",
                  0.5707011000051374
                ],
                [
                  "test_mp8",
                  "test_cem_yield",
                  0.5644118817570541
                ],
                [
                  "test_melting_point_was",
                  "test_bracket_obtained",
                  0.5737985964123903
                ],
                [
                  "test_mp1",
                  "test_mp5",
                  0.4563120869763595
                ],
                [
                  "test_gave_label",
                  "test_solvent",
                  0.7438343052617368
                ],
                [
                  "test_mp1",
                  "test_range_to",
                  0.8411307741606592
                ],
                [
                  "test_mp3",
                  "test_melting_point_colon",
                  0.7893522173763262
                ],
                [
                  "test_mp2",
                  "test_give_label",
                  0.6229883252610695
                ],
                [
                  "test_mp9",
                  "test_gave_label",
                  0.5917680237554188
                ],
                [
                  "test_mp1",
                  "test_gave",
                  0.41464159565060926
                ],
                [
                  "test_melting_point_range",
                  "test_melting_range",
                  0.857194615414523
                ],
                [
                  "test_m_pt",
                  "test_gave",
                  0.4514137626082029
                ],
                [
                  "test_melting_point_of",
                  "test_cem_yield",
                  0.5774994360359823
                ],
                [
                  "test_mp2",
                  "test_mp3",
                  0.8136762043449725
                ],
                [
                  "test_melting_point_of",
                  "test_melting_point_colon",
                  0.8832083446486338
                ],
                [
                  "test_mp2",
                  "test_mp4",
                  0.5627418551130967
                ],
                [
                  "test_afforded",
                  "test_melting_at",
                  0.7150148254462301
                ],
                [
                  "test_afforded",
                  "test_cem_yield",
                  0.6421348198275034
                ],
                [
                  "test_gave_label",
                  "test_give_label",
                  0.8994679278281629
                ],
                [
                  "test_m_pt",
                  "test_colon",
                  0.7644550571430176
                ],
                [
                  "test_melting_point",
                  "test_colon",
                  0.7258117669812438
                ],
                [
                  "test_gave",
                  "test_melting_at",
                  0.4725854085508103
                ],
                [
                  "test_mp2",
                  "test_cem_yield",
                  0.5395355750348142
                ],
                [
                  "test_mp2",
                  "test_solvent",
                  0.6928465180980947
                ],
                [
                  "test_melting_point",
                  "test_bracket",
                  0.6210590034081188
                ],
                [
                  "test_mp4",
                  "test_cem_yield",
                  0.5958911146633465
                ],
                [
                  "test_of_about",
                  "test_gave",
                  0.4216499993948271
                ],
                [
                  "test_mp1",
                  "test_melting_point_was",
                  0.5418955560352877
                ],
                [
                  "test_melting_point_range",
                  "test_melting_at",
                  0.8224338973607243
                ],
                [
                  "test_melting_point_of",
                  "test_solvent3",
                  0.7496587917803454
                ],
                [
                  "test_mp1",
                  "test_give_label",
                  0.5953303688165668
                ],
                [
                  "test_mp1",
                  "test_colon",
                  0.6206098493873468
                ],
                [
                  "test_mp3",
                  "test_tilde",
                  0.6076436202502
                ],
                [
                  "test_melting_point",
                  "test_give_label",
                  0.6903591418101531
                ],
                [
                  "test_melting_point_was",
                  "test_give_label",
                  0.6302087912488812
                ],
                [
                  "test_mp6",
                  "test_give_label",
                  0.45872417638744317
                ],
                [
                  "test_melting_point_of",
                  "test_solvent",
                  0.6771111667693442
                ],
                [
                  "test_m_pt",
                  "test_solvent",
                  0.7029594915666377
                ],
                [
                  "test_of_about",
                  "test_give_label",
                  0.5927959182436582
                ],
                [
                  "test_mp2",
                  "test_colon",
                  0.5255382728122436
                ],
                [
                  "test_m_pt",
                  "test_give_label",
                  0.7293249574894729
                ],
                [
                  "test_melting_at",
                  "test_solvent2",
                  0.8390645410391885
                ],
                [
                  "test_mp9",
                  "test_melting_point_range",
                  0.5389933524563126
                ],
                [
                  "test_mp6",
                  "test_bracket",
                  0.42796049251091295
                ],
                [
                  "test_degrees_only",
                  "test_melting_at",
                  0.7049073768502414
                ],
                [
                  "test_of_about",
                  "test_gave_label",
                  0.6224949798994366
                ],
                [
                  "test_mp6",
                  "test_gave",
                  0.5037398929091066
                ],
                [
                  "test_mp3",
                  "test_tm0",
                  0.608697642933518
                ],
                [
                  "test_give_label",
                  "test_cem_yield",
                  0.6678202126206035
                ],
                [
                  "test_mp9",
                  "test_tm0",
                  0.5974401492490541
                ],
                [
                  "test_melting_range",
                  "test_cem_yield",
                  0.7087493078623419
                ],
                [
                  "test_mp4",
                  "test_gave_label",
                  0.5590169943749475
                ],
                [
                  "test_mp9",
                  "test_cem_yield",
                  0.6667107103139691
                ],
                [
                  "test_mp1",
                  "test_mp6",
                  0.4178949325322989
                ],
                [
                  "test_melting_point_colon",
                  "test_melting_point_range",
                  0.8735555046022884
                ],
                [
                  "test_of_about",
                  "test_range_to",
                  0.6223118910655419
                ],
                [
                  "test_afforded",
                  "test_melting_point",
                  0.7150148254462301
                ],
                [
                  "test_mp5",
                  "test_m_pt",
                  0.5403830945624492
                ],
                [
                  "test_tilde",
                  "test_colon",
                  0.5683985600588052
                ],
                [
                  "test_mp1",
                  "test_mp9",
                  0.6443860762255926
                ],
                [
                  "test_afforded",
                  "test_melting_point_range",
                  0.6451985904290104
                ],
                [
                  "test_mp4",
                  "test_mp8",
                  0.7358601640108341
                ],
                [
                  "test_mp1",
                  "test_m_pt",
                  0.5694947974514994
                ],
                [
                  "test_mp4",
                  "test_mp5",
                  0.8244509614010417
                ],
                [
                  "test_having",
                  "test_colon",
                  0.6573757351339167
                ],
                [
                  "test_melting_range",
                  "test_tm0",
                  0.6724111481353892
                ],
                [
                  "test_cem_yield",
                  "test_colon",
                  0.8334551405994551
                ],
                [
                  "test_mp3",
                  "test_cem_yield",
                  0.5947661473435083
                ],
                [
                  "test_mp4",
                  "test_melting_point_was",
                  0.5767187099094084
                ],
                [
                  "test_of_about",
                  "test_bracket_obtained",
                  0.5616156927828213
                ],
                [
                  "test_give_label",
                  "test_tm0",
                  0.6436457636519509
                ],
                [
                  "test_mp8",
                  "test_solvent3",
                  0.5987408170800917
                ],
                [
                  "test_mp8",
                  "test_having",
                  0.5749623996456544
                ],
                [
                  "test_having",
                  "test_solvent2",
                  0.6373774391990982
                ],
                [
                  "test_degrees_only",
                  "test_melting_point_colon",
                  0.6677805632941778
                ],
                [
                  "test_mp9",
                  "test_of_about",
                  0.5084813415281891
                ],
                [
                  "test_degrees_only",
                  "test_solvent2",
                  0.6677805632941778
                ],
                [
                  "test_gave",
                  "test_cem_yield",
                  0.5230923994123579
                ],
                [
                  "test_mp9",
                  "test_m_pt",
                  0.5802588531856595
                ],
                [
                  "test_degrees_only",
                  "test_tilde",
                  0.5204834387696163
                ],
                [
                  "test_mp4",
                  "test_solvent",
                  0.4916051440083467
                ],
                [
                  "test_melting_point_of",
                  "test_having",
                  0.6998677123677123
                ],
                [
                  "test_melting_point_colon",
                  "test_bracket",
                  0.5883484054145521
                ],
                [
                  "test_mp3",
                  "test_mp9",
                  0.5720775535473553
                ],
                [
                  "test_melting_point_colon",
                  "test_range_to",
                  0.6510860492118233
                ],
                [
                  "test_mp1",
                  "test_tm0",
                  0.7352735311618158
                ],
                [
                  "test_mp6",
                  "test_melting_point",
                  0.602454425147584
                ],
                [
                  "test_mp1",
                  "test_mp3",
                  0.606521119061709
                ],
                [
                  "test_solvent2",
                  "test_tm0",
                  0.6123724356957946
                ],
                [
                  "test_mp8",
                  "test_colon",
                  0.6066418841141332
                ],
                [
                  "test_mp8",
                  "test_degrees_only",
                  0.44555962543696015
                ],
                [
                  "test_afforded",
                  "test_melting_point_was",
                  0.6527162480791984
                ],
                [
                  "test_mp7",
                  "test_having",
                  0.5846434037980074
                ],
                [
                  "test_mp8",
                  "test_afforded",
                  0.48170045378620957
                ],
                [
                  "test_mp5",
                  "test_mp6",
                  0.668050304087356
                ],
                [
                  "test_gave_label",
                  "test_having",
                  0.6293597937587053
                ],
                [
                  "test_melting_point_colon",
                  "test_gave_label",
                  0.6835990727814749
                ],
                [
                  "test_bracket",
                  "test_range_to",
                  0.7661308776828739
                ],
                [
                  "test_melting_point_was",
                  "test_having",
                  0.6771863474748655
                ],
                [
                  "test_gave",
                  "test_tm0",
                  0.45407077654432665
                ],
                [
                  "test_mp7",
                  "test_cem_yield",
                  0.5845872177997229
                ],
                [
                  "test_mp5",
                  "test_mp9",
                  0.6811865761413326
                ],
                [
                  "test_tilde",
                  "test_having",
                  0.5236781282918755
                ],
                [
                  "test_mp5",
                  "test_melting_point_of",
                  0.49999999999999994
                ],
                [
                  "test_melting_point_colon",
                  "test_bracket_obtained",
                  0.5793654595023211
                ],
                [
                  "test_mp4",
                  "test_degrees_only",
                  0.4633890050582482
                ],
                [
                  "test_mp5",
                  "test_bracket_obtained",
                  0.44946657497549475
                ],
                [
                  "test_melting_point_range",
                  "test_bracket_obtained",
                  0.5334650693692645
                ],
                [
                  "test_melting_point_range",
                  "test_range_to",
                  0.6302473484488793
                ],
                [
                  "test_bracket_obtained",
                  "test_having",
                  0.5949422064001083
                ],
                [
                  "test_mp7",
                  "test_colon",
                  0.6860773857056911
                ],
                [
                  "test_mp6",
                  "test_having",
                  0.5563486402641868
                ],
                [
                  "test_tilde",
                  "test_cem_yield",
                  0.659321492182431
                ],
                [
                  "test_cem_yield",
                  "test_having",
                  0.6919269613887299
                ],
                [
                  "test_afforded",
                  "test_solvent",
                  0.7098727864204516
                ],
                [
                  "test_mp2",
                  "test_melting_point_colon",
                  0.6839061884675605
                ],
                [
                  "test_mp3",
                  "test_m_pt",
                  0.79115480528524
                ],
                [
                  "test_mp1",
                  "test_tilde",
                  0.8555594555505667
                ],
                [
                  "test_mp4",
                  "test_melting_point",
                  0.6317636935053224
                ],
                [
                  "test_mp9",
                  "test_colon",
                  0.6540472290116195
                ],
                [
                  "test_mp5",
                  "test_bracket",
                  0.45643546458763845
                ],
                [
                  "test_mp1",
                  "test_melting_range",
                  0.6225653279677463
                ],
                [
                  "test_mp2",
                  "test_melting_range",
                  0.6920456654478331
                ],
                [
                  "test_mp5",
                  "test_melting_point_colon",
                  0.5549890273805604
                ],
                [
                  "test_mp3",
                  "test_mp5",
                  0.5919600211726013
                ],
                [
                  "test_mp9",
                  "test_solvent3",
                  0.607141181829273
                ],
                [
                  "test_mp8",
                  "test_gave",
                  0.3903635431347658
                ],
                [
                  "test_mp5",
                  "test_give_label",
                  0.48924605479008165
                ],
                [
                  "test_mp6",
                  "test_melting_point_range",
                  0.5255079675749084
                ],
                [
                  "test_mp9",
                  "test_solvent",
                  0.5506629323567825
                ],
                [
                  "test_gave",
                  "test_solvent3",
                  0.48189394664550395
                ],
                [
                  "test_m_pt",
                  "test_melting_at",
                  0.816982446237566
                ],
                [
                  "test_gave",
                  "test_colon",
                  0.4433768833680869
                ],
                [
                  "test_mp9",
                  "test_afforded",
                  0.6094040593428307
                ],
                [
                  "test_melting_point_of",
                  "test_melting_at",
                  0.8315218406202999
                ],
                [
                  "test_mp5",
                  "test_solvent2",
                  0.5549890273805604
                ],
                [
                  "test_melting_point",
                  "test_solvent2",
                  0.8390645410391885
                ],
                [
                  "test_mp7",
                  "test_afforded",
                  0.5507101274068028
                ],
                [
                  "test_afforded",
                  "test_gave",
                  0.4715384887471917
                ],
                [
                  "test_mp4",
                  "test_melting_point_range",
                  0.5510738085794118
                ],
                [
                  "test_mp3",
                  "test_melting_point_was",
                  0.7324670207647144
                ],
                [
                  "test_mp3",
                  "test_colon",
                  0.6592443967173135
                ],
                [
                  "test_range_to",
                  "test_melting_at",
                  0.7049073768502414
                ],
                [
                  "test_mp5",
                  "test_tilde",
                  0.43412157106222965
                ],
                [
                  "test_give_label",
                  "test_melting_range",
                  0.695816611257005
                ],
                [
                  "test_bracket",
                  "test_melting_at",
                  0.6210590034081188
                ],
                [
                  "test_melting_point_was",
                  "test_gave_label",
                  0.6587325492402598
                ],
                [
                  "test_mp6",
                  "test_melting_at",
                  0.602454425147584
                ],
                [
                  "test_afforded",
                  "test_having",
                  0.6252659008841843
                ],
                [
                  "test_solvent",
                  "test_solvent3",
                  0.7631578947368423
                ],
                [
                  "test_mp1",
                  "test_solvent2",
                  0.5775502866109008
                ],
                [
                  "test_mp2",
                  "test_mp7",
                  0.6769132678416133
                ],
                [
                  "test_melting_point_was",
                  "test_melting_at",
                  0.8607068760795468
                ],
                [
                  "test_mp7",
                  "test_solvent3",
                  0.7391800554171455
                ],
                [
                  "test_melting_point_range",
                  "test_bracket",
                  0.5417363388859614
                ],
                [
                  "test_mp4",
                  "test_having",
                  0.5979699216606839
                ],
                [
                  "test_mp2",
                  "test_solvent2",
                  0.6839061884675605
                ],
                [
                  "test_cem_yield",
                  "test_solvent3",
                  0.6284431879440466
                ],
                [
                  "test_degrees_only",
                  "test_melting_point_of",
                  0.6216698721602092
                ],
                [
                  "test_mp7",
                  "test_gave",
                  0.5346089243842743
                ],
                [
                  "test_degrees_only",
                  "test_bracket_obtained",
                  0.44008622942335207
                ],
                [
                  "test_degrees_only",
                  "test_give_label",
                  0.5474691582052262
                ],
                [
                  "test_melting_point_of",
                  "test_gave_label",
                  0.6363961030678927
                ],
                [
                  "test_gave_label",
                  "test_melting_at",
                  0.7216053531635458
                ],
                [
                  "test_mp2",
                  "test_mp9",
                  0.5656946608558314
                ],
                [
                  "test_melting_point",
                  "test_melting_range",
                  0.9071147352221454
                ],
                [
                  "test_melting_range",
                  "test_solvent2",
                  0.8115968572446906
                ],
                [
                  "test_m_pt",
                  "test_gave_label",
                  0.7642171012073583
                ],
                [
                  "test_bracket_obtained",
                  "test_melting_at",
                  0.6115766297251507
                ],
                [
                  "test_mp9",
                  "test_melting_point_was",
                  0.5640760748177662
                ],
                [
                  "test_mp1",
                  "test_mp7",
                  0.518993352426189
                ],
                [
                  "test_mp6",
                  "test_degrees_only",
                  0.45902324683737294
                ],
                [
                  "test_tilde",
                  "test_solvent3",
                  0.6298897789321867
                ],
                [
                  "test_mp6",
                  "test_gave_label",
                  0.480670319495552
                ],
                [
                  "test_mp3",
                  "test_of_about",
                  0.5796736197002104
                ],
                [
                  "test_gave",
                  "test_solvent",
                  0.5102406493893571
                ],
                [
                  "test_melting_point",
                  "test_m_pt",
                  0.816982446237566
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_melting_range",
                "false"
              ],
              [
                "test_bracket_obtained",
                "false"
              ],
              [
                "test_solvent3",
                "false"
              ],
              [
                "test_mp8",
                "false"
              ],
              [
                "test_melting_point_of",
                "false"
              ],
              [
                "test_degrees_only",
                "false"
              ],
              [
                "test_having",
                "false"
              ],
              [
                "test_colon",
                "false"
              ],
              [
                "test_m_pt",
                "false"
              ],
              [
                "test_gave",
                "false"
              ],
              [
                "test_mp7",
                "false"
              ],
              [
                "test_mp6",
                "false"
              ],
              [
                "test_melting_point_colon",
                "false"
              ],
              [
                "test_mp4",
                "false"
              ],
              [
                "test_tm0",
                "false"
              ],
              [
                "test_solvent",
                "false"
              ],
              [
                "test_mp1",
                "false"
              ],
              [
                "test_range_to",
                "false"
              ],
              [
                "test_melting_at",
                "false"
              ],
              [
                "test_cem_yield",
                "false"
              ],
              [
                "test_mp3",
                "false"
              ],
              [
                "test_solvent2",
                "false"
              ],
              [
                "test_gave_label",
                "false"
              ],
              [
                "test_mp5",
                "false"
              ],
              [
                "test_mp2",
                "false"
              ],
              [
                "test_tilde",
                "false"
              ],
              [
                "test_melting_point",
                "false"
              ],
              [
                "test_of_about",
                "false"
              ],
              [
                "test_melting_point_range",
                "false"
              ],
              [
                "test_melting_point_was",
                "false"
              ],
              [
                "test_give_label",
                "false"
              ],
              [
                "test_mp9",
                "false"
              ],
              [
                "test_bracket",
                "false"
              ],
              [
                "test_afforded",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 34
      },
      {
        "name": "TestParseMpCompound",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_mpc1",
                  "[]"
                ],
                [
                  "test_mpc2",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_mpc1",
                  "[]"
                ],
                [
                  "test_mpc2",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_mpc1",
                  "false"
                ],
                [
                  "test_mpc2",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_mpc1",
                  "false"
                ],
                [
                  "test_mpc2",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_mpc1",
                  "false"
                ],
                [
                  "test_mpc2",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_mpc1",
                  "false"
                ],
                [
                  "test_mpc2",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_mpc1",
                "false"
              ],
              [
                "test_mpc2",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_mpc1",
                "false"
              ],
              [
                "test_mpc2",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_mpc1",
                []
              ],
              [
                "test_mpc2",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_mpc1",
                "false"
              ],
              [
                "test_mpc2",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_mpc1",
                "false"
              ],
              [
                "test_mpc2",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_mpc1",
                  "0"
                ],
                [
                  "test_mpc2",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_mpc1",
                  "0"
                ],
                [
                  "test_mpc2",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_mpc1",
                "false"
              ],
              [
                "test_mpc2",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_mpc1",
                "false"
              ],
              [
                "test_mpc2",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_mpc1",
                "0"
              ],
              [
                "test_mpc2",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_mpc1",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_mpc2",
                [
                  "s",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_mpc1",
                []
              ],
              [
                "test_mpc2",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7091710569671235,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_mpc1",
                  "test_mpc2",
                  0.7091710569671235
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_mpc1",
                "false"
              ],
              [
                "test_mpc2",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_reader_acs.py",
    "testCases": [
      {
        "name": "TestAcsHtmlReader",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_document_usage",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_detect",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_direct_usage",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_document_usage",
                  "[]"
                ],
                [
                  "test_detect",
                  "[]"
                ],
                [
                  "test_direct_usage",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_document_usage",
                  "false"
                ],
                [
                  "test_detect",
                  "false"
                ],
                [
                  "test_direct_usage",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_document_usage",
                  "false"
                ],
                [
                  "test_detect",
                  "false"
                ],
                [
                  "test_direct_usage",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_document_usage",
                  "false"
                ],
                [
                  "test_detect",
                  "false"
                ],
                [
                  "test_direct_usage",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_document_usage",
                  "false"
                ],
                [
                  "test_detect",
                  "false"
                ],
                [
                  "test_direct_usage",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                "false"
              ],
              [
                "test_detect",
                "false"
              ],
              [
                "test_direct_usage",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                "false"
              ],
              [
                "test_detect",
                "false"
              ],
              [
                "test_direct_usage",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                []
              ],
              [
                "test_detect",
                []
              ],
              [
                "test_direct_usage",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                "false"
              ],
              [
                "test_detect",
                "false"
              ],
              [
                "test_direct_usage",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_document_usage",
                "true"
              ],
              [
                "test_detect",
                "false"
              ],
              [
                "test_direct_usage",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_document_usage",
                  "0"
                ],
                [
                  "test_detect",
                  "0"
                ],
                [
                  "test_direct_usage",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_document_usage",
                  "0"
                ],
                [
                  "test_detect",
                  "0"
                ],
                [
                  "test_direct_usage",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                "false"
              ],
              [
                "test_detect",
                "false"
              ],
              [
                "test_direct_usage",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                "false"
              ],
              [
                "test_detect",
                "false"
              ],
              [
                "test_direct_usage",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                "1"
              ],
              [
                "test_detect",
                "1"
              ],
              [
                "test_direct_usage",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                [
                  "fname",
                  "d",
                  "f"
                ]
              ],
              [
                "test_detect",
                [
                  "fname",
                  "r",
                  "f",
                  "content"
                ]
              ],
              [
                "test_direct_usage",
                [
                  "fname",
                  "r",
                  "d",
                  "f",
                  "content"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                []
              ],
              [
                "test_detect",
                []
              ],
              [
                "test_direct_usage",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8673036129384452,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_detect",
                  "test_document_usage",
                  0.8442428660460971
                ],
                [
                  "test_direct_usage",
                  "test_document_usage",
                  0.8732614343636292
                ],
                [
                  "test_detect",
                  "test_direct_usage",
                  0.8844065384056095
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_document_usage",
                "false"
              ],
              [
                "test_detect",
                "true"
              ],
              [
                "test_direct_usage",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_reader_rsc.py",
    "testCases": [
      {
        "name": "TestRscHtmlReader",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_document_usage",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_direct_usage",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_detect",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_document_usage",
                  "[]"
                ],
                [
                  "test_direct_usage",
                  "[]"
                ],
                [
                  "test_detect",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_document_usage",
                  "false"
                ],
                [
                  "test_direct_usage",
                  "false"
                ],
                [
                  "test_detect",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_document_usage",
                  "false"
                ],
                [
                  "test_direct_usage",
                  "false"
                ],
                [
                  "test_detect",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_document_usage",
                  "false"
                ],
                [
                  "test_direct_usage",
                  "false"
                ],
                [
                  "test_detect",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_document_usage",
                  "false"
                ],
                [
                  "test_direct_usage",
                  "false"
                ],
                [
                  "test_detect",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                "false"
              ],
              [
                "test_direct_usage",
                "false"
              ],
              [
                "test_detect",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                "false"
              ],
              [
                "test_direct_usage",
                "false"
              ],
              [
                "test_detect",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                []
              ],
              [
                "test_direct_usage",
                []
              ],
              [
                "test_detect",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                "false"
              ],
              [
                "test_direct_usage",
                "false"
              ],
              [
                "test_detect",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_document_usage",
                "true"
              ],
              [
                "test_direct_usage",
                "true"
              ],
              [
                "test_detect",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_document_usage",
                  "0"
                ],
                [
                  "test_direct_usage",
                  "0"
                ],
                [
                  "test_detect",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_document_usage",
                  "0"
                ],
                [
                  "test_direct_usage",
                  "0"
                ],
                [
                  "test_detect",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                "false"
              ],
              [
                "test_direct_usage",
                "false"
              ],
              [
                "test_detect",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                "false"
              ],
              [
                "test_direct_usage",
                "false"
              ],
              [
                "test_detect",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                "1"
              ],
              [
                "test_direct_usage",
                "1"
              ],
              [
                "test_detect",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                [
                  "fname",
                  "d",
                  "f"
                ]
              ],
              [
                "test_direct_usage",
                [
                  "fname",
                  "r",
                  "d",
                  "f",
                  "content"
                ]
              ],
              [
                "test_detect",
                [
                  "fname",
                  "r",
                  "f",
                  "content"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                []
              ],
              [
                "test_direct_usage",
                []
              ],
              [
                "test_detect",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9213782543690813,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_detect",
                  "test_document_usage",
                  0.9088837306749346
                ],
                [
                  "test_detect",
                  "test_direct_usage",
                  0.9306161390416728
                ],
                [
                  "test_direct_usage",
                  "test_document_usage",
                  0.9246348933906365
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_document_usage",
                "false"
              ],
              [
                "test_direct_usage",
                "false"
              ],
              [
                "test_detect",
                "true"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_doc_document.py",
    "testCases": [
      {
        "name": "TestDocument",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_bytestring_elements",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_document_iter",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_text_elements",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_bytestring_elements",
                  "[]"
                ],
                [
                  "test_document_iter",
                  "[]"
                ],
                [
                  "test_text_elements",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_bytestring_elements",
                  "false"
                ],
                [
                  "test_document_iter",
                  "false"
                ],
                [
                  "test_text_elements",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_bytestring_elements",
                  "false"
                ],
                [
                  "test_document_iter",
                  "true"
                ],
                [
                  "test_text_elements",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_bytestring_elements",
                  "false"
                ],
                [
                  "test_document_iter",
                  "false"
                ],
                [
                  "test_text_elements",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_bytestring_elements",
                  "false"
                ],
                [
                  "test_document_iter",
                  "false"
                ],
                [
                  "test_text_elements",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bytestring_elements",
                "false"
              ],
              [
                "test_document_iter",
                "false"
              ],
              [
                "test_text_elements",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_bytestring_elements",
                "false"
              ],
              [
                "test_document_iter",
                "false"
              ],
              [
                "test_text_elements",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_bytestring_elements",
                []
              ],
              [
                "test_document_iter",
                []
              ],
              [
                "test_text_elements",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bytestring_elements",
                "false"
              ],
              [
                "test_document_iter",
                "false"
              ],
              [
                "test_text_elements",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_bytestring_elements",
                "false"
              ],
              [
                "test_document_iter",
                "true"
              ],
              [
                "test_text_elements",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_bytestring_elements",
                  "0"
                ],
                [
                  "test_document_iter",
                  "0"
                ],
                [
                  "test_text_elements",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_bytestring_elements",
                  "0"
                ],
                [
                  "test_document_iter",
                  "0"
                ],
                [
                  "test_text_elements",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_bytestring_elements",
                "false"
              ],
              [
                "test_document_iter",
                "false"
              ],
              [
                "test_text_elements",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bytestring_elements",
                "false"
              ],
              [
                "test_document_iter",
                "false"
              ],
              [
                "test_text_elements",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bytestring_elements",
                "3"
              ],
              [
                "test_document_iter",
                "3"
              ],
              [
                "test_text_elements",
                "3"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_bytestring_elements",
                [
                  "d",
                  "els"
                ]
              ],
              [
                "test_document_iter",
                [
                  "d",
                  "els"
                ]
              ],
              [
                "test_text_elements",
                [
                  "d",
                  "els"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_bytestring_elements",
                []
              ],
              [
                "test_document_iter",
                []
              ],
              [
                "test_text_elements",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.836799736636939,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_text_elements",
                  "test_document_iter",
                  0.8008213963031047
                ],
                [
                  "test_bytestring_elements",
                  "test_document_iter",
                  0.7663686516276511
                ],
                [
                  "test_text_elements",
                  "test_bytestring_elements",
                  0.9432091619800611
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_bytestring_elements",
                "false"
              ],
              [
                "test_document_iter",
                "false"
              ],
              [
                "test_text_elements",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_nlp_sentence.py",
    "testCases": [
      {
        "name": "TestChemSentenceTokenizer",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_eg_et_al",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_et_al",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_lowercase_sentence_start",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_colon",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_chemtext_sentence",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_fig_bracket",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_punkt_tokenizer",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_et_al2",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_et_al_end",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_eg_et_al",
                  "[]"
                ],
                [
                  "test_et_al",
                  "[]"
                ],
                [
                  "test_lowercase_sentence_start",
                  "[]"
                ],
                [
                  "test_colon",
                  "[]"
                ],
                [
                  "test_chemtext_sentence",
                  "[]"
                ],
                [
                  "test_fig_bracket",
                  "[]"
                ],
                [
                  "test_punkt_tokenizer",
                  "[]"
                ],
                [
                  "test_et_al2",
                  "[]"
                ],
                [
                  "test_et_al_end",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_eg_et_al",
                  "false"
                ],
                [
                  "test_et_al",
                  "false"
                ],
                [
                  "test_lowercase_sentence_start",
                  "false"
                ],
                [
                  "test_colon",
                  "false"
                ],
                [
                  "test_chemtext_sentence",
                  "false"
                ],
                [
                  "test_fig_bracket",
                  "false"
                ],
                [
                  "test_punkt_tokenizer",
                  "false"
                ],
                [
                  "test_et_al2",
                  "false"
                ],
                [
                  "test_et_al_end",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_eg_et_al",
                  "false"
                ],
                [
                  "test_et_al",
                  "false"
                ],
                [
                  "test_lowercase_sentence_start",
                  "false"
                ],
                [
                  "test_colon",
                  "false"
                ],
                [
                  "test_chemtext_sentence",
                  "true"
                ],
                [
                  "test_fig_bracket",
                  "false"
                ],
                [
                  "test_punkt_tokenizer",
                  "false"
                ],
                [
                  "test_et_al2",
                  "false"
                ],
                [
                  "test_et_al_end",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_eg_et_al",
                  "false"
                ],
                [
                  "test_et_al",
                  "false"
                ],
                [
                  "test_lowercase_sentence_start",
                  "false"
                ],
                [
                  "test_colon",
                  "false"
                ],
                [
                  "test_chemtext_sentence",
                  "false"
                ],
                [
                  "test_fig_bracket",
                  "false"
                ],
                [
                  "test_punkt_tokenizer",
                  "false"
                ],
                [
                  "test_et_al2",
                  "false"
                ],
                [
                  "test_et_al_end",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_eg_et_al",
                  "false"
                ],
                [
                  "test_et_al",
                  "false"
                ],
                [
                  "test_lowercase_sentence_start",
                  "false"
                ],
                [
                  "test_colon",
                  "false"
                ],
                [
                  "test_chemtext_sentence",
                  "false"
                ],
                [
                  "test_fig_bracket",
                  "false"
                ],
                [
                  "test_punkt_tokenizer",
                  "false"
                ],
                [
                  "test_et_al2",
                  "false"
                ],
                [
                  "test_et_al_end",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_eg_et_al",
                "false"
              ],
              [
                "test_et_al",
                "false"
              ],
              [
                "test_lowercase_sentence_start",
                "false"
              ],
              [
                "test_colon",
                "false"
              ],
              [
                "test_chemtext_sentence",
                "false"
              ],
              [
                "test_fig_bracket",
                "false"
              ],
              [
                "test_punkt_tokenizer",
                "false"
              ],
              [
                "test_et_al2",
                "false"
              ],
              [
                "test_et_al_end",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_eg_et_al",
                "false"
              ],
              [
                "test_et_al",
                "false"
              ],
              [
                "test_lowercase_sentence_start",
                "false"
              ],
              [
                "test_colon",
                "false"
              ],
              [
                "test_chemtext_sentence",
                "false"
              ],
              [
                "test_fig_bracket",
                "false"
              ],
              [
                "test_punkt_tokenizer",
                "false"
              ],
              [
                "test_et_al2",
                "false"
              ],
              [
                "test_et_al_end",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_eg_et_al",
                []
              ],
              [
                "test_et_al",
                []
              ],
              [
                "test_lowercase_sentence_start",
                []
              ],
              [
                "test_colon",
                []
              ],
              [
                "test_chemtext_sentence",
                [
                  "self.ps"
                ]
              ],
              [
                "test_fig_bracket",
                []
              ],
              [
                "test_punkt_tokenizer",
                []
              ],
              [
                "test_et_al2",
                []
              ],
              [
                "test_et_al_end",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_eg_et_al",
                "false"
              ],
              [
                "test_et_al",
                "false"
              ],
              [
                "test_lowercase_sentence_start",
                "false"
              ],
              [
                "test_colon",
                "false"
              ],
              [
                "test_chemtext_sentence",
                "false"
              ],
              [
                "test_fig_bracket",
                "false"
              ],
              [
                "test_punkt_tokenizer",
                "false"
              ],
              [
                "test_et_al2",
                "false"
              ],
              [
                "test_et_al_end",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_eg_et_al",
                "false"
              ],
              [
                "test_et_al",
                "false"
              ],
              [
                "test_lowercase_sentence_start",
                "false"
              ],
              [
                "test_colon",
                "false"
              ],
              [
                "test_chemtext_sentence",
                "false"
              ],
              [
                "test_fig_bracket",
                "false"
              ],
              [
                "test_punkt_tokenizer",
                "false"
              ],
              [
                "test_et_al2",
                "false"
              ],
              [
                "test_et_al_end",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_eg_et_al",
                  "0"
                ],
                [
                  "test_et_al",
                  "0"
                ],
                [
                  "test_lowercase_sentence_start",
                  "0"
                ],
                [
                  "test_colon",
                  "0"
                ],
                [
                  "test_chemtext_sentence",
                  "0"
                ],
                [
                  "test_fig_bracket",
                  "0"
                ],
                [
                  "test_punkt_tokenizer",
                  "0"
                ],
                [
                  "test_et_al2",
                  "0"
                ],
                [
                  "test_et_al_end",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_eg_et_al",
                  "0"
                ],
                [
                  "test_et_al",
                  "0"
                ],
                [
                  "test_lowercase_sentence_start",
                  "0"
                ],
                [
                  "test_colon",
                  "0"
                ],
                [
                  "test_chemtext_sentence",
                  "0"
                ],
                [
                  "test_fig_bracket",
                  "0"
                ],
                [
                  "test_punkt_tokenizer",
                  "0"
                ],
                [
                  "test_et_al2",
                  "0"
                ],
                [
                  "test_et_al_end",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_eg_et_al",
                "false"
              ],
              [
                "test_et_al",
                "false"
              ],
              [
                "test_lowercase_sentence_start",
                "false"
              ],
              [
                "test_colon",
                "false"
              ],
              [
                "test_chemtext_sentence",
                "false"
              ],
              [
                "test_fig_bracket",
                "false"
              ],
              [
                "test_punkt_tokenizer",
                "false"
              ],
              [
                "test_et_al2",
                "false"
              ],
              [
                "test_et_al_end",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_eg_et_al",
                "false"
              ],
              [
                "test_et_al",
                "false"
              ],
              [
                "test_lowercase_sentence_start",
                "false"
              ],
              [
                "test_colon",
                "false"
              ],
              [
                "test_chemtext_sentence",
                "false"
              ],
              [
                "test_fig_bracket",
                "false"
              ],
              [
                "test_punkt_tokenizer",
                "false"
              ],
              [
                "test_et_al2",
                "false"
              ],
              [
                "test_et_al_end",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_eg_et_al",
                "1"
              ],
              [
                "test_et_al",
                "1"
              ],
              [
                "test_lowercase_sentence_start",
                "1"
              ],
              [
                "test_colon",
                "1"
              ],
              [
                "test_chemtext_sentence",
                "1"
              ],
              [
                "test_fig_bracket",
                "1"
              ],
              [
                "test_punkt_tokenizer",
                "1"
              ],
              [
                "test_et_al2",
                "1"
              ],
              [
                "test_et_al_end",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_eg_et_al",
                [
                  "text",
                  "sents"
                ]
              ],
              [
                "test_et_al",
                [
                  "text",
                  "sents"
                ]
              ],
              [
                "test_lowercase_sentence_start",
                [
                  "text",
                  "sents"
                ]
              ],
              [
                "test_colon",
                [
                  "text",
                  "sents"
                ]
              ],
              [
                "test_chemtext_sentence",
                [
                  "t"
                ]
              ],
              [
                "test_fig_bracket",
                [
                  "text",
                  "sents"
                ]
              ],
              [
                "test_punkt_tokenizer",
                [
                  "text",
                  "sents"
                ]
              ],
              [
                "test_et_al2",
                [
                  "text",
                  "sents"
                ]
              ],
              [
                "test_et_al_end",
                [
                  "text",
                  "sents"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_eg_et_al",
                [
                  "self.ps"
                ]
              ],
              [
                "test_et_al",
                [
                  "self.ps"
                ]
              ],
              [
                "test_lowercase_sentence_start",
                [
                  "self.ps"
                ]
              ],
              [
                "test_colon",
                [
                  "self.ps"
                ]
              ],
              [
                "test_chemtext_sentence",
                []
              ],
              [
                "test_fig_bracket",
                [
                  "self.ps"
                ]
              ],
              [
                "test_punkt_tokenizer",
                [
                  "self.ps"
                ]
              ],
              [
                "test_et_al2",
                [
                  "self.ps"
                ]
              ],
              [
                "test_et_al_end",
                [
                  "self.ps"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.44247601381371665,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_punkt_tokenizer",
                  "test_et_al_end",
                  0.6224251197758814
                ],
                [
                  "test_et_al",
                  "test_et_al2",
                  0.5389492661387945
                ],
                [
                  "test_lowercase_sentence_start",
                  "test_chemtext_sentence",
                  0.8126698486770869
                ],
                [
                  "test_punkt_tokenizer",
                  "test_et_al2",
                  0.5067351936998168
                ],
                [
                  "test_et_al_end",
                  "test_fig_bracket",
                  0.5325984971742195
                ],
                [
                  "test_et_al_end",
                  "test_eg_et_al",
                  0.46874394680755693
                ],
                [
                  "test_et_al2",
                  "test_colon",
                  0.3747223515312776
                ],
                [
                  "test_fig_bracket",
                  "test_colon",
                  0.38740815975682713
                ],
                [
                  "test_et_al",
                  "test_et_al_end",
                  0.47847583485993916
                ],
                [
                  "test_et_al2",
                  "test_et_al_end",
                  0.6241341952319593
                ],
                [
                  "test_eg_et_al",
                  "test_chemtext_sentence",
                  0.35532621913025625
                ],
                [
                  "test_colon",
                  "test_lowercase_sentence_start",
                  0.22211524368554397
                ],
                [
                  "test_punkt_tokenizer",
                  "test_colon",
                  0.2918389715353044
                ],
                [
                  "test_et_al2",
                  "test_chemtext_sentence",
                  0.5292232120957289
                ],
                [
                  "test_et_al",
                  "test_colon",
                  0.2983197774491095
                ],
                [
                  "test_et_al2",
                  "test_eg_et_al",
                  0.4946908857997196
                ],
                [
                  "test_eg_et_al",
                  "test_lowercase_sentence_start",
                  0.44061135746215646
                ],
                [
                  "test_punkt_tokenizer",
                  "test_fig_bracket",
                  0.4743038393205996
                ],
                [
                  "test_et_al",
                  "test_chemtext_sentence",
                  0.3227904994821119
                ],
                [
                  "test_et_al2",
                  "test_lowercase_sentence_start",
                  0.49748544845456466
                ],
                [
                  "test_punkt_tokenizer",
                  "test_chemtext_sentence",
                  0.4452606883725778
                ],
                [
                  "test_punkt_tokenizer",
                  "test_et_al",
                  0.3855236442340424
                ],
                [
                  "test_punkt_tokenizer",
                  "test_lowercase_sentence_start",
                  0.4539571927394597
                ],
                [
                  "test_fig_bracket",
                  "test_eg_et_al",
                  0.41004512010136324
                ],
                [
                  "test_et_al_end",
                  "test_colon",
                  0.2517753913946476
                ],
                [
                  "test_et_al",
                  "test_fig_bracket",
                  0.46891053361453167
                ],
                [
                  "test_et_al2",
                  "test_fig_bracket",
                  0.6269354434397384
                ],
                [
                  "test_colon",
                  "test_chemtext_sentence",
                  0.1545332076047258
                ],
                [
                  "test_et_al",
                  "test_eg_et_al",
                  0.5280060768166427
                ],
                [
                  "test_et_al",
                  "test_lowercase_sentence_start",
                  0.4033868711622152
                ],
                [
                  "test_fig_bracket",
                  "test_chemtext_sentence",
                  0.3677570428452945
                ],
                [
                  "test_eg_et_al",
                  "test_colon",
                  0.28717142157077546
                ],
                [
                  "test_punkt_tokenizer",
                  "test_eg_et_al",
                  0.4377220714973784
                ],
                [
                  "test_fig_bracket",
                  "test_lowercase_sentence_start",
                  0.3353409632325119
                ],
                [
                  "test_et_al_end",
                  "test_chemtext_sentence",
                  0.5502802039037048
                ],
                [
                  "test_et_al_end",
                  "test_lowercase_sentence_start",
                  0.5489627566957346
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_eg_et_al",
                "false"
              ],
              [
                "test_et_al",
                "false"
              ],
              [
                "test_lowercase_sentence_start",
                "false"
              ],
              [
                "test_colon",
                "false"
              ],
              [
                "test_chemtext_sentence",
                "false"
              ],
              [
                "test_fig_bracket",
                "false"
              ],
              [
                "test_punkt_tokenizer",
                "false"
              ],
              [
                "test_et_al2",
                "false"
              ],
              [
                "test_et_al_end",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 9
      }
    ]
  },
  {
    "name": "tests_\u0026_test_reader_uspto.py",
    "testCases": [
      {
        "name": "TestUsptoReader",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_document_usage",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_detect",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_direct_usage",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_document_usage",
                  "[]"
                ],
                [
                  "test_detect",
                  "[]"
                ],
                [
                  "test_direct_usage",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_document_usage",
                  "false"
                ],
                [
                  "test_detect",
                  "false"
                ],
                [
                  "test_direct_usage",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_document_usage",
                  "false"
                ],
                [
                  "test_detect",
                  "false"
                ],
                [
                  "test_direct_usage",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_document_usage",
                  "false"
                ],
                [
                  "test_detect",
                  "false"
                ],
                [
                  "test_direct_usage",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_document_usage",
                  "false"
                ],
                [
                  "test_detect",
                  "false"
                ],
                [
                  "test_direct_usage",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                "false"
              ],
              [
                "test_detect",
                "false"
              ],
              [
                "test_direct_usage",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                "false"
              ],
              [
                "test_detect",
                "false"
              ],
              [
                "test_direct_usage",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                []
              ],
              [
                "test_detect",
                []
              ],
              [
                "test_direct_usage",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                "false"
              ],
              [
                "test_detect",
                "false"
              ],
              [
                "test_direct_usage",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_document_usage",
                "true"
              ],
              [
                "test_detect",
                "false"
              ],
              [
                "test_direct_usage",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_document_usage",
                  "0"
                ],
                [
                  "test_detect",
                  "0"
                ],
                [
                  "test_direct_usage",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_document_usage",
                  "0"
                ],
                [
                  "test_detect",
                  "0"
                ],
                [
                  "test_direct_usage",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                "false"
              ],
              [
                "test_detect",
                "false"
              ],
              [
                "test_direct_usage",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                "false"
              ],
              [
                "test_detect",
                "false"
              ],
              [
                "test_direct_usage",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                "1"
              ],
              [
                "test_detect",
                "1"
              ],
              [
                "test_direct_usage",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                [
                  "fname",
                  "d",
                  "f"
                ]
              ],
              [
                "test_detect",
                [
                  "fname",
                  "r",
                  "f",
                  "content"
                ]
              ],
              [
                "test_direct_usage",
                [
                  "fname",
                  "r",
                  "d",
                  "f",
                  "content"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_document_usage",
                []
              ],
              [
                "test_detect",
                []
              ],
              [
                "test_direct_usage",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8867591602392196,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_direct_usage",
                  "test_document_usage",
                  0.8910853324648567
                ],
                [
                  "test_detect",
                  "test_document_usage",
                  0.8738720605192701
                ],
                [
                  "test_detect",
                  "test_direct_usage",
                  0.8953200877335319
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_document_usage",
                "false"
              ],
              [
                "test_detect",
                "true"
              ],
              [
                "test_direct_usage",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_scrape_clean.py",
    "testCases": [
      {
        "name": "TestCleaner",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_strip1",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_strip_kill_strong1",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_strip4",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_strip_html2",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_strip2",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_strip_leave_whitespace2",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_strip_kill_strong2",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_strip_markup_doc",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_strip_kill_strong4",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_clean3",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_clean2",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_strip_html3",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_strip_leave_whitespace4",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_strip3",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_strip_leave_whitespace1",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_strip_html1",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_strip_leave_whitespace3",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_strip_kill_strong3",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_clean4",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_clean1",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_strip1",
                  "[]"
                ],
                [
                  "test_strip_kill_strong1",
                  "[]"
                ],
                [
                  "test_strip4",
                  "[]"
                ],
                [
                  "test_strip_html2",
                  "[]"
                ],
                [
                  "test_strip2",
                  "[]"
                ],
                [
                  "test_strip_leave_whitespace2",
                  "[]"
                ],
                [
                  "test_strip_kill_strong2",
                  "[]"
                ],
                [
                  "test_strip_markup_doc",
                  "[]"
                ],
                [
                  "test_strip_kill_strong4",
                  "[]"
                ],
                [
                  "test_clean3",
                  "[]"
                ],
                [
                  "test_clean2",
                  "[]"
                ],
                [
                  "test_strip_html3",
                  "[]"
                ],
                [
                  "test_strip_leave_whitespace4",
                  "[]"
                ],
                [
                  "test_strip3",
                  "[]"
                ],
                [
                  "test_strip_leave_whitespace1",
                  "[]"
                ],
                [
                  "test_strip_html1",
                  "[]"
                ],
                [
                  "test_strip_leave_whitespace3",
                  "[]"
                ],
                [
                  "test_strip_kill_strong3",
                  "[]"
                ],
                [
                  "test_clean4",
                  "[]"
                ],
                [
                  "test_clean1",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_strip1",
                  "false"
                ],
                [
                  "test_strip_kill_strong1",
                  "false"
                ],
                [
                  "test_strip4",
                  "false"
                ],
                [
                  "test_strip_html2",
                  "false"
                ],
                [
                  "test_strip2",
                  "false"
                ],
                [
                  "test_strip_leave_whitespace2",
                  "false"
                ],
                [
                  "test_strip_kill_strong2",
                  "false"
                ],
                [
                  "test_strip_markup_doc",
                  "false"
                ],
                [
                  "test_strip_kill_strong4",
                  "false"
                ],
                [
                  "test_clean3",
                  "false"
                ],
                [
                  "test_clean2",
                  "false"
                ],
                [
                  "test_strip_html3",
                  "false"
                ],
                [
                  "test_strip_leave_whitespace4",
                  "false"
                ],
                [
                  "test_strip3",
                  "false"
                ],
                [
                  "test_strip_leave_whitespace1",
                  "false"
                ],
                [
                  "test_strip_html1",
                  "false"
                ],
                [
                  "test_strip_leave_whitespace3",
                  "false"
                ],
                [
                  "test_strip_kill_strong3",
                  "false"
                ],
                [
                  "test_clean4",
                  "false"
                ],
                [
                  "test_clean1",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_strip1",
                  "false"
                ],
                [
                  "test_strip_kill_strong1",
                  "false"
                ],
                [
                  "test_strip4",
                  "false"
                ],
                [
                  "test_strip_html2",
                  "false"
                ],
                [
                  "test_strip2",
                  "false"
                ],
                [
                  "test_strip_leave_whitespace2",
                  "false"
                ],
                [
                  "test_strip_kill_strong2",
                  "false"
                ],
                [
                  "test_strip_markup_doc",
                  "false"
                ],
                [
                  "test_strip_kill_strong4",
                  "false"
                ],
                [
                  "test_clean3",
                  "false"
                ],
                [
                  "test_clean2",
                  "false"
                ],
                [
                  "test_strip_html3",
                  "false"
                ],
                [
                  "test_strip_leave_whitespace4",
                  "false"
                ],
                [
                  "test_strip3",
                  "false"
                ],
                [
                  "test_strip_leave_whitespace1",
                  "false"
                ],
                [
                  "test_strip_html1",
                  "false"
                ],
                [
                  "test_strip_leave_whitespace3",
                  "false"
                ],
                [
                  "test_strip_kill_strong3",
                  "false"
                ],
                [
                  "test_clean4",
                  "false"
                ],
                [
                  "test_clean1",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_strip1",
                  "false"
                ],
                [
                  "test_strip_kill_strong1",
                  "false"
                ],
                [
                  "test_strip4",
                  "false"
                ],
                [
                  "test_strip_html2",
                  "false"
                ],
                [
                  "test_strip2",
                  "false"
                ],
                [
                  "test_strip_leave_whitespace2",
                  "false"
                ],
                [
                  "test_strip_kill_strong2",
                  "false"
                ],
                [
                  "test_strip_markup_doc",
                  "false"
                ],
                [
                  "test_strip_kill_strong4",
                  "false"
                ],
                [
                  "test_clean3",
                  "false"
                ],
                [
                  "test_clean2",
                  "false"
                ],
                [
                  "test_strip_html3",
                  "false"
                ],
                [
                  "test_strip_leave_whitespace4",
                  "false"
                ],
                [
                  "test_strip3",
                  "false"
                ],
                [
                  "test_strip_leave_whitespace1",
                  "false"
                ],
                [
                  "test_strip_html1",
                  "false"
                ],
                [
                  "test_strip_leave_whitespace3",
                  "false"
                ],
                [
                  "test_strip_kill_strong3",
                  "false"
                ],
                [
                  "test_clean4",
                  "false"
                ],
                [
                  "test_clean1",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_strip1",
                  "false"
                ],
                [
                  "test_strip_kill_strong1",
                  "false"
                ],
                [
                  "test_strip4",
                  "false"
                ],
                [
                  "test_strip_html2",
                  "false"
                ],
                [
                  "test_strip2",
                  "false"
                ],
                [
                  "test_strip_leave_whitespace2",
                  "false"
                ],
                [
                  "test_strip_kill_strong2",
                  "false"
                ],
                [
                  "test_strip_markup_doc",
                  "false"
                ],
                [
                  "test_strip_kill_strong4",
                  "false"
                ],
                [
                  "test_clean3",
                  "false"
                ],
                [
                  "test_clean2",
                  "false"
                ],
                [
                  "test_strip_html3",
                  "false"
                ],
                [
                  "test_strip_leave_whitespace4",
                  "false"
                ],
                [
                  "test_strip3",
                  "false"
                ],
                [
                  "test_strip_leave_whitespace1",
                  "false"
                ],
                [
                  "test_strip_html1",
                  "false"
                ],
                [
                  "test_strip_leave_whitespace3",
                  "false"
                ],
                [
                  "test_strip_kill_strong3",
                  "false"
                ],
                [
                  "test_clean4",
                  "false"
                ],
                [
                  "test_clean1",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_strip1",
                "false"
              ],
              [
                "test_strip_kill_strong1",
                "false"
              ],
              [
                "test_strip4",
                "false"
              ],
              [
                "test_strip_html2",
                "false"
              ],
              [
                "test_strip2",
                "false"
              ],
              [
                "test_strip_leave_whitespace2",
                "false"
              ],
              [
                "test_strip_kill_strong2",
                "false"
              ],
              [
                "test_strip_markup_doc",
                "false"
              ],
              [
                "test_strip_kill_strong4",
                "false"
              ],
              [
                "test_clean3",
                "false"
              ],
              [
                "test_clean2",
                "false"
              ],
              [
                "test_strip_html3",
                "false"
              ],
              [
                "test_strip_leave_whitespace4",
                "false"
              ],
              [
                "test_strip3",
                "false"
              ],
              [
                "test_strip_leave_whitespace1",
                "false"
              ],
              [
                "test_strip_html1",
                "false"
              ],
              [
                "test_strip_leave_whitespace3",
                "false"
              ],
              [
                "test_strip_kill_strong3",
                "false"
              ],
              [
                "test_clean4",
                "false"
              ],
              [
                "test_clean1",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_strip1",
                "false"
              ],
              [
                "test_strip_kill_strong1",
                "false"
              ],
              [
                "test_strip4",
                "false"
              ],
              [
                "test_strip_html2",
                "false"
              ],
              [
                "test_strip2",
                "false"
              ],
              [
                "test_strip_leave_whitespace2",
                "false"
              ],
              [
                "test_strip_kill_strong2",
                "false"
              ],
              [
                "test_strip_markup_doc",
                "false"
              ],
              [
                "test_strip_kill_strong4",
                "false"
              ],
              [
                "test_clean3",
                "false"
              ],
              [
                "test_clean2",
                "false"
              ],
              [
                "test_strip_html3",
                "false"
              ],
              [
                "test_strip_leave_whitespace4",
                "false"
              ],
              [
                "test_strip3",
                "false"
              ],
              [
                "test_strip_leave_whitespace1",
                "false"
              ],
              [
                "test_strip_html1",
                "false"
              ],
              [
                "test_strip_leave_whitespace3",
                "false"
              ],
              [
                "test_strip_kill_strong3",
                "false"
              ],
              [
                "test_clean4",
                "false"
              ],
              [
                "test_clean1",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_strip1",
                []
              ],
              [
                "test_strip_kill_strong1",
                []
              ],
              [
                "test_strip4",
                []
              ],
              [
                "test_strip_html2",
                []
              ],
              [
                "test_strip2",
                []
              ],
              [
                "test_strip_leave_whitespace2",
                []
              ],
              [
                "test_strip_kill_strong2",
                []
              ],
              [
                "test_strip_markup_doc",
                []
              ],
              [
                "test_strip_kill_strong4",
                []
              ],
              [
                "test_clean3",
                []
              ],
              [
                "test_clean2",
                []
              ],
              [
                "test_strip_html3",
                []
              ],
              [
                "test_strip_leave_whitespace4",
                []
              ],
              [
                "test_strip3",
                []
              ],
              [
                "test_strip_leave_whitespace1",
                []
              ],
              [
                "test_strip_html1",
                []
              ],
              [
                "test_strip_leave_whitespace3",
                []
              ],
              [
                "test_strip_kill_strong3",
                []
              ],
              [
                "test_clean4",
                []
              ],
              [
                "test_clean1",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_strip1",
                "false"
              ],
              [
                "test_strip_kill_strong1",
                "false"
              ],
              [
                "test_strip4",
                "false"
              ],
              [
                "test_strip_html2",
                "false"
              ],
              [
                "test_strip2",
                "false"
              ],
              [
                "test_strip_leave_whitespace2",
                "false"
              ],
              [
                "test_strip_kill_strong2",
                "false"
              ],
              [
                "test_strip_markup_doc",
                "false"
              ],
              [
                "test_strip_kill_strong4",
                "false"
              ],
              [
                "test_clean3",
                "false"
              ],
              [
                "test_clean2",
                "false"
              ],
              [
                "test_strip_html3",
                "false"
              ],
              [
                "test_strip_leave_whitespace4",
                "false"
              ],
              [
                "test_strip3",
                "false"
              ],
              [
                "test_strip_leave_whitespace1",
                "false"
              ],
              [
                "test_strip_html1",
                "false"
              ],
              [
                "test_strip_leave_whitespace3",
                "false"
              ],
              [
                "test_strip_kill_strong3",
                "false"
              ],
              [
                "test_clean4",
                "false"
              ],
              [
                "test_clean1",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_strip1",
                "false"
              ],
              [
                "test_strip_kill_strong1",
                "false"
              ],
              [
                "test_strip4",
                "false"
              ],
              [
                "test_strip_html2",
                "false"
              ],
              [
                "test_strip2",
                "false"
              ],
              [
                "test_strip_leave_whitespace2",
                "false"
              ],
              [
                "test_strip_kill_strong2",
                "false"
              ],
              [
                "test_strip_markup_doc",
                "false"
              ],
              [
                "test_strip_kill_strong4",
                "false"
              ],
              [
                "test_clean3",
                "false"
              ],
              [
                "test_clean2",
                "false"
              ],
              [
                "test_strip_html3",
                "false"
              ],
              [
                "test_strip_leave_whitespace4",
                "false"
              ],
              [
                "test_strip3",
                "false"
              ],
              [
                "test_strip_leave_whitespace1",
                "false"
              ],
              [
                "test_strip_html1",
                "false"
              ],
              [
                "test_strip_leave_whitespace3",
                "false"
              ],
              [
                "test_strip_kill_strong3",
                "false"
              ],
              [
                "test_clean4",
                "false"
              ],
              [
                "test_clean1",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_strip1",
                  "0"
                ],
                [
                  "test_strip_kill_strong1",
                  "0"
                ],
                [
                  "test_strip4",
                  "0"
                ],
                [
                  "test_strip_html2",
                  "0"
                ],
                [
                  "test_strip2",
                  "0"
                ],
                [
                  "test_strip_leave_whitespace2",
                  "0"
                ],
                [
                  "test_strip_kill_strong2",
                  "0"
                ],
                [
                  "test_strip_markup_doc",
                  "0"
                ],
                [
                  "test_strip_kill_strong4",
                  "0"
                ],
                [
                  "test_clean3",
                  "0"
                ],
                [
                  "test_clean2",
                  "0"
                ],
                [
                  "test_strip_html3",
                  "0"
                ],
                [
                  "test_strip_leave_whitespace4",
                  "0"
                ],
                [
                  "test_strip3",
                  "0"
                ],
                [
                  "test_strip_leave_whitespace1",
                  "0"
                ],
                [
                  "test_strip_html1",
                  "0"
                ],
                [
                  "test_strip_leave_whitespace3",
                  "0"
                ],
                [
                  "test_strip_kill_strong3",
                  "0"
                ],
                [
                  "test_clean4",
                  "0"
                ],
                [
                  "test_clean1",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_strip1",
                  "0"
                ],
                [
                  "test_strip_kill_strong1",
                  "0"
                ],
                [
                  "test_strip4",
                  "0"
                ],
                [
                  "test_strip_html2",
                  "0"
                ],
                [
                  "test_strip2",
                  "0"
                ],
                [
                  "test_strip_leave_whitespace2",
                  "0"
                ],
                [
                  "test_strip_kill_strong2",
                  "0"
                ],
                [
                  "test_strip_markup_doc",
                  "0"
                ],
                [
                  "test_strip_kill_strong4",
                  "0"
                ],
                [
                  "test_clean3",
                  "0"
                ],
                [
                  "test_clean2",
                  "0"
                ],
                [
                  "test_strip_html3",
                  "0"
                ],
                [
                  "test_strip_leave_whitespace4",
                  "0"
                ],
                [
                  "test_strip3",
                  "0"
                ],
                [
                  "test_strip_leave_whitespace1",
                  "0"
                ],
                [
                  "test_strip_html1",
                  "0"
                ],
                [
                  "test_strip_leave_whitespace3",
                  "0"
                ],
                [
                  "test_strip_kill_strong3",
                  "0"
                ],
                [
                  "test_clean4",
                  "0"
                ],
                [
                  "test_clean1",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_strip1",
                "false"
              ],
              [
                "test_strip_kill_strong1",
                "false"
              ],
              [
                "test_strip4",
                "false"
              ],
              [
                "test_strip_html2",
                "false"
              ],
              [
                "test_strip2",
                "false"
              ],
              [
                "test_strip_leave_whitespace2",
                "false"
              ],
              [
                "test_strip_kill_strong2",
                "false"
              ],
              [
                "test_strip_markup_doc",
                "false"
              ],
              [
                "test_strip_kill_strong4",
                "false"
              ],
              [
                "test_clean3",
                "false"
              ],
              [
                "test_clean2",
                "false"
              ],
              [
                "test_strip_html3",
                "false"
              ],
              [
                "test_strip_leave_whitespace4",
                "false"
              ],
              [
                "test_strip3",
                "false"
              ],
              [
                "test_strip_leave_whitespace1",
                "false"
              ],
              [
                "test_strip_html1",
                "false"
              ],
              [
                "test_strip_leave_whitespace3",
                "false"
              ],
              [
                "test_strip_kill_strong3",
                "false"
              ],
              [
                "test_clean4",
                "false"
              ],
              [
                "test_clean1",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_strip1",
                "false"
              ],
              [
                "test_strip_kill_strong1",
                "false"
              ],
              [
                "test_strip4",
                "false"
              ],
              [
                "test_strip_html2",
                "false"
              ],
              [
                "test_strip2",
                "false"
              ],
              [
                "test_strip_leave_whitespace2",
                "false"
              ],
              [
                "test_strip_kill_strong2",
                "false"
              ],
              [
                "test_strip_markup_doc",
                "false"
              ],
              [
                "test_strip_kill_strong4",
                "false"
              ],
              [
                "test_clean3",
                "false"
              ],
              [
                "test_clean2",
                "false"
              ],
              [
                "test_strip_html3",
                "false"
              ],
              [
                "test_strip_leave_whitespace4",
                "false"
              ],
              [
                "test_strip3",
                "false"
              ],
              [
                "test_strip_leave_whitespace1",
                "false"
              ],
              [
                "test_strip_html1",
                "false"
              ],
              [
                "test_strip_leave_whitespace3",
                "false"
              ],
              [
                "test_strip_kill_strong3",
                "false"
              ],
              [
                "test_clean4",
                "false"
              ],
              [
                "test_clean1",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_strip1",
                "1"
              ],
              [
                "test_strip_kill_strong1",
                "1"
              ],
              [
                "test_strip4",
                "1"
              ],
              [
                "test_strip_html2",
                "1"
              ],
              [
                "test_strip2",
                "1"
              ],
              [
                "test_strip_leave_whitespace2",
                "1"
              ],
              [
                "test_strip_kill_strong2",
                "1"
              ],
              [
                "test_strip_markup_doc",
                "2"
              ],
              [
                "test_strip_kill_strong4",
                "1"
              ],
              [
                "test_clean3",
                "1"
              ],
              [
                "test_clean2",
                "1"
              ],
              [
                "test_strip_html3",
                "1"
              ],
              [
                "test_strip_leave_whitespace4",
                "1"
              ],
              [
                "test_strip3",
                "1"
              ],
              [
                "test_strip_leave_whitespace1",
                "1"
              ],
              [
                "test_strip_html1",
                "1"
              ],
              [
                "test_strip_leave_whitespace3",
                "1"
              ],
              [
                "test_strip_kill_strong3",
                "1"
              ],
              [
                "test_clean4",
                "1"
              ],
              [
                "test_clean1",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_strip1",
                [
                  "tree"
                ]
              ],
              [
                "test_strip_kill_strong1",
                [
                  "cleaner",
                  "tree"
                ]
              ],
              [
                "test_strip4",
                [
                  "tree"
                ]
              ],
              [
                "test_strip_html2",
                []
              ],
              [
                "test_strip2",
                [
                  "tree"
                ]
              ],
              [
                "test_strip_leave_whitespace2",
                [
                  "cleaner",
                  "tree"
                ]
              ],
              [
                "test_strip_kill_strong2",
                [
                  "cleaner",
                  "tree"
                ]
              ],
              [
                "test_strip_markup_doc",
                [
                  "original_string",
                  "stripped_tree",
                  "stripped_string",
                  "original_tree"
                ]
              ],
              [
                "test_strip_kill_strong4",
                [
                  "cleaner",
                  "tree"
                ]
              ],
              [
                "test_clean3",
                [
                  "tree"
                ]
              ],
              [
                "test_clean2",
                [
                  "tree"
                ]
              ],
              [
                "test_strip_html3",
                []
              ],
              [
                "test_strip_leave_whitespace4",
                [
                  "cleaner",
                  "tree"
                ]
              ],
              [
                "test_strip3",
                [
                  "tree"
                ]
              ],
              [
                "test_strip_leave_whitespace1",
                [
                  "cleaner",
                  "tree"
                ]
              ],
              [
                "test_strip_html1",
                []
              ],
              [
                "test_strip_leave_whitespace3",
                [
                  "cleaner",
                  "tree"
                ]
              ],
              [
                "test_strip_kill_strong3",
                [
                  "cleaner",
                  "tree"
                ]
              ],
              [
                "test_clean4",
                [
                  "tree"
                ]
              ],
              [
                "test_clean1",
                [
                  "tree"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_strip1",
                []
              ],
              [
                "test_strip_kill_strong1",
                []
              ],
              [
                "test_strip4",
                []
              ],
              [
                "test_strip_html2",
                []
              ],
              [
                "test_strip2",
                []
              ],
              [
                "test_strip_leave_whitespace2",
                []
              ],
              [
                "test_strip_kill_strong2",
                []
              ],
              [
                "test_strip_markup_doc",
                []
              ],
              [
                "test_strip_kill_strong4",
                []
              ],
              [
                "test_clean3",
                []
              ],
              [
                "test_clean2",
                []
              ],
              [
                "test_strip_html3",
                []
              ],
              [
                "test_strip_leave_whitespace4",
                []
              ],
              [
                "test_strip3",
                []
              ],
              [
                "test_strip_leave_whitespace1",
                []
              ],
              [
                "test_strip_html1",
                []
              ],
              [
                "test_strip_leave_whitespace3",
                []
              ],
              [
                "test_strip_kill_strong3",
                []
              ],
              [
                "test_clean4",
                []
              ],
              [
                "test_clean1",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6105222337964878,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_strip_markup_doc",
                  "test_clean2",
                  0.3989105314600563
                ],
                [
                  "test_strip_markup_doc",
                  "test_strip_html3",
                  0.687026066736683
                ],
                [
                  "test_strip4",
                  "test_strip_html3",
                  0.8409178658720822
                ],
                [
                  "test_strip_html1",
                  "test_strip_html2",
                  1.0
                ],
                [
                  "test_clean4",
                  "test_strip_kill_strong2",
                  0.3868699071282999
                ],
                [
                  "test_strip_kill_strong3",
                  "test_strip_kill_strong4",
                  1.0
                ],
                [
                  "test_clean4",
                  "test_strip_kill_strong3",
                  0.3868699071282999
                ],
                [
                  "test_strip_leave_whitespace1",
                  "test_clean2",
                  0.5096471914376256
                ],
                [
                  "test_strip_markup_doc",
                  "test_strip_kill_strong3",
                  0.3479702934107629
                ],
                [
                  "test_strip_html1",
                  "test_strip_leave_whitespace1",
                  0.5227272727272727
                ],
                [
                  "test_strip4",
                  "test_clean2",
                  0.7142857142857143
                ],
                [
                  "test_strip_leave_whitespace1",
                  "test_strip_kill_strong2",
                  0.5341143647957239
                ],
                [
                  "test_strip_leave_whitespace1",
                  "test_strip_leave_whitespace4",
                  1.0
                ],
                [
                  "test_strip_leave_whitespace2",
                  "test_clean2",
                  0.5096471914376256
                ],
                [
                  "test_strip_markup_doc",
                  "test_strip_kill_strong1",
                  0.3479702934107629
                ],
                [
                  "test_clean3",
                  "test_clean4",
                  1.0
                ],
                [
                  "test_strip4",
                  "test_strip_kill_strong1",
                  0.47495931819953047
                ],
                [
                  "test_strip_leave_whitespace1",
                  "test_strip_kill_strong1",
                  0.5341143647957239
                ],
                [
                  "test_strip3",
                  "test_strip_kill_strong2",
                  0.47495931819953047
                ],
                [
                  "test_strip4",
                  "test_strip_kill_strong3",
                  0.47495931819953047
                ],
                [
                  "test_strip_leave_whitespace2",
                  "test_strip_leave_whitespace4",
                  1.0
                ],
                [
                  "test_strip_html2",
                  "test_clean2",
                  0.5351295510095069
                ],
                [
                  "test_strip_leave_whitespace2",
                  "test_strip_kill_strong2",
                  0.5341143647957239
                ],
                [
                  "test_strip_kill_strong2",
                  "test_strip_kill_strong3",
                  1.0
                ],
                [
                  "test_strip3",
                  "test_strip_leave_whitespace4",
                  0.6625413488689132
                ],
                [
                  "test_strip4",
                  "test_strip_leave_whitespace4",
                  0.6625413488689132
                ],
                [
                  "test_strip_markup_doc",
                  "test_strip_kill_strong2",
                  0.3479702934107629
                ],
                [
                  "test_strip_html2",
                  "test_strip_kill_strong2",
                  0.3499369976247847
                ],
                [
                  "test_clean2",
                  "test_strip_kill_strong2",
                  0.4130081027822004
                ],
                [
                  "test_clean4",
                  "test_strip_kill_strong1",
                  0.3868699071282999
                ],
                [
                  "test_strip4",
                  "test_strip_kill_strong2",
                  0.47495931819953047
                ],
                [
                  "test_strip_markup_doc",
                  "test_strip_leave_whitespace4",
                  0.5275378726728102
                ],
                [
                  "test_strip_leave_whitespace2",
                  "test_strip_kill_strong1",
                  0.5341143647957239
                ],
                [
                  "test_strip3",
                  "test_strip_kill_strong1",
                  0.47495931819953047
                ],
                [
                  "test_strip_html2",
                  "test_strip_leave_whitespace4",
                  0.5227272727272727
                ],
                [
                  "test_strip3",
                  "test_clean2",
                  0.7142857142857143
                ],
                [
                  "test_strip2",
                  "test_strip_leave_whitespace2",
                  0.6625413488689132
                ],
                [
                  "test_strip_leave_whitespace2",
                  "test_strip_kill_strong3",
                  0.5341143647957239
                ],
                [
                  "test_strip2",
                  "test_strip_leave_whitespace3",
                  0.6625413488689132
                ],
                [
                  "test_strip_leave_whitespace3",
                  "test_strip_kill_strong4",
                  0.5341143647957239
                ],
                [
                  "test_strip3",
                  "test_strip_html3",
                  0.8409178658720822
                ],
                [
                  "test_strip_html3",
                  "test_strip_kill_strong1",
                  0.3499369976247847
                ],
                [
                  "test_strip_html1",
                  "test_clean1",
                  0.5351295510095069
                ],
                [
                  "test_strip_html1",
                  "test_clean4",
                  0.5276448530110863
                ],
                [
                  "test_clean3",
                  "test_strip_kill_strong4",
                  0.3868699071282999
                ],
                [
                  "test_strip_html1",
                  "test_strip_leave_whitespace3",
                  0.5227272727272727
                ],
                [
                  "test_strip_html2",
                  "test_clean3",
                  0.5276448530110863
                ],
                [
                  "test_strip_leave_whitespace2",
                  "test_strip_kill_strong4",
                  0.5341143647957239
                ],
                [
                  "test_strip3",
                  "test_strip_kill_strong3",
                  0.47495931819953047
                ],
                [
                  "test_strip1",
                  "test_strip_leave_whitespace2",
                  0.6625413488689132
                ],
                [
                  "test_clean3",
                  "test_strip_kill_strong1",
                  0.3868699071282999
                ],
                [
                  "test_strip_leave_whitespace2",
                  "test_clean1",
                  0.5096471914376256
                ],
                [
                  "test_strip_html1",
                  "test_strip_kill_strong4",
                  0.3499369976247847
                ],
                [
                  "test_strip_leave_whitespace2",
                  "test_clean4",
                  0.4773929622481257
                ],
                [
                  "test_strip3",
                  "test_strip_html1",
                  0.8409178658720822
                ],
                [
                  "test_strip4",
                  "test_strip_markup_doc",
                  0.7290433850821718
                ],
                [
                  "test_clean1",
                  "test_strip_kill_strong1",
                  0.4130081027822004
                ],
                [
                  "test_strip1",
                  "test_strip_kill_strong1",
                  0.47495931819953047
                ],
                [
                  "test_strip4",
                  "test_clean3",
                  0.6761234037828132
                ],
                [
                  "test_clean2",
                  "test_clean3",
                  0.9578414886923188
                ],
                [
                  "test_strip3",
                  "test_strip_leave_whitespace2",
                  0.6625413488689132
                ],
                [
                  "test_strip_kill_strong1",
                  "test_strip_kill_strong2",
                  1.0
                ],
                [
                  "test_strip2",
                  "test_strip4",
                  1.0
                ],
                [
                  "test_strip_markup_doc",
                  "test_strip_kill_strong4",
                  0.3479702934107629
                ],
                [
                  "test_strip2",
                  "test_strip_leave_whitespace1",
                  0.6625413488689132
                ],
                [
                  "test_strip_kill_strong2",
                  "test_strip_kill_strong4",
                  1.0
                ],
                [
                  "test_strip3",
                  "test_clean3",
                  0.6761234037828132
                ],
                [
                  "test_strip3",
                  "test_strip_kill_strong4",
                  0.47495931819953047
                ],
                [
                  "test_strip1",
                  "test_strip_html3",
                  0.8409178658720822
                ],
                [
                  "test_strip1",
                  "test_strip_kill_strong3",
                  0.47495931819953047
                ],
                [
                  "test_strip_leave_whitespace1",
                  "test_clean3",
                  0.4773929622481257
                ],
                [
                  "test_strip4",
                  "test_strip_leave_whitespace2",
                  0.6625413488689132
                ],
                [
                  "test_strip4",
                  "test_strip_leave_whitespace1",
                  0.6625413488689132
                ],
                [
                  "test_strip2",
                  "test_strip_kill_strong4",
                  0.47495931819953047
                ],
                [
                  "test_strip_leave_whitespace3",
                  "test_clean4",
                  0.4773929622481257
                ],
                [
                  "test_strip_leave_whitespace4",
                  "test_clean1",
                  0.5096471914376256
                ],
                [
                  "test_strip_html2",
                  "test_strip_leave_whitespace1",
                  0.5227272727272727
                ],
                [
                  "test_strip_markup_doc",
                  "test_strip_leave_whitespace1",
                  0.5275378726728102
                ],
                [
                  "test_strip_markup_doc",
                  "test_strip_leave_whitespace2",
                  0.5275378726728102
                ],
                [
                  "test_strip1",
                  "test_strip_html1",
                  0.8409178658720822
                ],
                [
                  "test_strip_html2",
                  "test_strip_leave_whitespace2",
                  0.5227272727272727
                ],
                [
                  "test_clean2",
                  "test_strip_kill_strong1",
                  0.4130081027822004
                ],
                [
                  "test_strip_html3",
                  "test_clean4",
                  0.5276448530110863
                ],
                [
                  "test_strip_html1",
                  "test_strip_kill_strong2",
                  0.3499369976247847
                ],
                [
                  "test_strip_html2",
                  "test_strip_kill_strong1",
                  0.3499369976247847
                ],
                [
                  "test_strip_html2",
                  "test_clean1",
                  0.5351295510095069
                ],
                [
                  "test_clean1",
                  "test_strip_kill_strong3",
                  0.4130081027822004
                ],
                [
                  "test_strip_html1",
                  "test_strip_leave_whitespace4",
                  0.5227272727272727
                ],
                [
                  "test_strip_leave_whitespace4",
                  "test_strip_kill_strong1",
                  0.5341143647957239
                ],
                [
                  "test_strip_leave_whitespace3",
                  "test_clean3",
                  0.4773929622481257
                ],
                [
                  "test_clean1",
                  "test_clean3",
                  0.9578414886923188
                ],
                [
                  "test_strip2",
                  "test_clean1",
                  0.7142857142857143
                ],
                [
                  "test_strip2",
                  "test_clean2",
                  0.7142857142857143
                ],
                [
                  "test_strip_html1",
                  "test_clean2",
                  0.5351295510095069
                ],
                [
                  "test_strip4",
                  "test_clean1",
                  0.7142857142857143
                ],
                [
                  "test_strip_leave_whitespace1",
                  "test_strip_kill_strong3",
                  0.5341143647957239
                ],
                [
                  "test_clean3",
                  "test_strip_kill_strong2",
                  0.3868699071282999
                ],
                [
                  "test_strip_leave_whitespace4",
                  "test_strip_kill_strong4",
                  0.5341143647957239
                ],
                [
                  "test_strip3",
                  "test_strip_markup_doc",
                  0.7290433850821718
                ],
                [
                  "test_strip_html2",
                  "test_strip_kill_strong4",
                  0.3499369976247847
                ],
                [
                  "test_strip_leave_whitespace1",
                  "test_clean4",
                  0.4773929622481257
                ],
                [
                  "test_strip_markup_doc",
                  "test_clean1",
                  0.3989105314600563
                ],
                [
                  "test_strip2",
                  "test_strip_leave_whitespace4",
                  0.6625413488689132
                ],
                [
                  "test_strip_html3",
                  "test_strip_kill_strong3",
                  0.3499369976247847
                ],
                [
                  "test_clean2",
                  "test_strip_kill_strong4",
                  0.4130081027822004
                ],
                [
                  "test_strip2",
                  "test_strip_kill_strong2",
                  0.47495931819953047
                ],
                [
                  "test_strip3",
                  "test_strip_html2",
                  0.8409178658720822
                ],
                [
                  "test_strip4",
                  "test_strip_kill_strong4",
                  0.47495931819953047
                ],
                [
                  "test_strip1",
                  "test_strip4",
                  1.0
                ],
                [
                  "test_strip1",
                  "test_strip2",
                  1.0
                ],
                [
                  "test_strip_kill_strong1",
                  "test_strip_kill_strong4",
                  1.0
                ],
                [
                  "test_strip_html3",
                  "test_strip_leave_whitespace1",
                  0.5227272727272727
                ],
                [
                  "test_strip2",
                  "test_strip_html3",
                  0.8409178658720822
                ],
                [
                  "test_strip1",
                  "test_clean3",
                  0.6761234037828132
                ],
                [
                  "test_strip1",
                  "test_strip_kill_strong4",
                  0.47495931819953047
                ],
                [
                  "test_strip3",
                  "test_strip_leave_whitespace1",
                  0.6625413488689132
                ],
                [
                  "test_strip_leave_whitespace3",
                  "test_strip_kill_strong3",
                  0.5341143647957239
                ],
                [
                  "test_strip1",
                  "test_strip_markup_doc",
                  0.7290433850821718
                ],
                [
                  "test_strip_html3",
                  "test_strip_leave_whitespace3",
                  0.5227272727272727
                ],
                [
                  "test_strip3",
                  "test_strip_leave_whitespace3",
                  0.6625413488689132
                ],
                [
                  "test_strip1",
                  "test_strip_html2",
                  0.8409178658720822
                ],
                [
                  "test_strip1",
                  "test_clean1",
                  0.7142857142857143
                ],
                [
                  "test_strip1",
                  "test_clean4",
                  0.6761234037828132
                ],
                [
                  "test_clean1",
                  "test_clean4",
                  0.9578414886923188
                ],
                [
                  "test_strip_leave_whitespace4",
                  "test_strip_kill_strong3",
                  0.5341143647957239
                ],
                [
                  "test_strip2",
                  "test_strip_kill_strong1",
                  0.47495931819953047
                ],
                [
                  "test_strip_leave_whitespace1",
                  "test_strip_leave_whitespace3",
                  1.0
                ],
                [
                  "test_strip1",
                  "test_strip_leave_whitespace3",
                  0.6625413488689132
                ],
                [
                  "test_strip_leave_whitespace2",
                  "test_strip_leave_whitespace3",
                  1.0
                ],
                [
                  "test_strip_html1",
                  "test_strip_kill_strong3",
                  0.3499369976247847
                ],
                [
                  "test_strip_html3",
                  "test_clean3",
                  0.5276448530110863
                ],
                [
                  "test_strip_html1",
                  "test_strip_leave_whitespace2",
                  0.5227272727272727
                ],
                [
                  "test_strip_leave_whitespace1",
                  "test_strip_leave_whitespace2",
                  1.0
                ],
                [
                  "test_clean1",
                  "test_strip_kill_strong4",
                  0.4130081027822004
                ],
                [
                  "test_strip_leave_whitespace4",
                  "test_strip_kill_strong2",
                  0.5341143647957239
                ],
                [
                  "test_strip_html1",
                  "test_strip_kill_strong1",
                  0.3499369976247847
                ],
                [
                  "test_strip_leave_whitespace3",
                  "test_strip_kill_strong1",
                  0.5341143647957239
                ],
                [
                  "test_strip4",
                  "test_strip_html2",
                  0.8409178658720822
                ],
                [
                  "test_strip_leave_whitespace4",
                  "test_clean2",
                  0.5096471914376256
                ],
                [
                  "test_strip_leave_whitespace4",
                  "test_clean3",
                  0.4773929622481257
                ],
                [
                  "test_strip2",
                  "test_strip3",
                  1.0
                ],
                [
                  "test_strip_html1",
                  "test_strip_html3",
                  1.0
                ],
                [
                  "test_strip3",
                  "test_clean1",
                  0.7142857142857143
                ],
                [
                  "test_strip_markup_doc",
                  "test_strip_html2",
                  0.687026066736683
                ],
                [
                  "test_strip3",
                  "test_clean4",
                  0.6761234037828132
                ],
                [
                  "test_strip2",
                  "test_strip_html2",
                  0.8409178658720822
                ],
                [
                  "test_strip_kill_strong1",
                  "test_strip_kill_strong3",
                  1.0
                ],
                [
                  "test_strip_markup_doc",
                  "test_clean3",
                  0.39333108840606035
                ],
                [
                  "test_strip4",
                  "test_clean4",
                  0.6761234037828132
                ],
                [
                  "test_clean4",
                  "test_strip_kill_strong4",
                  0.3868699071282999
                ],
                [
                  "test_strip_html3",
                  "test_strip_leave_whitespace2",
                  0.5227272727272727
                ],
                [
                  "test_strip_leave_whitespace3",
                  "test_clean1",
                  0.5096471914376256
                ],
                [
                  "test_strip1",
                  "test_strip3",
                  1.0
                ],
                [
                  "test_clean3",
                  "test_strip_kill_strong3",
                  0.3868699071282999
                ],
                [
                  "test_strip_leave_whitespace1",
                  "test_strip_kill_strong4",
                  0.5341143647957239
                ],
                [
                  "test_strip_leave_whitespace4",
                  "test_clean4",
                  0.4773929622481257
                ],
                [
                  "test_strip2",
                  "test_strip_markup_doc",
                  0.7290433850821718
                ],
                [
                  "test_strip2",
                  "test_clean3",
                  0.6761234037828132
                ],
                [
                  "test_strip_html3",
                  "test_strip_leave_whitespace4",
                  0.5227272727272727
                ],
                [
                  "test_strip_html3",
                  "test_clean2",
                  0.5351295510095069
                ],
                [
                  "test_clean2",
                  "test_strip_kill_strong3",
                  0.4130081027822004
                ],
                [
                  "test_strip_leave_whitespace3",
                  "test_strip_leave_whitespace4",
                  1.0
                ],
                [
                  "test_strip2",
                  "test_strip_kill_strong3",
                  0.47495931819953047
                ],
                [
                  "test_strip3",
                  "test_strip4",
                  1.0
                ],
                [
                  "test_strip_html3",
                  "test_strip_kill_strong4",
                  0.3499369976247847
                ],
                [
                  "test_strip_markup_doc",
                  "test_strip_leave_whitespace3",
                  0.5275378726728102
                ],
                [
                  "test_clean1",
                  "test_strip_kill_strong2",
                  0.4130081027822004
                ],
                [
                  "test_clean2",
                  "test_clean4",
                  0.9578414886923188
                ],
                [
                  "test_strip_html3",
                  "test_strip_kill_strong2",
                  0.3499369976247847
                ],
                [
                  "test_strip_leave_whitespace2",
                  "test_clean3",
                  0.4773929622481257
                ],
                [
                  "test_strip_html2",
                  "test_strip_leave_whitespace3",
                  0.5227272727272727
                ],
                [
                  "test_strip4",
                  "test_strip_html1",
                  0.8409178658720822
                ],
                [
                  "test_strip4",
                  "test_strip_leave_whitespace3",
                  0.6625413488689132
                ],
                [
                  "test_strip2",
                  "test_strip_html1",
                  0.8409178658720822
                ],
                [
                  "test_strip2",
                  "test_clean4",
                  0.6761234037828132
                ],
                [
                  "test_strip_html2",
                  "test_strip_kill_strong3",
                  0.3499369976247847
                ],
                [
                  "test_clean1",
                  "test_clean2",
                  1.0
                ],
                [
                  "test_strip_html2",
                  "test_strip_html3",
                  1.0
                ],
                [
                  "test_strip1",
                  "test_strip_leave_whitespace4",
                  0.6625413488689132
                ],
                [
                  "test_strip_leave_whitespace1",
                  "test_clean1",
                  0.5096471914376256
                ],
                [
                  "test_strip_html3",
                  "test_clean1",
                  0.5351295510095069
                ],
                [
                  "test_strip_leave_whitespace3",
                  "test_strip_kill_strong2",
                  0.5341143647957239
                ],
                [
                  "test_strip1",
                  "test_strip_kill_strong2",
                  0.47495931819953047
                ],
                [
                  "test_strip_html2",
                  "test_clean4",
                  0.5276448530110863
                ],
                [
                  "test_strip1",
                  "test_clean2",
                  0.7142857142857143
                ],
                [
                  "test_strip_markup_doc",
                  "test_strip_html1",
                  0.687026066736683
                ],
                [
                  "test_strip_markup_doc",
                  "test_clean4",
                  0.39333108840606035
                ],
                [
                  "test_strip1",
                  "test_strip_leave_whitespace1",
                  0.6625413488689132
                ],
                [
                  "test_strip_html1",
                  "test_clean3",
                  0.5276448530110863
                ],
                [
                  "test_strip_leave_whitespace3",
                  "test_clean2",
                  0.5096471914376256
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_strip1",
                "false"
              ],
              [
                "test_strip_kill_strong1",
                "false"
              ],
              [
                "test_strip4",
                "false"
              ],
              [
                "test_strip_html2",
                "false"
              ],
              [
                "test_strip2",
                "false"
              ],
              [
                "test_strip_leave_whitespace2",
                "false"
              ],
              [
                "test_strip_kill_strong2",
                "false"
              ],
              [
                "test_strip_markup_doc",
                "false"
              ],
              [
                "test_strip_kill_strong4",
                "false"
              ],
              [
                "test_clean3",
                "false"
              ],
              [
                "test_clean2",
                "false"
              ],
              [
                "test_strip_html3",
                "false"
              ],
              [
                "test_strip_leave_whitespace4",
                "false"
              ],
              [
                "test_strip3",
                "false"
              ],
              [
                "test_strip_leave_whitespace1",
                "false"
              ],
              [
                "test_strip_html1",
                "false"
              ],
              [
                "test_strip_leave_whitespace3",
                "false"
              ],
              [
                "test_strip_kill_strong3",
                "false"
              ],
              [
                "test_clean4",
                "false"
              ],
              [
                "test_clean1",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 20
      }
    ]
  },
  {
    "name": "tests_\u0026_test_parse_context.py",
    "testCases": [
      {
        "name": "TestParseApparatus",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_apparatus",
                  "[]"
                ],
                [
                  "test_apparatus2",
                  "[]"
                ],
                [
                  "test_apparatus_record2",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_apparatus_record",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_apparatus",
                  "[]"
                ],
                [
                  "test_apparatus2",
                  "[]"
                ],
                [
                  "test_apparatus_record2",
                  "[]"
                ],
                [
                  "test_apparatus_record",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_apparatus",
                  "false"
                ],
                [
                  "test_apparatus2",
                  "false"
                ],
                [
                  "test_apparatus_record2",
                  "false"
                ],
                [
                  "test_apparatus_record",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_apparatus",
                  "false"
                ],
                [
                  "test_apparatus2",
                  "false"
                ],
                [
                  "test_apparatus_record2",
                  "true"
                ],
                [
                  "test_apparatus_record",
                  "true"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_apparatus",
                  "false"
                ],
                [
                  "test_apparatus2",
                  "false"
                ],
                [
                  "test_apparatus_record2",
                  "false"
                ],
                [
                  "test_apparatus_record",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_apparatus",
                  "false"
                ],
                [
                  "test_apparatus2",
                  "false"
                ],
                [
                  "test_apparatus_record2",
                  "false"
                ],
                [
                  "test_apparatus_record",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_apparatus",
                "false"
              ],
              [
                "test_apparatus2",
                "false"
              ],
              [
                "test_apparatus_record2",
                "false"
              ],
              [
                "test_apparatus_record",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_apparatus",
                "false"
              ],
              [
                "test_apparatus2",
                "false"
              ],
              [
                "test_apparatus_record2",
                "false"
              ],
              [
                "test_apparatus_record",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_apparatus",
                []
              ],
              [
                "test_apparatus2",
                []
              ],
              [
                "test_apparatus_record2",
                []
              ],
              [
                "test_apparatus_record",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_apparatus",
                "false"
              ],
              [
                "test_apparatus2",
                "false"
              ],
              [
                "test_apparatus_record2",
                "false"
              ],
              [
                "test_apparatus_record",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_apparatus",
                "false"
              ],
              [
                "test_apparatus2",
                "false"
              ],
              [
                "test_apparatus_record2",
                "false"
              ],
              [
                "test_apparatus_record",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_apparatus",
                  "0"
                ],
                [
                  "test_apparatus2",
                  "0"
                ],
                [
                  "test_apparatus_record2",
                  "0"
                ],
                [
                  "test_apparatus_record",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_apparatus",
                  "0"
                ],
                [
                  "test_apparatus2",
                  "0"
                ],
                [
                  "test_apparatus_record2",
                  "0"
                ],
                [
                  "test_apparatus_record",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_apparatus",
                "false"
              ],
              [
                "test_apparatus2",
                "false"
              ],
              [
                "test_apparatus_record2",
                "false"
              ],
              [
                "test_apparatus_record",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_apparatus",
                "false"
              ],
              [
                "test_apparatus2",
                "false"
              ],
              [
                "test_apparatus_record2",
                "false"
              ],
              [
                "test_apparatus_record",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_apparatus",
                "0"
              ],
              [
                "test_apparatus2",
                "0"
              ],
              [
                "test_apparatus_record2",
                "1"
              ],
              [
                "test_apparatus_record",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_apparatus",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_apparatus2",
                [
                  "s",
                  "expected"
                ]
              ],
              [
                "test_apparatus_record2",
                [
                  "p",
                  "expected"
                ]
              ],
              [
                "test_apparatus_record",
                [
                  "p",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_apparatus",
                []
              ],
              [
                "test_apparatus2",
                []
              ],
              [
                "test_apparatus_record2",
                []
              ],
              [
                "test_apparatus_record",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8060257452432423,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_apparatus2",
                  "test_apparatus_record2",
                  0.885022793924171
                ],
                [
                  "test_apparatus",
                  "test_apparatus_record2",
                  0.7384590488583332
                ],
                [
                  "test_apparatus",
                  "test_apparatus_record",
                  0.8946097830587743
                ],
                [
                  "test_apparatus2",
                  "test_apparatus_record",
                  0.7362843848272906
                ],
                [
                  "test_apparatus_record",
                  "test_apparatus_record2",
                  0.8127397527543463
                ],
                [
                  "test_apparatus",
                  "test_apparatus2",
                  0.769038708036539
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_apparatus",
                "false"
              ],
              [
                "test_apparatus2",
                "false"
              ],
              [
                "test_apparatus_record2",
                "false"
              ],
              [
                "test_apparatus_record",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "tests_\u0026_test_reader_markup.py",
    "testCases": [
      {
        "name": "TestReaderHtml",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_linebreak",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_paragraphs",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_paragraphs2",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_linebreak2",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertIsInstance]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_linebreak",
                  "[]"
                ],
                [
                  "test_paragraphs",
                  "[]"
                ],
                [
                  "test_paragraphs2",
                  "[]"
                ],
                [
                  "test_linebreak2",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_linebreak",
                  "true"
                ],
                [
                  "test_paragraphs",
                  "true"
                ],
                [
                  "test_paragraphs2",
                  "true"
                ],
                [
                  "test_linebreak2",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_linebreak",
                  "false"
                ],
                [
                  "test_paragraphs",
                  "false"
                ],
                [
                  "test_paragraphs2",
                  "false"
                ],
                [
                  "test_linebreak2",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_linebreak",
                  "false"
                ],
                [
                  "test_paragraphs",
                  "false"
                ],
                [
                  "test_paragraphs2",
                  "false"
                ],
                [
                  "test_linebreak2",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_linebreak",
                  "false"
                ],
                [
                  "test_paragraphs",
                  "false"
                ],
                [
                  "test_paragraphs2",
                  "false"
                ],
                [
                  "test_linebreak2",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_linebreak",
                "false"
              ],
              [
                "test_paragraphs",
                "false"
              ],
              [
                "test_paragraphs2",
                "false"
              ],
              [
                "test_linebreak2",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_linebreak",
                "false"
              ],
              [
                "test_paragraphs",
                "false"
              ],
              [
                "test_paragraphs2",
                "false"
              ],
              [
                "test_linebreak2",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_linebreak",
                []
              ],
              [
                "test_paragraphs",
                []
              ],
              [
                "test_paragraphs2",
                []
              ],
              [
                "test_linebreak2",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_linebreak",
                "false"
              ],
              [
                "test_paragraphs",
                "false"
              ],
              [
                "test_paragraphs2",
                "false"
              ],
              [
                "test_linebreak2",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_linebreak",
                "true"
              ],
              [
                "test_paragraphs",
                "true"
              ],
              [
                "test_paragraphs2",
                "true"
              ],
              [
                "test_linebreak2",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_linebreak",
                  "0"
                ],
                [
                  "test_paragraphs",
                  "0"
                ],
                [
                  "test_paragraphs2",
                  "0"
                ],
                [
                  "test_linebreak2",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_linebreak",
                  "0"
                ],
                [
                  "test_paragraphs",
                  "0"
                ],
                [
                  "test_paragraphs2",
                  "0"
                ],
                [
                  "test_linebreak2",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_linebreak",
                "false"
              ],
              [
                "test_paragraphs",
                "false"
              ],
              [
                "test_paragraphs2",
                "false"
              ],
              [
                "test_linebreak2",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_linebreak",
                "false"
              ],
              [
                "test_paragraphs",
                "false"
              ],
              [
                "test_paragraphs2",
                "false"
              ],
              [
                "test_linebreak2",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_linebreak",
                "4"
              ],
              [
                "test_paragraphs",
                "4"
              ],
              [
                "test_paragraphs2",
                "4"
              ],
              [
                "test_linebreak2",
                "4"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_linebreak",
                [
                  "r",
                  "d"
                ]
              ],
              [
                "test_paragraphs",
                [
                  "r",
                  "d"
                ]
              ],
              [
                "test_paragraphs2",
                [
                  "r",
                  "d"
                ]
              ],
              [
                "test_linebreak2",
                [
                  "r",
                  "d"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_linebreak",
                []
              ],
              [
                "test_paragraphs",
                []
              ],
              [
                "test_paragraphs2",
                []
              ],
              [
                "test_linebreak2",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8621639162002507,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_paragraphs2",
                  "test_linebreak",
                  0.7958483649384649
                ],
                [
                  "test_paragraphs",
                  "test_linebreak2",
                  0.8444056094871311
                ],
                [
                  "test_paragraphs",
                  "test_paragraphs2",
                  0.9373377325820819
                ],
                [
                  "test_linebreak",
                  "test_linebreak2",
                  0.9449453353220957
                ],
                [
                  "test_paragraphs",
                  "test_linebreak",
                  0.8290048226542086
                ],
                [
                  "test_paragraphs2",
                  "test_linebreak2",
                  0.8214416322175221
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_linebreak",
                "false"
              ],
              [
                "test_paragraphs",
                "false"
              ],
              [
                "test_paragraphs2",
                "false"
              ],
              [
                "test_linebreak2",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "tests_\u0026_test_scrape_entity.py",
    "testCases": [
      {
        "name": "TestSimpleScrape",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_listfield",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_serialize",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_scrape",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_listfield",
                  "[]"
                ],
                [
                  "test_serialize",
                  "[]"
                ],
                [
                  "test_scrape",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_listfield",
                  "false"
                ],
                [
                  "test_serialize",
                  "false"
                ],
                [
                  "test_scrape",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_listfield",
                  "false"
                ],
                [
                  "test_serialize",
                  "false"
                ],
                [
                  "test_scrape",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_listfield",
                  "false"
                ],
                [
                  "test_serialize",
                  "false"
                ],
                [
                  "test_scrape",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_listfield",
                  "false"
                ],
                [
                  "test_serialize",
                  "false"
                ],
                [
                  "test_scrape",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_listfield",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ],
              [
                "test_scrape",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_listfield",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ],
              [
                "test_scrape",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_listfield",
                []
              ],
              [
                "test_serialize",
                []
              ],
              [
                "test_scrape",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_listfield",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ],
              [
                "test_scrape",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_listfield",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ],
              [
                "test_scrape",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_listfield",
                  "0"
                ],
                [
                  "test_serialize",
                  "0"
                ],
                [
                  "test_scrape",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_listfield",
                  "0"
                ],
                [
                  "test_serialize",
                  "0"
                ],
                [
                  "test_scrape",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_listfield",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ],
              [
                "test_scrape",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_listfield",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ],
              [
                "test_scrape",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_listfield",
                "2"
              ],
              [
                "test_serialize",
                "1"
              ],
              [
                "test_scrape",
                "3"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_listfield",
                []
              ],
              [
                "test_serialize",
                []
              ],
              [
                "test_scrape",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_listfield",
                [
                  "self.scraped"
                ]
              ],
              [
                "test_serialize",
                [
                  "self.scraped"
                ]
              ],
              [
                "test_scrape",
                [
                  "self.scraped"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4321355738933797,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_listfield",
                  "test_serialize",
                  0.2969569354582493
                ],
                [
                  "test_scrape",
                  "test_listfield",
                  0.5547001962252291
                ],
                [
                  "test_scrape",
                  "test_serialize",
                  0.44474958999666064
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_listfield",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ],
              [
                "test_scrape",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      },
      {
        "name": "TestMultiScrape",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_scrape_results",
                  "[PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_serialize",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_scrape_multiple",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_scrape_results",
                  "[]"
                ],
                [
                  "test_serialize",
                  "[]"
                ],
                [
                  "test_scrape_multiple",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_scrape_results",
                  "false"
                ],
                [
                  "test_serialize",
                  "false"
                ],
                [
                  "test_scrape_multiple",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_scrape_results",
                  "true"
                ],
                [
                  "test_serialize",
                  "false"
                ],
                [
                  "test_scrape_multiple",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_scrape_results",
                  "false"
                ],
                [
                  "test_serialize",
                  "false"
                ],
                [
                  "test_scrape_multiple",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_scrape_results",
                  "false"
                ],
                [
                  "test_serialize",
                  "false"
                ],
                [
                  "test_scrape_multiple",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_results",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ],
              [
                "test_scrape_multiple",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_results",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ],
              [
                "test_scrape_multiple",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_results",
                []
              ],
              [
                "test_serialize",
                []
              ],
              [
                "test_scrape_multiple",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_results",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ],
              [
                "test_scrape_multiple",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_scrape_results",
                "true"
              ],
              [
                "test_serialize",
                "false"
              ],
              [
                "test_scrape_multiple",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_scrape_results",
                  "0"
                ],
                [
                  "test_serialize",
                  "0"
                ],
                [
                  "test_scrape_multiple",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_scrape_results",
                  "0"
                ],
                [
                  "test_serialize",
                  "0"
                ],
                [
                  "test_scrape_multiple",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_results",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ],
              [
                "test_scrape_multiple",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_results",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ],
              [
                "test_scrape_multiple",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_results",
                "3"
              ],
              [
                "test_serialize",
                "1"
              ],
              [
                "test_scrape_multiple",
                "6"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_results",
                []
              ],
              [
                "test_serialize",
                []
              ],
              [
                "test_scrape_multiple",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_results",
                [
                  "self.blogs"
                ]
              ],
              [
                "test_serialize",
                [
                  "self.blogs"
                ]
              ],
              [
                "test_scrape_multiple",
                [
                  "self.blogs"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.33269361352477583,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_scrape_results",
                  "test_serialize",
                  0.24948222243347284
                ],
                [
                  "test_scrape_multiple",
                  "test_serialize",
                  0.25352484665251757
                ],
                [
                  "test_scrape_multiple",
                  "test_scrape_results",
                  0.4950737714883371
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_results",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ],
              [
                "test_scrape_multiple",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      },
      {
        "name": "TestComplexScrape",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_scrape_results",
                  "[PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_scrape_multiple",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_serialize",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_scrape_results",
                  "[]"
                ],
                [
                  "test_scrape_multiple",
                  "[]"
                ],
                [
                  "test_serialize",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_scrape_results",
                  "false"
                ],
                [
                  "test_scrape_multiple",
                  "false"
                ],
                [
                  "test_serialize",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_scrape_results",
                  "true"
                ],
                [
                  "test_scrape_multiple",
                  "false"
                ],
                [
                  "test_serialize",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_scrape_results",
                  "false"
                ],
                [
                  "test_scrape_multiple",
                  "false"
                ],
                [
                  "test_serialize",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_scrape_results",
                  "false"
                ],
                [
                  "test_scrape_multiple",
                  "false"
                ],
                [
                  "test_serialize",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_results",
                "false"
              ],
              [
                "test_scrape_multiple",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_results",
                "false"
              ],
              [
                "test_scrape_multiple",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_results",
                []
              ],
              [
                "test_scrape_multiple",
                []
              ],
              [
                "test_serialize",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_results",
                "false"
              ],
              [
                "test_scrape_multiple",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_scrape_results",
                "true"
              ],
              [
                "test_scrape_multiple",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_scrape_results",
                  "0"
                ],
                [
                  "test_scrape_multiple",
                  "0"
                ],
                [
                  "test_serialize",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_scrape_results",
                  "0"
                ],
                [
                  "test_scrape_multiple",
                  "0"
                ],
                [
                  "test_serialize",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_results",
                "false"
              ],
              [
                "test_scrape_multiple",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_results",
                "false"
              ],
              [
                "test_scrape_multiple",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_results",
                "3"
              ],
              [
                "test_scrape_multiple",
                "6"
              ],
              [
                "test_serialize",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_results",
                []
              ],
              [
                "test_scrape_multiple",
                []
              ],
              [
                "test_serialize",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_results",
                [
                  "self.scrapes"
                ]
              ],
              [
                "test_scrape_multiple",
                [
                  "self.scrapes"
                ]
              ],
              [
                "test_serialize",
                [
                  "self.scrapes"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.29545917680230294,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_scrape_multiple",
                  "test_scrape_results",
                  0.5247781977776373
                ],
                [
                  "test_scrape_results",
                  "test_serialize",
                  0.19258276819425976
                ],
                [
                  "test_scrape_multiple",
                  "test_serialize",
                  0.16901656443501173
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_results",
                "false"
              ],
              [
                "test_scrape_multiple",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      },
      {
        "name": "TestCssScrape",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_scrape_multiple",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_scrape_results",
                  "[PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_serialize",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_scrape_multiple",
                  "[]"
                ],
                [
                  "test_scrape_results",
                  "[]"
                ],
                [
                  "test_serialize",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_scrape_multiple",
                  "false"
                ],
                [
                  "test_scrape_results",
                  "false"
                ],
                [
                  "test_serialize",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_scrape_multiple",
                  "false"
                ],
                [
                  "test_scrape_results",
                  "true"
                ],
                [
                  "test_serialize",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_scrape_multiple",
                  "false"
                ],
                [
                  "test_scrape_results",
                  "false"
                ],
                [
                  "test_serialize",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_scrape_multiple",
                  "false"
                ],
                [
                  "test_scrape_results",
                  "false"
                ],
                [
                  "test_serialize",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_multiple",
                "false"
              ],
              [
                "test_scrape_results",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_multiple",
                "false"
              ],
              [
                "test_scrape_results",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_multiple",
                []
              ],
              [
                "test_scrape_results",
                []
              ],
              [
                "test_serialize",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_multiple",
                "false"
              ],
              [
                "test_scrape_results",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_scrape_multiple",
                "false"
              ],
              [
                "test_scrape_results",
                "true"
              ],
              [
                "test_serialize",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_scrape_multiple",
                  "0"
                ],
                [
                  "test_scrape_results",
                  "0"
                ],
                [
                  "test_serialize",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_scrape_multiple",
                  "0"
                ],
                [
                  "test_scrape_results",
                  "0"
                ],
                [
                  "test_serialize",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_multiple",
                "false"
              ],
              [
                "test_scrape_results",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_multiple",
                "false"
              ],
              [
                "test_scrape_results",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_multiple",
                "6"
              ],
              [
                "test_scrape_results",
                "3"
              ],
              [
                "test_serialize",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_multiple",
                []
              ],
              [
                "test_scrape_results",
                []
              ],
              [
                "test_serialize",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_multiple",
                [
                  "self.scrapes"
                ]
              ],
              [
                "test_scrape_results",
                [
                  "self.scrapes"
                ]
              ],
              [
                "test_serialize",
                [
                  "self.scrapes"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.29545917680230294,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_scrape_multiple",
                  "test_scrape_results",
                  0.5247781977776373
                ],
                [
                  "test_scrape_results",
                  "test_serialize",
                  0.19258276819425976
                ],
                [
                  "test_scrape_multiple",
                  "test_serialize",
                  0.16901656443501173
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_scrape_multiple",
                "false"
              ],
              [
                "test_scrape_results",
                "false"
              ],
              [
                "test_serialize",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_scrape_fields.py",
    "testCases": [
      {
        "name": "TestFieldScrape",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_serialize",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_lowerstring",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_date",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_float",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_string",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_int",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_bool",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_serialize",
                  "[]"
                ],
                [
                  "test_lowerstring",
                  "[]"
                ],
                [
                  "test_date",
                  "[]"
                ],
                [
                  "test_float",
                  "[]"
                ],
                [
                  "test_string",
                  "[]"
                ],
                [
                  "test_int",
                  "[]"
                ],
                [
                  "test_bool",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_serialize",
                  "false"
                ],
                [
                  "test_lowerstring",
                  "false"
                ],
                [
                  "test_date",
                  "false"
                ],
                [
                  "test_float",
                  "false"
                ],
                [
                  "test_string",
                  "false"
                ],
                [
                  "test_int",
                  "false"
                ],
                [
                  "test_bool",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_serialize",
                  "false"
                ],
                [
                  "test_lowerstring",
                  "false"
                ],
                [
                  "test_date",
                  "false"
                ],
                [
                  "test_float",
                  "false"
                ],
                [
                  "test_string",
                  "false"
                ],
                [
                  "test_int",
                  "false"
                ],
                [
                  "test_bool",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_serialize",
                  "false"
                ],
                [
                  "test_lowerstring",
                  "false"
                ],
                [
                  "test_date",
                  "false"
                ],
                [
                  "test_float",
                  "false"
                ],
                [
                  "test_string",
                  "false"
                ],
                [
                  "test_int",
                  "false"
                ],
                [
                  "test_bool",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_serialize",
                  "false"
                ],
                [
                  "test_lowerstring",
                  "false"
                ],
                [
                  "test_date",
                  "false"
                ],
                [
                  "test_float",
                  "false"
                ],
                [
                  "test_string",
                  "false"
                ],
                [
                  "test_int",
                  "false"
                ],
                [
                  "test_bool",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_serialize",
                "false"
              ],
              [
                "test_lowerstring",
                "false"
              ],
              [
                "test_date",
                "false"
              ],
              [
                "test_float",
                "false"
              ],
              [
                "test_string",
                "false"
              ],
              [
                "test_int",
                "false"
              ],
              [
                "test_bool",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_serialize",
                "false"
              ],
              [
                "test_lowerstring",
                "false"
              ],
              [
                "test_date",
                "false"
              ],
              [
                "test_float",
                "false"
              ],
              [
                "test_string",
                "false"
              ],
              [
                "test_int",
                "false"
              ],
              [
                "test_bool",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_serialize",
                []
              ],
              [
                "test_lowerstring",
                []
              ],
              [
                "test_date",
                []
              ],
              [
                "test_float",
                []
              ],
              [
                "test_string",
                []
              ],
              [
                "test_int",
                []
              ],
              [
                "test_bool",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_serialize",
                "false"
              ],
              [
                "test_lowerstring",
                "false"
              ],
              [
                "test_date",
                "false"
              ],
              [
                "test_float",
                "false"
              ],
              [
                "test_string",
                "false"
              ],
              [
                "test_int",
                "false"
              ],
              [
                "test_bool",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_serialize",
                "false"
              ],
              [
                "test_lowerstring",
                "false"
              ],
              [
                "test_date",
                "false"
              ],
              [
                "test_float",
                "true"
              ],
              [
                "test_string",
                "false"
              ],
              [
                "test_int",
                "true"
              ],
              [
                "test_bool",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_serialize",
                  "0"
                ],
                [
                  "test_lowerstring",
                  "0"
                ],
                [
                  "test_date",
                  "0"
                ],
                [
                  "test_float",
                  "0"
                ],
                [
                  "test_string",
                  "0"
                ],
                [
                  "test_int",
                  "0"
                ],
                [
                  "test_bool",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_serialize",
                  "0"
                ],
                [
                  "test_lowerstring",
                  "0"
                ],
                [
                  "test_date",
                  "0"
                ],
                [
                  "test_float",
                  "0"
                ],
                [
                  "test_string",
                  "0"
                ],
                [
                  "test_int",
                  "0"
                ],
                [
                  "test_bool",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_serialize",
                "false"
              ],
              [
                "test_lowerstring",
                "false"
              ],
              [
                "test_date",
                "false"
              ],
              [
                "test_float",
                "false"
              ],
              [
                "test_string",
                "false"
              ],
              [
                "test_int",
                "false"
              ],
              [
                "test_bool",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_serialize",
                "false"
              ],
              [
                "test_lowerstring",
                "false"
              ],
              [
                "test_date",
                "false"
              ],
              [
                "test_float",
                "false"
              ],
              [
                "test_string",
                "false"
              ],
              [
                "test_int",
                "false"
              ],
              [
                "test_bool",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_serialize",
                "1"
              ],
              [
                "test_lowerstring",
                "1"
              ],
              [
                "test_date",
                "1"
              ],
              [
                "test_float",
                "1"
              ],
              [
                "test_string",
                "1"
              ],
              [
                "test_int",
                "1"
              ],
              [
                "test_bool",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_serialize",
                []
              ],
              [
                "test_lowerstring",
                []
              ],
              [
                "test_date",
                []
              ],
              [
                "test_float",
                []
              ],
              [
                "test_string",
                []
              ],
              [
                "test_int",
                []
              ],
              [
                "test_bool",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_serialize",
                [
                  "self.scraped"
                ]
              ],
              [
                "test_lowerstring",
                [
                  "self.scraped"
                ]
              ],
              [
                "test_date",
                [
                  "self.scraped"
                ]
              ],
              [
                "test_float",
                [
                  "self.scraped"
                ]
              ],
              [
                "test_string",
                [
                  "self.scraped"
                ]
              ],
              [
                "test_int",
                [
                  "self.scraped"
                ]
              ],
              [
                "test_bool",
                [
                  "self.scraped"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6078841841645227,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_int",
                  "test_bool",
                  0.75
                ],
                [
                  "test_float",
                  "test_lowerstring",
                  0.6063390625908325
                ],
                [
                  "test_bool",
                  "test_lowerstring",
                  0.625
                ],
                [
                  "test_int",
                  "test_float",
                  0.7882407813680822
                ],
                [
                  "test_date",
                  "test_lowerstring",
                  0.43822991060110733
                ],
                [
                  "test_string",
                  "test_int",
                  0.7071067811865476
                ],
                [
                  "test_float",
                  "test_serialize",
                  0.5181062962530634
                ],
                [
                  "test_bool",
                  "test_serialize",
                  0.5043822047323876
                ],
                [
                  "test_string",
                  "test_lowerstring",
                  0.6481812160876687
                ],
                [
                  "test_int",
                  "test_serialize",
                  0.5043822047323876
                ],
                [
                  "test_float",
                  "test_date",
                  0.5886629461509557
                ],
                [
                  "test_string",
                  "test_serialize",
                  0.5594542388644593
                ],
                [
                  "test_int",
                  "test_lowerstring",
                  0.625
                ],
                [
                  "test_bool",
                  "test_date",
                  0.6067798762169179
                ],
                [
                  "test_lowerstring",
                  "test_serialize",
                  0.35603449745815596
                ],
                [
                  "test_string",
                  "test_float",
                  0.6859943405700354
                ],
                [
                  "test_string",
                  "test_bool",
                  0.7071067811865476
                ],
                [
                  "test_float",
                  "test_bool",
                  0.7276068751089989
                ],
                [
                  "test_string",
                  "test_date",
                  0.5720775535473555
                ],
                [
                  "test_int",
                  "test_date",
                  0.6067798762169179
                ],
                [
                  "test_date",
                  "test_serialize",
                  0.6401024245825554
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_serialize",
                "false"
              ],
              [
                "test_lowerstring",
                "false"
              ],
              [
                "test_date",
                "false"
              ],
              [
                "test_float",
                "false"
              ],
              [
                "test_string",
                "false"
              ],
              [
                "test_int",
                "false"
              ],
              [
                "test_bool",
                "true"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      }
    ]
  },
  {
    "name": "tests_\u0026_test_scrape_selector.py",
    "testCases": [
      {
        "name": "TestSelector",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_html_css",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_html_xpath",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_html_css",
                  "[]"
                ],
                [
                  "test_html_xpath",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_html_css",
                  "false"
                ],
                [
                  "test_html_xpath",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_html_css",
                  "false"
                ],
                [
                  "test_html_xpath",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_html_css",
                  "false"
                ],
                [
                  "test_html_xpath",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_html_css",
                  "false"
                ],
                [
                  "test_html_xpath",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_html_css",
                "false"
              ],
              [
                "test_html_xpath",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_html_css",
                "false"
              ],
              [
                "test_html_xpath",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_html_css",
                []
              ],
              [
                "test_html_xpath",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_html_css",
                "false"
              ],
              [
                "test_html_xpath",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_html_css",
                "true"
              ],
              [
                "test_html_xpath",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_html_css",
                  "0"
                ],
                [
                  "test_html_xpath",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_html_css",
                  "0"
                ],
                [
                  "test_html_xpath",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_html_css",
                "false"
              ],
              [
                "test_html_xpath",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_html_css",
                "false"
              ],
              [
                "test_html_xpath",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_html_css",
                "6"
              ],
              [
                "test_html_xpath",
                "6"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_html_css",
                [
                  "selector"
                ]
              ],
              [
                "test_html_xpath",
                [
                  "selector"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_html_css",
                []
              ],
              [
                "test_html_xpath",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8947368421052629,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_html_xpath",
                  "test_html_css",
                  0.8947368421052629
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_html_css",
                "false"
              ],
              [
                "test_html_xpath",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  }
]