[
  {
    "name": "test_\u0026_python_tests_\u0026_test_mp_class.py",
    "testCases": [
      {
        "name": "TestMissingPrimers",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_create_df",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_group_seqids_unfilled",
                  "[PyCallExpression: self.assertFalse]"
                ],
                [
                  "test_invalid_value",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_group_seqids",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_gather_primer_info",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_len_list_output",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_accept_multiple_prim_lists",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_fill_empty_values",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_create_df",
                  "[]"
                ],
                [
                  "test_group_seqids_unfilled",
                  "[]"
                ],
                [
                  "test_invalid_value",
                  "[]"
                ],
                [
                  "test_group_seqids",
                  "[]"
                ],
                [
                  "test_gather_primer_info",
                  "[]"
                ],
                [
                  "test_len_list_output",
                  "[]"
                ],
                [
                  "test_accept_multiple_prim_lists",
                  "[]"
                ],
                [
                  "test_fill_empty_values",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_create_df",
                  "false"
                ],
                [
                  "test_group_seqids_unfilled",
                  "false"
                ],
                [
                  "test_invalid_value",
                  "false"
                ],
                [
                  "test_group_seqids",
                  "false"
                ],
                [
                  "test_gather_primer_info",
                  "false"
                ],
                [
                  "test_len_list_output",
                  "true"
                ],
                [
                  "test_accept_multiple_prim_lists",
                  "false"
                ],
                [
                  "test_fill_empty_values",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_create_df",
                  "false"
                ],
                [
                  "test_group_seqids_unfilled",
                  "false"
                ],
                [
                  "test_invalid_value",
                  "false"
                ],
                [
                  "test_group_seqids",
                  "false"
                ],
                [
                  "test_gather_primer_info",
                  "true"
                ],
                [
                  "test_len_list_output",
                  "false"
                ],
                [
                  "test_accept_multiple_prim_lists",
                  "false"
                ],
                [
                  "test_fill_empty_values",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_create_df",
                  "false"
                ],
                [
                  "test_group_seqids_unfilled",
                  "false"
                ],
                [
                  "test_invalid_value",
                  "false"
                ],
                [
                  "test_group_seqids",
                  "false"
                ],
                [
                  "test_gather_primer_info",
                  "false"
                ],
                [
                  "test_len_list_output",
                  "false"
                ],
                [
                  "test_accept_multiple_prim_lists",
                  "false"
                ],
                [
                  "test_fill_empty_values",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_create_df",
                  "false"
                ],
                [
                  "test_group_seqids_unfilled",
                  "false"
                ],
                [
                  "test_invalid_value",
                  "false"
                ],
                [
                  "test_group_seqids",
                  "false"
                ],
                [
                  "test_gather_primer_info",
                  "false"
                ],
                [
                  "test_len_list_output",
                  "false"
                ],
                [
                  "test_accept_multiple_prim_lists",
                  "false"
                ],
                [
                  "test_fill_empty_values",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_create_df",
                "false"
              ],
              [
                "test_group_seqids_unfilled",
                "false"
              ],
              [
                "test_invalid_value",
                "false"
              ],
              [
                "test_group_seqids",
                "false"
              ],
              [
                "test_gather_primer_info",
                "false"
              ],
              [
                "test_len_list_output",
                "false"
              ],
              [
                "test_accept_multiple_prim_lists",
                "false"
              ],
              [
                "test_fill_empty_values",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_create_df",
                "false"
              ],
              [
                "test_group_seqids_unfilled",
                "false"
              ],
              [
                "test_invalid_value",
                "false"
              ],
              [
                "test_group_seqids",
                "false"
              ],
              [
                "test_gather_primer_info",
                "false"
              ],
              [
                "test_len_list_output",
                "false"
              ],
              [
                "test_accept_multiple_prim_lists",
                "false"
              ],
              [
                "test_fill_empty_values",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_create_df",
                []
              ],
              [
                "test_group_seqids_unfilled",
                []
              ],
              [
                "test_invalid_value",
                [
                  "self.mp"
                ]
              ],
              [
                "test_group_seqids",
                []
              ],
              [
                "test_gather_primer_info",
                []
              ],
              [
                "test_len_list_output",
                []
              ],
              [
                "test_accept_multiple_prim_lists",
                []
              ],
              [
                "test_fill_empty_values",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_create_df",
                "false"
              ],
              [
                "test_group_seqids_unfilled",
                "false"
              ],
              [
                "test_invalid_value",
                "false"
              ],
              [
                "test_group_seqids",
                "false"
              ],
              [
                "test_gather_primer_info",
                "false"
              ],
              [
                "test_len_list_output",
                "false"
              ],
              [
                "test_accept_multiple_prim_lists",
                "false"
              ],
              [
                "test_fill_empty_values",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_create_df",
                "true"
              ],
              [
                "test_group_seqids_unfilled",
                "false"
              ],
              [
                "test_invalid_value",
                "false"
              ],
              [
                "test_group_seqids",
                "true"
              ],
              [
                "test_gather_primer_info",
                "false"
              ],
              [
                "test_len_list_output",
                "true"
              ],
              [
                "test_accept_multiple_prim_lists",
                "true"
              ],
              [
                "test_fill_empty_values",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_create_df",
                  "0"
                ],
                [
                  "test_group_seqids_unfilled",
                  "0"
                ],
                [
                  "test_invalid_value",
                  "0"
                ],
                [
                  "test_group_seqids",
                  "0"
                ],
                [
                  "test_gather_primer_info",
                  "0"
                ],
                [
                  "test_len_list_output",
                  "0"
                ],
                [
                  "test_accept_multiple_prim_lists",
                  "0"
                ],
                [
                  "test_fill_empty_values",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_create_df",
                  "0"
                ],
                [
                  "test_group_seqids_unfilled",
                  "0"
                ],
                [
                  "test_invalid_value",
                  "0"
                ],
                [
                  "test_group_seqids",
                  "0"
                ],
                [
                  "test_gather_primer_info",
                  "0"
                ],
                [
                  "test_len_list_output",
                  "0"
                ],
                [
                  "test_accept_multiple_prim_lists",
                  "0"
                ],
                [
                  "test_fill_empty_values",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_create_df",
                "false"
              ],
              [
                "test_group_seqids_unfilled",
                "false"
              ],
              [
                "test_invalid_value",
                "false"
              ],
              [
                "test_group_seqids",
                "false"
              ],
              [
                "test_gather_primer_info",
                "false"
              ],
              [
                "test_len_list_output",
                "false"
              ],
              [
                "test_accept_multiple_prim_lists",
                "false"
              ],
              [
                "test_fill_empty_values",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_create_df",
                "false"
              ],
              [
                "test_group_seqids_unfilled",
                "false"
              ],
              [
                "test_invalid_value",
                "false"
              ],
              [
                "test_group_seqids",
                "false"
              ],
              [
                "test_gather_primer_info",
                "false"
              ],
              [
                "test_len_list_output",
                "false"
              ],
              [
                "test_accept_multiple_prim_lists",
                "false"
              ],
              [
                "test_fill_empty_values",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_create_df",
                "1"
              ],
              [
                "test_group_seqids_unfilled",
                "1"
              ],
              [
                "test_invalid_value",
                "2"
              ],
              [
                "test_group_seqids",
                "1"
              ],
              [
                "test_gather_primer_info",
                "1"
              ],
              [
                "test_len_list_output",
                "1"
              ],
              [
                "test_accept_multiple_prim_lists",
                "1"
              ],
              [
                "test_fill_empty_values",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_create_df",
                [
                  "prim_list_1",
                  "primer_df"
                ]
              ],
              [
                "test_group_seqids_unfilled",
                [
                  "no_missing_vals"
                ]
              ],
              [
                "test_invalid_value",
                []
              ],
              [
                "test_group_seqids",
                []
              ],
              [
                "test_gather_primer_info",
                [
                  "primer_info"
                ]
              ],
              [
                "test_len_list_output",
                [
                  "prim_list_1"
                ]
              ],
              [
                "test_accept_multiple_prim_lists",
                [
                  "prim_list_1",
                  "prim_list_2",
                  "primer_df"
                ]
              ],
              [
                "test_fill_empty_values",
                [
                  "all_params",
                  "missing_params"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_create_df",
                [
                  "self.mp"
                ]
              ],
              [
                "test_group_seqids_unfilled",
                [
                  "self.mp"
                ]
              ],
              [
                "test_invalid_value",
                []
              ],
              [
                "test_group_seqids",
                [
                  "self.mp"
                ]
              ],
              [
                "test_gather_primer_info",
                [
                  "self.mp"
                ]
              ],
              [
                "test_len_list_output",
                [
                  "self.mp"
                ]
              ],
              [
                "test_accept_multiple_prim_lists",
                [
                  "self.mp"
                ]
              ],
              [
                "test_fill_empty_values",
                [
                  "self.mp"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6052950281889863,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_invalid_value",
                  "test_len_list_output",
                  0.5097247535979386
                ],
                [
                  "test_group_seqids",
                  "test_create_df",
                  0.6796082893419316
                ],
                [
                  "test_group_seqids_unfilled",
                  "test_accept_multiple_prim_lists",
                  0.5904935756660239
                ],
                [
                  "test_fill_empty_values",
                  "test_create_df",
                  0.48518108167150875
                ],
                [
                  "test_fill_empty_values",
                  "test_gather_primer_info",
                  0.6108448500152375
                ],
                [
                  "test_group_seqids",
                  "test_gather_primer_info",
                  0.6035791101832757
                ],
                [
                  "test_group_seqids_unfilled",
                  "test_gather_primer_info",
                  0.6759946551567231
                ],
                [
                  "test_group_seqids",
                  "test_len_list_output",
                  0.7664675294473265
                ],
                [
                  "test_group_seqids_unfilled",
                  "test_fill_empty_values",
                  0.7175176469294
                ],
                [
                  "test_len_list_output",
                  "test_accept_multiple_prim_lists",
                  0.7898654591234909
                ],
                [
                  "test_len_list_output",
                  "test_create_df",
                  0.7745547799047715
                ],
                [
                  "test_gather_primer_info",
                  "test_accept_multiple_prim_lists",
                  0.667184980334141
                ],
                [
                  "test_invalid_value",
                  "test_create_df",
                  0.4394061938612852
                ],
                [
                  "test_fill_empty_values",
                  "test_accept_multiple_prim_lists",
                  0.5163716523941785
                ],
                [
                  "test_group_seqids",
                  "test_group_seqids_unfilled",
                  0.5945669668759289
                ],
                [
                  "test_group_seqids",
                  "test_invalid_value",
                  0.5087669711063181
                ],
                [
                  "test_gather_primer_info",
                  "test_len_list_output",
                  0.6360900960671867
                ],
                [
                  "test_group_seqids_unfilled",
                  "test_invalid_value",
                  0.5302373024798148
                ],
                [
                  "test_create_df",
                  "test_accept_multiple_prim_lists",
                  0.8120367416101139
                ],
                [
                  "test_group_seqids",
                  "test_fill_empty_values",
                  0.5199337296742473
                ],
                [
                  "test_fill_empty_values",
                  "test_len_list_output",
                  0.5303214634075972
                ],
                [
                  "test_gather_primer_info",
                  "test_invalid_value",
                  0.521885120034203
                ],
                [
                  "test_invalid_value",
                  "test_accept_multiple_prim_lists",
                  0.5328422010335871
                ],
                [
                  "test_gather_primer_info",
                  "test_create_df",
                  0.6431867497130652
                ],
                [
                  "test_group_seqids_unfilled",
                  "test_len_list_output",
                  0.5673202597088858
                ],
                [
                  "test_fill_empty_values",
                  "test_invalid_value",
                  0.48222623286470295
                ],
                [
                  "test_group_seqids_unfilled",
                  "test_create_df",
                  0.5430209893473685
                ],
                [
                  "test_group_seqids",
                  "test_accept_multiple_prim_lists",
                  0.6990314077413643
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_create_df",
                "false"
              ],
              [
                "test_group_seqids_unfilled",
                "true"
              ],
              [
                "test_invalid_value",
                "false"
              ],
              [
                "test_group_seqids",
                "false"
              ],
              [
                "test_gather_primer_info",
                "false"
              ],
              [
                "test_len_list_output",
                "false"
              ],
              [
                "test_accept_multiple_prim_lists",
                "false"
              ],
              [
                "test_fill_empty_values",
                "true"
              ]
            ]
          }
        ],
        "numberOfMethods": 8
      }
    ]
  },
  {
    "name": "test_\u0026_python_tests_\u0026_test_mp_class_sv.py",
    "testCases": [
      {
        "name": "TestMpClassSV",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_gather_primer_info",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_group_seqids",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_len_list_output",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_create_df",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_group_seqids_unfilled",
                  "[PyCallExpression: self.assertFalse]"
                ],
                [
                  "test_fill_empty_values",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_gather_primer_info",
                  "[]"
                ],
                [
                  "test_group_seqids",
                  "[]"
                ],
                [
                  "test_len_list_output",
                  "[]"
                ],
                [
                  "test_create_df",
                  "[]"
                ],
                [
                  "test_group_seqids_unfilled",
                  "[]"
                ],
                [
                  "test_fill_empty_values",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_gather_primer_info",
                  "false"
                ],
                [
                  "test_group_seqids",
                  "false"
                ],
                [
                  "test_len_list_output",
                  "true"
                ],
                [
                  "test_create_df",
                  "false"
                ],
                [
                  "test_group_seqids_unfilled",
                  "false"
                ],
                [
                  "test_fill_empty_values",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_gather_primer_info",
                  "true"
                ],
                [
                  "test_group_seqids",
                  "false"
                ],
                [
                  "test_len_list_output",
                  "false"
                ],
                [
                  "test_create_df",
                  "false"
                ],
                [
                  "test_group_seqids_unfilled",
                  "false"
                ],
                [
                  "test_fill_empty_values",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_gather_primer_info",
                  "false"
                ],
                [
                  "test_group_seqids",
                  "false"
                ],
                [
                  "test_len_list_output",
                  "false"
                ],
                [
                  "test_create_df",
                  "false"
                ],
                [
                  "test_group_seqids_unfilled",
                  "false"
                ],
                [
                  "test_fill_empty_values",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_gather_primer_info",
                  "false"
                ],
                [
                  "test_group_seqids",
                  "false"
                ],
                [
                  "test_len_list_output",
                  "false"
                ],
                [
                  "test_create_df",
                  "false"
                ],
                [
                  "test_group_seqids_unfilled",
                  "false"
                ],
                [
                  "test_fill_empty_values",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_gather_primer_info",
                "false"
              ],
              [
                "test_group_seqids",
                "false"
              ],
              [
                "test_len_list_output",
                "false"
              ],
              [
                "test_create_df",
                "false"
              ],
              [
                "test_group_seqids_unfilled",
                "false"
              ],
              [
                "test_fill_empty_values",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_gather_primer_info",
                "false"
              ],
              [
                "test_group_seqids",
                "false"
              ],
              [
                "test_len_list_output",
                "false"
              ],
              [
                "test_create_df",
                "false"
              ],
              [
                "test_group_seqids_unfilled",
                "false"
              ],
              [
                "test_fill_empty_values",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_gather_primer_info",
                []
              ],
              [
                "test_group_seqids",
                []
              ],
              [
                "test_len_list_output",
                []
              ],
              [
                "test_create_df",
                []
              ],
              [
                "test_group_seqids_unfilled",
                []
              ],
              [
                "test_fill_empty_values",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_gather_primer_info",
                "false"
              ],
              [
                "test_group_seqids",
                "false"
              ],
              [
                "test_len_list_output",
                "false"
              ],
              [
                "test_create_df",
                "false"
              ],
              [
                "test_group_seqids_unfilled",
                "false"
              ],
              [
                "test_fill_empty_values",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_gather_primer_info",
                "false"
              ],
              [
                "test_group_seqids",
                "true"
              ],
              [
                "test_len_list_output",
                "true"
              ],
              [
                "test_create_df",
                "false"
              ],
              [
                "test_group_seqids_unfilled",
                "false"
              ],
              [
                "test_fill_empty_values",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_gather_primer_info",
                  "0"
                ],
                [
                  "test_group_seqids",
                  "0"
                ],
                [
                  "test_len_list_output",
                  "0"
                ],
                [
                  "test_create_df",
                  "0"
                ],
                [
                  "test_group_seqids_unfilled",
                  "0"
                ],
                [
                  "test_fill_empty_values",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_gather_primer_info",
                  "0"
                ],
                [
                  "test_group_seqids",
                  "0"
                ],
                [
                  "test_len_list_output",
                  "0"
                ],
                [
                  "test_create_df",
                  "0"
                ],
                [
                  "test_group_seqids_unfilled",
                  "0"
                ],
                [
                  "test_fill_empty_values",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_gather_primer_info",
                "false"
              ],
              [
                "test_group_seqids",
                "false"
              ],
              [
                "test_len_list_output",
                "false"
              ],
              [
                "test_create_df",
                "false"
              ],
              [
                "test_group_seqids_unfilled",
                "false"
              ],
              [
                "test_fill_empty_values",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_gather_primer_info",
                "false"
              ],
              [
                "test_group_seqids",
                "false"
              ],
              [
                "test_len_list_output",
                "false"
              ],
              [
                "test_create_df",
                "false"
              ],
              [
                "test_group_seqids_unfilled",
                "false"
              ],
              [
                "test_fill_empty_values",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_gather_primer_info",
                "1"
              ],
              [
                "test_group_seqids",
                "1"
              ],
              [
                "test_len_list_output",
                "1"
              ],
              [
                "test_create_df",
                "1"
              ],
              [
                "test_group_seqids_unfilled",
                "1"
              ],
              [
                "test_fill_empty_values",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_gather_primer_info",
                [
                  "primer_info"
                ]
              ],
              [
                "test_group_seqids",
                []
              ],
              [
                "test_len_list_output",
                [
                  "prim_list_1"
                ]
              ],
              [
                "test_create_df",
                [
                  "prim_list_1",
                  "primer_df"
                ]
              ],
              [
                "test_group_seqids_unfilled",
                [
                  "no_missing_vals"
                ]
              ],
              [
                "test_fill_empty_values",
                [
                  "all_params",
                  "missing_params"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_gather_primer_info",
                [
                  "self.mp"
                ]
              ],
              [
                "test_group_seqids",
                [
                  "self.mp"
                ]
              ],
              [
                "test_len_list_output",
                [
                  "self.mp"
                ]
              ],
              [
                "test_create_df",
                [
                  "self.mp"
                ]
              ],
              [
                "test_group_seqids_unfilled",
                [
                  "self.mp"
                ]
              ],
              [
                "test_fill_empty_values",
                [
                  "self.mp"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.593653549698003,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_group_seqids",
                  "test_create_df",
                  0.5293385049304392
                ],
                [
                  "test_group_seqids_unfilled",
                  "test_gather_primer_info",
                  0.686274533895436
                ],
                [
                  "test_fill_empty_values",
                  "test_len_list_output",
                  0.48926664962644856
                ],
                [
                  "test_group_seqids_unfilled",
                  "test_fill_empty_values",
                  0.7169240807153496
                ],
                [
                  "test_group_seqids",
                  "test_len_list_output",
                  0.6522746734427085
                ],
                [
                  "test_len_list_output",
                  "test_create_df",
                  0.6141471233432182
                ],
                [
                  "test_group_seqids",
                  "test_group_seqids_unfilled",
                  0.6356675227882458
                ],
                [
                  "test_gather_primer_info",
                  "test_len_list_output",
                  0.6517631095504932
                ],
                [
                  "test_gather_primer_info",
                  "test_create_df",
                  0.6381531230899683
                ],
                [
                  "test_group_seqids_unfilled",
                  "test_len_list_output",
                  0.5560188348879606
                ],
                [
                  "test_group_seqids_unfilled",
                  "test_create_df",
                  0.5335230641587351
                ],
                [
                  "test_fill_empty_values",
                  "test_create_df",
                  0.45701621360779204
                ],
                [
                  "test_fill_empty_values",
                  "test_gather_primer_info",
                  0.5913939348113668
                ],
                [
                  "test_group_seqids",
                  "test_fill_empty_values",
                  0.4905524551257965
                ],
                [
                  "test_group_seqids",
                  "test_gather_primer_info",
                  0.6624894214960872
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_gather_primer_info",
                "false"
              ],
              [
                "test_group_seqids",
                "false"
              ],
              [
                "test_len_list_output",
                "false"
              ],
              [
                "test_create_df",
                "false"
              ],
              [
                "test_group_seqids_unfilled",
                "true"
              ],
              [
                "test_fill_empty_values",
                "true"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      }
    ]
  },
  {
    "name": "test_\u0026_python_tests_\u0026_test_primer_tabix.py",
    "testCases": [
      {
        "name": "TestPrimerTabix",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_primer_range_right",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_tabix_results_to_df",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_primer_range_left",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_match_pinfo_to_vcf",
                  "[PyCallExpression: self.assertFalse]"
                ],
                [
                  "test_tabix_fetch",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_merge_left_right",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_create_tabix_df",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_primer_range_right",
                  "[]"
                ],
                [
                  "test_tabix_results_to_df",
                  "[]"
                ],
                [
                  "test_primer_range_left",
                  "[]"
                ],
                [
                  "test_match_pinfo_to_vcf",
                  "[]"
                ],
                [
                  "test_tabix_fetch",
                  "[]"
                ],
                [
                  "test_merge_left_right",
                  "[]"
                ],
                [
                  "test_create_tabix_df",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_primer_range_right",
                  "false"
                ],
                [
                  "test_tabix_results_to_df",
                  "false"
                ],
                [
                  "test_primer_range_left",
                  "false"
                ],
                [
                  "test_match_pinfo_to_vcf",
                  "false"
                ],
                [
                  "test_tabix_fetch",
                  "false"
                ],
                [
                  "test_merge_left_right",
                  "false"
                ],
                [
                  "test_create_tabix_df",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_primer_range_right",
                  "false"
                ],
                [
                  "test_tabix_results_to_df",
                  "false"
                ],
                [
                  "test_primer_range_left",
                  "false"
                ],
                [
                  "test_match_pinfo_to_vcf",
                  "false"
                ],
                [
                  "test_tabix_fetch",
                  "false"
                ],
                [
                  "test_merge_left_right",
                  "false"
                ],
                [
                  "test_create_tabix_df",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_primer_range_right",
                  "false"
                ],
                [
                  "test_tabix_results_to_df",
                  "false"
                ],
                [
                  "test_primer_range_left",
                  "false"
                ],
                [
                  "test_match_pinfo_to_vcf",
                  "false"
                ],
                [
                  "test_tabix_fetch",
                  "false"
                ],
                [
                  "test_merge_left_right",
                  "false"
                ],
                [
                  "test_create_tabix_df",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_primer_range_right",
                  "false"
                ],
                [
                  "test_tabix_results_to_df",
                  "false"
                ],
                [
                  "test_primer_range_left",
                  "false"
                ],
                [
                  "test_match_pinfo_to_vcf",
                  "false"
                ],
                [
                  "test_tabix_fetch",
                  "false"
                ],
                [
                  "test_merge_left_right",
                  "false"
                ],
                [
                  "test_create_tabix_df",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_primer_range_right",
                "false"
              ],
              [
                "test_tabix_results_to_df",
                "false"
              ],
              [
                "test_primer_range_left",
                "false"
              ],
              [
                "test_match_pinfo_to_vcf",
                "false"
              ],
              [
                "test_tabix_fetch",
                "false"
              ],
              [
                "test_merge_left_right",
                "false"
              ],
              [
                "test_create_tabix_df",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_primer_range_right",
                "false"
              ],
              [
                "test_tabix_results_to_df",
                "false"
              ],
              [
                "test_primer_range_left",
                "false"
              ],
              [
                "test_match_pinfo_to_vcf",
                "false"
              ],
              [
                "test_tabix_fetch",
                "false"
              ],
              [
                "test_merge_left_right",
                "false"
              ],
              [
                "test_create_tabix_df",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_primer_range_right",
                [
                  "self.vcf_test",
                  "self.vcf_in",
                  "self.pvcf",
                  "self.vcf",
                  "self.primer_output"
                ]
              ],
              [
                "test_tabix_results_to_df",
                [
                  "self.vcf_test",
                  "self.vcf",
                  "self.primer_output",
                  "self.pinfo"
                ]
              ],
              [
                "test_primer_range_left",
                [
                  "self.vcf_test",
                  "self.vcf_in",
                  "self.pvcf",
                  "self.vcf",
                  "self.primer_output"
                ]
              ],
              [
                "test_match_pinfo_to_vcf",
                [
                  "self.vcf_test",
                  "self.pvcf",
                  "self.vcf",
                  "self.primer_output"
                ]
              ],
              [
                "test_tabix_fetch",
                [
                  "self.vcf_test",
                  "self.vcf",
                  "self.primer_output",
                  "self.pinfo"
                ]
              ],
              [
                "test_merge_left_right",
                [
                  "self.vcf_test",
                  "self.vcf",
                  "self.primer_output",
                  "self.pinfo"
                ]
              ],
              [
                "test_create_tabix_df",
                [
                  "self.vcf_test",
                  "self.vcf_in",
                  "self.pvcf",
                  "self.vcf",
                  "self.pinfo"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_primer_range_right",
                "false"
              ],
              [
                "test_tabix_results_to_df",
                "false"
              ],
              [
                "test_primer_range_left",
                "false"
              ],
              [
                "test_match_pinfo_to_vcf",
                "false"
              ],
              [
                "test_tabix_fetch",
                "false"
              ],
              [
                "test_merge_left_right",
                "false"
              ],
              [
                "test_create_tabix_df",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_primer_range_right",
                "true"
              ],
              [
                "test_tabix_results_to_df",
                "true"
              ],
              [
                "test_primer_range_left",
                "true"
              ],
              [
                "test_match_pinfo_to_vcf",
                "false"
              ],
              [
                "test_tabix_fetch",
                "true"
              ],
              [
                "test_merge_left_right",
                "false"
              ],
              [
                "test_create_tabix_df",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_primer_range_right",
                  "0"
                ],
                [
                  "test_tabix_results_to_df",
                  "0"
                ],
                [
                  "test_primer_range_left",
                  "0"
                ],
                [
                  "test_match_pinfo_to_vcf",
                  "0"
                ],
                [
                  "test_tabix_fetch",
                  "0"
                ],
                [
                  "test_merge_left_right",
                  "0"
                ],
                [
                  "test_create_tabix_df",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_primer_range_right",
                  "0"
                ],
                [
                  "test_tabix_results_to_df",
                  "0"
                ],
                [
                  "test_primer_range_left",
                  "0"
                ],
                [
                  "test_match_pinfo_to_vcf",
                  "0"
                ],
                [
                  "test_tabix_fetch",
                  "0"
                ],
                [
                  "test_merge_left_right",
                  "0"
                ],
                [
                  "test_create_tabix_df",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_primer_range_right",
                "false"
              ],
              [
                "test_tabix_results_to_df",
                "false"
              ],
              [
                "test_primer_range_left",
                "false"
              ],
              [
                "test_match_pinfo_to_vcf",
                "false"
              ],
              [
                "test_tabix_fetch",
                "false"
              ],
              [
                "test_merge_left_right",
                "false"
              ],
              [
                "test_create_tabix_df",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_primer_range_right",
                "false"
              ],
              [
                "test_tabix_results_to_df",
                "false"
              ],
              [
                "test_primer_range_left",
                "false"
              ],
              [
                "test_match_pinfo_to_vcf",
                "false"
              ],
              [
                "test_tabix_fetch",
                "false"
              ],
              [
                "test_merge_left_right",
                "false"
              ],
              [
                "test_create_tabix_df",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_primer_range_right",
                "1"
              ],
              [
                "test_tabix_results_to_df",
                "1"
              ],
              [
                "test_primer_range_left",
                "1"
              ],
              [
                "test_match_pinfo_to_vcf",
                "1"
              ],
              [
                "test_tabix_fetch",
                "1"
              ],
              [
                "test_merge_left_right",
                "1"
              ],
              [
                "test_create_tabix_df",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_primer_range_right",
                []
              ],
              [
                "test_tabix_results_to_df",
                [
                  "left",
                  "left_snps",
                  "normalized",
                  "left_df"
                ]
              ],
              [
                "test_primer_range_left",
                []
              ],
              [
                "test_match_pinfo_to_vcf",
                []
              ],
              [
                "test_tabix_fetch",
                [
                  "left",
                  "left_snps",
                  "normalized"
                ]
              ],
              [
                "test_merge_left_right",
                [
                  "right_df",
                  "merged_df",
                  "left",
                  "left_snps",
                  "normalized",
                  "left_df",
                  "right_snps",
                  "right"
                ]
              ],
              [
                "test_create_tabix_df",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_primer_range_right",
                [
                  "self.pinfo"
                ]
              ],
              [
                "test_tabix_results_to_df",
                [
                  "self.vcf_in",
                  "self.pvcf"
                ]
              ],
              [
                "test_primer_range_left",
                [
                  "self.pinfo"
                ]
              ],
              [
                "test_match_pinfo_to_vcf",
                [
                  "self.vcf_in",
                  "self.pinfo"
                ]
              ],
              [
                "test_tabix_fetch",
                [
                  "self.vcf_in",
                  "self.pvcf"
                ]
              ],
              [
                "test_merge_left_right",
                [
                  "self.vcf_in",
                  "self.pvcf"
                ]
              ],
              [
                "test_create_tabix_df",
                [
                  "self.primer_output"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.49994024895573447,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_primer_range_left",
                  "test_match_pinfo_to_vcf",
                  0.34352452344354983
                ],
                [
                  "test_primer_range_right",
                  "test_tabix_results_to_df",
                  0.5901369081349521
                ],
                [
                  "test_tabix_fetch",
                  "test_merge_left_right",
                  0.8951878997429434
                ],
                [
                  "test_primer_range_left",
                  "test_primer_range_right",
                  0.9801980198019802
                ],
                [
                  "test_primer_range_left",
                  "test_tabix_results_to_df",
                  0.6223261940332222
                ],
                [
                  "test_primer_range_right",
                  "test_merge_left_right",
                  0.5766510267700018
                ],
                [
                  "test_tabix_fetch",
                  "test_tabix_results_to_df",
                  0.9165785722292265
                ],
                [
                  "test_tabix_results_to_df",
                  "test_merge_left_right",
                  0.9219881085806134
                ],
                [
                  "test_create_tabix_df",
                  "test_primer_range_right",
                  0.3184119008671965
                ],
                [
                  "test_create_tabix_df",
                  "test_match_pinfo_to_vcf",
                  0.29591817714964314
                ],
                [
                  "test_match_pinfo_to_vcf",
                  "test_merge_left_right",
                  0.24874406435304378
                ],
                [
                  "test_create_tabix_df",
                  "test_tabix_results_to_df",
                  0.2911484876492837
                ],
                [
                  "test_primer_range_right",
                  "test_tabix_fetch",
                  0.5970223141259935
                ],
                [
                  "test_create_tabix_df",
                  "test_primer_range_left",
                  0.3184119008671965
                ],
                [
                  "test_create_tabix_df",
                  "test_tabix_fetch",
                  0.2571428571428571
                ],
                [
                  "test_create_tabix_df",
                  "test_merge_left_right",
                  0.17128880086197548
                ],
                [
                  "test_match_pinfo_to_vcf",
                  "test_tabix_results_to_df",
                  0.310232977477037
                ],
                [
                  "test_primer_range_left",
                  "test_tabix_fetch",
                  0.6183445396304933
                ],
                [
                  "test_primer_range_right",
                  "test_match_pinfo_to_vcf",
                  0.34352452344354983
                ],
                [
                  "test_match_pinfo_to_vcf",
                  "test_tabix_fetch",
                  0.30531240499566353
                ],
                [
                  "test_primer_range_left",
                  "test_merge_left_right",
                  0.5766510267700018
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_primer_range_right",
                "false"
              ],
              [
                "test_tabix_results_to_df",
                "false"
              ],
              [
                "test_primer_range_left",
                "false"
              ],
              [
                "test_match_pinfo_to_vcf",
                "false"
              ],
              [
                "test_tabix_fetch",
                "false"
              ],
              [
                "test_merge_left_right",
                "true"
              ],
              [
                "test_create_tabix_df",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      }
    ]
  },
  {
    "name": "test_\u0026_python_tests_\u0026_test_sequence_info.py",
    "testCases": [
      {
        "name": "TestSequence",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_reverse_complement",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_handles_lowercase",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_gc_percent",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_format_comp_align",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_0_gc_percent",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_complement",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_pd_local",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_name",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_reverse_sequence",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_reverse_complement",
                  "[]"
                ],
                [
                  "test_handles_lowercase",
                  "[]"
                ],
                [
                  "test_gc_percent",
                  "[]"
                ],
                [
                  "test_format_comp_align",
                  "[]"
                ],
                [
                  "test_0_gc_percent",
                  "[]"
                ],
                [
                  "test_complement",
                  "[]"
                ],
                [
                  "test_pd_local",
                  "[]"
                ],
                [
                  "test_set_name",
                  "[]"
                ],
                [
                  "test_reverse_sequence",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_reverse_complement",
                  "false"
                ],
                [
                  "test_handles_lowercase",
                  "false"
                ],
                [
                  "test_gc_percent",
                  "false"
                ],
                [
                  "test_format_comp_align",
                  "true"
                ],
                [
                  "test_0_gc_percent",
                  "false"
                ],
                [
                  "test_complement",
                  "false"
                ],
                [
                  "test_pd_local",
                  "false"
                ],
                [
                  "test_set_name",
                  "false"
                ],
                [
                  "test_reverse_sequence",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_reverse_complement",
                  "false"
                ],
                [
                  "test_handles_lowercase",
                  "false"
                ],
                [
                  "test_gc_percent",
                  "false"
                ],
                [
                  "test_format_comp_align",
                  "false"
                ],
                [
                  "test_0_gc_percent",
                  "false"
                ],
                [
                  "test_complement",
                  "false"
                ],
                [
                  "test_pd_local",
                  "true"
                ],
                [
                  "test_set_name",
                  "false"
                ],
                [
                  "test_reverse_sequence",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_reverse_complement",
                  "false"
                ],
                [
                  "test_handles_lowercase",
                  "false"
                ],
                [
                  "test_gc_percent",
                  "false"
                ],
                [
                  "test_format_comp_align",
                  "false"
                ],
                [
                  "test_0_gc_percent",
                  "false"
                ],
                [
                  "test_complement",
                  "false"
                ],
                [
                  "test_pd_local",
                  "false"
                ],
                [
                  "test_set_name",
                  "false"
                ],
                [
                  "test_reverse_sequence",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_reverse_complement",
                  "false"
                ],
                [
                  "test_handles_lowercase",
                  "false"
                ],
                [
                  "test_gc_percent",
                  "false"
                ],
                [
                  "test_format_comp_align",
                  "false"
                ],
                [
                  "test_0_gc_percent",
                  "false"
                ],
                [
                  "test_complement",
                  "false"
                ],
                [
                  "test_pd_local",
                  "false"
                ],
                [
                  "test_set_name",
                  "false"
                ],
                [
                  "test_reverse_sequence",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_reverse_complement",
                "false"
              ],
              [
                "test_handles_lowercase",
                "false"
              ],
              [
                "test_gc_percent",
                "false"
              ],
              [
                "test_format_comp_align",
                "false"
              ],
              [
                "test_0_gc_percent",
                "false"
              ],
              [
                "test_complement",
                "false"
              ],
              [
                "test_pd_local",
                "false"
              ],
              [
                "test_set_name",
                "false"
              ],
              [
                "test_reverse_sequence",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_reverse_complement",
                "false"
              ],
              [
                "test_handles_lowercase",
                "false"
              ],
              [
                "test_gc_percent",
                "false"
              ],
              [
                "test_format_comp_align",
                "false"
              ],
              [
                "test_0_gc_percent",
                "false"
              ],
              [
                "test_complement",
                "false"
              ],
              [
                "test_pd_local",
                "false"
              ],
              [
                "test_set_name",
                "false"
              ],
              [
                "test_reverse_sequence",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_reverse_complement",
                [
                  "self.name",
                  "self.primer_dimer"
                ]
              ],
              [
                "test_handles_lowercase",
                [
                  "self.name",
                  "self.primer_dimer"
                ]
              ],
              [
                "test_gc_percent",
                [
                  "self.name",
                  "self.primer_dimer"
                ]
              ],
              [
                "test_format_comp_align",
                [
                  "self.name",
                  "self.seq",
                  "self.primer_dimer"
                ]
              ],
              [
                "test_0_gc_percent",
                [
                  "self.name",
                  "self.seq",
                  "self.primer_dimer"
                ]
              ],
              [
                "test_complement",
                [
                  "self.name",
                  "self.primer_dimer"
                ]
              ],
              [
                "test_pd_local",
                [
                  "self.name",
                  "self.seq"
                ]
              ],
              [
                "test_set_name",
                [
                  "self.seq",
                  "self.primer_dimer"
                ]
              ],
              [
                "test_reverse_sequence",
                [
                  "self.name",
                  "self.primer_dimer"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_reverse_complement",
                "false"
              ],
              [
                "test_handles_lowercase",
                "false"
              ],
              [
                "test_gc_percent",
                "false"
              ],
              [
                "test_format_comp_align",
                "false"
              ],
              [
                "test_0_gc_percent",
                "false"
              ],
              [
                "test_complement",
                "false"
              ],
              [
                "test_pd_local",
                "false"
              ],
              [
                "test_set_name",
                "false"
              ],
              [
                "test_reverse_sequence",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_reverse_complement",
                "false"
              ],
              [
                "test_handles_lowercase",
                "false"
              ],
              [
                "test_gc_percent",
                "true"
              ],
              [
                "test_format_comp_align",
                "false"
              ],
              [
                "test_0_gc_percent",
                "true"
              ],
              [
                "test_complement",
                "false"
              ],
              [
                "test_pd_local",
                "false"
              ],
              [
                "test_set_name",
                "false"
              ],
              [
                "test_reverse_sequence",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_reverse_complement",
                  "0"
                ],
                [
                  "test_handles_lowercase",
                  "0"
                ],
                [
                  "test_gc_percent",
                  "0"
                ],
                [
                  "test_format_comp_align",
                  "0"
                ],
                [
                  "test_0_gc_percent",
                  "0"
                ],
                [
                  "test_complement",
                  "0"
                ],
                [
                  "test_pd_local",
                  "0"
                ],
                [
                  "test_set_name",
                  "0"
                ],
                [
                  "test_reverse_sequence",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_reverse_complement",
                  "0"
                ],
                [
                  "test_handles_lowercase",
                  "0"
                ],
                [
                  "test_gc_percent",
                  "0"
                ],
                [
                  "test_format_comp_align",
                  "0"
                ],
                [
                  "test_0_gc_percent",
                  "0"
                ],
                [
                  "test_complement",
                  "0"
                ],
                [
                  "test_pd_local",
                  "0"
                ],
                [
                  "test_set_name",
                  "0"
                ],
                [
                  "test_reverse_sequence",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_reverse_complement",
                "false"
              ],
              [
                "test_handles_lowercase",
                "false"
              ],
              [
                "test_gc_percent",
                "false"
              ],
              [
                "test_format_comp_align",
                "false"
              ],
              [
                "test_0_gc_percent",
                "false"
              ],
              [
                "test_complement",
                "false"
              ],
              [
                "test_pd_local",
                "false"
              ],
              [
                "test_set_name",
                "false"
              ],
              [
                "test_reverse_sequence",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_reverse_complement",
                "false"
              ],
              [
                "test_handles_lowercase",
                "false"
              ],
              [
                "test_gc_percent",
                "false"
              ],
              [
                "test_format_comp_align",
                "false"
              ],
              [
                "test_0_gc_percent",
                "false"
              ],
              [
                "test_complement",
                "false"
              ],
              [
                "test_pd_local",
                "false"
              ],
              [
                "test_set_name",
                "false"
              ],
              [
                "test_reverse_sequence",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_reverse_complement",
                "1"
              ],
              [
                "test_handles_lowercase",
                "1"
              ],
              [
                "test_gc_percent",
                "1"
              ],
              [
                "test_format_comp_align",
                "1"
              ],
              [
                "test_0_gc_percent",
                "1"
              ],
              [
                "test_complement",
                "1"
              ],
              [
                "test_pd_local",
                "1"
              ],
              [
                "test_set_name",
                "1"
              ],
              [
                "test_reverse_sequence",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_reverse_complement",
                [
                  "reverse_complement_seq"
                ]
              ],
              [
                "test_handles_lowercase",
                [
                  "test_seq",
                  "input_seq"
                ]
              ],
              [
                "test_gc_percent",
                [
                  "gc_float"
                ]
              ],
              [
                "test_format_comp_align",
                [
                  "test",
                  "easy_seq1",
                  "easy_seq2",
                  "local"
                ]
              ],
              [
                "test_0_gc_percent",
                [
                  "gc_float"
                ]
              ],
              [
                "test_complement",
                [
                  "complement_seq"
                ]
              ],
              [
                "test_pd_local",
                [
                  "local"
                ]
              ],
              [
                "test_set_name",
                []
              ],
              [
                "test_reverse_sequence",
                [
                  "reverse_seq"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_reverse_complement",
                [
                  "self.seq"
                ]
              ],
              [
                "test_handles_lowercase",
                [
                  "self.seq"
                ]
              ],
              [
                "test_gc_percent",
                [
                  "self.seq"
                ]
              ],
              [
                "test_format_comp_align",
                []
              ],
              [
                "test_0_gc_percent",
                []
              ],
              [
                "test_complement",
                [
                  "self.seq"
                ]
              ],
              [
                "test_pd_local",
                [
                  "self.primer_dimer"
                ]
              ],
              [
                "test_set_name",
                [
                  "self.name"
                ]
              ],
              [
                "test_reverse_sequence",
                [
                  "self.seq"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.48605840721049925,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_handles_lowercase",
                  "test_reverse_complement",
                  0.5004732608726313
                ],
                [
                  "test_handles_lowercase",
                  "test_pd_local",
                  0.3440511766019877
                ],
                [
                  "test_0_gc_percent",
                  "test_format_comp_align",
                  0.44799781716821685
                ],
                [
                  "test_0_gc_percent",
                  "test_pd_local",
                  0.6439980918603324
                ],
                [
                  "test_reverse_complement",
                  "test_0_gc_percent",
                  0.3394167965134988
                ],
                [
                  "test_complement",
                  "test_reverse_complement",
                  0.783849515338196
                ],
                [
                  "test_set_name",
                  "test_pd_local",
                  0.3405172133031547
                ],
                [
                  "test_gc_percent",
                  "test_0_gc_percent",
                  0.8338277068719855
                ],
                [
                  "test_set_name",
                  "test_reverse_complement",
                  0.49698921993754935
                ],
                [
                  "test_reverse_sequence",
                  "test_gc_percent",
                  0.5122056727163324
                ],
                [
                  "test_reverse_sequence",
                  "test_format_comp_align",
                  0.3830229586152079
                ],
                [
                  "test_reverse_sequence",
                  "test_pd_local",
                  0.37080992435478316
                ],
                [
                  "test_complement",
                  "test_gc_percent",
                  0.5097289246097392
                ],
                [
                  "test_complement",
                  "test_0_gc_percent",
                  0.41808122941317727
                ],
                [
                  "test_complement",
                  "test_format_comp_align",
                  0.4023470271931207
                ],
                [
                  "test_handles_lowercase",
                  "test_0_gc_percent",
                  0.4023398993836123
                ],
                [
                  "test_reverse_complement",
                  "test_pd_local",
                  0.31622776601683794
                ],
                [
                  "test_set_name",
                  "test_reverse_sequence",
                  0.6070536639732901
                ],
                [
                  "test_gc_percent",
                  "test_pd_local",
                  0.5379862223846325
                ],
                [
                  "test_pd_local",
                  "test_format_comp_align",
                  0.4500650167753393
                ],
                [
                  "test_complement",
                  "test_pd_local",
                  0.38951782748808106
                ],
                [
                  "test_handles_lowercase",
                  "test_set_name",
                  0.5749623996456545
                ],
                [
                  "test_set_name",
                  "test_0_gc_percent",
                  0.3387117595240894
                ],
                [
                  "test_reverse_sequence",
                  "test_0_gc_percent",
                  0.39800147287892423
                ],
                [
                  "test_handles_lowercase",
                  "test_reverse_sequence",
                  0.586856917541803
                ],
                [
                  "test_reverse_complement",
                  "test_format_comp_align",
                  0.32664307662963066
                ],
                [
                  "test_handles_lowercase",
                  "test_format_comp_align",
                  0.4914437567696473
                ],
                [
                  "test_gc_percent",
                  "test_format_comp_align",
                  0.3894228909503149
                ],
                [
                  "test_reverse_complement",
                  "test_reverse_sequence",
                  0.7462025072446364
                ],
                [
                  "test_handles_lowercase",
                  "test_complement",
                  0.6164647075317321
                ],
                [
                  "test_reverse_complement",
                  "test_gc_percent",
                  0.4138204408845326
                ],
                [
                  "test_handles_lowercase",
                  "test_gc_percent",
                  0.4622367258209526
                ],
                [
                  "test_set_name",
                  "test_complement",
                  0.6121731929914169
                ],
                [
                  "test_set_name",
                  "test_gc_percent",
                  0.4608403716896187
                ],
                [
                  "test_set_name",
                  "test_format_comp_align",
                  0.3932833437847003
                ],
                [
                  "test_complement",
                  "test_reverse_sequence",
                  0.6565321642986127
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_reverse_complement",
                "false"
              ],
              [
                "test_handles_lowercase",
                "false"
              ],
              [
                "test_gc_percent",
                "false"
              ],
              [
                "test_format_comp_align",
                "true"
              ],
              [
                "test_0_gc_percent",
                "false"
              ],
              [
                "test_complement",
                "false"
              ],
              [
                "test_pd_local",
                "false"
              ],
              [
                "test_set_name",
                "false"
              ],
              [
                "test_reverse_sequence",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 9
      }
    ]
  },
  {
    "name": "test_\u0026_python_tests_\u0026_test_genome_iterator.py",
    "testCases": [
      {
        "name": "TestGenomeIterator",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_match_chr_to_genome",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_flanking_regions_fasta",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_create_dataframe_txt",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_file_extension_success",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_file_extension_failure",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_genome_iterator",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_create_dataframe_csv",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_match_chr_to_genome",
                  "[]"
                ],
                [
                  "test_flanking_regions_fasta",
                  "[]"
                ],
                [
                  "test_create_dataframe_txt",
                  "[]"
                ],
                [
                  "test_file_extension_success",
                  "[]"
                ],
                [
                  "test_file_extension_failure",
                  "[]"
                ],
                [
                  "test_genome_iterator",
                  "[]"
                ],
                [
                  "test_create_dataframe_csv",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_match_chr_to_genome",
                  "false"
                ],
                [
                  "test_flanking_regions_fasta",
                  "false"
                ],
                [
                  "test_create_dataframe_txt",
                  "false"
                ],
                [
                  "test_file_extension_success",
                  "false"
                ],
                [
                  "test_file_extension_failure",
                  "false"
                ],
                [
                  "test_genome_iterator",
                  "false"
                ],
                [
                  "test_create_dataframe_csv",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_match_chr_to_genome",
                  "false"
                ],
                [
                  "test_flanking_regions_fasta",
                  "false"
                ],
                [
                  "test_create_dataframe_txt",
                  "false"
                ],
                [
                  "test_file_extension_success",
                  "false"
                ],
                [
                  "test_file_extension_failure",
                  "false"
                ],
                [
                  "test_genome_iterator",
                  "false"
                ],
                [
                  "test_create_dataframe_csv",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_match_chr_to_genome",
                  "false"
                ],
                [
                  "test_flanking_regions_fasta",
                  "false"
                ],
                [
                  "test_create_dataframe_txt",
                  "false"
                ],
                [
                  "test_file_extension_success",
                  "false"
                ],
                [
                  "test_file_extension_failure",
                  "false"
                ],
                [
                  "test_genome_iterator",
                  "false"
                ],
                [
                  "test_create_dataframe_csv",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_match_chr_to_genome",
                  "false"
                ],
                [
                  "test_flanking_regions_fasta",
                  "false"
                ],
                [
                  "test_create_dataframe_txt",
                  "false"
                ],
                [
                  "test_file_extension_success",
                  "false"
                ],
                [
                  "test_file_extension_failure",
                  "false"
                ],
                [
                  "test_genome_iterator",
                  "false"
                ],
                [
                  "test_create_dataframe_csv",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_match_chr_to_genome",
                "false"
              ],
              [
                "test_flanking_regions_fasta",
                "false"
              ],
              [
                "test_create_dataframe_txt",
                "false"
              ],
              [
                "test_file_extension_success",
                "false"
              ],
              [
                "test_file_extension_failure",
                "false"
              ],
              [
                "test_genome_iterator",
                "false"
              ],
              [
                "test_create_dataframe_csv",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_match_chr_to_genome",
                "false"
              ],
              [
                "test_flanking_regions_fasta",
                "false"
              ],
              [
                "test_create_dataframe_txt",
                "false"
              ],
              [
                "test_file_extension_success",
                "false"
              ],
              [
                "test_file_extension_failure",
                "false"
              ],
              [
                "test_genome_iterator",
                "false"
              ],
              [
                "test_create_dataframe_csv",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_match_chr_to_genome",
                [
                  "self.test_input2",
                  "self.test_input3",
                  "self.ref_genome"
                ]
              ],
              [
                "test_flanking_regions_fasta",
                [
                  "self.test_input2",
                  "self.test_input3",
                  "self.ref_genome"
                ]
              ],
              [
                "test_create_dataframe_txt",
                [
                  "self.genome",
                  "self.test_input3",
                  "self.ref_genome",
                  "self.test_input"
                ]
              ],
              [
                "test_file_extension_success",
                [
                  "self.genome",
                  "self.test_input3",
                  "self.ref_genome",
                  "self.test_input"
                ]
              ],
              [
                "test_file_extension_failure",
                [
                  "self.genome",
                  "self.test_input2",
                  "self.ref_genome",
                  "self.test_input"
                ]
              ],
              [
                "test_genome_iterator",
                [
                  "self.test_input2",
                  "self.test_input3",
                  "self.ref_genome",
                  "self.test_input"
                ]
              ],
              [
                "test_create_dataframe_csv",
                [
                  "self.genome",
                  "self.test_input2",
                  "self.test_input3",
                  "self.ref_genome"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_match_chr_to_genome",
                "false"
              ],
              [
                "test_flanking_regions_fasta",
                "false"
              ],
              [
                "test_create_dataframe_txt",
                "false"
              ],
              [
                "test_file_extension_success",
                "false"
              ],
              [
                "test_file_extension_failure",
                "false"
              ],
              [
                "test_genome_iterator",
                "false"
              ],
              [
                "test_create_dataframe_csv",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_match_chr_to_genome",
                "false"
              ],
              [
                "test_flanking_regions_fasta",
                "false"
              ],
              [
                "test_create_dataframe_txt",
                "false"
              ],
              [
                "test_file_extension_success",
                "false"
              ],
              [
                "test_file_extension_failure",
                "false"
              ],
              [
                "test_genome_iterator",
                "true"
              ],
              [
                "test_create_dataframe_csv",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_match_chr_to_genome",
                  "0"
                ],
                [
                  "test_flanking_regions_fasta",
                  "0"
                ],
                [
                  "test_create_dataframe_txt",
                  "0"
                ],
                [
                  "test_file_extension_success",
                  "0"
                ],
                [
                  "test_file_extension_failure",
                  "0"
                ],
                [
                  "test_genome_iterator",
                  "0"
                ],
                [
                  "test_create_dataframe_csv",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_match_chr_to_genome",
                  "0"
                ],
                [
                  "test_flanking_regions_fasta",
                  "0"
                ],
                [
                  "test_create_dataframe_txt",
                  "0"
                ],
                [
                  "test_file_extension_success",
                  "0"
                ],
                [
                  "test_file_extension_failure",
                  "0"
                ],
                [
                  "test_genome_iterator",
                  "0"
                ],
                [
                  "test_create_dataframe_csv",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_match_chr_to_genome",
                "false"
              ],
              [
                "test_flanking_regions_fasta",
                "false"
              ],
              [
                "test_create_dataframe_txt",
                "false"
              ],
              [
                "test_file_extension_success",
                "false"
              ],
              [
                "test_file_extension_failure",
                "false"
              ],
              [
                "test_genome_iterator",
                "false"
              ],
              [
                "test_create_dataframe_csv",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_match_chr_to_genome",
                "false"
              ],
              [
                "test_flanking_regions_fasta",
                "false"
              ],
              [
                "test_create_dataframe_txt",
                "false"
              ],
              [
                "test_file_extension_success",
                "false"
              ],
              [
                "test_file_extension_failure",
                "false"
              ],
              [
                "test_genome_iterator",
                "false"
              ],
              [
                "test_create_dataframe_csv",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_match_chr_to_genome",
                "1"
              ],
              [
                "test_flanking_regions_fasta",
                "1"
              ],
              [
                "test_create_dataframe_txt",
                "1"
              ],
              [
                "test_file_extension_success",
                "1"
              ],
              [
                "test_file_extension_failure",
                "2"
              ],
              [
                "test_genome_iterator",
                "1"
              ],
              [
                "test_create_dataframe_csv",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_match_chr_to_genome",
                [
                  "dataframe"
                ]
              ],
              [
                "test_flanking_regions_fasta",
                [
                  "dataframe"
                ]
              ],
              [
                "test_create_dataframe_txt",
                []
              ],
              [
                "test_file_extension_success",
                []
              ],
              [
                "test_file_extension_failure",
                []
              ],
              [
                "test_genome_iterator",
                []
              ],
              [
                "test_create_dataframe_csv",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_match_chr_to_genome",
                [
                  "self.genome",
                  "self.test_input"
                ]
              ],
              [
                "test_flanking_regions_fasta",
                [
                  "self.genome",
                  "self.test_input"
                ]
              ],
              [
                "test_create_dataframe_txt",
                [
                  "self.test_input2"
                ]
              ],
              [
                "test_file_extension_success",
                [
                  "self.test_input2"
                ]
              ],
              [
                "test_file_extension_failure",
                [
                  "self.test_input3"
                ]
              ],
              [
                "test_genome_iterator",
                [
                  "self.genome"
                ]
              ],
              [
                "test_create_dataframe_csv",
                [
                  "self.test_input"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.44798113678550405,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_create_dataframe_txt",
                  "test_file_extension_success",
                  0.6495983543529201
                ],
                [
                  "test_file_extension_failure",
                  "test_match_chr_to_genome",
                  0.29250896965085227
                ],
                [
                  "test_genome_iterator",
                  "test_file_extension_success",
                  0.29649972666444047
                ],
                [
                  "test_genome_iterator",
                  "test_create_dataframe_csv",
                  0.3175536744149779
                ],
                [
                  "test_file_extension_success",
                  "test_match_chr_to_genome",
                  0.5793654595023211
                ],
                [
                  "test_create_dataframe_csv",
                  "test_create_dataframe_txt",
                  0.8696565534786725
                ],
                [
                  "test_create_dataframe_csv",
                  "test_match_chr_to_genome",
                  0.6980683814932759
                ],
                [
                  "test_create_dataframe_csv",
                  "test_flanking_regions_fasta",
                  0.39229933572445613
                ],
                [
                  "test_genome_iterator",
                  "test_file_extension_failure",
                  0.41166465371081584
                ],
                [
                  "test_match_chr_to_genome",
                  "test_flanking_regions_fasta",
                  0.43681046537811774
                ],
                [
                  "test_file_extension_failure",
                  "test_flanking_regions_fasta",
                  0.35137019269127184
                ],
                [
                  "test_create_dataframe_csv",
                  "test_file_extension_failure",
                  0.291161615782696
                ],
                [
                  "test_file_extension_success",
                  "test_flanking_regions_fasta",
                  0.3418704033538531
                ],
                [
                  "test_genome_iterator",
                  "test_match_chr_to_genome",
                  0.30240736837950305
                ],
                [
                  "test_create_dataframe_txt",
                  "test_file_extension_failure",
                  0.2869720215917757
                ],
                [
                  "test_create_dataframe_txt",
                  "test_match_chr_to_genome",
                  0.6625413488689132
                ],
                [
                  "test_create_dataframe_csv",
                  "test_file_extension_success",
                  0.6316202918382532
                ],
                [
                  "test_create_dataframe_txt",
                  "test_flanking_regions_fasta",
                  0.36087748355852695
                ],
                [
                  "test_genome_iterator",
                  "test_create_dataframe_txt",
                  0.28690229202651557
                ],
                [
                  "test_genome_iterator",
                  "test_flanking_regions_fasta",
                  0.4235587248015105
                ],
                [
                  "test_file_extension_success",
                  "test_file_extension_failure",
                  0.5242965552319167
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_match_chr_to_genome",
                "false"
              ],
              [
                "test_flanking_regions_fasta",
                "false"
              ],
              [
                "test_create_dataframe_txt",
                "false"
              ],
              [
                "test_file_extension_success",
                "false"
              ],
              [
                "test_file_extension_failure",
                "false"
              ],
              [
                "test_genome_iterator",
                "false"
              ],
              [
                "test_create_dataframe_csv",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      }
    ]
  },
  {
    "name": "test_\u0026_python_tests_\u0026_test_primer_cross_hyb.py",
    "testCases": [
      {
        "name": "TestPrimerCrossHyb",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_list_from_gen",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_get_fprimer_percent_aln",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_dimer_true",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_p_list_formatter",
                  "[PyCallExpression: self.assertFalse]"
                ],
                [
                  "test_primer_dimer_local",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_list_from_gen",
                  "[]"
                ],
                [
                  "test_get_fprimer_percent_aln",
                  "[]"
                ],
                [
                  "test_dimer_true",
                  "[]"
                ],
                [
                  "test_p_list_formatter",
                  "[]"
                ],
                [
                  "test_primer_dimer_local",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_list_from_gen",
                  "false"
                ],
                [
                  "test_get_fprimer_percent_aln",
                  "false"
                ],
                [
                  "test_dimer_true",
                  "false"
                ],
                [
                  "test_p_list_formatter",
                  "false"
                ],
                [
                  "test_primer_dimer_local",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_list_from_gen",
                  "false"
                ],
                [
                  "test_get_fprimer_percent_aln",
                  "false"
                ],
                [
                  "test_dimer_true",
                  "false"
                ],
                [
                  "test_p_list_formatter",
                  "true"
                ],
                [
                  "test_primer_dimer_local",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_list_from_gen",
                  "false"
                ],
                [
                  "test_get_fprimer_percent_aln",
                  "false"
                ],
                [
                  "test_dimer_true",
                  "false"
                ],
                [
                  "test_p_list_formatter",
                  "false"
                ],
                [
                  "test_primer_dimer_local",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_list_from_gen",
                  "false"
                ],
                [
                  "test_get_fprimer_percent_aln",
                  "false"
                ],
                [
                  "test_dimer_true",
                  "false"
                ],
                [
                  "test_p_list_formatter",
                  "false"
                ],
                [
                  "test_primer_dimer_local",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_list_from_gen",
                "false"
              ],
              [
                "test_get_fprimer_percent_aln",
                "false"
              ],
              [
                "test_dimer_true",
                "false"
              ],
              [
                "test_p_list_formatter",
                "false"
              ],
              [
                "test_primer_dimer_local",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_list_from_gen",
                "false"
              ],
              [
                "test_get_fprimer_percent_aln",
                "false"
              ],
              [
                "test_dimer_true",
                "false"
              ],
              [
                "test_p_list_formatter",
                "false"
              ],
              [
                "test_primer_dimer_local",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_list_from_gen",
                [
                  "self.fp_len",
                  "self.pa",
                  "self.primer_df",
                  "self.dump"
                ]
              ],
              [
                "test_get_fprimer_percent_aln",
                [
                  "self.pd_compare_1_2",
                  "self.pa",
                  "self.primer_df",
                  "self.dump"
                ]
              ],
              [
                "test_dimer_true",
                [
                  "self.fp_len",
                  "self.pa",
                  "self.dump"
                ]
              ],
              [
                "test_p_list_formatter",
                [
                  "self.fp_len",
                  "self.pa",
                  "self.primer_df",
                  "self.dump"
                ]
              ],
              [
                "test_primer_dimer_local",
                [
                  "self.fp_len",
                  "self.pa",
                  "self.primer_df",
                  "self.dump"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_list_from_gen",
                "false"
              ],
              [
                "test_get_fprimer_percent_aln",
                "false"
              ],
              [
                "test_dimer_true",
                "false"
              ],
              [
                "test_p_list_formatter",
                "false"
              ],
              [
                "test_primer_dimer_local",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_list_from_gen",
                "false"
              ],
              [
                "test_get_fprimer_percent_aln",
                "false"
              ],
              [
                "test_dimer_true",
                "true"
              ],
              [
                "test_p_list_formatter",
                "false"
              ],
              [
                "test_primer_dimer_local",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_list_from_gen",
                  "0"
                ],
                [
                  "test_get_fprimer_percent_aln",
                  "0"
                ],
                [
                  "test_dimer_true",
                  "0"
                ],
                [
                  "test_p_list_formatter",
                  "0"
                ],
                [
                  "test_primer_dimer_local",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_list_from_gen",
                  "0"
                ],
                [
                  "test_get_fprimer_percent_aln",
                  "0"
                ],
                [
                  "test_dimer_true",
                  "0"
                ],
                [
                  "test_p_list_formatter",
                  "0"
                ],
                [
                  "test_primer_dimer_local",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_list_from_gen",
                "false"
              ],
              [
                "test_get_fprimer_percent_aln",
                "false"
              ],
              [
                "test_dimer_true",
                "false"
              ],
              [
                "test_p_list_formatter",
                "false"
              ],
              [
                "test_primer_dimer_local",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_list_from_gen",
                "false"
              ],
              [
                "test_get_fprimer_percent_aln",
                "false"
              ],
              [
                "test_dimer_true",
                "false"
              ],
              [
                "test_p_list_formatter",
                "false"
              ],
              [
                "test_primer_dimer_local",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_list_from_gen",
                "1"
              ],
              [
                "test_get_fprimer_percent_aln",
                "1"
              ],
              [
                "test_dimer_true",
                "1"
              ],
              [
                "test_p_list_formatter",
                "1"
              ],
              [
                "test_primer_dimer_local",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_list_from_gen",
                []
              ],
              [
                "test_get_fprimer_percent_aln",
                []
              ],
              [
                "test_dimer_true",
                [
                  "pd_list",
                  "formatted"
                ]
              ],
              [
                "test_p_list_formatter",
                [
                  "pd_list",
                  "formatted"
                ]
              ],
              [
                "test_primer_dimer_local",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_list_from_gen",
                [
                  "self.pd_compare_1_2"
                ]
              ],
              [
                "test_get_fprimer_percent_aln",
                [
                  "self.fp_len"
                ]
              ],
              [
                "test_dimer_true",
                [
                  "self.pd_compare_1_2",
                  "self.primer_df"
                ]
              ],
              [
                "test_p_list_formatter",
                [
                  "self.pd_compare_1_2"
                ]
              ],
              [
                "test_primer_dimer_local",
                [
                  "self.pd_compare_1_2"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5941753182293592,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_primer_dimer_local",
                  "test_p_list_formatter",
                  0.4836194101643707
                ],
                [
                  "test_primer_dimer_local",
                  "test_dimer_true",
                  0.7827094369138926
                ],
                [
                  "test_get_fprimer_percent_aln",
                  "test_dimer_true",
                  0.683423854225187
                ],
                [
                  "test_primer_dimer_local",
                  "test_list_from_gen",
                  0.6127713245929621
                ],
                [
                  "test_get_fprimer_percent_aln",
                  "test_list_from_gen",
                  0.436604128676826
                ],
                [
                  "test_list_from_gen",
                  "test_dimer_true",
                  0.6568459034511087
                ],
                [
                  "test_list_from_gen",
                  "test_p_list_formatter",
                  0.6532268902162529
                ],
                [
                  "test_get_fprimer_percent_aln",
                  "test_primer_dimer_local",
                  0.650098332799159
                ],
                [
                  "test_get_fprimer_percent_aln",
                  "test_p_list_formatter",
                  0.36918487293192237
                ],
                [
                  "test_p_list_formatter",
                  "test_dimer_true",
                  0.6132690283219111
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_list_from_gen",
                "false"
              ],
              [
                "test_get_fprimer_percent_aln",
                "false"
              ],
              [
                "test_dimer_true",
                "false"
              ],
              [
                "test_p_list_formatter",
                "false"
              ],
              [
                "test_primer_dimer_local",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      }
    ]
  },
  {
    "name": "test_\u0026_python_tests_\u0026_test_analyze_pcr_output.py",
    "testCases": [
      {
        "name": "TestAnalyzePcrOutput",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_split_name_pos",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_merge_good_total",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_split_headers_list",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_generate_pcr_df_off_target",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_fasta_parser",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_chr_split_list",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_filter_merged",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_to_order_plate",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_gc_percent_seqs",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_merge_info",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_split_name_pos",
                  "[]"
                ],
                [
                  "test_merge_good_total",
                  "[]"
                ],
                [
                  "test_split_headers_list",
                  "[]"
                ],
                [
                  "test_generate_pcr_df_off_target",
                  "[]"
                ],
                [
                  "test_fasta_parser",
                  "[]"
                ],
                [
                  "test_chr_split_list",
                  "[]"
                ],
                [
                  "test_filter_merged",
                  "[]"
                ],
                [
                  "test_to_order_plate",
                  "[]"
                ],
                [
                  "test_gc_percent_seqs",
                  "[]"
                ],
                [
                  "test_merge_info",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_split_name_pos",
                  "false"
                ],
                [
                  "test_merge_good_total",
                  "false"
                ],
                [
                  "test_split_headers_list",
                  "false"
                ],
                [
                  "test_generate_pcr_df_off_target",
                  "false"
                ],
                [
                  "test_fasta_parser",
                  "false"
                ],
                [
                  "test_chr_split_list",
                  "false"
                ],
                [
                  "test_filter_merged",
                  "false"
                ],
                [
                  "test_to_order_plate",
                  "false"
                ],
                [
                  "test_gc_percent_seqs",
                  "false"
                ],
                [
                  "test_merge_info",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_split_name_pos",
                  "false"
                ],
                [
                  "test_merge_good_total",
                  "false"
                ],
                [
                  "test_split_headers_list",
                  "false"
                ],
                [
                  "test_generate_pcr_df_off_target",
                  "false"
                ],
                [
                  "test_fasta_parser",
                  "false"
                ],
                [
                  "test_chr_split_list",
                  "false"
                ],
                [
                  "test_filter_merged",
                  "false"
                ],
                [
                  "test_to_order_plate",
                  "false"
                ],
                [
                  "test_gc_percent_seqs",
                  "false"
                ],
                [
                  "test_merge_info",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_split_name_pos",
                  "false"
                ],
                [
                  "test_merge_good_total",
                  "false"
                ],
                [
                  "test_split_headers_list",
                  "false"
                ],
                [
                  "test_generate_pcr_df_off_target",
                  "false"
                ],
                [
                  "test_fasta_parser",
                  "false"
                ],
                [
                  "test_chr_split_list",
                  "false"
                ],
                [
                  "test_filter_merged",
                  "false"
                ],
                [
                  "test_to_order_plate",
                  "false"
                ],
                [
                  "test_gc_percent_seqs",
                  "false"
                ],
                [
                  "test_merge_info",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_split_name_pos",
                  "false"
                ],
                [
                  "test_merge_good_total",
                  "false"
                ],
                [
                  "test_split_headers_list",
                  "false"
                ],
                [
                  "test_generate_pcr_df_off_target",
                  "false"
                ],
                [
                  "test_fasta_parser",
                  "false"
                ],
                [
                  "test_chr_split_list",
                  "false"
                ],
                [
                  "test_filter_merged",
                  "false"
                ],
                [
                  "test_to_order_plate",
                  "false"
                ],
                [
                  "test_gc_percent_seqs",
                  "false"
                ],
                [
                  "test_merge_info",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_split_name_pos",
                "false"
              ],
              [
                "test_merge_good_total",
                "false"
              ],
              [
                "test_split_headers_list",
                "false"
              ],
              [
                "test_generate_pcr_df_off_target",
                "false"
              ],
              [
                "test_fasta_parser",
                "false"
              ],
              [
                "test_chr_split_list",
                "false"
              ],
              [
                "test_filter_merged",
                "false"
              ],
              [
                "test_to_order_plate",
                "false"
              ],
              [
                "test_gc_percent_seqs",
                "false"
              ],
              [
                "test_merge_info",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_split_name_pos",
                "false"
              ],
              [
                "test_merge_good_total",
                "false"
              ],
              [
                "test_split_headers_list",
                "false"
              ],
              [
                "test_generate_pcr_df_off_target",
                "false"
              ],
              [
                "test_fasta_parser",
                "false"
              ],
              [
                "test_chr_split_list",
                "false"
              ],
              [
                "test_filter_merged",
                "false"
              ],
              [
                "test_to_order_plate",
                "false"
              ],
              [
                "test_gc_percent_seqs",
                "false"
              ],
              [
                "test_merge_info",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_split_name_pos",
                [
                  "self.headers",
                  "self.pcr_file",
                  "self.primer_file",
                  "self.gc_list",
                  "self.merged_df",
                  "self.pos_list",
                  "self.bad_primers",
                  "self.pcr_df",
                  "self.seqs",
                  "self.good_primers",
                  "self.filtered",
                  "self.split_headers",
                  "self.chr_list",
                  "self.name_pos_split_list",
                  "self.merged"
                ]
              ],
              [
                "test_merge_good_total",
                [
                  "self.headers",
                  "self.pcr_file",
                  "self.gc_list",
                  "self.merged_df",
                  "self.pos_list",
                  "self.bad_primers",
                  "self.pcr_df",
                  "self.seqs",
                  "self.filtered",
                  "self.split_headers",
                  "self.chr_list",
                  "self.no_chrom",
                  "self.name_pos_split_list",
                  "self.merged"
                ]
              ],
              [
                "test_split_headers_list",
                [
                  "self.pcr_file",
                  "self.primer_file",
                  "self.gc_list",
                  "self.merged_df",
                  "self.pos_list",
                  "self.bad_primers",
                  "self.pcr_df",
                  "self.seqs",
                  "self.good_primers",
                  "self.filtered",
                  "self.split_headers",
                  "self.chr_list",
                  "self.no_chrom",
                  "self.name_pos_split_list",
                  "self.merged"
                ]
              ],
              [
                "test_generate_pcr_df_off_target",
                [
                  "self.headers",
                  "self.pcr_file",
                  "self.primer_file",
                  "self.merged_df",
                  "self.pos_list",
                  "self.bad_primers",
                  "self.pcr_df",
                  "self.seqs",
                  "self.good_primers",
                  "self.filtered",
                  "self.split_headers",
                  "self.chr_list",
                  "self.no_chrom",
                  "self.name_pos_split_list"
                ]
              ],
              [
                "test_fasta_parser",
                [
                  "self.headers",
                  "self.primer_file",
                  "self.gc_list",
                  "self.merged_df",
                  "self.pos_list",
                  "self.bad_primers",
                  "self.pcr_df",
                  "self.seqs",
                  "self.good_primers",
                  "self.filtered",
                  "self.split_headers",
                  "self.chr_list",
                  "self.no_chrom",
                  "self.name_pos_split_list",
                  "self.merged"
                ]
              ],
              [
                "test_chr_split_list",
                [
                  "self.headers",
                  "self.pcr_file",
                  "self.primer_file",
                  "self.gc_list",
                  "self.merged_df",
                  "self.pos_list",
                  "self.bad_primers",
                  "self.pcr_df",
                  "self.seqs",
                  "self.good_primers",
                  "self.filtered",
                  "self.chr_list",
                  "self.no_chrom",
                  "self.name_pos_split_list",
                  "self.merged"
                ]
              ],
              [
                "test_filter_merged",
                [
                  "self.headers",
                  "self.pcr_file",
                  "self.primer_file",
                  "self.gc_list",
                  "self.pos_list",
                  "self.bad_primers",
                  "self.pcr_df",
                  "self.seqs",
                  "self.good_primers",
                  "self.filtered",
                  "self.split_headers",
                  "self.chr_list",
                  "self.no_chrom",
                  "self.name_pos_split_list",
                  "self.merged"
                ]
              ],
              [
                "test_to_order_plate",
                [
                  "self.headers",
                  "self.pcr_file",
                  "self.primer_file",
                  "self.gc_list",
                  "self.merged_df",
                  "self.pos_list",
                  "self.bad_primers",
                  "self.pcr_df",
                  "self.seqs",
                  "self.good_primers",
                  "self.split_headers",
                  "self.chr_list",
                  "self.no_chrom",
                  "self.name_pos_split_list",
                  "self.merged"
                ]
              ],
              [
                "test_gc_percent_seqs",
                [
                  "self.headers",
                  "self.pcr_file",
                  "self.primer_file",
                  "self.gc_list",
                  "self.merged_df",
                  "self.pos_list",
                  "self.bad_primers",
                  "self.pcr_df",
                  "self.good_primers",
                  "self.filtered",
                  "self.split_headers",
                  "self.chr_list",
                  "self.no_chrom",
                  "self.name_pos_split_list",
                  "self.merged"
                ]
              ],
              [
                "test_merge_info",
                [
                  "self.headers",
                  "self.pcr_file",
                  "self.primer_file",
                  "self.gc_list",
                  "self.merged_df",
                  "self.bad_primers",
                  "self.pcr_df",
                  "self.seqs",
                  "self.good_primers",
                  "self.filtered",
                  "self.split_headers",
                  "self.merged"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_split_name_pos",
                "false"
              ],
              [
                "test_merge_good_total",
                "false"
              ],
              [
                "test_split_headers_list",
                "false"
              ],
              [
                "test_generate_pcr_df_off_target",
                "false"
              ],
              [
                "test_fasta_parser",
                "false"
              ],
              [
                "test_chr_split_list",
                "false"
              ],
              [
                "test_filter_merged",
                "false"
              ],
              [
                "test_to_order_plate",
                "false"
              ],
              [
                "test_gc_percent_seqs",
                "false"
              ],
              [
                "test_merge_info",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_split_name_pos",
                "false"
              ],
              [
                "test_merge_good_total",
                "true"
              ],
              [
                "test_split_headers_list",
                "false"
              ],
              [
                "test_generate_pcr_df_off_target",
                "true"
              ],
              [
                "test_fasta_parser",
                "false"
              ],
              [
                "test_chr_split_list",
                "false"
              ],
              [
                "test_filter_merged",
                "true"
              ],
              [
                "test_to_order_plate",
                "true"
              ],
              [
                "test_gc_percent_seqs",
                "true"
              ],
              [
                "test_merge_info",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_split_name_pos",
                  "0"
                ],
                [
                  "test_merge_good_total",
                  "0"
                ],
                [
                  "test_split_headers_list",
                  "0"
                ],
                [
                  "test_generate_pcr_df_off_target",
                  "0"
                ],
                [
                  "test_fasta_parser",
                  "0"
                ],
                [
                  "test_chr_split_list",
                  "0"
                ],
                [
                  "test_filter_merged",
                  "0"
                ],
                [
                  "test_to_order_plate",
                  "0"
                ],
                [
                  "test_gc_percent_seqs",
                  "0"
                ],
                [
                  "test_merge_info",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_split_name_pos",
                  "0"
                ],
                [
                  "test_merge_good_total",
                  "0"
                ],
                [
                  "test_split_headers_list",
                  "0"
                ],
                [
                  "test_generate_pcr_df_off_target",
                  "0"
                ],
                [
                  "test_fasta_parser",
                  "0"
                ],
                [
                  "test_chr_split_list",
                  "0"
                ],
                [
                  "test_filter_merged",
                  "0"
                ],
                [
                  "test_to_order_plate",
                  "0"
                ],
                [
                  "test_gc_percent_seqs",
                  "0"
                ],
                [
                  "test_merge_info",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_split_name_pos",
                "false"
              ],
              [
                "test_merge_good_total",
                "false"
              ],
              [
                "test_split_headers_list",
                "false"
              ],
              [
                "test_generate_pcr_df_off_target",
                "false"
              ],
              [
                "test_fasta_parser",
                "false"
              ],
              [
                "test_chr_split_list",
                "false"
              ],
              [
                "test_filter_merged",
                "false"
              ],
              [
                "test_to_order_plate",
                "false"
              ],
              [
                "test_gc_percent_seqs",
                "false"
              ],
              [
                "test_merge_info",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_split_name_pos",
                "false"
              ],
              [
                "test_merge_good_total",
                "false"
              ],
              [
                "test_split_headers_list",
                "false"
              ],
              [
                "test_generate_pcr_df_off_target",
                "false"
              ],
              [
                "test_fasta_parser",
                "false"
              ],
              [
                "test_chr_split_list",
                "false"
              ],
              [
                "test_filter_merged",
                "false"
              ],
              [
                "test_to_order_plate",
                "false"
              ],
              [
                "test_gc_percent_seqs",
                "false"
              ],
              [
                "test_merge_info",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_split_name_pos",
                "1"
              ],
              [
                "test_merge_good_total",
                "1"
              ],
              [
                "test_split_headers_list",
                "1"
              ],
              [
                "test_generate_pcr_df_off_target",
                "3"
              ],
              [
                "test_fasta_parser",
                "2"
              ],
              [
                "test_chr_split_list",
                "1"
              ],
              [
                "test_filter_merged",
                "1"
              ],
              [
                "test_to_order_plate",
                "2"
              ],
              [
                "test_gc_percent_seqs",
                "1"
              ],
              [
                "test_merge_info",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_split_name_pos",
                []
              ],
              [
                "test_merge_good_total",
                []
              ],
              [
                "test_split_headers_list",
                []
              ],
              [
                "test_generate_pcr_df_off_target",
                [
                  "pcr_df",
                  "good_primers",
                  "bad_primers"
                ]
              ],
              [
                "test_fasta_parser",
                [
                  "seqs",
                  "headers"
                ]
              ],
              [
                "test_chr_split_list",
                []
              ],
              [
                "test_filter_merged",
                []
              ],
              [
                "test_to_order_plate",
                [
                  "forward",
                  "reverse"
                ]
              ],
              [
                "test_gc_percent_seqs",
                []
              ],
              [
                "test_merge_info",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_split_name_pos",
                [
                  "self.no_chrom"
                ]
              ],
              [
                "test_merge_good_total",
                [
                  "self.primer_file",
                  "self.good_primers"
                ]
              ],
              [
                "test_split_headers_list",
                [
                  "self.headers"
                ]
              ],
              [
                "test_generate_pcr_df_off_target",
                [
                  "self.gc_list",
                  "self.merged"
                ]
              ],
              [
                "test_fasta_parser",
                [
                  "self.pcr_file"
                ]
              ],
              [
                "test_chr_split_list",
                [
                  "self.split_headers"
                ]
              ],
              [
                "test_filter_merged",
                [
                  "self.merged_df"
                ]
              ],
              [
                "test_to_order_plate",
                [
                  "self.filtered"
                ]
              ],
              [
                "test_gc_percent_seqs",
                [
                  "self.seqs"
                ]
              ],
              [
                "test_merge_info",
                [
                  "self.pos_list",
                  "self.chr_list",
                  "self.name_pos_split_list",
                  "self.no_chrom"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.37645110491616146,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_gc_percent_seqs",
                  "test_merge_good_total",
                  0.35355339059327373
                ],
                [
                  "test_fasta_parser",
                  "test_split_headers_list",
                  0.4734320764739993
                ],
                [
                  "test_split_name_pos",
                  "test_merge_info",
                  0.40824829046386296
                ],
                [
                  "test_fasta_parser",
                  "test_to_order_plate",
                  0.48546803643764097
                ],
                [
                  "test_split_headers_list",
                  "test_split_name_pos",
                  0.3116511459654997
                ],
                [
                  "test_merge_good_total",
                  "test_to_order_plate",
                  0.43835402965998715
                ],
                [
                  "test_split_headers_list",
                  "test_chr_split_list",
                  0.5608088264582963
                ],
                [
                  "test_split_headers_list",
                  "test_filter_merged",
                  0.25269934785963444
                ],
                [
                  "test_fasta_parser",
                  "test_generate_pcr_df_off_target",
                  0.48366702154607993
                ],
                [
                  "test_chr_split_list",
                  "test_merge_info",
                  0.3045000927970466
                ],
                [
                  "test_chr_split_list",
                  "test_to_order_plate",
                  0.29795093816833756
                ],
                [
                  "test_split_name_pos",
                  "test_to_order_plate",
                  0.2929430027102191
                ],
                [
                  "test_merge_info",
                  "test_generate_pcr_df_off_target",
                  0.3689800439795269
                ],
                [
                  "test_generate_pcr_df_off_target",
                  "test_to_order_plate",
                  0.557977186150059
                ],
                [
                  "test_fasta_parser",
                  "test_chr_split_list",
                  0.38626965196845364
                ],
                [
                  "test_chr_split_list",
                  "test_generate_pcr_df_off_target",
                  0.2716006517137777
                ],
                [
                  "test_split_name_pos",
                  "test_generate_pcr_df_off_target",
                  0.26703560975577234
                ],
                [
                  "test_merge_info",
                  "test_to_order_plate",
                  0.3479083056285025
                ],
                [
                  "test_split_headers_list",
                  "test_to_order_plate",
                  0.2106831288397252
                ],
                [
                  "test_gc_percent_seqs",
                  "test_filter_merged",
                  0.4490502093697089
                ],
                [
                  "test_filter_merged",
                  "test_to_order_plate",
                  0.5333628833421287
                ],
                [
                  "test_gc_percent_seqs",
                  "test_split_headers_list",
                  0.24072846024282468
                ],
                [
                  "test_gc_percent_seqs",
                  "test_generate_pcr_df_off_target",
                  0.37502930030867465
                ],
                [
                  "test_chr_split_list",
                  "test_split_name_pos",
                  0.5424508028966484
                ],
                [
                  "test_fasta_parser",
                  "test_merge_info",
                  0.35143174800275734
                ],
                [
                  "test_split_headers_list",
                  "test_merge_info",
                  0.21531408048872458
                ],
                [
                  "test_chr_split_list",
                  "test_merge_good_total",
                  0.29543947393437575
                ],
                [
                  "test_chr_split_list",
                  "test_filter_merged",
                  0.35737084494593163
                ],
                [
                  "test_generate_pcr_df_off_target",
                  "test_merge_good_total",
                  0.5767790310274042
                ],
                [
                  "test_fasta_parser",
                  "test_gc_percent_seqs",
                  0.39291263899287066
                ],
                [
                  "test_gc_percent_seqs",
                  "test_chr_split_list",
                  0.34044145332459513
                ],
                [
                  "test_split_headers_list",
                  "test_merge_good_total",
                  0.20890725544918332
                ],
                [
                  "test_split_name_pos",
                  "test_filter_merged",
                  0.35136418446315326
                ],
                [
                  "test_fasta_parser",
                  "test_filter_merged",
                  0.5070724870494426
                ],
                [
                  "test_gc_percent_seqs",
                  "test_merge_info",
                  0.32298759674996963
                ],
                [
                  "test_merge_info",
                  "test_filter_merged",
                  0.4016427173844728
                ],
                [
                  "test_fasta_parser",
                  "test_split_name_pos",
                  0.3038218101251
                ],
                [
                  "test_generate_pcr_df_off_target",
                  "test_filter_merged",
                  0.5629604954667468
                ],
                [
                  "test_merge_good_total",
                  "test_filter_merged",
                  0.47628967220784013
                ],
                [
                  "test_split_headers_list",
                  "test_generate_pcr_df_off_target",
                  0.2068237904939208
                ],
                [
                  "test_fasta_parser",
                  "test_merge_good_total",
                  0.39223227027636803
                ],
                [
                  "test_gc_percent_seqs",
                  "test_to_order_plate",
                  0.3889733106610522
                ],
                [
                  "test_merge_info",
                  "test_merge_good_total",
                  0.4479893351905203
                ],
                [
                  "test_split_name_pos",
                  "test_merge_good_total",
                  0.2904737509655563
                ],
                [
                  "test_gc_percent_seqs",
                  "test_split_name_pos",
                  0.3347193406976015
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_split_name_pos",
                "false"
              ],
              [
                "test_merge_good_total",
                "false"
              ],
              [
                "test_split_headers_list",
                "true"
              ],
              [
                "test_generate_pcr_df_off_target",
                "false"
              ],
              [
                "test_fasta_parser",
                "true"
              ],
              [
                "test_chr_split_list",
                "false"
              ],
              [
                "test_filter_merged",
                "false"
              ],
              [
                "test_to_order_plate",
                "false"
              ],
              [
                "test_gc_percent_seqs",
                "false"
              ],
              [
                "test_merge_info",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 10
      }
    ]
  },
  {
    "name": "test_\u0026_python_tests_\u0026_test_genome_iterator_sv.py",
    "testCases": [
      {
        "name": "TestGenomeIterator",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_create_dataframe_translocation_txt",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_file_extension_insertion_success",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_file_extension_failure",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_file_extension_inversion_success",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_flanking_regions_fasta_insertion",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_flanking_regions_fasta_deletion",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_genome_iterator",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_file_extension_translocation_success",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_file_extension_deletion_success",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_flanking_regions_fasta_translocation",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_create_dataframe_txt",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_create_dataframe_insertion_csv",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_match_chr_to_genome_insertion",
                  "[PyCallExpression: self.assertFalse]"
                ],
                [
                  "test_create_dataframe_insertion_txt",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_create_dataframe_csv",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_create_dataframe_translocation_csv",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_match_chr_to_genome",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_create_dataframe_translocation_txt",
                  "[]"
                ],
                [
                  "test_file_extension_insertion_success",
                  "[]"
                ],
                [
                  "test_file_extension_failure",
                  "[]"
                ],
                [
                  "test_file_extension_inversion_success",
                  "[]"
                ],
                [
                  "test_flanking_regions_fasta_insertion",
                  "[]"
                ],
                [
                  "test_flanking_regions_fasta_deletion",
                  "[]"
                ],
                [
                  "test_genome_iterator",
                  "[]"
                ],
                [
                  "test_file_extension_translocation_success",
                  "[]"
                ],
                [
                  "test_file_extension_deletion_success",
                  "[]"
                ],
                [
                  "test_flanking_regions_fasta_translocation",
                  "[]"
                ],
                [
                  "test_create_dataframe_txt",
                  "[]"
                ],
                [
                  "test_create_dataframe_insertion_csv",
                  "[]"
                ],
                [
                  "test_match_chr_to_genome_insertion",
                  "[]"
                ],
                [
                  "test_create_dataframe_insertion_txt",
                  "[]"
                ],
                [
                  "test_create_dataframe_csv",
                  "[]"
                ],
                [
                  "test_create_dataframe_translocation_csv",
                  "[]"
                ],
                [
                  "test_match_chr_to_genome",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_create_dataframe_translocation_txt",
                  "false"
                ],
                [
                  "test_file_extension_insertion_success",
                  "false"
                ],
                [
                  "test_file_extension_failure",
                  "false"
                ],
                [
                  "test_file_extension_inversion_success",
                  "false"
                ],
                [
                  "test_flanking_regions_fasta_insertion",
                  "false"
                ],
                [
                  "test_flanking_regions_fasta_deletion",
                  "false"
                ],
                [
                  "test_genome_iterator",
                  "false"
                ],
                [
                  "test_file_extension_translocation_success",
                  "false"
                ],
                [
                  "test_file_extension_deletion_success",
                  "false"
                ],
                [
                  "test_flanking_regions_fasta_translocation",
                  "false"
                ],
                [
                  "test_create_dataframe_txt",
                  "false"
                ],
                [
                  "test_create_dataframe_insertion_csv",
                  "false"
                ],
                [
                  "test_match_chr_to_genome_insertion",
                  "false"
                ],
                [
                  "test_create_dataframe_insertion_txt",
                  "false"
                ],
                [
                  "test_create_dataframe_csv",
                  "false"
                ],
                [
                  "test_create_dataframe_translocation_csv",
                  "false"
                ],
                [
                  "test_match_chr_to_genome",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_create_dataframe_translocation_txt",
                  "false"
                ],
                [
                  "test_file_extension_insertion_success",
                  "false"
                ],
                [
                  "test_file_extension_failure",
                  "false"
                ],
                [
                  "test_file_extension_inversion_success",
                  "false"
                ],
                [
                  "test_flanking_regions_fasta_insertion",
                  "false"
                ],
                [
                  "test_flanking_regions_fasta_deletion",
                  "false"
                ],
                [
                  "test_genome_iterator",
                  "false"
                ],
                [
                  "test_file_extension_translocation_success",
                  "false"
                ],
                [
                  "test_file_extension_deletion_success",
                  "false"
                ],
                [
                  "test_flanking_regions_fasta_translocation",
                  "false"
                ],
                [
                  "test_create_dataframe_txt",
                  "false"
                ],
                [
                  "test_create_dataframe_insertion_csv",
                  "false"
                ],
                [
                  "test_match_chr_to_genome_insertion",
                  "false"
                ],
                [
                  "test_create_dataframe_insertion_txt",
                  "false"
                ],
                [
                  "test_create_dataframe_csv",
                  "false"
                ],
                [
                  "test_create_dataframe_translocation_csv",
                  "false"
                ],
                [
                  "test_match_chr_to_genome",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_create_dataframe_translocation_txt",
                  "false"
                ],
                [
                  "test_file_extension_insertion_success",
                  "false"
                ],
                [
                  "test_file_extension_failure",
                  "false"
                ],
                [
                  "test_file_extension_inversion_success",
                  "false"
                ],
                [
                  "test_flanking_regions_fasta_insertion",
                  "false"
                ],
                [
                  "test_flanking_regions_fasta_deletion",
                  "false"
                ],
                [
                  "test_genome_iterator",
                  "false"
                ],
                [
                  "test_file_extension_translocation_success",
                  "false"
                ],
                [
                  "test_file_extension_deletion_success",
                  "false"
                ],
                [
                  "test_flanking_regions_fasta_translocation",
                  "false"
                ],
                [
                  "test_create_dataframe_txt",
                  "false"
                ],
                [
                  "test_create_dataframe_insertion_csv",
                  "false"
                ],
                [
                  "test_match_chr_to_genome_insertion",
                  "false"
                ],
                [
                  "test_create_dataframe_insertion_txt",
                  "false"
                ],
                [
                  "test_create_dataframe_csv",
                  "false"
                ],
                [
                  "test_create_dataframe_translocation_csv",
                  "false"
                ],
                [
                  "test_match_chr_to_genome",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_create_dataframe_translocation_txt",
                  "false"
                ],
                [
                  "test_file_extension_insertion_success",
                  "false"
                ],
                [
                  "test_file_extension_failure",
                  "false"
                ],
                [
                  "test_file_extension_inversion_success",
                  "false"
                ],
                [
                  "test_flanking_regions_fasta_insertion",
                  "false"
                ],
                [
                  "test_flanking_regions_fasta_deletion",
                  "false"
                ],
                [
                  "test_genome_iterator",
                  "false"
                ],
                [
                  "test_file_extension_translocation_success",
                  "false"
                ],
                [
                  "test_file_extension_deletion_success",
                  "false"
                ],
                [
                  "test_flanking_regions_fasta_translocation",
                  "false"
                ],
                [
                  "test_create_dataframe_txt",
                  "false"
                ],
                [
                  "test_create_dataframe_insertion_csv",
                  "false"
                ],
                [
                  "test_match_chr_to_genome_insertion",
                  "false"
                ],
                [
                  "test_create_dataframe_insertion_txt",
                  "false"
                ],
                [
                  "test_create_dataframe_csv",
                  "false"
                ],
                [
                  "test_create_dataframe_translocation_csv",
                  "false"
                ],
                [
                  "test_match_chr_to_genome",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_create_dataframe_translocation_txt",
                "false"
              ],
              [
                "test_file_extension_insertion_success",
                "false"
              ],
              [
                "test_file_extension_failure",
                "false"
              ],
              [
                "test_file_extension_inversion_success",
                "false"
              ],
              [
                "test_flanking_regions_fasta_insertion",
                "false"
              ],
              [
                "test_flanking_regions_fasta_deletion",
                "false"
              ],
              [
                "test_genome_iterator",
                "false"
              ],
              [
                "test_file_extension_translocation_success",
                "false"
              ],
              [
                "test_file_extension_deletion_success",
                "false"
              ],
              [
                "test_flanking_regions_fasta_translocation",
                "false"
              ],
              [
                "test_create_dataframe_txt",
                "false"
              ],
              [
                "test_create_dataframe_insertion_csv",
                "false"
              ],
              [
                "test_match_chr_to_genome_insertion",
                "false"
              ],
              [
                "test_create_dataframe_insertion_txt",
                "false"
              ],
              [
                "test_create_dataframe_csv",
                "false"
              ],
              [
                "test_create_dataframe_translocation_csv",
                "false"
              ],
              [
                "test_match_chr_to_genome",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_create_dataframe_translocation_txt",
                "false"
              ],
              [
                "test_file_extension_insertion_success",
                "false"
              ],
              [
                "test_file_extension_failure",
                "false"
              ],
              [
                "test_file_extension_inversion_success",
                "false"
              ],
              [
                "test_flanking_regions_fasta_insertion",
                "false"
              ],
              [
                "test_flanking_regions_fasta_deletion",
                "false"
              ],
              [
                "test_genome_iterator",
                "false"
              ],
              [
                "test_file_extension_translocation_success",
                "false"
              ],
              [
                "test_file_extension_deletion_success",
                "false"
              ],
              [
                "test_flanking_regions_fasta_translocation",
                "false"
              ],
              [
                "test_create_dataframe_txt",
                "false"
              ],
              [
                "test_create_dataframe_insertion_csv",
                "false"
              ],
              [
                "test_match_chr_to_genome_insertion",
                "false"
              ],
              [
                "test_create_dataframe_insertion_txt",
                "false"
              ],
              [
                "test_create_dataframe_csv",
                "false"
              ],
              [
                "test_create_dataframe_translocation_csv",
                "false"
              ],
              [
                "test_match_chr_to_genome",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_create_dataframe_translocation_txt",
                [
                  "self.insertion_input2",
                  "self.insertion_input1",
                  "self.genome",
                  "self.test_input2",
                  "self.insertion_genome",
                  "self.test_input3",
                  "self.ref_genome",
                  "self.test_input",
                  "self.translocation_input1"
                ]
              ],
              [
                "test_file_extension_insertion_success",
                [
                  "self.insertion_input2",
                  "self.genome",
                  "self.translocation_input2",
                  "self.test_input2",
                  "self.insertion_genome",
                  "self.test_input3",
                  "self.ref_genome",
                  "self.test_input",
                  "self.translocation_input1"
                ]
              ],
              [
                "test_file_extension_failure",
                [
                  "self.insertion_input2",
                  "self.insertion_input1",
                  "self.genome",
                  "self.translocation_input2",
                  "self.test_input2",
                  "self.insertion_genome",
                  "self.ref_genome",
                  "self.test_input",
                  "self.translocation_input1"
                ]
              ],
              [
                "test_file_extension_inversion_success",
                [
                  "self.insertion_input2",
                  "self.insertion_input1",
                  "self.genome",
                  "self.translocation_input2",
                  "self.insertion_genome",
                  "self.test_input3",
                  "self.ref_genome",
                  "self.test_input",
                  "self.translocation_input1"
                ]
              ],
              [
                "test_flanking_regions_fasta_insertion",
                [
                  "self.insertion_input1",
                  "self.genome",
                  "self.translocation_input2",
                  "self.test_input2",
                  "self.test_input3",
                  "self.ref_genome",
                  "self.test_input",
                  "self.translocation_input1"
                ]
              ],
              [
                "test_flanking_regions_fasta_deletion",
                [
                  "self.insertion_input2",
                  "self.insertion_input1",
                  "self.translocation_input2",
                  "self.test_input2",
                  "self.insertion_genome",
                  "self.test_input3",
                  "self.ref_genome",
                  "self.translocation_input1"
                ]
              ],
              [
                "test_genome_iterator",
                [
                  "self.insertion_input2",
                  "self.insertion_input1",
                  "self.translocation_input2",
                  "self.test_input2",
                  "self.insertion_genome",
                  "self.test_input3",
                  "self.ref_genome",
                  "self.test_input",
                  "self.translocation_input1"
                ]
              ],
              [
                "test_file_extension_translocation_success",
                [
                  "self.insertion_input2",
                  "self.insertion_input1",
                  "self.genome",
                  "self.translocation_input2",
                  "self.test_input2",
                  "self.insertion_genome",
                  "self.test_input3",
                  "self.ref_genome",
                  "self.test_input"
                ]
              ],
              [
                "test_file_extension_deletion_success",
                [
                  "self.insertion_input2",
                  "self.insertion_input1",
                  "self.genome",
                  "self.translocation_input2",
                  "self.insertion_genome",
                  "self.test_input3",
                  "self.ref_genome",
                  "self.test_input",
                  "self.translocation_input1"
                ]
              ],
              [
                "test_flanking_regions_fasta_translocation",
                [
                  "self.insertion_input2",
                  "self.insertion_input1",
                  "self.genome",
                  "self.test_input2",
                  "self.test_input3",
                  "self.ref_genome",
                  "self.test_input",
                  "self.translocation_input1"
                ]
              ],
              [
                "test_create_dataframe_txt",
                [
                  "self.insertion_input2",
                  "self.insertion_input1",
                  "self.genome",
                  "self.translocation_input2",
                  "self.insertion_genome",
                  "self.test_input3",
                  "self.ref_genome",
                  "self.test_input",
                  "self.translocation_input1"
                ]
              ],
              [
                "test_create_dataframe_insertion_csv",
                [
                  "self.insertion_input2",
                  "self.genome",
                  "self.translocation_input2",
                  "self.test_input2",
                  "self.insertion_genome",
                  "self.test_input3",
                  "self.ref_genome",
                  "self.test_input",
                  "self.translocation_input1"
                ]
              ],
              [
                "test_match_chr_to_genome_insertion",
                [
                  "self.insertion_input2",
                  "self.genome",
                  "self.translocation_input2",
                  "self.test_input2",
                  "self.test_input3",
                  "self.ref_genome",
                  "self.test_input",
                  "self.translocation_input1"
                ]
              ],
              [
                "test_create_dataframe_insertion_txt",
                [
                  "self.insertion_input1",
                  "self.genome",
                  "self.translocation_input2",
                  "self.test_input2",
                  "self.insertion_genome",
                  "self.test_input3",
                  "self.ref_genome",
                  "self.test_input",
                  "self.translocation_input1"
                ]
              ],
              [
                "test_create_dataframe_csv",
                [
                  "self.insertion_input2",
                  "self.insertion_input1",
                  "self.genome",
                  "self.translocation_input2",
                  "self.test_input2",
                  "self.insertion_genome",
                  "self.test_input3",
                  "self.ref_genome",
                  "self.translocation_input1"
                ]
              ],
              [
                "test_create_dataframe_translocation_csv",
                [
                  "self.insertion_input2",
                  "self.insertion_input1",
                  "self.genome",
                  "self.translocation_input2",
                  "self.test_input2",
                  "self.insertion_genome",
                  "self.test_input3",
                  "self.ref_genome",
                  "self.test_input"
                ]
              ],
              [
                "test_match_chr_to_genome",
                [
                  "self.insertion_input2",
                  "self.insertion_input1",
                  "self.translocation_input2",
                  "self.insertion_genome",
                  "self.test_input3",
                  "self.ref_genome",
                  "self.test_input",
                  "self.translocation_input1"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_create_dataframe_translocation_txt",
                "false"
              ],
              [
                "test_file_extension_insertion_success",
                "false"
              ],
              [
                "test_file_extension_failure",
                "false"
              ],
              [
                "test_file_extension_inversion_success",
                "false"
              ],
              [
                "test_flanking_regions_fasta_insertion",
                "false"
              ],
              [
                "test_flanking_regions_fasta_deletion",
                "false"
              ],
              [
                "test_genome_iterator",
                "false"
              ],
              [
                "test_file_extension_translocation_success",
                "false"
              ],
              [
                "test_file_extension_deletion_success",
                "false"
              ],
              [
                "test_flanking_regions_fasta_translocation",
                "false"
              ],
              [
                "test_create_dataframe_txt",
                "false"
              ],
              [
                "test_create_dataframe_insertion_csv",
                "false"
              ],
              [
                "test_match_chr_to_genome_insertion",
                "false"
              ],
              [
                "test_create_dataframe_insertion_txt",
                "false"
              ],
              [
                "test_create_dataframe_csv",
                "false"
              ],
              [
                "test_create_dataframe_translocation_csv",
                "false"
              ],
              [
                "test_match_chr_to_genome",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_create_dataframe_translocation_txt",
                "true"
              ],
              [
                "test_file_extension_insertion_success",
                "true"
              ],
              [
                "test_file_extension_failure",
                "false"
              ],
              [
                "test_file_extension_inversion_success",
                "false"
              ],
              [
                "test_flanking_regions_fasta_insertion",
                "false"
              ],
              [
                "test_flanking_regions_fasta_deletion",
                "false"
              ],
              [
                "test_genome_iterator",
                "true"
              ],
              [
                "test_file_extension_translocation_success",
                "true"
              ],
              [
                "test_file_extension_deletion_success",
                "false"
              ],
              [
                "test_flanking_regions_fasta_translocation",
                "false"
              ],
              [
                "test_create_dataframe_txt",
                "false"
              ],
              [
                "test_create_dataframe_insertion_csv",
                "true"
              ],
              [
                "test_match_chr_to_genome_insertion",
                "false"
              ],
              [
                "test_create_dataframe_insertion_txt",
                "true"
              ],
              [
                "test_create_dataframe_csv",
                "false"
              ],
              [
                "test_create_dataframe_translocation_csv",
                "true"
              ],
              [
                "test_match_chr_to_genome",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_create_dataframe_translocation_txt",
                  "0"
                ],
                [
                  "test_file_extension_insertion_success",
                  "0"
                ],
                [
                  "test_file_extension_failure",
                  "0"
                ],
                [
                  "test_file_extension_inversion_success",
                  "0"
                ],
                [
                  "test_flanking_regions_fasta_insertion",
                  "0"
                ],
                [
                  "test_flanking_regions_fasta_deletion",
                  "0"
                ],
                [
                  "test_genome_iterator",
                  "0"
                ],
                [
                  "test_file_extension_translocation_success",
                  "0"
                ],
                [
                  "test_file_extension_deletion_success",
                  "0"
                ],
                [
                  "test_flanking_regions_fasta_translocation",
                  "0"
                ],
                [
                  "test_create_dataframe_txt",
                  "0"
                ],
                [
                  "test_create_dataframe_insertion_csv",
                  "0"
                ],
                [
                  "test_match_chr_to_genome_insertion",
                  "0"
                ],
                [
                  "test_create_dataframe_insertion_txt",
                  "0"
                ],
                [
                  "test_create_dataframe_csv",
                  "0"
                ],
                [
                  "test_create_dataframe_translocation_csv",
                  "0"
                ],
                [
                  "test_match_chr_to_genome",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_create_dataframe_translocation_txt",
                  "0"
                ],
                [
                  "test_file_extension_insertion_success",
                  "0"
                ],
                [
                  "test_file_extension_failure",
                  "0"
                ],
                [
                  "test_file_extension_inversion_success",
                  "0"
                ],
                [
                  "test_flanking_regions_fasta_insertion",
                  "0"
                ],
                [
                  "test_flanking_regions_fasta_deletion",
                  "0"
                ],
                [
                  "test_genome_iterator",
                  "0"
                ],
                [
                  "test_file_extension_translocation_success",
                  "0"
                ],
                [
                  "test_file_extension_deletion_success",
                  "0"
                ],
                [
                  "test_flanking_regions_fasta_translocation",
                  "0"
                ],
                [
                  "test_create_dataframe_txt",
                  "0"
                ],
                [
                  "test_create_dataframe_insertion_csv",
                  "0"
                ],
                [
                  "test_match_chr_to_genome_insertion",
                  "0"
                ],
                [
                  "test_create_dataframe_insertion_txt",
                  "0"
                ],
                [
                  "test_create_dataframe_csv",
                  "0"
                ],
                [
                  "test_create_dataframe_translocation_csv",
                  "0"
                ],
                [
                  "test_match_chr_to_genome",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_create_dataframe_translocation_txt",
                "false"
              ],
              [
                "test_file_extension_insertion_success",
                "false"
              ],
              [
                "test_file_extension_failure",
                "false"
              ],
              [
                "test_file_extension_inversion_success",
                "false"
              ],
              [
                "test_flanking_regions_fasta_insertion",
                "false"
              ],
              [
                "test_flanking_regions_fasta_deletion",
                "false"
              ],
              [
                "test_genome_iterator",
                "false"
              ],
              [
                "test_file_extension_translocation_success",
                "false"
              ],
              [
                "test_file_extension_deletion_success",
                "false"
              ],
              [
                "test_flanking_regions_fasta_translocation",
                "false"
              ],
              [
                "test_create_dataframe_txt",
                "false"
              ],
              [
                "test_create_dataframe_insertion_csv",
                "false"
              ],
              [
                "test_match_chr_to_genome_insertion",
                "false"
              ],
              [
                "test_create_dataframe_insertion_txt",
                "false"
              ],
              [
                "test_create_dataframe_csv",
                "false"
              ],
              [
                "test_create_dataframe_translocation_csv",
                "false"
              ],
              [
                "test_match_chr_to_genome",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_create_dataframe_translocation_txt",
                "false"
              ],
              [
                "test_file_extension_insertion_success",
                "false"
              ],
              [
                "test_file_extension_failure",
                "false"
              ],
              [
                "test_file_extension_inversion_success",
                "false"
              ],
              [
                "test_flanking_regions_fasta_insertion",
                "false"
              ],
              [
                "test_flanking_regions_fasta_deletion",
                "false"
              ],
              [
                "test_genome_iterator",
                "false"
              ],
              [
                "test_file_extension_translocation_success",
                "false"
              ],
              [
                "test_file_extension_deletion_success",
                "false"
              ],
              [
                "test_flanking_regions_fasta_translocation",
                "false"
              ],
              [
                "test_create_dataframe_txt",
                "false"
              ],
              [
                "test_create_dataframe_insertion_csv",
                "false"
              ],
              [
                "test_match_chr_to_genome_insertion",
                "false"
              ],
              [
                "test_create_dataframe_insertion_txt",
                "false"
              ],
              [
                "test_create_dataframe_csv",
                "false"
              ],
              [
                "test_create_dataframe_translocation_csv",
                "false"
              ],
              [
                "test_match_chr_to_genome",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_create_dataframe_translocation_txt",
                "1"
              ],
              [
                "test_file_extension_insertion_success",
                "1"
              ],
              [
                "test_file_extension_failure",
                "2"
              ],
              [
                "test_file_extension_inversion_success",
                "1"
              ],
              [
                "test_flanking_regions_fasta_insertion",
                "1"
              ],
              [
                "test_flanking_regions_fasta_deletion",
                "1"
              ],
              [
                "test_genome_iterator",
                "1"
              ],
              [
                "test_file_extension_translocation_success",
                "1"
              ],
              [
                "test_file_extension_deletion_success",
                "1"
              ],
              [
                "test_flanking_regions_fasta_translocation",
                "1"
              ],
              [
                "test_create_dataframe_txt",
                "1"
              ],
              [
                "test_create_dataframe_insertion_csv",
                "1"
              ],
              [
                "test_match_chr_to_genome_insertion",
                "1"
              ],
              [
                "test_create_dataframe_insertion_txt",
                "1"
              ],
              [
                "test_create_dataframe_csv",
                "1"
              ],
              [
                "test_create_dataframe_translocation_csv",
                "1"
              ],
              [
                "test_match_chr_to_genome",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_create_dataframe_translocation_txt",
                []
              ],
              [
                "test_file_extension_insertion_success",
                []
              ],
              [
                "test_file_extension_failure",
                []
              ],
              [
                "test_file_extension_inversion_success",
                []
              ],
              [
                "test_flanking_regions_fasta_insertion",
                [
                  "flanking",
                  "dataframe"
                ]
              ],
              [
                "test_flanking_regions_fasta_deletion",
                [
                  "dataframe"
                ]
              ],
              [
                "test_genome_iterator",
                []
              ],
              [
                "test_file_extension_translocation_success",
                []
              ],
              [
                "test_file_extension_deletion_success",
                []
              ],
              [
                "test_flanking_regions_fasta_translocation",
                [
                  "flanking",
                  "dataframe"
                ]
              ],
              [
                "test_create_dataframe_txt",
                []
              ],
              [
                "test_create_dataframe_insertion_csv",
                []
              ],
              [
                "test_match_chr_to_genome_insertion",
                [
                  "dataframe"
                ]
              ],
              [
                "test_create_dataframe_insertion_txt",
                []
              ],
              [
                "test_create_dataframe_csv",
                []
              ],
              [
                "test_create_dataframe_translocation_csv",
                []
              ],
              [
                "test_match_chr_to_genome",
                [
                  "dataframe"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_create_dataframe_translocation_txt",
                [
                  "self.translocation_input2"
                ]
              ],
              [
                "test_file_extension_insertion_success",
                [
                  "self.insertion_input1"
                ]
              ],
              [
                "test_file_extension_failure",
                [
                  "self.test_input3"
                ]
              ],
              [
                "test_file_extension_inversion_success",
                [
                  "self.test_input2"
                ]
              ],
              [
                "test_flanking_regions_fasta_insertion",
                [
                  "self.insertion_input2",
                  "self.insertion_genome"
                ]
              ],
              [
                "test_flanking_regions_fasta_deletion",
                [
                  "self.genome",
                  "self.test_input"
                ]
              ],
              [
                "test_genome_iterator",
                [
                  "self.genome"
                ]
              ],
              [
                "test_file_extension_translocation_success",
                [
                  "self.translocation_input1"
                ]
              ],
              [
                "test_file_extension_deletion_success",
                [
                  "self.test_input2"
                ]
              ],
              [
                "test_flanking_regions_fasta_translocation",
                [
                  "self.translocation_input2",
                  "self.insertion_genome"
                ]
              ],
              [
                "test_create_dataframe_txt",
                [
                  "self.test_input2"
                ]
              ],
              [
                "test_create_dataframe_insertion_csv",
                [
                  "self.insertion_input1"
                ]
              ],
              [
                "test_match_chr_to_genome_insertion",
                [
                  "self.insertion_input1",
                  "self.insertion_genome"
                ]
              ],
              [
                "test_create_dataframe_insertion_txt",
                [
                  "self.insertion_input2"
                ]
              ],
              [
                "test_create_dataframe_csv",
                [
                  "self.test_input"
                ]
              ],
              [
                "test_create_dataframe_translocation_csv",
                [
                  "self.translocation_input1"
                ]
              ],
              [
                "test_match_chr_to_genome",
                [
                  "self.genome",
                  "self.test_input2"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.43463913148497696,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_file_extension_insertion_success",
                  "test_flanking_regions_fasta_translocation",
                  0.3649583386769278
                ],
                [
                  "test_match_chr_to_genome",
                  "test_match_chr_to_genome_insertion",
                  0.6287010848091039
                ],
                [
                  "test_create_dataframe_txt",
                  "test_create_dataframe_insertion_csv",
                  0.5879747322073337
                ],
                [
                  "test_file_extension_failure",
                  "test_flanking_regions_fasta_translocation",
                  0.3030521526249668
                ],
                [
                  "test_genome_iterator",
                  "test_file_extension_deletion_success",
                  0.2891776156271279
                ],
                [
                  "test_file_extension_insertion_success",
                  "test_flanking_regions_fasta_deletion",
                  0.3480617091910828
                ],
                [
                  "test_create_dataframe_insertion_csv",
                  "test_file_extension_failure",
                  0.2572478777137633
                ],
                [
                  "test_genome_iterator",
                  "test_flanking_regions_fasta_translocation",
                  0.4311239909182913
                ],
                [
                  "test_file_extension_insertion_success",
                  "test_file_extension_deletion_success",
                  0.5329430777805537
                ],
                [
                  "test_create_dataframe_insertion_txt",
                  "test_match_chr_to_genome",
                  0.38633370464312783
                ],
                [
                  "test_file_extension_failure",
                  "test_flanking_regions_fasta_deletion",
                  0.3233808333817773
                ],
                [
                  "test_create_dataframe_insertion_csv",
                  "test_create_dataframe_insertion_txt",
                  0.9499999999999998
                ],
                [
                  "test_create_dataframe_translocation_txt",
                  "test_file_extension_failure",
                  0.2572478777137633
                ],
                [
                  "test_create_dataframe_insertion_txt",
                  "test_create_dataframe_translocation_txt",
                  0.7499999999999999
                ],
                [
                  "test_match_chr_to_genome_insertion",
                  "test_flanking_regions_fasta_translocation",
                  0.39485944144039864
                ],
                [
                  "test_create_dataframe_insertion_txt",
                  "test_file_extension_inversion_success",
                  0.32101211891111664
                ],
                [
                  "test_create_dataframe_translocation_txt",
                  "test_file_extension_deletion_success",
                  0.32101211891111664
                ],
                [
                  "test_create_dataframe_insertion_csv",
                  "test_file_extension_deletion_success",
                  0.32101211891111664
                ],
                [
                  "test_flanking_regions_fasta_deletion",
                  "test_flanking_regions_fasta_insertion",
                  0.5679618342470648
                ],
                [
                  "test_create_dataframe_txt",
                  "test_match_chr_to_genome_insertion",
                  0.3261961693317374
                ],
                [
                  "test_file_extension_translocation_success",
                  "test_flanking_regions_fasta_translocation",
                  0.4105781310115437
                ],
                [
                  "test_genome_iterator",
                  "test_create_dataframe_translocation_txt",
                  0.3171675237082732
                ],
                [
                  "test_file_extension_inversion_success",
                  "test_match_chr_to_genome_insertion",
                  0.31812811069374053
                ],
                [
                  "test_create_dataframe_insertion_txt",
                  "test_file_extension_failure",
                  0.2572478777137633
                ],
                [
                  "test_file_extension_deletion_success",
                  "test_match_chr_to_genome_insertion",
                  0.31812811069374053
                ],
                [
                  "test_genome_iterator",
                  "test_create_dataframe_txt",
                  0.31298431857438064
                ],
                [
                  "test_create_dataframe_csv",
                  "test_create_dataframe_insertion_txt",
                  0.5694424517739723
                ],
                [
                  "test_file_extension_translocation_success",
                  "test_file_extension_deletion_success",
                  0.5329430777805537
                ],
                [
                  "test_genome_iterator",
                  "test_create_dataframe_insertion_txt",
                  0.3171675237082732
                ],
                [
                  "test_create_dataframe_csv",
                  "test_create_dataframe_translocation_txt",
                  0.5694424517739723
                ],
                [
                  "test_file_extension_failure",
                  "test_match_chr_to_genome",
                  0.29152500845230545
                ],
                [
                  "test_create_dataframe_insertion_csv",
                  "test_create_dataframe_translocation_txt",
                  0.7249999999999999
                ],
                [
                  "test_file_extension_insertion_success",
                  "test_match_chr_to_genome",
                  0.373018759184977
                ],
                [
                  "test_genome_iterator",
                  "test_file_extension_inversion_success",
                  0.2891776156271279
                ],
                [
                  "test_create_dataframe_translocation_csv",
                  "test_flanking_regions_fasta_insertion",
                  0.3614486980061245
                ],
                [
                  "test_create_dataframe_txt",
                  "test_file_extension_translocation_success",
                  0.4250237185032414
                ],
                [
                  "test_create_dataframe_translocation_csv",
                  "test_file_extension_failure",
                  0.2572478777137633
                ],
                [
                  "test_create_dataframe_insertion_txt",
                  "test_flanking_regions_fasta_deletion",
                  0.37712361663282534
                ],
                [
                  "test_create_dataframe_translocation_csv",
                  "test_file_extension_insertion_success",
                  0.4543694673976518
                ],
                [
                  "test_create_dataframe_csv",
                  "test_flanking_regions_fasta_insertion",
                  0.30492478930832245
                ],
                [
                  "test_create_dataframe_txt",
                  "test_match_chr_to_genome",
                  0.6195121541733006
                ],
                [
                  "test_file_extension_insertion_success",
                  "test_file_extension_translocation_success",
                  0.870967741935484
                ],
                [
                  "test_create_dataframe_csv",
                  "test_file_extension_insertion_success",
                  0.40042671736190333
                ],
                [
                  "test_flanking_regions_fasta_translocation",
                  "test_flanking_regions_fasta_insertion",
                  0.9032258064516129
                ],
                [
                  "test_create_dataframe_translocation_csv",
                  "test_match_chr_to_genome",
                  0.38633370464312783
                ],
                [
                  "test_create_dataframe_insertion_txt",
                  "test_match_chr_to_genome_insertion",
                  0.3220801642198849
                ],
                [
                  "test_create_dataframe_txt",
                  "test_flanking_regions_fasta_insertion",
                  0.3220040930558189
                ],
                [
                  "test_create_dataframe_translocation_csv",
                  "test_match_chr_to_genome_insertion",
                  0.3220801642198849
                ],
                [
                  "test_file_extension_insertion_success",
                  "test_file_extension_failure",
                  0.46754232474391555
                ],
                [
                  "test_create_dataframe_translocation_csv",
                  "test_file_extension_translocation_success",
                  0.5395637425347116
                ],
                [
                  "test_file_extension_translocation_success",
                  "test_file_extension_inversion_success",
                  0.5329430777805537
                ],
                [
                  "test_flanking_regions_fasta_deletion",
                  "test_flanking_regions_fasta_translocation",
                  0.5679618342470648
                ],
                [
                  "test_create_dataframe_translocation_txt",
                  "test_flanking_regions_fasta_deletion",
                  0.37712361663282534
                ],
                [
                  "test_create_dataframe_insertion_csv",
                  "test_flanking_regions_fasta_deletion",
                  0.37712361663282534
                ],
                [
                  "test_genome_iterator",
                  "test_file_extension_failure",
                  0.35146751167740364
                ],
                [
                  "test_create_dataframe_csv",
                  "test_flanking_regions_fasta_deletion",
                  0.38348249442368515
                ],
                [
                  "test_create_dataframe_csv",
                  "test_match_chr_to_genome",
                  0.5866528319330786
                ],
                [
                  "test_create_dataframe_insertion_txt",
                  "test_file_extension_insertion_success",
                  0.5395637425347116
                ],
                [
                  "test_create_dataframe_translocation_txt",
                  "test_match_chr_to_genome",
                  0.38633370464312783
                ],
                [
                  "test_create_dataframe_insertion_csv",
                  "test_match_chr_to_genome",
                  0.38633370464312783
                ],
                [
                  "test_create_dataframe_txt",
                  "test_file_extension_insertion_success",
                  0.4250237185032414
                ],
                [
                  "test_file_extension_failure",
                  "test_match_chr_to_genome_insertion",
                  0.37211818082477244
                ],
                [
                  "test_file_extension_deletion_success",
                  "test_flanking_regions_fasta_insertion",
                  0.2776772263153067
                ],
                [
                  "test_create_dataframe_translocation_txt",
                  "test_file_extension_translocation_success",
                  0.5395637425347116
                ],
                [
                  "test_match_chr_to_genome_insertion",
                  "test_flanking_regions_fasta_insertion",
                  0.43570696986526747
                ],
                [
                  "test_genome_iterator",
                  "test_create_dataframe_translocation_csv",
                  0.3171675237082732
                ],
                [
                  "test_create_dataframe_csv",
                  "test_file_extension_translocation_success",
                  0.40042671736190333
                ],
                [
                  "test_match_chr_to_genome_insertion",
                  "test_flanking_regions_fasta_deletion",
                  0.33562431103976886
                ],
                [
                  "test_genome_iterator",
                  "test_create_dataframe_insertion_csv",
                  0.3171675237082732
                ],
                [
                  "test_file_extension_translocation_success",
                  "test_file_extension_failure",
                  0.46754232474391555
                ],
                [
                  "test_file_extension_deletion_success",
                  "test_match_chr_to_genome",
                  0.5533101896759827
                ],
                [
                  "test_create_dataframe_insertion_csv",
                  "test_file_extension_translocation_success",
                  0.4543694673976518
                ],
                [
                  "test_create_dataframe_translocation_txt",
                  "test_file_extension_insertion_success",
                  0.4543694673976518
                ],
                [
                  "test_create_dataframe_insertion_csv",
                  "test_file_extension_insertion_success",
                  0.5395637425347116
                ],
                [
                  "test_file_extension_translocation_success",
                  "test_match_chr_to_genome_insertion",
                  0.3658584816898434
                ],
                [
                  "test_file_extension_deletion_success",
                  "test_flanking_regions_fasta_deletion",
                  0.3259341380258032
                ],
                [
                  "test_create_dataframe_csv",
                  "test_create_dataframe_translocation_csv",
                  0.5965587590013044
                ],
                [
                  "test_file_extension_deletion_success",
                  "test_flanking_regions_fasta_translocation",
                  0.2776772263153067
                ],
                [
                  "test_file_extension_translocation_success",
                  "test_flanking_regions_fasta_insertion",
                  0.3649583386769278
                ],
                [
                  "test_genome_iterator",
                  "test_match_chr_to_genome_insertion",
                  0.43011944472073643
                ],
                [
                  "test_file_extension_insertion_success",
                  "test_match_chr_to_genome_insertion",
                  0.3851141912524667
                ],
                [
                  "test_file_extension_inversion_success",
                  "test_flanking_regions_fasta_translocation",
                  0.2776772263153067
                ],
                [
                  "test_create_dataframe_txt",
                  "test_flanking_regions_fasta_deletion",
                  0.37796447300922725
                ],
                [
                  "test_match_chr_to_genome",
                  "test_flanking_regions_fasta_translocation",
                  0.32582623392466287
                ],
                [
                  "test_create_dataframe_insertion_csv",
                  "test_flanking_regions_fasta_insertion",
                  0.4216901476738119
                ],
                [
                  "test_create_dataframe_translocation_txt",
                  "test_flanking_regions_fasta_insertion",
                  0.3614486980061245
                ],
                [
                  "test_create_dataframe_txt",
                  "test_file_extension_deletion_success",
                  0.6335564128181456
                ],
                [
                  "test_create_dataframe_insertion_txt",
                  "test_file_extension_translocation_success",
                  0.4543694673976518
                ],
                [
                  "test_create_dataframe_csv",
                  "test_create_dataframe_txt",
                  0.8986451052612949
                ],
                [
                  "test_genome_iterator",
                  "test_file_extension_insertion_success",
                  0.3602780970579006
                ],
                [
                  "test_create_dataframe_translocation_csv",
                  "test_flanking_regions_fasta_translocation",
                  0.4216901476738119
                ],
                [
                  "test_file_extension_inversion_success",
                  "test_flanking_regions_fasta_deletion",
                  0.3259341380258032
                ],
                [
                  "test_file_extension_failure",
                  "test_flanking_regions_fasta_insertion",
                  0.3030521526249668
                ],
                [
                  "test_create_dataframe_insertion_txt",
                  "test_create_dataframe_translocation_csv",
                  0.7249999999999999
                ],
                [
                  "test_create_dataframe_txt",
                  "test_create_dataframe_translocation_txt",
                  0.6147008563985761
                ],
                [
                  "test_create_dataframe_translocation_txt",
                  "test_match_chr_to_genome_insertion",
                  0.3220801642198849
                ],
                [
                  "test_create_dataframe_insertion_csv",
                  "test_match_chr_to_genome_insertion",
                  0.3220801642198849
                ],
                [
                  "test_file_extension_insertion_success",
                  "test_flanking_regions_fasta_insertion",
                  0.4105781310115437
                ],
                [
                  "test_create_dataframe_insertion_txt",
                  "test_flanking_regions_fasta_insertion",
                  0.4216901476738119
                ],
                [
                  "test_create_dataframe_translocation_csv",
                  "test_flanking_regions_fasta_deletion",
                  0.37712361663282534
                ],
                [
                  "test_file_extension_inversion_success",
                  "test_file_extension_failure",
                  0.47430383932059955
                ],
                [
                  "test_create_dataframe_insertion_txt",
                  "test_flanking_regions_fasta_translocation",
                  0.3614486980061245
                ],
                [
                  "test_file_extension_inversion_success",
                  "test_flanking_regions_fasta_insertion",
                  0.2776772263153067
                ],
                [
                  "test_create_dataframe_translocation_csv",
                  "test_create_dataframe_translocation_txt",
                  0.9499999999999998
                ],
                [
                  "test_file_extension_insertion_success",
                  "test_file_extension_inversion_success",
                  0.5329430777805537
                ],
                [
                  "test_create_dataframe_csv",
                  "test_match_chr_to_genome_insertion",
                  0.2941852525411688
                ],
                [
                  "test_create_dataframe_txt",
                  "test_create_dataframe_insertion_txt",
                  0.6147008563985761
                ],
                [
                  "test_create_dataframe_insertion_csv",
                  "test_create_dataframe_translocation_csv",
                  0.7499999999999999
                ],
                [
                  "test_file_extension_deletion_success",
                  "test_file_extension_failure",
                  0.47430383932059955
                ],
                [
                  "test_file_extension_inversion_success",
                  "test_match_chr_to_genome",
                  0.5342305279630177
                ],
                [
                  "test_create_dataframe_csv",
                  "test_file_extension_deletion_success",
                  0.6160223216064171
                ],
                [
                  "test_genome_iterator",
                  "test_file_extension_translocation_success",
                  0.3602780970579006
                ],
                [
                  "test_create_dataframe_txt",
                  "test_file_extension_failure",
                  0.27500954910846337
                ],
                [
                  "test_create_dataframe_csv",
                  "test_file_extension_failure",
                  0.2604228661315136
                ],
                [
                  "test_create_dataframe_translocation_csv",
                  "test_file_extension_inversion_success",
                  0.32101211891111664
                ],
                [
                  "test_create_dataframe_csv",
                  "test_flanking_regions_fasta_translocation",
                  0.30492478930832245
                ],
                [
                  "test_file_extension_translocation_success",
                  "test_match_chr_to_genome",
                  0.373018759184977
                ],
                [
                  "test_create_dataframe_translocation_csv",
                  "test_file_extension_deletion_success",
                  0.32101211891111664
                ],
                [
                  "test_create_dataframe_translocation_txt",
                  "test_file_extension_inversion_success",
                  0.32101211891111664
                ],
                [
                  "test_create_dataframe_translocation_txt",
                  "test_flanking_regions_fasta_translocation",
                  0.4216901476738119
                ],
                [
                  "test_match_chr_to_genome",
                  "test_flanking_regions_fasta_insertion",
                  0.32582623392466287
                ],
                [
                  "test_create_dataframe_csv",
                  "test_create_dataframe_insertion_csv",
                  0.5965587590013044
                ],
                [
                  "test_file_extension_translocation_success",
                  "test_flanking_regions_fasta_deletion",
                  0.3480617091910828
                ],
                [
                  "test_create_dataframe_txt",
                  "test_create_dataframe_translocation_csv",
                  0.5879747322073337
                ],
                [
                  "test_create_dataframe_txt",
                  "test_file_extension_inversion_success",
                  0.6335564128181456
                ],
                [
                  "test_match_chr_to_genome",
                  "test_flanking_regions_fasta_deletion",
                  0.36423890980543533
                ],
                [
                  "test_genome_iterator",
                  "test_match_chr_to_genome",
                  0.2827673179077792
                ],
                [
                  "test_file_extension_deletion_success",
                  "test_file_extension_inversion_success",
                  0.9512195121951219
                ],
                [
                  "test_genome_iterator",
                  "test_create_dataframe_csv",
                  0.3175536744149779
                ],
                [
                  "test_create_dataframe_txt",
                  "test_flanking_regions_fasta_translocation",
                  0.3220040930558189
                ],
                [
                  "test_create_dataframe_insertion_csv",
                  "test_file_extension_inversion_success",
                  0.32101211891111664
                ],
                [
                  "test_genome_iterator",
                  "test_flanking_regions_fasta_deletion",
                  0.41403933560541245
                ],
                [
                  "test_genome_iterator",
                  "test_flanking_regions_fasta_insertion",
                  0.4311239909182913
                ],
                [
                  "test_create_dataframe_insertion_txt",
                  "test_file_extension_deletion_success",
                  0.32101211891111664
                ],
                [
                  "test_create_dataframe_csv",
                  "test_file_extension_inversion_success",
                  0.6160223216064171
                ],
                [
                  "test_create_dataframe_insertion_csv",
                  "test_flanking_regions_fasta_translocation",
                  0.3614486980061245
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_create_dataframe_translocation_txt",
                "false"
              ],
              [
                "test_file_extension_insertion_success",
                "false"
              ],
              [
                "test_file_extension_failure",
                "false"
              ],
              [
                "test_file_extension_inversion_success",
                "false"
              ],
              [
                "test_flanking_regions_fasta_insertion",
                "true"
              ],
              [
                "test_flanking_regions_fasta_deletion",
                "false"
              ],
              [
                "test_genome_iterator",
                "false"
              ],
              [
                "test_file_extension_translocation_success",
                "false"
              ],
              [
                "test_file_extension_deletion_success",
                "false"
              ],
              [
                "test_flanking_regions_fasta_translocation",
                "true"
              ],
              [
                "test_create_dataframe_txt",
                "false"
              ],
              [
                "test_create_dataframe_insertion_csv",
                "false"
              ],
              [
                "test_match_chr_to_genome_insertion",
                "false"
              ],
              [
                "test_create_dataframe_insertion_txt",
                "false"
              ],
              [
                "test_create_dataframe_csv",
                "false"
              ],
              [
                "test_create_dataframe_translocation_csv",
                "false"
              ],
              [
                "test_match_chr_to_genome",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 17
      }
    ]
  },
  {
    "name": "test_\u0026_python_tests_\u0026_test_analyze_pcr_output_sv.py",
    "testCases": [
      {
        "name": "TestAnalyzePcrOutputSV",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_fasta_parser",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_amp_header_region",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_merge_dfs",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_get_gc_region",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_to_order_plate",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_calc_gc",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_fasta_parser",
                  "[]"
                ],
                [
                  "test_amp_header_region",
                  "[]"
                ],
                [
                  "test_merge_dfs",
                  "[]"
                ],
                [
                  "test_get_gc_region",
                  "[]"
                ],
                [
                  "test_to_order_plate",
                  "[]"
                ],
                [
                  "test_calc_gc",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_fasta_parser",
                  "false"
                ],
                [
                  "test_amp_header_region",
                  "false"
                ],
                [
                  "test_merge_dfs",
                  "false"
                ],
                [
                  "test_get_gc_region",
                  "false"
                ],
                [
                  "test_to_order_plate",
                  "false"
                ],
                [
                  "test_calc_gc",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_fasta_parser",
                  "false"
                ],
                [
                  "test_amp_header_region",
                  "true"
                ],
                [
                  "test_merge_dfs",
                  "false"
                ],
                [
                  "test_get_gc_region",
                  "true"
                ],
                [
                  "test_to_order_plate",
                  "false"
                ],
                [
                  "test_calc_gc",
                  "true"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_fasta_parser",
                  "false"
                ],
                [
                  "test_amp_header_region",
                  "false"
                ],
                [
                  "test_merge_dfs",
                  "false"
                ],
                [
                  "test_get_gc_region",
                  "false"
                ],
                [
                  "test_to_order_plate",
                  "false"
                ],
                [
                  "test_calc_gc",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_fasta_parser",
                  "false"
                ],
                [
                  "test_amp_header_region",
                  "false"
                ],
                [
                  "test_merge_dfs",
                  "false"
                ],
                [
                  "test_get_gc_region",
                  "false"
                ],
                [
                  "test_to_order_plate",
                  "false"
                ],
                [
                  "test_calc_gc",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_fasta_parser",
                "false"
              ],
              [
                "test_amp_header_region",
                "false"
              ],
              [
                "test_merge_dfs",
                "false"
              ],
              [
                "test_get_gc_region",
                "false"
              ],
              [
                "test_to_order_plate",
                "false"
              ],
              [
                "test_calc_gc",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_fasta_parser",
                "false"
              ],
              [
                "test_amp_header_region",
                "false"
              ],
              [
                "test_merge_dfs",
                "false"
              ],
              [
                "test_get_gc_region",
                "false"
              ],
              [
                "test_to_order_plate",
                "false"
              ],
              [
                "test_calc_gc",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_fasta_parser",
                [
                  "self.primer_file",
                  "self.flanking",
                  "self.positions"
                ]
              ],
              [
                "test_amp_header_region",
                [
                  "self.headers",
                  "self.primer_file",
                  "self.flanking",
                  "self.seqs"
                ]
              ],
              [
                "test_merge_dfs",
                [
                  "self.flanking"
                ]
              ],
              [
                "test_get_gc_region",
                [
                  "self.primer_file",
                  "self.flanking"
                ]
              ],
              [
                "test_to_order_plate",
                [
                  "self.flanking"
                ]
              ],
              [
                "test_calc_gc",
                [
                  "self.primer_file",
                  "self.flanking"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_fasta_parser",
                "false"
              ],
              [
                "test_amp_header_region",
                "false"
              ],
              [
                "test_merge_dfs",
                "false"
              ],
              [
                "test_get_gc_region",
                "false"
              ],
              [
                "test_to_order_plate",
                "false"
              ],
              [
                "test_calc_gc",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_fasta_parser",
                "true"
              ],
              [
                "test_amp_header_region",
                "false"
              ],
              [
                "test_merge_dfs",
                "true"
              ],
              [
                "test_get_gc_region",
                "false"
              ],
              [
                "test_to_order_plate",
                "true"
              ],
              [
                "test_calc_gc",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_fasta_parser",
                  "0"
                ],
                [
                  "test_amp_header_region",
                  "0"
                ],
                [
                  "test_merge_dfs",
                  "0"
                ],
                [
                  "test_get_gc_region",
                  "0"
                ],
                [
                  "test_to_order_plate",
                  "0"
                ],
                [
                  "test_calc_gc",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_fasta_parser",
                  "0"
                ],
                [
                  "test_amp_header_region",
                  "0"
                ],
                [
                  "test_merge_dfs",
                  "0"
                ],
                [
                  "test_get_gc_region",
                  "0"
                ],
                [
                  "test_to_order_plate",
                  "0"
                ],
                [
                  "test_calc_gc",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_fasta_parser",
                "false"
              ],
              [
                "test_amp_header_region",
                "false"
              ],
              [
                "test_merge_dfs",
                "false"
              ],
              [
                "test_get_gc_region",
                "false"
              ],
              [
                "test_to_order_plate",
                "false"
              ],
              [
                "test_calc_gc",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_fasta_parser",
                "false"
              ],
              [
                "test_amp_header_region",
                "false"
              ],
              [
                "test_merge_dfs",
                "false"
              ],
              [
                "test_get_gc_region",
                "false"
              ],
              [
                "test_to_order_plate",
                "false"
              ],
              [
                "test_calc_gc",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_fasta_parser",
                "2"
              ],
              [
                "test_amp_header_region",
                "1"
              ],
              [
                "test_merge_dfs",
                "2"
              ],
              [
                "test_get_gc_region",
                "1"
              ],
              [
                "test_to_order_plate",
                "2"
              ],
              [
                "test_calc_gc",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_fasta_parser",
                []
              ],
              [
                "test_amp_header_region",
                []
              ],
              [
                "test_merge_dfs",
                [
                  "gc_calc",
                  "sliced_seqs"
                ]
              ],
              [
                "test_get_gc_region",
                [
                  "sliced_seqs"
                ]
              ],
              [
                "test_to_order_plate",
                [
                  "gc_calc",
                  "merged",
                  "sliced_seqs",
                  "plate_order_sheet_r",
                  "plate_order_sheet_f"
                ]
              ],
              [
                "test_calc_gc",
                [
                  "gc_calc",
                  "sliced_seqs"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_fasta_parser",
                [
                  "self.headers",
                  "self.seqs"
                ]
              ],
              [
                "test_amp_header_region",
                [
                  "self.positions"
                ]
              ],
              [
                "test_merge_dfs",
                [
                  "self.headers",
                  "self.primer_file",
                  "self.seqs",
                  "self.positions"
                ]
              ],
              [
                "test_get_gc_region",
                [
                  "self.headers",
                  "self.seqs",
                  "self.positions"
                ]
              ],
              [
                "test_to_order_plate",
                [
                  "self.headers",
                  "self.primer_file",
                  "self.seqs",
                  "self.positions"
                ]
              ],
              [
                "test_calc_gc",
                [
                  "self.headers",
                  "self.seqs",
                  "self.positions"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.45578253849282885,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_get_gc_region",
                  "test_to_order_plate",
                  0.3874090387346563
                ],
                [
                  "test_calc_gc",
                  "test_to_order_plate",
                  0.44320263021395917
                ],
                [
                  "test_fasta_parser",
                  "test_calc_gc",
                  0.31693284552319373
                ],
                [
                  "test_fasta_parser",
                  "test_to_order_plate",
                  0.32690145916991736
                ],
                [
                  "test_get_gc_region",
                  "test_calc_gc",
                  0.6868028197434451
                ],
                [
                  "test_amp_header_region",
                  "test_merge_dfs",
                  0.35315321684806406
                ],
                [
                  "test_get_gc_region",
                  "test_merge_dfs",
                  0.5791803928233927
                ],
                [
                  "test_amp_header_region",
                  "test_to_order_plate",
                  0.2487554967702519
                ],
                [
                  "test_fasta_parser",
                  "test_merge_dfs",
                  0.46409548089225716
                ],
                [
                  "test_fasta_parser",
                  "test_get_gc_region",
                  0.4179271141913149
                ],
                [
                  "test_fasta_parser",
                  "test_amp_header_region",
                  0.5507824838698259
                ],
                [
                  "test_amp_header_region",
                  "test_calc_gc",
                  0.36443449342783124
                ],
                [
                  "test_calc_gc",
                  "test_merge_dfs",
                  0.6496346976452346
                ],
                [
                  "test_amp_header_region",
                  "test_get_gc_region",
                  0.5418142745462773
                ],
                [
                  "test_merge_dfs",
                  "test_to_order_plate",
                  0.5057116329928112
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_fasta_parser",
                "false"
              ],
              [
                "test_amp_header_region",
                "false"
              ],
              [
                "test_merge_dfs",
                "false"
              ],
              [
                "test_get_gc_region",
                "false"
              ],
              [
                "test_to_order_plate",
                "false"
              ],
              [
                "test_calc_gc",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      }
    ]
  }
]