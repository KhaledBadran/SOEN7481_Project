[
  {
    "name": "tests_\u0026_pyarxaas_\u0026_test_ARXaaS.py",
    "testCases": [
      {
        "name": "ARXaaSTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_analyze",
                  "[PyCallExpression: self.assertIsNotNone]"
                ],
                [
                  "test_anonymize__dataset_attributes_are_correct",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_redaction_based_hierarchy",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_risk_profile_return_value",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test_anonymize_return_value",
                  "[PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_anaonymize",
                  "[PyCallExpression: self.assertIsNotNone]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_analyze",
                  "[]"
                ],
                [
                  "test_anonymize__dataset_attributes_are_correct",
                  "[]"
                ],
                [
                  "test_redaction_based_hierarchy",
                  "[]"
                ],
                [
                  "test_risk_profile_return_value",
                  "[]"
                ],
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test_anonymize_return_value",
                  "[]"
                ],
                [
                  "test_anaonymize",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_analyze",
                  "false"
                ],
                [
                  "test_anonymize__dataset_attributes_are_correct",
                  "false"
                ],
                [
                  "test_redaction_based_hierarchy",
                  "false"
                ],
                [
                  "test_risk_profile_return_value",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_anonymize_return_value",
                  "false"
                ],
                [
                  "test_anaonymize",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_analyze",
                  "false"
                ],
                [
                  "test_anonymize__dataset_attributes_are_correct",
                  "false"
                ],
                [
                  "test_redaction_based_hierarchy",
                  "false"
                ],
                [
                  "test_risk_profile_return_value",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_anonymize_return_value",
                  "false"
                ],
                [
                  "test_anaonymize",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_analyze",
                  "false"
                ],
                [
                  "test_anonymize__dataset_attributes_are_correct",
                  "false"
                ],
                [
                  "test_redaction_based_hierarchy",
                  "false"
                ],
                [
                  "test_risk_profile_return_value",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_anonymize_return_value",
                  "false"
                ],
                [
                  "test_anaonymize",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_analyze",
                  "false"
                ],
                [
                  "test_anonymize__dataset_attributes_are_correct",
                  "false"
                ],
                [
                  "test_redaction_based_hierarchy",
                  "false"
                ],
                [
                  "test_risk_profile_return_value",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_anonymize_return_value",
                  "false"
                ],
                [
                  "test_anaonymize",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_analyze",
                "false"
              ],
              [
                "test_anonymize__dataset_attributes_are_correct",
                "false"
              ],
              [
                "test_redaction_based_hierarchy",
                "false"
              ],
              [
                "test_risk_profile_return_value",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_anonymize_return_value",
                "false"
              ],
              [
                "test_anaonymize",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_analyze",
                "false"
              ],
              [
                "test_anonymize__dataset_attributes_are_correct",
                "false"
              ],
              [
                "test_redaction_based_hierarchy",
                "false"
              ],
              [
                "test_risk_profile_return_value",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_anonymize_return_value",
                "false"
              ],
              [
                "test_anaonymize",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_analyze",
                [
                  "self.test_raw_anon_response",
                  "self.test_data",
                  "self.test_raw_analyze_response",
                  "self.test_attribute_type_mapping"
                ]
              ],
              [
                "test_anonymize__dataset_attributes_are_correct",
                [
                  "self.test_raw_anon_response",
                  "self.test_data",
                  "self.test_raw_analyze_response",
                  "self.test_attribute_type_mapping"
                ]
              ],
              [
                "test_redaction_based_hierarchy",
                [
                  "self.test_raw_anon_response",
                  "self.test_data",
                  "self.test_raw_analyze_response",
                  "self.test_attribute_type_mapping",
                  "self.test_dataset"
                ]
              ],
              [
                "test_risk_profile_return_value",
                [
                  "self.test_raw_anon_response",
                  "self.test_data",
                  "self.test_attribute_type_mapping"
                ]
              ],
              [
                "test_init",
                [
                  "self.test_raw_anon_response",
                  "self.test_data",
                  "self.test_raw_analyze_response",
                  "self.test_attribute_type_mapping",
                  "self.test_dataset"
                ]
              ],
              [
                "test_anonymize_return_value",
                [
                  "self.test_raw_anon_response",
                  "self.test_data",
                  "self.test_raw_analyze_response",
                  "self.test_attribute_type_mapping"
                ]
              ],
              [
                "test_anaonymize",
                [
                  "self.test_raw_anon_response",
                  "self.test_data",
                  "self.test_raw_analyze_response",
                  "self.test_attribute_type_mapping"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_analyze",
                "false"
              ],
              [
                "test_anonymize__dataset_attributes_are_correct",
                "false"
              ],
              [
                "test_redaction_based_hierarchy",
                "false"
              ],
              [
                "test_risk_profile_return_value",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_anonymize_return_value",
                "false"
              ],
              [
                "test_anaonymize",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_analyze",
                "false"
              ],
              [
                "test_anonymize__dataset_attributes_are_correct",
                "false"
              ],
              [
                "test_redaction_based_hierarchy",
                "false"
              ],
              [
                "test_risk_profile_return_value",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_anonymize_return_value",
                "false"
              ],
              [
                "test_anaonymize",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_analyze",
                  "0"
                ],
                [
                  "test_anonymize__dataset_attributes_are_correct",
                  "0"
                ],
                [
                  "test_redaction_based_hierarchy",
                  "0"
                ],
                [
                  "test_risk_profile_return_value",
                  "0"
                ],
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_anonymize_return_value",
                  "0"
                ],
                [
                  "test_anaonymize",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_analyze",
                  "0"
                ],
                [
                  "test_anonymize__dataset_attributes_are_correct",
                  "0"
                ],
                [
                  "test_redaction_based_hierarchy",
                  "0"
                ],
                [
                  "test_risk_profile_return_value",
                  "0"
                ],
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_anonymize_return_value",
                  "0"
                ],
                [
                  "test_anaonymize",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_analyze",
                "false"
              ],
              [
                "test_anonymize__dataset_attributes_are_correct",
                "false"
              ],
              [
                "test_redaction_based_hierarchy",
                "false"
              ],
              [
                "test_risk_profile_return_value",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_anonymize_return_value",
                "false"
              ],
              [
                "test_anaonymize",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_analyze",
                "false"
              ],
              [
                "test_anonymize__dataset_attributes_are_correct",
                "false"
              ],
              [
                "test_redaction_based_hierarchy",
                "false"
              ],
              [
                "test_risk_profile_return_value",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_anonymize_return_value",
                "false"
              ],
              [
                "test_anaonymize",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_analyze",
                "1"
              ],
              [
                "test_anonymize__dataset_attributes_are_correct",
                "1"
              ],
              [
                "test_redaction_based_hierarchy",
                "1"
              ],
              [
                "test_risk_profile_return_value",
                "1"
              ],
              [
                "test_init",
                "0"
              ],
              [
                "test_anonymize_return_value",
                "1"
              ],
              [
                "test_anaonymize",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_analyze",
                [
                  "aaas"
                ]
              ],
              [
                "test_anonymize__dataset_attributes_are_correct",
                [
                  "anonymize_result",
                  "aaas"
                ]
              ],
              [
                "test_redaction_based_hierarchy",
                [
                  "expected",
                  "hierarchy",
                  "redaction_builder",
                  "column",
                  "aaas"
                ]
              ],
              [
                "test_risk_profile_return_value",
                [
                  "df",
                  "risk_profile",
                  "aaas"
                ]
              ],
              [
                "test_init",
                []
              ],
              [
                "test_anonymize_return_value",
                [
                  "anonymized_dataset",
                  "aaas"
                ]
              ],
              [
                "test_anaonymize",
                [
                  "aaas"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_analyze",
                [
                  "self.test_dataset"
                ]
              ],
              [
                "test_anonymize__dataset_attributes_are_correct",
                [
                  "self.test_dataset"
                ]
              ],
              [
                "test_redaction_based_hierarchy",
                []
              ],
              [
                "test_risk_profile_return_value",
                [
                  "self.test_raw_analyze_response",
                  "self.test_dataset"
                ]
              ],
              [
                "test_init",
                []
              ],
              [
                "test_anonymize_return_value",
                [
                  "self.test_dataset"
                ]
              ],
              [
                "test_anaonymize",
                [
                  "self.test_dataset"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4497251598432325,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init",
                  "test_redaction_based_hierarchy",
                  0.19891546031038634
                ],
                [
                  "test_analyze",
                  "test_anonymize_return_value",
                  0.5855400437691199
                ],
                [
                  "test_init",
                  "test_risk_profile_return_value",
                  0.36851386559504445
                ],
                [
                  "test_anaonymize",
                  "test_anonymize_return_value",
                  0.6559132733999382
                ],
                [
                  "test_risk_profile_return_value",
                  "test_anonymize__dataset_attributes_are_correct",
                  0.3355608839748465
                ],
                [
                  "test_analyze",
                  "test_anaonymize",
                  0.7419408268023742
                ],
                [
                  "test_anonymize_return_value",
                  "test_redaction_based_hierarchy",
                  0.2198332092585307
                ],
                [
                  "test_risk_profile_return_value",
                  "test_anonymize_return_value",
                  0.38095972949996415
                ],
                [
                  "test_analyze",
                  "test_anonymize__dataset_attributes_are_correct",
                  0.5444148423081901
                ],
                [
                  "test_anaonymize",
                  "test_risk_profile_return_value",
                  0.37777777777777777
                ],
                [
                  "test_init",
                  "test_analyze",
                  0.723746864455746
                ],
                [
                  "test_init",
                  "test_anaonymize",
                  0.66332495807108
                ],
                [
                  "test_anonymize_return_value",
                  "test_anonymize__dataset_attributes_are_correct",
                  0.7438122780519576
                ],
                [
                  "test_init",
                  "test_anonymize__dataset_attributes_are_correct",
                  0.554265307725427
                ],
                [
                  "test_anonymize__dataset_attributes_are_correct",
                  "test_redaction_based_hierarchy",
                  0.23949685869783785
                ],
                [
                  "test_anaonymize",
                  "test_redaction_based_hierarchy",
                  0.19403763142658323
                ],
                [
                  "test_init",
                  "test_anonymize_return_value",
                  0.5393598899705937
                ],
                [
                  "test_analyze",
                  "test_redaction_based_hierarchy",
                  0.21171241278149042
                ],
                [
                  "test_risk_profile_return_value",
                  "test_redaction_based_hierarchy",
                  0.15091815777623138
                ],
                [
                  "test_analyze",
                  "test_risk_profile_return_value",
                  0.4364357804719847
                ],
                [
                  "test_anaonymize",
                  "test_anonymize__dataset_attributes_are_correct",
                  0.5777483045827793
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_analyze",
                "false"
              ],
              [
                "test_anonymize__dataset_attributes_are_correct",
                "false"
              ],
              [
                "test_redaction_based_hierarchy",
                "false"
              ],
              [
                "test_risk_profile_return_value",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_anonymize_return_value",
                "false"
              ],
              [
                "test_anaonymize",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      }
    ]
  },
  {
    "name": "tests_\u0026_pyarxaas_\u0026_test_converters.py",
    "testCases": [
      {
        "name": "ConvertersTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_create_transform_models_dataframe__run",
                  "[PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_create_privacy_models_dataframe__run",
                  "[PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_create_attribute_types_dataframe__run",
                  "[PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertIsInstance]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_create_transform_models_dataframe__run",
                  "[]"
                ],
                [
                  "test_create_privacy_models_dataframe__run",
                  "[]"
                ],
                [
                  "test_create_attribute_types_dataframe__run",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_create_transform_models_dataframe__run",
                  "false"
                ],
                [
                  "test_create_privacy_models_dataframe__run",
                  "false"
                ],
                [
                  "test_create_attribute_types_dataframe__run",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_create_transform_models_dataframe__run",
                  "false"
                ],
                [
                  "test_create_privacy_models_dataframe__run",
                  "false"
                ],
                [
                  "test_create_attribute_types_dataframe__run",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_create_transform_models_dataframe__run",
                  "false"
                ],
                [
                  "test_create_privacy_models_dataframe__run",
                  "false"
                ],
                [
                  "test_create_attribute_types_dataframe__run",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_create_transform_models_dataframe__run",
                  "false"
                ],
                [
                  "test_create_privacy_models_dataframe__run",
                  "false"
                ],
                [
                  "test_create_attribute_types_dataframe__run",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_create_transform_models_dataframe__run",
                "false"
              ],
              [
                "test_create_privacy_models_dataframe__run",
                "false"
              ],
              [
                "test_create_attribute_types_dataframe__run",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_create_transform_models_dataframe__run",
                "false"
              ],
              [
                "test_create_privacy_models_dataframe__run",
                "false"
              ],
              [
                "test_create_attribute_types_dataframe__run",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_create_transform_models_dataframe__run",
                [
                  "self.test_attribute_types_mapping",
                  "self.test_privacy_models_sequence"
                ]
              ],
              [
                "test_create_privacy_models_dataframe__run",
                [
                  "self.test_attribute_types_mapping",
                  "self.test_hierarchy_mapping"
                ]
              ],
              [
                "test_create_attribute_types_dataframe__run",
                [
                  "self.test_privacy_models_sequence",
                  "self.test_hierarchy_mapping"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_create_transform_models_dataframe__run",
                "false"
              ],
              [
                "test_create_privacy_models_dataframe__run",
                "false"
              ],
              [
                "test_create_attribute_types_dataframe__run",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_create_transform_models_dataframe__run",
                "false"
              ],
              [
                "test_create_privacy_models_dataframe__run",
                "false"
              ],
              [
                "test_create_attribute_types_dataframe__run",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_create_transform_models_dataframe__run",
                  "0"
                ],
                [
                  "test_create_privacy_models_dataframe__run",
                  "0"
                ],
                [
                  "test_create_attribute_types_dataframe__run",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_create_transform_models_dataframe__run",
                  "0"
                ],
                [
                  "test_create_privacy_models_dataframe__run",
                  "0"
                ],
                [
                  "test_create_attribute_types_dataframe__run",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_create_transform_models_dataframe__run",
                "false"
              ],
              [
                "test_create_privacy_models_dataframe__run",
                "false"
              ],
              [
                "test_create_attribute_types_dataframe__run",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_create_transform_models_dataframe__run",
                "false"
              ],
              [
                "test_create_privacy_models_dataframe__run",
                "false"
              ],
              [
                "test_create_attribute_types_dataframe__run",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_create_transform_models_dataframe__run",
                "2"
              ],
              [
                "test_create_privacy_models_dataframe__run",
                "2"
              ],
              [
                "test_create_attribute_types_dataframe__run",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_create_transform_models_dataframe__run",
                [
                  "dataframe"
                ]
              ],
              [
                "test_create_privacy_models_dataframe__run",
                [
                  "dataframe"
                ]
              ],
              [
                "test_create_attribute_types_dataframe__run",
                [
                  "dataframe"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_create_transform_models_dataframe__run",
                [
                  "self.test_hierarchy_mapping"
                ]
              ],
              [
                "test_create_privacy_models_dataframe__run",
                [
                  "self.test_privacy_models_sequence"
                ]
              ],
              [
                "test_create_attribute_types_dataframe__run",
                [
                  "self.test_attribute_types_mapping"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6812148543425467,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_create_transform_models_dataframe__run",
                  "test_create_attribute_types_dataframe__run",
                  0.6708203932499369
                ],
                [
                  "test_create_privacy_models_dataframe__run",
                  "test_create_attribute_types_dataframe__run",
                  0.5777777777777777
                ],
                [
                  "test_create_transform_models_dataframe__run",
                  "test_create_privacy_models_dataframe__run",
                  0.7950463919999252
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_create_transform_models_dataframe__run",
                "false"
              ],
              [
                "test_create_privacy_models_dataframe__run",
                "false"
              ],
              [
                "test_create_attribute_types_dataframe__run",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_pyarxaas_\u0026_models_\u0026_test_Data.py",
    "testCases": [
      {
        "name": "DataTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test_payload",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test_payload",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_payload",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_payload",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_payload",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_payload",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_payload",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_payload",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                []
              ],
              [
                "test_payload",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_payload",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_payload",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_payload",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_payload",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_payload",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_payload",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_init",
                "0"
              ],
              [
                "test_payload",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                []
              ],
              [
                "test_payload",
                [
                  "data"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                []
              ],
              [
                "test_payload",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7442084075352507,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init",
                  "test_payload",
                  0.7442084075352507
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_payload",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_pyarxaas_\u0026_test_AaaSConnector.py",
    "testCases": [
      {
        "name": "AaaSConnectorTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_anonymize_data__run",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_anonymize_data__run",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_anonymize_data__run",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_anonymize_data__run",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_anonymize_data__run",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_anonymize_data__run",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": true,
            "detail": [
              [
                "test_anonymize_data__run",
                "true"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_anonymize_data__run",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_anonymize_data__run",
                [
                  "self.test_data"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_anonymize_data__run",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_anonymize_data__run",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_anonymize_data__run",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_anonymize_data__run",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_anonymize_data__run",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_anonymize_data__run",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_anonymize_data__run",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_anonymize_data__run",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_anonymize_data__run",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_anonymize_data__run",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_pyarxaas_\u0026_test_state_printer.py",
    "testCases": [
      {
        "name": "StatePrinterTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_print_mapping__run",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_print_mapping__run",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_print_mapping__run",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_print_mapping__run",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_print_mapping__run",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_print_mapping__run",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_print_mapping__run",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_print_mapping__run",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_print_mapping__run",
                [
                  "self.test_df"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_print_mapping__run",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_print_mapping__run",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_print_mapping__run",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_print_mapping__run",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_print_mapping__run",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_print_mapping__run",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_print_mapping__run",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_print_mapping__run",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_print_mapping__run",
                [
                  "self.test_name_dataframe_mapping"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_print_mapping__run",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_pyarxaas_\u0026_test_request_builder.py",
    "testCases": [
      {
        "name": "RequestBuilderTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test_build_analyze_request",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_add_privacy_model",
                  "[]"
                ],
                [
                  "test_build_anonymize_request",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_add_privacy_model",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test_build_analyze_request",
                  "[]"
                ],
                [
                  "test_add_privacy_model",
                  "[]"
                ],
                [
                  "test_build_anonymize_request",
                  "[]"
                ],
                [
                  "test_add_privacy_model",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_build_analyze_request",
                  "false"
                ],
                [
                  "test_add_privacy_model",
                  "false"
                ],
                [
                  "test_build_anonymize_request",
                  "false"
                ],
                [
                  "test_add_privacy_model",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_build_analyze_request",
                  "false"
                ],
                [
                  "test_add_privacy_model",
                  "false"
                ],
                [
                  "test_build_anonymize_request",
                  "false"
                ],
                [
                  "test_add_privacy_model",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_build_analyze_request",
                  "false"
                ],
                [
                  "test_add_privacy_model",
                  "false"
                ],
                [
                  "test_build_anonymize_request",
                  "false"
                ],
                [
                  "test_add_privacy_model",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_build_analyze_request",
                  "false"
                ],
                [
                  "test_add_privacy_model",
                  "false"
                ],
                [
                  "test_build_anonymize_request",
                  "false"
                ],
                [
                  "test_add_privacy_model",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_build_analyze_request",
                "false"
              ],
              [
                "test_add_privacy_model",
                "false"
              ],
              [
                "test_build_anonymize_request",
                "false"
              ],
              [
                "test_add_privacy_model",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_build_analyze_request",
                "false"
              ],
              [
                "test_add_privacy_model",
                "false"
              ],
              [
                "test_build_anonymize_request",
                "false"
              ],
              [
                "test_add_privacy_model",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_init",
                [
                  "self.suplimit",
                  "self.expected_anonymize_request",
                  "self.expected_analyze_request",
                  "self.kanon"
                ]
              ],
              [
                "test_build_analyze_request",
                [
                  "self.suplimit",
                  "self.expected_anonymize_request",
                  "self.kanon"
                ]
              ],
              [
                "test_add_privacy_model",
                [
                  "self.suplimit",
                  "self.expected_anonymize_request",
                  "self.expected_analyze_request"
                ]
              ],
              [
                "test_build_anonymize_request",
                [
                  "self.expected_analyze_request"
                ]
              ],
              [
                "test_add_privacy_model",
                [
                  "self.expected_anonymize_request",
                  "self.expected_analyze_request",
                  "self.kanon"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_build_analyze_request",
                "false"
              ],
              [
                "test_add_privacy_model",
                "false"
              ],
              [
                "test_build_anonymize_request",
                "false"
              ],
              [
                "test_add_privacy_model",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_build_analyze_request",
                "false"
              ],
              [
                "test_add_privacy_model",
                "false"
              ],
              [
                "test_build_anonymize_request",
                "false"
              ],
              [
                "test_add_privacy_model",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_build_analyze_request",
                  "0"
                ],
                [
                  "test_add_privacy_model",
                  "0"
                ],
                [
                  "test_build_anonymize_request",
                  "0"
                ],
                [
                  "test_add_privacy_model",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_build_analyze_request",
                  "0"
                ],
                [
                  "test_add_privacy_model",
                  "0"
                ],
                [
                  "test_build_anonymize_request",
                  "0"
                ],
                [
                  "test_add_privacy_model",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_build_analyze_request",
                "false"
              ],
              [
                "test_add_privacy_model",
                "false"
              ],
              [
                "test_build_anonymize_request",
                "false"
              ],
              [
                "test_add_privacy_model",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_build_analyze_request",
                "false"
              ],
              [
                "test_add_privacy_model",
                "false"
              ],
              [
                "test_build_anonymize_request",
                "false"
              ],
              [
                "test_add_privacy_model",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_init",
                "0"
              ],
              [
                "test_build_analyze_request",
                "1"
              ],
              [
                "test_add_privacy_model",
                "0"
              ],
              [
                "test_build_anonymize_request",
                "1"
              ],
              [
                "test_add_privacy_model",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                []
              ],
              [
                "test_build_analyze_request",
                [
                  "analyze_request"
                ]
              ],
              [
                "test_add_privacy_model",
                [
                  "req_builder"
                ]
              ],
              [
                "test_build_anonymize_request",
                [
                  "anonymize_request"
                ]
              ],
              [
                "test_add_privacy_model",
                [
                  "req_builder"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                [
                  "self.test_dataset"
                ]
              ],
              [
                "test_build_analyze_request",
                [
                  "self.test_dataset",
                  "self.expected_analyze_request"
                ]
              ],
              [
                "test_add_privacy_model",
                [
                  "self.test_dataset",
                  "self.kanon"
                ]
              ],
              [
                "test_build_anonymize_request",
                [
                  "self.suplimit",
                  "self.expected_anonymize_request",
                  "self.test_dataset",
                  "self.kanon"
                ]
              ],
              [
                "test_add_privacy_model",
                [
                  "self.suplimit",
                  "self.test_dataset"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4025738818390815,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init",
                  "test_add_privacy_model",
                  0.5070925528371099
                ],
                [
                  "test_add_privacy_model",
                  "test_build_anonymize_request",
                  0.2970442628930023
                ],
                [
                  "test_init",
                  "test_build_anonymize_request",
                  0.3175536744149779
                ],
                [
                  "test_init",
                  "test_add_privacy_model",
                  0.5345224838248488
                ],
                [
                  "test_add_privacy_model",
                  "test_build_analyze_request",
                  0.24152294576982394
                ],
                [
                  "test_add_privacy_model",
                  "test_add_privacy_model",
                  0.8959786703810408
                ],
                [
                  "test_add_privacy_model",
                  "test_build_anonymize_request",
                  0.28180093098831727
                ],
                [
                  "test_add_privacy_model",
                  "test_build_analyze_request",
                  0.2545875386086578
                ],
                [
                  "test_init",
                  "test_build_analyze_request",
                  0.34992710611188255
                ],
                [
                  "test_build_analyze_request",
                  "test_build_anonymize_request",
                  0.3457086525611543
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_build_analyze_request",
                "false"
              ],
              [
                "test_add_privacy_model",
                "false"
              ],
              [
                "test_build_anonymize_request",
                "false"
              ],
              [
                "test_add_privacy_model",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      }
    ]
  },
  {
    "name": "tests_\u0026_pyarxaas_\u0026_models_\u0026_test_Dataset.py",
    "testCases": [
      {
        "name": "DatasetTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_to_dataframe",
                  "[PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_hash",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test__payload__with_hierarchies",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_hierarchies",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_attribute_type_with_sequence_of_attributes",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_equality",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertIsNot, PyCallExpression: self.assertNotEqual]"
                ],
                [
                  "test_create_from_pandas_dataframe",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test__payload",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_init__without_attribute_types_param",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_type",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertIsNone, PyCallExpression: self.assertIsNot]"
                ],
                [
                  "test_from_dict",
                  "[PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_attribute_type_with_single_attribute",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_attribute_types_default_value",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_hierarchy",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_attribute_type__single_attribute",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_name",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertIsNone]"
                ],
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test_set_hierarchy_with_pandas",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_to_dataframe",
                  "[]"
                ],
                [
                  "test_hash",
                  "[]"
                ],
                [
                  "test__payload__with_hierarchies",
                  "[]"
                ],
                [
                  "test_set_hierarchies",
                  "[]"
                ],
                [
                  "test_set_attribute_type_with_sequence_of_attributes",
                  "[]"
                ],
                [
                  "test_equality",
                  "[]"
                ],
                [
                  "test_create_from_pandas_dataframe",
                  "[]"
                ],
                [
                  "test__payload",
                  "[]"
                ],
                [
                  "test_init__without_attribute_types_param",
                  "[]"
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_type",
                  "[]"
                ],
                [
                  "test_from_dict",
                  "[]"
                ],
                [
                  "test_set_attribute_type_with_single_attribute",
                  "[]"
                ],
                [
                  "test_set_attribute_types_default_value",
                  "[]"
                ],
                [
                  "test_set_hierarchy",
                  "[]"
                ],
                [
                  "test_set_attribute_type__single_attribute",
                  "[]"
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_name",
                  "[]"
                ],
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test_set_hierarchy_with_pandas",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_to_dataframe",
                  "false"
                ],
                [
                  "test_hash",
                  "false"
                ],
                [
                  "test__payload__with_hierarchies",
                  "false"
                ],
                [
                  "test_set_hierarchies",
                  "false"
                ],
                [
                  "test_set_attribute_type_with_sequence_of_attributes",
                  "false"
                ],
                [
                  "test_equality",
                  "false"
                ],
                [
                  "test_create_from_pandas_dataframe",
                  "false"
                ],
                [
                  "test__payload",
                  "false"
                ],
                [
                  "test_init__without_attribute_types_param",
                  "false"
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_type",
                  "false"
                ],
                [
                  "test_from_dict",
                  "false"
                ],
                [
                  "test_set_attribute_type_with_single_attribute",
                  "false"
                ],
                [
                  "test_set_attribute_types_default_value",
                  "false"
                ],
                [
                  "test_set_hierarchy",
                  "false"
                ],
                [
                  "test_set_attribute_type__single_attribute",
                  "false"
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_name",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_set_hierarchy_with_pandas",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_to_dataframe",
                  "false"
                ],
                [
                  "test_hash",
                  "false"
                ],
                [
                  "test__payload__with_hierarchies",
                  "false"
                ],
                [
                  "test_set_hierarchies",
                  "false"
                ],
                [
                  "test_set_attribute_type_with_sequence_of_attributes",
                  "false"
                ],
                [
                  "test_equality",
                  "false"
                ],
                [
                  "test_create_from_pandas_dataframe",
                  "false"
                ],
                [
                  "test__payload",
                  "false"
                ],
                [
                  "test_init__without_attribute_types_param",
                  "false"
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_type",
                  "false"
                ],
                [
                  "test_from_dict",
                  "false"
                ],
                [
                  "test_set_attribute_type_with_single_attribute",
                  "false"
                ],
                [
                  "test_set_attribute_types_default_value",
                  "false"
                ],
                [
                  "test_set_hierarchy",
                  "false"
                ],
                [
                  "test_set_attribute_type__single_attribute",
                  "false"
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_name",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_set_hierarchy_with_pandas",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_to_dataframe",
                  "false"
                ],
                [
                  "test_hash",
                  "false"
                ],
                [
                  "test__payload__with_hierarchies",
                  "false"
                ],
                [
                  "test_set_hierarchies",
                  "false"
                ],
                [
                  "test_set_attribute_type_with_sequence_of_attributes",
                  "false"
                ],
                [
                  "test_equality",
                  "false"
                ],
                [
                  "test_create_from_pandas_dataframe",
                  "false"
                ],
                [
                  "test__payload",
                  "false"
                ],
                [
                  "test_init__without_attribute_types_param",
                  "false"
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_type",
                  "false"
                ],
                [
                  "test_from_dict",
                  "false"
                ],
                [
                  "test_set_attribute_type_with_single_attribute",
                  "false"
                ],
                [
                  "test_set_attribute_types_default_value",
                  "false"
                ],
                [
                  "test_set_hierarchy",
                  "false"
                ],
                [
                  "test_set_attribute_type__single_attribute",
                  "false"
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_name",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_set_hierarchy_with_pandas",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_to_dataframe",
                  "false"
                ],
                [
                  "test_hash",
                  "false"
                ],
                [
                  "test__payload__with_hierarchies",
                  "false"
                ],
                [
                  "test_set_hierarchies",
                  "false"
                ],
                [
                  "test_set_attribute_type_with_sequence_of_attributes",
                  "false"
                ],
                [
                  "test_equality",
                  "false"
                ],
                [
                  "test_create_from_pandas_dataframe",
                  "false"
                ],
                [
                  "test__payload",
                  "false"
                ],
                [
                  "test_init__without_attribute_types_param",
                  "false"
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_type",
                  "false"
                ],
                [
                  "test_from_dict",
                  "false"
                ],
                [
                  "test_set_attribute_type_with_single_attribute",
                  "false"
                ],
                [
                  "test_set_attribute_types_default_value",
                  "false"
                ],
                [
                  "test_set_hierarchy",
                  "false"
                ],
                [
                  "test_set_attribute_type__single_attribute",
                  "false"
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_name",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_set_hierarchy_with_pandas",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_to_dataframe",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test__payload__with_hierarchies",
                "false"
              ],
              [
                "test_set_hierarchies",
                "false"
              ],
              [
                "test_set_attribute_type_with_sequence_of_attributes",
                "false"
              ],
              [
                "test_equality",
                "false"
              ],
              [
                "test_create_from_pandas_dataframe",
                "false"
              ],
              [
                "test__payload",
                "false"
              ],
              [
                "test_init__without_attribute_types_param",
                "false"
              ],
              [
                "test_set_hierarchy__not_valid_attribute_type",
                "false"
              ],
              [
                "test_from_dict",
                "false"
              ],
              [
                "test_set_attribute_type_with_single_attribute",
                "false"
              ],
              [
                "test_set_attribute_types_default_value",
                "false"
              ],
              [
                "test_set_hierarchy",
                "false"
              ],
              [
                "test_set_attribute_type__single_attribute",
                "false"
              ],
              [
                "test_set_hierarchy__not_valid_attribute_name",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_set_hierarchy_with_pandas",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_to_dataframe",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test__payload__with_hierarchies",
                "false"
              ],
              [
                "test_set_hierarchies",
                "false"
              ],
              [
                "test_set_attribute_type_with_sequence_of_attributes",
                "false"
              ],
              [
                "test_equality",
                "false"
              ],
              [
                "test_create_from_pandas_dataframe",
                "false"
              ],
              [
                "test__payload",
                "false"
              ],
              [
                "test_init__without_attribute_types_param",
                "false"
              ],
              [
                "test_set_hierarchy__not_valid_attribute_type",
                "false"
              ],
              [
                "test_from_dict",
                "false"
              ],
              [
                "test_set_attribute_type_with_single_attribute",
                "false"
              ],
              [
                "test_set_attribute_types_default_value",
                "false"
              ],
              [
                "test_set_hierarchy",
                "false"
              ],
              [
                "test_set_attribute_type__single_attribute",
                "false"
              ],
              [
                "test_set_hierarchy__not_valid_attribute_name",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_set_hierarchy_with_pandas",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_to_dataframe",
                []
              ],
              [
                "test_hash",
                [
                  "self.test_data",
                  "self.test_attribute_type_mapping"
                ]
              ],
              [
                "test__payload__with_hierarchies",
                [
                  "self.test_attribute_type_mapping"
                ]
              ],
              [
                "test_set_hierarchies",
                [
                  "self.test_attribute_type_mapping"
                ]
              ],
              [
                "test_set_attribute_type_with_sequence_of_attributes",
                [
                  "self.test_attribute_type_mapping"
                ]
              ],
              [
                "test_equality",
                [
                  "self.test_data",
                  "self.test_attribute_type_mapping"
                ]
              ],
              [
                "test_create_from_pandas_dataframe",
                [
                  "self.test_attribute_type_mapping"
                ]
              ],
              [
                "test__payload",
                [
                  "self.test_attribute_type_mapping"
                ]
              ],
              [
                "test_init__without_attribute_types_param",
                [
                  "self.test_attribute_type_mapping"
                ]
              ],
              [
                "test_set_hierarchy__not_valid_attribute_type",
                [
                  "self.test_attribute_type_mapping"
                ]
              ],
              [
                "test_from_dict",
                [
                  "self.test_data",
                  "self.test_attribute_type_mapping"
                ]
              ],
              [
                "test_set_attribute_type_with_single_attribute",
                [
                  "self.test_attribute_type_mapping"
                ]
              ],
              [
                "test_set_attribute_types_default_value",
                [
                  "self.test_attribute_type_mapping"
                ]
              ],
              [
                "test_set_hierarchy",
                [
                  "self.test_attribute_type_mapping"
                ]
              ],
              [
                "test_set_attribute_type__single_attribute",
                [
                  "self.test_attribute_type_mapping"
                ]
              ],
              [
                "test_set_hierarchy__not_valid_attribute_name",
                [
                  "self.test_attribute_type_mapping"
                ]
              ],
              [
                "test_init",
                []
              ],
              [
                "test_set_hierarchy_with_pandas",
                [
                  "self.test_attribute_type_mapping"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_to_dataframe",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test__payload__with_hierarchies",
                "false"
              ],
              [
                "test_set_hierarchies",
                "false"
              ],
              [
                "test_set_attribute_type_with_sequence_of_attributes",
                "false"
              ],
              [
                "test_equality",
                "false"
              ],
              [
                "test_create_from_pandas_dataframe",
                "false"
              ],
              [
                "test__payload",
                "false"
              ],
              [
                "test_init__without_attribute_types_param",
                "false"
              ],
              [
                "test_set_hierarchy__not_valid_attribute_type",
                "false"
              ],
              [
                "test_from_dict",
                "false"
              ],
              [
                "test_set_attribute_type_with_single_attribute",
                "false"
              ],
              [
                "test_set_attribute_types_default_value",
                "false"
              ],
              [
                "test_set_hierarchy",
                "false"
              ],
              [
                "test_set_attribute_type__single_attribute",
                "false"
              ],
              [
                "test_set_hierarchy__not_valid_attribute_name",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_set_hierarchy_with_pandas",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_to_dataframe",
                "false"
              ],
              [
                "test_hash",
                "true"
              ],
              [
                "test__payload__with_hierarchies",
                "false"
              ],
              [
                "test_set_hierarchies",
                "false"
              ],
              [
                "test_set_attribute_type_with_sequence_of_attributes",
                "false"
              ],
              [
                "test_equality",
                "false"
              ],
              [
                "test_create_from_pandas_dataframe",
                "false"
              ],
              [
                "test__payload",
                "false"
              ],
              [
                "test_init__without_attribute_types_param",
                "false"
              ],
              [
                "test_set_hierarchy__not_valid_attribute_type",
                "false"
              ],
              [
                "test_from_dict",
                "false"
              ],
              [
                "test_set_attribute_type_with_single_attribute",
                "false"
              ],
              [
                "test_set_attribute_types_default_value",
                "false"
              ],
              [
                "test_set_hierarchy",
                "false"
              ],
              [
                "test_set_attribute_type__single_attribute",
                "false"
              ],
              [
                "test_set_hierarchy__not_valid_attribute_name",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_set_hierarchy_with_pandas",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_to_dataframe",
                  "0"
                ],
                [
                  "test_hash",
                  "0"
                ],
                [
                  "test__payload__with_hierarchies",
                  "0"
                ],
                [
                  "test_set_hierarchies",
                  "0"
                ],
                [
                  "test_set_attribute_type_with_sequence_of_attributes",
                  "0"
                ],
                [
                  "test_equality",
                  "0"
                ],
                [
                  "test_create_from_pandas_dataframe",
                  "0"
                ],
                [
                  "test__payload",
                  "0"
                ],
                [
                  "test_init__without_attribute_types_param",
                  "0"
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_type",
                  "0"
                ],
                [
                  "test_from_dict",
                  "0"
                ],
                [
                  "test_set_attribute_type_with_single_attribute",
                  "0"
                ],
                [
                  "test_set_attribute_types_default_value",
                  "0"
                ],
                [
                  "test_set_hierarchy",
                  "0"
                ],
                [
                  "test_set_attribute_type__single_attribute",
                  "0"
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_name",
                  "0"
                ],
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_set_hierarchy_with_pandas",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_to_dataframe",
                  "0"
                ],
                [
                  "test_hash",
                  "0"
                ],
                [
                  "test__payload__with_hierarchies",
                  "0"
                ],
                [
                  "test_set_hierarchies",
                  "0"
                ],
                [
                  "test_set_attribute_type_with_sequence_of_attributes",
                  "0"
                ],
                [
                  "test_equality",
                  "0"
                ],
                [
                  "test_create_from_pandas_dataframe",
                  "0"
                ],
                [
                  "test__payload",
                  "0"
                ],
                [
                  "test_init__without_attribute_types_param",
                  "0"
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_type",
                  "0"
                ],
                [
                  "test_from_dict",
                  "0"
                ],
                [
                  "test_set_attribute_type_with_single_attribute",
                  "0"
                ],
                [
                  "test_set_attribute_types_default_value",
                  "0"
                ],
                [
                  "test_set_hierarchy",
                  "0"
                ],
                [
                  "test_set_attribute_type__single_attribute",
                  "0"
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_name",
                  "0"
                ],
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_set_hierarchy_with_pandas",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_to_dataframe",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test__payload__with_hierarchies",
                "false"
              ],
              [
                "test_set_hierarchies",
                "false"
              ],
              [
                "test_set_attribute_type_with_sequence_of_attributes",
                "false"
              ],
              [
                "test_equality",
                "false"
              ],
              [
                "test_create_from_pandas_dataframe",
                "false"
              ],
              [
                "test__payload",
                "false"
              ],
              [
                "test_init__without_attribute_types_param",
                "false"
              ],
              [
                "test_set_hierarchy__not_valid_attribute_type",
                "false"
              ],
              [
                "test_from_dict",
                "false"
              ],
              [
                "test_set_attribute_type_with_single_attribute",
                "false"
              ],
              [
                "test_set_attribute_types_default_value",
                "false"
              ],
              [
                "test_set_hierarchy",
                "false"
              ],
              [
                "test_set_attribute_type__single_attribute",
                "false"
              ],
              [
                "test_set_hierarchy__not_valid_attribute_name",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_set_hierarchy_with_pandas",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_to_dataframe",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test__payload__with_hierarchies",
                "false"
              ],
              [
                "test_set_hierarchies",
                "false"
              ],
              [
                "test_set_attribute_type_with_sequence_of_attributes",
                "false"
              ],
              [
                "test_equality",
                "false"
              ],
              [
                "test_create_from_pandas_dataframe",
                "false"
              ],
              [
                "test__payload",
                "false"
              ],
              [
                "test_init__without_attribute_types_param",
                "false"
              ],
              [
                "test_set_hierarchy__not_valid_attribute_type",
                "false"
              ],
              [
                "test_from_dict",
                "false"
              ],
              [
                "test_set_attribute_type_with_single_attribute",
                "false"
              ],
              [
                "test_set_attribute_types_default_value",
                "false"
              ],
              [
                "test_set_hierarchy",
                "false"
              ],
              [
                "test_set_attribute_type__single_attribute",
                "false"
              ],
              [
                "test_set_hierarchy__not_valid_attribute_name",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_set_hierarchy_with_pandas",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_to_dataframe",
                "1"
              ],
              [
                "test_hash",
                "1"
              ],
              [
                "test__payload__with_hierarchies",
                "2"
              ],
              [
                "test_set_hierarchies",
                "2"
              ],
              [
                "test_set_attribute_type_with_sequence_of_attributes",
                "2"
              ],
              [
                "test_equality",
                "3"
              ],
              [
                "test_create_from_pandas_dataframe",
                "2"
              ],
              [
                "test__payload",
                "2"
              ],
              [
                "test_init__without_attribute_types_param",
                "3"
              ],
              [
                "test_set_hierarchy__not_valid_attribute_type",
                "3"
              ],
              [
                "test_from_dict",
                "3"
              ],
              [
                "test_set_attribute_type_with_single_attribute",
                "1"
              ],
              [
                "test_set_attribute_types_default_value",
                "2"
              ],
              [
                "test_set_hierarchy",
                "1"
              ],
              [
                "test_set_attribute_type__single_attribute",
                "2"
              ],
              [
                "test_set_hierarchy__not_valid_attribute_name",
                "2"
              ],
              [
                "test_init",
                "0"
              ],
              [
                "test_set_hierarchy_with_pandas",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_to_dataframe",
                [
                  "df",
                  "dataset"
                ]
              ],
              [
                "test_hash",
                [
                  "dataset_1",
                  "dataset_2",
                  "test_set"
                ]
              ],
              [
                "test__payload__with_hierarchies",
                [
                  "payload",
                  "test_hierarchy_id",
                  "dataset",
                  "test_hierarchy_name"
                ]
              ],
              [
                "test_set_hierarchies",
                [
                  "test_hierarchy_id",
                  "dataset",
                  "test_hierarchy_name"
                ]
              ],
              [
                "test_set_attribute_type_with_sequence_of_attributes",
                [
                  "dataset"
                ]
              ],
              [
                "test_equality",
                [
                  "dataset_1",
                  "dataset_2"
                ]
              ],
              [
                "test_create_from_pandas_dataframe",
                [
                  "pandas_df",
                  "dataframe",
                  "dataset"
                ]
              ],
              [
                "test__payload",
                [
                  "payload",
                  "dataset"
                ]
              ],
              [
                "test_init__without_attribute_types_param",
                [
                  "dataset"
                ]
              ],
              [
                "test_set_hierarchy__not_valid_attribute_type",
                [
                  "test_hierarchy",
                  "dataset"
                ]
              ],
              [
                "test_from_dict",
                [
                  "expected_df",
                  "data",
                  "dataset"
                ]
              ],
              [
                "test_set_attribute_type_with_single_attribute",
                [
                  "dataset"
                ]
              ],
              [
                "test_set_attribute_types_default_value",
                [
                  "dataset"
                ]
              ],
              [
                "test_set_hierarchy",
                [
                  "test_hierarchy",
                  "dataset"
                ]
              ],
              [
                "test_set_attribute_type__single_attribute",
                [
                  "dataset"
                ]
              ],
              [
                "test_set_hierarchy__not_valid_attribute_name",
                [
                  "test_hierarchy",
                  "dataset"
                ]
              ],
              [
                "test_init",
                []
              ],
              [
                "test_set_hierarchy_with_pandas",
                [
                  "hierarchy_df",
                  "test_hierarchy",
                  "dataset"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_to_dataframe",
                [
                  "self.test_data",
                  "self.test_attribute_type_mapping"
                ]
              ],
              [
                "test_hash",
                []
              ],
              [
                "test__payload__with_hierarchies",
                [
                  "self.test_data"
                ]
              ],
              [
                "test_set_hierarchies",
                [
                  "self.test_data"
                ]
              ],
              [
                "test_set_attribute_type_with_sequence_of_attributes",
                [
                  "self.test_data"
                ]
              ],
              [
                "test_equality",
                []
              ],
              [
                "test_create_from_pandas_dataframe",
                [
                  "self.test_data"
                ]
              ],
              [
                "test__payload",
                [
                  "self.test_data"
                ]
              ],
              [
                "test_init__without_attribute_types_param",
                [
                  "self.test_data"
                ]
              ],
              [
                "test_set_hierarchy__not_valid_attribute_type",
                [
                  "self.test_data"
                ]
              ],
              [
                "test_from_dict",
                []
              ],
              [
                "test_set_attribute_type_with_single_attribute",
                [
                  "self.test_data"
                ]
              ],
              [
                "test_set_attribute_types_default_value",
                [
                  "self.test_data"
                ]
              ],
              [
                "test_set_hierarchy",
                [
                  "self.test_data"
                ]
              ],
              [
                "test_set_attribute_type__single_attribute",
                [
                  "self.test_data"
                ]
              ],
              [
                "test_set_hierarchy__not_valid_attribute_name",
                [
                  "self.test_data"
                ]
              ],
              [
                "test_init",
                [
                  "self.test_data",
                  "self.test_attribute_type_mapping"
                ]
              ],
              [
                "test_set_hierarchy_with_pandas",
                [
                  "self.test_data"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5059959352992596,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_set_attribute_type_with_single_attribute",
                  "test_set_hierarchies",
                  0.5206817403344601
                ],
                [
                  "test_set_attribute_types_default_value",
                  "test_set_hierarchy",
                  0.521749194749951
                ],
                [
                  "test_set_hierarchy",
                  "test_set_hierarchy_with_pandas",
                  0.8714893406611901
                ],
                [
                  "test_init__without_attribute_types_param",
                  "test_set_attribute_types_default_value",
                  0.59336610396393
                ],
                [
                  "test_set_attribute_type_with_sequence_of_attributes",
                  "test_from_dict",
                  0.20865558152799643
                ],
                [
                  "test_set_hierarchy",
                  "test_from_dict",
                  0.3444233600968322
                ],
                [
                  "test_equality",
                  "test_set_hierarchy",
                  0.41978507857607555
                ],
                [
                  "test_set_hierarchies",
                  "test__payload",
                  0.41311057971531334
                ],
                [
                  "test_init",
                  "test_set_attribute_type__single_attribute",
                  0.4423258684646914
                ],
                [
                  "test__payload",
                  "test__payload__with_hierarchies",
                  0.568194714242393
                ],
                [
                  "test_set_attribute_type_with_sequence_of_attributes",
                  "test_set_hierarchy_with_pandas",
                  0.4516975163047089
                ],
                [
                  "test_init",
                  "test_set_hierarchy",
                  0.40824829046386296
                ],
                [
                  "test_set_attribute_type_with_sequence_of_attributes",
                  "test_set_attribute_type_with_single_attribute",
                  0.9026902148911055
                ],
                [
                  "test_equality",
                  "test_set_attribute_type__single_attribute",
                  0.6183250845757625
                ],
                [
                  "test_set_attribute_types_default_value",
                  "test_set_attribute_type__single_attribute",
                  0.8210324006387024
                ],
                [
                  "test_hash",
                  "test_from_dict",
                  0.5460535158669609
                ],
                [
                  "test_init",
                  "test_set_hierarchy__not_valid_attribute_type",
                  0.36265926036768287
                ],
                [
                  "test_init__without_attribute_types_param",
                  "test_from_dict",
                  0.4090479940519309
                ],
                [
                  "test__payload",
                  "test_to_dataframe",
                  0.4603171644550004
                ],
                [
                  "test_create_from_pandas_dataframe",
                  "test_set_hierarchy__not_valid_attribute_name",
                  0.47745772865984415
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_name",
                  "test_set_hierarchy_with_pandas",
                  0.8164257874493837
                ],
                [
                  "test_init__without_attribute_types_param",
                  "test_set_attribute_type_with_single_attribute",
                  0.4879500364742666
                ],
                [
                  "test_create_from_pandas_dataframe",
                  "test__payload",
                  0.4790352364666346
                ],
                [
                  "test_init",
                  "test_set_hierarchy__not_valid_attribute_name",
                  0.40712826560868287
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_name",
                  "test__payload__with_hierarchies",
                  0.7760119244686048
                ],
                [
                  "test_create_from_pandas_dataframe",
                  "test_set_hierarchy",
                  0.4137951366248033
                ],
                [
                  "test_init__without_attribute_types_param",
                  "test_set_attribute_type_with_sequence_of_attributes",
                  0.5078333750770081
                ],
                [
                  "test__payload",
                  "test_from_dict",
                  0.41866241698517254
                ],
                [
                  "test_init__without_attribute_types_param",
                  "test_to_dataframe",
                  0.3583914681524163
                ],
                [
                  "test_equality",
                  "test_set_attribute_type_with_single_attribute",
                  0.35416880166057313
                ],
                [
                  "test_set_attribute_type_with_single_attribute",
                  "test__payload__with_hierarchies",
                  0.5115347996178656
                ],
                [
                  "test_set_attribute_type__single_attribute",
                  "test_to_dataframe",
                  0.3730019232961255
                ],
                [
                  "test_set_attribute_types_default_value",
                  "test_set_attribute_type_with_single_attribute",
                  0.7795119555779044
                ],
                [
                  "test_hash",
                  "test_set_hierarchy_with_pandas",
                  0.43423950289576796
                ],
                [
                  "test_set_hierarchy",
                  "test_set_hierarchies",
                  0.8527295974240744
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_name",
                  "test_to_dataframe",
                  0.44475635934529617
                ],
                [
                  "test_hash",
                  "test_set_attribute_type_with_sequence_of_attributes",
                  0.24595948397164089
                ],
                [
                  "test_init",
                  "test_set_hierarchy_with_pandas",
                  0.32020563013416903
                ],
                [
                  "test_set_attribute_types_default_value",
                  "test_set_hierarchy__not_valid_attribute_name",
                  0.557483337179576
                ],
                [
                  "test_hash",
                  "test_set_attribute_types_default_value",
                  0.3094922302950864
                ],
                [
                  "test_set_hierarchy",
                  "test_set_hierarchy__not_valid_attribute_type",
                  0.7941133055357942
                ],
                [
                  "test_equality",
                  "test_from_dict",
                  0.5334909798094248
                ],
                [
                  "test_init__without_attribute_types_param",
                  "test_set_hierarchy",
                  0.4626813958590447
                ],
                [
                  "test_set_attribute_type__single_attribute",
                  "test_from_dict",
                  0.3392484547739255
                ],
                [
                  "test_equality",
                  "test_hash",
                  0.8544424824948561
                ],
                [
                  "test_hash",
                  "test_set_attribute_type__single_attribute",
                  0.5098725477925868
                ],
                [
                  "test_init",
                  "test_to_dataframe",
                  0.5692099788303082
                ],
                [
                  "test_set_hierarchy_with_pandas",
                  "test__payload",
                  0.42541561654602156
                ],
                [
                  "test_set_attribute_type_with_sequence_of_attributes",
                  "test_set_hierarchy__not_valid_attribute_type",
                  0.5740378478819278
                ],
                [
                  "test_set_hierarchy_with_pandas",
                  "test_to_dataframe",
                  0.4500351603704096
                ],
                [
                  "test_init",
                  "test__payload",
                  0.3639126714370255
                ],
                [
                  "test_hash",
                  "test__payload",
                  0.49351180201319655
                ],
                [
                  "test_hash",
                  "test_to_dataframe",
                  0.45028726463187374
                ],
                [
                  "test_set_attribute_type_with_single_attribute",
                  "test_to_dataframe",
                  0.401188709901439
                ],
                [
                  "test__payload__with_hierarchies",
                  "test_from_dict",
                  0.3849107395700303
                ],
                [
                  "test_init__without_attribute_types_param",
                  "test_set_hierarchy_with_pandas",
                  0.4032219046133981
                ],
                [
                  "test_init",
                  "test_set_attribute_type_with_single_attribute",
                  0.4391550328268399
                ],
                [
                  "test_set_attribute_types_default_value",
                  "test_set_hierarchy_with_pandas",
                  0.45469886172314167
                ],
                [
                  "test_set_attribute_type_with_sequence_of_attributes",
                  "test_set_hierarchies",
                  0.48589714865055444
                ],
                [
                  "test_create_from_pandas_dataframe",
                  "test_set_hierarchy__not_valid_attribute_type",
                  0.4860650459312293
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_type",
                  "test__payload__with_hierarchies",
                  0.7133124298226385
                ],
                [
                  "test_equality",
                  "test_create_from_pandas_dataframe",
                  0.557342322809971
                ],
                [
                  "test_init__without_attribute_types_param",
                  "test__payload__with_hierarchies",
                  0.45353473235789504
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_type",
                  "test_set_hierarchy_with_pandas",
                  0.7624403943789557
                ],
                [
                  "test_equality",
                  "test_set_hierarchy__not_valid_attribute_type",
                  0.4785981650670156
                ],
                [
                  "test_set_attribute_type__single_attribute",
                  "test_set_hierarchies",
                  0.5422945423713862
                ],
                [
                  "test_set_attribute_types_default_value",
                  "test__payload__with_hierarchies",
                  0.4683162033658367
                ],
                [
                  "test_set_attribute_type_with_single_attribute",
                  "test__payload",
                  0.5327136039034331
                ],
                [
                  "test_set_hierarchies",
                  "test_to_dataframe",
                  0.358979079308869
                ],
                [
                  "test_create_from_pandas_dataframe",
                  "test_from_dict",
                  0.5300357033604886
                ],
                [
                  "test_hash",
                  "test_set_attribute_type_with_single_attribute",
                  0.29777500019127906
                ],
                [
                  "test_equality",
                  "test_set_hierarchies",
                  0.3662027223108035
                ],
                [
                  "test_set_hierarchies",
                  "test_from_dict",
                  0.31343477535051806
                ],
                [
                  "test_create_from_pandas_dataframe",
                  "test_set_hierarchies",
                  0.3835384350762048
                ],
                [
                  "test_set_hierarchy_with_pandas",
                  "test__payload__with_hierarchies",
                  0.7856400601899867
                ],
                [
                  "test_set_attribute_type__single_attribute",
                  "test_set_hierarchy__not_valid_attribute_type",
                  0.6513763238803736
                ],
                [
                  "test_init",
                  "test__payload__with_hierarchies",
                  0.35687978939637643
                ],
                [
                  "test_init",
                  "test_set_attribute_type_with_sequence_of_attributes",
                  0.3627381250550058
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_type",
                  "test_set_hierarchies",
                  0.74852312380837
                ],
                [
                  "test_init",
                  "test_set_hierarchies",
                  0.3632612873491998
                ],
                [
                  "test_set_attribute_type_with_sequence_of_attributes",
                  "test__payload",
                  0.5280200004832999
                ],
                [
                  "test_init",
                  "test_set_attribute_types_default_value",
                  0.3651483716701107
                ],
                [
                  "test_create_from_pandas_dataframe",
                  "test_set_attribute_type_with_sequence_of_attributes",
                  0.4122322789849674
                ],
                [
                  "test_init__without_attribute_types_param",
                  "test_set_hierarchy__not_valid_attribute_name",
                  0.5181632471383237
                ],
                [
                  "test_equality",
                  "test_to_dataframe",
                  0.40804909636053655
                ],
                [
                  "test_equality",
                  "test_init__without_attribute_types_param",
                  0.5578138383273124
                ],
                [
                  "test_set_attribute_types_default_value",
                  "test_set_attribute_type_with_sequence_of_attributes",
                  0.8278327231656524
                ],
                [
                  "test_set_attribute_type__single_attribute",
                  "test_set_hierarchy__not_valid_attribute_name",
                  0.6548485951341245
                ],
                [
                  "test_set_attribute_type_with_single_attribute",
                  "test_set_hierarchy",
                  0.557773351022717
                ],
                [
                  "test_init__without_attribute_types_param",
                  "test__payload",
                  0.5025460700797018
                ],
                [
                  "test_to_dataframe",
                  "test_from_dict",
                  0.5335783750799326
                ],
                [
                  "test_create_from_pandas_dataframe",
                  "test_to_dataframe",
                  0.5050686484257774
                ],
                [
                  "test_init__without_attribute_types_param",
                  "test_set_hierarchy__not_valid_attribute_type",
                  0.560473402386419
                ],
                [
                  "test_create_from_pandas_dataframe",
                  "test__payload__with_hierarchies",
                  0.4453099460934372
                ],
                [
                  "test_set_attribute_type_with_single_attribute",
                  "test_set_attribute_type__single_attribute",
                  0.7626096635663643
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_name",
                  "test__payload",
                  0.5002775978746292
                ],
                [
                  "test_set_hierarchy",
                  "test__payload",
                  0.4669239959758098
                ],
                [
                  "test_hash",
                  "test_set_hierarchy__not_valid_attribute_name",
                  0.4768288678029146
                ],
                [
                  "test_equality",
                  "test_set_attribute_type_with_sequence_of_attributes",
                  0.30716727200503324
                ],
                [
                  "test_set_attribute_type__single_attribute",
                  "test_set_hierarchy",
                  0.5778520948116922
                ],
                [
                  "test_set_attribute_type__single_attribute",
                  "test__payload",
                  0.6132113845283359
                ],
                [
                  "test_set_hierarchy",
                  "test_to_dataframe",
                  0.4131182235954578
                ],
                [
                  "test_init__without_attribute_types_param",
                  "test_set_attribute_type__single_attribute",
                  0.7372097807744856
                ],
                [
                  "test_hash",
                  "test_init__without_attribute_types_param",
                  0.4746444525345672
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_type",
                  "test_to_dataframe",
                  0.43788026951985703
                ],
                [
                  "test_set_attribute_type_with_single_attribute",
                  "test_set_hierarchy__not_valid_attribute_type",
                  0.5952277431812029
                ],
                [
                  "test_hash",
                  "test_create_from_pandas_dataframe",
                  0.5519037064102987
                ],
                [
                  "test_set_hierarchies",
                  "test_set_hierarchy_with_pandas",
                  0.856231999889861
                ],
                [
                  "test_set_attribute_type_with_sequence_of_attributes",
                  "test_set_hierarchy__not_valid_attribute_name",
                  0.5638726942181075
                ],
                [
                  "test_set_hierarchies",
                  "test__payload__with_hierarchies",
                  0.8659587736320966
                ],
                [
                  "test_set_attribute_types_default_value",
                  "test_to_dataframe",
                  0.3752776749732568
                ],
                [
                  "test_equality",
                  "test__payload",
                  0.47167634680691034
                ],
                [
                  "test_init",
                  "test_init__without_attribute_types_param",
                  0.36666666666666664
                ],
                [
                  "test_set_attribute_type_with_single_attribute",
                  "test_set_hierarchy_with_pandas",
                  0.5034540131326406
                ],
                [
                  "test_set_attribute_type_with_sequence_of_attributes",
                  "test_set_hierarchy",
                  0.5034965460952284
                ],
                [
                  "test_equality",
                  "test_set_hierarchy__not_valid_attribute_name",
                  0.5148966984650519
                ],
                [
                  "test_hash",
                  "test_set_hierarchies",
                  0.4002606094984321
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_type",
                  "test_from_dict",
                  0.442506520246152
                ],
                [
                  "test_create_from_pandas_dataframe",
                  "test_set_hierarchy_with_pandas",
                  0.4152571493898898
                ],
                [
                  "test_hash",
                  "test__payload__with_hierarchies",
                  0.46885012321603003
                ],
                [
                  "test_set_attribute_types_default_value",
                  "test__payload",
                  0.6406816471329368
                ],
                [
                  "test_set_attribute_type_with_sequence_of_attributes",
                  "test_set_attribute_type__single_attribute",
                  0.7487594622209767
                ],
                [
                  "test_set_hierarchy",
                  "test__payload__with_hierarchies",
                  0.7375837923560066
                ],
                [
                  "test_hash",
                  "test_set_hierarchy__not_valid_attribute_type",
                  0.4359242881596485
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_type",
                  "test__payload",
                  0.4970535983885193
                ],
                [
                  "test_equality",
                  "test_set_attribute_types_default_value",
                  0.34049720539744355
                ],
                [
                  "test_init",
                  "test_from_dict",
                  0.1917412472118426
                ],
                [
                  "test_set_hierarchy_with_pandas",
                  "test_from_dict",
                  0.3820234561806727
                ],
                [
                  "test__payload__with_hierarchies",
                  "test_to_dataframe",
                  0.380886632563643
                ],
                [
                  "test_hash",
                  "test_set_hierarchy",
                  0.4567501391955698
                ],
                [
                  "test_init",
                  "test_create_from_pandas_dataframe",
                  0.30714755841697555
                ],
                [
                  "test_create_from_pandas_dataframe",
                  "test_set_attribute_type_with_single_attribute",
                  0.4196434545311265
                ],
                [
                  "test_set_attribute_type_with_sequence_of_attributes",
                  "test__payload__with_hierarchies",
                  0.4692704080742926
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_name",
                  "test_set_hierarchies",
                  0.8066942066250389
                ],
                [
                  "test_set_attribute_type_with_single_attribute",
                  "test_from_dict",
                  0.22454435656953592
                ],
                [
                  "test_set_attribute_type_with_single_attribute",
                  "test_set_hierarchy__not_valid_attribute_name",
                  0.6140345972561544
                ],
                [
                  "test_init",
                  "test_equality",
                  0.3225911354182047
                ],
                [
                  "test_set_attribute_types_default_value",
                  "test_from_dict",
                  0.26255251575525185
                ],
                [
                  "test_set_attribute_type_with_sequence_of_attributes",
                  "test_to_dataframe",
                  0.34412360080584264
                ],
                [
                  "test_equality",
                  "test_set_hierarchy_with_pandas",
                  0.38735811672106235
                ],
                [
                  "test_init",
                  "test_hash",
                  0.3051285766293646
                ],
                [
                  "test_init__without_attribute_types_param",
                  "test_create_from_pandas_dataframe",
                  0.6040568648867186
                ],
                [
                  "test_set_hierarchy",
                  "test_set_hierarchy__not_valid_attribute_name",
                  0.8461570393016992
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_name",
                  "test_set_hierarchy__not_valid_attribute_type",
                  0.9151787335563378
                ],
                [
                  "test_init__without_attribute_types_param",
                  "test_set_hierarchies",
                  0.43137277872717483
                ],
                [
                  "test_set_attribute_types_default_value",
                  "test_set_hierarchy__not_valid_attribute_type",
                  0.586881033793125
                ],
                [
                  "test_equality",
                  "test__payload__with_hierarchies",
                  0.46320329751274397
                ],
                [
                  "test_set_attribute_type__single_attribute",
                  "test_set_hierarchy_with_pandas",
                  0.5035919411071292
                ],
                [
                  "test_set_hierarchy__not_valid_attribute_name",
                  "test_from_dict",
                  0.4257997168527447
                ],
                [
                  "test_set_attribute_types_default_value",
                  "test_set_hierarchies",
                  0.497416003373807
                ],
                [
                  "test_create_from_pandas_dataframe",
                  "test_set_attribute_type__single_attribute",
                  0.6340101157767919
                ],
                [
                  "test_set_attribute_type__single_attribute",
                  "test__payload__with_hierarchies",
                  0.5919643604334314
                ],
                [
                  "test_create_from_pandas_dataframe",
                  "test_set_attribute_types_default_value",
                  0.4906756348305388
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_to_dataframe",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test__payload__with_hierarchies",
                "false"
              ],
              [
                "test_set_hierarchies",
                "false"
              ],
              [
                "test_set_attribute_type_with_sequence_of_attributes",
                "false"
              ],
              [
                "test_equality",
                "false"
              ],
              [
                "test_create_from_pandas_dataframe",
                "false"
              ],
              [
                "test__payload",
                "true"
              ],
              [
                "test_init__without_attribute_types_param",
                "false"
              ],
              [
                "test_set_hierarchy__not_valid_attribute_type",
                "false"
              ],
              [
                "test_from_dict",
                "false"
              ],
              [
                "test_set_attribute_type_with_single_attribute",
                "false"
              ],
              [
                "test_set_attribute_types_default_value",
                "false"
              ],
              [
                "test_set_hierarchy",
                "false"
              ],
              [
                "test_set_attribute_type__single_attribute",
                "false"
              ],
              [
                "test_set_hierarchy__not_valid_attribute_name",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_set_hierarchy_with_pandas",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 18
      }
    ]
  },
  {
    "name": "tests_\u0026_pyarxaas_\u0026_models_\u0026_test_Attribute.py",
    "testCases": [
      {
        "name": "AttributeTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_name",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_type",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_name",
                  "[]"
                ],
                [
                  "test_type",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_name",
                  "false"
                ],
                [
                  "test_type",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_name",
                  "false"
                ],
                [
                  "test_type",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_name",
                  "false"
                ],
                [
                  "test_type",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_name",
                  "false"
                ],
                [
                  "test_type",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_name",
                "false"
              ],
              [
                "test_type",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_name",
                "false"
              ],
              [
                "test_type",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_name",
                []
              ],
              [
                "test_type",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_name",
                "false"
              ],
              [
                "test_type",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_name",
                "false"
              ],
              [
                "test_type",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_name",
                  "0"
                ],
                [
                  "test_type",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_name",
                  "0"
                ],
                [
                  "test_type",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_name",
                "false"
              ],
              [
                "test_type",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_name",
                "false"
              ],
              [
                "test_type",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_name",
                "1"
              ],
              [
                "test_type",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_name",
                [
                  "field"
                ]
              ],
              [
                "test_type",
                [
                  "field"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_name",
                []
              ],
              [
                "test_type",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7819290527140305,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_name",
                  "test_type",
                  0.7819290527140305
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_name",
                "false"
              ],
              [
                "test_type",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_pyarxaas_\u0026_hierarchy_\u0026_test_Interval.py",
    "testCases": [
      {
        "name": "IntervalTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_equality",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_hash",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_init",
                  "[PyCallExpression: self.assertIsNotNone]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_equality",
                  "[]"
                ],
                [
                  "test_hash",
                  "[]"
                ],
                [
                  "test_init",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_equality",
                  "false"
                ],
                [
                  "test_hash",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_equality",
                  "false"
                ],
                [
                  "test_hash",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_equality",
                  "false"
                ],
                [
                  "test_hash",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_equality",
                  "false"
                ],
                [
                  "test_hash",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_equality",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_equality",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_equality",
                []
              ],
              [
                "test_hash",
                []
              ],
              [
                "test_init",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_equality",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_equality",
                "false"
              ],
              [
                "test_hash",
                "true"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_equality",
                  "0"
                ],
                [
                  "test_hash",
                  "0"
                ],
                [
                  "test_init",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_equality",
                  "0"
                ],
                [
                  "test_hash",
                  "0"
                ],
                [
                  "test_init",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_equality",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_equality",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_equality",
                "1"
              ],
              [
                "test_hash",
                "1"
              ],
              [
                "test_init",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_equality",
                [
                  "i1",
                  "i2"
                ]
              ],
              [
                "test_hash",
                [
                  "i1",
                  "i2",
                  "test_set"
                ]
              ],
              [
                "test_init",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_equality",
                []
              ],
              [
                "test_hash",
                []
              ],
              [
                "test_init",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6567887730269228,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init",
                  "test_hash",
                  0.5151274263289283
                ],
                [
                  "test_equality",
                  "test_hash",
                  0.9409794155252603
                ],
                [
                  "test_init",
                  "test_equality",
                  0.5142594772265799
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_equality",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test_init",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_pyarxaas_\u0026_models_\u0026_test_RiskProfile.py",
    "testCases": [
      {
        "name": "RiskProfileTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_re_identification_risk_to_dataframe_shape",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test_attacker_success_rate_property",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_to_dataframe",
                  "[PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_population_model_property",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_hash",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_distribution_of_risk_to_dataframe_shape",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_quasi_indentifers_property",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_re_identification_risk_to_dataframe__column_types",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_equality",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertNotEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_re_identification_risk_to_dataframe_shape",
                  "[]"
                ],
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test_attacker_success_rate_property",
                  "[]"
                ],
                [
                  "test_to_dataframe",
                  "[]"
                ],
                [
                  "test_population_model_property",
                  "[]"
                ],
                [
                  "test_hash",
                  "[]"
                ],
                [
                  "test_distribution_of_risk_to_dataframe_shape",
                  "[]"
                ],
                [
                  "test_quasi_indentifers_property",
                  "[]"
                ],
                [
                  "test_re_identification_risk_to_dataframe__column_types",
                  "[]"
                ],
                [
                  "test_equality",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_re_identification_risk_to_dataframe_shape",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_attacker_success_rate_property",
                  "false"
                ],
                [
                  "test_to_dataframe",
                  "false"
                ],
                [
                  "test_population_model_property",
                  "false"
                ],
                [
                  "test_hash",
                  "false"
                ],
                [
                  "test_distribution_of_risk_to_dataframe_shape",
                  "false"
                ],
                [
                  "test_quasi_indentifers_property",
                  "false"
                ],
                [
                  "test_re_identification_risk_to_dataframe__column_types",
                  "true"
                ],
                [
                  "test_equality",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_re_identification_risk_to_dataframe_shape",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_attacker_success_rate_property",
                  "false"
                ],
                [
                  "test_to_dataframe",
                  "false"
                ],
                [
                  "test_population_model_property",
                  "false"
                ],
                [
                  "test_hash",
                  "false"
                ],
                [
                  "test_distribution_of_risk_to_dataframe_shape",
                  "false"
                ],
                [
                  "test_quasi_indentifers_property",
                  "false"
                ],
                [
                  "test_re_identification_risk_to_dataframe__column_types",
                  "false"
                ],
                [
                  "test_equality",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_re_identification_risk_to_dataframe_shape",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_attacker_success_rate_property",
                  "false"
                ],
                [
                  "test_to_dataframe",
                  "false"
                ],
                [
                  "test_population_model_property",
                  "false"
                ],
                [
                  "test_hash",
                  "false"
                ],
                [
                  "test_distribution_of_risk_to_dataframe_shape",
                  "false"
                ],
                [
                  "test_quasi_indentifers_property",
                  "false"
                ],
                [
                  "test_re_identification_risk_to_dataframe__column_types",
                  "false"
                ],
                [
                  "test_equality",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_re_identification_risk_to_dataframe_shape",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_attacker_success_rate_property",
                  "false"
                ],
                [
                  "test_to_dataframe",
                  "false"
                ],
                [
                  "test_population_model_property",
                  "false"
                ],
                [
                  "test_hash",
                  "false"
                ],
                [
                  "test_distribution_of_risk_to_dataframe_shape",
                  "false"
                ],
                [
                  "test_quasi_indentifers_property",
                  "false"
                ],
                [
                  "test_re_identification_risk_to_dataframe__column_types",
                  "false"
                ],
                [
                  "test_equality",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_re_identification_risk_to_dataframe_shape",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_attacker_success_rate_property",
                "false"
              ],
              [
                "test_to_dataframe",
                "false"
              ],
              [
                "test_population_model_property",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test_distribution_of_risk_to_dataframe_shape",
                "false"
              ],
              [
                "test_quasi_indentifers_property",
                "false"
              ],
              [
                "test_re_identification_risk_to_dataframe__column_types",
                "false"
              ],
              [
                "test_equality",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_re_identification_risk_to_dataframe_shape",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_attacker_success_rate_property",
                "false"
              ],
              [
                "test_to_dataframe",
                "false"
              ],
              [
                "test_population_model_property",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test_distribution_of_risk_to_dataframe_shape",
                "false"
              ],
              [
                "test_quasi_indentifers_property",
                "false"
              ],
              [
                "test_re_identification_risk_to_dataframe__column_types",
                "false"
              ],
              [
                "test_equality",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_re_identification_risk_to_dataframe_shape",
                []
              ],
              [
                "test_init",
                []
              ],
              [
                "test_attacker_success_rate_property",
                []
              ],
              [
                "test_to_dataframe",
                []
              ],
              [
                "test_population_model_property",
                []
              ],
              [
                "test_hash",
                []
              ],
              [
                "test_distribution_of_risk_to_dataframe_shape",
                []
              ],
              [
                "test_quasi_indentifers_property",
                []
              ],
              [
                "test_re_identification_risk_to_dataframe__column_types",
                []
              ],
              [
                "test_equality",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_re_identification_risk_to_dataframe_shape",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_attacker_success_rate_property",
                "false"
              ],
              [
                "test_to_dataframe",
                "false"
              ],
              [
                "test_population_model_property",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test_distribution_of_risk_to_dataframe_shape",
                "false"
              ],
              [
                "test_quasi_indentifers_property",
                "false"
              ],
              [
                "test_re_identification_risk_to_dataframe__column_types",
                "false"
              ],
              [
                "test_equality",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_re_identification_risk_to_dataframe_shape",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_attacker_success_rate_property",
                "false"
              ],
              [
                "test_to_dataframe",
                "false"
              ],
              [
                "test_population_model_property",
                "false"
              ],
              [
                "test_hash",
                "true"
              ],
              [
                "test_distribution_of_risk_to_dataframe_shape",
                "false"
              ],
              [
                "test_quasi_indentifers_property",
                "false"
              ],
              [
                "test_re_identification_risk_to_dataframe__column_types",
                "false"
              ],
              [
                "test_equality",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_re_identification_risk_to_dataframe_shape",
                  "0"
                ],
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_attacker_success_rate_property",
                  "0"
                ],
                [
                  "test_to_dataframe",
                  "0"
                ],
                [
                  "test_population_model_property",
                  "0"
                ],
                [
                  "test_hash",
                  "0"
                ],
                [
                  "test_distribution_of_risk_to_dataframe_shape",
                  "0"
                ],
                [
                  "test_quasi_indentifers_property",
                  "0"
                ],
                [
                  "test_re_identification_risk_to_dataframe__column_types",
                  "0"
                ],
                [
                  "test_equality",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_re_identification_risk_to_dataframe_shape",
                  "0"
                ],
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_attacker_success_rate_property",
                  "0"
                ],
                [
                  "test_to_dataframe",
                  "0"
                ],
                [
                  "test_population_model_property",
                  "0"
                ],
                [
                  "test_hash",
                  "0"
                ],
                [
                  "test_distribution_of_risk_to_dataframe_shape",
                  "0"
                ],
                [
                  "test_quasi_indentifers_property",
                  "0"
                ],
                [
                  "test_re_identification_risk_to_dataframe__column_types",
                  "0"
                ],
                [
                  "test_equality",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_re_identification_risk_to_dataframe_shape",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_attacker_success_rate_property",
                "false"
              ],
              [
                "test_to_dataframe",
                "false"
              ],
              [
                "test_population_model_property",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test_distribution_of_risk_to_dataframe_shape",
                "false"
              ],
              [
                "test_quasi_indentifers_property",
                "false"
              ],
              [
                "test_re_identification_risk_to_dataframe__column_types",
                "false"
              ],
              [
                "test_equality",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_re_identification_risk_to_dataframe_shape",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_attacker_success_rate_property",
                "false"
              ],
              [
                "test_to_dataframe",
                "false"
              ],
              [
                "test_population_model_property",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test_distribution_of_risk_to_dataframe_shape",
                "false"
              ],
              [
                "test_quasi_indentifers_property",
                "false"
              ],
              [
                "test_re_identification_risk_to_dataframe__column_types",
                "false"
              ],
              [
                "test_equality",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_re_identification_risk_to_dataframe_shape",
                "1"
              ],
              [
                "test_init",
                "0"
              ],
              [
                "test_attacker_success_rate_property",
                "1"
              ],
              [
                "test_to_dataframe",
                "1"
              ],
              [
                "test_population_model_property",
                "1"
              ],
              [
                "test_hash",
                "1"
              ],
              [
                "test_distribution_of_risk_to_dataframe_shape",
                "1"
              ],
              [
                "test_quasi_indentifers_property",
                "1"
              ],
              [
                "test_re_identification_risk_to_dataframe__column_types",
                "1"
              ],
              [
                "test_equality",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_re_identification_risk_to_dataframe_shape",
                [
                  "df",
                  "risk_profile"
                ]
              ],
              [
                "test_init",
                []
              ],
              [
                "test_attacker_success_rate_property",
                [
                  "risk_profile",
                  "expected"
                ]
              ],
              [
                "test_to_dataframe",
                [
                  "df",
                  "risk_profile"
                ]
              ],
              [
                "test_population_model_property",
                [
                  "risk_profile",
                  "expected"
                ]
              ],
              [
                "test_hash",
                [
                  "risk_profile_1",
                  "risk_profile_2",
                  "test_set"
                ]
              ],
              [
                "test_distribution_of_risk_to_dataframe_shape",
                [
                  "df",
                  "risk_profile"
                ]
              ],
              [
                "test_quasi_indentifers_property",
                [
                  "risk_profile",
                  "expected"
                ]
              ],
              [
                "test_re_identification_risk_to_dataframe__column_types",
                [
                  "df",
                  "risk_profile"
                ]
              ],
              [
                "test_equality",
                [
                  "risk_profile_1",
                  "risk_profile_2"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_re_identification_risk_to_dataframe_shape",
                [
                  "self.risk_profile_response"
                ]
              ],
              [
                "test_init",
                [
                  "self.risk_profile_response"
                ]
              ],
              [
                "test_attacker_success_rate_property",
                [
                  "self.risk_profile_response"
                ]
              ],
              [
                "test_to_dataframe",
                [
                  "self.risk_profile_response"
                ]
              ],
              [
                "test_population_model_property",
                [
                  "self.risk_profile_response"
                ]
              ],
              [
                "test_hash",
                [
                  "self.risk_profile_response"
                ]
              ],
              [
                "test_distribution_of_risk_to_dataframe_shape",
                [
                  "self.risk_profile_response"
                ]
              ],
              [
                "test_quasi_indentifers_property",
                [
                  "self.risk_profile_response"
                ]
              ],
              [
                "test_re_identification_risk_to_dataframe__column_types",
                [
                  "self.risk_profile_response"
                ]
              ],
              [
                "test_equality",
                [
                  "self.risk_profile_response"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6324489380931542,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_equality",
                  "test_distribution_of_risk_to_dataframe_shape",
                  0.5997846150870074
                ],
                [
                  "test_hash",
                  "test_quasi_indentifers_property",
                  0.6979377209210281
                ],
                [
                  "test_re_identification_risk_to_dataframe__column_types",
                  "test_quasi_indentifers_property",
                  0.6788442333021307
                ],
                [
                  "test_re_identification_risk_to_dataframe__column_types",
                  "test_attacker_success_rate_property",
                  0.42111744380615784
                ],
                [
                  "test_hash",
                  "test_to_dataframe",
                  0.7498232447365368
                ],
                [
                  "test_hash",
                  "test_attacker_success_rate_property",
                  0.5743373313669343
                ],
                [
                  "test_re_identification_risk_to_dataframe__column_types",
                  "test_population_model_property",
                  0.6681531047810608
                ],
                [
                  "test_hash",
                  "test_population_model_property",
                  0.6869458887627542
                ],
                [
                  "test_re_identification_risk_to_dataframe_shape",
                  "test_distribution_of_risk_to_dataframe_shape",
                  0.6788544567828777
                ],
                [
                  "test_distribution_of_risk_to_dataframe_shape",
                  "test_re_identification_risk_to_dataframe__column_types",
                  0.702802181054962
                ],
                [
                  "test_init",
                  "test_re_identification_risk_to_dataframe_shape",
                  0.5044978417091164
                ],
                [
                  "test_to_dataframe",
                  "test_re_identification_risk_to_dataframe_shape",
                  0.7365112797699404
                ],
                [
                  "test_re_identification_risk_to_dataframe_shape",
                  "test_re_identification_risk_to_dataframe__column_types",
                  0.7467658322805201
                ],
                [
                  "test_init",
                  "test_to_dataframe",
                  0.6469966392206304
                ],
                [
                  "test_init",
                  "test_distribution_of_risk_to_dataframe_shape",
                  0.5573704017131537
                ],
                [
                  "test_re_identification_risk_to_dataframe_shape",
                  "test_attacker_success_rate_property",
                  0.3668888048137091
                ],
                [
                  "test_equality",
                  "test_attacker_success_rate_property",
                  0.5790165071972788
                ],
                [
                  "test_distribution_of_risk_to_dataframe_shape",
                  "test_attacker_success_rate_property",
                  0.38282074674438826
                ],
                [
                  "test_to_dataframe",
                  "test_distribution_of_risk_to_dataframe_shape",
                  0.7397267214553092
                ],
                [
                  "test_hash",
                  "test_re_identification_risk_to_dataframe__column_types",
                  0.6694312250853683
                ],
                [
                  "test_init",
                  "test_attacker_success_rate_property",
                  0.4267459067940983
                ],
                [
                  "test_to_dataframe",
                  "test_attacker_success_rate_property",
                  0.4672515142255943
                ],
                [
                  "test_init",
                  "test_population_model_property",
                  0.6249999999999999
                ],
                [
                  "test_to_dataframe",
                  "test_population_model_property",
                  0.7278712191232093
                ],
                [
                  "test_init",
                  "test_hash",
                  0.7290038003196575
                ],
                [
                  "test_equality",
                  "test_re_identification_risk_to_dataframe__column_types",
                  0.6502238704866342
                ],
                [
                  "test_re_identification_risk_to_dataframe_shape",
                  "test_quasi_indentifers_property",
                  0.6111415350830072
                ],
                [
                  "test_equality",
                  "test_hash",
                  0.9337003106138251
                ],
                [
                  "test_equality",
                  "test_quasi_indentifers_property",
                  0.6372722964808823
                ],
                [
                  "test_distribution_of_risk_to_dataframe_shape",
                  "test_quasi_indentifers_property",
                  0.6751906048969999
                ],
                [
                  "test_init",
                  "test_quasi_indentifers_property",
                  0.6350006350009525
                ],
                [
                  "test_equality",
                  "test_population_model_property",
                  0.6272358850475069
                ],
                [
                  "test_quasi_indentifers_property",
                  "test_population_model_property",
                  0.8255008255012383
                ],
                [
                  "test_init",
                  "test_re_identification_risk_to_dataframe__column_types",
                  0.5790660241435861
                ],
                [
                  "test_hash",
                  "test_re_identification_risk_to_dataframe_shape",
                  0.5658166828600167
                ],
                [
                  "test_to_dataframe",
                  "test_re_identification_risk_to_dataframe__column_types",
                  0.8261595987094034
                ],
                [
                  "test_distribution_of_risk_to_dataframe_shape",
                  "test_population_model_property",
                  0.6645570174272217
                ],
                [
                  "test_attacker_success_rate_property",
                  "test_quasi_indentifers_property",
                  0.48360207582467585
                ],
                [
                  "test_re_identification_risk_to_dataframe_shape",
                  "test_population_model_property",
                  0.6015166574224079
                ],
                [
                  "test_attacker_success_rate_property",
                  "test_population_model_property",
                  0.47598581911649424
                ],
                [
                  "test_equality",
                  "test_to_dataframe",
                  0.7132585320669775
                ],
                [
                  "test_equality",
                  "test_re_identification_risk_to_dataframe_shape",
                  0.5605915016065752
                ],
                [
                  "test_init",
                  "test_equality",
                  0.6652501811109922
                ],
                [
                  "test_hash",
                  "test_distribution_of_risk_to_dataframe_shape",
                  0.6251156015916666
                ],
                [
                  "test_to_dataframe",
                  "test_quasi_indentifers_property",
                  0.7395178981474486
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_re_identification_risk_to_dataframe_shape",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_attacker_success_rate_property",
                "false"
              ],
              [
                "test_to_dataframe",
                "false"
              ],
              [
                "test_population_model_property",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test_distribution_of_risk_to_dataframe_shape",
                "false"
              ],
              [
                "test_quasi_indentifers_property",
                "false"
              ],
              [
                "test_re_identification_risk_to_dataframe__column_types",
                "false"
              ],
              [
                "test_equality",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 10
      }
    ]
  },
  {
    "name": "tests_\u0026_pyarxaas_\u0026_models_\u0026_test_AnonymizeResult.py",
    "testCases": [
      {
        "name": "AnonymizeResultTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test_anonymization_metrics",
                  "[PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_create_from_response_payload",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_equaltiy",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertNotEqual]"
                ],
                [
                  "test_hash",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_dataset",
                  "[PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_risk_profile",
                  "[PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test_anonymization_metrics",
                  "[]"
                ],
                [
                  "test_create_from_response_payload",
                  "[]"
                ],
                [
                  "test_equaltiy",
                  "[]"
                ],
                [
                  "test_hash",
                  "[]"
                ],
                [
                  "test_dataset",
                  "[]"
                ],
                [
                  "test_risk_profile",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_anonymization_metrics",
                  "false"
                ],
                [
                  "test_create_from_response_payload",
                  "false"
                ],
                [
                  "test_equaltiy",
                  "false"
                ],
                [
                  "test_hash",
                  "false"
                ],
                [
                  "test_dataset",
                  "false"
                ],
                [
                  "test_risk_profile",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_anonymization_metrics",
                  "false"
                ],
                [
                  "test_create_from_response_payload",
                  "false"
                ],
                [
                  "test_equaltiy",
                  "false"
                ],
                [
                  "test_hash",
                  "false"
                ],
                [
                  "test_dataset",
                  "false"
                ],
                [
                  "test_risk_profile",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_anonymization_metrics",
                  "false"
                ],
                [
                  "test_create_from_response_payload",
                  "false"
                ],
                [
                  "test_equaltiy",
                  "false"
                ],
                [
                  "test_hash",
                  "false"
                ],
                [
                  "test_dataset",
                  "false"
                ],
                [
                  "test_risk_profile",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_anonymization_metrics",
                  "false"
                ],
                [
                  "test_create_from_response_payload",
                  "false"
                ],
                [
                  "test_equaltiy",
                  "false"
                ],
                [
                  "test_hash",
                  "false"
                ],
                [
                  "test_dataset",
                  "false"
                ],
                [
                  "test_risk_profile",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_anonymization_metrics",
                "false"
              ],
              [
                "test_create_from_response_payload",
                "false"
              ],
              [
                "test_equaltiy",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test_dataset",
                "false"
              ],
              [
                "test_risk_profile",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_anonymization_metrics",
                "false"
              ],
              [
                "test_create_from_response_payload",
                "false"
              ],
              [
                "test_equaltiy",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test_dataset",
                "false"
              ],
              [
                "test_risk_profile",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_init",
                [
                  "self.raw_metrics"
                ]
              ],
              [
                "test_anonymization_metrics",
                [
                  "self.raw_metrics"
                ]
              ],
              [
                "test_create_from_response_payload",
                []
              ],
              [
                "test_equaltiy",
                [
                  "self.raw_metrics"
                ]
              ],
              [
                "test_hash",
                [
                  "self.raw_metrics"
                ]
              ],
              [
                "test_dataset",
                [
                  "self.raw_metrics"
                ]
              ],
              [
                "test_risk_profile",
                [
                  "self.raw_metrics"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_anonymization_metrics",
                "false"
              ],
              [
                "test_create_from_response_payload",
                "false"
              ],
              [
                "test_equaltiy",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test_dataset",
                "false"
              ],
              [
                "test_risk_profile",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_anonymization_metrics",
                "false"
              ],
              [
                "test_create_from_response_payload",
                "false"
              ],
              [
                "test_equaltiy",
                "false"
              ],
              [
                "test_hash",
                "true"
              ],
              [
                "test_dataset",
                "false"
              ],
              [
                "test_risk_profile",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_anonymization_metrics",
                  "0"
                ],
                [
                  "test_create_from_response_payload",
                  "0"
                ],
                [
                  "test_equaltiy",
                  "0"
                ],
                [
                  "test_hash",
                  "0"
                ],
                [
                  "test_dataset",
                  "0"
                ],
                [
                  "test_risk_profile",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_anonymization_metrics",
                  "0"
                ],
                [
                  "test_create_from_response_payload",
                  "0"
                ],
                [
                  "test_equaltiy",
                  "0"
                ],
                [
                  "test_hash",
                  "0"
                ],
                [
                  "test_dataset",
                  "0"
                ],
                [
                  "test_risk_profile",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_anonymization_metrics",
                "false"
              ],
              [
                "test_create_from_response_payload",
                "false"
              ],
              [
                "test_equaltiy",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test_dataset",
                "false"
              ],
              [
                "test_risk_profile",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_anonymization_metrics",
                "false"
              ],
              [
                "test_create_from_response_payload",
                "false"
              ],
              [
                "test_equaltiy",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test_dataset",
                "false"
              ],
              [
                "test_risk_profile",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_init",
                "0"
              ],
              [
                "test_anonymization_metrics",
                "2"
              ],
              [
                "test_create_from_response_payload",
                "1"
              ],
              [
                "test_equaltiy",
                "2"
              ],
              [
                "test_hash",
                "1"
              ],
              [
                "test_dataset",
                "2"
              ],
              [
                "test_risk_profile",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                []
              ],
              [
                "test_anonymization_metrics",
                [
                  "ar",
                  "anonymization_metrics"
                ]
              ],
              [
                "test_create_from_response_payload",
                [
                  "ar2",
                  "ar1"
                ]
              ],
              [
                "test_equaltiy",
                [
                  "ar2",
                  "ar1"
                ]
              ],
              [
                "test_hash",
                [
                  "ar2",
                  "ar1",
                  "test_set"
                ]
              ],
              [
                "test_dataset",
                [
                  "ar",
                  "dataset"
                ]
              ],
              [
                "test_risk_profile",
                [
                  "ar",
                  "risk_profile"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                [
                  "self.test_anon_metrics",
                  "self.test_dataset",
                  "self.test_risk_profile"
                ]
              ],
              [
                "test_anonymization_metrics",
                [
                  "self.test_anon_metrics",
                  "self.test_dataset",
                  "self.test_risk_profile"
                ]
              ],
              [
                "test_create_from_response_payload",
                [
                  "self.raw_metrics",
                  "self.test_anon_metrics",
                  "self.test_dataset",
                  "self.test_risk_profile"
                ]
              ],
              [
                "test_equaltiy",
                [
                  "self.test_anon_metrics",
                  "self.test_dataset",
                  "self.test_risk_profile"
                ]
              ],
              [
                "test_hash",
                [
                  "self.test_anon_metrics",
                  "self.test_dataset",
                  "self.test_risk_profile"
                ]
              ],
              [
                "test_dataset",
                [
                  "self.test_anon_metrics",
                  "self.test_dataset",
                  "self.test_risk_profile"
                ]
              ],
              [
                "test_risk_profile",
                [
                  "self.test_anon_metrics",
                  "self.test_dataset",
                  "self.test_risk_profile"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7129520525020101,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_equaltiy",
                  "test_risk_profile",
                  0.6227454881081048
                ],
                [
                  "test_dataset",
                  "test_anonymization_metrics",
                  0.7315635209502898
                ],
                [
                  "test_equaltiy",
                  "test_hash",
                  0.8871585297994955
                ],
                [
                  "test_init",
                  "test_create_from_response_payload",
                  0.7409585736349483
                ],
                [
                  "test_hash",
                  "test_dataset",
                  0.7554191132592915
                ],
                [
                  "test_hash",
                  "test_anonymization_metrics",
                  0.6869094992749589
                ],
                [
                  "test_dataset",
                  "test_risk_profile",
                  0.6975184488828855
                ],
                [
                  "test_risk_profile",
                  "test_anonymization_metrics",
                  0.6038596398555418
                ],
                [
                  "test_anonymization_metrics",
                  "test_create_from_response_payload",
                  0.6479515952918626
                ],
                [
                  "test_equaltiy",
                  "test_anonymization_metrics",
                  0.6531409780858202
                ],
                [
                  "test_equaltiy",
                  "test_create_from_response_payload",
                  0.8888214114210797
                ],
                [
                  "test_init",
                  "test_hash",
                  0.7886255927423796
                ],
                [
                  "test_init",
                  "test_dataset",
                  0.6871842709362768
                ],
                [
                  "test_init",
                  "test_equaltiy",
                  0.6863095229163548
                ],
                [
                  "test_equaltiy",
                  "test_dataset",
                  0.7431605356175381
                ],
                [
                  "test_init",
                  "test_anonymization_metrics",
                  0.6575355056394069
                ],
                [
                  "test_hash",
                  "test_create_from_response_payload",
                  0.8708167288884997
                ],
                [
                  "test_risk_profile",
                  "test_create_from_response_payload",
                  0.6312279884865479
                ],
                [
                  "test_hash",
                  "test_risk_profile",
                  0.6549425097560956
                ],
                [
                  "test_dataset",
                  "test_create_from_response_payload",
                  0.7092081432669752
                ],
                [
                  "test_init",
                  "test_risk_profile",
                  0.6269355057278586
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_anonymization_metrics",
                "false"
              ],
              [
                "test_create_from_response_payload",
                "false"
              ],
              [
                "test_equaltiy",
                "false"
              ],
              [
                "test_hash",
                "false"
              ],
              [
                "test_dataset",
                "false"
              ],
              [
                "test_risk_profile",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      }
    ]
  },
  {
    "name": "tests_\u0026_pyarxaas_\u0026_models_\u0026_test_AnonymizationMetrics.py",
    "testCases": [
      {
        "name": "AnonymizationMetricsTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_elapsed_time",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_attribute_generalization",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertIsNot]"
                ],
                [
                  "test_init",
                  "[PyCallExpression: self.assertIsNotNone]"
                ],
                [
                  "test_hashcode",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_equality",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertIsNot, PyCallExpression: self.assertNotEqual]"
                ],
                [
                  "test_privacy_models",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertIsNot]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_elapsed_time",
                  "[]"
                ],
                [
                  "test_attribute_generalization",
                  "[]"
                ],
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test_hashcode",
                  "[]"
                ],
                [
                  "test_equality",
                  "[]"
                ],
                [
                  "test_privacy_models",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_elapsed_time",
                  "false"
                ],
                [
                  "test_attribute_generalization",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_hashcode",
                  "false"
                ],
                [
                  "test_equality",
                  "false"
                ],
                [
                  "test_privacy_models",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_elapsed_time",
                  "false"
                ],
                [
                  "test_attribute_generalization",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_hashcode",
                  "false"
                ],
                [
                  "test_equality",
                  "false"
                ],
                [
                  "test_privacy_models",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_elapsed_time",
                  "false"
                ],
                [
                  "test_attribute_generalization",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_hashcode",
                  "false"
                ],
                [
                  "test_equality",
                  "false"
                ],
                [
                  "test_privacy_models",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_elapsed_time",
                  "false"
                ],
                [
                  "test_attribute_generalization",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_hashcode",
                  "false"
                ],
                [
                  "test_equality",
                  "false"
                ],
                [
                  "test_privacy_models",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_elapsed_time",
                "false"
              ],
              [
                "test_attribute_generalization",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_hashcode",
                "false"
              ],
              [
                "test_equality",
                "false"
              ],
              [
                "test_privacy_models",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_elapsed_time",
                "false"
              ],
              [
                "test_attribute_generalization",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_hashcode",
                "false"
              ],
              [
                "test_equality",
                "false"
              ],
              [
                "test_privacy_models",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_elapsed_time",
                []
              ],
              [
                "test_attribute_generalization",
                []
              ],
              [
                "test_init",
                []
              ],
              [
                "test_hashcode",
                []
              ],
              [
                "test_equality",
                []
              ],
              [
                "test_privacy_models",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_elapsed_time",
                "false"
              ],
              [
                "test_attribute_generalization",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_hashcode",
                "false"
              ],
              [
                "test_equality",
                "false"
              ],
              [
                "test_privacy_models",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_elapsed_time",
                "false"
              ],
              [
                "test_attribute_generalization",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_hashcode",
                "true"
              ],
              [
                "test_equality",
                "false"
              ],
              [
                "test_privacy_models",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_elapsed_time",
                  "0"
                ],
                [
                  "test_attribute_generalization",
                  "0"
                ],
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_hashcode",
                  "0"
                ],
                [
                  "test_equality",
                  "0"
                ],
                [
                  "test_privacy_models",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_elapsed_time",
                  "0"
                ],
                [
                  "test_attribute_generalization",
                  "0"
                ],
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_hashcode",
                  "0"
                ],
                [
                  "test_equality",
                  "0"
                ],
                [
                  "test_privacy_models",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_elapsed_time",
                "false"
              ],
              [
                "test_attribute_generalization",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_hashcode",
                "false"
              ],
              [
                "test_equality",
                "false"
              ],
              [
                "test_privacy_models",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_elapsed_time",
                "false"
              ],
              [
                "test_attribute_generalization",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_hashcode",
                "false"
              ],
              [
                "test_equality",
                "false"
              ],
              [
                "test_privacy_models",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_elapsed_time",
                "1"
              ],
              [
                "test_attribute_generalization",
                "2"
              ],
              [
                "test_init",
                "1"
              ],
              [
                "test_hashcode",
                "1"
              ],
              [
                "test_equality",
                "3"
              ],
              [
                "test_privacy_models",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_elapsed_time",
                [
                  "actual",
                  "am"
                ]
              ],
              [
                "test_attribute_generalization",
                [
                  "am"
                ]
              ],
              [
                "test_init",
                []
              ],
              [
                "test_hashcode",
                [
                  "am1",
                  "am2",
                  "test_set"
                ]
              ],
              [
                "test_equality",
                [
                  "am1",
                  "am2"
                ]
              ],
              [
                "test_privacy_models",
                [
                  "am"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_elapsed_time",
                [
                  "self.test_metrics"
                ]
              ],
              [
                "test_attribute_generalization",
                [
                  "self.test_metrics"
                ]
              ],
              [
                "test_init",
                [
                  "self.test_metrics"
                ]
              ],
              [
                "test_hashcode",
                [
                  "self.test_metrics"
                ]
              ],
              [
                "test_equality",
                [
                  "self.test_metrics"
                ]
              ],
              [
                "test_privacy_models",
                [
                  "self.test_metrics"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.45574665750597004,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init",
                  "test_elapsed_time",
                  0.337099931231621
                ],
                [
                  "test_init",
                  "test_privacy_models",
                  0.3853373177942262
                ],
                [
                  "test_init",
                  "test_equality",
                  0.3016246734088949
                ],
                [
                  "test_privacy_models",
                  "test_equality",
                  0.4528334128517262
                ],
                [
                  "test_elapsed_time",
                  "test_privacy_models",
                  0.408248290463863
                ],
                [
                  "test_init",
                  "test_attribute_generalization",
                  0.3853373177942262
                ],
                [
                  "test_init",
                  "test_hashcode",
                  0.3187276291558383
                ],
                [
                  "test_elapsed_time",
                  "test_equality",
                  0.5730922466510651
                ],
                [
                  "test_privacy_models",
                  "test_hashcode",
                  0.4605661864718382
                ],
                [
                  "test_attribute_generalization",
                  "test_equality",
                  0.4528334128517262
                ],
                [
                  "test_attribute_generalization",
                  "test_hashcode",
                  0.4605661864718382
                ],
                [
                  "test_elapsed_time",
                  "test_attribute_generalization",
                  0.408248290463863
                ],
                [
                  "test_privacy_models",
                  "test_attribute_generalization",
                  0.45454545454545453
                ],
                [
                  "test_equality",
                  "test_hashcode",
                  0.8193419066805776
                ],
                [
                  "test_elapsed_time",
                  "test_hashcode",
                  0.6177976057527915
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_elapsed_time",
                "false"
              ],
              [
                "test_attribute_generalization",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_hashcode",
                "false"
              ],
              [
                "test_equality",
                "false"
              ],
              [
                "test_privacy_models",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      }
    ]
  },
  {
    "name": "tests_\u0026_pyarxaas_\u0026_hierarchy_\u0026_test_DateHierarchyBuilder.py",
    "testCases": [
      {
        "name": "DateHierarchyBuildTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test__request_payload",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test__request_payload",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test__request_payload",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test__request_payload",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test__request_payload",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test__request_payload",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                []
              ],
              [
                "test__request_payload",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_init",
                  "0"
                ],
                [
                  "test__request_payload",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_init",
                  "0"
                ],
                [
                  "test__request_payload",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_init",
                "0"
              ],
              [
                "test__request_payload",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                []
              ],
              [
                "test__request_payload",
                [
                  "expected",
                  "db"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                []
              ],
              [
                "test__request_payload",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9529189244659214,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init",
                  "test__request_payload",
                  0.9529189244659214
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_pyarxaas_\u0026_hierarchy_\u0026_test_OrderHierarchyBuilder.py",
    "testCases": [
      {
        "name": "OrderHierarchyBuilderTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test_add_groups",
                  "[]"
                ],
                [
                  "test__request_payload",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_adding_same_group_twice_is_not_possible",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test_add_groups",
                  "[]"
                ],
                [
                  "test__request_payload",
                  "[]"
                ],
                [
                  "test_adding_same_group_twice_is_not_possible",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_add_groups",
                  "false"
                ],
                [
                  "test__request_payload",
                  "false"
                ],
                [
                  "test_adding_same_group_twice_is_not_possible",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_add_groups",
                  "false"
                ],
                [
                  "test__request_payload",
                  "false"
                ],
                [
                  "test_adding_same_group_twice_is_not_possible",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_add_groups",
                  "false"
                ],
                [
                  "test__request_payload",
                  "false"
                ],
                [
                  "test_adding_same_group_twice_is_not_possible",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_add_groups",
                  "false"
                ],
                [
                  "test__request_payload",
                  "false"
                ],
                [
                  "test_adding_same_group_twice_is_not_possible",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_add_groups",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ],
              [
                "test_adding_same_group_twice_is_not_possible",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_add_groups",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ],
              [
                "test_adding_same_group_twice_is_not_possible",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                []
              ],
              [
                "test_add_groups",
                []
              ],
              [
                "test__request_payload",
                []
              ],
              [
                "test_adding_same_group_twice_is_not_possible",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_add_groups",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ],
              [
                "test_adding_same_group_twice_is_not_possible",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_add_groups",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ],
              [
                "test_adding_same_group_twice_is_not_possible",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_add_groups",
                  "0"
                ],
                [
                  "test__request_payload",
                  "0"
                ],
                [
                  "test_adding_same_group_twice_is_not_possible",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_add_groups",
                  "0"
                ],
                [
                  "test__request_payload",
                  "0"
                ],
                [
                  "test_adding_same_group_twice_is_not_possible",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_add_groups",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ],
              [
                "test_adding_same_group_twice_is_not_possible",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_add_groups",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ],
              [
                "test_adding_same_group_twice_is_not_possible",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_init",
                "0"
              ],
              [
                "test_add_groups",
                "0"
              ],
              [
                "test__request_payload",
                "1"
              ],
              [
                "test_adding_same_group_twice_is_not_possible",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                []
              ],
              [
                "test_add_groups",
                [
                  "ob"
                ]
              ],
              [
                "test__request_payload",
                [
                  "ob",
                  "expected"
                ]
              ],
              [
                "test_adding_same_group_twice_is_not_possible",
                [
                  "ob"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                []
              ],
              [
                "test_add_groups",
                []
              ],
              [
                "test__request_payload",
                []
              ],
              [
                "test_adding_same_group_twice_is_not_possible",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5305842883554784,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init",
                  "test_adding_same_group_twice_is_not_possible",
                  0.27500954910846337
                ],
                [
                  "test_add_groups",
                  "test__request_payload",
                  0.6386780131801736
                ],
                [
                  "test_add_groups",
                  "test_adding_same_group_twice_is_not_possible",
                  0.6888467201936644
                ],
                [
                  "test_init",
                  "test__request_payload",
                  0.4428610481746106
                ],
                [
                  "test_init",
                  "test_add_groups",
                  0.5855400437691198
                ],
                [
                  "test__request_payload",
                  "test_adding_same_group_twice_is_not_possible",
                  0.5525703557068385
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_add_groups",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ],
              [
                "test_adding_same_group_twice_is_not_possible",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "tests_\u0026_pyarxaas_\u0026_models_\u0026_test_privacy_models_ldiversity.py",
    "testCases": [
      {
        "name": "PrivacyModelsLDiversityTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_set_data_grassberger",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_lenght",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_data_recursive",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_privacyModelIterator",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_data_distinct",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_data_shannonentropy",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertNotEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertNotEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_message",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_set_data_grassberger",
                  "[]"
                ],
                [
                  "test_lenght",
                  "[]"
                ],
                [
                  "test_set_data_recursive",
                  "[]"
                ],
                [
                  "test_privacyModelIterator",
                  "[]"
                ],
                [
                  "test_set_data_distinct",
                  "[]"
                ],
                [
                  "test_set_data_shannonentropy",
                  "[]"
                ],
                [
                  "test_message",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_set_data_grassberger",
                  "false"
                ],
                [
                  "test_lenght",
                  "false"
                ],
                [
                  "test_set_data_recursive",
                  "false"
                ],
                [
                  "test_privacyModelIterator",
                  "false"
                ],
                [
                  "test_set_data_distinct",
                  "false"
                ],
                [
                  "test_set_data_shannonentropy",
                  "false"
                ],
                [
                  "test_message",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_set_data_grassberger",
                  "false"
                ],
                [
                  "test_lenght",
                  "false"
                ],
                [
                  "test_set_data_recursive",
                  "false"
                ],
                [
                  "test_privacyModelIterator",
                  "false"
                ],
                [
                  "test_set_data_distinct",
                  "false"
                ],
                [
                  "test_set_data_shannonentropy",
                  "false"
                ],
                [
                  "test_message",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_set_data_grassberger",
                  "false"
                ],
                [
                  "test_lenght",
                  "false"
                ],
                [
                  "test_set_data_recursive",
                  "false"
                ],
                [
                  "test_privacyModelIterator",
                  "false"
                ],
                [
                  "test_set_data_distinct",
                  "false"
                ],
                [
                  "test_set_data_shannonentropy",
                  "false"
                ],
                [
                  "test_message",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_set_data_grassberger",
                  "false"
                ],
                [
                  "test_lenght",
                  "false"
                ],
                [
                  "test_set_data_recursive",
                  "false"
                ],
                [
                  "test_privacyModelIterator",
                  "false"
                ],
                [
                  "test_set_data_distinct",
                  "false"
                ],
                [
                  "test_set_data_shannonentropy",
                  "false"
                ],
                [
                  "test_message",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_grassberger",
                "false"
              ],
              [
                "test_lenght",
                "false"
              ],
              [
                "test_set_data_recursive",
                "false"
              ],
              [
                "test_privacyModelIterator",
                "false"
              ],
              [
                "test_set_data_distinct",
                "false"
              ],
              [
                "test_set_data_shannonentropy",
                "false"
              ],
              [
                "test_message",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_grassberger",
                "false"
              ],
              [
                "test_lenght",
                "false"
              ],
              [
                "test_set_data_recursive",
                "false"
              ],
              [
                "test_privacyModelIterator",
                "false"
              ],
              [
                "test_set_data_distinct",
                "false"
              ],
              [
                "test_set_data_shannonentropy",
                "false"
              ],
              [
                "test_message",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_grassberger",
                []
              ],
              [
                "test_lenght",
                []
              ],
              [
                "test_set_data_recursive",
                []
              ],
              [
                "test_privacyModelIterator",
                []
              ],
              [
                "test_set_data_distinct",
                []
              ],
              [
                "test_set_data_shannonentropy",
                []
              ],
              [
                "test_message",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_grassberger",
                "false"
              ],
              [
                "test_lenght",
                "false"
              ],
              [
                "test_set_data_recursive",
                "false"
              ],
              [
                "test_privacyModelIterator",
                "false"
              ],
              [
                "test_set_data_distinct",
                "false"
              ],
              [
                "test_set_data_shannonentropy",
                "false"
              ],
              [
                "test_message",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_set_data_grassberger",
                "false"
              ],
              [
                "test_lenght",
                "true"
              ],
              [
                "test_set_data_recursive",
                "false"
              ],
              [
                "test_privacyModelIterator",
                "false"
              ],
              [
                "test_set_data_distinct",
                "false"
              ],
              [
                "test_set_data_shannonentropy",
                "true"
              ],
              [
                "test_message",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_set_data_grassberger",
                  "0"
                ],
                [
                  "test_lenght",
                  "0"
                ],
                [
                  "test_set_data_recursive",
                  "0"
                ],
                [
                  "test_privacyModelIterator",
                  "0"
                ],
                [
                  "test_set_data_distinct",
                  "0"
                ],
                [
                  "test_set_data_shannonentropy",
                  "0"
                ],
                [
                  "test_message",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_set_data_grassberger",
                  "0"
                ],
                [
                  "test_lenght",
                  "0"
                ],
                [
                  "test_set_data_recursive",
                  "0"
                ],
                [
                  "test_privacyModelIterator",
                  "0"
                ],
                [
                  "test_set_data_distinct",
                  "0"
                ],
                [
                  "test_set_data_shannonentropy",
                  "0"
                ],
                [
                  "test_message",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_grassberger",
                "false"
              ],
              [
                "test_lenght",
                "false"
              ],
              [
                "test_set_data_recursive",
                "false"
              ],
              [
                "test_privacyModelIterator",
                "false"
              ],
              [
                "test_set_data_distinct",
                "false"
              ],
              [
                "test_set_data_shannonentropy",
                "false"
              ],
              [
                "test_message",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_grassberger",
                "false"
              ],
              [
                "test_lenght",
                "false"
              ],
              [
                "test_set_data_recursive",
                "false"
              ],
              [
                "test_privacyModelIterator",
                "false"
              ],
              [
                "test_set_data_distinct",
                "false"
              ],
              [
                "test_set_data_shannonentropy",
                "false"
              ],
              [
                "test_message",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_grassberger",
                "1"
              ],
              [
                "test_lenght",
                "1"
              ],
              [
                "test_set_data_recursive",
                "1"
              ],
              [
                "test_privacyModelIterator",
                "1"
              ],
              [
                "test_set_data_distinct",
                "1"
              ],
              [
                "test_set_data_shannonentropy",
                "5"
              ],
              [
                "test_message",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_grassberger",
                []
              ],
              [
                "test_lenght",
                []
              ],
              [
                "test_set_data_recursive",
                []
              ],
              [
                "test_privacyModelIterator",
                []
              ],
              [
                "test_set_data_distinct",
                []
              ],
              [
                "test_set_data_shannonentropy",
                []
              ],
              [
                "test_message",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_grassberger",
                []
              ],
              [
                "test_lenght",
                []
              ],
              [
                "test_set_data_recursive",
                []
              ],
              [
                "test_privacyModelIterator",
                []
              ],
              [
                "test_set_data_distinct",
                []
              ],
              [
                "test_set_data_shannonentropy",
                []
              ],
              [
                "test_message",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5830007451395632,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_lenght",
                  "test_set_data_grassberger",
                  0.4906533814626582
                ],
                [
                  "test_message",
                  "test_set_data_shannonentropy",
                  0.4169692407440811
                ],
                [
                  "test_privacyModelIterator",
                  "test_set_data_distinct",
                  0.5039526306789696
                ],
                [
                  "test_privacyModelIterator",
                  "test_set_data_shannonentropy",
                  0.43873860504240525
                ],
                [
                  "test_message",
                  "test_set_data_distinct",
                  0.5986843400892498
                ],
                [
                  "test_set_data_grassberger",
                  "test_set_data_recursive",
                  0.7848730094898415
                ],
                [
                  "test_set_data_shannonentropy",
                  "test_set_data_recursive",
                  0.6250196847293792
                ],
                [
                  "test_lenght",
                  "test_set_data_distinct",
                  0.5499719409228703
                ],
                [
                  "test_lenght",
                  "test_set_data_recursive",
                  0.521749194749951
                ],
                [
                  "test_set_data_distinct",
                  "test_set_data_recursive",
                  0.8432740427115678
                ],
                [
                  "test_message",
                  "test_set_data_grassberger",
                  0.5176775776887457
                ],
                [
                  "test_lenght",
                  "test_message",
                  0.7620007620011432
                ],
                [
                  "test_message",
                  "test_set_data_recursive",
                  0.5679618342470648
                ],
                [
                  "test_privacyModelIterator",
                  "test_lenght",
                  0.5790660241435861
                ],
                [
                  "test_set_data_distinct",
                  "test_set_data_grassberger",
                  0.8006407690254356
                ],
                [
                  "test_privacyModelIterator",
                  "test_set_data_grassberger",
                  0.45392064950160177
                ],
                [
                  "test_privacyModelIterator",
                  "test_message",
                  0.6109598099719177
                ],
                [
                  "test_set_data_distinct",
                  "test_set_data_shannonentropy",
                  0.6274558051381586
                ],
                [
                  "test_set_data_grassberger",
                  "test_set_data_shannonentropy",
                  0.6128873719934528
                ],
                [
                  "test_privacyModelIterator",
                  "test_set_data_recursive",
                  0.47809144373375745
                ],
                [
                  "test_lenght",
                  "test_set_data_shannonentropy",
                  0.4584675298649922
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_grassberger",
                "false"
              ],
              [
                "test_lenght",
                "false"
              ],
              [
                "test_set_data_recursive",
                "false"
              ],
              [
                "test_privacyModelIterator",
                "false"
              ],
              [
                "test_set_data_distinct",
                "false"
              ],
              [
                "test_set_data_shannonentropy",
                "false"
              ],
              [
                "test_message",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      }
    ]
  },
  {
    "name": "tests_\u0026_pyarxaas_\u0026_models_\u0026_test_privacy_models_Tcloseness.py",
    "testCases": [
      {
        "name": "PrivacyModelsTclosenessTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_set_data_TClosenessOrderedDistance",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_lenght",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_privacyModelIterator",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_message",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_data_EqualDistance",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_set_data_TClosenessOrderedDistance",
                  "[]"
                ],
                [
                  "test_lenght",
                  "[]"
                ],
                [
                  "test_privacyModelIterator",
                  "[]"
                ],
                [
                  "test_message",
                  "[]"
                ],
                [
                  "test_set_data_EqualDistance",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_set_data_TClosenessOrderedDistance",
                  "false"
                ],
                [
                  "test_lenght",
                  "false"
                ],
                [
                  "test_privacyModelIterator",
                  "false"
                ],
                [
                  "test_message",
                  "false"
                ],
                [
                  "test_set_data_EqualDistance",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_set_data_TClosenessOrderedDistance",
                  "false"
                ],
                [
                  "test_lenght",
                  "false"
                ],
                [
                  "test_privacyModelIterator",
                  "false"
                ],
                [
                  "test_message",
                  "false"
                ],
                [
                  "test_set_data_EqualDistance",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_set_data_TClosenessOrderedDistance",
                  "false"
                ],
                [
                  "test_lenght",
                  "false"
                ],
                [
                  "test_privacyModelIterator",
                  "false"
                ],
                [
                  "test_message",
                  "false"
                ],
                [
                  "test_set_data_EqualDistance",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_set_data_TClosenessOrderedDistance",
                  "false"
                ],
                [
                  "test_lenght",
                  "false"
                ],
                [
                  "test_privacyModelIterator",
                  "false"
                ],
                [
                  "test_message",
                  "false"
                ],
                [
                  "test_set_data_EqualDistance",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_TClosenessOrderedDistance",
                "false"
              ],
              [
                "test_lenght",
                "false"
              ],
              [
                "test_privacyModelIterator",
                "false"
              ],
              [
                "test_message",
                "false"
              ],
              [
                "test_set_data_EqualDistance",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_TClosenessOrderedDistance",
                "false"
              ],
              [
                "test_lenght",
                "false"
              ],
              [
                "test_privacyModelIterator",
                "false"
              ],
              [
                "test_message",
                "false"
              ],
              [
                "test_set_data_EqualDistance",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_TClosenessOrderedDistance",
                []
              ],
              [
                "test_lenght",
                []
              ],
              [
                "test_privacyModelIterator",
                []
              ],
              [
                "test_message",
                []
              ],
              [
                "test_set_data_EqualDistance",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_TClosenessOrderedDistance",
                "false"
              ],
              [
                "test_lenght",
                "false"
              ],
              [
                "test_privacyModelIterator",
                "false"
              ],
              [
                "test_message",
                "false"
              ],
              [
                "test_set_data_EqualDistance",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_set_data_TClosenessOrderedDistance",
                "false"
              ],
              [
                "test_lenght",
                "true"
              ],
              [
                "test_privacyModelIterator",
                "false"
              ],
              [
                "test_message",
                "false"
              ],
              [
                "test_set_data_EqualDistance",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_set_data_TClosenessOrderedDistance",
                  "0"
                ],
                [
                  "test_lenght",
                  "0"
                ],
                [
                  "test_privacyModelIterator",
                  "0"
                ],
                [
                  "test_message",
                  "0"
                ],
                [
                  "test_set_data_EqualDistance",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_set_data_TClosenessOrderedDistance",
                  "0"
                ],
                [
                  "test_lenght",
                  "0"
                ],
                [
                  "test_privacyModelIterator",
                  "0"
                ],
                [
                  "test_message",
                  "0"
                ],
                [
                  "test_set_data_EqualDistance",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_TClosenessOrderedDistance",
                "false"
              ],
              [
                "test_lenght",
                "false"
              ],
              [
                "test_privacyModelIterator",
                "false"
              ],
              [
                "test_message",
                "false"
              ],
              [
                "test_set_data_EqualDistance",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_TClosenessOrderedDistance",
                "false"
              ],
              [
                "test_lenght",
                "false"
              ],
              [
                "test_privacyModelIterator",
                "false"
              ],
              [
                "test_message",
                "false"
              ],
              [
                "test_set_data_EqualDistance",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_TClosenessOrderedDistance",
                "1"
              ],
              [
                "test_lenght",
                "1"
              ],
              [
                "test_privacyModelIterator",
                "1"
              ],
              [
                "test_message",
                "1"
              ],
              [
                "test_set_data_EqualDistance",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_TClosenessOrderedDistance",
                []
              ],
              [
                "test_lenght",
                []
              ],
              [
                "test_privacyModelIterator",
                []
              ],
              [
                "test_message",
                []
              ],
              [
                "test_set_data_EqualDistance",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_TClosenessOrderedDistance",
                []
              ],
              [
                "test_lenght",
                []
              ],
              [
                "test_privacyModelIterator",
                []
              ],
              [
                "test_message",
                []
              ],
              [
                "test_set_data_EqualDistance",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6149089155452734,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_message",
                  "test_set_data_EqualDistance",
                  0.6110100926607787
                ],
                [
                  "test_set_data_EqualDistance",
                  "test_set_data_TClosenessOrderedDistance",
                  0.8132500607904443
                ],
                [
                  "test_privacyModelIterator",
                  "test_lenght",
                  0.596420051979227
                ],
                [
                  "test_privacyModelIterator",
                  "test_message",
                  0.6277648205743445
                ],
                [
                  "test_privacyModelIterator",
                  "test_set_data_TClosenessOrderedDistance",
                  0.46790827089573095
                ],
                [
                  "test_lenght",
                  "test_set_data_EqualDistance",
                  0.6219663216470469
                ],
                [
                  "test_message",
                  "test_set_data_TClosenessOrderedDistance",
                  0.5536930229999478
                ],
                [
                  "test_lenght",
                  "test_set_data_TClosenessOrderedDistance",
                  0.5780733130160799
                ],
                [
                  "test_lenght",
                  "test_message",
                  0.7755667343294812
                ],
                [
                  "test_privacyModelIterator",
                  "test_set_data_EqualDistance",
                  0.5034364665596534
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_set_data_TClosenessOrderedDistance",
                "false"
              ],
              [
                "test_lenght",
                "false"
              ],
              [
                "test_privacyModelIterator",
                "false"
              ],
              [
                "test_message",
                "false"
              ],
              [
                "test_set_data_EqualDistance",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      }
    ]
  },
  {
    "name": "tests_\u0026_pyarxaas_\u0026_hierarchy_\u0026_test_IntervalHierarchyBuilder.py",
    "testCases": [
      {
        "name": "IntervalHierarchyBuilderTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_add_level",
                  "[]"
                ],
                [
                  "test__request_payload",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_add_levels_not_availible_raises_exception",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_group_building",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_intervals_are_unique",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_intervals_order",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test_decimal_interval",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_integer_interval",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_add_level",
                  "[]"
                ],
                [
                  "test__request_payload",
                  "[]"
                ],
                [
                  "test_add_levels_not_availible_raises_exception",
                  "[]"
                ],
                [
                  "test_group_building",
                  "[]"
                ],
                [
                  "test_intervals_are_unique",
                  "[]"
                ],
                [
                  "test_intervals_order",
                  "[]"
                ],
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test_decimal_interval",
                  "[]"
                ],
                [
                  "test_integer_interval",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_add_level",
                  "false"
                ],
                [
                  "test__request_payload",
                  "false"
                ],
                [
                  "test_add_levels_not_availible_raises_exception",
                  "false"
                ],
                [
                  "test_group_building",
                  "false"
                ],
                [
                  "test_intervals_are_unique",
                  "false"
                ],
                [
                  "test_intervals_order",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_decimal_interval",
                  "false"
                ],
                [
                  "test_integer_interval",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_add_level",
                  "false"
                ],
                [
                  "test__request_payload",
                  "false"
                ],
                [
                  "test_add_levels_not_availible_raises_exception",
                  "false"
                ],
                [
                  "test_group_building",
                  "false"
                ],
                [
                  "test_intervals_are_unique",
                  "false"
                ],
                [
                  "test_intervals_order",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_decimal_interval",
                  "false"
                ],
                [
                  "test_integer_interval",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_add_level",
                  "false"
                ],
                [
                  "test__request_payload",
                  "false"
                ],
                [
                  "test_add_levels_not_availible_raises_exception",
                  "true"
                ],
                [
                  "test_group_building",
                  "false"
                ],
                [
                  "test_intervals_are_unique",
                  "false"
                ],
                [
                  "test_intervals_order",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_decimal_interval",
                  "false"
                ],
                [
                  "test_integer_interval",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_add_level",
                  "false"
                ],
                [
                  "test__request_payload",
                  "false"
                ],
                [
                  "test_add_levels_not_availible_raises_exception",
                  "false"
                ],
                [
                  "test_group_building",
                  "false"
                ],
                [
                  "test_intervals_are_unique",
                  "false"
                ],
                [
                  "test_intervals_order",
                  "false"
                ],
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_decimal_interval",
                  "false"
                ],
                [
                  "test_integer_interval",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_add_level",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ],
              [
                "test_add_levels_not_availible_raises_exception",
                "false"
              ],
              [
                "test_group_building",
                "false"
              ],
              [
                "test_intervals_are_unique",
                "false"
              ],
              [
                "test_intervals_order",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_decimal_interval",
                "false"
              ],
              [
                "test_integer_interval",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_add_level",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ],
              [
                "test_add_levels_not_availible_raises_exception",
                "false"
              ],
              [
                "test_group_building",
                "false"
              ],
              [
                "test_intervals_are_unique",
                "false"
              ],
              [
                "test_intervals_order",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_decimal_interval",
                "false"
              ],
              [
                "test_integer_interval",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_add_level",
                []
              ],
              [
                "test__request_payload",
                []
              ],
              [
                "test_add_levels_not_availible_raises_exception",
                []
              ],
              [
                "test_group_building",
                []
              ],
              [
                "test_intervals_are_unique",
                []
              ],
              [
                "test_intervals_order",
                []
              ],
              [
                "test_init",
                []
              ],
              [
                "test_decimal_interval",
                []
              ],
              [
                "test_integer_interval",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_add_level",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ],
              [
                "test_add_levels_not_availible_raises_exception",
                "false"
              ],
              [
                "test_group_building",
                "false"
              ],
              [
                "test_intervals_are_unique",
                "false"
              ],
              [
                "test_intervals_order",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_decimal_interval",
                "false"
              ],
              [
                "test_integer_interval",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_add_level",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ],
              [
                "test_add_levels_not_availible_raises_exception",
                "false"
              ],
              [
                "test_group_building",
                "true"
              ],
              [
                "test_intervals_are_unique",
                "true"
              ],
              [
                "test_intervals_order",
                "true"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_decimal_interval",
                "false"
              ],
              [
                "test_integer_interval",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_add_level",
                  "0"
                ],
                [
                  "test__request_payload",
                  "0"
                ],
                [
                  "test_add_levels_not_availible_raises_exception",
                  "0"
                ],
                [
                  "test_group_building",
                  "0"
                ],
                [
                  "test_intervals_are_unique",
                  "0"
                ],
                [
                  "test_intervals_order",
                  "0"
                ],
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_decimal_interval",
                  "0"
                ],
                [
                  "test_integer_interval",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_add_level",
                  "0"
                ],
                [
                  "test__request_payload",
                  "0"
                ],
                [
                  "test_add_levels_not_availible_raises_exception",
                  "0"
                ],
                [
                  "test_group_building",
                  "0"
                ],
                [
                  "test_intervals_are_unique",
                  "0"
                ],
                [
                  "test_intervals_order",
                  "0"
                ],
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_decimal_interval",
                  "0"
                ],
                [
                  "test_integer_interval",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_add_level",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ],
              [
                "test_add_levels_not_availible_raises_exception",
                "false"
              ],
              [
                "test_group_building",
                "false"
              ],
              [
                "test_intervals_are_unique",
                "false"
              ],
              [
                "test_intervals_order",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_decimal_interval",
                "false"
              ],
              [
                "test_integer_interval",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_add_level",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ],
              [
                "test_add_levels_not_availible_raises_exception",
                "false"
              ],
              [
                "test_group_building",
                "false"
              ],
              [
                "test_intervals_are_unique",
                "false"
              ],
              [
                "test_intervals_order",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_decimal_interval",
                "false"
              ],
              [
                "test_integer_interval",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_add_level",
                "0"
              ],
              [
                "test__request_payload",
                "1"
              ],
              [
                "test_add_levels_not_availible_raises_exception",
                "2"
              ],
              [
                "test_group_building",
                "2"
              ],
              [
                "test_intervals_are_unique",
                "1"
              ],
              [
                "test_intervals_order",
                "3"
              ],
              [
                "test_init",
                "0"
              ],
              [
                "test_decimal_interval",
                "1"
              ],
              [
                "test_integer_interval",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_add_level",
                [
                  "ib"
                ]
              ],
              [
                "test__request_payload",
                [
                  "payload",
                  "expected",
                  "ib"
                ]
              ],
              [
                "test_add_levels_not_availible_raises_exception",
                [
                  "ib"
                ]
              ],
              [
                "test_group_building",
                [
                  "ib"
                ]
              ],
              [
                "test_intervals_are_unique",
                [
                  "ib"
                ]
              ],
              [
                "test_intervals_order",
                [
                  "ib"
                ]
              ],
              [
                "test_init",
                []
              ],
              [
                "test_decimal_interval",
                [
                  "payload",
                  "expected",
                  "ib"
                ]
              ],
              [
                "test_integer_interval",
                [
                  "payload",
                  "expected",
                  "ib"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_add_level",
                []
              ],
              [
                "test__request_payload",
                []
              ],
              [
                "test_add_levels_not_availible_raises_exception",
                []
              ],
              [
                "test_group_building",
                []
              ],
              [
                "test_intervals_are_unique",
                []
              ],
              [
                "test_intervals_order",
                []
              ],
              [
                "test_init",
                []
              ],
              [
                "test_decimal_interval",
                []
              ],
              [
                "test_integer_interval",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.45542946682393404,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init",
                  "test_intervals_order",
                  0.3253000243161777
                ],
                [
                  "test_add_levels_not_availible_raises_exception",
                  "test_decimal_interval",
                  0.304176029057997
                ],
                [
                  "test_init",
                  "test_group_building",
                  0.273009453115974
                ],
                [
                  "test_add_levels_not_availible_raises_exception",
                  "test_integer_interval",
                  0.30550722154084964
                ],
                [
                  "test_decimal_interval",
                  "test_integer_interval",
                  0.992731444888963
                ],
                [
                  "test_add_levels_not_availible_raises_exception",
                  "test_group_building",
                  0.5004938272808617
                ],
                [
                  "test_intervals_are_unique",
                  "test_intervals_order",
                  0.8211203828474677
                ],
                [
                  "test_init",
                  "test_integer_interval",
                  0.36788360369097944
                ],
                [
                  "test_add_level",
                  "test_intervals_order",
                  0.35445877847928337
                ],
                [
                  "test_add_level",
                  "test_intervals_are_unique",
                  0.46776427696374895
                ],
                [
                  "test_init",
                  "test_decimal_interval",
                  0.36628061740041584
                ],
                [
                  "test__request_payload",
                  "test_intervals_order",
                  0.31491184878121975
                ],
                [
                  "test_add_level",
                  "test__request_payload",
                  0.3816905103452871
                ],
                [
                  "test_init",
                  "test_add_levels_not_availible_raises_exception",
                  0.4029114820126901
                ],
                [
                  "test_init",
                  "test_add_level",
                  0.4447495899966607
                ],
                [
                  "test_intervals_are_unique",
                  "test_decimal_interval",
                  0.7624437362098716
                ],
                [
                  "test_intervals_are_unique",
                  "test_integer_interval",
                  0.7657804862272345
                ],
                [
                  "test_add_level",
                  "test_integer_interval",
                  0.3605613656862741
                ],
                [
                  "test_init",
                  "test_intervals_are_unique",
                  0.50709255283711
                ],
                [
                  "test__request_payload",
                  "test_intervals_are_unique",
                  0.37136566603882204
                ],
                [
                  "test__request_payload",
                  "test_decimal_interval",
                  0.43170363457719296
                ],
                [
                  "test_add_level",
                  "test_decimal_interval",
                  0.358990284723972
                ],
                [
                  "test_init",
                  "test__request_payload",
                  0.26482044885142486
                ],
                [
                  "test__request_payload",
                  "test_integer_interval",
                  0.4335929374093361
                ],
                [
                  "test_add_level",
                  "test_add_levels_not_availible_raises_exception",
                  0.7526178090063816
                ],
                [
                  "test_intervals_are_unique",
                  "test_group_building",
                  0.4486515850484712
                ],
                [
                  "test__request_payload",
                  "test_group_building",
                  0.2436726747500644
                ],
                [
                  "test_add_levels_not_availible_raises_exception",
                  "test__request_payload",
                  0.29045893201031536
                ],
                [
                  "test_add_levels_not_availible_raises_exception",
                  "test_intervals_are_unique",
                  0.4449492083146097
                ],
                [
                  "test_add_levels_not_availible_raises_exception",
                  "test_intervals_order",
                  0.3394638275806278
                ],
                [
                  "test_intervals_order",
                  "test_group_building",
                  0.4973358977281674
                ],
                [
                  "test_intervals_order",
                  "test_decimal_interval",
                  0.6765134322740648
                ],
                [
                  "test_group_building",
                  "test_decimal_interval",
                  0.3111051099130142
                ],
                [
                  "test_intervals_order",
                  "test_integer_interval",
                  0.6794741178954172
                ],
                [
                  "test_group_building",
                  "test_integer_interval",
                  0.31246662674580283
                ],
                [
                  "test_add_level",
                  "test_group_building",
                  0.5194113811148742
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_add_level",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ],
              [
                "test_add_levels_not_availible_raises_exception",
                "false"
              ],
              [
                "test_group_building",
                "false"
              ],
              [
                "test_intervals_are_unique",
                "false"
              ],
              [
                "test_intervals_order",
                "false"
              ],
              [
                "test_init",
                "false"
              ],
              [
                "test_decimal_interval",
                "false"
              ],
              [
                "test_integer_interval",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 9
      }
    ]
  },
  {
    "name": "tests_\u0026_pyarxaas_\u0026_hierarchy_\u0026_test_ReductionHierarchyBuilder.py",
    "testCases": [
      {
        "name": "RedactionHierarchyBuildTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test_redaction_builder_with_zero_params",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_padding_characters_can_only_be_single_char",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test__request_payload",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_init",
                  "[]"
                ],
                [
                  "test_redaction_builder_with_zero_params",
                  "[]"
                ],
                [
                  "test_padding_characters_can_only_be_single_char",
                  "[]"
                ],
                [
                  "test__request_payload",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_redaction_builder_with_zero_params",
                  "false"
                ],
                [
                  "test_padding_characters_can_only_be_single_char",
                  "false"
                ],
                [
                  "test__request_payload",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_redaction_builder_with_zero_params",
                  "false"
                ],
                [
                  "test_padding_characters_can_only_be_single_char",
                  "false"
                ],
                [
                  "test__request_payload",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_redaction_builder_with_zero_params",
                  "false"
                ],
                [
                  "test_padding_characters_can_only_be_single_char",
                  "true"
                ],
                [
                  "test__request_payload",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_init",
                  "false"
                ],
                [
                  "test_redaction_builder_with_zero_params",
                  "false"
                ],
                [
                  "test_padding_characters_can_only_be_single_char",
                  "false"
                ],
                [
                  "test__request_payload",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_redaction_builder_with_zero_params",
                "false"
              ],
              [
                "test_padding_characters_can_only_be_single_char",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_redaction_builder_with_zero_params",
                "false"
              ],
              [
                "test_padding_characters_can_only_be_single_char",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                []
              ],
              [
                "test_redaction_builder_with_zero_params",
                []
              ],
              [
                "test_padding_characters_can_only_be_single_char",
                []
              ],
              [
                "test__request_payload",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_redaction_builder_with_zero_params",
                "false"
              ],
              [
                "test_padding_characters_can_only_be_single_char",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_redaction_builder_with_zero_params",
                "false"
              ],
              [
                "test_padding_characters_can_only_be_single_char",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_redaction_builder_with_zero_params",
                  "0"
                ],
                [
                  "test_padding_characters_can_only_be_single_char",
                  "0"
                ],
                [
                  "test__request_payload",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_init",
                  "0"
                ],
                [
                  "test_redaction_builder_with_zero_params",
                  "0"
                ],
                [
                  "test_padding_characters_can_only_be_single_char",
                  "0"
                ],
                [
                  "test__request_payload",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_redaction_builder_with_zero_params",
                "false"
              ],
              [
                "test_padding_characters_can_only_be_single_char",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_redaction_builder_with_zero_params",
                "false"
              ],
              [
                "test_padding_characters_can_only_be_single_char",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_init",
                "0"
              ],
              [
                "test_redaction_builder_with_zero_params",
                "1"
              ],
              [
                "test_padding_characters_can_only_be_single_char",
                "2"
              ],
              [
                "test__request_payload",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                []
              ],
              [
                "test_redaction_builder_with_zero_params",
                [
                  "expected",
                  "redaction_builder",
                  "request_payload"
                ]
              ],
              [
                "test_padding_characters_can_only_be_single_char",
                []
              ],
              [
                "test__request_payload",
                [
                  "expected",
                  "redaction_builder",
                  "request_payload"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                []
              ],
              [
                "test_redaction_builder_with_zero_params",
                []
              ],
              [
                "test_padding_characters_can_only_be_single_char",
                []
              ],
              [
                "test__request_payload",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5721360243204526,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_init",
                  "test_redaction_builder_with_zero_params",
                  0.5679618342470648
                ],
                [
                  "test_redaction_builder_with_zero_params",
                  "test_padding_characters_can_only_be_single_char",
                  0.34057563609046
                ],
                [
                  "test__request_payload",
                  "test_redaction_builder_with_zero_params",
                  0.8731615850665138
                ],
                [
                  "test__request_payload",
                  "test_padding_characters_can_only_be_single_char",
                  0.37367387830540666
                ],
                [
                  "test_init",
                  "test__request_payload",
                  0.8469286484664575
                ],
                [
                  "test_init",
                  "test_padding_characters_can_only_be_single_char",
                  0.430514563746813
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_init",
                "false"
              ],
              [
                "test_redaction_builder_with_zero_params",
                "false"
              ],
              [
                "test_padding_characters_can_only_be_single_char",
                "false"
              ],
              [
                "test__request_payload",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  }
]