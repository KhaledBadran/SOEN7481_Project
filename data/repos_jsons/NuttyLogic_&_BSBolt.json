[
  {
    "name": "tests_\u0026_test_knn_impute.py",
    "testCases": [
      {
        "name": "TestBatchImputation",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_window_four",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_window_thirty",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_window_four",
                  "[]"
                ],
                [
                  "test_window_thirty",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_window_four",
                  "true"
                ],
                [
                  "test_window_thirty",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_window_four",
                  "false"
                ],
                [
                  "test_window_thirty",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_window_four",
                  "false"
                ],
                [
                  "test_window_thirty",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_window_four",
                  "false"
                ],
                [
                  "test_window_thirty",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_window_four",
                "false"
              ],
              [
                "test_window_thirty",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_window_four",
                "false"
              ],
              [
                "test_window_thirty",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_window_four",
                []
              ],
              [
                "test_window_thirty",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_window_four",
                "false"
              ],
              [
                "test_window_thirty",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_window_four",
                "true"
              ],
              [
                "test_window_thirty",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_window_four",
                  "0"
                ],
                [
                  "test_window_thirty",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_window_four",
                  "0"
                ],
                [
                  "test_window_thirty",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_window_four",
                "false"
              ],
              [
                "test_window_thirty",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_window_four",
                "false"
              ],
              [
                "test_window_thirty",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_window_four",
                "1"
              ],
              [
                "test_window_thirty",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_window_four",
                []
              ],
              [
                "test_window_thirty",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_window_four",
                []
              ],
              [
                "test_window_thirty",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9811320754716981,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_window_four",
                  "test_window_thirty",
                  0.9811320754716981
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_window_four",
                "false"
              ],
              [
                "test_window_thirty",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_full_simulation.py",
    "testCases": [
      {
        "name": "TestSimulation",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_coverage",
                  "[PyCallExpression: self.assertLess, PyCallExpression: self.assertLess]"
                ],
                [
                  "testReferenceSetting",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_coverage",
                  "[]"
                ],
                [
                  "testReferenceSetting",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_coverage",
                  "true"
                ],
                [
                  "testReferenceSetting",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_coverage",
                  "false"
                ],
                [
                  "testReferenceSetting",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_coverage",
                  "false"
                ],
                [
                  "testReferenceSetting",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_coverage",
                  "false"
                ],
                [
                  "testReferenceSetting",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_coverage",
                "false"
              ],
              [
                "testReferenceSetting",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_coverage",
                "false"
              ],
              [
                "testReferenceSetting",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_coverage",
                []
              ],
              [
                "testReferenceSetting",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_coverage",
                "false"
              ],
              [
                "testReferenceSetting",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_coverage",
                "true"
              ],
              [
                "testReferenceSetting",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_coverage",
                  "0"
                ],
                [
                  "testReferenceSetting",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_coverage",
                  "0"
                ],
                [
                  "testReferenceSetting",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_coverage",
                "false"
              ],
              [
                "testReferenceSetting",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_coverage",
                "false"
              ],
              [
                "testReferenceSetting",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_coverage",
                "2"
              ],
              [
                "testReferenceSetting",
                "3"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_coverage",
                [
                  "high_coverage_regions",
                  "low_coverage_regions",
                  "coverage_regions"
                ]
              ],
              [
                "testReferenceSetting",
                [
                  "count",
                  "fq2_read_info",
                  "fq1_read_info"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_coverage",
                []
              ],
              [
                "testReferenceSetting",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7252729429704928,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "testReferenceSetting",
                  "test_coverage",
                  0.7252729429704928
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_coverage",
                "false"
              ],
              [
                "testReferenceSetting",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_matrix_assembly.py",
    "testCases": [
      {
        "name": "TestMatrixAggregation",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_cg_only",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_site_missing_low_count",
                  "[PyCallExpression: self.assertNotIn]"
                ],
                [
                  "test_command_line",
                  "[PyCallExpression: self.assertNotIn]"
                ],
                [
                  "test_value_to_count_matrix",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_five_count",
                  "[PyCallExpression: self.assertIn]"
                ],
                [
                  "test_cg_only_high",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_cg_only",
                  "[]"
                ],
                [
                  "test_site_missing_low_count",
                  "[]"
                ],
                [
                  "test_command_line",
                  "[]"
                ],
                [
                  "test_value_to_count_matrix",
                  "[]"
                ],
                [
                  "test_five_count",
                  "[]"
                ],
                [
                  "test_cg_only_high",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_cg_only",
                  "false"
                ],
                [
                  "test_site_missing_low_count",
                  "true"
                ],
                [
                  "test_command_line",
                  "true"
                ],
                [
                  "test_value_to_count_matrix",
                  "true"
                ],
                [
                  "test_five_count",
                  "true"
                ],
                [
                  "test_cg_only_high",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_cg_only",
                  "false"
                ],
                [
                  "test_site_missing_low_count",
                  "false"
                ],
                [
                  "test_command_line",
                  "false"
                ],
                [
                  "test_value_to_count_matrix",
                  "false"
                ],
                [
                  "test_five_count",
                  "false"
                ],
                [
                  "test_cg_only_high",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_cg_only",
                  "false"
                ],
                [
                  "test_site_missing_low_count",
                  "false"
                ],
                [
                  "test_command_line",
                  "false"
                ],
                [
                  "test_value_to_count_matrix",
                  "false"
                ],
                [
                  "test_five_count",
                  "false"
                ],
                [
                  "test_cg_only_high",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_cg_only",
                  "false"
                ],
                [
                  "test_site_missing_low_count",
                  "false"
                ],
                [
                  "test_command_line",
                  "false"
                ],
                [
                  "test_value_to_count_matrix",
                  "false"
                ],
                [
                  "test_five_count",
                  "false"
                ],
                [
                  "test_cg_only_high",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cg_only",
                "false"
              ],
              [
                "test_site_missing_low_count",
                "false"
              ],
              [
                "test_command_line",
                "false"
              ],
              [
                "test_value_to_count_matrix",
                "false"
              ],
              [
                "test_five_count",
                "false"
              ],
              [
                "test_cg_only_high",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_cg_only",
                "false"
              ],
              [
                "test_site_missing_low_count",
                "false"
              ],
              [
                "test_command_line",
                "false"
              ],
              [
                "test_value_to_count_matrix",
                "false"
              ],
              [
                "test_five_count",
                "false"
              ],
              [
                "test_cg_only_high",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_cg_only",
                []
              ],
              [
                "test_site_missing_low_count",
                []
              ],
              [
                "test_command_line",
                []
              ],
              [
                "test_value_to_count_matrix",
                []
              ],
              [
                "test_five_count",
                []
              ],
              [
                "test_cg_only_high",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cg_only",
                "false"
              ],
              [
                "test_site_missing_low_count",
                "false"
              ],
              [
                "test_command_line",
                "false"
              ],
              [
                "test_value_to_count_matrix",
                "false"
              ],
              [
                "test_five_count",
                "false"
              ],
              [
                "test_cg_only_high",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_cg_only",
                "true"
              ],
              [
                "test_site_missing_low_count",
                "false"
              ],
              [
                "test_command_line",
                "false"
              ],
              [
                "test_value_to_count_matrix",
                "true"
              ],
              [
                "test_five_count",
                "false"
              ],
              [
                "test_cg_only_high",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_cg_only",
                  "0"
                ],
                [
                  "test_site_missing_low_count",
                  "0"
                ],
                [
                  "test_command_line",
                  "0"
                ],
                [
                  "test_value_to_count_matrix",
                  "0"
                ],
                [
                  "test_five_count",
                  "0"
                ],
                [
                  "test_cg_only_high",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_cg_only",
                  "0"
                ],
                [
                  "test_site_missing_low_count",
                  "0"
                ],
                [
                  "test_command_line",
                  "0"
                ],
                [
                  "test_value_to_count_matrix",
                  "0"
                ],
                [
                  "test_five_count",
                  "0"
                ],
                [
                  "test_cg_only_high",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_cg_only",
                "false"
              ],
              [
                "test_site_missing_low_count",
                "false"
              ],
              [
                "test_command_line",
                "false"
              ],
              [
                "test_value_to_count_matrix",
                "false"
              ],
              [
                "test_five_count",
                "false"
              ],
              [
                "test_cg_only_high",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cg_only",
                "false"
              ],
              [
                "test_site_missing_low_count",
                "false"
              ],
              [
                "test_command_line",
                "false"
              ],
              [
                "test_value_to_count_matrix",
                "false"
              ],
              [
                "test_five_count",
                "false"
              ],
              [
                "test_cg_only_high",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cg_only",
                "1"
              ],
              [
                "test_site_missing_low_count",
                "1"
              ],
              [
                "test_command_line",
                "1"
              ],
              [
                "test_value_to_count_matrix",
                "2"
              ],
              [
                "test_five_count",
                "1"
              ],
              [
                "test_cg_only_high",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_cg_only",
                []
              ],
              [
                "test_site_missing_low_count",
                []
              ],
              [
                "test_command_line",
                []
              ],
              [
                "test_value_to_count_matrix",
                []
              ],
              [
                "test_five_count",
                []
              ],
              [
                "test_cg_only_high",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_cg_only",
                []
              ],
              [
                "test_site_missing_low_count",
                []
              ],
              [
                "test_command_line",
                []
              ],
              [
                "test_value_to_count_matrix",
                []
              ],
              [
                "test_five_count",
                []
              ],
              [
                "test_cg_only_high",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4666129141400804,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_site_missing_low_count",
                  "test_value_to_count_matrix",
                  0.3912540225287499
                ],
                [
                  "test_value_to_count_matrix",
                  "test_cg_only",
                  0.22963966338592295
                ],
                [
                  "test_cg_only",
                  "test_cg_only_high",
                  0.8053872662568293
                ],
                [
                  "test_site_missing_low_count",
                  "test_cg_only",
                  0.34403123102809335
                ],
                [
                  "test_site_missing_low_count",
                  "test_cg_only_high",
                  0.5739480576625674
                ],
                [
                  "test_value_to_count_matrix",
                  "test_command_line",
                  0.20073876713674152
                ],
                [
                  "test_five_count",
                  "test_cg_only",
                  0.3546040716334876
                ],
                [
                  "test_cg_only",
                  "test_command_line",
                  0.3746343246326776
                ],
                [
                  "test_five_count",
                  "test_command_line",
                  0.5211684385622208
                ],
                [
                  "test_site_missing_low_count",
                  "test_five_count",
                  0.8526235240163176
                ],
                [
                  "test_five_count",
                  "test_cg_only_high",
                  0.5272497301964962
                ],
                [
                  "test_cg_only_high",
                  "test_command_line",
                  0.45258857184282847
                ],
                [
                  "test_value_to_count_matrix",
                  "test_five_count",
                  0.4008918628686366
                ],
                [
                  "test_value_to_count_matrix",
                  "test_cg_only_high",
                  0.39044759485022357
                ],
                [
                  "test_site_missing_low_count",
                  "test_command_line",
                  0.5799865854994128
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_cg_only",
                "false"
              ],
              [
                "test_site_missing_low_count",
                "false"
              ],
              [
                "test_command_line",
                "false"
              ],
              [
                "test_value_to_count_matrix",
                "false"
              ],
              [
                "test_five_count",
                "false"
              ],
              [
                "test_cg_only_high",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      }
    ]
  },
  {
    "name": "tests_\u0026_test_masked_alignment.py",
    "testCases": [
      {
        "name": "TestMaskedAlignment",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_reads_on_target",
                  "[PyCallExpression: self.assertGreater]"
                ],
                [
                  "test_off_target_reads",
                  "[PyCallExpression: self.assertLess]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_reads_on_target",
                  "[]"
                ],
                [
                  "test_off_target_reads",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_reads_on_target",
                  "false"
                ],
                [
                  "test_off_target_reads",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_reads_on_target",
                  "false"
                ],
                [
                  "test_off_target_reads",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_reads_on_target",
                  "false"
                ],
                [
                  "test_off_target_reads",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_reads_on_target",
                  "false"
                ],
                [
                  "test_off_target_reads",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_reads_on_target",
                "false"
              ],
              [
                "test_off_target_reads",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_reads_on_target",
                "false"
              ],
              [
                "test_off_target_reads",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_reads_on_target",
                []
              ],
              [
                "test_off_target_reads",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_reads_on_target",
                "false"
              ],
              [
                "test_off_target_reads",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_reads_on_target",
                "true"
              ],
              [
                "test_off_target_reads",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_reads_on_target",
                  "0"
                ],
                [
                  "test_off_target_reads",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_reads_on_target",
                  "0"
                ],
                [
                  "test_off_target_reads",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_reads_on_target",
                "false"
              ],
              [
                "test_off_target_reads",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_reads_on_target",
                "false"
              ],
              [
                "test_off_target_reads",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_reads_on_target",
                "1"
              ],
              [
                "test_off_target_reads",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_reads_on_target",
                [
                  "on_target_proportion"
                ]
              ],
              [
                "test_off_target_reads",
                [
                  "off_target_proportion"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_reads_on_target",
                []
              ],
              [
                "test_off_target_reads",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6557892373388906,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_reads_on_target",
                  "test_off_target_reads",
                  0.6557892373388906
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_reads_on_target",
                "false"
              ],
              [
                "test_off_target_reads",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_imputation_launch.py",
    "testCases": [
      {
        "name": "TestCLImputation",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_file",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_file",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_file",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_file",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_file",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_file",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_file",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_file",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_file",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_file",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_file",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_file",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_file",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_file",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_file",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_file",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_file",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_file",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_file",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_methylation_index.py",
    "testCases": [
      {
        "name": "TestReadSimulation",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_site_offsets",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_rrbs_mappable_regions",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_rrbs_mappable_sites",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_mappable_size",
                  "[PyCallExpression: self.assertIn]"
                ],
                [
                  "test_cut_sequnece",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_mappable_regions",
                  "[PyCallExpression: self.assertIn]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_site_offsets",
                  "[]"
                ],
                [
                  "test_rrbs_mappable_regions",
                  "[]"
                ],
                [
                  "test_rrbs_mappable_sites",
                  "[]"
                ],
                [
                  "test_mappable_size",
                  "[]"
                ],
                [
                  "test_cut_sequnece",
                  "[]"
                ],
                [
                  "test_mappable_regions",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_site_offsets",
                  "false"
                ],
                [
                  "test_rrbs_mappable_regions",
                  "true"
                ],
                [
                  "test_rrbs_mappable_sites",
                  "true"
                ],
                [
                  "test_mappable_size",
                  "true"
                ],
                [
                  "test_cut_sequnece",
                  "false"
                ],
                [
                  "test_mappable_regions",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_site_offsets",
                  "false"
                ],
                [
                  "test_rrbs_mappable_regions",
                  "false"
                ],
                [
                  "test_rrbs_mappable_sites",
                  "false"
                ],
                [
                  "test_mappable_size",
                  "false"
                ],
                [
                  "test_cut_sequnece",
                  "false"
                ],
                [
                  "test_mappable_regions",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_site_offsets",
                  "false"
                ],
                [
                  "test_rrbs_mappable_regions",
                  "false"
                ],
                [
                  "test_rrbs_mappable_sites",
                  "false"
                ],
                [
                  "test_mappable_size",
                  "false"
                ],
                [
                  "test_cut_sequnece",
                  "false"
                ],
                [
                  "test_mappable_regions",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_site_offsets",
                  "false"
                ],
                [
                  "test_rrbs_mappable_regions",
                  "false"
                ],
                [
                  "test_rrbs_mappable_sites",
                  "false"
                ],
                [
                  "test_mappable_size",
                  "false"
                ],
                [
                  "test_cut_sequnece",
                  "false"
                ],
                [
                  "test_mappable_regions",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_site_offsets",
                "false"
              ],
              [
                "test_rrbs_mappable_regions",
                "false"
              ],
              [
                "test_rrbs_mappable_sites",
                "false"
              ],
              [
                "test_mappable_size",
                "false"
              ],
              [
                "test_cut_sequnece",
                "false"
              ],
              [
                "test_mappable_regions",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_site_offsets",
                "false"
              ],
              [
                "test_rrbs_mappable_regions",
                "false"
              ],
              [
                "test_rrbs_mappable_sites",
                "false"
              ],
              [
                "test_mappable_size",
                "false"
              ],
              [
                "test_cut_sequnece",
                "false"
              ],
              [
                "test_mappable_regions",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_site_offsets",
                []
              ],
              [
                "test_rrbs_mappable_regions",
                []
              ],
              [
                "test_rrbs_mappable_sites",
                []
              ],
              [
                "test_mappable_size",
                []
              ],
              [
                "test_cut_sequnece",
                []
              ],
              [
                "test_mappable_regions",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_site_offsets",
                "false"
              ],
              [
                "test_rrbs_mappable_regions",
                "false"
              ],
              [
                "test_rrbs_mappable_sites",
                "false"
              ],
              [
                "test_mappable_size",
                "false"
              ],
              [
                "test_cut_sequnece",
                "false"
              ],
              [
                "test_mappable_regions",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_site_offsets",
                "false"
              ],
              [
                "test_rrbs_mappable_regions",
                "false"
              ],
              [
                "test_rrbs_mappable_sites",
                "false"
              ],
              [
                "test_mappable_size",
                "false"
              ],
              [
                "test_cut_sequnece",
                "false"
              ],
              [
                "test_mappable_regions",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_site_offsets",
                  "0"
                ],
                [
                  "test_rrbs_mappable_regions",
                  "0"
                ],
                [
                  "test_rrbs_mappable_sites",
                  "0"
                ],
                [
                  "test_mappable_size",
                  "0"
                ],
                [
                  "test_cut_sequnece",
                  "0"
                ],
                [
                  "test_mappable_regions",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_site_offsets",
                  "0"
                ],
                [
                  "test_rrbs_mappable_regions",
                  "0"
                ],
                [
                  "test_rrbs_mappable_sites",
                  "0"
                ],
                [
                  "test_mappable_size",
                  "0"
                ],
                [
                  "test_cut_sequnece",
                  "0"
                ],
                [
                  "test_mappable_regions",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_site_offsets",
                "false"
              ],
              [
                "test_rrbs_mappable_regions",
                "false"
              ],
              [
                "test_rrbs_mappable_sites",
                "false"
              ],
              [
                "test_mappable_size",
                "false"
              ],
              [
                "test_cut_sequnece",
                "false"
              ],
              [
                "test_mappable_regions",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_site_offsets",
                "false"
              ],
              [
                "test_rrbs_mappable_regions",
                "false"
              ],
              [
                "test_rrbs_mappable_sites",
                "false"
              ],
              [
                "test_mappable_size",
                "false"
              ],
              [
                "test_cut_sequnece",
                "false"
              ],
              [
                "test_mappable_regions",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_site_offsets",
                "1"
              ],
              [
                "test_rrbs_mappable_regions",
                "1"
              ],
              [
                "test_rrbs_mappable_sites",
                "2"
              ],
              [
                "test_mappable_size",
                "1"
              ],
              [
                "test_cut_sequnece",
                "1"
              ],
              [
                "test_mappable_regions",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_site_offsets",
                []
              ],
              [
                "test_rrbs_mappable_regions",
                [
                  "sequence"
                ]
              ],
              [
                "test_rrbs_mappable_sites",
                [
                  "seq_end",
                  "sequence",
                  "seq_start"
                ]
              ],
              [
                "test_mappable_size",
                []
              ],
              [
                "test_cut_sequnece",
                []
              ],
              [
                "test_mappable_regions",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_site_offsets",
                []
              ],
              [
                "test_rrbs_mappable_regions",
                []
              ],
              [
                "test_rrbs_mappable_sites",
                []
              ],
              [
                "test_mappable_size",
                []
              ],
              [
                "test_cut_sequnece",
                []
              ],
              [
                "test_mappable_regions",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.26979398240107844,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_mappable_regions",
                  "test_cut_sequnece",
                  0.12856486930664499
                ],
                [
                  "test_cut_sequnece",
                  "test_rrbs_mappable_sites",
                  0.31402746879154386
                ],
                [
                  "test_cut_sequnece",
                  "test_rrbs_mappable_regions",
                  0.09642365197998375
                ],
                [
                  "test_mappable_size",
                  "test_rrbs_mappable_regions",
                  0.4136701519960153
                ],
                [
                  "test_mappable_regions",
                  "test_rrbs_mappable_sites",
                  0.26368550628535026
                ],
                [
                  "test_mappable_size",
                  "test_site_offsets",
                  0.12524485821702988
                ],
                [
                  "test_mappable_regions",
                  "test_site_offsets",
                  0.11009637651263607
                ],
                [
                  "test_site_offsets",
                  "test_rrbs_mappable_regions",
                  0.1651445647689541
                ],
                [
                  "test_rrbs_mappable_regions",
                  "test_rrbs_mappable_sites",
                  0.4718582744053636
                ],
                [
                  "test_site_offsets",
                  "test_cut_sequnece",
                  0.23354968324845687
                ],
                [
                  "test_mappable_regions",
                  "test_mappable_size",
                  0.7239227659930269
                ],
                [
                  "test_mappable_size",
                  "test_cut_sequnece",
                  0.14625448482542613
                ],
                [
                  "test_site_offsets",
                  "test_rrbs_mappable_sites",
                  0.11765121295424251
                ],
                [
                  "test_mappable_size",
                  "test_rrbs_mappable_sites",
                  0.2368158667315022
                ],
                [
                  "test_mappable_regions",
                  "test_rrbs_mappable_regions",
                  0.5
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_site_offsets",
                "false"
              ],
              [
                "test_rrbs_mappable_regions",
                "true"
              ],
              [
                "test_rrbs_mappable_sites",
                "false"
              ],
              [
                "test_mappable_size",
                "false"
              ],
              [
                "test_cut_sequnece",
                "false"
              ],
              [
                "test_mappable_regions",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      }
    ]
  },
  {
    "name": "tests_\u0026_test_window_generation.py",
    "testCases": [
      {
        "name": "TestSlidingWindow",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_chromosome_membership",
                  "[PyCallExpression: self.assertIn]"
                ],
                [
                  "test_window_membership",
                  "[PyCallExpression: self.assertIn, PyCallExpression: self.assertIn, PyCallExpression: self.assertNotIn]"
                ],
                [
                  "test_numeric_position",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_sort_order",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_site_splitting",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_window_size",
                  "[PyCallExpression: self.assertLessEqual]"
                ],
                [
                  "test_window_locations",
                  "[PyCallExpression: self.assertLessEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_chromosome_membership",
                  "[]"
                ],
                [
                  "test_window_membership",
                  "[]"
                ],
                [
                  "test_numeric_position",
                  "[]"
                ],
                [
                  "test_sort_order",
                  "[]"
                ],
                [
                  "test_site_splitting",
                  "[]"
                ],
                [
                  "test_window_size",
                  "[]"
                ],
                [
                  "test_window_locations",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_chromosome_membership",
                  "true"
                ],
                [
                  "test_window_membership",
                  "false"
                ],
                [
                  "test_numeric_position",
                  "false"
                ],
                [
                  "test_sort_order",
                  "false"
                ],
                [
                  "test_site_splitting",
                  "false"
                ],
                [
                  "test_window_size",
                  "true"
                ],
                [
                  "test_window_locations",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_chromosome_membership",
                  "false"
                ],
                [
                  "test_window_membership",
                  "false"
                ],
                [
                  "test_numeric_position",
                  "false"
                ],
                [
                  "test_sort_order",
                  "false"
                ],
                [
                  "test_site_splitting",
                  "false"
                ],
                [
                  "test_window_size",
                  "false"
                ],
                [
                  "test_window_locations",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_chromosome_membership",
                  "false"
                ],
                [
                  "test_window_membership",
                  "false"
                ],
                [
                  "test_numeric_position",
                  "false"
                ],
                [
                  "test_sort_order",
                  "false"
                ],
                [
                  "test_site_splitting",
                  "false"
                ],
                [
                  "test_window_size",
                  "false"
                ],
                [
                  "test_window_locations",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_chromosome_membership",
                  "false"
                ],
                [
                  "test_window_membership",
                  "false"
                ],
                [
                  "test_numeric_position",
                  "false"
                ],
                [
                  "test_sort_order",
                  "false"
                ],
                [
                  "test_site_splitting",
                  "false"
                ],
                [
                  "test_window_size",
                  "false"
                ],
                [
                  "test_window_locations",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_chromosome_membership",
                "false"
              ],
              [
                "test_window_membership",
                "false"
              ],
              [
                "test_numeric_position",
                "false"
              ],
              [
                "test_sort_order",
                "false"
              ],
              [
                "test_site_splitting",
                "false"
              ],
              [
                "test_window_size",
                "false"
              ],
              [
                "test_window_locations",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_chromosome_membership",
                "false"
              ],
              [
                "test_window_membership",
                "false"
              ],
              [
                "test_numeric_position",
                "true"
              ],
              [
                "test_sort_order",
                "true"
              ],
              [
                "test_site_splitting",
                "true"
              ],
              [
                "test_window_size",
                "false"
              ],
              [
                "test_window_locations",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_chromosome_membership",
                []
              ],
              [
                "test_window_membership",
                []
              ],
              [
                "test_numeric_position",
                []
              ],
              [
                "test_sort_order",
                []
              ],
              [
                "test_site_splitting",
                []
              ],
              [
                "test_window_size",
                []
              ],
              [
                "test_window_locations",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_chromosome_membership",
                "false"
              ],
              [
                "test_window_membership",
                "false"
              ],
              [
                "test_numeric_position",
                "false"
              ],
              [
                "test_sort_order",
                "false"
              ],
              [
                "test_site_splitting",
                "false"
              ],
              [
                "test_window_size",
                "false"
              ],
              [
                "test_window_locations",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_chromosome_membership",
                "false"
              ],
              [
                "test_window_membership",
                "false"
              ],
              [
                "test_numeric_position",
                "true"
              ],
              [
                "test_sort_order",
                "false"
              ],
              [
                "test_site_splitting",
                "false"
              ],
              [
                "test_window_size",
                "true"
              ],
              [
                "test_window_locations",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_chromosome_membership",
                  "0"
                ],
                [
                  "test_window_membership",
                  "0"
                ],
                [
                  "test_numeric_position",
                  "0"
                ],
                [
                  "test_sort_order",
                  "0"
                ],
                [
                  "test_site_splitting",
                  "0"
                ],
                [
                  "test_window_size",
                  "0"
                ],
                [
                  "test_window_locations",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_chromosome_membership",
                  "0"
                ],
                [
                  "test_window_membership",
                  "0"
                ],
                [
                  "test_numeric_position",
                  "0"
                ],
                [
                  "test_sort_order",
                  "0"
                ],
                [
                  "test_site_splitting",
                  "0"
                ],
                [
                  "test_window_size",
                  "0"
                ],
                [
                  "test_window_locations",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_chromosome_membership",
                "false"
              ],
              [
                "test_window_membership",
                "false"
              ],
              [
                "test_numeric_position",
                "false"
              ],
              [
                "test_sort_order",
                "false"
              ],
              [
                "test_site_splitting",
                "false"
              ],
              [
                "test_window_size",
                "false"
              ],
              [
                "test_window_locations",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_chromosome_membership",
                "false"
              ],
              [
                "test_window_membership",
                "false"
              ],
              [
                "test_numeric_position",
                "false"
              ],
              [
                "test_sort_order",
                "false"
              ],
              [
                "test_site_splitting",
                "false"
              ],
              [
                "test_window_size",
                "false"
              ],
              [
                "test_window_locations",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_chromosome_membership",
                "1"
              ],
              [
                "test_window_membership",
                "3"
              ],
              [
                "test_numeric_position",
                "2"
              ],
              [
                "test_sort_order",
                "1"
              ],
              [
                "test_site_splitting",
                "1"
              ],
              [
                "test_window_size",
                "1"
              ],
              [
                "test_window_locations",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_chromosome_membership",
                [
                  "chrom"
                ]
              ],
              [
                "test_window_membership",
                []
              ],
              [
                "test_numeric_position",
                [
                  "test_value"
                ]
              ],
              [
                "test_sort_order",
                []
              ],
              [
                "test_site_splitting",
                []
              ],
              [
                "test_window_size",
                [
                  "window_end",
                  "window_start"
                ]
              ],
              [
                "test_window_locations",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_chromosome_membership",
                []
              ],
              [
                "test_window_membership",
                []
              ],
              [
                "test_numeric_position",
                []
              ],
              [
                "test_sort_order",
                []
              ],
              [
                "test_site_splitting",
                []
              ],
              [
                "test_window_size",
                []
              ],
              [
                "test_window_locations",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.2990183635793219,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_window_membership",
                  "test_chromosome_membership",
                  0.2680929951566655
                ],
                [
                  "test_window_locations",
                  "test_sort_order",
                  0.3063358324269934
                ],
                [
                  "test_window_membership",
                  "test_window_locations",
                  0.4500225016876407
                ],
                [
                  "test_window_size",
                  "test_chromosome_membership",
                  0.49690399499995325
                ],
                [
                  "test_window_size",
                  "test_site_splitting",
                  0.11410886614690958
                ],
                [
                  "test_sort_order",
                  "test_numeric_position",
                  0.4875001055012462
                ],
                [
                  "test_window_membership",
                  "test_sort_order",
                  0.1137328645739232
                ],
                [
                  "test_window_locations",
                  "test_chromosome_membership",
                  0.29012942659282975
                ],
                [
                  "test_sort_order",
                  "test_site_splitting",
                  0.4041119295602435
                ],
                [
                  "test_window_size",
                  "test_sort_order",
                  0.2131433966297847
                ],
                [
                  "test_window_locations",
                  "test_site_splitting",
                  0.21320071635561041
                ],
                [
                  "test_sort_order",
                  "test_chromosome_membership",
                  0.12220592918446108
                ],
                [
                  "test_window_locations",
                  "test_numeric_position",
                  0.4264014327112209
                ],
                [
                  "test_window_membership",
                  "test_numeric_position",
                  0.19097647642679352
                ],
                [
                  "test_window_membership",
                  "test_window_size",
                  0.2954551224347571
                ],
                [
                  "test_chromosome_membership",
                  "test_site_splitting",
                  0.2721655269759086
                ],
                [
                  "test_window_size",
                  "test_numeric_position",
                  0.28690229202651557
                ],
                [
                  "test_window_size",
                  "test_window_locations",
                  0.46709936649691375
                ],
                [
                  "test_chromosome_membership",
                  "test_numeric_position",
                  0.29160592175990213
                ],
                [
                  "test_site_splitting",
                  "test_numeric_position",
                  0.4285714285714285
                ],
                [
                  "test_window_membership",
                  "test_site_splitting",
                  0.14071950894605836
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_chromosome_membership",
                "false"
              ],
              [
                "test_window_membership",
                "false"
              ],
              [
                "test_numeric_position",
                "false"
              ],
              [
                "test_sort_order",
                "false"
              ],
              [
                "test_site_splitting",
                "false"
              ],
              [
                "test_window_size",
                "false"
              ],
              [
                "test_window_locations",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      }
    ]
  },
  {
    "name": "tests_\u0026_test_alignment_pipeline.py",
    "testCases": [
      {
        "name": "TestBSBPipeline",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_on_target_read_alignments",
                  "[PyCallExpression: self.assertGreater]"
                ],
                [
                  "test_beta_proportion",
                  "[PyCallExpression: self.assertLessEqual]"
                ],
                [
                  "test_read_coverage",
                  "[PyCallExpression: self.assertLessEqual]"
                ],
                [
                  "test_off_target_reaad_alignments",
                  "[PyCallExpression: self.assertLess]"
                ],
                [
                  "test_unmapped_read_alignments",
                  "[PyCallExpression: self.assertLess]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_on_target_read_alignments",
                  "[]"
                ],
                [
                  "test_beta_proportion",
                  "[]"
                ],
                [
                  "test_read_coverage",
                  "[]"
                ],
                [
                  "test_off_target_reaad_alignments",
                  "[]"
                ],
                [
                  "test_unmapped_read_alignments",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_on_target_read_alignments",
                  "false"
                ],
                [
                  "test_beta_proportion",
                  "true"
                ],
                [
                  "test_read_coverage",
                  "true"
                ],
                [
                  "test_off_target_reaad_alignments",
                  "false"
                ],
                [
                  "test_unmapped_read_alignments",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_on_target_read_alignments",
                  "false"
                ],
                [
                  "test_beta_proportion",
                  "false"
                ],
                [
                  "test_read_coverage",
                  "false"
                ],
                [
                  "test_off_target_reaad_alignments",
                  "false"
                ],
                [
                  "test_unmapped_read_alignments",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_on_target_read_alignments",
                  "false"
                ],
                [
                  "test_beta_proportion",
                  "false"
                ],
                [
                  "test_read_coverage",
                  "false"
                ],
                [
                  "test_off_target_reaad_alignments",
                  "false"
                ],
                [
                  "test_unmapped_read_alignments",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_on_target_read_alignments",
                  "false"
                ],
                [
                  "test_beta_proportion",
                  "false"
                ],
                [
                  "test_read_coverage",
                  "false"
                ],
                [
                  "test_off_target_reaad_alignments",
                  "false"
                ],
                [
                  "test_unmapped_read_alignments",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_on_target_read_alignments",
                "false"
              ],
              [
                "test_beta_proportion",
                "false"
              ],
              [
                "test_read_coverage",
                "false"
              ],
              [
                "test_off_target_reaad_alignments",
                "false"
              ],
              [
                "test_unmapped_read_alignments",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_on_target_read_alignments",
                "false"
              ],
              [
                "test_beta_proportion",
                "false"
              ],
              [
                "test_read_coverage",
                "false"
              ],
              [
                "test_off_target_reaad_alignments",
                "false"
              ],
              [
                "test_unmapped_read_alignments",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_on_target_read_alignments",
                []
              ],
              [
                "test_beta_proportion",
                []
              ],
              [
                "test_read_coverage",
                []
              ],
              [
                "test_off_target_reaad_alignments",
                []
              ],
              [
                "test_unmapped_read_alignments",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_on_target_read_alignments",
                "false"
              ],
              [
                "test_beta_proportion",
                "false"
              ],
              [
                "test_read_coverage",
                "false"
              ],
              [
                "test_off_target_reaad_alignments",
                "false"
              ],
              [
                "test_unmapped_read_alignments",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_on_target_read_alignments",
                "true"
              ],
              [
                "test_beta_proportion",
                "true"
              ],
              [
                "test_read_coverage",
                "true"
              ],
              [
                "test_off_target_reaad_alignments",
                "true"
              ],
              [
                "test_unmapped_read_alignments",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_on_target_read_alignments",
                  "0"
                ],
                [
                  "test_beta_proportion",
                  "0"
                ],
                [
                  "test_read_coverage",
                  "0"
                ],
                [
                  "test_off_target_reaad_alignments",
                  "0"
                ],
                [
                  "test_unmapped_read_alignments",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_on_target_read_alignments",
                  "0"
                ],
                [
                  "test_beta_proportion",
                  "0"
                ],
                [
                  "test_read_coverage",
                  "0"
                ],
                [
                  "test_off_target_reaad_alignments",
                  "0"
                ],
                [
                  "test_unmapped_read_alignments",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_on_target_read_alignments",
                "false"
              ],
              [
                "test_beta_proportion",
                "false"
              ],
              [
                "test_read_coverage",
                "false"
              ],
              [
                "test_off_target_reaad_alignments",
                "false"
              ],
              [
                "test_unmapped_read_alignments",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_on_target_read_alignments",
                "false"
              ],
              [
                "test_beta_proportion",
                "false"
              ],
              [
                "test_read_coverage",
                "false"
              ],
              [
                "test_off_target_reaad_alignments",
                "false"
              ],
              [
                "test_unmapped_read_alignments",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_on_target_read_alignments",
                "1"
              ],
              [
                "test_beta_proportion",
                "1"
              ],
              [
                "test_read_coverage",
                "1"
              ],
              [
                "test_off_target_reaad_alignments",
                "1"
              ],
              [
                "test_unmapped_read_alignments",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_on_target_read_alignments",
                [
                  "on_target_alignments"
                ]
              ],
              [
                "test_beta_proportion",
                [
                  "z_threshold",
                  "z_site_count"
                ]
              ],
              [
                "test_read_coverage",
                [
                  "coverage_difference_tolerance",
                  "out_of_tolerance_sites"
                ]
              ],
              [
                "test_off_target_reaad_alignments",
                [
                  "off_target_alignments"
                ]
              ],
              [
                "test_unmapped_read_alignments",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_on_target_read_alignments",
                []
              ],
              [
                "test_beta_proportion",
                []
              ],
              [
                "test_read_coverage",
                []
              ],
              [
                "test_off_target_reaad_alignments",
                []
              ],
              [
                "test_unmapped_read_alignments",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4406813583828943,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_beta_proportion",
                  "test_off_target_reaad_alignments",
                  0.37037983123898205
                ],
                [
                  "test_on_target_read_alignments",
                  "test_off_target_reaad_alignments",
                  0.8267540335004896
                ],
                [
                  "test_beta_proportion",
                  "test_unmapped_read_alignments",
                  0.20054661144059405
                ],
                [
                  "test_on_target_read_alignments",
                  "test_unmapped_read_alignments",
                  0.5607997097862253
                ],
                [
                  "test_beta_proportion",
                  "test_on_target_read_alignments",
                  0.35091705043234583
                ],
                [
                  "test_read_coverage",
                  "test_unmapped_read_alignments",
                  0.2349357469496824
                ],
                [
                  "test_read_coverage",
                  "test_off_target_reaad_alignments",
                  0.36672560046191977
                ],
                [
                  "test_read_coverage",
                  "test_beta_proportion",
                  0.544067553965269
                ],
                [
                  "test_read_coverage",
                  "test_on_target_read_alignments",
                  0.4155997393061967
                ],
                [
                  "test_off_target_reaad_alignments",
                  "test_unmapped_read_alignments",
                  0.5360877067472386
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_on_target_read_alignments",
                "false"
              ],
              [
                "test_beta_proportion",
                "false"
              ],
              [
                "test_read_coverage",
                "false"
              ],
              [
                "test_off_target_reaad_alignments",
                "false"
              ],
              [
                "test_unmapped_read_alignments",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      }
    ]
  },
  {
    "name": "tests_\u0026_test_methylation_calling.py",
    "testCases": [
      {
        "name": "TestMethylationCalling",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_meth_point_vector",
                  "[PyCallExpression: self.assertLess]"
                ],
                [
                  "test_beta_proportion",
                  "[PyCallExpression: self.assertLessEqual]"
                ],
                [
                  "test_read_coverage",
                  "[PyCallExpression: self.assertLessEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_meth_point_vector",
                  "[]"
                ],
                [
                  "test_beta_proportion",
                  "[]"
                ],
                [
                  "test_read_coverage",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_meth_point_vector",
                  "false"
                ],
                [
                  "test_beta_proportion",
                  "true"
                ],
                [
                  "test_read_coverage",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_meth_point_vector",
                  "false"
                ],
                [
                  "test_beta_proportion",
                  "false"
                ],
                [
                  "test_read_coverage",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_meth_point_vector",
                  "false"
                ],
                [
                  "test_beta_proportion",
                  "false"
                ],
                [
                  "test_read_coverage",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_meth_point_vector",
                  "false"
                ],
                [
                  "test_beta_proportion",
                  "false"
                ],
                [
                  "test_read_coverage",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_meth_point_vector",
                "false"
              ],
              [
                "test_beta_proportion",
                "false"
              ],
              [
                "test_read_coverage",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_meth_point_vector",
                "false"
              ],
              [
                "test_beta_proportion",
                "false"
              ],
              [
                "test_read_coverage",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_meth_point_vector",
                []
              ],
              [
                "test_beta_proportion",
                []
              ],
              [
                "test_read_coverage",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_meth_point_vector",
                "false"
              ],
              [
                "test_beta_proportion",
                "false"
              ],
              [
                "test_read_coverage",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_meth_point_vector",
                "true"
              ],
              [
                "test_beta_proportion",
                "true"
              ],
              [
                "test_read_coverage",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_meth_point_vector",
                  "0"
                ],
                [
                  "test_beta_proportion",
                  "0"
                ],
                [
                  "test_read_coverage",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_meth_point_vector",
                  "0"
                ],
                [
                  "test_beta_proportion",
                  "0"
                ],
                [
                  "test_read_coverage",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_meth_point_vector",
                "false"
              ],
              [
                "test_beta_proportion",
                "false"
              ],
              [
                "test_read_coverage",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_meth_point_vector",
                "false"
              ],
              [
                "test_beta_proportion",
                "false"
              ],
              [
                "test_read_coverage",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_meth_point_vector",
                "1"
              ],
              [
                "test_beta_proportion",
                "1"
              ],
              [
                "test_read_coverage",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_meth_point_vector",
                []
              ],
              [
                "test_beta_proportion",
                [
                  "z_threshold",
                  "z_site_count"
                ]
              ],
              [
                "test_read_coverage",
                [
                  "coverage_difference_tolerance",
                  "out_of_tolerance_sites"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_meth_point_vector",
                []
              ],
              [
                "test_beta_proportion",
                []
              ],
              [
                "test_read_coverage",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.37926262453115384,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_read_coverage",
                  "test_beta_proportion",
                  0.5419345841457498
                ],
                [
                  "test_meth_point_vector",
                  "test_beta_proportion",
                  0.3143730417143384
                ],
                [
                  "test_meth_point_vector",
                  "test_read_coverage",
                  0.2814802477333734
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_meth_point_vector",
                "false"
              ],
              [
                "test_beta_proportion",
                "false"
              ],
              [
                "test_read_coverage",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_methylation_masking.py",
    "testCases": [
      {
        "name": "TestSiteMasking",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_masking_proportions",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_same_sites_masked",
                  "[PyCallExpression: self.assertIn]"
                ],
                [
                  "test_known_value_save",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_sites_masked",
                  "[PyCallExpression: self.assertLess]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_masking_proportions",
                  "[]"
                ],
                [
                  "test_same_sites_masked",
                  "[]"
                ],
                [
                  "test_known_value_save",
                  "[]"
                ],
                [
                  "test_sites_masked",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_masking_proportions",
                  "true"
                ],
                [
                  "test_same_sites_masked",
                  "true"
                ],
                [
                  "test_known_value_save",
                  "true"
                ],
                [
                  "test_sites_masked",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_masking_proportions",
                  "false"
                ],
                [
                  "test_same_sites_masked",
                  "false"
                ],
                [
                  "test_known_value_save",
                  "false"
                ],
                [
                  "test_sites_masked",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_masking_proportions",
                  "false"
                ],
                [
                  "test_same_sites_masked",
                  "false"
                ],
                [
                  "test_known_value_save",
                  "false"
                ],
                [
                  "test_sites_masked",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_masking_proportions",
                  "false"
                ],
                [
                  "test_same_sites_masked",
                  "false"
                ],
                [
                  "test_known_value_save",
                  "false"
                ],
                [
                  "test_sites_masked",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_masking_proportions",
                "false"
              ],
              [
                "test_same_sites_masked",
                "false"
              ],
              [
                "test_known_value_save",
                "false"
              ],
              [
                "test_sites_masked",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_masking_proportions",
                "false"
              ],
              [
                "test_same_sites_masked",
                "false"
              ],
              [
                "test_known_value_save",
                "false"
              ],
              [
                "test_sites_masked",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_masking_proportions",
                []
              ],
              [
                "test_same_sites_masked",
                []
              ],
              [
                "test_known_value_save",
                []
              ],
              [
                "test_sites_masked",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_masking_proportions",
                "false"
              ],
              [
                "test_same_sites_masked",
                "false"
              ],
              [
                "test_known_value_save",
                "false"
              ],
              [
                "test_sites_masked",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_masking_proportions",
                "true"
              ],
              [
                "test_same_sites_masked",
                "false"
              ],
              [
                "test_known_value_save",
                "false"
              ],
              [
                "test_sites_masked",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_masking_proportions",
                  "0"
                ],
                [
                  "test_same_sites_masked",
                  "0"
                ],
                [
                  "test_known_value_save",
                  "0"
                ],
                [
                  "test_sites_masked",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_masking_proportions",
                  "0"
                ],
                [
                  "test_same_sites_masked",
                  "0"
                ],
                [
                  "test_known_value_save",
                  "0"
                ],
                [
                  "test_sites_masked",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_masking_proportions",
                "false"
              ],
              [
                "test_same_sites_masked",
                "false"
              ],
              [
                "test_known_value_save",
                "false"
              ],
              [
                "test_sites_masked",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_masking_proportions",
                "false"
              ],
              [
                "test_same_sites_masked",
                "false"
              ],
              [
                "test_known_value_save",
                "false"
              ],
              [
                "test_sites_masked",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_masking_proportions",
                "1"
              ],
              [
                "test_same_sites_masked",
                "1"
              ],
              [
                "test_known_value_save",
                "1"
              ],
              [
                "test_sites_masked",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_masking_proportions",
                [
                  "row_index",
                  "column_index"
                ]
              ],
              [
                "test_same_sites_masked",
                []
              ],
              [
                "test_known_value_save",
                [
                  "row_index",
                  "known_value",
                  "column_index"
                ]
              ],
              [
                "test_sites_masked",
                [
                  "masked_row_count",
                  "input_row_count"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_masking_proportions",
                []
              ],
              [
                "test_same_sites_masked",
                []
              ],
              [
                "test_known_value_save",
                []
              ],
              [
                "test_sites_masked",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.3625310888626457,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_known_value_save",
                  "test_masking_proportions",
                  0.4831896338108075
                ],
                [
                  "test_sites_masked",
                  "test_masking_proportions",
                  0.3366384881413787
                ],
                [
                  "test_sites_masked",
                  "test_known_value_save",
                  0.3276240623114406
                ],
                [
                  "test_sites_masked",
                  "test_same_sites_masked",
                  0.2864165750631024
                ],
                [
                  "test_same_sites_masked",
                  "test_known_value_save",
                  0.27975144247209416
                ],
                [
                  "test_same_sites_masked",
                  "test_masking_proportions",
                  0.4615663313770509
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_masking_proportions",
                "false"
              ],
              [
                "test_same_sites_masked",
                "false"
              ],
              [
                "test_known_value_save",
                "false"
              ],
              [
                "test_sites_masked",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "tests_\u0026_test_single_end_alignment.py",
    "testCases": [
      {
        "name": "TestSingleEndAlignment",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_file_exists",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_file_exists",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_file_exists",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_file_exists",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_file_exists",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_file_exists",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_file_exists",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_file_exists",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_file_exists",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_file_exists",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_file_exists",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_file_exists",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_file_exists",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_file_exists",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_file_exists",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_file_exists",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_file_exists",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_file_exists",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_file_exists",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_alignment_se_pipeline.py",
    "testCases": [
      {
        "name": "TestBSBPipeline",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_read_coverage",
                  "[PyCallExpression: self.assertLessEqual]"
                ],
                [
                  "test_beta_proportion",
                  "[PyCallExpression: self.assertLessEqual]"
                ],
                [
                  "test_on_target_read_alignments",
                  "[PyCallExpression: self.assertGreater]"
                ],
                [
                  "test_off_target_reaad_alignments",
                  "[PyCallExpression: self.assertLess]"
                ],
                [
                  "test_unmapped_read_alignments",
                  "[PyCallExpression: self.assertLess]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_read_coverage",
                  "[]"
                ],
                [
                  "test_beta_proportion",
                  "[]"
                ],
                [
                  "test_on_target_read_alignments",
                  "[]"
                ],
                [
                  "test_off_target_reaad_alignments",
                  "[]"
                ],
                [
                  "test_unmapped_read_alignments",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_read_coverage",
                  "true"
                ],
                [
                  "test_beta_proportion",
                  "true"
                ],
                [
                  "test_on_target_read_alignments",
                  "false"
                ],
                [
                  "test_off_target_reaad_alignments",
                  "false"
                ],
                [
                  "test_unmapped_read_alignments",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_read_coverage",
                  "false"
                ],
                [
                  "test_beta_proportion",
                  "false"
                ],
                [
                  "test_on_target_read_alignments",
                  "false"
                ],
                [
                  "test_off_target_reaad_alignments",
                  "false"
                ],
                [
                  "test_unmapped_read_alignments",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_read_coverage",
                  "false"
                ],
                [
                  "test_beta_proportion",
                  "false"
                ],
                [
                  "test_on_target_read_alignments",
                  "false"
                ],
                [
                  "test_off_target_reaad_alignments",
                  "false"
                ],
                [
                  "test_unmapped_read_alignments",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_read_coverage",
                  "false"
                ],
                [
                  "test_beta_proportion",
                  "false"
                ],
                [
                  "test_on_target_read_alignments",
                  "false"
                ],
                [
                  "test_off_target_reaad_alignments",
                  "false"
                ],
                [
                  "test_unmapped_read_alignments",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_read_coverage",
                "false"
              ],
              [
                "test_beta_proportion",
                "false"
              ],
              [
                "test_on_target_read_alignments",
                "false"
              ],
              [
                "test_off_target_reaad_alignments",
                "false"
              ],
              [
                "test_unmapped_read_alignments",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_read_coverage",
                "false"
              ],
              [
                "test_beta_proportion",
                "false"
              ],
              [
                "test_on_target_read_alignments",
                "false"
              ],
              [
                "test_off_target_reaad_alignments",
                "false"
              ],
              [
                "test_unmapped_read_alignments",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_read_coverage",
                []
              ],
              [
                "test_beta_proportion",
                []
              ],
              [
                "test_on_target_read_alignments",
                []
              ],
              [
                "test_off_target_reaad_alignments",
                []
              ],
              [
                "test_unmapped_read_alignments",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_read_coverage",
                "false"
              ],
              [
                "test_beta_proportion",
                "false"
              ],
              [
                "test_on_target_read_alignments",
                "false"
              ],
              [
                "test_off_target_reaad_alignments",
                "false"
              ],
              [
                "test_unmapped_read_alignments",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_read_coverage",
                "true"
              ],
              [
                "test_beta_proportion",
                "true"
              ],
              [
                "test_on_target_read_alignments",
                "true"
              ],
              [
                "test_off_target_reaad_alignments",
                "true"
              ],
              [
                "test_unmapped_read_alignments",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_read_coverage",
                  "0"
                ],
                [
                  "test_beta_proportion",
                  "0"
                ],
                [
                  "test_on_target_read_alignments",
                  "0"
                ],
                [
                  "test_off_target_reaad_alignments",
                  "0"
                ],
                [
                  "test_unmapped_read_alignments",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_read_coverage",
                  "0"
                ],
                [
                  "test_beta_proportion",
                  "0"
                ],
                [
                  "test_on_target_read_alignments",
                  "0"
                ],
                [
                  "test_off_target_reaad_alignments",
                  "0"
                ],
                [
                  "test_unmapped_read_alignments",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_read_coverage",
                "false"
              ],
              [
                "test_beta_proportion",
                "false"
              ],
              [
                "test_on_target_read_alignments",
                "false"
              ],
              [
                "test_off_target_reaad_alignments",
                "false"
              ],
              [
                "test_unmapped_read_alignments",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_read_coverage",
                "false"
              ],
              [
                "test_beta_proportion",
                "false"
              ],
              [
                "test_on_target_read_alignments",
                "false"
              ],
              [
                "test_off_target_reaad_alignments",
                "false"
              ],
              [
                "test_unmapped_read_alignments",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_read_coverage",
                "1"
              ],
              [
                "test_beta_proportion",
                "1"
              ],
              [
                "test_on_target_read_alignments",
                "1"
              ],
              [
                "test_off_target_reaad_alignments",
                "1"
              ],
              [
                "test_unmapped_read_alignments",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_read_coverage",
                [
                  "coverage_difference_tolerance",
                  "out_of_tolerance_sites"
                ]
              ],
              [
                "test_beta_proportion",
                [
                  "z_threshold",
                  "z_site_count"
                ]
              ],
              [
                "test_on_target_read_alignments",
                [
                  "on_target_alignments"
                ]
              ],
              [
                "test_off_target_reaad_alignments",
                [
                  "off_target_alignments"
                ]
              ],
              [
                "test_unmapped_read_alignments",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_read_coverage",
                []
              ],
              [
                "test_beta_proportion",
                []
              ],
              [
                "test_on_target_read_alignments",
                []
              ],
              [
                "test_off_target_reaad_alignments",
                []
              ],
              [
                "test_unmapped_read_alignments",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4406813583828943,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_beta_proportion",
                  "test_unmapped_read_alignments",
                  0.20054661144059405
                ],
                [
                  "test_off_target_reaad_alignments",
                  "test_unmapped_read_alignments",
                  0.5360877067472386
                ],
                [
                  "test_read_coverage",
                  "test_on_target_read_alignments",
                  0.4155997393061967
                ],
                [
                  "test_read_coverage",
                  "test_beta_proportion",
                  0.544067553965269
                ],
                [
                  "test_on_target_read_alignments",
                  "test_unmapped_read_alignments",
                  0.5607997097862253
                ],
                [
                  "test_read_coverage",
                  "test_off_target_reaad_alignments",
                  0.36672560046191977
                ],
                [
                  "test_read_coverage",
                  "test_unmapped_read_alignments",
                  0.2349357469496824
                ],
                [
                  "test_beta_proportion",
                  "test_on_target_read_alignments",
                  0.35091705043234583
                ],
                [
                  "test_beta_proportion",
                  "test_off_target_reaad_alignments",
                  0.37037983123898205
                ],
                [
                  "test_on_target_read_alignments",
                  "test_off_target_reaad_alignments",
                  0.8267540335004896
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_read_coverage",
                "false"
              ],
              [
                "test_beta_proportion",
                "false"
              ],
              [
                "test_on_target_read_alignments",
                "false"
              ],
              [
                "test_off_target_reaad_alignments",
                "false"
              ],
              [
                "test_unmapped_read_alignments",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      }
    ]
  },
  {
    "name": "tests_\u0026_test_methylation_value_setting.py",
    "testCases": [
      {
        "name": "TestReferenceSetting",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_cg_c",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_ch",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_cg_g",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_cg_c",
                  "[]"
                ],
                [
                  "test_ch",
                  "[]"
                ],
                [
                  "test_cg_g",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_cg_c",
                  "true"
                ],
                [
                  "test_ch",
                  "true"
                ],
                [
                  "test_cg_g",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_cg_c",
                  "false"
                ],
                [
                  "test_ch",
                  "false"
                ],
                [
                  "test_cg_g",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_cg_c",
                  "false"
                ],
                [
                  "test_ch",
                  "false"
                ],
                [
                  "test_cg_g",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_cg_c",
                  "false"
                ],
                [
                  "test_ch",
                  "false"
                ],
                [
                  "test_cg_g",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cg_c",
                "false"
              ],
              [
                "test_ch",
                "false"
              ],
              [
                "test_cg_g",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_cg_c",
                "false"
              ],
              [
                "test_ch",
                "false"
              ],
              [
                "test_cg_g",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_cg_c",
                []
              ],
              [
                "test_ch",
                []
              ],
              [
                "test_cg_g",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cg_c",
                "false"
              ],
              [
                "test_ch",
                "false"
              ],
              [
                "test_cg_g",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_cg_c",
                "true"
              ],
              [
                "test_ch",
                "true"
              ],
              [
                "test_cg_g",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_cg_c",
                  "0"
                ],
                [
                  "test_ch",
                  "0"
                ],
                [
                  "test_cg_g",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_cg_c",
                  "0"
                ],
                [
                  "test_ch",
                  "0"
                ],
                [
                  "test_cg_g",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_cg_c",
                "false"
              ],
              [
                "test_ch",
                "false"
              ],
              [
                "test_cg_g",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cg_c",
                "false"
              ],
              [
                "test_ch",
                "false"
              ],
              [
                "test_cg_g",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cg_c",
                "2"
              ],
              [
                "test_ch",
                "2"
              ],
              [
                "test_cg_g",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_cg_c",
                [
                  "site_profile"
                ]
              ],
              [
                "test_ch",
                [
                  "site_profile"
                ]
              ],
              [
                "test_cg_g",
                [
                  "site_profile"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_cg_c",
                []
              ],
              [
                "test_ch",
                []
              ],
              [
                "test_cg_g",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9133583153609433,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_cg_c",
                  "test_cg_g",
                  0.9583333333333335
                ],
                [
                  "test_cg_c",
                  "test_ch",
                  0.890870806374748
                ],
                [
                  "test_cg_g",
                  "test_ch",
                  0.890870806374748
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_cg_c",
                "false"
              ],
              [
                "test_ch",
                "false"
              ],
              [
                "test_cg_g",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_simulation_read_methylation.py",
    "testCases": [
      {
        "name": "TestReadMethylationSetting",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_crick_cigar",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_read_d_cigar",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_read_m_w_seq",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_read_m_w_2_cigar",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_read_m_w_2_seq",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_crick_seq_2",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_crick_seq",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_crick_cigar_2",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_read_m_w_cigar",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_read_i_cigar",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_read_x_seq",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_read_i_seq",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_read_x_cigar",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_read_d_seq",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_crick_cigar",
                  "[]"
                ],
                [
                  "test_read_d_cigar",
                  "[]"
                ],
                [
                  "test_read_m_w_seq",
                  "[]"
                ],
                [
                  "test_read_m_w_2_cigar",
                  "[]"
                ],
                [
                  "test_read_m_w_2_seq",
                  "[]"
                ],
                [
                  "test_crick_seq_2",
                  "[]"
                ],
                [
                  "test_crick_seq",
                  "[]"
                ],
                [
                  "test_crick_cigar_2",
                  "[]"
                ],
                [
                  "test_read_m_w_cigar",
                  "[]"
                ],
                [
                  "test_read_i_cigar",
                  "[]"
                ],
                [
                  "test_read_x_seq",
                  "[]"
                ],
                [
                  "test_read_i_seq",
                  "[]"
                ],
                [
                  "test_read_x_cigar",
                  "[]"
                ],
                [
                  "test_read_d_seq",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_crick_cigar",
                  "false"
                ],
                [
                  "test_read_d_cigar",
                  "false"
                ],
                [
                  "test_read_m_w_seq",
                  "false"
                ],
                [
                  "test_read_m_w_2_cigar",
                  "false"
                ],
                [
                  "test_read_m_w_2_seq",
                  "false"
                ],
                [
                  "test_crick_seq_2",
                  "false"
                ],
                [
                  "test_crick_seq",
                  "false"
                ],
                [
                  "test_crick_cigar_2",
                  "false"
                ],
                [
                  "test_read_m_w_cigar",
                  "false"
                ],
                [
                  "test_read_i_cigar",
                  "false"
                ],
                [
                  "test_read_x_seq",
                  "false"
                ],
                [
                  "test_read_i_seq",
                  "false"
                ],
                [
                  "test_read_x_cigar",
                  "false"
                ],
                [
                  "test_read_d_seq",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_crick_cigar",
                  "false"
                ],
                [
                  "test_read_d_cigar",
                  "false"
                ],
                [
                  "test_read_m_w_seq",
                  "false"
                ],
                [
                  "test_read_m_w_2_cigar",
                  "false"
                ],
                [
                  "test_read_m_w_2_seq",
                  "false"
                ],
                [
                  "test_crick_seq_2",
                  "false"
                ],
                [
                  "test_crick_seq",
                  "false"
                ],
                [
                  "test_crick_cigar_2",
                  "false"
                ],
                [
                  "test_read_m_w_cigar",
                  "false"
                ],
                [
                  "test_read_i_cigar",
                  "false"
                ],
                [
                  "test_read_x_seq",
                  "false"
                ],
                [
                  "test_read_i_seq",
                  "false"
                ],
                [
                  "test_read_x_cigar",
                  "false"
                ],
                [
                  "test_read_d_seq",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_crick_cigar",
                  "false"
                ],
                [
                  "test_read_d_cigar",
                  "false"
                ],
                [
                  "test_read_m_w_seq",
                  "false"
                ],
                [
                  "test_read_m_w_2_cigar",
                  "false"
                ],
                [
                  "test_read_m_w_2_seq",
                  "false"
                ],
                [
                  "test_crick_seq_2",
                  "false"
                ],
                [
                  "test_crick_seq",
                  "false"
                ],
                [
                  "test_crick_cigar_2",
                  "false"
                ],
                [
                  "test_read_m_w_cigar",
                  "false"
                ],
                [
                  "test_read_i_cigar",
                  "false"
                ],
                [
                  "test_read_x_seq",
                  "false"
                ],
                [
                  "test_read_i_seq",
                  "false"
                ],
                [
                  "test_read_x_cigar",
                  "false"
                ],
                [
                  "test_read_d_seq",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_crick_cigar",
                  "false"
                ],
                [
                  "test_read_d_cigar",
                  "false"
                ],
                [
                  "test_read_m_w_seq",
                  "false"
                ],
                [
                  "test_read_m_w_2_cigar",
                  "false"
                ],
                [
                  "test_read_m_w_2_seq",
                  "false"
                ],
                [
                  "test_crick_seq_2",
                  "false"
                ],
                [
                  "test_crick_seq",
                  "false"
                ],
                [
                  "test_crick_cigar_2",
                  "false"
                ],
                [
                  "test_read_m_w_cigar",
                  "false"
                ],
                [
                  "test_read_i_cigar",
                  "false"
                ],
                [
                  "test_read_x_seq",
                  "false"
                ],
                [
                  "test_read_i_seq",
                  "false"
                ],
                [
                  "test_read_x_cigar",
                  "false"
                ],
                [
                  "test_read_d_seq",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_crick_cigar",
                "false"
              ],
              [
                "test_read_d_cigar",
                "false"
              ],
              [
                "test_read_m_w_seq",
                "false"
              ],
              [
                "test_read_m_w_2_cigar",
                "false"
              ],
              [
                "test_read_m_w_2_seq",
                "false"
              ],
              [
                "test_crick_seq_2",
                "false"
              ],
              [
                "test_crick_seq",
                "false"
              ],
              [
                "test_crick_cigar_2",
                "false"
              ],
              [
                "test_read_m_w_cigar",
                "false"
              ],
              [
                "test_read_i_cigar",
                "false"
              ],
              [
                "test_read_x_seq",
                "false"
              ],
              [
                "test_read_i_seq",
                "false"
              ],
              [
                "test_read_x_cigar",
                "false"
              ],
              [
                "test_read_d_seq",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_crick_cigar",
                "false"
              ],
              [
                "test_read_d_cigar",
                "false"
              ],
              [
                "test_read_m_w_seq",
                "false"
              ],
              [
                "test_read_m_w_2_cigar",
                "false"
              ],
              [
                "test_read_m_w_2_seq",
                "false"
              ],
              [
                "test_crick_seq_2",
                "false"
              ],
              [
                "test_crick_seq",
                "false"
              ],
              [
                "test_crick_cigar_2",
                "false"
              ],
              [
                "test_read_m_w_cigar",
                "false"
              ],
              [
                "test_read_i_cigar",
                "false"
              ],
              [
                "test_read_x_seq",
                "false"
              ],
              [
                "test_read_i_seq",
                "false"
              ],
              [
                "test_read_x_cigar",
                "false"
              ],
              [
                "test_read_d_seq",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_crick_cigar",
                []
              ],
              [
                "test_read_d_cigar",
                []
              ],
              [
                "test_read_m_w_seq",
                []
              ],
              [
                "test_read_m_w_2_cigar",
                []
              ],
              [
                "test_read_m_w_2_seq",
                []
              ],
              [
                "test_crick_seq_2",
                []
              ],
              [
                "test_crick_seq",
                []
              ],
              [
                "test_crick_cigar_2",
                []
              ],
              [
                "test_read_m_w_cigar",
                []
              ],
              [
                "test_read_i_cigar",
                []
              ],
              [
                "test_read_x_seq",
                []
              ],
              [
                "test_read_i_seq",
                []
              ],
              [
                "test_read_x_cigar",
                []
              ],
              [
                "test_read_d_seq",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_crick_cigar",
                "false"
              ],
              [
                "test_read_d_cigar",
                "false"
              ],
              [
                "test_read_m_w_seq",
                "false"
              ],
              [
                "test_read_m_w_2_cigar",
                "false"
              ],
              [
                "test_read_m_w_2_seq",
                "false"
              ],
              [
                "test_crick_seq_2",
                "false"
              ],
              [
                "test_crick_seq",
                "false"
              ],
              [
                "test_crick_cigar_2",
                "false"
              ],
              [
                "test_read_m_w_cigar",
                "false"
              ],
              [
                "test_read_i_cigar",
                "false"
              ],
              [
                "test_read_x_seq",
                "false"
              ],
              [
                "test_read_i_seq",
                "false"
              ],
              [
                "test_read_x_cigar",
                "false"
              ],
              [
                "test_read_d_seq",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_crick_cigar",
                "false"
              ],
              [
                "test_read_d_cigar",
                "false"
              ],
              [
                "test_read_m_w_seq",
                "false"
              ],
              [
                "test_read_m_w_2_cigar",
                "false"
              ],
              [
                "test_read_m_w_2_seq",
                "false"
              ],
              [
                "test_crick_seq_2",
                "false"
              ],
              [
                "test_crick_seq",
                "false"
              ],
              [
                "test_crick_cigar_2",
                "false"
              ],
              [
                "test_read_m_w_cigar",
                "false"
              ],
              [
                "test_read_i_cigar",
                "false"
              ],
              [
                "test_read_x_seq",
                "false"
              ],
              [
                "test_read_i_seq",
                "false"
              ],
              [
                "test_read_x_cigar",
                "false"
              ],
              [
                "test_read_d_seq",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_crick_cigar",
                  "0"
                ],
                [
                  "test_read_d_cigar",
                  "0"
                ],
                [
                  "test_read_m_w_seq",
                  "0"
                ],
                [
                  "test_read_m_w_2_cigar",
                  "0"
                ],
                [
                  "test_read_m_w_2_seq",
                  "0"
                ],
                [
                  "test_crick_seq_2",
                  "0"
                ],
                [
                  "test_crick_seq",
                  "0"
                ],
                [
                  "test_crick_cigar_2",
                  "0"
                ],
                [
                  "test_read_m_w_cigar",
                  "0"
                ],
                [
                  "test_read_i_cigar",
                  "0"
                ],
                [
                  "test_read_x_seq",
                  "0"
                ],
                [
                  "test_read_i_seq",
                  "0"
                ],
                [
                  "test_read_x_cigar",
                  "0"
                ],
                [
                  "test_read_d_seq",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_crick_cigar",
                  "0"
                ],
                [
                  "test_read_d_cigar",
                  "0"
                ],
                [
                  "test_read_m_w_seq",
                  "0"
                ],
                [
                  "test_read_m_w_2_cigar",
                  "0"
                ],
                [
                  "test_read_m_w_2_seq",
                  "0"
                ],
                [
                  "test_crick_seq_2",
                  "0"
                ],
                [
                  "test_crick_seq",
                  "0"
                ],
                [
                  "test_crick_cigar_2",
                  "0"
                ],
                [
                  "test_read_m_w_cigar",
                  "0"
                ],
                [
                  "test_read_i_cigar",
                  "0"
                ],
                [
                  "test_read_x_seq",
                  "0"
                ],
                [
                  "test_read_i_seq",
                  "0"
                ],
                [
                  "test_read_x_cigar",
                  "0"
                ],
                [
                  "test_read_d_seq",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_crick_cigar",
                "false"
              ],
              [
                "test_read_d_cigar",
                "false"
              ],
              [
                "test_read_m_w_seq",
                "false"
              ],
              [
                "test_read_m_w_2_cigar",
                "false"
              ],
              [
                "test_read_m_w_2_seq",
                "false"
              ],
              [
                "test_crick_seq_2",
                "false"
              ],
              [
                "test_crick_seq",
                "false"
              ],
              [
                "test_crick_cigar_2",
                "false"
              ],
              [
                "test_read_m_w_cigar",
                "false"
              ],
              [
                "test_read_i_cigar",
                "false"
              ],
              [
                "test_read_x_seq",
                "false"
              ],
              [
                "test_read_i_seq",
                "false"
              ],
              [
                "test_read_x_cigar",
                "false"
              ],
              [
                "test_read_d_seq",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_crick_cigar",
                "false"
              ],
              [
                "test_read_d_cigar",
                "false"
              ],
              [
                "test_read_m_w_seq",
                "false"
              ],
              [
                "test_read_m_w_2_cigar",
                "false"
              ],
              [
                "test_read_m_w_2_seq",
                "false"
              ],
              [
                "test_crick_seq_2",
                "false"
              ],
              [
                "test_crick_seq",
                "false"
              ],
              [
                "test_crick_cigar_2",
                "false"
              ],
              [
                "test_read_m_w_cigar",
                "false"
              ],
              [
                "test_read_i_cigar",
                "false"
              ],
              [
                "test_read_x_seq",
                "false"
              ],
              [
                "test_read_i_seq",
                "false"
              ],
              [
                "test_read_x_cigar",
                "false"
              ],
              [
                "test_read_d_seq",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_crick_cigar",
                "1"
              ],
              [
                "test_read_d_cigar",
                "1"
              ],
              [
                "test_read_m_w_seq",
                "1"
              ],
              [
                "test_read_m_w_2_cigar",
                "1"
              ],
              [
                "test_read_m_w_2_seq",
                "1"
              ],
              [
                "test_crick_seq_2",
                "1"
              ],
              [
                "test_crick_seq",
                "1"
              ],
              [
                "test_crick_cigar_2",
                "1"
              ],
              [
                "test_read_m_w_cigar",
                "1"
              ],
              [
                "test_read_i_cigar",
                "1"
              ],
              [
                "test_read_x_seq",
                "1"
              ],
              [
                "test_read_i_seq",
                "1"
              ],
              [
                "test_read_x_cigar",
                "1"
              ],
              [
                "test_read_d_seq",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_crick_cigar",
                []
              ],
              [
                "test_read_d_cigar",
                []
              ],
              [
                "test_read_m_w_seq",
                []
              ],
              [
                "test_read_m_w_2_cigar",
                []
              ],
              [
                "test_read_m_w_2_seq",
                []
              ],
              [
                "test_crick_seq_2",
                []
              ],
              [
                "test_crick_seq",
                []
              ],
              [
                "test_crick_cigar_2",
                []
              ],
              [
                "test_read_m_w_cigar",
                []
              ],
              [
                "test_read_i_cigar",
                []
              ],
              [
                "test_read_x_seq",
                []
              ],
              [
                "test_read_i_seq",
                []
              ],
              [
                "test_read_x_cigar",
                []
              ],
              [
                "test_read_d_seq",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_crick_cigar",
                []
              ],
              [
                "test_read_d_cigar",
                []
              ],
              [
                "test_read_m_w_seq",
                []
              ],
              [
                "test_read_m_w_2_cigar",
                []
              ],
              [
                "test_read_m_w_2_seq",
                []
              ],
              [
                "test_crick_seq_2",
                []
              ],
              [
                "test_crick_seq",
                []
              ],
              [
                "test_crick_cigar_2",
                []
              ],
              [
                "test_read_m_w_cigar",
                []
              ],
              [
                "test_read_i_cigar",
                []
              ],
              [
                "test_read_x_seq",
                []
              ],
              [
                "test_read_i_seq",
                []
              ],
              [
                "test_read_x_cigar",
                []
              ],
              [
                "test_read_d_seq",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4496092494983031,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_crick_seq",
                  "test_crick_cigar",
                  0.625
                ],
                [
                  "test_read_m_w_cigar",
                  "test_read_x_cigar",
                  0.48304589153964794
                ],
                [
                  "test_crick_seq",
                  "test_read_d_cigar",
                  0.2672612419124244
                ],
                [
                  "test_read_m_w_seq",
                  "test_read_d_cigar",
                  0.41403933560541256
                ],
                [
                  "test_read_m_w_2_seq",
                  "test_crick_seq",
                  0.3913118960624632
                ],
                [
                  "test_read_x_seq",
                  "test_read_d_cigar",
                  0.42857142857142855
                ],
                [
                  "test_read_m_w_2_cigar",
                  "test_crick_seq_2",
                  0.4338609156373123
                ],
                [
                  "test_crick_cigar",
                  "test_read_d_seq",
                  0.2672612419124244
                ],
                [
                  "test_crick_seq_2",
                  "test_read_x_seq",
                  0.3241018617760822
                ],
                [
                  "test_crick_seq_2",
                  "test_read_i_cigar",
                  0.25928148942086576
                ],
                [
                  "test_crick_seq_2",
                  "test_crick_cigar_2",
                  0.8235294117647058
                ],
                [
                  "test_read_m_w_seq",
                  "test_read_x_seq",
                  0.5520524474738834
                ],
                [
                  "test_read_m_w_seq",
                  "test_read_i_seq",
                  0.5520524474738834
                ],
                [
                  "test_read_m_w_2_seq",
                  "test_read_x_cigar",
                  0.23904572186687872
                ],
                [
                  "test_crick_seq",
                  "test_read_i_cigar",
                  0.2672612419124244
                ],
                [
                  "test_crick_seq_2",
                  "test_read_i_seq",
                  0.3241018617760822
                ],
                [
                  "test_crick_cigar",
                  "test_read_x_seq",
                  0.2672612419124244
                ],
                [
                  "test_crick_seq",
                  "test_crick_cigar_2",
                  0.6669729688499156
                ],
                [
                  "test_read_x_seq",
                  "test_read_i_cigar",
                  0.42857142857142855
                ],
                [
                  "test_read_m_w_seq",
                  "test_read_m_w_2_seq",
                  0.6350852961085883
                ],
                [
                  "test_read_m_w_seq",
                  "test_read_m_w_cigar",
                  0.6666666666666666
                ],
                [
                  "test_read_m_w_2_seq",
                  "test_crick_seq_2",
                  0.4880935300919764
                ],
                [
                  "test_read_m_w_seq",
                  "test_crick_cigar",
                  0.3872983346207417
                ],
                [
                  "test_crick_seq_2",
                  "test_read_d_cigar",
                  0.25928148942086576
                ],
                [
                  "test_crick_cigar_2",
                  "test_read_x_cigar",
                  0.3241018617760822
                ],
                [
                  "test_crick_seq_2",
                  "test_read_d_seq",
                  0.3241018617760822
                ],
                [
                  "test_crick_cigar",
                  "test_crick_seq_2",
                  0.6669729688499156
                ],
                [
                  "test_read_m_w_cigar",
                  "test_crick_seq",
                  0.3872983346207417
                ],
                [
                  "test_read_m_w_2_seq",
                  "test_read_m_w_2_cigar",
                  0.6999999999999998
                ],
                [
                  "test_crick_seq",
                  "test_read_d_seq",
                  0.4008918628686366
                ],
                [
                  "test_read_d_seq",
                  "test_read_i_seq",
                  0.6428571428571429
                ],
                [
                  "test_read_m_w_cigar",
                  "test_crick_cigar",
                  0.5809475019311126
                ],
                [
                  "test_crick_cigar",
                  "test_read_i_seq",
                  0.2672612419124244
                ],
                [
                  "test_read_m_w_seq",
                  "test_read_x_cigar",
                  0.41403933560541256
                ],
                [
                  "test_read_m_w_cigar",
                  "test_read_d_cigar",
                  0.48304589153964794
                ],
                [
                  "test_read_d_seq",
                  "test_read_d_cigar",
                  0.7857142857142857
                ],
                [
                  "test_read_m_w_cigar",
                  "test_crick_seq_2",
                  0.4383570037596046
                ],
                [
                  "test_crick_cigar",
                  "test_read_d_cigar",
                  0.4008918628686366
                ],
                [
                  "test_read_m_w_seq",
                  "test_read_i_cigar",
                  0.41403933560541256
                ],
                [
                  "test_crick_seq",
                  "test_read_i_seq",
                  0.4008918628686366
                ],
                [
                  "test_crick_seq",
                  "test_read_x_seq",
                  0.4008918628686366
                ],
                [
                  "test_read_m_w_cigar",
                  "test_read_m_w_2_cigar",
                  0.808290376865476
                ],
                [
                  "test_read_m_w_2_seq",
                  "test_read_i_seq",
                  0.2988071523335984
                ],
                [
                  "test_read_d_cigar",
                  "test_read_i_cigar",
                  0.6428571428571429
                ],
                [
                  "test_read_m_w_2_seq",
                  "test_read_d_seq",
                  0.2988071523335984
                ],
                [
                  "test_crick_seq_2",
                  "test_read_x_cigar",
                  0.25928148942086576
                ],
                [
                  "test_read_m_w_seq",
                  "test_crick_cigar_2",
                  0.3131121455425747
                ],
                [
                  "test_crick_seq",
                  "test_read_x_cigar",
                  0.2672612419124244
                ],
                [
                  "test_read_m_w_2_seq",
                  "test_read_d_cigar",
                  0.23904572186687872
                ],
                [
                  "test_read_m_w_2_cigar",
                  "test_read_x_seq",
                  0.2988071523335984
                ],
                [
                  "test_read_m_w_2_cigar",
                  "test_read_i_cigar",
                  0.4183300132670378
                ],
                [
                  "test_crick_cigar_2",
                  "test_read_x_seq",
                  0.25928148942086576
                ],
                [
                  "test_crick_cigar_2",
                  "test_read_i_cigar",
                  0.3241018617760822
                ],
                [
                  "test_read_m_w_seq",
                  "test_crick_seq",
                  0.5163977794943222
                ],
                [
                  "test_read_m_w_cigar",
                  "test_read_d_seq",
                  0.3450327796711771
                ],
                [
                  "test_read_x_cigar",
                  "test_read_i_cigar",
                  0.6428571428571429
                ],
                [
                  "test_read_m_w_2_seq",
                  "test_crick_cigar",
                  0.2795084971874737
                ],
                [
                  "test_read_x_cigar",
                  "test_read_i_seq",
                  0.42857142857142855
                ],
                [
                  "test_read_m_w_2_cigar",
                  "test_read_i_seq",
                  0.2988071523335984
                ],
                [
                  "test_read_x_cigar",
                  "test_read_d_seq",
                  0.42857142857142855
                ],
                [
                  "test_read_m_w_2_seq",
                  "test_read_i_cigar",
                  0.23904572186687872
                ],
                [
                  "test_read_m_w_2_seq",
                  "test_crick_cigar_2",
                  0.4338609156373123
                ],
                [
                  "test_read_m_w_2_cigar",
                  "test_read_d_seq",
                  0.2988071523335984
                ],
                [
                  "test_read_m_w_2_seq",
                  "test_read_x_seq",
                  0.2988071523335984
                ],
                [
                  "test_crick_seq",
                  "test_crick_seq_2",
                  0.7882407813680822
                ],
                [
                  "test_crick_cigar_2",
                  "test_read_i_seq",
                  0.25928148942086576
                ],
                [
                  "test_read_d_cigar",
                  "test_read_i_seq",
                  0.42857142857142855
                ],
                [
                  "test_read_m_w_cigar",
                  "test_read_i_seq",
                  0.3450327796711771
                ],
                [
                  "test_crick_cigar",
                  "test_read_x_cigar",
                  0.4008918628686366
                ],
                [
                  "test_read_d_seq",
                  "test_read_i_cigar",
                  0.42857142857142855
                ],
                [
                  "test_read_m_w_cigar",
                  "test_read_x_seq",
                  0.3450327796711771
                ],
                [
                  "test_read_m_w_2_cigar",
                  "test_crick_cigar_2",
                  0.5423261445466404
                ],
                [
                  "test_read_i_seq",
                  "test_read_i_cigar",
                  0.7857142857142857
                ],
                [
                  "test_crick_cigar",
                  "test_crick_cigar_2",
                  0.7882407813680822
                ],
                [
                  "test_read_m_w_seq",
                  "test_read_d_seq",
                  0.5520524474738834
                ],
                [
                  "test_read_x_seq",
                  "test_read_d_seq",
                  0.6428571428571429
                ],
                [
                  "test_read_m_w_cigar",
                  "test_read_m_w_2_seq",
                  0.6350852961085883
                ],
                [
                  "test_read_x_cigar",
                  "test_read_d_cigar",
                  0.6428571428571429
                ],
                [
                  "test_read_m_w_2_cigar",
                  "test_read_d_cigar",
                  0.4183300132670378
                ],
                [
                  "test_crick_cigar_2",
                  "test_read_d_cigar",
                  0.3241018617760822
                ],
                [
                  "test_read_x_seq",
                  "test_read_x_cigar",
                  0.7857142857142857
                ],
                [
                  "test_read_m_w_cigar",
                  "test_crick_cigar_2",
                  0.5636018619766345
                ],
                [
                  "test_read_m_w_2_cigar",
                  "test_crick_cigar",
                  0.5590169943749475
                ],
                [
                  "test_read_m_w_cigar",
                  "test_read_i_cigar",
                  0.48304589153964794
                ],
                [
                  "test_read_m_w_2_cigar",
                  "test_read_x_cigar",
                  0.4183300132670378
                ],
                [
                  "test_crick_cigar_2",
                  "test_read_d_seq",
                  0.25928148942086576
                ],
                [
                  "test_read_m_w_seq",
                  "test_read_m_w_2_cigar",
                  0.6350852961085883
                ],
                [
                  "test_read_m_w_seq",
                  "test_crick_seq_2",
                  0.4383570037596046
                ],
                [
                  "test_crick_cigar",
                  "test_read_i_cigar",
                  0.4008918628686366
                ],
                [
                  "test_read_x_seq",
                  "test_read_i_seq",
                  0.6428571428571429
                ],
                [
                  "test_read_m_w_2_cigar",
                  "test_crick_seq",
                  0.2795084971874737
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_crick_cigar",
                "false"
              ],
              [
                "test_read_d_cigar",
                "false"
              ],
              [
                "test_read_m_w_seq",
                "false"
              ],
              [
                "test_read_m_w_2_cigar",
                "false"
              ],
              [
                "test_read_m_w_2_seq",
                "false"
              ],
              [
                "test_crick_seq_2",
                "false"
              ],
              [
                "test_crick_seq",
                "false"
              ],
              [
                "test_crick_cigar_2",
                "false"
              ],
              [
                "test_read_m_w_cigar",
                "false"
              ],
              [
                "test_read_i_cigar",
                "false"
              ],
              [
                "test_read_x_seq",
                "false"
              ],
              [
                "test_read_i_seq",
                "false"
              ],
              [
                "test_read_x_cigar",
                "false"
              ],
              [
                "test_read_d_seq",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 14
      }
    ]
  }
]