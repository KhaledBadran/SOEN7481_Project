[
  {
    "name": "tests_\u0026_test_pdfconverter.py",
    "testCases": [
      {
        "name": "TestPDFConverter",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_next_document",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertListEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertListEqual, PyCallExpression: self.assertFalse]"
                ],
                [
                  "test_convert_all",
                  "[PyCallExpression: self.assertListEqual, PyCallExpression: self.assertFalse]"
                ],
                [
                  "test_next_image",
                  "[PyCallExpression: self.assertListEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertFalse]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_next_document",
                  "[]"
                ],
                [
                  "test_convert_all",
                  "[]"
                ],
                [
                  "test_next_image",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_next_document",
                  "true"
                ],
                [
                  "test_convert_all",
                  "true"
                ],
                [
                  "test_next_image",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_next_document",
                  "false"
                ],
                [
                  "test_convert_all",
                  "false"
                ],
                [
                  "test_next_image",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_next_document",
                  "false"
                ],
                [
                  "test_convert_all",
                  "false"
                ],
                [
                  "test_next_image",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_next_document",
                  "false"
                ],
                [
                  "test_convert_all",
                  "false"
                ],
                [
                  "test_next_image",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_next_document",
                "false"
              ],
              [
                "test_convert_all",
                "false"
              ],
              [
                "test_next_image",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_next_document",
                "false"
              ],
              [
                "test_convert_all",
                "false"
              ],
              [
                "test_next_image",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_next_document",
                [
                  "self.in_path",
                  "self.extension"
                ]
              ],
              [
                "test_convert_all",
                [
                  "self.next_image_answ_path",
                  "self.in_path",
                  "self.extension"
                ]
              ],
              [
                "test_next_image",
                [
                  "self.in_path",
                  "self.extension"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_next_document",
                "false"
              ],
              [
                "test_convert_all",
                "false"
              ],
              [
                "test_next_image",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_next_document",
                "true"
              ],
              [
                "test_convert_all",
                "false"
              ],
              [
                "test_next_image",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_next_document",
                  "0"
                ],
                [
                  "test_convert_all",
                  "0"
                ],
                [
                  "test_next_image",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_next_document",
                  "0"
                ],
                [
                  "test_convert_all",
                  "0"
                ],
                [
                  "test_next_image",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_next_document",
                "false"
              ],
              [
                "test_convert_all",
                "false"
              ],
              [
                "test_next_image",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_next_document",
                "false"
              ],
              [
                "test_convert_all",
                "false"
              ],
              [
                "test_next_image",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_next_document",
                "5"
              ],
              [
                "test_convert_all",
                "2"
              ],
              [
                "test_next_image",
                "3"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_next_document",
                [
                  "paths"
                ]
              ],
              [
                "test_convert_all",
                [
                  "listdir"
                ]
              ],
              [
                "test_next_image",
                [
                  "path",
                  "paths",
                  "ind"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_next_document",
                [
                  "self.out_path",
                  "self.next_image_answ_path",
                  "self.pdf_converter"
                ]
              ],
              [
                "test_convert_all",
                [
                  "self.out_path",
                  "self.pdf_converter"
                ]
              ],
              [
                "test_next_image",
                [
                  "self.out_path",
                  "self.next_image_answ_path",
                  "self.pdf_converter"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4849815782586126,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_convert_all",
                  "test_next_image",
                  0.5590806290513489
                ],
                [
                  "test_convert_all",
                  "test_next_document",
                  0.333301298992446
                ],
                [
                  "test_next_document",
                  "test_next_image",
                  0.5625628067320428
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_next_document",
                "false"
              ],
              [
                "test_convert_all",
                "false"
              ],
              [
                "test_next_image",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_extract_tables.py",
    "testCases": [
      {
        "name": "TestPDFConverter",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_extract_table",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_extract_table",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_extract_table",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_extract_table",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_extract_table",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_extract_table",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_extract_table",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_extract_table",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_extract_table",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "8"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                [
                  "table"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                [
                  "self.parser",
                  "self.path"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  }
]