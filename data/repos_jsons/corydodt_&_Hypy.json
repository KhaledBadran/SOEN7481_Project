[
  {
    "name": "src_\u0026_hypy_\u0026_test_lib.py",
    "testCases": [
      {
        "name": "TestHDocument",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_dictlike",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_unicodeType",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_text",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_dictlike",
                  "[]"
                ],
                [
                  "test_unicodeType",
                  "[]"
                ],
                [
                  "test_text",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_dictlike",
                  "false"
                ],
                [
                  "test_unicodeType",
                  "false"
                ],
                [
                  "test_text",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_dictlike",
                  "false"
                ],
                [
                  "test_unicodeType",
                  "false"
                ],
                [
                  "test_text",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_dictlike",
                  "false"
                ],
                [
                  "test_unicodeType",
                  "false"
                ],
                [
                  "test_text",
                  "true"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_dictlike",
                  "false"
                ],
                [
                  "test_unicodeType",
                  "false"
                ],
                [
                  "test_text",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_dictlike",
                "false"
              ],
              [
                "test_unicodeType",
                "false"
              ],
              [
                "test_text",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_dictlike",
                "false"
              ],
              [
                "test_unicodeType",
                "false"
              ],
              [
                "test_text",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_dictlike",
                []
              ],
              [
                "test_unicodeType",
                [
                  "self.doc"
                ]
              ],
              [
                "test_text",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_dictlike",
                "false"
              ],
              [
                "test_unicodeType",
                "false"
              ],
              [
                "test_text",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_dictlike",
                "true"
              ],
              [
                "test_unicodeType",
                "false"
              ],
              [
                "test_text",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_dictlike",
                  "0"
                ],
                [
                  "test_unicodeType",
                  "0"
                ],
                [
                  "test_text",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_dictlike",
                  "0"
                ],
                [
                  "test_unicodeType",
                  "0"
                ],
                [
                  "test_text",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_dictlike",
                "false"
              ],
              [
                "test_unicodeType",
                "false"
              ],
              [
                "test_text",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_dictlike",
                "false"
              ],
              [
                "test_unicodeType",
                "false"
              ],
              [
                "test_text",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_dictlike",
                "10"
              ],
              [
                "test_unicodeType",
                "1"
              ],
              [
                "test_text",
                "7"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_dictlike",
                [
                  "newattrs",
                  "doc"
                ]
              ],
              [
                "test_unicodeType",
                []
              ],
              [
                "test_text",
                [
                  "doc"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_dictlike",
                [
                  "self.doc"
                ]
              ],
              [
                "test_unicodeType",
                []
              ],
              [
                "test_text",
                [
                  "self.doc"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4131774443832846,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_text",
                  "test_unicodeType",
                  0.3071015748014148
                ],
                [
                  "test_dictlike",
                  "test_unicodeType",
                  0.44891403355632525
                ],
                [
                  "test_dictlike",
                  "test_text",
                  0.48351672479211366
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_dictlike",
                "true"
              ],
              [
                "test_unicodeType",
                "false"
              ],
              [
                "test_text",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      },
      {
        "name": "TestDatabase",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_dbOptimize",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_autoflush",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_removeUpdate",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertFalse, PyCallExpression: self.assertTrue, PyCallExpression: self.assertFalse, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_removeNulls",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_dbOpenClosed",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assert_, PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_hits",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_condExtras",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_putFlags",
                  "[]"
                ],
                [
                  "test_queries",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_removeURINone",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_dbOptimize",
                  "[]"
                ],
                [
                  "test_autoflush",
                  "[]"
                ],
                [
                  "test_removeUpdate",
                  "[]"
                ],
                [
                  "test_removeNulls",
                  "[]"
                ],
                [
                  "test_dbOpenClosed",
                  "[]"
                ],
                [
                  "test_hits",
                  "[]"
                ],
                [
                  "test_condExtras",
                  "[]"
                ],
                [
                  "test_putFlags",
                  "[]"
                ],
                [
                  "test_queries",
                  "[]"
                ],
                [
                  "test_removeURINone",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_dbOptimize",
                  "false"
                ],
                [
                  "test_autoflush",
                  "false"
                ],
                [
                  "test_removeUpdate",
                  "false"
                ],
                [
                  "test_removeNulls",
                  "false"
                ],
                [
                  "test_dbOpenClosed",
                  "false"
                ],
                [
                  "test_hits",
                  "true"
                ],
                [
                  "test_condExtras",
                  "true"
                ],
                [
                  "test_putFlags",
                  "false"
                ],
                [
                  "test_queries",
                  "false"
                ],
                [
                  "test_removeURINone",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_dbOptimize",
                  "false"
                ],
                [
                  "test_autoflush",
                  "false"
                ],
                [
                  "test_removeUpdate",
                  "false"
                ],
                [
                  "test_removeNulls",
                  "false"
                ],
                [
                  "test_dbOpenClosed",
                  "false"
                ],
                [
                  "test_hits",
                  "false"
                ],
                [
                  "test_condExtras",
                  "false"
                ],
                [
                  "test_putFlags",
                  "false"
                ],
                [
                  "test_queries",
                  "false"
                ],
                [
                  "test_removeURINone",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_dbOptimize",
                  "false"
                ],
                [
                  "test_autoflush",
                  "false"
                ],
                [
                  "test_removeUpdate",
                  "false"
                ],
                [
                  "test_removeNulls",
                  "true"
                ],
                [
                  "test_dbOpenClosed",
                  "true"
                ],
                [
                  "test_hits",
                  "false"
                ],
                [
                  "test_condExtras",
                  "true"
                ],
                [
                  "test_putFlags",
                  "false"
                ],
                [
                  "test_queries",
                  "true"
                ],
                [
                  "test_removeURINone",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_dbOptimize",
                  "false"
                ],
                [
                  "test_autoflush",
                  "false"
                ],
                [
                  "test_removeUpdate",
                  "false"
                ],
                [
                  "test_removeNulls",
                  "false"
                ],
                [
                  "test_dbOpenClosed",
                  "false"
                ],
                [
                  "test_hits",
                  "false"
                ],
                [
                  "test_condExtras",
                  "false"
                ],
                [
                  "test_putFlags",
                  "false"
                ],
                [
                  "test_queries",
                  "false"
                ],
                [
                  "test_removeURINone",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_dbOptimize",
                "false"
              ],
              [
                "test_autoflush",
                "false"
              ],
              [
                "test_removeUpdate",
                "false"
              ],
              [
                "test_removeNulls",
                "false"
              ],
              [
                "test_dbOpenClosed",
                "false"
              ],
              [
                "test_hits",
                "false"
              ],
              [
                "test_condExtras",
                "false"
              ],
              [
                "test_putFlags",
                "false"
              ],
              [
                "test_queries",
                "false"
              ],
              [
                "test_removeURINone",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_dbOptimize",
                "false"
              ],
              [
                "test_autoflush",
                "true"
              ],
              [
                "test_removeUpdate",
                "false"
              ],
              [
                "test_removeNulls",
                "false"
              ],
              [
                "test_dbOpenClosed",
                "false"
              ],
              [
                "test_hits",
                "false"
              ],
              [
                "test_condExtras",
                "false"
              ],
              [
                "test_putFlags",
                "false"
              ],
              [
                "test_queries",
                "false"
              ],
              [
                "test_removeURINone",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_dbOptimize",
                []
              ],
              [
                "test_autoflush",
                []
              ],
              [
                "test_removeUpdate",
                []
              ],
              [
                "test_removeNulls",
                []
              ],
              [
                "test_dbOpenClosed",
                []
              ],
              [
                "test_hits",
                []
              ],
              [
                "test_condExtras",
                []
              ],
              [
                "test_putFlags",
                []
              ],
              [
                "test_queries",
                []
              ],
              [
                "test_removeURINone",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_dbOptimize",
                "false"
              ],
              [
                "test_autoflush",
                "false"
              ],
              [
                "test_removeUpdate",
                "false"
              ],
              [
                "test_removeNulls",
                "false"
              ],
              [
                "test_dbOpenClosed",
                "false"
              ],
              [
                "test_hits",
                "false"
              ],
              [
                "test_condExtras",
                "false"
              ],
              [
                "test_putFlags",
                "false"
              ],
              [
                "test_queries",
                "false"
              ],
              [
                "test_removeURINone",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_dbOptimize",
                "false"
              ],
              [
                "test_autoflush",
                "true"
              ],
              [
                "test_removeUpdate",
                "true"
              ],
              [
                "test_removeNulls",
                "false"
              ],
              [
                "test_dbOpenClosed",
                "true"
              ],
              [
                "test_hits",
                "false"
              ],
              [
                "test_condExtras",
                "true"
              ],
              [
                "test_putFlags",
                "false"
              ],
              [
                "test_queries",
                "true"
              ],
              [
                "test_removeURINone",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_dbOptimize",
                  "0"
                ],
                [
                  "test_autoflush",
                  "0"
                ],
                [
                  "test_removeUpdate",
                  "0"
                ],
                [
                  "test_removeNulls",
                  "0"
                ],
                [
                  "test_dbOpenClosed",
                  "0"
                ],
                [
                  "test_hits",
                  "0"
                ],
                [
                  "test_condExtras",
                  "0"
                ],
                [
                  "test_putFlags",
                  "0"
                ],
                [
                  "test_queries",
                  "0"
                ],
                [
                  "test_removeURINone",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_dbOptimize",
                  "0"
                ],
                [
                  "test_autoflush",
                  "0"
                ],
                [
                  "test_removeUpdate",
                  "0"
                ],
                [
                  "test_removeNulls",
                  "0"
                ],
                [
                  "test_dbOpenClosed",
                  "0"
                ],
                [
                  "test_hits",
                  "0"
                ],
                [
                  "test_condExtras",
                  "0"
                ],
                [
                  "test_putFlags",
                  "0"
                ],
                [
                  "test_queries",
                  "0"
                ],
                [
                  "test_removeURINone",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_dbOptimize",
                "false"
              ],
              [
                "test_autoflush",
                "false"
              ],
              [
                "test_removeUpdate",
                "false"
              ],
              [
                "test_removeNulls",
                "false"
              ],
              [
                "test_dbOpenClosed",
                "false"
              ],
              [
                "test_hits",
                "false"
              ],
              [
                "test_condExtras",
                "false"
              ],
              [
                "test_putFlags",
                "false"
              ],
              [
                "test_queries",
                "false"
              ],
              [
                "test_removeURINone",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_dbOptimize",
                "false"
              ],
              [
                "test_autoflush",
                "false"
              ],
              [
                "test_removeUpdate",
                "false"
              ],
              [
                "test_removeNulls",
                "false"
              ],
              [
                "test_dbOpenClosed",
                "false"
              ],
              [
                "test_hits",
                "false"
              ],
              [
                "test_condExtras",
                "false"
              ],
              [
                "test_putFlags",
                "false"
              ],
              [
                "test_queries",
                "false"
              ],
              [
                "test_removeURINone",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_dbOptimize",
                "1"
              ],
              [
                "test_autoflush",
                "2"
              ],
              [
                "test_removeUpdate",
                "14"
              ],
              [
                "test_removeNulls",
                "4"
              ],
              [
                "test_dbOpenClosed",
                "10"
              ],
              [
                "test_hits",
                "4"
              ],
              [
                "test_condExtras",
                "22"
              ],
              [
                "test_putFlags",
                "0"
              ],
              [
                "test_queries",
                "6"
              ],
              [
                "test_removeURINone",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_dbOptimize",
                []
              ],
              [
                "test_autoflush",
                [
                  "db1",
                  "doc",
                  "cond"
                ]
              ],
              [
                "test_removeUpdate",
                [
                  "doc2",
                  "dbdocxx",
                  "doc3id",
                  "docxx",
                  "db",
                  "dbdocxx2"
                ]
              ],
              [
                "test_removeNulls",
                [
                  "docnulls",
                  "cond"
                ]
              ],
              [
                "test_dbOpenClosed",
                [
                  "docyy",
                  "docxx",
                  "condxx",
                  "condyy",
                  "db"
                ]
              ],
              [
                "test_hits",
                [
                  "cc"
                ]
              ],
              [
                "test_condExtras",
                [
                  "result",
                  "cc",
                  "cond9_11",
                  "cond4_8",
                  "res1",
                  "res2",
                  "cond"
                ]
              ],
              [
                "test_putFlags",
                [
                  "docxx"
                ]
              ],
              [
                "test_queries",
                [
                  "result"
                ]
              ],
              [
                "test_removeURINone",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_dbOptimize",
                []
              ],
              [
                "test_autoflush",
                []
              ],
              [
                "test_removeUpdate",
                []
              ],
              [
                "test_removeNulls",
                []
              ],
              [
                "test_dbOpenClosed",
                []
              ],
              [
                "test_hits",
                []
              ],
              [
                "test_condExtras",
                []
              ],
              [
                "test_putFlags",
                []
              ],
              [
                "test_queries",
                []
              ],
              [
                "test_removeURINone",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.35519364581185003,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_removeUpdate",
                  "test_putFlags",
                  0.42802559888827374
                ],
                [
                  "test_removeURINone",
                  "test_putFlags",
                  0.2834217155626206
                ],
                [
                  "test_removeURINone",
                  "test_dbOpenClosed",
                  0.15308691678530303
                ],
                [
                  "test_dbOpenClosed",
                  "test_autoflush",
                  0.5183581522812868
                ],
                [
                  "test_removeNulls",
                  "test_queries",
                  0.4659228864944076
                ],
                [
                  "test_condExtras",
                  "test_autoflush",
                  0.5497052609464426
                ],
                [
                  "test_putFlags",
                  "test_queries",
                  0.2822994479272134
                ],
                [
                  "test_dbOptimize",
                  "test_autoflush",
                  0.348544839817328
                ],
                [
                  "test_removeURINone",
                  "test_hits",
                  0.220857960734343
                ],
                [
                  "test_removeUpdate",
                  "test_hits",
                  0.3134947447499428
                ],
                [
                  "test_removeNulls",
                  "test_hits",
                  0.2326121150891889
                ],
                [
                  "test_condExtras",
                  "test_queries",
                  0.7188412249680047
                ],
                [
                  "test_dbOptimize",
                  "test_putFlags",
                  0.32190487481784363
                ],
                [
                  "test_putFlags",
                  "test_condExtras",
                  0.22409468537240748
                ],
                [
                  "test_putFlags",
                  "test_autoflush",
                  0.3361655189247521
                ],
                [
                  "test_dbOptimize",
                  "test_removeUpdate",
                  0.26264984801770946
                ],
                [
                  "test_dbOptimize",
                  "test_dbOpenClosed",
                  0.18871087632185923
                ],
                [
                  "test_queries",
                  "test_autoflush",
                  0.3957900552547137
                ],
                [
                  "test_removeNulls",
                  "test_putFlags",
                  0.26154771078949796
                ],
                [
                  "test_removeNulls",
                  "test_condExtras",
                  0.6918103496918455
                ],
                [
                  "test_dbOptimize",
                  "test_condExtras",
                  0.15027028087568775
                ],
                [
                  "test_removeNulls",
                  "test_dbOpenClosed",
                  0.48713737841224125
                ],
                [
                  "test_hits",
                  "test_autoflush",
                  0.45774071571016695
                ],
                [
                  "test_dbOptimize",
                  "test_removeURINone",
                  0.34783279649996723
                ],
                [
                  "test_putFlags",
                  "test_dbOpenClosed",
                  0.3182592804484584
                ],
                [
                  "test_removeUpdate",
                  "test_removeNulls",
                  0.5252996960354189
                ],
                [
                  "test_removeURINone",
                  "test_removeNulls",
                  0.13250773199998753
                ],
                [
                  "test_condExtras",
                  "test_hits",
                  0.2317663222978339
                ],
                [
                  "test_removeUpdate",
                  "test_condExtras",
                  0.6386795123213825
                ],
                [
                  "test_dbOpenClosed",
                  "test_hits",
                  0.23916097626119012
                ],
                [
                  "test_condExtras",
                  "test_dbOpenClosed",
                  0.5588718997814648
                ],
                [
                  "test_removeNulls",
                  "test_autoflush",
                  0.540600159716672
                ],
                [
                  "test_dbOptimize",
                  "test_hits",
                  0.2719772422581286
                ],
                [
                  "test_removeURINone",
                  "test_condExtras",
                  0.09319649201187846
                ],
                [
                  "test_removeURINone",
                  "test_autoflush",
                  0.2481259448693429
                ],
                [
                  "test_dbOptimize",
                  "test_queries",
                  0.23893481358687568
                ],
                [
                  "test_removeUpdate",
                  "test_autoflush",
                  0.5519090534326634
                ],
                [
                  "test_dbOptimize",
                  "test_removeNulls",
                  0.2345679012345679
                ],
                [
                  "test_queries",
                  "test_hits",
                  0.21470646361251738
                ],
                [
                  "test_removeUpdate",
                  "test_queries",
                  0.5083251590453344
                ],
                [
                  "test_putFlags",
                  "test_hits",
                  0.17495760221829332
                ],
                [
                  "test_dbOpenClosed",
                  "test_queries",
                  0.47351942423345533
                ],
                [
                  "test_removeURINone",
                  "test_queries",
                  0.20836704929488284
                ],
                [
                  "test_removeUpdate",
                  "test_removeURINone",
                  0.2570313931464732
                ],
                [
                  "test_removeUpdate",
                  "test_dbOpenClosed",
                  0.6821239887933809
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_dbOptimize",
                "false"
              ],
              [
                "test_autoflush",
                "false"
              ],
              [
                "test_removeUpdate",
                "true"
              ],
              [
                "test_removeNulls",
                "false"
              ],
              [
                "test_dbOpenClosed",
                "false"
              ],
              [
                "test_hits",
                "false"
              ],
              [
                "test_condExtras",
                "false"
              ],
              [
                "test_putFlags",
                "false"
              ],
              [
                "test_queries",
                "false"
              ],
              [
                "test_removeURINone",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 10
      }
    ]
  }
]