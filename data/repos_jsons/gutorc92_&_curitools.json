[
  {
    "name": "curitools_\u0026_tests_\u0026_test_status.py",
    "testCases": [
      {
        "name": "TestSubmissionsPage",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_extract_table",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_extract_table",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_extract_table",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_extract_table",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_extract_table",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_extract_table",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_extract_table",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_extract_table",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_extract_table",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                [
                  "s",
                  "file_name",
                  "repositorio_dir",
                  "fn",
                  "text"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "curitools_\u0026_tests_\u0026_test_subpage.py",
    "testCases": [
      {
        "name": "TestSubPage",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_gettext",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_gettext",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_gettext",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_gettext",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_gettext",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_gettext",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_gettext",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_gettext",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_gettext",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_gettext",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_gettext",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_gettext",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_gettext",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_gettext",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_gettext",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_gettext",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_gettext",
                [
                  "list1",
                  "sub",
                  "list2",
                  "repositorio_dir",
                  "file_submit",
                  "text"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_gettext",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_gettext",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "curitools_\u0026_tests_\u0026_test_listview.py",
    "testCases": [
      {
        "name": "TestSubmissionsPage",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_extract_table",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_extract_table",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_extract_table",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_extract_table",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_extract_table",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_extract_table",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_extract_table",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_extract_table",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_extract_table",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                [
                  "s",
                  "file_name",
                  "repositorio_dir",
                  "fn",
                  "text"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "curitools_\u0026_tests_\u0026_test_settings.py",
    "testCases": [
      {
        "name": "TestSettings",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_get_user_and_password",
                  "[]"
                ],
                [
                  "test_get_user_and_password_and_language",
                  "[]"
                ],
                [
                  "test_create_user",
                  "[]"
                ],
                [
                  "test_execption_setting_required",
                  "[PyCallExpression: self.assertRaises]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_get_user_and_password",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_get_user_and_password_and_language",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_create_user",
                  "[PyAssertStatement]"
                ],
                [
                  "test_execption_setting_required",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_get_user_and_password",
                  "false"
                ],
                [
                  "test_get_user_and_password_and_language",
                  "false"
                ],
                [
                  "test_create_user",
                  "false"
                ],
                [
                  "test_execption_setting_required",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_get_user_and_password",
                  "false"
                ],
                [
                  "test_get_user_and_password_and_language",
                  "false"
                ],
                [
                  "test_create_user",
                  "false"
                ],
                [
                  "test_execption_setting_required",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_get_user_and_password",
                  "false"
                ],
                [
                  "test_get_user_and_password_and_language",
                  "false"
                ],
                [
                  "test_create_user",
                  "false"
                ],
                [
                  "test_execption_setting_required",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_get_user_and_password",
                  "false"
                ],
                [
                  "test_get_user_and_password_and_language",
                  "false"
                ],
                [
                  "test_create_user",
                  "false"
                ],
                [
                  "test_execption_setting_required",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_user_and_password",
                "false"
              ],
              [
                "test_get_user_and_password_and_language",
                "false"
              ],
              [
                "test_create_user",
                "false"
              ],
              [
                "test_execption_setting_required",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_get_user_and_password",
                "false"
              ],
              [
                "test_get_user_and_password_and_language",
                "false"
              ],
              [
                "test_create_user",
                "false"
              ],
              [
                "test_execption_setting_required",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_get_user_and_password",
                []
              ],
              [
                "test_get_user_and_password_and_language",
                []
              ],
              [
                "test_create_user",
                []
              ],
              [
                "test_execption_setting_required",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_user_and_password",
                "false"
              ],
              [
                "test_get_user_and_password_and_language",
                "false"
              ],
              [
                "test_create_user",
                "false"
              ],
              [
                "test_execption_setting_required",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_user_and_password",
                "false"
              ],
              [
                "test_get_user_and_password_and_language",
                "false"
              ],
              [
                "test_create_user",
                "false"
              ],
              [
                "test_execption_setting_required",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_get_user_and_password",
                  "0"
                ],
                [
                  "test_get_user_and_password_and_language",
                  "0"
                ],
                [
                  "test_create_user",
                  "0"
                ],
                [
                  "test_execption_setting_required",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_get_user_and_password",
                  "0"
                ],
                [
                  "test_get_user_and_password_and_language",
                  "0"
                ],
                [
                  "test_create_user",
                  "0"
                ],
                [
                  "test_execption_setting_required",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_get_user_and_password",
                "false"
              ],
              [
                "test_get_user_and_password_and_language",
                "false"
              ],
              [
                "test_create_user",
                "false"
              ],
              [
                "test_execption_setting_required",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_user_and_password",
                "false"
              ],
              [
                "test_get_user_and_password_and_language",
                "false"
              ],
              [
                "test_create_user",
                "false"
              ],
              [
                "test_execption_setting_required",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_user_and_password",
                "2"
              ],
              [
                "test_get_user_and_password_and_language",
                "3"
              ],
              [
                "test_create_user",
                "1"
              ],
              [
                "test_execption_setting_required",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_get_user_and_password",
                [
                  "uritools_dir",
                  "s",
                  "file_settings",
                  "file_created"
                ]
              ],
              [
                "test_get_user_and_password_and_language",
                [
                  "uritools_dir",
                  "s",
                  "file_settings",
                  "file_created"
                ]
              ],
              [
                "test_create_user",
                [
                  "uritools_dir",
                  "s",
                  "file_settings",
                  "file_created"
                ]
              ],
              [
                "test_execption_setting_required",
                [
                  "uritools_dir",
                  "s",
                  "file_settings",
                  "file_created"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_get_user_and_password",
                []
              ],
              [
                "test_get_user_and_password_and_language",
                []
              ],
              [
                "test_create_user",
                []
              ],
              [
                "test_execption_setting_required",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8335059914014947,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_execption_setting_required",
                  "test_get_user_and_password_and_language",
                  0.7470277476012326
                ],
                [
                  "test_create_user",
                  "test_get_user_and_password",
                  0.8400825588825812
                ],
                [
                  "test_create_user",
                  "test_get_user_and_password_and_language",
                  0.798867476108481
                ],
                [
                  "test_create_user",
                  "test_execption_setting_required",
                  0.857643867936873
                ],
                [
                  "test_get_user_and_password",
                  "test_get_user_and_password_and_language",
                  0.9442977667183406
                ],
                [
                  "test_get_user_and_password",
                  "test_execption_setting_required",
                  0.81311653116146
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_get_user_and_password",
                "false"
              ],
              [
                "test_get_user_and_password_and_language",
                "false"
              ],
              [
                "test_create_user",
                "false"
              ],
              [
                "test_execption_setting_required",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "curitools_\u0026_tests_\u0026_test_academicview.py",
    "testCases": [
      {
        "name": "TestSubmissionsPage",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_extract_table",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_extract_table",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_extract_table",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_extract_table",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_extract_table",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_extract_table",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_extract_table",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_extract_table",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_extract_table",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                [
                  "s",
                  "file_name",
                  "repositorio_dir",
                  "fn",
                  "text"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_extract_table",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "curitools_\u0026_tests_\u0026_test_setupproblems.py",
    "testCases": [
      {
        "name": "TestSetupProblem",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_create_makefile",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_hasmakefiles",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertFalse, PyCallExpression: self.assertFalse]"
                ],
                [
                  "test_create_files",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_get_makefile_template",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_create_base_files",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_get_base_template",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_create_makefile",
                  "[]"
                ],
                [
                  "test_hasmakefiles",
                  "[]"
                ],
                [
                  "test_create_files",
                  "[]"
                ],
                [
                  "test_get_makefile_template",
                  "[]"
                ],
                [
                  "test_create_base_files",
                  "[]"
                ],
                [
                  "test_get_base_template",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_create_makefile",
                  "false"
                ],
                [
                  "test_hasmakefiles",
                  "false"
                ],
                [
                  "test_create_files",
                  "false"
                ],
                [
                  "test_get_makefile_template",
                  "false"
                ],
                [
                  "test_create_base_files",
                  "false"
                ],
                [
                  "test_get_base_template",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_create_makefile",
                  "false"
                ],
                [
                  "test_hasmakefiles",
                  "false"
                ],
                [
                  "test_create_files",
                  "false"
                ],
                [
                  "test_get_makefile_template",
                  "false"
                ],
                [
                  "test_create_base_files",
                  "false"
                ],
                [
                  "test_get_base_template",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_create_makefile",
                  "false"
                ],
                [
                  "test_hasmakefiles",
                  "true"
                ],
                [
                  "test_create_files",
                  "false"
                ],
                [
                  "test_get_makefile_template",
                  "false"
                ],
                [
                  "test_create_base_files",
                  "false"
                ],
                [
                  "test_get_base_template",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_create_makefile",
                  "false"
                ],
                [
                  "test_hasmakefiles",
                  "false"
                ],
                [
                  "test_create_files",
                  "false"
                ],
                [
                  "test_get_makefile_template",
                  "false"
                ],
                [
                  "test_create_base_files",
                  "false"
                ],
                [
                  "test_get_base_template",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_create_makefile",
                "false"
              ],
              [
                "test_hasmakefiles",
                "false"
              ],
              [
                "test_create_files",
                "false"
              ],
              [
                "test_get_makefile_template",
                "false"
              ],
              [
                "test_create_base_files",
                "false"
              ],
              [
                "test_get_base_template",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_create_makefile",
                "false"
              ],
              [
                "test_hasmakefiles",
                "false"
              ],
              [
                "test_create_files",
                "false"
              ],
              [
                "test_get_makefile_template",
                "false"
              ],
              [
                "test_create_base_files",
                "false"
              ],
              [
                "test_get_base_template",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_create_makefile",
                [
                  "self.template_dir"
                ]
              ],
              [
                "test_hasmakefiles",
                [
                  "self.test_dir"
                ]
              ],
              [
                "test_create_files",
                []
              ],
              [
                "test_get_makefile_template",
                [
                  "self.test_dir"
                ]
              ],
              [
                "test_create_base_files",
                []
              ],
              [
                "test_get_base_template",
                [
                  "self.test_dir"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_create_makefile",
                "false"
              ],
              [
                "test_hasmakefiles",
                "false"
              ],
              [
                "test_create_files",
                "false"
              ],
              [
                "test_get_makefile_template",
                "false"
              ],
              [
                "test_create_base_files",
                "false"
              ],
              [
                "test_get_base_template",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_create_makefile",
                "false"
              ],
              [
                "test_hasmakefiles",
                "false"
              ],
              [
                "test_create_files",
                "false"
              ],
              [
                "test_get_makefile_template",
                "false"
              ],
              [
                "test_create_base_files",
                "false"
              ],
              [
                "test_get_base_template",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_create_makefile",
                  "0"
                ],
                [
                  "test_hasmakefiles",
                  "0"
                ],
                [
                  "test_create_files",
                  "0"
                ],
                [
                  "test_get_makefile_template",
                  "0"
                ],
                [
                  "test_create_base_files",
                  "0"
                ],
                [
                  "test_get_base_template",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_create_makefile",
                  "0"
                ],
                [
                  "test_hasmakefiles",
                  "0"
                ],
                [
                  "test_create_files",
                  "0"
                ],
                [
                  "test_get_makefile_template",
                  "0"
                ],
                [
                  "test_create_base_files",
                  "0"
                ],
                [
                  "test_get_base_template",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_create_makefile",
                "false"
              ],
              [
                "test_hasmakefiles",
                "false"
              ],
              [
                "test_create_files",
                "false"
              ],
              [
                "test_get_makefile_template",
                "false"
              ],
              [
                "test_create_base_files",
                "false"
              ],
              [
                "test_get_base_template",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_create_makefile",
                "false"
              ],
              [
                "test_hasmakefiles",
                "false"
              ],
              [
                "test_create_files",
                "false"
              ],
              [
                "test_get_makefile_template",
                "false"
              ],
              [
                "test_create_base_files",
                "false"
              ],
              [
                "test_get_base_template",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_create_makefile",
                "1"
              ],
              [
                "test_hasmakefiles",
                "3"
              ],
              [
                "test_create_files",
                "4"
              ],
              [
                "test_get_makefile_template",
                "1"
              ],
              [
                "test_create_base_files",
                "2"
              ],
              [
                "test_get_base_template",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_create_makefile",
                []
              ],
              [
                "test_hasmakefiles",
                []
              ],
              [
                "test_create_files",
                []
              ],
              [
                "test_get_makefile_template",
                [
                  "makefile"
                ]
              ],
              [
                "test_create_base_files",
                []
              ],
              [
                "test_get_base_template",
                [
                  "base_file"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_create_makefile",
                [
                  "self.setup",
                  "self.test_dir"
                ]
              ],
              [
                "test_hasmakefiles",
                [
                  "self.setup",
                  "self.template_dir"
                ]
              ],
              [
                "test_create_files",
                [
                  "self.setup",
                  "self.test_dir",
                  "self.template_dir"
                ]
              ],
              [
                "test_get_makefile_template",
                [
                  "self.setup",
                  "self.template_dir"
                ]
              ],
              [
                "test_create_base_files",
                [
                  "self.setup",
                  "self.test_dir",
                  "self.template_dir"
                ]
              ],
              [
                "test_get_base_template",
                [
                  "self.setup",
                  "self.template_dir"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.3473641304590299,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_get_base_template",
                  "test_create_files",
                  0.22030404580620946
                ],
                [
                  "test_hasmakefiles",
                  "test_create_files",
                  0.5943043617697961
                ],
                [
                  "test_get_base_template",
                  "test_get_makefile_template",
                  0.444554224474387
                ],
                [
                  "test_create_makefile",
                  "test_create_files",
                  0.4622367258209525
                ],
                [
                  "test_get_makefile_template",
                  "test_create_files",
                  0.26279786952239725
                ],
                [
                  "test_hasmakefiles",
                  "test_create_makefile",
                  0.15625
                ],
                [
                  "test_hasmakefiles",
                  "test_get_makefile_template",
                  0.23985080590006172
                ],
                [
                  "test_get_base_template",
                  "test_create_makefile",
                  0.1563858105428061
                ],
                [
                  "test_get_makefile_template",
                  "test_create_base_files",
                  0.2089785019092862
                ],
                [
                  "test_create_makefile",
                  "test_create_base_files",
                  0.5251050315105037
                ],
                [
                  "test_hasmakefiles",
                  "test_get_base_template",
                  0.23457871581420914
                ],
                [
                  "test_get_makefile_template",
                  "test_create_makefile",
                  0.15990053726670783
                ],
                [
                  "test_create_files",
                  "test_create_base_files",
                  0.6287677132370127
                ],
                [
                  "test_get_base_template",
                  "test_create_base_files",
                  0.4963635881027162
                ],
                [
                  "test_hasmakefiles",
                  "test_create_base_files",
                  0.42008402520840293
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_create_makefile",
                "false"
              ],
              [
                "test_hasmakefiles",
                "false"
              ],
              [
                "test_create_files",
                "false"
              ],
              [
                "test_get_makefile_template",
                "false"
              ],
              [
                "test_create_base_files",
                "false"
              ],
              [
                "test_get_base_template",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      }
    ]
  }
]