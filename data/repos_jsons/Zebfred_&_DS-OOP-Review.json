[
  {
    "name": "Tests_\u0026_sqrt_test.py",
    "testCases": [
      {
        "name": "SqrtTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_sqrt9",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_sqrt4",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_sqrt9",
                  "[]"
                ],
                [
                  "test_sqrt4",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_sqrt9",
                  "false"
                ],
                [
                  "test_sqrt4",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_sqrt9",
                  "false"
                ],
                [
                  "test_sqrt4",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_sqrt9",
                  "false"
                ],
                [
                  "test_sqrt4",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_sqrt9",
                  "false"
                ],
                [
                  "test_sqrt4",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_sqrt9",
                "false"
              ],
              [
                "test_sqrt4",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_sqrt9",
                "false"
              ],
              [
                "test_sqrt4",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_sqrt9",
                []
              ],
              [
                "test_sqrt4",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_sqrt9",
                "false"
              ],
              [
                "test_sqrt4",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_sqrt9",
                "true"
              ],
              [
                "test_sqrt4",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_sqrt9",
                  "0"
                ],
                [
                  "test_sqrt4",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_sqrt9",
                  "0"
                ],
                [
                  "test_sqrt4",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_sqrt9",
                "false"
              ],
              [
                "test_sqrt4",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_sqrt9",
                "false"
              ],
              [
                "test_sqrt4",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_sqrt9",
                "1"
              ],
              [
                "test_sqrt4",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_sqrt9",
                []
              ],
              [
                "test_sqrt4",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_sqrt9",
                []
              ],
              [
                "test_sqrt4",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8999999999999998,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_sqrt9",
                  "test_sqrt4",
                  0.8999999999999998
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_sqrt9",
                "false"
              ],
              [
                "test_sqrt4",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "football_\u0026_football_test.py",
    "testCases": [
      {
        "name": "FootballGameTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_get_winnerr",
                  "[]"
                ],
                [
                  "test_field_goal_made",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_get_winnerr",
                  "[]"
                ],
                [
                  "test_field_goal_made",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_get_winnerr",
                  "false"
                ],
                [
                  "test_field_goal_made",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_get_winnerr",
                  "false"
                ],
                [
                  "test_field_goal_made",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_get_winnerr",
                  "false"
                ],
                [
                  "test_field_goal_made",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_get_winnerr",
                  "false"
                ],
                [
                  "test_field_goal_made",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": true,
            "detail": [
              [
                "test_get_winnerr",
                "true"
              ],
              [
                "test_field_goal_made",
                "true"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_get_winnerr",
                "false"
              ],
              [
                "test_field_goal_made",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_get_winnerr",
                []
              ],
              [
                "test_field_goal_made",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_winnerr",
                "false"
              ],
              [
                "test_field_goal_made",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_winnerr",
                "false"
              ],
              [
                "test_field_goal_made",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_get_winnerr",
                  "0"
                ],
                [
                  "test_field_goal_made",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_get_winnerr",
                  "0"
                ],
                [
                  "test_field_goal_made",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_get_winnerr",
                "false"
              ],
              [
                "test_field_goal_made",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_winnerr",
                "false"
              ],
              [
                "test_field_goal_made",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_get_winnerr",
                "0"
              ],
              [
                "test_field_goal_made",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_get_winnerr",
                []
              ],
              [
                "test_field_goal_made",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_get_winnerr",
                []
              ],
              [
                "test_field_goal_made",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7071067811865475,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_field_goal_made",
                  "test_get_winnerr",
                  0.7071067811865475
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_get_winnerr",
                "false"
              ],
              [
                "test_field_goal_made",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "FootballPlayerTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_default_player_yards",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_player_yards_set_to",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_default_qb_interceptions",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_default_qb_completed_passes",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_passing_score",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_default_player_yards",
                  "[]"
                ],
                [
                  "test_player_yards_set_to",
                  "[]"
                ],
                [
                  "test_default_qb_interceptions",
                  "[]"
                ],
                [
                  "test_default_qb_completed_passes",
                  "[]"
                ],
                [
                  "test_passing_score",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_default_player_yards",
                  "false"
                ],
                [
                  "test_player_yards_set_to",
                  "false"
                ],
                [
                  "test_default_qb_interceptions",
                  "false"
                ],
                [
                  "test_default_qb_completed_passes",
                  "false"
                ],
                [
                  "test_passing_score",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_default_player_yards",
                  "false"
                ],
                [
                  "test_player_yards_set_to",
                  "false"
                ],
                [
                  "test_default_qb_interceptions",
                  "false"
                ],
                [
                  "test_default_qb_completed_passes",
                  "false"
                ],
                [
                  "test_passing_score",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_default_player_yards",
                  "false"
                ],
                [
                  "test_player_yards_set_to",
                  "false"
                ],
                [
                  "test_default_qb_interceptions",
                  "false"
                ],
                [
                  "test_default_qb_completed_passes",
                  "false"
                ],
                [
                  "test_passing_score",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_default_player_yards",
                  "false"
                ],
                [
                  "test_player_yards_set_to",
                  "false"
                ],
                [
                  "test_default_qb_interceptions",
                  "false"
                ],
                [
                  "test_default_qb_completed_passes",
                  "false"
                ],
                [
                  "test_passing_score",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_default_player_yards",
                "false"
              ],
              [
                "test_player_yards_set_to",
                "false"
              ],
              [
                "test_default_qb_interceptions",
                "false"
              ],
              [
                "test_default_qb_completed_passes",
                "false"
              ],
              [
                "test_passing_score",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_default_player_yards",
                "false"
              ],
              [
                "test_player_yards_set_to",
                "false"
              ],
              [
                "test_default_qb_interceptions",
                "false"
              ],
              [
                "test_default_qb_completed_passes",
                "false"
              ],
              [
                "test_passing_score",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_default_player_yards",
                []
              ],
              [
                "test_player_yards_set_to",
                []
              ],
              [
                "test_default_qb_interceptions",
                []
              ],
              [
                "test_default_qb_completed_passes",
                []
              ],
              [
                "test_passing_score",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_default_player_yards",
                "false"
              ],
              [
                "test_player_yards_set_to",
                "false"
              ],
              [
                "test_default_qb_interceptions",
                "false"
              ],
              [
                "test_default_qb_completed_passes",
                "false"
              ],
              [
                "test_passing_score",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_default_player_yards",
                "true"
              ],
              [
                "test_player_yards_set_to",
                "true"
              ],
              [
                "test_default_qb_interceptions",
                "true"
              ],
              [
                "test_default_qb_completed_passes",
                "true"
              ],
              [
                "test_passing_score",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_default_player_yards",
                  "0"
                ],
                [
                  "test_player_yards_set_to",
                  "0"
                ],
                [
                  "test_default_qb_interceptions",
                  "0"
                ],
                [
                  "test_default_qb_completed_passes",
                  "0"
                ],
                [
                  "test_passing_score",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_default_player_yards",
                  "0"
                ],
                [
                  "test_player_yards_set_to",
                  "0"
                ],
                [
                  "test_default_qb_interceptions",
                  "0"
                ],
                [
                  "test_default_qb_completed_passes",
                  "0"
                ],
                [
                  "test_passing_score",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_default_player_yards",
                "false"
              ],
              [
                "test_player_yards_set_to",
                "false"
              ],
              [
                "test_default_qb_interceptions",
                "false"
              ],
              [
                "test_default_qb_completed_passes",
                "false"
              ],
              [
                "test_passing_score",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_default_player_yards",
                "false"
              ],
              [
                "test_player_yards_set_to",
                "false"
              ],
              [
                "test_default_qb_interceptions",
                "false"
              ],
              [
                "test_default_qb_completed_passes",
                "false"
              ],
              [
                "test_passing_score",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_default_player_yards",
                "1"
              ],
              [
                "test_player_yards_set_to",
                "1"
              ],
              [
                "test_default_qb_interceptions",
                "1"
              ],
              [
                "test_default_qb_completed_passes",
                "1"
              ],
              [
                "test_passing_score",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_default_player_yards",
                [
                  "player"
                ]
              ],
              [
                "test_player_yards_set_to",
                [
                  "player"
                ]
              ],
              [
                "test_default_qb_interceptions",
                [
                  "qb"
                ]
              ],
              [
                "test_default_qb_completed_passes",
                [
                  "qb"
                ]
              ],
              [
                "test_passing_score",
                [
                  "qb"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_default_player_yards",
                []
              ],
              [
                "test_player_yards_set_to",
                []
              ],
              [
                "test_default_qb_interceptions",
                []
              ],
              [
                "test_default_qb_completed_passes",
                []
              ],
              [
                "test_passing_score",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.572164425971849,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_default_qb_interceptions",
                  "test_default_qb_completed_passes",
                  0.7368421052631577
                ],
                [
                  "test_player_yards_set_to",
                  "test_default_qb_interceptions",
                  0.468292905790847
                ],
                [
                  "test_default_qb_interceptions",
                  "test_passing_score",
                  0.5768599504012304
                ],
                [
                  "test_default_qb_completed_passes",
                  "test_passing_score",
                  0.6180642325727469
                ],
                [
                  "test_default_player_yards",
                  "test_default_qb_completed_passes",
                  0.5407380704358752
                ],
                [
                  "test_default_player_yards",
                  "test_passing_score",
                  0.5080005080007621
                ],
                [
                  "test_player_yards_set_to",
                  "test_passing_score",
                  0.43994134506405996
                ],
                [
                  "test_player_yards_set_to",
                  "test_default_qb_completed_passes",
                  0.468292905790847
                ],
                [
                  "test_default_player_yards",
                  "test_default_qb_interceptions",
                  0.5948118774794626
                ],
                [
                  "test_default_player_yards",
                  "test_player_yards_set_to",
                  0.7698003589195012
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_default_player_yards",
                "false"
              ],
              [
                "test_player_yards_set_to",
                "false"
              ],
              [
                "test_default_qb_interceptions",
                "false"
              ],
              [
                "test_default_qb_completed_passes",
                "false"
              ],
              [
                "test_passing_score",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      }
    ]
  }
]