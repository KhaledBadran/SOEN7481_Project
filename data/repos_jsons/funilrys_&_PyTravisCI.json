[
  {
    "name": "tests_\u0026_helpers_\u0026_test_dict.py",
    "testCases": [
      {
        "name": "TestList",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_non_strict_merge",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_simple_merge",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_non_strict_merge",
                  "[]"
                ],
                [
                  "test_simple_merge",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_non_strict_merge",
                  "false"
                ],
                [
                  "test_simple_merge",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_non_strict_merge",
                  "false"
                ],
                [
                  "test_simple_merge",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_non_strict_merge",
                  "false"
                ],
                [
                  "test_simple_merge",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_non_strict_merge",
                  "false"
                ],
                [
                  "test_simple_merge",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_non_strict_merge",
                "false"
              ],
              [
                "test_simple_merge",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_non_strict_merge",
                "false"
              ],
              [
                "test_simple_merge",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_non_strict_merge",
                []
              ],
              [
                "test_simple_merge",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_non_strict_merge",
                "false"
              ],
              [
                "test_simple_merge",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_non_strict_merge",
                "false"
              ],
              [
                "test_simple_merge",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_non_strict_merge",
                  "0"
                ],
                [
                  "test_simple_merge",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_non_strict_merge",
                  "0"
                ],
                [
                  "test_simple_merge",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_non_strict_merge",
                "false"
              ],
              [
                "test_simple_merge",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_non_strict_merge",
                "false"
              ],
              [
                "test_simple_merge",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_non_strict_merge",
                "1"
              ],
              [
                "test_simple_merge",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_non_strict_merge",
                [
                  "actual",
                  "nd_dict",
                  "expected"
                ]
              ],
              [
                "test_simple_merge",
                [
                  "actual",
                  "nd_dict",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_non_strict_merge",
                [
                  "self.st_dict"
                ]
              ],
              [
                "test_simple_merge",
                [
                  "self.st_dict"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9002626648689273,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_simple_merge",
                  "test_non_strict_merge",
                  0.9002626648689273
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_non_strict_merge",
                "false"
              ],
              [
                "test_simple_merge",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_helpers_\u0026_test_list.py",
    "testCases": [
      {
        "name": "TestList",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_simple_merge",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_non_strict_merge",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_simple_merge",
                  "[]"
                ],
                [
                  "test_non_strict_merge",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_simple_merge",
                  "false"
                ],
                [
                  "test_non_strict_merge",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_simple_merge",
                  "false"
                ],
                [
                  "test_non_strict_merge",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_simple_merge",
                  "false"
                ],
                [
                  "test_non_strict_merge",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_simple_merge",
                  "false"
                ],
                [
                  "test_non_strict_merge",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_merge",
                "false"
              ],
              [
                "test_non_strict_merge",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_merge",
                "false"
              ],
              [
                "test_non_strict_merge",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_merge",
                []
              ],
              [
                "test_non_strict_merge",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_merge",
                "false"
              ],
              [
                "test_non_strict_merge",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_merge",
                "false"
              ],
              [
                "test_non_strict_merge",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_simple_merge",
                  "0"
                ],
                [
                  "test_non_strict_merge",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_simple_merge",
                  "0"
                ],
                [
                  "test_non_strict_merge",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_merge",
                "false"
              ],
              [
                "test_non_strict_merge",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_merge",
                "false"
              ],
              [
                "test_non_strict_merge",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_merge",
                "1"
              ],
              [
                "test_non_strict_merge",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_merge",
                [
                  "actual",
                  "expected",
                  "nd_list"
                ]
              ],
              [
                "test_non_strict_merge",
                [
                  "actual",
                  "expected",
                  "nd_list"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_merge",
                [
                  "self.st_list"
                ]
              ],
              [
                "test_non_strict_merge",
                [
                  "self.st_list"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9111026727478161,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_simple_merge",
                  "test_non_strict_merge",
                  0.9111026727478161
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_simple_merge",
                "false"
              ],
              [
                "test_non_strict_merge",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_core_\u0026_test_encryption.py",
    "testCases": [
      {
        "name": "TestEncryption",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_encrypt_pkcs1v15_mode_password",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_encrypt_pkcs1v15_mode_env_var",
                  "[PyCallExpression: self.assertIn, PyCallExpression: self.assertIn, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_encrypt_oeap_mode_env_var",
                  "[PyCallExpression: self.assertIn, PyCallExpression: self.assertIn, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_encrypt_pkcs1v15_mode_list_of_secrets",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_encrypt_oeap_mode_list_of_secrets",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_encrypt_oeap_mode_password",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_encrypt_pkcs1v15_mode_password",
                  "[]"
                ],
                [
                  "test_encrypt_pkcs1v15_mode_env_var",
                  "[]"
                ],
                [
                  "test_encrypt_oeap_mode_env_var",
                  "[]"
                ],
                [
                  "test_encrypt_pkcs1v15_mode_list_of_secrets",
                  "[]"
                ],
                [
                  "test_encrypt_oeap_mode_list_of_secrets",
                  "[]"
                ],
                [
                  "test_encrypt_oeap_mode_password",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_encrypt_pkcs1v15_mode_password",
                  "false"
                ],
                [
                  "test_encrypt_pkcs1v15_mode_env_var",
                  "true"
                ],
                [
                  "test_encrypt_oeap_mode_env_var",
                  "true"
                ],
                [
                  "test_encrypt_pkcs1v15_mode_list_of_secrets",
                  "true"
                ],
                [
                  "test_encrypt_oeap_mode_list_of_secrets",
                  "true"
                ],
                [
                  "test_encrypt_oeap_mode_password",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_encrypt_pkcs1v15_mode_password",
                  "false"
                ],
                [
                  "test_encrypt_pkcs1v15_mode_env_var",
                  "false"
                ],
                [
                  "test_encrypt_oeap_mode_env_var",
                  "false"
                ],
                [
                  "test_encrypt_pkcs1v15_mode_list_of_secrets",
                  "false"
                ],
                [
                  "test_encrypt_oeap_mode_list_of_secrets",
                  "false"
                ],
                [
                  "test_encrypt_oeap_mode_password",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_encrypt_pkcs1v15_mode_password",
                  "false"
                ],
                [
                  "test_encrypt_pkcs1v15_mode_env_var",
                  "false"
                ],
                [
                  "test_encrypt_oeap_mode_env_var",
                  "false"
                ],
                [
                  "test_encrypt_pkcs1v15_mode_list_of_secrets",
                  "false"
                ],
                [
                  "test_encrypt_oeap_mode_list_of_secrets",
                  "false"
                ],
                [
                  "test_encrypt_oeap_mode_password",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_encrypt_pkcs1v15_mode_password",
                  "false"
                ],
                [
                  "test_encrypt_pkcs1v15_mode_env_var",
                  "false"
                ],
                [
                  "test_encrypt_oeap_mode_env_var",
                  "false"
                ],
                [
                  "test_encrypt_pkcs1v15_mode_list_of_secrets",
                  "false"
                ],
                [
                  "test_encrypt_oeap_mode_list_of_secrets",
                  "false"
                ],
                [
                  "test_encrypt_oeap_mode_password",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_encrypt_pkcs1v15_mode_password",
                "false"
              ],
              [
                "test_encrypt_pkcs1v15_mode_env_var",
                "false"
              ],
              [
                "test_encrypt_oeap_mode_env_var",
                "false"
              ],
              [
                "test_encrypt_pkcs1v15_mode_list_of_secrets",
                "false"
              ],
              [
                "test_encrypt_oeap_mode_list_of_secrets",
                "false"
              ],
              [
                "test_encrypt_oeap_mode_password",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_encrypt_pkcs1v15_mode_password",
                "false"
              ],
              [
                "test_encrypt_pkcs1v15_mode_env_var",
                "false"
              ],
              [
                "test_encrypt_oeap_mode_env_var",
                "false"
              ],
              [
                "test_encrypt_pkcs1v15_mode_list_of_secrets",
                "false"
              ],
              [
                "test_encrypt_oeap_mode_list_of_secrets",
                "false"
              ],
              [
                "test_encrypt_oeap_mode_password",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_encrypt_pkcs1v15_mode_password",
                [
                  "self.envs",
                  "self.secrets"
                ]
              ],
              [
                "test_encrypt_pkcs1v15_mode_env_var",
                [
                  "self.password",
                  "self.secrets"
                ]
              ],
              [
                "test_encrypt_oeap_mode_env_var",
                [
                  "self.password",
                  "self.secrets"
                ]
              ],
              [
                "test_encrypt_pkcs1v15_mode_list_of_secrets",
                [
                  "self.envs",
                  "self.password"
                ]
              ],
              [
                "test_encrypt_oeap_mode_list_of_secrets",
                [
                  "self.envs",
                  "self.password"
                ]
              ],
              [
                "test_encrypt_oeap_mode_password",
                [
                  "self.envs",
                  "self.secrets"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_encrypt_pkcs1v15_mode_password",
                "false"
              ],
              [
                "test_encrypt_pkcs1v15_mode_env_var",
                "false"
              ],
              [
                "test_encrypt_oeap_mode_env_var",
                "false"
              ],
              [
                "test_encrypt_pkcs1v15_mode_list_of_secrets",
                "false"
              ],
              [
                "test_encrypt_oeap_mode_list_of_secrets",
                "false"
              ],
              [
                "test_encrypt_oeap_mode_password",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_encrypt_pkcs1v15_mode_password",
                "false"
              ],
              [
                "test_encrypt_pkcs1v15_mode_env_var",
                "false"
              ],
              [
                "test_encrypt_oeap_mode_env_var",
                "false"
              ],
              [
                "test_encrypt_pkcs1v15_mode_list_of_secrets",
                "false"
              ],
              [
                "test_encrypt_oeap_mode_list_of_secrets",
                "false"
              ],
              [
                "test_encrypt_oeap_mode_password",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_encrypt_pkcs1v15_mode_password",
                  "0"
                ],
                [
                  "test_encrypt_pkcs1v15_mode_env_var",
                  "0"
                ],
                [
                  "test_encrypt_oeap_mode_env_var",
                  "0"
                ],
                [
                  "test_encrypt_pkcs1v15_mode_list_of_secrets",
                  "0"
                ],
                [
                  "test_encrypt_oeap_mode_list_of_secrets",
                  "0"
                ],
                [
                  "test_encrypt_oeap_mode_password",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_encrypt_pkcs1v15_mode_password",
                  "0"
                ],
                [
                  "test_encrypt_pkcs1v15_mode_env_var",
                  "0"
                ],
                [
                  "test_encrypt_oeap_mode_env_var",
                  "0"
                ],
                [
                  "test_encrypt_pkcs1v15_mode_list_of_secrets",
                  "0"
                ],
                [
                  "test_encrypt_oeap_mode_list_of_secrets",
                  "0"
                ],
                [
                  "test_encrypt_oeap_mode_password",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_encrypt_pkcs1v15_mode_password",
                "false"
              ],
              [
                "test_encrypt_pkcs1v15_mode_env_var",
                "false"
              ],
              [
                "test_encrypt_oeap_mode_env_var",
                "false"
              ],
              [
                "test_encrypt_pkcs1v15_mode_list_of_secrets",
                "false"
              ],
              [
                "test_encrypt_oeap_mode_list_of_secrets",
                "false"
              ],
              [
                "test_encrypt_oeap_mode_password",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_encrypt_pkcs1v15_mode_password",
                "false"
              ],
              [
                "test_encrypt_pkcs1v15_mode_env_var",
                "false"
              ],
              [
                "test_encrypt_oeap_mode_env_var",
                "false"
              ],
              [
                "test_encrypt_pkcs1v15_mode_list_of_secrets",
                "false"
              ],
              [
                "test_encrypt_oeap_mode_list_of_secrets",
                "false"
              ],
              [
                "test_encrypt_oeap_mode_password",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_encrypt_pkcs1v15_mode_password",
                "1"
              ],
              [
                "test_encrypt_pkcs1v15_mode_env_var",
                "3"
              ],
              [
                "test_encrypt_oeap_mode_env_var",
                "3"
              ],
              [
                "test_encrypt_pkcs1v15_mode_list_of_secrets",
                "1"
              ],
              [
                "test_encrypt_oeap_mode_list_of_secrets",
                "1"
              ],
              [
                "test_encrypt_oeap_mode_password",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_encrypt_pkcs1v15_mode_password",
                [
                  "actual",
                  "to_decrypt",
                  "decrypted"
                ]
              ],
              [
                "test_encrypt_pkcs1v15_mode_env_var",
                [
                  "actual",
                  "env_name",
                  "to_decrypt",
                  "decrypted",
                  "value"
                ]
              ],
              [
                "test_encrypt_oeap_mode_env_var",
                [
                  "actual",
                  "env_name",
                  "to_decrypt",
                  "decrypted",
                  "value"
                ]
              ],
              [
                "test_encrypt_pkcs1v15_mode_list_of_secrets",
                [
                  "actual",
                  "to_decrypt",
                  "decrypted"
                ]
              ],
              [
                "test_encrypt_oeap_mode_list_of_secrets",
                [
                  "actual",
                  "to_decrypt",
                  "decrypted"
                ]
              ],
              [
                "test_encrypt_oeap_mode_password",
                [
                  "actual",
                  "to_decrypt",
                  "decrypted"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_encrypt_pkcs1v15_mode_password",
                [
                  "self.private_key",
                  "self.public_key",
                  "self.password"
                ]
              ],
              [
                "test_encrypt_pkcs1v15_mode_env_var",
                [
                  "self.envs",
                  "self.private_key",
                  "self.public_key"
                ]
              ],
              [
                "test_encrypt_oeap_mode_env_var",
                [
                  "self.envs",
                  "self.private_key",
                  "self.public_key"
                ]
              ],
              [
                "test_encrypt_pkcs1v15_mode_list_of_secrets",
                [
                  "self.private_key",
                  "self.public_key",
                  "self.secrets"
                ]
              ],
              [
                "test_encrypt_oeap_mode_list_of_secrets",
                [
                  "self.private_key",
                  "self.public_key",
                  "self.secrets"
                ]
              ],
              [
                "test_encrypt_oeap_mode_password",
                [
                  "self.private_key",
                  "self.public_key",
                  "self.password"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7794144831672465,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_encrypt_pkcs1v15_mode_env_var",
                  "test_encrypt_oeap_mode_list_of_secrets",
                  0.690942204488554
                ],
                [
                  "test_encrypt_oeap_mode_list_of_secrets",
                  "test_encrypt_pkcs1v15_mode_password",
                  0.7149000896634313
                ],
                [
                  "test_encrypt_oeap_mode_env_var",
                  "test_encrypt_oeap_mode_password",
                  0.7888046264554951
                ],
                [
                  "test_encrypt_pkcs1v15_mode_list_of_secrets",
                  "test_encrypt_oeap_mode_list_of_secrets",
                  0.8235452980181934
                ],
                [
                  "test_encrypt_oeap_mode_env_var",
                  "test_encrypt_oeap_mode_list_of_secrets",
                  0.80520286161417
                ],
                [
                  "test_encrypt_pkcs1v15_mode_env_var",
                  "test_encrypt_oeap_mode_env_var",
                  0.8826685158037579
                ],
                [
                  "test_encrypt_pkcs1v15_mode_password",
                  "test_encrypt_oeap_mode_password",
                  0.8016247711181552
                ],
                [
                  "test_encrypt_oeap_mode_env_var",
                  "test_encrypt_pkcs1v15_mode_list_of_secrets",
                  0.6696222172079785
                ],
                [
                  "test_encrypt_oeap_mode_env_var",
                  "test_encrypt_pkcs1v15_mode_password",
                  0.6373152691757812
                ],
                [
                  "test_encrypt_pkcs1v15_mode_env_var",
                  "test_encrypt_oeap_mode_password",
                  0.675545147236432
                ],
                [
                  "test_encrypt_pkcs1v15_mode_list_of_secrets",
                  "test_encrypt_pkcs1v15_mode_password",
                  0.9162496810231457
                ],
                [
                  "test_encrypt_oeap_mode_list_of_secrets",
                  "test_encrypt_oeap_mode_password",
                  0.907069123750125
                ],
                [
                  "test_encrypt_pkcs1v15_mode_env_var",
                  "test_encrypt_pkcs1v15_mode_password",
                  0.8139847818425262
                ],
                [
                  "test_encrypt_pkcs1v15_mode_list_of_secrets",
                  "test_encrypt_oeap_mode_password",
                  0.7345623033111999
                ],
                [
                  "test_encrypt_pkcs1v15_mode_env_var",
                  "test_encrypt_pkcs1v15_mode_list_of_secrets",
                  0.8291803567997521
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_encrypt_pkcs1v15_mode_password",
                "false"
              ],
              [
                "test_encrypt_pkcs1v15_mode_env_var",
                "false"
              ],
              [
                "test_encrypt_oeap_mode_env_var",
                "false"
              ],
              [
                "test_encrypt_pkcs1v15_mode_list_of_secrets",
                "false"
              ],
              [
                "test_encrypt_oeap_mode_list_of_secrets",
                "false"
              ],
              [
                "test_encrypt_oeap_mode_password",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      }
    ]
  },
  {
    "name": "tests_\u0026_core_\u0026_test_standardize.py",
    "testCases": [
      {
        "name": "TestStandardize",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_date_and_time",
                  "[PyCallExpression: self.assertIsInstance]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_date_and_time",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_date_and_time",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_date_and_time",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_date_and_time",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_date_and_time",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_date_and_time",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_date_and_time",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_date_and_time",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_date_and_time",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_date_and_time",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_date_and_time",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_date_and_time",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_date_and_time",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_date_and_time",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_date_and_time",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_date_and_time",
                [
                  "actual"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_date_and_time",
                [
                  "self.api_response"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_date_and_time",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_core_\u0026_test_communication.py",
    "testCases": [
      {
        "name": "TestCommunication",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_get_error_message",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_is_error",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_convert_parameters_to_get_param",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_get_error_type",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_bind_path_name_to_access_point",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_instance_attr",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_get_url_of_next_page",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_format_slug",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_response_to_attribute",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_remove_not_needed_parameters",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_filter_parameters",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_is_digit",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_filter_response",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_get_error_message",
                  "[]"
                ],
                [
                  "test_is_error",
                  "[]"
                ],
                [
                  "test_convert_parameters_to_get_param",
                  "[]"
                ],
                [
                  "test_get_error_type",
                  "[]"
                ],
                [
                  "test_bind_path_name_to_access_point",
                  "[]"
                ],
                [
                  "test_instance_attr",
                  "[]"
                ],
                [
                  "test_get_url_of_next_page",
                  "[]"
                ],
                [
                  "test_format_slug",
                  "[]"
                ],
                [
                  "test_response_to_attribute",
                  "[]"
                ],
                [
                  "test_remove_not_needed_parameters",
                  "[]"
                ],
                [
                  "test_filter_parameters",
                  "[]"
                ],
                [
                  "test_is_digit",
                  "[]"
                ],
                [
                  "test_filter_response",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_get_error_message",
                  "false"
                ],
                [
                  "test_is_error",
                  "false"
                ],
                [
                  "test_convert_parameters_to_get_param",
                  "false"
                ],
                [
                  "test_get_error_type",
                  "false"
                ],
                [
                  "test_bind_path_name_to_access_point",
                  "false"
                ],
                [
                  "test_instance_attr",
                  "false"
                ],
                [
                  "test_get_url_of_next_page",
                  "false"
                ],
                [
                  "test_format_slug",
                  "false"
                ],
                [
                  "test_response_to_attribute",
                  "false"
                ],
                [
                  "test_remove_not_needed_parameters",
                  "false"
                ],
                [
                  "test_filter_parameters",
                  "false"
                ],
                [
                  "test_is_digit",
                  "false"
                ],
                [
                  "test_filter_response",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_get_error_message",
                  "false"
                ],
                [
                  "test_is_error",
                  "false"
                ],
                [
                  "test_convert_parameters_to_get_param",
                  "false"
                ],
                [
                  "test_get_error_type",
                  "false"
                ],
                [
                  "test_bind_path_name_to_access_point",
                  "false"
                ],
                [
                  "test_instance_attr",
                  "false"
                ],
                [
                  "test_get_url_of_next_page",
                  "false"
                ],
                [
                  "test_format_slug",
                  "false"
                ],
                [
                  "test_response_to_attribute",
                  "false"
                ],
                [
                  "test_remove_not_needed_parameters",
                  "false"
                ],
                [
                  "test_filter_parameters",
                  "false"
                ],
                [
                  "test_is_digit",
                  "false"
                ],
                [
                  "test_filter_response",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_get_error_message",
                  "true"
                ],
                [
                  "test_is_error",
                  "true"
                ],
                [
                  "test_convert_parameters_to_get_param",
                  "true"
                ],
                [
                  "test_get_error_type",
                  "true"
                ],
                [
                  "test_bind_path_name_to_access_point",
                  "true"
                ],
                [
                  "test_instance_attr",
                  "false"
                ],
                [
                  "test_get_url_of_next_page",
                  "true"
                ],
                [
                  "test_format_slug",
                  "true"
                ],
                [
                  "test_response_to_attribute",
                  "false"
                ],
                [
                  "test_remove_not_needed_parameters",
                  "false"
                ],
                [
                  "test_filter_parameters",
                  "true"
                ],
                [
                  "test_is_digit",
                  "true"
                ],
                [
                  "test_filter_response",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_get_error_message",
                  "false"
                ],
                [
                  "test_is_error",
                  "false"
                ],
                [
                  "test_convert_parameters_to_get_param",
                  "false"
                ],
                [
                  "test_get_error_type",
                  "false"
                ],
                [
                  "test_bind_path_name_to_access_point",
                  "false"
                ],
                [
                  "test_instance_attr",
                  "false"
                ],
                [
                  "test_get_url_of_next_page",
                  "false"
                ],
                [
                  "test_format_slug",
                  "false"
                ],
                [
                  "test_response_to_attribute",
                  "false"
                ],
                [
                  "test_remove_not_needed_parameters",
                  "false"
                ],
                [
                  "test_filter_parameters",
                  "false"
                ],
                [
                  "test_is_digit",
                  "false"
                ],
                [
                  "test_filter_response",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_error_message",
                "false"
              ],
              [
                "test_is_error",
                "false"
              ],
              [
                "test_convert_parameters_to_get_param",
                "false"
              ],
              [
                "test_get_error_type",
                "false"
              ],
              [
                "test_bind_path_name_to_access_point",
                "false"
              ],
              [
                "test_instance_attr",
                "false"
              ],
              [
                "test_get_url_of_next_page",
                "false"
              ],
              [
                "test_format_slug",
                "false"
              ],
              [
                "test_response_to_attribute",
                "false"
              ],
              [
                "test_remove_not_needed_parameters",
                "false"
              ],
              [
                "test_filter_parameters",
                "false"
              ],
              [
                "test_is_digit",
                "false"
              ],
              [
                "test_filter_response",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_get_error_message",
                "false"
              ],
              [
                "test_is_error",
                "false"
              ],
              [
                "test_convert_parameters_to_get_param",
                "false"
              ],
              [
                "test_get_error_type",
                "false"
              ],
              [
                "test_bind_path_name_to_access_point",
                "false"
              ],
              [
                "test_instance_attr",
                "false"
              ],
              [
                "test_get_url_of_next_page",
                "false"
              ],
              [
                "test_format_slug",
                "false"
              ],
              [
                "test_response_to_attribute",
                "false"
              ],
              [
                "test_remove_not_needed_parameters",
                "false"
              ],
              [
                "test_filter_parameters",
                "false"
              ],
              [
                "test_is_digit",
                "false"
              ],
              [
                "test_filter_response",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_get_error_message",
                []
              ],
              [
                "test_is_error",
                []
              ],
              [
                "test_convert_parameters_to_get_param",
                []
              ],
              [
                "test_get_error_type",
                []
              ],
              [
                "test_bind_path_name_to_access_point",
                []
              ],
              [
                "test_instance_attr",
                []
              ],
              [
                "test_get_url_of_next_page",
                []
              ],
              [
                "test_format_slug",
                []
              ],
              [
                "test_response_to_attribute",
                []
              ],
              [
                "test_remove_not_needed_parameters",
                []
              ],
              [
                "test_filter_parameters",
                []
              ],
              [
                "test_is_digit",
                []
              ],
              [
                "test_filter_response",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_error_message",
                "false"
              ],
              [
                "test_is_error",
                "false"
              ],
              [
                "test_convert_parameters_to_get_param",
                "false"
              ],
              [
                "test_get_error_type",
                "false"
              ],
              [
                "test_bind_path_name_to_access_point",
                "false"
              ],
              [
                "test_instance_attr",
                "false"
              ],
              [
                "test_get_url_of_next_page",
                "false"
              ],
              [
                "test_format_slug",
                "false"
              ],
              [
                "test_response_to_attribute",
                "false"
              ],
              [
                "test_remove_not_needed_parameters",
                "false"
              ],
              [
                "test_filter_parameters",
                "false"
              ],
              [
                "test_is_digit",
                "false"
              ],
              [
                "test_filter_response",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_get_error_message",
                "false"
              ],
              [
                "test_is_error",
                "false"
              ],
              [
                "test_convert_parameters_to_get_param",
                "false"
              ],
              [
                "test_get_error_type",
                "false"
              ],
              [
                "test_bind_path_name_to_access_point",
                "false"
              ],
              [
                "test_instance_attr",
                "false"
              ],
              [
                "test_get_url_of_next_page",
                "false"
              ],
              [
                "test_format_slug",
                "false"
              ],
              [
                "test_response_to_attribute",
                "false"
              ],
              [
                "test_remove_not_needed_parameters",
                "false"
              ],
              [
                "test_filter_parameters",
                "true"
              ],
              [
                "test_is_digit",
                "false"
              ],
              [
                "test_filter_response",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_get_error_message",
                  "0"
                ],
                [
                  "test_is_error",
                  "0"
                ],
                [
                  "test_convert_parameters_to_get_param",
                  "0"
                ],
                [
                  "test_get_error_type",
                  "0"
                ],
                [
                  "test_bind_path_name_to_access_point",
                  "0"
                ],
                [
                  "test_instance_attr",
                  "0"
                ],
                [
                  "test_get_url_of_next_page",
                  "0"
                ],
                [
                  "test_format_slug",
                  "0"
                ],
                [
                  "test_response_to_attribute",
                  "0"
                ],
                [
                  "test_remove_not_needed_parameters",
                  "0"
                ],
                [
                  "test_filter_parameters",
                  "0"
                ],
                [
                  "test_is_digit",
                  "0"
                ],
                [
                  "test_filter_response",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_get_error_message",
                  "0"
                ],
                [
                  "test_is_error",
                  "0"
                ],
                [
                  "test_convert_parameters_to_get_param",
                  "0"
                ],
                [
                  "test_get_error_type",
                  "0"
                ],
                [
                  "test_bind_path_name_to_access_point",
                  "0"
                ],
                [
                  "test_instance_attr",
                  "0"
                ],
                [
                  "test_get_url_of_next_page",
                  "0"
                ],
                [
                  "test_format_slug",
                  "0"
                ],
                [
                  "test_response_to_attribute",
                  "0"
                ],
                [
                  "test_remove_not_needed_parameters",
                  "0"
                ],
                [
                  "test_filter_parameters",
                  "0"
                ],
                [
                  "test_is_digit",
                  "0"
                ],
                [
                  "test_filter_response",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_get_error_message",
                "false"
              ],
              [
                "test_is_error",
                "false"
              ],
              [
                "test_convert_parameters_to_get_param",
                "false"
              ],
              [
                "test_get_error_type",
                "false"
              ],
              [
                "test_bind_path_name_to_access_point",
                "false"
              ],
              [
                "test_instance_attr",
                "false"
              ],
              [
                "test_get_url_of_next_page",
                "false"
              ],
              [
                "test_format_slug",
                "false"
              ],
              [
                "test_response_to_attribute",
                "false"
              ],
              [
                "test_remove_not_needed_parameters",
                "false"
              ],
              [
                "test_filter_parameters",
                "false"
              ],
              [
                "test_is_digit",
                "false"
              ],
              [
                "test_filter_response",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_error_message",
                "false"
              ],
              [
                "test_is_error",
                "false"
              ],
              [
                "test_convert_parameters_to_get_param",
                "false"
              ],
              [
                "test_get_error_type",
                "false"
              ],
              [
                "test_bind_path_name_to_access_point",
                "false"
              ],
              [
                "test_instance_attr",
                "false"
              ],
              [
                "test_get_url_of_next_page",
                "false"
              ],
              [
                "test_format_slug",
                "false"
              ],
              [
                "test_response_to_attribute",
                "false"
              ],
              [
                "test_remove_not_needed_parameters",
                "false"
              ],
              [
                "test_filter_parameters",
                "false"
              ],
              [
                "test_is_digit",
                "false"
              ],
              [
                "test_filter_response",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_error_message",
                "2"
              ],
              [
                "test_is_error",
                "2"
              ],
              [
                "test_convert_parameters_to_get_param",
                "2"
              ],
              [
                "test_get_error_type",
                "2"
              ],
              [
                "test_bind_path_name_to_access_point",
                "8"
              ],
              [
                "test_instance_attr",
                "7"
              ],
              [
                "test_get_url_of_next_page",
                "2"
              ],
              [
                "test_format_slug",
                "3"
              ],
              [
                "test_response_to_attribute",
                "2"
              ],
              [
                "test_remove_not_needed_parameters",
                "1"
              ],
              [
                "test_filter_parameters",
                "3"
              ],
              [
                "test_is_digit",
                "3"
              ],
              [
                "test_filter_response",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_get_error_message",
                [
                  "actual",
                  "comm",
                  "expected",
                  "response_with_error",
                  "response_without_error"
                ]
              ],
              [
                "test_is_error",
                [
                  "actual",
                  "comm",
                  "expected",
                  "response_with_error",
                  "response_without_error"
                ]
              ],
              [
                "test_convert_parameters_to_get_param",
                [
                  "actual",
                  "comm",
                  "expected"
                ]
              ],
              [
                "test_get_error_type",
                [
                  "actual",
                  "comm",
                  "expected",
                  "response_with_error",
                  "response_without_error"
                ]
              ],
              [
                "test_bind_path_name_to_access_point",
                [
                  "actual",
                  "comm",
                  "expected",
                  "path_name"
                ]
              ],
              [
                "test_instance_attr",
                [
                  "comm"
                ]
              ],
              [
                "test_get_url_of_next_page",
                [
                  "actual",
                  "comm",
                  "expected",
                  "response_without_pagination",
                  "response_with_pagination"
                ]
              ],
              [
                "test_format_slug",
                [
                  "actual",
                  "comm",
                  "expected"
                ]
              ],
              [
                "test_response_to_attribute",
                [
                  "formatted_response",
                  "comm",
                  "expected"
                ]
              ],
              [
                "test_remove_not_needed_parameters",
                [
                  "actual",
                  "comm",
                  "expected",
                  "parameters"
                ]
              ],
              [
                "test_filter_parameters",
                [
                  "comm",
                  "expected"
                ]
              ],
              [
                "test_is_digit",
                [
                  "actual",
                  "comm",
                  "expected"
                ]
              ],
              [
                "test_filter_response",
                [
                  "actual",
                  "comm",
                  "response",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_get_error_message",
                [
                  "self.root"
                ]
              ],
              [
                "test_is_error",
                [
                  "self.root"
                ]
              ],
              [
                "test_convert_parameters_to_get_param",
                [
                  "self.root"
                ]
              ],
              [
                "test_get_error_type",
                [
                  "self.root"
                ]
              ],
              [
                "test_bind_path_name_to_access_point",
                [
                  "self.root"
                ]
              ],
              [
                "test_instance_attr",
                [
                  "self.root"
                ]
              ],
              [
                "test_get_url_of_next_page",
                [
                  "self.root"
                ]
              ],
              [
                "test_format_slug",
                [
                  "self.root"
                ]
              ],
              [
                "test_response_to_attribute",
                [
                  "self.root"
                ]
              ],
              [
                "test_remove_not_needed_parameters",
                [
                  "self.root"
                ]
              ],
              [
                "test_filter_parameters",
                [
                  "self.root"
                ]
              ],
              [
                "test_is_digit",
                [
                  "self.root"
                ]
              ],
              [
                "test_filter_response",
                [
                  "self.root"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4863678578002198,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_get_error_message",
                  "test_filter_parameters",
                  0.37934474956744857
                ],
                [
                  "test_filter_response",
                  "test_get_url_of_next_page",
                  0.8404593113009691
                ],
                [
                  "test_format_slug",
                  "test_convert_parameters_to_get_param",
                  0.6721141657021161
                ],
                [
                  "test_format_slug",
                  "test_filter_parameters",
                  0.5455857086291536
                ],
                [
                  "test_get_error_message",
                  "test_get_url_of_next_page",
                  0.6829878101323786
                ],
                [
                  "test_instance_attr",
                  "test_remove_not_needed_parameters",
                  0.38135226925325205
                ],
                [
                  "test_get_error_message",
                  "test_convert_parameters_to_get_param",
                  0.4005423822099168
                ],
                [
                  "test_filter_response",
                  "test_format_slug",
                  0.4739463144491659
                ],
                [
                  "test_get_error_type",
                  "test_filter_parameters",
                  0.3899510939465399
                ],
                [
                  "test_instance_attr",
                  "test_response_to_attribute",
                  0.4476744030364263
                ],
                [
                  "test_bind_path_name_to_access_point",
                  "test_get_error_message",
                  0.34638428340737226
                ],
                [
                  "test_format_slug",
                  "test_response_to_attribute",
                  0.6121278246163507
                ],
                [
                  "test_format_slug",
                  "test_get_url_of_next_page",
                  0.500593648175844
                ],
                [
                  "test_instance_attr",
                  "test_is_digit",
                  0.5123983639057929
                ],
                [
                  "test_get_error_message",
                  "test_is_error",
                  0.9370568728490454
                ],
                [
                  "test_bind_path_name_to_access_point",
                  "test_is_digit",
                  0.5932888163008447
                ],
                [
                  "test_filter_response",
                  "test_convert_parameters_to_get_param",
                  0.32750547619430165
                ],
                [
                  "test_instance_attr",
                  "test_filter_response",
                  0.350122866298927
                ],
                [
                  "test_format_slug",
                  "test_is_digit",
                  0.8382988324174335
                ],
                [
                  "test_is_error",
                  "test_get_url_of_next_page",
                  0.7327907262791405
                ],
                [
                  "test_instance_attr",
                  "test_convert_parameters_to_get_param",
                  0.45167981138706215
                ],
                [
                  "test_is_error",
                  "test_filter_parameters",
                  0.4230726900006657
                ],
                [
                  "test_instance_attr",
                  "test_get_error_type",
                  0.32332040219297453
                ],
                [
                  "test_filter_response",
                  "test_response_to_attribute",
                  0.37772400507598386
                ],
                [
                  "test_get_error_message",
                  "test_get_error_type",
                  0.975308053048091
                ],
                [
                  "test_get_error_message",
                  "test_remove_not_needed_parameters",
                  0.4362560442940047
                ],
                [
                  "test_format_slug",
                  "test_is_error",
                  0.5549143248555654
                ],
                [
                  "test_get_error_type",
                  "test_is_digit",
                  0.49359623404969494
                ],
                [
                  "test_get_error_type",
                  "test_get_url_of_next_page",
                  0.6944024633912623
                ],
                [
                  "test_filter_response",
                  "test_get_error_type",
                  0.45557551757256065
                ],
                [
                  "test_get_error_type",
                  "test_convert_parameters_to_get_param",
                  0.4117414048640701
                ],
                [
                  "test_filter_parameters",
                  "test_get_url_of_next_page",
                  0.40578865387487634
                ],
                [
                  "test_instance_attr",
                  "test_format_slug",
                  0.5282641981651445
                ],
                [
                  "test_bind_path_name_to_access_point",
                  "test_is_error",
                  0.3813138312310761
                ],
                [
                  "test_get_error_message",
                  "test_response_to_attribute",
                  0.3760827968051765
                ],
                [
                  "test_filter_response",
                  "test_remove_not_needed_parameters",
                  0.3287063860966577
                ],
                [
                  "test_response_to_attribute",
                  "test_get_url_of_next_page",
                  0.39021731349862976
                ],
                [
                  "test_is_error",
                  "test_response_to_attribute",
                  0.4204269356286621
                ],
                [
                  "test_bind_path_name_to_access_point",
                  "test_format_slug",
                  0.6028357212940321
                ],
                [
                  "test_is_digit",
                  "test_response_to_attribute",
                  0.5743665268941905
                ],
                [
                  "test_is_digit",
                  "test_remove_not_needed_parameters",
                  0.5923154808596339
                ],
                [
                  "test_instance_attr",
                  "test_bind_path_name_to_access_point",
                  0.39873588620374795
                ],
                [
                  "test_remove_not_needed_parameters",
                  "test_response_to_attribute",
                  0.46391752577319595
                ],
                [
                  "test_response_to_attribute",
                  "test_convert_parameters_to_get_param",
                  0.4998017053263279
                ],
                [
                  "test_response_to_attribute",
                  "test_filter_parameters",
                  0.42299779682336525
                ],
                [
                  "test_bind_path_name_to_access_point",
                  "test_convert_parameters_to_get_param",
                  0.5200655175262429
                ],
                [
                  "test_bind_path_name_to_access_point",
                  "test_filter_parameters",
                  0.33751135172534297
                ],
                [
                  "test_is_error",
                  "test_convert_parameters_to_get_param",
                  0.4398419428268817
                ],
                [
                  "test_is_digit",
                  "test_convert_parameters_to_get_param",
                  0.6381312862268534
                ],
                [
                  "test_instance_attr",
                  "test_get_url_of_next_page",
                  0.3483871788307176
                ],
                [
                  "test_filter_response",
                  "test_get_error_message",
                  0.4431842436280394
                ],
                [
                  "test_bind_path_name_to_access_point",
                  "test_filter_response",
                  0.28078825638115573
                ],
                [
                  "test_format_slug",
                  "test_get_error_message",
                  0.49744237086014403
                ],
                [
                  "test_bind_path_name_to_access_point",
                  "test_response_to_attribute",
                  0.4366692256818603
                ],
                [
                  "test_is_digit",
                  "test_is_error",
                  0.5744682204123535
                ],
                [
                  "test_get_error_type",
                  "test_remove_not_needed_parameters",
                  0.43298969072164956
                ],
                [
                  "test_bind_path_name_to_access_point",
                  "test_get_url_of_next_page",
                  0.33630900176288697
                ],
                [
                  "test_remove_not_needed_parameters",
                  "test_convert_parameters_to_get_param",
                  0.504561721567531
                ],
                [
                  "test_format_slug",
                  "test_remove_not_needed_parameters",
                  0.5971978776744885
                ],
                [
                  "test_instance_attr",
                  "test_get_error_message",
                  0.3145263570327496
                ],
                [
                  "test_is_digit",
                  "test_filter_parameters",
                  0.48330167439661975
                ],
                [
                  "test_get_error_message",
                  "test_is_digit",
                  0.48017082834158503
                ],
                [
                  "test_instance_attr",
                  "test_is_error",
                  0.35948681370916685
                ],
                [
                  "test_is_digit",
                  "test_get_url_of_next_page",
                  0.43330999866729936
                ],
                [
                  "test_remove_not_needed_parameters",
                  "test_get_url_of_next_page",
                  0.37485442714041595
                ],
                [
                  "test_filter_response",
                  "test_is_digit",
                  0.3765090604230463
                ],
                [
                  "test_get_error_type",
                  "test_is_error",
                  0.9393082802336565
                ],
                [
                  "test_bind_path_name_to_access_point",
                  "test_remove_not_needed_parameters",
                  0.3958590176742098
                ],
                [
                  "test_bind_path_name_to_access_point",
                  "test_get_error_type",
                  0.35606906486675055
                ],
                [
                  "test_get_error_type",
                  "test_response_to_attribute",
                  0.38659793814432997
                ],
                [
                  "test_filter_response",
                  "test_is_error",
                  0.5060779118762707
                ],
                [
                  "test_convert_parameters_to_get_param",
                  "test_get_url_of_next_page",
                  0.3702742320000498
                ],
                [
                  "test_format_slug",
                  "test_get_error_type",
                  0.5113506827587808
                ],
                [
                  "test_is_error",
                  "test_remove_not_needed_parameters",
                  0.46300181518599504
                ],
                [
                  "test_instance_attr",
                  "test_filter_parameters",
                  0.43582508283124183
                ],
                [
                  "test_convert_parameters_to_get_param",
                  "test_filter_parameters",
                  0.4943713731321284
                ],
                [
                  "test_remove_not_needed_parameters",
                  "test_filter_parameters",
                  0.5155285648784764
                ],
                [
                  "test_filter_response",
                  "test_filter_parameters",
                  0.40483427141914874
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_get_error_message",
                "false"
              ],
              [
                "test_is_error",
                "false"
              ],
              [
                "test_convert_parameters_to_get_param",
                "false"
              ],
              [
                "test_get_error_type",
                "false"
              ],
              [
                "test_bind_path_name_to_access_point",
                "false"
              ],
              [
                "test_instance_attr",
                "true"
              ],
              [
                "test_get_url_of_next_page",
                "false"
              ],
              [
                "test_format_slug",
                "false"
              ],
              [
                "test_response_to_attribute",
                "false"
              ],
              [
                "test_remove_not_needed_parameters",
                "false"
              ],
              [
                "test_filter_parameters",
                "false"
              ],
              [
                "test_is_digit",
                "false"
              ],
              [
                "test_filter_response",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 13
      }
    ]
  }
]