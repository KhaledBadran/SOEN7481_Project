[
  {
    "name": "pymysql_\u0026_tests_\u0026_test_err.py",
    "testCases": [
      {
        "name": "TestRaiseException",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_raise_mysql_exception",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_raise_mysql_exception",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_raise_mysql_exception",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_raise_mysql_exception",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_raise_mysql_exception",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_raise_mysql_exception",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_raise_mysql_exception",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_raise_mysql_exception",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_raise_mysql_exception",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_raise_mysql_exception",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_raise_mysql_exception",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_raise_mysql_exception",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_raise_mysql_exception",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_raise_mysql_exception",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_raise_mysql_exception",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_raise_mysql_exception",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_raise_mysql_exception",
                [
                  "data"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_raise_mysql_exception",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_raise_mysql_exception",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "pymysql_\u0026_tests_\u0026_test_converters.py",
    "testCases": [
      {
        "name": "TestConverter",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_convert_datetime_with_fsp",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_convert_datetime",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_escape_string",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_convert_timedelta_with_fsp",
                  "[]"
                ],
                [
                  "test_convert_time_with_fsp",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_convert_timedelta",
                  "[]"
                ],
                [
                  "test_convert_time",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_convert_datetime_with_fsp",
                  "[]"
                ],
                [
                  "test_convert_datetime",
                  "[]"
                ],
                [
                  "test_escape_string",
                  "[]"
                ],
                [
                  "test_convert_timedelta_with_fsp",
                  "[]"
                ],
                [
                  "test_convert_time_with_fsp",
                  "[]"
                ],
                [
                  "test_convert_timedelta",
                  "[]"
                ],
                [
                  "test_convert_time",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_convert_datetime_with_fsp",
                  "false"
                ],
                [
                  "test_convert_datetime",
                  "false"
                ],
                [
                  "test_escape_string",
                  "false"
                ],
                [
                  "test_convert_timedelta_with_fsp",
                  "false"
                ],
                [
                  "test_convert_time_with_fsp",
                  "false"
                ],
                [
                  "test_convert_timedelta",
                  "false"
                ],
                [
                  "test_convert_time",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_convert_datetime_with_fsp",
                  "false"
                ],
                [
                  "test_convert_datetime",
                  "false"
                ],
                [
                  "test_escape_string",
                  "false"
                ],
                [
                  "test_convert_timedelta_with_fsp",
                  "false"
                ],
                [
                  "test_convert_time_with_fsp",
                  "false"
                ],
                [
                  "test_convert_timedelta",
                  "false"
                ],
                [
                  "test_convert_time",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_convert_datetime_with_fsp",
                  "false"
                ],
                [
                  "test_convert_datetime",
                  "false"
                ],
                [
                  "test_escape_string",
                  "false"
                ],
                [
                  "test_convert_timedelta_with_fsp",
                  "false"
                ],
                [
                  "test_convert_time_with_fsp",
                  "false"
                ],
                [
                  "test_convert_timedelta",
                  "false"
                ],
                [
                  "test_convert_time",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_convert_datetime_with_fsp",
                  "false"
                ],
                [
                  "test_convert_datetime",
                  "false"
                ],
                [
                  "test_escape_string",
                  "false"
                ],
                [
                  "test_convert_timedelta_with_fsp",
                  "false"
                ],
                [
                  "test_convert_time_with_fsp",
                  "false"
                ],
                [
                  "test_convert_timedelta",
                  "false"
                ],
                [
                  "test_convert_time",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_convert_datetime_with_fsp",
                "false"
              ],
              [
                "test_convert_datetime",
                "false"
              ],
              [
                "test_escape_string",
                "false"
              ],
              [
                "test_convert_timedelta_with_fsp",
                "false"
              ],
              [
                "test_convert_time_with_fsp",
                "false"
              ],
              [
                "test_convert_timedelta",
                "false"
              ],
              [
                "test_convert_time",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_convert_datetime_with_fsp",
                "false"
              ],
              [
                "test_convert_datetime",
                "false"
              ],
              [
                "test_escape_string",
                "false"
              ],
              [
                "test_convert_timedelta_with_fsp",
                "false"
              ],
              [
                "test_convert_time_with_fsp",
                "false"
              ],
              [
                "test_convert_timedelta",
                "false"
              ],
              [
                "test_convert_time",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_convert_datetime_with_fsp",
                []
              ],
              [
                "test_convert_datetime",
                []
              ],
              [
                "test_escape_string",
                []
              ],
              [
                "test_convert_timedelta_with_fsp",
                []
              ],
              [
                "test_convert_time_with_fsp",
                []
              ],
              [
                "test_convert_timedelta",
                []
              ],
              [
                "test_convert_time",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_convert_datetime_with_fsp",
                "false"
              ],
              [
                "test_convert_datetime",
                "false"
              ],
              [
                "test_escape_string",
                "false"
              ],
              [
                "test_convert_timedelta_with_fsp",
                "false"
              ],
              [
                "test_convert_time_with_fsp",
                "false"
              ],
              [
                "test_convert_timedelta",
                "false"
              ],
              [
                "test_convert_time",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_convert_datetime_with_fsp",
                "false"
              ],
              [
                "test_convert_datetime",
                "false"
              ],
              [
                "test_escape_string",
                "false"
              ],
              [
                "test_convert_timedelta_with_fsp",
                "false"
              ],
              [
                "test_convert_time_with_fsp",
                "false"
              ],
              [
                "test_convert_timedelta",
                "false"
              ],
              [
                "test_convert_time",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_convert_datetime_with_fsp",
                  "0"
                ],
                [
                  "test_convert_datetime",
                  "0"
                ],
                [
                  "test_escape_string",
                  "0"
                ],
                [
                  "test_convert_timedelta_with_fsp",
                  "0"
                ],
                [
                  "test_convert_time_with_fsp",
                  "0"
                ],
                [
                  "test_convert_timedelta",
                  "0"
                ],
                [
                  "test_convert_time",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_convert_datetime_with_fsp",
                  "0"
                ],
                [
                  "test_convert_datetime",
                  "0"
                ],
                [
                  "test_escape_string",
                  "0"
                ],
                [
                  "test_convert_timedelta_with_fsp",
                  "0"
                ],
                [
                  "test_convert_time_with_fsp",
                  "0"
                ],
                [
                  "test_convert_timedelta",
                  "0"
                ],
                [
                  "test_convert_time",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_convert_datetime_with_fsp",
                "false"
              ],
              [
                "test_convert_datetime",
                "false"
              ],
              [
                "test_escape_string",
                "false"
              ],
              [
                "test_convert_timedelta_with_fsp",
                "false"
              ],
              [
                "test_convert_time_with_fsp",
                "false"
              ],
              [
                "test_convert_timedelta",
                "false"
              ],
              [
                "test_convert_time",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_convert_datetime_with_fsp",
                "false"
              ],
              [
                "test_convert_datetime",
                "false"
              ],
              [
                "test_escape_string",
                "false"
              ],
              [
                "test_convert_timedelta_with_fsp",
                "false"
              ],
              [
                "test_convert_time_with_fsp",
                "false"
              ],
              [
                "test_convert_timedelta",
                "false"
              ],
              [
                "test_convert_time",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_convert_datetime_with_fsp",
                "1"
              ],
              [
                "test_convert_datetime",
                "1"
              ],
              [
                "test_escape_string",
                "1"
              ],
              [
                "test_convert_timedelta_with_fsp",
                "0"
              ],
              [
                "test_convert_time_with_fsp",
                "1"
              ],
              [
                "test_convert_timedelta",
                "0"
              ],
              [
                "test_convert_time",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_convert_datetime_with_fsp",
                [
                  "dt",
                  "expected"
                ]
              ],
              [
                "test_convert_datetime",
                [
                  "dt",
                  "expected"
                ]
              ],
              [
                "test_escape_string",
                []
              ],
              [
                "test_convert_timedelta_with_fsp",
                []
              ],
              [
                "test_convert_time_with_fsp",
                [
                  "time_obj",
                  "expected"
                ]
              ],
              [
                "test_convert_timedelta",
                []
              ],
              [
                "test_convert_time",
                [
                  "time_obj",
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_convert_datetime_with_fsp",
                []
              ],
              [
                "test_convert_datetime",
                []
              ],
              [
                "test_escape_string",
                []
              ],
              [
                "test_convert_timedelta_with_fsp",
                []
              ],
              [
                "test_convert_time_with_fsp",
                []
              ],
              [
                "test_convert_timedelta",
                []
              ],
              [
                "test_convert_time",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.37987187746703477,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_convert_timedelta",
                  "test_convert_timedelta_with_fsp",
                  0.8627652804480126
                ],
                [
                  "test_convert_timedelta_with_fsp",
                  "test_convert_time",
                  0.16839382851364085
                ],
                [
                  "test_escape_string",
                  "test_convert_time_with_fsp",
                  0.184506241605777
                ],
                [
                  "test_convert_timedelta",
                  "test_convert_time_with_fsp",
                  0.19355957712870311
                ],
                [
                  "test_convert_timedelta",
                  "test_convert_time",
                  0.1824501122999404
                ],
                [
                  "test_escape_string",
                  "test_convert_datetime_with_fsp",
                  0.1113692092779409
                ],
                [
                  "test_convert_datetime_with_fsp",
                  "test_convert_time",
                  0.7003944071602767
                ],
                [
                  "test_escape_string",
                  "test_convert_datetime",
                  0.12649110640673517
                ],
                [
                  "test_convert_datetime",
                  "test_convert_timedelta",
                  0.10320936930842799
                ],
                [
                  "test_escape_string",
                  "test_convert_time",
                  0.22360679774997896
                ],
                [
                  "test_convert_timedelta_with_fsp",
                  "test_convert_time_with_fsp",
                  0.218346822530985
                ],
                [
                  "test_convert_datetime",
                  "test_convert_timedelta_with_fsp",
                  0.09525793444156803
                ],
                [
                  "test_convert_datetime_with_fsp",
                  "test_convert_timedelta",
                  0.11683386353430186
                ],
                [
                  "test_escape_string",
                  "test_convert_timedelta",
                  0.18650096164806274
                ],
                [
                  "test_convert_datetime",
                  "test_convert_time",
                  0.7247844507162112
                ],
                [
                  "test_convert_datetime_with_fsp",
                  "test_convert_time_with_fsp",
                  0.7962471765861042
                ],
                [
                  "test_convert_datetime",
                  "test_convert_datetime_with_fsp",
                  0.9773005060214425
                ],
                [
                  "test_escape_string",
                  "test_convert_timedelta_with_fsp",
                  0.17213259316477406
                ],
                [
                  "test_convert_datetime",
                  "test_convert_time_with_fsp",
                  0.7730844549388411
                ],
                [
                  "test_convert_datetime_with_fsp",
                  "test_convert_timedelta_with_fsp",
                  0.1317956116930914
                ],
                [
                  "test_convert_time",
                  "test_convert_time_with_fsp",
                  0.928279121632914
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_convert_datetime_with_fsp",
                "false"
              ],
              [
                "test_convert_datetime",
                "false"
              ],
              [
                "test_escape_string",
                "false"
              ],
              [
                "test_convert_timedelta_with_fsp",
                "false"
              ],
              [
                "test_convert_time_with_fsp",
                "false"
              ],
              [
                "test_convert_timedelta",
                "false"
              ],
              [
                "test_convert_time",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      }
    ]
  },
  {
    "name": "pymysql_\u0026_tests_\u0026_test_optionfile.py",
    "testCases": [
      {
        "name": "TestParser",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_string",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_string",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_string",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_string",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_string",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_string",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_string",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_string",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_string",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_string",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_string",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_string",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_string",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_string",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_string",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_string",
                "3"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_string",
                [
                  "parser"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_string",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_string",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "pymysql_\u0026_tests_\u0026_thirdparty_\u0026_test_MySQLdb_\u0026_test_MySQLdb_nonstandard.py",
    "testCases": [
      {
        "name": "TestDBAPISet",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_set_inequality_membership",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_set_equality_membership",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_set_inequality",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_set_equality",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_set_inequality_membership",
                  "[]"
                ],
                [
                  "test_set_equality_membership",
                  "[]"
                ],
                [
                  "test_set_inequality",
                  "[]"
                ],
                [
                  "test_set_equality",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_set_inequality_membership",
                  "false"
                ],
                [
                  "test_set_equality_membership",
                  "false"
                ],
                [
                  "test_set_inequality",
                  "false"
                ],
                [
                  "test_set_equality",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_set_inequality_membership",
                  "false"
                ],
                [
                  "test_set_equality_membership",
                  "false"
                ],
                [
                  "test_set_inequality",
                  "false"
                ],
                [
                  "test_set_equality",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_set_inequality_membership",
                  "false"
                ],
                [
                  "test_set_equality_membership",
                  "false"
                ],
                [
                  "test_set_inequality",
                  "false"
                ],
                [
                  "test_set_equality",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_set_inequality_membership",
                  "false"
                ],
                [
                  "test_set_equality_membership",
                  "false"
                ],
                [
                  "test_set_inequality",
                  "false"
                ],
                [
                  "test_set_equality",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_inequality_membership",
                "false"
              ],
              [
                "test_set_equality_membership",
                "false"
              ],
              [
                "test_set_inequality",
                "false"
              ],
              [
                "test_set_equality",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_set_inequality_membership",
                "false"
              ],
              [
                "test_set_equality_membership",
                "false"
              ],
              [
                "test_set_inequality",
                "false"
              ],
              [
                "test_set_equality",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_set_inequality_membership",
                []
              ],
              [
                "test_set_equality_membership",
                []
              ],
              [
                "test_set_inequality",
                []
              ],
              [
                "test_set_equality",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_inequality_membership",
                "false"
              ],
              [
                "test_set_equality_membership",
                "false"
              ],
              [
                "test_set_inequality",
                "false"
              ],
              [
                "test_set_equality",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_inequality_membership",
                "false"
              ],
              [
                "test_set_equality_membership",
                "false"
              ],
              [
                "test_set_inequality",
                "false"
              ],
              [
                "test_set_equality",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_set_inequality_membership",
                  "0"
                ],
                [
                  "test_set_equality_membership",
                  "0"
                ],
                [
                  "test_set_inequality",
                  "0"
                ],
                [
                  "test_set_equality",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_set_inequality_membership",
                  "0"
                ],
                [
                  "test_set_equality_membership",
                  "0"
                ],
                [
                  "test_set_inequality",
                  "0"
                ],
                [
                  "test_set_equality",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_set_inequality_membership",
                "false"
              ],
              [
                "test_set_equality_membership",
                "false"
              ],
              [
                "test_set_inequality",
                "false"
              ],
              [
                "test_set_equality",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_inequality_membership",
                "false"
              ],
              [
                "test_set_equality_membership",
                "false"
              ],
              [
                "test_set_inequality",
                "false"
              ],
              [
                "test_set_equality",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_inequality_membership",
                "1"
              ],
              [
                "test_set_equality_membership",
                "1"
              ],
              [
                "test_set_inequality",
                "1"
              ],
              [
                "test_set_equality",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_set_inequality_membership",
                []
              ],
              [
                "test_set_equality_membership",
                []
              ],
              [
                "test_set_inequality",
                []
              ],
              [
                "test_set_equality",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_set_inequality_membership",
                []
              ],
              [
                "test_set_equality_membership",
                []
              ],
              [
                "test_set_inequality",
                []
              ],
              [
                "test_set_equality",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.585602073532096,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_set_inequality",
                  "test_set_equality_membership",
                  0.447213595499958
                ],
                [
                  "test_set_equality",
                  "test_set_inequality_membership",
                  0.50709255283711
                ],
                [
                  "test_set_equality",
                  "test_set_inequality",
                  0.6999999999999998
                ],
                [
                  "test_set_equality",
                  "test_set_equality_membership",
                  0.5962847939999439
                ],
                [
                  "test_set_equality_membership",
                  "test_set_inequality_membership",
                  0.7559289460184545
                ],
                [
                  "test_set_inequality",
                  "test_set_inequality_membership",
                  0.50709255283711
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_set_inequality_membership",
                "true"
              ],
              [
                "test_set_equality_membership",
                "true"
              ],
              [
                "test_set_inequality",
                "true"
              ],
              [
                "test_set_equality",
                "true"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      },
      {
        "name": "CoreModule",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_client_info",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_NULL",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_version",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_thread_safe",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_client_info",
                  "[]"
                ],
                [
                  "test_NULL",
                  "[]"
                ],
                [
                  "test_version",
                  "[]"
                ],
                [
                  "test_thread_safe",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_client_info",
                  "false"
                ],
                [
                  "test_NULL",
                  "false"
                ],
                [
                  "test_version",
                  "false"
                ],
                [
                  "test_thread_safe",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_client_info",
                  "false"
                ],
                [
                  "test_NULL",
                  "false"
                ],
                [
                  "test_version",
                  "false"
                ],
                [
                  "test_thread_safe",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_client_info",
                  "false"
                ],
                [
                  "test_NULL",
                  "false"
                ],
                [
                  "test_version",
                  "false"
                ],
                [
                  "test_thread_safe",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_client_info",
                  "false"
                ],
                [
                  "test_NULL",
                  "false"
                ],
                [
                  "test_version",
                  "false"
                ],
                [
                  "test_thread_safe",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_client_info",
                "false"
              ],
              [
                "test_NULL",
                "false"
              ],
              [
                "test_version",
                "false"
              ],
              [
                "test_thread_safe",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_client_info",
                "false"
              ],
              [
                "test_NULL",
                "false"
              ],
              [
                "test_version",
                "false"
              ],
              [
                "test_thread_safe",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_client_info",
                []
              ],
              [
                "test_NULL",
                []
              ],
              [
                "test_version",
                []
              ],
              [
                "test_thread_safe",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_client_info",
                "false"
              ],
              [
                "test_NULL",
                "false"
              ],
              [
                "test_version",
                "false"
              ],
              [
                "test_thread_safe",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_client_info",
                "false"
              ],
              [
                "test_NULL",
                "false"
              ],
              [
                "test_version",
                "true"
              ],
              [
                "test_thread_safe",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_client_info",
                  "0"
                ],
                [
                  "test_NULL",
                  "0"
                ],
                [
                  "test_version",
                  "0"
                ],
                [
                  "test_thread_safe",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_client_info",
                  "0"
                ],
                [
                  "test_NULL",
                  "0"
                ],
                [
                  "test_version",
                  "0"
                ],
                [
                  "test_thread_safe",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_client_info",
                "false"
              ],
              [
                "test_NULL",
                "false"
              ],
              [
                "test_version",
                "false"
              ],
              [
                "test_thread_safe",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_client_info",
                "false"
              ],
              [
                "test_NULL",
                "false"
              ],
              [
                "test_version",
                "false"
              ],
              [
                "test_thread_safe",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_client_info",
                "1"
              ],
              [
                "test_NULL",
                "1"
              ],
              [
                "test_version",
                "3"
              ],
              [
                "test_thread_safe",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_client_info",
                []
              ],
              [
                "test_NULL",
                []
              ],
              [
                "test_version",
                []
              ],
              [
                "test_thread_safe",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_client_info",
                []
              ],
              [
                "test_NULL",
                []
              ],
              [
                "test_version",
                []
              ],
              [
                "test_thread_safe",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.3270881192758562,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_NULL",
                  "test_version",
                  0.4496144015129485
                ],
                [
                  "test_client_info",
                  "test_thread_safe",
                  0.3849001794597505
                ],
                [
                  "test_version",
                  "test_client_info",
                  0.3481553119113957
                ],
                [
                  "test_NULL",
                  "test_client_info",
                  0.19867985355975656
                ],
                [
                  "test_NULL",
                  "test_thread_safe",
                  0.22941573387056172
                ],
                [
                  "test_version",
                  "test_thread_safe",
                  0.35176323534072423
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_client_info",
                "false"
              ],
              [
                "test_NULL",
                "false"
              ],
              [
                "test_version",
                "false"
              ],
              [
                "test_thread_safe",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      },
      {
        "name": "CoreAPI",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_host_info",
                  "[]"
                ],
                [
                  "test_thread_id",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_affected_rows",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_charset_name",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_server_info",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_proto_info",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_host_info",
                  "[PyAssertStatement]"
                ],
                [
                  "test_thread_id",
                  "[]"
                ],
                [
                  "test_affected_rows",
                  "[]"
                ],
                [
                  "test_charset_name",
                  "[]"
                ],
                [
                  "test_server_info",
                  "[]"
                ],
                [
                  "test_proto_info",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_host_info",
                  "false"
                ],
                [
                  "test_thread_id",
                  "false"
                ],
                [
                  "test_affected_rows",
                  "false"
                ],
                [
                  "test_charset_name",
                  "false"
                ],
                [
                  "test_server_info",
                  "true"
                ],
                [
                  "test_proto_info",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_host_info",
                  "false"
                ],
                [
                  "test_thread_id",
                  "false"
                ],
                [
                  "test_affected_rows",
                  "false"
                ],
                [
                  "test_charset_name",
                  "false"
                ],
                [
                  "test_server_info",
                  "false"
                ],
                [
                  "test_proto_info",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_host_info",
                  "false"
                ],
                [
                  "test_thread_id",
                  "false"
                ],
                [
                  "test_affected_rows",
                  "false"
                ],
                [
                  "test_charset_name",
                  "false"
                ],
                [
                  "test_server_info",
                  "true"
                ],
                [
                  "test_proto_info",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_host_info",
                  "false"
                ],
                [
                  "test_thread_id",
                  "false"
                ],
                [
                  "test_affected_rows",
                  "false"
                ],
                [
                  "test_charset_name",
                  "false"
                ],
                [
                  "test_server_info",
                  "false"
                ],
                [
                  "test_proto_info",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_host_info",
                "false"
              ],
              [
                "test_thread_id",
                "false"
              ],
              [
                "test_affected_rows",
                "false"
              ],
              [
                "test_charset_name",
                "false"
              ],
              [
                "test_server_info",
                "false"
              ],
              [
                "test_proto_info",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_host_info",
                "false"
              ],
              [
                "test_thread_id",
                "false"
              ],
              [
                "test_affected_rows",
                "false"
              ],
              [
                "test_charset_name",
                "false"
              ],
              [
                "test_server_info",
                "false"
              ],
              [
                "test_proto_info",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_host_info",
                []
              ],
              [
                "test_thread_id",
                []
              ],
              [
                "test_affected_rows",
                []
              ],
              [
                "test_charset_name",
                []
              ],
              [
                "test_server_info",
                []
              ],
              [
                "test_proto_info",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_host_info",
                "false"
              ],
              [
                "test_thread_id",
                "false"
              ],
              [
                "test_affected_rows",
                "false"
              ],
              [
                "test_charset_name",
                "false"
              ],
              [
                "test_server_info",
                "false"
              ],
              [
                "test_proto_info",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_host_info",
                "false"
              ],
              [
                "test_thread_id",
                "false"
              ],
              [
                "test_affected_rows",
                "true"
              ],
              [
                "test_charset_name",
                "false"
              ],
              [
                "test_server_info",
                "false"
              ],
              [
                "test_proto_info",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_host_info",
                  "0"
                ],
                [
                  "test_thread_id",
                  "0"
                ],
                [
                  "test_affected_rows",
                  "0"
                ],
                [
                  "test_charset_name",
                  "0"
                ],
                [
                  "test_server_info",
                  "0"
                ],
                [
                  "test_proto_info",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_host_info",
                  "0"
                ],
                [
                  "test_thread_id",
                  "0"
                ],
                [
                  "test_affected_rows",
                  "0"
                ],
                [
                  "test_charset_name",
                  "0"
                ],
                [
                  "test_server_info",
                  "0"
                ],
                [
                  "test_proto_info",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_host_info",
                "false"
              ],
              [
                "test_thread_id",
                "false"
              ],
              [
                "test_affected_rows",
                "false"
              ],
              [
                "test_charset_name",
                "false"
              ],
              [
                "test_server_info",
                "false"
              ],
              [
                "test_proto_info",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_host_info",
                "false"
              ],
              [
                "test_thread_id",
                "false"
              ],
              [
                "test_affected_rows",
                "false"
              ],
              [
                "test_charset_name",
                "false"
              ],
              [
                "test_server_info",
                "false"
              ],
              [
                "test_proto_info",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_host_info",
                "1"
              ],
              [
                "test_thread_id",
                "2"
              ],
              [
                "test_affected_rows",
                "1"
              ],
              [
                "test_charset_name",
                "1"
              ],
              [
                "test_server_info",
                "2"
              ],
              [
                "test_proto_info",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_host_info",
                []
              ],
              [
                "test_thread_id",
                [
                  "tid"
                ]
              ],
              [
                "test_affected_rows",
                []
              ],
              [
                "test_charset_name",
                []
              ],
              [
                "test_server_info",
                []
              ],
              [
                "test_proto_info",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_host_info",
                [
                  "self.conn"
                ]
              ],
              [
                "test_thread_id",
                [
                  "self.conn"
                ]
              ],
              [
                "test_affected_rows",
                [
                  "self.conn"
                ]
              ],
              [
                "test_charset_name",
                [
                  "self.conn"
                ]
              ],
              [
                "test_server_info",
                [
                  "self.conn"
                ]
              ],
              [
                "test_proto_info",
                [
                  "self.conn"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.2977021384676645,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_affected_rows",
                  "test_host_info",
                  0.15811388300841897
                ],
                [
                  "test_affected_rows",
                  "test_charset_name",
                  0.3273268353539886
                ],
                [
                  "test_host_info",
                  "test_proto_info",
                  0.3227486121839514
                ],
                [
                  "test_host_info",
                  "test_server_info",
                  0.3105295017040594
                ],
                [
                  "test_thread_id",
                  "test_host_info",
                  0.12247448713915889
                ],
                [
                  "test_affected_rows",
                  "test_proto_info",
                  0.3061862178478973
                ],
                [
                  "test_charset_name",
                  "test_server_info",
                  0.42857142857142855
                ],
                [
                  "test_thread_id",
                  "test_charset_name",
                  0.21128856368212914
                ],
                [
                  "test_thread_id",
                  "test_affected_rows",
                  0.16137430609197573
                ],
                [
                  "test_thread_id",
                  "test_server_info",
                  0.21128856368212914
                ],
                [
                  "test_thread_id",
                  "test_proto_info",
                  0.23717082451262844
                ],
                [
                  "test_proto_info",
                  "test_server_info",
                  0.5679301390639018
                ],
                [
                  "test_affected_rows",
                  "test_server_info",
                  0.3546040716334876
                ],
                [
                  "test_charset_name",
                  "test_proto_info",
                  0.4008918628686366
                ],
                [
                  "test_charset_name",
                  "test_host_info",
                  0.3450327796711771
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_host_info",
                "false"
              ],
              [
                "test_thread_id",
                "false"
              ],
              [
                "test_affected_rows",
                "false"
              ],
              [
                "test_charset_name",
                "false"
              ],
              [
                "test_server_info",
                "false"
              ],
              [
                "test_proto_info",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      }
    ]
  }
]