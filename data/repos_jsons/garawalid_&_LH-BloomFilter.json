[
  {
    "name": "tests_\u0026_test_bloom.py",
    "testCases": [
      {
        "name": "BloomTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_bloom_str",
                  "[]"
                ],
                [
                  "test_bloom_none",
                  "[]"
                ],
                [
                  "test_save_load",
                  "[]"
                ],
                [
                  "test_estimate_fpp",
                  "[]"
                ],
                [
                  "test_bloom_int",
                  "[]"
                ],
                [
                  "test_combine",
                  "[PyCallExpression: self.assertRaises]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_bloom_str",
                  "[PyAssertStatement]"
                ],
                [
                  "test_bloom_none",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_save_load",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_estimate_fpp",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_bloom_int",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_combine",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_bloom_str",
                  "true"
                ],
                [
                  "test_bloom_none",
                  "true"
                ],
                [
                  "test_save_load",
                  "false"
                ],
                [
                  "test_estimate_fpp",
                  "true"
                ],
                [
                  "test_bloom_int",
                  "true"
                ],
                [
                  "test_combine",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_bloom_str",
                  "false"
                ],
                [
                  "test_bloom_none",
                  "false"
                ],
                [
                  "test_save_load",
                  "false"
                ],
                [
                  "test_estimate_fpp",
                  "false"
                ],
                [
                  "test_bloom_int",
                  "false"
                ],
                [
                  "test_combine",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_bloom_str",
                  "false"
                ],
                [
                  "test_bloom_none",
                  "false"
                ],
                [
                  "test_save_load",
                  "false"
                ],
                [
                  "test_estimate_fpp",
                  "false"
                ],
                [
                  "test_bloom_int",
                  "false"
                ],
                [
                  "test_combine",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_bloom_str",
                  "false"
                ],
                [
                  "test_bloom_none",
                  "false"
                ],
                [
                  "test_save_load",
                  "false"
                ],
                [
                  "test_estimate_fpp",
                  "false"
                ],
                [
                  "test_bloom_int",
                  "false"
                ],
                [
                  "test_combine",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bloom_str",
                "false"
              ],
              [
                "test_bloom_none",
                "false"
              ],
              [
                "test_save_load",
                "false"
              ],
              [
                "test_estimate_fpp",
                "false"
              ],
              [
                "test_bloom_int",
                "false"
              ],
              [
                "test_combine",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_bloom_str",
                "false"
              ],
              [
                "test_bloom_none",
                "false"
              ],
              [
                "test_save_load",
                "false"
              ],
              [
                "test_estimate_fpp",
                "false"
              ],
              [
                "test_bloom_int",
                "false"
              ],
              [
                "test_combine",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_bloom_str",
                []
              ],
              [
                "test_bloom_none",
                []
              ],
              [
                "test_save_load",
                []
              ],
              [
                "test_estimate_fpp",
                []
              ],
              [
                "test_bloom_int",
                []
              ],
              [
                "test_combine",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bloom_str",
                "false"
              ],
              [
                "test_bloom_none",
                "false"
              ],
              [
                "test_save_load",
                "false"
              ],
              [
                "test_estimate_fpp",
                "false"
              ],
              [
                "test_bloom_int",
                "false"
              ],
              [
                "test_combine",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bloom_str",
                "false"
              ],
              [
                "test_bloom_none",
                "false"
              ],
              [
                "test_save_load",
                "false"
              ],
              [
                "test_estimate_fpp",
                "false"
              ],
              [
                "test_bloom_int",
                "false"
              ],
              [
                "test_combine",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_bloom_str",
                  "0"
                ],
                [
                  "test_bloom_none",
                  "0"
                ],
                [
                  "test_save_load",
                  "0"
                ],
                [
                  "test_estimate_fpp",
                  "0"
                ],
                [
                  "test_bloom_int",
                  "0"
                ],
                [
                  "test_combine",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_bloom_str",
                  "0"
                ],
                [
                  "test_bloom_none",
                  "0"
                ],
                [
                  "test_save_load",
                  "0"
                ],
                [
                  "test_estimate_fpp",
                  "0"
                ],
                [
                  "test_bloom_int",
                  "0"
                ],
                [
                  "test_combine",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_bloom_str",
                "false"
              ],
              [
                "test_bloom_none",
                "false"
              ],
              [
                "test_save_load",
                "false"
              ],
              [
                "test_estimate_fpp",
                "false"
              ],
              [
                "test_bloom_int",
                "false"
              ],
              [
                "test_combine",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bloom_str",
                "false"
              ],
              [
                "test_bloom_none",
                "false"
              ],
              [
                "test_save_load",
                "false"
              ],
              [
                "test_estimate_fpp",
                "false"
              ],
              [
                "test_bloom_int",
                "false"
              ],
              [
                "test_combine",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_bloom_str",
                "1"
              ],
              [
                "test_bloom_none",
                "2"
              ],
              [
                "test_save_load",
                "4"
              ],
              [
                "test_estimate_fpp",
                "2"
              ],
              [
                "test_bloom_int",
                "2"
              ],
              [
                "test_combine",
                "4"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_bloom_str",
                [
                  "bf",
                  "examples",
                  "not_included"
                ]
              ],
              [
                "test_bloom_none",
                [
                  "bf",
                  "examples",
                  "not_included"
                ]
              ],
              [
                "test_save_load",
                [
                  "bf_new"
                ]
              ],
              [
                "test_estimate_fpp",
                [
                  "bf",
                  "examples",
                  "fpp",
                  "fpp_expected"
                ]
              ],
              [
                "test_bloom_int",
                [
                  "bf",
                  "examples",
                  "not_included"
                ]
              ],
              [
                "test_combine",
                [
                  "msg",
                  "examples",
                  "not_included",
                  "bf1",
                  "bf2"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_bloom_str",
                []
              ],
              [
                "test_bloom_none",
                []
              ],
              [
                "test_save_load",
                []
              ],
              [
                "test_estimate_fpp",
                []
              ],
              [
                "test_bloom_int",
                []
              ],
              [
                "test_combine",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6060914490602384,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_bloom_int",
                  "test_combine",
                  0.9127028187060332
                ],
                [
                  "test_estimate_fpp",
                  "test_combine",
                  0.8366507076874694
                ],
                [
                  "test_bloom_int",
                  "test_bloom_none",
                  0.9854508843053271
                ],
                [
                  "test_bloom_none",
                  "test_save_load",
                  0.27181183543340026
                ],
                [
                  "test_bloom_str",
                  "test_save_load",
                  0.2959320151246863
                ],
                [
                  "test_bloom_str",
                  "test_estimate_fpp",
                  0.5229577884350213
                ],
                [
                  "test_bloom_str",
                  "test_bloom_int",
                  0.618396487446585
                ],
                [
                  "test_bloom_str",
                  "test_combine",
                  0.5973545644760742
                ],
                [
                  "test_combine",
                  "test_save_load",
                  0.30011173136357516
                ],
                [
                  "test_bloom_int",
                  "test_save_load",
                  0.26162797606709143
                ],
                [
                  "test_bloom_none",
                  "test_combine",
                  0.9076440336069092
                ],
                [
                  "test_bloom_int",
                  "test_estimate_fpp",
                  0.844576560325198
                ],
                [
                  "test_estimate_fpp",
                  "test_save_load",
                  0.26831446813549886
                ],
                [
                  "test_bloom_none",
                  "test_estimate_fpp",
                  0.8416373179820639
                ],
                [
                  "test_bloom_str",
                  "test_bloom_none",
                  0.6262025468086421
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_bloom_str",
                "false"
              ],
              [
                "test_bloom_none",
                "false"
              ],
              [
                "test_save_load",
                "false"
              ],
              [
                "test_estimate_fpp",
                "false"
              ],
              [
                "test_bloom_int",
                "false"
              ],
              [
                "test_combine",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      }
    ]
  }
]