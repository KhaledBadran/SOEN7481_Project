[
  {
    "name": "tests_\u0026_test_jyserver.py",
    "testCases": [
      {
        "name": "TestJython",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_message",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_it",
                  "[]"
                ],
                [
                  "test_completion_sockets_and_messages",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_message",
                  "[]"
                ],
                [
                  "test_it",
                  "[]"
                ],
                [
                  "test_completion_sockets_and_messages",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_message",
                  "false"
                ],
                [
                  "test_it",
                  "false"
                ],
                [
                  "test_completion_sockets_and_messages",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_message",
                  "false"
                ],
                [
                  "test_it",
                  "false"
                ],
                [
                  "test_completion_sockets_and_messages",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_message",
                  "false"
                ],
                [
                  "test_it",
                  "false"
                ],
                [
                  "test_completion_sockets_and_messages",
                  "true"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_message",
                  "false"
                ],
                [
                  "test_it",
                  "false"
                ],
                [
                  "test_completion_sockets_and_messages",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_message",
                "false"
              ],
              [
                "test_it",
                "false"
              ],
              [
                "test_completion_sockets_and_messages",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_message",
                "false"
              ],
              [
                "test_it",
                "false"
              ],
              [
                "test_completion_sockets_and_messages",
                "true"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_message",
                []
              ],
              [
                "test_it",
                []
              ],
              [
                "test_completion_sockets_and_messages",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_message",
                "false"
              ],
              [
                "test_it",
                "false"
              ],
              [
                "test_completion_sockets_and_messages",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_message",
                "false"
              ],
              [
                "test_it",
                "false"
              ],
              [
                "test_completion_sockets_and_messages",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_message",
                  "0"
                ],
                [
                  "test_it",
                  "0"
                ],
                [
                  "test_completion_sockets_and_messages",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_message",
                  "0"
                ],
                [
                  "test_it",
                  "0"
                ],
                [
                  "test_completion_sockets_and_messages",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_message",
                "false"
              ],
              [
                "test_it",
                "false"
              ],
              [
                "test_completion_sockets_and_messages",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_message",
                "false"
              ],
              [
                "test_it",
                "false"
              ],
              [
                "test_completion_sockets_and_messages",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_message",
                "2"
              ],
              [
                "test_it",
                "0"
              ],
              [
                "test_completion_sockets_and_messages",
                "6"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_message",
                [
                  "msg",
                  "t",
                  "expected",
                  "l"
                ]
              ],
              [
                "test_it",
                []
              ],
              [
                "test_completion_sockets_and_messages",
                [
                  "msg",
                  "t",
                  "toWrite",
                  "start",
                  "completions",
                  "socket"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_message",
                []
              ],
              [
                "test_it",
                []
              ],
              [
                "test_completion_sockets_and_messages",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.20881590867211533,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_it",
                  "test_completion_sockets_and_messages",
                  0.042409446483998546
                ],
                [
                  "test_message",
                  "test_completion_sockets_and_messages",
                  0.43366186739722185
                ],
                [
                  "test_it",
                  "test_message",
                  0.15037641213512565
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_message",
                "false"
              ],
              [
                "test_it",
                "false"
              ],
              [
                "test_completion_sockets_and_messages",
                "true"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_pyserver.py",
    "testCases": [
      {
        "name": "TestCPython",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_message",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_completion_sockets_and_messages",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.fail, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_message",
                  "[]"
                ],
                [
                  "test_completion_sockets_and_messages",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_message",
                  "false"
                ],
                [
                  "test_completion_sockets_and_messages",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_message",
                  "false"
                ],
                [
                  "test_completion_sockets_and_messages",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_message",
                  "false"
                ],
                [
                  "test_completion_sockets_and_messages",
                  "true"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_message",
                  "false"
                ],
                [
                  "test_completion_sockets_and_messages",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_message",
                "false"
              ],
              [
                "test_completion_sockets_and_messages",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_message",
                "false"
              ],
              [
                "test_completion_sockets_and_messages",
                "true"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_message",
                []
              ],
              [
                "test_completion_sockets_and_messages",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_message",
                "false"
              ],
              [
                "test_completion_sockets_and_messages",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_message",
                "false"
              ],
              [
                "test_completion_sockets_and_messages",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_message",
                  "0"
                ],
                [
                  "test_completion_sockets_and_messages",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_message",
                  "0"
                ],
                [
                  "test_completion_sockets_and_messages",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_message",
                "false"
              ],
              [
                "test_completion_sockets_and_messages",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_message",
                "false"
              ],
              [
                "test_completion_sockets_and_messages",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_message",
                "2"
              ],
              [
                "test_completion_sockets_and_messages",
                "8"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_message",
                [
                  "msg",
                  "t",
                  "l"
                ]
              ],
              [
                "test_completion_sockets_and_messages",
                [
                  "msg",
                  "found",
                  "t",
                  "start",
                  "completions",
                  "socket",
                  "start_2"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_message",
                []
              ],
              [
                "test_completion_sockets_and_messages",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.38753887660807224,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_message",
                  "test_completion_sockets_and_messages",
                  0.38753887660807224
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_message",
                "false"
              ],
              [
                "test_completion_sockets_and_messages",
                "true"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_pydevconsole.py",
    "testCases": [
      {
        "name": "Test",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_console_hello",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_server",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_console_requests",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.fail, PyCallExpression: self.fail, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_console_hello",
                  "[]"
                ],
                [
                  "test_server",
                  "[]"
                ],
                [
                  "test_console_requests",
                  "[PyAssertStatement, PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_console_hello",
                  "false"
                ],
                [
                  "test_server",
                  "true"
                ],
                [
                  "test_console_requests",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_console_hello",
                  "false"
                ],
                [
                  "test_server",
                  "false"
                ],
                [
                  "test_console_requests",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_console_hello",
                  "false"
                ],
                [
                  "test_server",
                  "false"
                ],
                [
                  "test_console_requests",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_console_hello",
                  "false"
                ],
                [
                  "test_server",
                  "false"
                ],
                [
                  "test_console_requests",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_console_hello",
                "false"
              ],
              [
                "test_server",
                "false"
              ],
              [
                "test_console_requests",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_console_hello",
                "true"
              ],
              [
                "test_server",
                "true"
              ],
              [
                "test_console_requests",
                "true"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_console_hello",
                []
              ],
              [
                "test_server",
                []
              ],
              [
                "test_console_requests",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_console_hello",
                "false"
              ],
              [
                "test_server",
                "false"
              ],
              [
                "test_console_requests",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_console_hello",
                "false"
              ],
              [
                "test_server",
                "false"
              ],
              [
                "test_console_requests",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_console_hello",
                  "0"
                ],
                [
                  "test_server",
                  "0"
                ],
                [
                  "test_console_requests",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_console_hello",
                  "0"
                ],
                [
                  "test_server",
                  "0"
                ],
                [
                  "test_console_requests",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_console_hello",
                "false"
              ],
              [
                "test_server",
                "false"
              ],
              [
                "test_console_requests",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": true,
            "detail": [
              [
                "test_console_hello",
                "false"
              ],
              [
                "test_server",
                "true"
              ],
              [
                "test_console_requests",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_console_hello",
                "1"
              ],
              [
                "test_server",
                "2"
              ],
              [
                "test_console_requests",
                "10"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_console_hello",
                [
                  "result",
                  "client_port",
                  "interpreter",
                  "client_thread",
                  "_server_port"
                ]
              ],
              [
                "test_server",
                [
                  "client_port",
                  "server",
                  "found",
                  "initial",
                  "server_port",
                  "client_thread",
                  "server_thread"
                ]
              ],
              [
                "test_console_requests",
                [
                  "client_port",
                  "found",
                  "comps",
                  "completions",
                  "interpreter",
                  "client_thread",
                  "_server_port",
                  "desc"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_console_hello",
                []
              ],
              [
                "test_server",
                []
              ],
              [
                "test_console_requests",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6592437086873413,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_console_hello",
                  "test_console_requests",
                  0.6606048782552575
                ],
                [
                  "test_console_hello",
                  "test_server",
                  0.7664498577860432
                ],
                [
                  "test_console_requests",
                  "test_server",
                  0.5506763900207231
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_console_hello",
                "false"
              ],
              [
                "test_server",
                "false"
              ],
              [
                "test_console_requests",
                "true"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_simpleTipper.py",
    "testCases": [
      {
        "name": "TestCPython",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_imports2a",
                  "[]"
                ],
                [
                  "test_search",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_imports3",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_dot_net_libraries",
                  "[]"
                ],
                [
                  "test_tips_hasattr_failure",
                  "[]"
                ],
                [
                  "test_imports",
                  "[]"
                ],
                [
                  "test_imports5",
                  "[]"
                ],
                [
                  "test_imports2c",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_imports2",
                  "[]"
                ],
                [
                  "test_imports4",
                  "[]"
                ],
                [
                  "test_imports2b",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_inspect",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_imports2a",
                  "[]"
                ],
                [
                  "test_search",
                  "[]"
                ],
                [
                  "test_imports3",
                  "[]"
                ],
                [
                  "test_dot_net_libraries",
                  "[]"
                ],
                [
                  "test_tips_hasattr_failure",
                  "[]"
                ],
                [
                  "test_imports",
                  "[]"
                ],
                [
                  "test_imports5",
                  "[]"
                ],
                [
                  "test_imports2c",
                  "[]"
                ],
                [
                  "test_imports2",
                  "[]"
                ],
                [
                  "test_imports4",
                  "[]"
                ],
                [
                  "test_imports2b",
                  "[]"
                ],
                [
                  "test_inspect",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_imports2a",
                  "false"
                ],
                [
                  "test_search",
                  "false"
                ],
                [
                  "test_imports3",
                  "false"
                ],
                [
                  "test_dot_net_libraries",
                  "true"
                ],
                [
                  "test_tips_hasattr_failure",
                  "false"
                ],
                [
                  "test_imports",
                  "true"
                ],
                [
                  "test_imports5",
                  "false"
                ],
                [
                  "test_imports2c",
                  "false"
                ],
                [
                  "test_imports2",
                  "false"
                ],
                [
                  "test_imports4",
                  "false"
                ],
                [
                  "test_imports2b",
                  "false"
                ],
                [
                  "test_inspect",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_imports2a",
                  "false"
                ],
                [
                  "test_search",
                  "false"
                ],
                [
                  "test_imports3",
                  "false"
                ],
                [
                  "test_dot_net_libraries",
                  "false"
                ],
                [
                  "test_tips_hasattr_failure",
                  "false"
                ],
                [
                  "test_imports",
                  "false"
                ],
                [
                  "test_imports5",
                  "false"
                ],
                [
                  "test_imports2c",
                  "false"
                ],
                [
                  "test_imports2",
                  "false"
                ],
                [
                  "test_imports4",
                  "false"
                ],
                [
                  "test_imports2b",
                  "false"
                ],
                [
                  "test_inspect",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_imports2a",
                  "false"
                ],
                [
                  "test_search",
                  "false"
                ],
                [
                  "test_imports3",
                  "false"
                ],
                [
                  "test_dot_net_libraries",
                  "false"
                ],
                [
                  "test_tips_hasattr_failure",
                  "false"
                ],
                [
                  "test_imports",
                  "false"
                ],
                [
                  "test_imports5",
                  "false"
                ],
                [
                  "test_imports2c",
                  "false"
                ],
                [
                  "test_imports2",
                  "false"
                ],
                [
                  "test_imports4",
                  "false"
                ],
                [
                  "test_imports2b",
                  "false"
                ],
                [
                  "test_inspect",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_imports2a",
                  "false"
                ],
                [
                  "test_search",
                  "false"
                ],
                [
                  "test_imports3",
                  "false"
                ],
                [
                  "test_dot_net_libraries",
                  "false"
                ],
                [
                  "test_tips_hasattr_failure",
                  "false"
                ],
                [
                  "test_imports",
                  "false"
                ],
                [
                  "test_imports5",
                  "false"
                ],
                [
                  "test_imports2c",
                  "false"
                ],
                [
                  "test_imports2",
                  "false"
                ],
                [
                  "test_imports4",
                  "false"
                ],
                [
                  "test_imports2b",
                  "false"
                ],
                [
                  "test_inspect",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_imports2a",
                "false"
              ],
              [
                "test_search",
                "false"
              ],
              [
                "test_imports3",
                "false"
              ],
              [
                "test_dot_net_libraries",
                "false"
              ],
              [
                "test_tips_hasattr_failure",
                "false"
              ],
              [
                "test_imports",
                "false"
              ],
              [
                "test_imports5",
                "false"
              ],
              [
                "test_imports2c",
                "false"
              ],
              [
                "test_imports2",
                "false"
              ],
              [
                "test_imports4",
                "false"
              ],
              [
                "test_imports2b",
                "false"
              ],
              [
                "test_inspect",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_imports2a",
                "false"
              ],
              [
                "test_search",
                "false"
              ],
              [
                "test_imports3",
                "false"
              ],
              [
                "test_dot_net_libraries",
                "false"
              ],
              [
                "test_tips_hasattr_failure",
                "true"
              ],
              [
                "test_imports",
                "true"
              ],
              [
                "test_imports5",
                "false"
              ],
              [
                "test_imports2c",
                "true"
              ],
              [
                "test_imports2",
                "true"
              ],
              [
                "test_imports4",
                "true"
              ],
              [
                "test_imports2b",
                "true"
              ],
              [
                "test_inspect",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_imports2a",
                []
              ],
              [
                "test_search",
                []
              ],
              [
                "test_imports3",
                []
              ],
              [
                "test_dot_net_libraries",
                []
              ],
              [
                "test_tips_hasattr_failure",
                []
              ],
              [
                "test_imports",
                []
              ],
              [
                "test_imports5",
                []
              ],
              [
                "test_imports2c",
                []
              ],
              [
                "test_imports2",
                []
              ],
              [
                "test_imports4",
                []
              ],
              [
                "test_imports2b",
                []
              ],
              [
                "test_inspect",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_imports2a",
                "false"
              ],
              [
                "test_search",
                "false"
              ],
              [
                "test_imports3",
                "false"
              ],
              [
                "test_dot_net_libraries",
                "false"
              ],
              [
                "test_tips_hasattr_failure",
                "false"
              ],
              [
                "test_imports",
                "false"
              ],
              [
                "test_imports5",
                "false"
              ],
              [
                "test_imports2c",
                "false"
              ],
              [
                "test_imports2",
                "false"
              ],
              [
                "test_imports4",
                "false"
              ],
              [
                "test_imports2b",
                "false"
              ],
              [
                "test_inspect",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_imports2a",
                "false"
              ],
              [
                "test_search",
                "false"
              ],
              [
                "test_imports3",
                "false"
              ],
              [
                "test_dot_net_libraries",
                "false"
              ],
              [
                "test_tips_hasattr_failure",
                "false"
              ],
              [
                "test_imports",
                "false"
              ],
              [
                "test_imports5",
                "false"
              ],
              [
                "test_imports2c",
                "false"
              ],
              [
                "test_imports2",
                "false"
              ],
              [
                "test_imports4",
                "false"
              ],
              [
                "test_imports2b",
                "false"
              ],
              [
                "test_inspect",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_imports2a",
                  "0"
                ],
                [
                  "test_search",
                  "0"
                ],
                [
                  "test_imports3",
                  "0"
                ],
                [
                  "test_dot_net_libraries",
                  "0"
                ],
                [
                  "test_tips_hasattr_failure",
                  "0"
                ],
                [
                  "test_imports",
                  "0"
                ],
                [
                  "test_imports5",
                  "0"
                ],
                [
                  "test_imports2c",
                  "0"
                ],
                [
                  "test_imports2",
                  "0"
                ],
                [
                  "test_imports4",
                  "0"
                ],
                [
                  "test_imports2b",
                  "0"
                ],
                [
                  "test_inspect",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_imports2a",
                  "0"
                ],
                [
                  "test_search",
                  "0"
                ],
                [
                  "test_imports3",
                  "0"
                ],
                [
                  "test_dot_net_libraries",
                  "0"
                ],
                [
                  "test_tips_hasattr_failure",
                  "0"
                ],
                [
                  "test_imports",
                  "0"
                ],
                [
                  "test_imports5",
                  "0"
                ],
                [
                  "test_imports2c",
                  "0"
                ],
                [
                  "test_imports2",
                  "0"
                ],
                [
                  "test_imports4",
                  "0"
                ],
                [
                  "test_imports2b",
                  "0"
                ],
                [
                  "test_inspect",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_imports2a",
                "false"
              ],
              [
                "test_search",
                "false"
              ],
              [
                "test_imports3",
                "false"
              ],
              [
                "test_dot_net_libraries",
                "false"
              ],
              [
                "test_tips_hasattr_failure",
                "false"
              ],
              [
                "test_imports",
                "false"
              ],
              [
                "test_imports5",
                "false"
              ],
              [
                "test_imports2c",
                "false"
              ],
              [
                "test_imports2",
                "false"
              ],
              [
                "test_imports4",
                "false"
              ],
              [
                "test_imports2b",
                "false"
              ],
              [
                "test_inspect",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_imports2a",
                "false"
              ],
              [
                "test_search",
                "false"
              ],
              [
                "test_imports3",
                "false"
              ],
              [
                "test_dot_net_libraries",
                "false"
              ],
              [
                "test_tips_hasattr_failure",
                "false"
              ],
              [
                "test_imports",
                "false"
              ],
              [
                "test_imports5",
                "false"
              ],
              [
                "test_imports2c",
                "false"
              ],
              [
                "test_imports2",
                "false"
              ],
              [
                "test_imports4",
                "false"
              ],
              [
                "test_imports2b",
                "false"
              ],
              [
                "test_inspect",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_imports2a",
                "1"
              ],
              [
                "test_search",
                "1"
              ],
              [
                "test_imports3",
                "2"
              ],
              [
                "test_dot_net_libraries",
                "2"
              ],
              [
                "test_tips_hasattr_failure",
                "0"
              ],
              [
                "test_imports",
                "22"
              ],
              [
                "test_imports5",
                "1"
              ],
              [
                "test_imports2c",
                "2"
              ],
              [
                "test_imports2",
                "2"
              ],
              [
                "test_imports4",
                "1"
              ],
              [
                "test_imports2b",
                "2"
              ],
              [
                "test_inspect",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_imports2a",
                [
                  "tips"
                ]
              ],
              [
                "test_search",
                [
                  "col",
                  "s",
                  "f",
                  "line",
                  "foundAs"
                ]
              ],
              [
                "test_imports3",
                [
                  "ret",
                  "tip"
                ]
              ],
              [
                "test_dot_net_libraries",
                [
                  "tip"
                ]
              ],
              [
                "test_tips_hasattr_failure",
                [
                  "obj"
                ]
              ],
              [
                "test_imports",
                [
                  "t",
                  "tip",
                  "compiler_module"
                ]
              ],
              [
                "test_imports5",
                [
                  "s",
                  "tip"
                ]
              ],
              [
                "test_imports2c",
                [
                  "t",
                  "tips"
                ]
              ],
              [
                "test_imports2",
                [
                  "tip"
                ]
              ],
              [
                "test_imports4",
                [
                  "tip"
                ]
              ],
              [
                "test_imports2b",
                [
                  "t",
                  "tips"
                ]
              ],
              [
                "test_inspect",
                [
                  "obj"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_imports2a",
                []
              ],
              [
                "test_search",
                []
              ],
              [
                "test_imports3",
                []
              ],
              [
                "test_dot_net_libraries",
                []
              ],
              [
                "test_tips_hasattr_failure",
                []
              ],
              [
                "test_imports",
                []
              ],
              [
                "test_imports5",
                []
              ],
              [
                "test_imports2c",
                []
              ],
              [
                "test_imports2",
                []
              ],
              [
                "test_imports4",
                []
              ],
              [
                "test_imports2b",
                []
              ],
              [
                "test_inspect",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.463458799192566,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_imports2b",
                  "test_tips_hasattr_failure",
                  0.5126275422222092
                ],
                [
                  "test_imports2c",
                  "test_inspect",
                  0.37044158859434756
                ],
                [
                  "test_imports3",
                  "test_dot_net_libraries",
                  0.5977625776640616
                ],
                [
                  "test_imports5",
                  "test_tips_hasattr_failure",
                  0.3211981140502436
                ],
                [
                  "test_imports2c",
                  "test_search",
                  0.44935851713645847
                ],
                [
                  "test_imports4",
                  "test_imports2a",
                  0.5176715070972953
                ],
                [
                  "test_imports",
                  "test_search",
                  0.44039282279981623
                ],
                [
                  "test_imports2",
                  "test_search",
                  0.3859224924939799
                ],
                [
                  "test_imports2a",
                  "test_dot_net_libraries",
                  0.5186964284632009
                ],
                [
                  "test_imports3",
                  "test_imports2",
                  0.6293425244596854
                ],
                [
                  "test_tips_hasattr_failure",
                  "test_inspect",
                  0.4647311170512837
                ],
                [
                  "test_imports2c",
                  "test_imports",
                  0.6287704332146619
                ],
                [
                  "test_imports2b",
                  "test_dot_net_libraries",
                  0.48845465385643627
                ],
                [
                  "test_imports5",
                  "test_imports2c",
                  0.3215879404125774
                ],
                [
                  "test_imports4",
                  "test_imports2c",
                  0.47172817652486315
                ],
                [
                  "test_imports2",
                  "test_imports",
                  0.5809894539032467
                ],
                [
                  "test_dot_net_libraries",
                  "test_inspect",
                  0.24441185836892215
                ],
                [
                  "test_imports2",
                  "test_imports2b",
                  0.5009024373130382
                ],
                [
                  "test_imports2a",
                  "test_imports2b",
                  0.6411551197606888
                ],
                [
                  "test_imports2a",
                  "test_tips_hasattr_failure",
                  0.7685166168081058
                ],
                [
                  "test_imports4",
                  "test_tips_hasattr_failure",
                  0.4742358046305385
                ],
                [
                  "test_imports4",
                  "test_inspect",
                  0.2969569354582493
                ],
                [
                  "test_imports2",
                  "test_imports4",
                  0.6302087912488812
                ],
                [
                  "test_imports4",
                  "test_imports5",
                  0.2921669933928518
                ],
                [
                  "test_imports5",
                  "test_dot_net_libraries",
                  0.2841911955063796
                ],
                [
                  "test_search",
                  "test_dot_net_libraries",
                  0.3840122885898554
                ],
                [
                  "test_imports4",
                  "test_imports",
                  0.4998406374461513
                ],
                [
                  "test_imports2",
                  "test_inspect",
                  0.280717307022173
                ],
                [
                  "test_search",
                  "test_tips_hasattr_failure",
                  0.45635689750476227
                ],
                [
                  "test_imports4",
                  "test_search",
                  0.37908769828787275
                ],
                [
                  "test_imports3",
                  "test_tips_hasattr_failure",
                  0.43053084890961757
                ],
                [
                  "test_imports2b",
                  "test_search",
                  0.4412980119034903
                ],
                [
                  "test_imports2",
                  "test_imports2c",
                  0.47896278188041186
                ],
                [
                  "test_imports2",
                  "test_imports5",
                  0.3012974308618838
                ],
                [
                  "test_imports5",
                  "test_imports",
                  0.3456523587762143
                ],
                [
                  "test_imports2b",
                  "test_inspect",
                  0.3436556871445291
                ],
                [
                  "test_imports4",
                  "test_imports2b",
                  0.48748948890919197
                ],
                [
                  "test_imports3",
                  "test_imports",
                  0.5866675087175737
                ],
                [
                  "test_imports5",
                  "test_search",
                  0.30903502310036884
                ],
                [
                  "test_dot_net_libraries",
                  "test_tips_hasattr_failure",
                  0.43214232372195066
                ],
                [
                  "test_imports2",
                  "test_tips_hasattr_failure",
                  0.44830135980472835
                ],
                [
                  "test_imports4",
                  "test_dot_net_libraries",
                  0.47031708100177233
                ],
                [
                  "test_imports3",
                  "test_search",
                  0.48181205582971576
                ],
                [
                  "test_imports",
                  "test_tips_hasattr_failure",
                  0.5333452354942129
                ],
                [
                  "test_imports3",
                  "test_inspect",
                  0.264197974633739
                ],
                [
                  "test_imports3",
                  "test_imports2a",
                  0.5149166109215608
                ],
                [
                  "test_imports2c",
                  "test_tips_hasattr_failure",
                  0.5965610436297738
                ],
                [
                  "test_imports3",
                  "test_imports4",
                  0.5749661560353624
                ],
                [
                  "test_imports3",
                  "test_imports5",
                  0.33757978902788893
                ],
                [
                  "test_imports5",
                  "test_inspect",
                  0.18219813149998287
                ],
                [
                  "test_imports2b",
                  "test_imports",
                  0.5879792024825709
                ],
                [
                  "test_imports5",
                  "test_imports2a",
                  0.3766217885773548
                ],
                [
                  "test_imports2c",
                  "test_dot_net_libraries",
                  0.46015784683444055
                ],
                [
                  "test_imports",
                  "test_dot_net_libraries",
                  0.6590736350437327
                ],
                [
                  "test_imports3",
                  "test_imports2c",
                  0.5107329304369767
                ],
                [
                  "test_imports2a",
                  "test_search",
                  0.49618606177797414
                ],
                [
                  "test_search",
                  "test_inspect",
                  0.32732683535398854
                ],
                [
                  "test_imports5",
                  "test_imports2b",
                  0.3191971059593589
                ],
                [
                  "test_imports2a",
                  "test_imports",
                  0.6099183893673088
                ],
                [
                  "test_imports2",
                  "test_dot_net_libraries",
                  0.5557461733534296
                ],
                [
                  "test_imports3",
                  "test_imports2b",
                  0.5657110813623836
                ],
                [
                  "test_imports2b",
                  "test_imports2c",
                  0.8554161657593787
                ],
                [
                  "test_imports2",
                  "test_imports2a",
                  0.5106382978723404
                ],
                [
                  "test_imports2a",
                  "test_imports2c",
                  0.6936702358268034
                ],
                [
                  "test_imports",
                  "test_inspect",
                  0.2735373937834628
                ],
                [
                  "test_imports2a",
                  "test_inspect",
                  0.3930042298310422
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_imports2a",
                "false"
              ],
              [
                "test_search",
                "true"
              ],
              [
                "test_imports3",
                "false"
              ],
              [
                "test_dot_net_libraries",
                "false"
              ],
              [
                "test_tips_hasattr_failure",
                "false"
              ],
              [
                "test_imports",
                "false"
              ],
              [
                "test_imports5",
                "false"
              ],
              [
                "test_imports2c",
                "true"
              ],
              [
                "test_imports2",
                "false"
              ],
              [
                "test_imports4",
                "false"
              ],
              [
                "test_imports2b",
                "true"
              ],
              [
                "test_inspect",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 12
      }
    ]
  },
  {
    "name": "tests_\u0026_test_get_referrers.py",
    "testCases": [
      {
        "name": "Test",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_get_referrers4",
                  "[]"
                ],
                [
                  "test_get_referrers3",
                  "[]"
                ],
                [
                  "test_get_referrers5",
                  "[]"
                ],
                [
                  "test_get_referrers6",
                  "[]"
                ],
                [
                  "test_get_referrers1",
                  "[]"
                ],
                [
                  "test_get_referrers2",
                  "[]"
                ],
                [
                  "test_get_referrers7",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_get_referrers4",
                  "[PyAssertStatement]"
                ],
                [
                  "test_get_referrers3",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_get_referrers5",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_get_referrers6",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_get_referrers1",
                  "[PyAssertStatement]"
                ],
                [
                  "test_get_referrers2",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_get_referrers7",
                  "[PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_get_referrers4",
                  "false"
                ],
                [
                  "test_get_referrers3",
                  "false"
                ],
                [
                  "test_get_referrers5",
                  "false"
                ],
                [
                  "test_get_referrers6",
                  "true"
                ],
                [
                  "test_get_referrers1",
                  "false"
                ],
                [
                  "test_get_referrers2",
                  "false"
                ],
                [
                  "test_get_referrers7",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_get_referrers4",
                  "false"
                ],
                [
                  "test_get_referrers3",
                  "false"
                ],
                [
                  "test_get_referrers5",
                  "false"
                ],
                [
                  "test_get_referrers6",
                  "false"
                ],
                [
                  "test_get_referrers1",
                  "false"
                ],
                [
                  "test_get_referrers2",
                  "false"
                ],
                [
                  "test_get_referrers7",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_get_referrers4",
                  "false"
                ],
                [
                  "test_get_referrers3",
                  "false"
                ],
                [
                  "test_get_referrers5",
                  "false"
                ],
                [
                  "test_get_referrers6",
                  "false"
                ],
                [
                  "test_get_referrers1",
                  "false"
                ],
                [
                  "test_get_referrers2",
                  "false"
                ],
                [
                  "test_get_referrers7",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_get_referrers4",
                  "false"
                ],
                [
                  "test_get_referrers3",
                  "false"
                ],
                [
                  "test_get_referrers5",
                  "false"
                ],
                [
                  "test_get_referrers6",
                  "false"
                ],
                [
                  "test_get_referrers1",
                  "false"
                ],
                [
                  "test_get_referrers2",
                  "false"
                ],
                [
                  "test_get_referrers7",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_referrers4",
                "false"
              ],
              [
                "test_get_referrers3",
                "false"
              ],
              [
                "test_get_referrers5",
                "false"
              ],
              [
                "test_get_referrers6",
                "false"
              ],
              [
                "test_get_referrers1",
                "false"
              ],
              [
                "test_get_referrers2",
                "false"
              ],
              [
                "test_get_referrers7",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_get_referrers4",
                "false"
              ],
              [
                "test_get_referrers3",
                "false"
              ],
              [
                "test_get_referrers5",
                "false"
              ],
              [
                "test_get_referrers6",
                "false"
              ],
              [
                "test_get_referrers1",
                "false"
              ],
              [
                "test_get_referrers2",
                "false"
              ],
              [
                "test_get_referrers7",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_get_referrers4",
                []
              ],
              [
                "test_get_referrers3",
                []
              ],
              [
                "test_get_referrers5",
                []
              ],
              [
                "test_get_referrers6",
                []
              ],
              [
                "test_get_referrers1",
                []
              ],
              [
                "test_get_referrers2",
                []
              ],
              [
                "test_get_referrers7",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_referrers4",
                "false"
              ],
              [
                "test_get_referrers3",
                "false"
              ],
              [
                "test_get_referrers5",
                "false"
              ],
              [
                "test_get_referrers6",
                "false"
              ],
              [
                "test_get_referrers1",
                "false"
              ],
              [
                "test_get_referrers2",
                "false"
              ],
              [
                "test_get_referrers7",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_referrers4",
                "false"
              ],
              [
                "test_get_referrers3",
                "false"
              ],
              [
                "test_get_referrers5",
                "false"
              ],
              [
                "test_get_referrers6",
                "false"
              ],
              [
                "test_get_referrers1",
                "false"
              ],
              [
                "test_get_referrers2",
                "false"
              ],
              [
                "test_get_referrers7",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_get_referrers4",
                  "0"
                ],
                [
                  "test_get_referrers3",
                  "0"
                ],
                [
                  "test_get_referrers5",
                  "0"
                ],
                [
                  "test_get_referrers6",
                  "0"
                ],
                [
                  "test_get_referrers1",
                  "0"
                ],
                [
                  "test_get_referrers2",
                  "0"
                ],
                [
                  "test_get_referrers7",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_get_referrers4",
                  "0"
                ],
                [
                  "test_get_referrers3",
                  "0"
                ],
                [
                  "test_get_referrers5",
                  "0"
                ],
                [
                  "test_get_referrers6",
                  "0"
                ],
                [
                  "test_get_referrers1",
                  "0"
                ],
                [
                  "test_get_referrers2",
                  "0"
                ],
                [
                  "test_get_referrers7",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_get_referrers4",
                "false"
              ],
              [
                "test_get_referrers3",
                "false"
              ],
              [
                "test_get_referrers5",
                "false"
              ],
              [
                "test_get_referrers6",
                "false"
              ],
              [
                "test_get_referrers1",
                "false"
              ],
              [
                "test_get_referrers2",
                "false"
              ],
              [
                "test_get_referrers7",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": true,
            "detail": [
              [
                "test_get_referrers4",
                "false"
              ],
              [
                "test_get_referrers3",
                "false"
              ],
              [
                "test_get_referrers5",
                "false"
              ],
              [
                "test_get_referrers6",
                "false"
              ],
              [
                "test_get_referrers1",
                "false"
              ],
              [
                "test_get_referrers2",
                "false"
              ],
              [
                "test_get_referrers7",
                "true"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_referrers4",
                "1"
              ],
              [
                "test_get_referrers3",
                "2"
              ],
              [
                "test_get_referrers5",
                "4"
              ],
              [
                "test_get_referrers6",
                "2"
              ],
              [
                "test_get_referrers1",
                "1"
              ],
              [
                "test_get_referrers2",
                "2"
              ],
              [
                "test_get_referrers7",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_get_referrers4",
                [
                  "result",
                  "obj"
                ]
              ],
              [
                "test_get_referrers3",
                [
                  "result",
                  "contained",
                  "obj"
                ]
              ],
              [
                "test_get_referrers5",
                [
                  "container",
                  "result"
                ]
              ],
              [
                "test_get_referrers6",
                [
                  "container",
                  "result"
                ]
              ],
              [
                "test_get_referrers1",
                [
                  "container",
                  "result",
                  "contained"
                ]
              ],
              [
                "test_get_referrers2",
                [
                  "result",
                  "contained",
                  "obj"
                ]
              ],
              [
                "test_get_referrers7",
                [
                  "result",
                  "t"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_get_referrers4",
                []
              ],
              [
                "test_get_referrers3",
                []
              ],
              [
                "test_get_referrers5",
                []
              ],
              [
                "test_get_referrers6",
                []
              ],
              [
                "test_get_referrers1",
                []
              ],
              [
                "test_get_referrers2",
                []
              ],
              [
                "test_get_referrers7",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6785996515921208,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_get_referrers4",
                  "test_get_referrers6",
                  0.7116704434946592
                ],
                [
                  "test_get_referrers2",
                  "test_get_referrers7",
                  0.623828952178684
                ],
                [
                  "test_get_referrers1",
                  "test_get_referrers6",
                  0.590642738006077
                ],
                [
                  "test_get_referrers2",
                  "test_get_referrers3",
                  1.0000000000000002
                ],
                [
                  "test_get_referrers3",
                  "test_get_referrers7",
                  0.623828952178684
                ],
                [
                  "test_get_referrers5",
                  "test_get_referrers7",
                  0.556890098923011
                ],
                [
                  "test_get_referrers1",
                  "test_get_referrers5",
                  0.6154989040299494
                ],
                [
                  "test_get_referrers3",
                  "test_get_referrers6",
                  0.7084211886308289
                ],
                [
                  "test_get_referrers2",
                  "test_get_referrers5",
                  0.6824010421050145
                ],
                [
                  "test_get_referrers3",
                  "test_get_referrers5",
                  0.6824010421050145
                ],
                [
                  "test_get_referrers1",
                  "test_get_referrers2",
                  0.8210952344683213
                ],
                [
                  "test_get_referrers1",
                  "test_get_referrers3",
                  0.8210952344683213
                ],
                [
                  "test_get_referrers2",
                  "test_get_referrers6",
                  0.7084211886308289
                ],
                [
                  "test_get_referrers1",
                  "test_get_referrers4",
                  0.49574996225755774
                ],
                [
                  "test_get_referrers4",
                  "test_get_referrers7",
                  0.6650921183504055
                ],
                [
                  "test_get_referrers3",
                  "test_get_referrers4",
                  0.7695794793334836
                ],
                [
                  "test_get_referrers4",
                  "test_get_referrers5",
                  0.6236348727784989
                ],
                [
                  "test_get_referrers5",
                  "test_get_referrers6",
                  0.7571971816788848
                ],
                [
                  "test_get_referrers2",
                  "test_get_referrers4",
                  0.7695794793334836
                ],
                [
                  "test_get_referrers1",
                  "test_get_referrers7",
                  0.47007805104307676
                ],
                [
                  "test_get_referrers6",
                  "test_get_referrers7",
                  0.5534865194397511
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_get_referrers4",
                "false"
              ],
              [
                "test_get_referrers3",
                "false"
              ],
              [
                "test_get_referrers5",
                "false"
              ],
              [
                "test_get_referrers6",
                "false"
              ],
              [
                "test_get_referrers1",
                "false"
              ],
              [
                "test_get_referrers2",
                "false"
              ],
              [
                "test_get_referrers7",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      }
    ]
  },
  {
    "name": "tests_\u0026_test_jysimpleTipper.py",
    "testCases": [
      {
        "name": "TestMod",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_imports1",
                  "[]"
                ],
                [
                  "test_imports1a",
                  "[]"
                ],
                [
                  "test_imports1b",
                  "[PyCallExpression: self.fail]"
                ],
                [
                  "test_imports2a",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_imports",
                  "[]"
                ],
                [
                  "test_imports3",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_imports5",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_tip_on_string",
                  "[]"
                ],
                [
                  "test_imports1c",
                  "[]"
                ],
                [
                  "test_imports2",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_imports1",
                  "[PyAssertStatement]"
                ],
                [
                  "test_imports1a",
                  "[PyAssertStatement]"
                ],
                [
                  "test_imports1b",
                  "[]"
                ],
                [
                  "test_imports2a",
                  "[PyAssertStatement]"
                ],
                [
                  "test_imports",
                  "[]"
                ],
                [
                  "test_imports3",
                  "[PyAssertStatement]"
                ],
                [
                  "test_imports5",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_tip_on_string",
                  "[]"
                ],
                [
                  "test_imports1c",
                  "[PyAssertStatement]"
                ],
                [
                  "test_imports2",
                  "[PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_imports1",
                  "false"
                ],
                [
                  "test_imports1a",
                  "true"
                ],
                [
                  "test_imports1b",
                  "false"
                ],
                [
                  "test_imports2a",
                  "false"
                ],
                [
                  "test_imports",
                  "false"
                ],
                [
                  "test_imports3",
                  "false"
                ],
                [
                  "test_imports5",
                  "true"
                ],
                [
                  "test_tip_on_string",
                  "false"
                ],
                [
                  "test_imports1c",
                  "true"
                ],
                [
                  "test_imports2",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_imports1",
                  "false"
                ],
                [
                  "test_imports1a",
                  "false"
                ],
                [
                  "test_imports1b",
                  "false"
                ],
                [
                  "test_imports2a",
                  "false"
                ],
                [
                  "test_imports",
                  "false"
                ],
                [
                  "test_imports3",
                  "false"
                ],
                [
                  "test_imports5",
                  "false"
                ],
                [
                  "test_tip_on_string",
                  "false"
                ],
                [
                  "test_imports1c",
                  "false"
                ],
                [
                  "test_imports2",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_imports1",
                  "false"
                ],
                [
                  "test_imports1a",
                  "false"
                ],
                [
                  "test_imports1b",
                  "false"
                ],
                [
                  "test_imports2a",
                  "false"
                ],
                [
                  "test_imports",
                  "false"
                ],
                [
                  "test_imports3",
                  "false"
                ],
                [
                  "test_imports5",
                  "true"
                ],
                [
                  "test_tip_on_string",
                  "false"
                ],
                [
                  "test_imports1c",
                  "false"
                ],
                [
                  "test_imports2",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_imports1",
                  "false"
                ],
                [
                  "test_imports1a",
                  "false"
                ],
                [
                  "test_imports1b",
                  "false"
                ],
                [
                  "test_imports2a",
                  "false"
                ],
                [
                  "test_imports",
                  "false"
                ],
                [
                  "test_imports3",
                  "false"
                ],
                [
                  "test_imports5",
                  "true"
                ],
                [
                  "test_tip_on_string",
                  "false"
                ],
                [
                  "test_imports1c",
                  "false"
                ],
                [
                  "test_imports2",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_imports1",
                "false"
              ],
              [
                "test_imports1a",
                "false"
              ],
              [
                "test_imports1b",
                "false"
              ],
              [
                "test_imports2a",
                "false"
              ],
              [
                "test_imports",
                "false"
              ],
              [
                "test_imports3",
                "false"
              ],
              [
                "test_imports5",
                "false"
              ],
              [
                "test_tip_on_string",
                "false"
              ],
              [
                "test_imports1c",
                "false"
              ],
              [
                "test_imports2",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_imports1",
                "false"
              ],
              [
                "test_imports1a",
                "false"
              ],
              [
                "test_imports1b",
                "true"
              ],
              [
                "test_imports2a",
                "false"
              ],
              [
                "test_imports",
                "false"
              ],
              [
                "test_imports3",
                "false"
              ],
              [
                "test_imports5",
                "false"
              ],
              [
                "test_tip_on_string",
                "false"
              ],
              [
                "test_imports1c",
                "false"
              ],
              [
                "test_imports2",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_imports1",
                []
              ],
              [
                "test_imports1a",
                []
              ],
              [
                "test_imports1b",
                []
              ],
              [
                "test_imports2a",
                []
              ],
              [
                "test_imports",
                []
              ],
              [
                "test_imports3",
                []
              ],
              [
                "test_imports5",
                []
              ],
              [
                "test_tip_on_string",
                []
              ],
              [
                "test_imports1c",
                []
              ],
              [
                "test_imports2",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_imports1",
                "false"
              ],
              [
                "test_imports1a",
                "false"
              ],
              [
                "test_imports1b",
                "false"
              ],
              [
                "test_imports2a",
                "false"
              ],
              [
                "test_imports",
                "false"
              ],
              [
                "test_imports3",
                "false"
              ],
              [
                "test_imports5",
                "false"
              ],
              [
                "test_tip_on_string",
                "false"
              ],
              [
                "test_imports1c",
                "false"
              ],
              [
                "test_imports2",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_imports1",
                "false"
              ],
              [
                "test_imports1a",
                "false"
              ],
              [
                "test_imports1b",
                "false"
              ],
              [
                "test_imports2a",
                "false"
              ],
              [
                "test_imports",
                "false"
              ],
              [
                "test_imports3",
                "false"
              ],
              [
                "test_imports5",
                "false"
              ],
              [
                "test_tip_on_string",
                "false"
              ],
              [
                "test_imports1c",
                "false"
              ],
              [
                "test_imports2",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_imports1",
                  "0"
                ],
                [
                  "test_imports1a",
                  "0"
                ],
                [
                  "test_imports1b",
                  "0"
                ],
                [
                  "test_imports2a",
                  "0"
                ],
                [
                  "test_imports",
                  "0"
                ],
                [
                  "test_imports3",
                  "0"
                ],
                [
                  "test_imports5",
                  "0"
                ],
                [
                  "test_tip_on_string",
                  "0"
                ],
                [
                  "test_imports1c",
                  "0"
                ],
                [
                  "test_imports2",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_imports1",
                  "0"
                ],
                [
                  "test_imports1a",
                  "0"
                ],
                [
                  "test_imports1b",
                  "0"
                ],
                [
                  "test_imports2a",
                  "0"
                ],
                [
                  "test_imports",
                  "0"
                ],
                [
                  "test_imports3",
                  "0"
                ],
                [
                  "test_imports5",
                  "0"
                ],
                [
                  "test_tip_on_string",
                  "0"
                ],
                [
                  "test_imports1c",
                  "0"
                ],
                [
                  "test_imports2",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_imports1",
                "false"
              ],
              [
                "test_imports1a",
                "false"
              ],
              [
                "test_imports1b",
                "false"
              ],
              [
                "test_imports2a",
                "false"
              ],
              [
                "test_imports",
                "false"
              ],
              [
                "test_imports3",
                "false"
              ],
              [
                "test_imports5",
                "false"
              ],
              [
                "test_tip_on_string",
                "false"
              ],
              [
                "test_imports1c",
                "false"
              ],
              [
                "test_imports2",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_imports1",
                "false"
              ],
              [
                "test_imports1a",
                "false"
              ],
              [
                "test_imports1b",
                "false"
              ],
              [
                "test_imports2a",
                "false"
              ],
              [
                "test_imports",
                "false"
              ],
              [
                "test_imports3",
                "false"
              ],
              [
                "test_imports5",
                "false"
              ],
              [
                "test_tip_on_string",
                "false"
              ],
              [
                "test_imports1c",
                "false"
              ],
              [
                "test_imports2",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_imports1",
                "2"
              ],
              [
                "test_imports1a",
                "1"
              ],
              [
                "test_imports1b",
                "0"
              ],
              [
                "test_imports2a",
                "3"
              ],
              [
                "test_imports",
                "3"
              ],
              [
                "test_imports3",
                "3"
              ],
              [
                "test_imports5",
                "22"
              ],
              [
                "test_tip_on_string",
                "2"
              ],
              [
                "test_imports1c",
                "1"
              ],
              [
                "test_imports2",
                "3"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_imports1",
                [
                  "ret",
                  "f",
                  "tip"
                ]
              ],
              [
                "test_imports1a",
                [
                  "f",
                  "tip"
                ]
              ],
              [
                "test_imports1b",
                [
                  "f",
                  "tip"
                ]
              ],
              [
                "test_imports2a",
                [
                  "ret",
                  "f",
                  "tip"
                ]
              ],
              [
                "test_imports",
                [
                  "tip"
                ]
              ],
              [
                "test_imports3",
                [
                  "ret",
                  "f",
                  "tip"
                ]
              ],
              [
                "test_imports5",
                [
                  "f",
                  "tip",
                  "tup"
                ]
              ],
              [
                "test_tip_on_string",
                [
                  "f",
                  "tip"
                ]
              ],
              [
                "test_imports1c",
                [
                  "f",
                  "tip"
                ]
              ],
              [
                "test_imports2",
                [
                  "ret",
                  "f",
                  "tip"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_imports1",
                []
              ],
              [
                "test_imports1a",
                []
              ],
              [
                "test_imports1b",
                []
              ],
              [
                "test_imports2a",
                []
              ],
              [
                "test_imports",
                []
              ],
              [
                "test_imports3",
                []
              ],
              [
                "test_imports5",
                []
              ],
              [
                "test_tip_on_string",
                []
              ],
              [
                "test_imports1c",
                []
              ],
              [
                "test_imports2",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6057814854295777,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_imports3",
                  "test_tip_on_string",
                  0.6803091303374612
                ],
                [
                  "test_imports1c",
                  "test_imports5",
                  0.6691488089375844
                ],
                [
                  "test_imports1b",
                  "test_imports5",
                  0.6200248014880992
                ],
                [
                  "test_imports1a",
                  "test_imports5",
                  0.6568881121298069
                ],
                [
                  "test_imports2",
                  "test_imports",
                  0.5535093034625594
                ],
                [
                  "test_imports1c",
                  "test_imports1",
                  0.5150262026246049
                ],
                [
                  "test_imports1",
                  "test_imports5",
                  0.5880235214112941
                ],
                [
                  "test_imports2a",
                  "test_imports5",
                  0.661594104021614
                ],
                [
                  "test_imports2",
                  "test_imports3",
                  0.8767140075192092
                ],
                [
                  "test_imports1b",
                  "test_imports2",
                  0.5413902920037097
                ],
                [
                  "test_imports1a",
                  "test_imports1c",
                  0.9333756642553378
                ],
                [
                  "test_imports1c",
                  "test_imports2",
                  0.47565149415449404
                ],
                [
                  "test_imports1a",
                  "test_imports2",
                  0.4711428474315455
                ],
                [
                  "test_imports1",
                  "test_imports2",
                  0.8280086818880266
                ],
                [
                  "test_imports1a",
                  "test_imports1b",
                  0.688694842115344
                ],
                [
                  "test_imports1a",
                  "test_imports",
                  0.4255961412791452
                ],
                [
                  "test_imports1c",
                  "test_imports1b",
                  0.6952853735432165
                ],
                [
                  "test_imports2a",
                  "test_imports",
                  0.5564866749122019
                ],
                [
                  "test_imports1c",
                  "test_imports",
                  0.4296689244236597
                ],
                [
                  "test_imports",
                  "test_imports5",
                  0.6730016105677307
                ],
                [
                  "test_imports2",
                  "test_imports5",
                  0.6391208818130866
                ],
                [
                  "test_imports1c",
                  "test_tip_on_string",
                  0.43514263457633695
                ],
                [
                  "test_imports2",
                  "test_imports2a",
                  0.8624575450871764
                ],
                [
                  "test_imports1a",
                  "test_tip_on_string",
                  0.43101796675229226
                ],
                [
                  "test_imports2a",
                  "test_tip_on_string",
                  0.6692464559925296
                ],
                [
                  "test_imports1a",
                  "test_imports2a",
                  0.49341371149144847
                ],
                [
                  "test_imports1a",
                  "test_imports1",
                  0.5101443274928474
                ],
                [
                  "test_imports2",
                  "test_tip_on_string",
                  0.6726727939963124
                ],
                [
                  "test_imports1",
                  "test_imports2a",
                  0.7337410805615772
                ],
                [
                  "test_imports1c",
                  "test_imports2a",
                  0.4732287073173821
                ],
                [
                  "test_imports1b",
                  "test_imports3",
                  0.5424508028966484
                ],
                [
                  "test_imports1",
                  "test_imports3",
                  0.779773029163932
                ],
                [
                  "test_imports1a",
                  "test_imports3",
                  0.4764913694467432
                ],
                [
                  "test_imports1b",
                  "test_imports",
                  0.47946330148538413
                ],
                [
                  "test_imports1",
                  "test_imports",
                  0.47946330148538413
                ],
                [
                  "test_tip_on_string",
                  "test_imports5",
                  0.6252466941299535
                ],
                [
                  "test_imports1b",
                  "test_tip_on_string",
                  0.5098499285104608
                ],
                [
                  "test_imports3",
                  "test_imports5",
                  0.6725302846405511
                ],
                [
                  "test_imports3",
                  "test_imports",
                  0.5185449728701348
                ],
                [
                  "test_tip_on_string",
                  "test_imports",
                  0.6076436202502
                ],
                [
                  "test_imports2a",
                  "test_imports3",
                  0.852573586519139
                ],
                [
                  "test_imports1b",
                  "test_imports1",
                  0.5862068965517242
                ],
                [
                  "test_imports1b",
                  "test_imports2a",
                  0.5336298767720561
                ],
                [
                  "test_imports1",
                  "test_tip_on_string",
                  0.6555213366563069
                ],
                [
                  "test_imports1c",
                  "test_imports3",
                  0.48105119936474167
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_imports1",
                "false"
              ],
              [
                "test_imports1a",
                "false"
              ],
              [
                "test_imports1b",
                "false"
              ],
              [
                "test_imports2a",
                "false"
              ],
              [
                "test_imports",
                "false"
              ],
              [
                "test_imports3",
                "false"
              ],
              [
                "test_imports5",
                "true"
              ],
              [
                "test_tip_on_string",
                "false"
              ],
              [
                "test_imports1c",
                "false"
              ],
              [
                "test_imports2",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 10
      },
      {
        "name": "TestSearch",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_search_on_jython",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertNotEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_search_on_jython",
                  "[PyAssertStatement, PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_search_on_jython",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_search_on_jython",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_search_on_jython",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_search_on_jython",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_search_on_jython",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_search_on_jython",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_search_on_jython",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_search_on_jython",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_search_on_jython",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_search_on_jython",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_search_on_jython",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_search_on_jython",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_search_on_jython",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_search_on_jython",
                "4"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_search_on_jython",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_search_on_jython",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_search_on_jython",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      },
      {
        "name": "TestCompl",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_getting_info_on_jython",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_getting_info_on_jython",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_getting_info_on_jython",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_getting_info_on_jython",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_getting_info_on_jython",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_getting_info_on_jython",
                  "true"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_getting_info_on_jython",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_getting_info_on_jython",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_getting_info_on_jython",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_getting_info_on_jython",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_getting_info_on_jython",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_getting_info_on_jython",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_getting_info_on_jython",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_getting_info_on_jython",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_getting_info_on_jython",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_getting_info_on_jython",
                "30"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_getting_info_on_jython",
                [
                  "a",
                  "isMet"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_getting_info_on_jython",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_getting_info_on_jython",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_pydev_ipython_011.py",
    "testCases": [
      {
        "name": "TestPyDevFrontEnd",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "testAddExec_1",
                  "[]"
                ],
                [
                  "testAddExec_3",
                  "[]"
                ],
                [
                  "test_complete_does_not_do_python_matches",
                  "[]"
                ],
                [
                  "testAddExec_2",
                  "[]"
                ],
                [
                  "testGetCompletions_1",
                  "[]"
                ],
                [
                  "testGetCompletions_2",
                  "[]"
                ],
                [
                  "testGetCompletions_3",
                  "[]"
                ],
                [
                  "test_complete",
                  "[]"
                ],
                [
                  "test_get_namespace",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "testAddExec_1",
                  "[]"
                ],
                [
                  "testAddExec_3",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_complete_does_not_do_python_matches",
                  "[PyAssertStatement]"
                ],
                [
                  "testAddExec_2",
                  "[PyAssertStatement]"
                ],
                [
                  "testGetCompletions_1",
                  "[PyAssertStatement]"
                ],
                [
                  "testGetCompletions_2",
                  "[PyAssertStatement]"
                ],
                [
                  "testGetCompletions_3",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_complete",
                  "[PyAssertStatement]"
                ],
                [
                  "test_get_namespace",
                  "[PyAssertStatement, PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "testAddExec_1",
                  "false"
                ],
                [
                  "testAddExec_3",
                  "false"
                ],
                [
                  "test_complete_does_not_do_python_matches",
                  "false"
                ],
                [
                  "testAddExec_2",
                  "false"
                ],
                [
                  "testGetCompletions_1",
                  "false"
                ],
                [
                  "testGetCompletions_2",
                  "false"
                ],
                [
                  "testGetCompletions_3",
                  "false"
                ],
                [
                  "test_complete",
                  "false"
                ],
                [
                  "test_get_namespace",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "testAddExec_1",
                  "false"
                ],
                [
                  "testAddExec_3",
                  "false"
                ],
                [
                  "test_complete_does_not_do_python_matches",
                  "false"
                ],
                [
                  "testAddExec_2",
                  "false"
                ],
                [
                  "testGetCompletions_1",
                  "true"
                ],
                [
                  "testGetCompletions_2",
                  "true"
                ],
                [
                  "testGetCompletions_3",
                  "false"
                ],
                [
                  "test_complete",
                  "false"
                ],
                [
                  "test_get_namespace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "testAddExec_1",
                  "false"
                ],
                [
                  "testAddExec_3",
                  "false"
                ],
                [
                  "test_complete_does_not_do_python_matches",
                  "false"
                ],
                [
                  "testAddExec_2",
                  "false"
                ],
                [
                  "testGetCompletions_1",
                  "false"
                ],
                [
                  "testGetCompletions_2",
                  "false"
                ],
                [
                  "testGetCompletions_3",
                  "false"
                ],
                [
                  "test_complete",
                  "false"
                ],
                [
                  "test_get_namespace",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "testAddExec_1",
                  "false"
                ],
                [
                  "testAddExec_3",
                  "false"
                ],
                [
                  "test_complete_does_not_do_python_matches",
                  "false"
                ],
                [
                  "testAddExec_2",
                  "false"
                ],
                [
                  "testGetCompletions_1",
                  "false"
                ],
                [
                  "testGetCompletions_2",
                  "false"
                ],
                [
                  "testGetCompletions_3",
                  "false"
                ],
                [
                  "test_complete",
                  "false"
                ],
                [
                  "test_get_namespace",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "testAddExec_1",
                "false"
              ],
              [
                "testAddExec_3",
                "false"
              ],
              [
                "test_complete_does_not_do_python_matches",
                "false"
              ],
              [
                "testAddExec_2",
                "false"
              ],
              [
                "testGetCompletions_1",
                "false"
              ],
              [
                "testGetCompletions_2",
                "false"
              ],
              [
                "testGetCompletions_3",
                "false"
              ],
              [
                "test_complete",
                "false"
              ],
              [
                "test_get_namespace",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "testAddExec_1",
                "false"
              ],
              [
                "testAddExec_3",
                "false"
              ],
              [
                "test_complete_does_not_do_python_matches",
                "false"
              ],
              [
                "testAddExec_2",
                "false"
              ],
              [
                "testGetCompletions_1",
                "false"
              ],
              [
                "testGetCompletions_2",
                "false"
              ],
              [
                "testGetCompletions_3",
                "false"
              ],
              [
                "test_complete",
                "false"
              ],
              [
                "test_get_namespace",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "testAddExec_1",
                []
              ],
              [
                "testAddExec_3",
                []
              ],
              [
                "test_complete_does_not_do_python_matches",
                []
              ],
              [
                "testAddExec_2",
                []
              ],
              [
                "testGetCompletions_1",
                []
              ],
              [
                "testGetCompletions_2",
                []
              ],
              [
                "testGetCompletions_3",
                []
              ],
              [
                "test_complete",
                []
              ],
              [
                "test_get_namespace",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "testAddExec_1",
                "false"
              ],
              [
                "testAddExec_3",
                "false"
              ],
              [
                "test_complete_does_not_do_python_matches",
                "false"
              ],
              [
                "testAddExec_2",
                "false"
              ],
              [
                "testGetCompletions_1",
                "false"
              ],
              [
                "testGetCompletions_2",
                "false"
              ],
              [
                "testGetCompletions_3",
                "false"
              ],
              [
                "test_complete",
                "false"
              ],
              [
                "test_get_namespace",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "testAddExec_1",
                "false"
              ],
              [
                "testAddExec_3",
                "false"
              ],
              [
                "test_complete_does_not_do_python_matches",
                "false"
              ],
              [
                "testAddExec_2",
                "false"
              ],
              [
                "testGetCompletions_1",
                "false"
              ],
              [
                "testGetCompletions_2",
                "false"
              ],
              [
                "testGetCompletions_3",
                "false"
              ],
              [
                "test_complete",
                "false"
              ],
              [
                "test_get_namespace",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "testAddExec_1",
                  "0"
                ],
                [
                  "testAddExec_3",
                  "0"
                ],
                [
                  "test_complete_does_not_do_python_matches",
                  "0"
                ],
                [
                  "testAddExec_2",
                  "0"
                ],
                [
                  "testGetCompletions_1",
                  "0"
                ],
                [
                  "testGetCompletions_2",
                  "0"
                ],
                [
                  "testGetCompletions_3",
                  "0"
                ],
                [
                  "test_complete",
                  "0"
                ],
                [
                  "test_get_namespace",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "testAddExec_1",
                  "0"
                ],
                [
                  "testAddExec_3",
                  "0"
                ],
                [
                  "test_complete_does_not_do_python_matches",
                  "0"
                ],
                [
                  "testAddExec_2",
                  "0"
                ],
                [
                  "testGetCompletions_1",
                  "0"
                ],
                [
                  "testGetCompletions_2",
                  "0"
                ],
                [
                  "testGetCompletions_3",
                  "0"
                ],
                [
                  "test_complete",
                  "0"
                ],
                [
                  "test_get_namespace",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "testAddExec_1",
                "false"
              ],
              [
                "testAddExec_3",
                "false"
              ],
              [
                "test_complete_does_not_do_python_matches",
                "false"
              ],
              [
                "testAddExec_2",
                "false"
              ],
              [
                "testGetCompletions_1",
                "false"
              ],
              [
                "testGetCompletions_2",
                "false"
              ],
              [
                "testGetCompletions_3",
                "false"
              ],
              [
                "test_complete",
                "false"
              ],
              [
                "test_get_namespace",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "testAddExec_1",
                "false"
              ],
              [
                "testAddExec_3",
                "false"
              ],
              [
                "test_complete_does_not_do_python_matches",
                "false"
              ],
              [
                "testAddExec_2",
                "false"
              ],
              [
                "testGetCompletions_1",
                "false"
              ],
              [
                "testGetCompletions_2",
                "false"
              ],
              [
                "testGetCompletions_3",
                "false"
              ],
              [
                "test_complete",
                "false"
              ],
              [
                "test_get_namespace",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "testAddExec_1",
                "0"
              ],
              [
                "testAddExec_3",
                "2"
              ],
              [
                "test_complete_does_not_do_python_matches",
                "1"
              ],
              [
                "testAddExec_2",
                "1"
              ],
              [
                "testGetCompletions_1",
                "1"
              ],
              [
                "testGetCompletions_2",
                "1"
              ],
              [
                "testGetCompletions_3",
                "2"
              ],
              [
                "test_complete",
                "1"
              ],
              [
                "test_get_namespace",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "testAddExec_1",
                []
              ],
              [
                "testAddExec_3",
                []
              ],
              [
                "test_complete_does_not_do_python_matches",
                [
                  "unused_text",
                  "matches"
                ]
              ],
              [
                "testAddExec_2",
                []
              ],
              [
                "testGetCompletions_1",
                [
                  "res",
                  "matches"
                ]
              ],
              [
                "testGetCompletions_2",
                [
                  "res",
                  "matches"
                ]
              ],
              [
                "testGetCompletions_3",
                [
                  "res"
                ]
              ],
              [
                "test_complete",
                [
                  "unused_text",
                  "matches"
                ]
              ],
              [
                "test_get_namespace",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "testAddExec_1",
                []
              ],
              [
                "testAddExec_3",
                []
              ],
              [
                "test_complete_does_not_do_python_matches",
                []
              ],
              [
                "testAddExec_2",
                []
              ],
              [
                "testGetCompletions_1",
                []
              ],
              [
                "testGetCompletions_2",
                []
              ],
              [
                "testGetCompletions_3",
                []
              ],
              [
                "test_complete",
                []
              ],
              [
                "test_get_namespace",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.41853369743089885,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "testAddExec_1",
                  "testGetCompletions_1",
                  0.3965353360846149
                ],
                [
                  "testAddExec_1",
                  "testGetCompletions_2",
                  0.3910371502940008
                ],
                [
                  "testAddExec_3",
                  "test_complete_does_not_do_python_matches",
                  0.28703232883665536
                ],
                [
                  "testAddExec_3",
                  "testGetCompletions_1",
                  0.3221774784572044
                ],
                [
                  "testAddExec_3",
                  "testGetCompletions_2",
                  0.35186577527449836
                ],
                [
                  "testAddExec_1",
                  "test_complete_does_not_do_python_matches",
                  0.4181666987914534
                ],
                [
                  "testAddExec_1",
                  "testAddExec_3",
                  0.6101390870965726
                ],
                [
                  "testAddExec_2",
                  "testAddExec_3",
                  0.7579399280107457
                ],
                [
                  "testAddExec_2",
                  "testGetCompletions_3",
                  0.49295030175464943
                ],
                [
                  "testAddExec_2",
                  "testGetCompletions_1",
                  0.3885236953561377
                ],
                [
                  "testAddExec_2",
                  "testGetCompletions_2",
                  0.4282114890624484
                ],
                [
                  "testAddExec_3",
                  "test_complete",
                  0.27594578479490517
                ],
                [
                  "testAddExec_2",
                  "test_complete",
                  0.29541957835039856
                ],
                [
                  "testAddExec_3",
                  "testGetCompletions_3",
                  0.38736729186060453
                ],
                [
                  "test_get_namespace",
                  "testGetCompletions_1",
                  0.3382672568989479
                ],
                [
                  "test_get_namespace",
                  "testGetCompletions_2",
                  0.3866295405893279
                ],
                [
                  "testAddExec_3",
                  "test_get_namespace",
                  0.45301336337355486
                ],
                [
                  "test_complete",
                  "testGetCompletions_3",
                  0.3708099243547831
                ],
                [
                  "testAddExec_2",
                  "test_get_namespace",
                  0.3731961445658845
                ],
                [
                  "testAddExec_2",
                  "test_complete_does_not_do_python_matches",
                  0.3670390558076351
                ],
                [
                  "test_get_namespace",
                  "test_complete",
                  0.24450482346091287
                ],
                [
                  "test_complete",
                  "testGetCompletions_1",
                  0.25619979076171634
                ],
                [
                  "test_complete",
                  "testGetCompletions_2",
                  0.3329001514305916
                ],
                [
                  "testAddExec_1",
                  "testAddExec_2",
                  0.6531972647421808
                ],
                [
                  "test_complete",
                  "test_complete_does_not_do_python_matches",
                  0.2994447585743575
                ],
                [
                  "test_get_namespace",
                  "testGetCompletions_3",
                  0.3214479807804462
                ],
                [
                  "test_complete_does_not_do_python_matches",
                  "testGetCompletions_1",
                  0.8438945294058735
                ],
                [
                  "test_complete_does_not_do_python_matches",
                  "testGetCompletions_2",
                  0.6131951784122237
                ],
                [
                  "test_complete_does_not_do_python_matches",
                  "testGetCompletions_3",
                  0.5084329831557506
                ],
                [
                  "testAddExec_1",
                  "test_complete",
                  0.251259453814803
                ],
                [
                  "testGetCompletions_1",
                  "testGetCompletions_3",
                  0.4845072676635228
                ],
                [
                  "test_get_namespace",
                  "test_complete_does_not_do_python_matches",
                  0.27744892230891394
                ],
                [
                  "testGetCompletions_1",
                  "testGetCompletions_2",
                  0.5804979100913481
                ],
                [
                  "testAddExec_1",
                  "testGetCompletions_3",
                  0.5776508941874458
                ],
                [
                  "testAddExec_1",
                  "test_get_namespace",
                  0.22116293423234576
                ],
                [
                  "testGetCompletions_2",
                  "testGetCompletions_3",
                  0.5092010548749033
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "testAddExec_1",
                "false"
              ],
              [
                "testAddExec_3",
                "false"
              ],
              [
                "test_complete_does_not_do_python_matches",
                "false"
              ],
              [
                "testAddExec_2",
                "false"
              ],
              [
                "testGetCompletions_1",
                "false"
              ],
              [
                "testGetCompletions_2",
                "false"
              ],
              [
                "testGetCompletions_3",
                "false"
              ],
              [
                "test_complete",
                "false"
              ],
              [
                "test_get_namespace",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 9
      },
      {
        "name": "TestRunningCode",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_print",
                  "[]"
                ],
                [
                  "test_gui",
                  "[]"
                ],
                [
                  "testQuestionMark_1",
                  "[]"
                ],
                [
                  "test_history",
                  "[]"
                ],
                [
                  "test_edit",
                  "[]"
                ],
                [
                  "testQuestionMark_2",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_print",
                  "[]"
                ],
                [
                  "test_gui",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "testQuestionMark_1",
                  "[]"
                ],
                [
                  "test_history",
                  "[]"
                ],
                [
                  "test_edit",
                  "[PyAssertStatement]"
                ],
                [
                  "testQuestionMark_2",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_print",
                  "false"
                ],
                [
                  "test_gui",
                  "false"
                ],
                [
                  "testQuestionMark_1",
                  "true"
                ],
                [
                  "test_history",
                  "false"
                ],
                [
                  "test_edit",
                  "true"
                ],
                [
                  "testQuestionMark_2",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_print",
                  "false"
                ],
                [
                  "test_gui",
                  "false"
                ],
                [
                  "testQuestionMark_1",
                  "false"
                ],
                [
                  "test_history",
                  "false"
                ],
                [
                  "test_edit",
                  "false"
                ],
                [
                  "testQuestionMark_2",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_print",
                  "false"
                ],
                [
                  "test_gui",
                  "false"
                ],
                [
                  "testQuestionMark_1",
                  "false"
                ],
                [
                  "test_history",
                  "false"
                ],
                [
                  "test_edit",
                  "false"
                ],
                [
                  "testQuestionMark_2",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_print",
                  "false"
                ],
                [
                  "test_gui",
                  "true"
                ],
                [
                  "testQuestionMark_1",
                  "false"
                ],
                [
                  "test_history",
                  "false"
                ],
                [
                  "test_edit",
                  "false"
                ],
                [
                  "testQuestionMark_2",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_print",
                "false"
              ],
              [
                "test_gui",
                "false"
              ],
              [
                "testQuestionMark_1",
                "false"
              ],
              [
                "test_history",
                "false"
              ],
              [
                "test_edit",
                "false"
              ],
              [
                "testQuestionMark_2",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_print",
                "true"
              ],
              [
                "test_gui",
                "true"
              ],
              [
                "testQuestionMark_1",
                "true"
              ],
              [
                "test_history",
                "true"
              ],
              [
                "test_edit",
                "true"
              ],
              [
                "testQuestionMark_2",
                "true"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_print",
                []
              ],
              [
                "test_gui",
                []
              ],
              [
                "testQuestionMark_1",
                []
              ],
              [
                "test_history",
                []
              ],
              [
                "test_edit",
                []
              ],
              [
                "testQuestionMark_2",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_print",
                "false"
              ],
              [
                "test_gui",
                "false"
              ],
              [
                "testQuestionMark_1",
                "false"
              ],
              [
                "test_history",
                "false"
              ],
              [
                "test_edit",
                "false"
              ],
              [
                "testQuestionMark_2",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_print",
                "false"
              ],
              [
                "test_gui",
                "false"
              ],
              [
                "testQuestionMark_1",
                "false"
              ],
              [
                "test_history",
                "false"
              ],
              [
                "test_edit",
                "false"
              ],
              [
                "testQuestionMark_2",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_print",
                  "0"
                ],
                [
                  "test_gui",
                  "0"
                ],
                [
                  "testQuestionMark_1",
                  "0"
                ],
                [
                  "test_history",
                  "0"
                ],
                [
                  "test_edit",
                  "0"
                ],
                [
                  "testQuestionMark_2",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_print",
                  "0"
                ],
                [
                  "test_gui",
                  "0"
                ],
                [
                  "testQuestionMark_1",
                  "0"
                ],
                [
                  "test_history",
                  "0"
                ],
                [
                  "test_edit",
                  "0"
                ],
                [
                  "testQuestionMark_2",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_print",
                "false"
              ],
              [
                "test_gui",
                "false"
              ],
              [
                "testQuestionMark_1",
                "false"
              ],
              [
                "test_history",
                "false"
              ],
              [
                "test_edit",
                "false"
              ],
              [
                "testQuestionMark_2",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": true,
            "detail": [
              [
                "test_print",
                "false"
              ],
              [
                "test_gui",
                "false"
              ],
              [
                "testQuestionMark_1",
                "false"
              ],
              [
                "test_history",
                "false"
              ],
              [
                "test_edit",
                "true"
              ],
              [
                "testQuestionMark_2",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_print",
                "0"
              ],
              [
                "test_gui",
                "3"
              ],
              [
                "testQuestionMark_1",
                "1"
              ],
              [
                "test_history",
                "0"
              ],
              [
                "test_edit",
                "1"
              ],
              [
                "testQuestionMark_2",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_print",
                []
              ],
              [
                "test_gui",
                []
              ],
              [
                "testQuestionMark_1",
                [
                  "found"
                ]
              ],
              [
                "test_history",
                [
                  "hist",
                  "_ih"
                ]
              ],
              [
                "test_edit",
                [
                  "client_server",
                  "client_port",
                  "s",
                  "filename",
                  "handle_request_input",
                  "called_IPythonEditor",
                  "client_thread",
                  "called_RequestInput",
                  "orig_stdin"
                ]
              ],
              [
                "testQuestionMark_2",
                [
                  "found"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_print",
                []
              ],
              [
                "test_gui",
                []
              ],
              [
                "testQuestionMark_1",
                []
              ],
              [
                "test_history",
                []
              ],
              [
                "test_edit",
                []
              ],
              [
                "testQuestionMark_2",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.3363292910825597,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_gui",
                  "test_edit",
                  0.4911283801710662
                ],
                [
                  "testQuestionMark_1",
                  "testQuestionMark_2",
                  0.7309912212165797
                ],
                [
                  "testQuestionMark_1",
                  "test_history",
                  0.2911739148973942
                ],
                [
                  "testQuestionMark_1",
                  "test_edit",
                  0.5355589492279152
                ],
                [
                  "testQuestionMark_2",
                  "test_edit",
                  0.345080119011411
                ],
                [
                  "test_print",
                  "test_history",
                  0.3375678008963832
                ],
                [
                  "testQuestionMark_2",
                  "test_history",
                  0.24124895481858197
                ],
                [
                  "testQuestionMark_2",
                  "test_gui",
                  0.3075406977753958
                ],
                [
                  "test_print",
                  "test_edit",
                  0.03520219547713662
                ],
                [
                  "test_print",
                  "testQuestionMark_2",
                  0.42433421239575275
                ],
                [
                  "test_history",
                  "test_edit",
                  0.2154414733524523
                ],
                [
                  "test_print",
                  "testQuestionMark_1",
                  0.35210141981546395
                ],
                [
                  "test_gui",
                  "test_history",
                  0.17705355794912775
                ],
                [
                  "test_print",
                  "test_gui",
                  0.12456821978060995
                ],
                [
                  "testQuestionMark_1",
                  "test_gui",
                  0.4359482494531245
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_print",
                "false"
              ],
              [
                "test_gui",
                "false"
              ],
              [
                "testQuestionMark_1",
                "false"
              ],
              [
                "test_history",
                "false"
              ],
              [
                "test_edit",
                "false"
              ],
              [
                "testQuestionMark_2",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      }
    ]
  },
  {
    "name": "tests_runfiles_\u0026_test_pydevdio.py",
    "testCases": [
      {
        "name": "Test",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_it",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_it",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_it",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_it",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_it",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_it",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_it",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_it",
                "true"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_it",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_it",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_it",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_it",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_it",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_it",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_it",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_it",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_it",
                [
                  "ADD_TO_PYTHONPATH",
                  "original"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_it",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_it",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_runfiles_\u0026_test_runfiles.py",
    "testCases": [
      {
        "name": "RunfilesTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_finding_test_with_non_unique_name",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_parse_cmdline",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test___importify",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_runfile_imports",
                  "[]"
                ],
                [
                  "test___unixify",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_finding_tests_when_no_filter",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertNotEqual]"
                ],
                [
                  "test___adjust_python_path_works_for_directories",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test___get_module_from_str",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertNotEqual, PyCallExpression: self.assertNotEqual]"
                ],
                [
                  "test_finding_test_with_unique_name_returns_1_test",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_finding_modules_from_import_strings",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_matching_tests",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test___match",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_finding_tests_with_regex_filters",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test___is_valid_py_file",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_finding_a_file_from_file_system",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_suite_used",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_finding_files_in_dir_from_file_system",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_xml_rpc_communication",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_finding_test_with_non_unique_name",
                  "[]"
                ],
                [
                  "test_parse_cmdline",
                  "[]"
                ],
                [
                  "test___importify",
                  "[]"
                ],
                [
                  "test_runfile_imports",
                  "[PyAssertStatement]"
                ],
                [
                  "test___unixify",
                  "[]"
                ],
                [
                  "test_finding_tests_when_no_filter",
                  "[]"
                ],
                [
                  "test___adjust_python_path_works_for_directories",
                  "[]"
                ],
                [
                  "test___get_module_from_str",
                  "[]"
                ],
                [
                  "test_finding_test_with_unique_name_returns_1_test",
                  "[]"
                ],
                [
                  "test_finding_modules_from_import_strings",
                  "[]"
                ],
                [
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  "[]"
                ],
                [
                  "test_matching_tests",
                  "[]"
                ],
                [
                  "test___match",
                  "[]"
                ],
                [
                  "test_finding_tests_with_regex_filters",
                  "[]"
                ],
                [
                  "test___is_valid_py_file",
                  "[]"
                ],
                [
                  "test_finding_a_file_from_file_system",
                  "[]"
                ],
                [
                  "test_suite_used",
                  "[]"
                ],
                [
                  "test_finding_files_in_dir_from_file_system",
                  "[]"
                ],
                [
                  "test_xml_rpc_communication",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_finding_test_with_non_unique_name",
                  "false"
                ],
                [
                  "test_parse_cmdline",
                  "false"
                ],
                [
                  "test___importify",
                  "false"
                ],
                [
                  "test_runfile_imports",
                  "true"
                ],
                [
                  "test___unixify",
                  "false"
                ],
                [
                  "test_finding_tests_when_no_filter",
                  "false"
                ],
                [
                  "test___adjust_python_path_works_for_directories",
                  "false"
                ],
                [
                  "test___get_module_from_str",
                  "false"
                ],
                [
                  "test_finding_test_with_unique_name_returns_1_test",
                  "false"
                ],
                [
                  "test_finding_modules_from_import_strings",
                  "false"
                ],
                [
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  "false"
                ],
                [
                  "test_matching_tests",
                  "false"
                ],
                [
                  "test___match",
                  "false"
                ],
                [
                  "test_finding_tests_with_regex_filters",
                  "false"
                ],
                [
                  "test___is_valid_py_file",
                  "false"
                ],
                [
                  "test_finding_a_file_from_file_system",
                  "false"
                ],
                [
                  "test_suite_used",
                  "true"
                ],
                [
                  "test_finding_files_in_dir_from_file_system",
                  "true"
                ],
                [
                  "test_xml_rpc_communication",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_finding_test_with_non_unique_name",
                  "false"
                ],
                [
                  "test_parse_cmdline",
                  "false"
                ],
                [
                  "test___importify",
                  "false"
                ],
                [
                  "test_runfile_imports",
                  "false"
                ],
                [
                  "test___unixify",
                  "false"
                ],
                [
                  "test_finding_tests_when_no_filter",
                  "true"
                ],
                [
                  "test___adjust_python_path_works_for_directories",
                  "false"
                ],
                [
                  "test___get_module_from_str",
                  "false"
                ],
                [
                  "test_finding_test_with_unique_name_returns_1_test",
                  "false"
                ],
                [
                  "test_finding_modules_from_import_strings",
                  "false"
                ],
                [
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  "false"
                ],
                [
                  "test_matching_tests",
                  "false"
                ],
                [
                  "test___match",
                  "false"
                ],
                [
                  "test_finding_tests_with_regex_filters",
                  "false"
                ],
                [
                  "test___is_valid_py_file",
                  "false"
                ],
                [
                  "test_finding_a_file_from_file_system",
                  "false"
                ],
                [
                  "test_suite_used",
                  "false"
                ],
                [
                  "test_finding_files_in_dir_from_file_system",
                  "false"
                ],
                [
                  "test_xml_rpc_communication",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_finding_test_with_non_unique_name",
                  "false"
                ],
                [
                  "test_parse_cmdline",
                  "true"
                ],
                [
                  "test___importify",
                  "false"
                ],
                [
                  "test_runfile_imports",
                  "false"
                ],
                [
                  "test___unixify",
                  "false"
                ],
                [
                  "test_finding_tests_when_no_filter",
                  "false"
                ],
                [
                  "test___adjust_python_path_works_for_directories",
                  "false"
                ],
                [
                  "test___get_module_from_str",
                  "false"
                ],
                [
                  "test_finding_test_with_unique_name_returns_1_test",
                  "false"
                ],
                [
                  "test_finding_modules_from_import_strings",
                  "false"
                ],
                [
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  "false"
                ],
                [
                  "test_matching_tests",
                  "true"
                ],
                [
                  "test___match",
                  "false"
                ],
                [
                  "test_finding_tests_with_regex_filters",
                  "true"
                ],
                [
                  "test___is_valid_py_file",
                  "false"
                ],
                [
                  "test_finding_a_file_from_file_system",
                  "false"
                ],
                [
                  "test_suite_used",
                  "false"
                ],
                [
                  "test_finding_files_in_dir_from_file_system",
                  "false"
                ],
                [
                  "test_xml_rpc_communication",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_finding_test_with_non_unique_name",
                  "false"
                ],
                [
                  "test_parse_cmdline",
                  "false"
                ],
                [
                  "test___importify",
                  "false"
                ],
                [
                  "test_runfile_imports",
                  "false"
                ],
                [
                  "test___unixify",
                  "false"
                ],
                [
                  "test_finding_tests_when_no_filter",
                  "false"
                ],
                [
                  "test___adjust_python_path_works_for_directories",
                  "false"
                ],
                [
                  "test___get_module_from_str",
                  "false"
                ],
                [
                  "test_finding_test_with_unique_name_returns_1_test",
                  "false"
                ],
                [
                  "test_finding_modules_from_import_strings",
                  "false"
                ],
                [
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  "false"
                ],
                [
                  "test_matching_tests",
                  "false"
                ],
                [
                  "test___match",
                  "false"
                ],
                [
                  "test_finding_tests_with_regex_filters",
                  "false"
                ],
                [
                  "test___is_valid_py_file",
                  "false"
                ],
                [
                  "test_finding_a_file_from_file_system",
                  "false"
                ],
                [
                  "test_suite_used",
                  "false"
                ],
                [
                  "test_finding_files_in_dir_from_file_system",
                  "false"
                ],
                [
                  "test_xml_rpc_communication",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_finding_test_with_non_unique_name",
                "false"
              ],
              [
                "test_parse_cmdline",
                "false"
              ],
              [
                "test___importify",
                "false"
              ],
              [
                "test_runfile_imports",
                "false"
              ],
              [
                "test___unixify",
                "false"
              ],
              [
                "test_finding_tests_when_no_filter",
                "false"
              ],
              [
                "test___adjust_python_path_works_for_directories",
                "false"
              ],
              [
                "test___get_module_from_str",
                "false"
              ],
              [
                "test_finding_test_with_unique_name_returns_1_test",
                "false"
              ],
              [
                "test_finding_modules_from_import_strings",
                "false"
              ],
              [
                "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                "false"
              ],
              [
                "test_matching_tests",
                "false"
              ],
              [
                "test___match",
                "false"
              ],
              [
                "test_finding_tests_with_regex_filters",
                "false"
              ],
              [
                "test___is_valid_py_file",
                "false"
              ],
              [
                "test_finding_a_file_from_file_system",
                "false"
              ],
              [
                "test_suite_used",
                "false"
              ],
              [
                "test_finding_files_in_dir_from_file_system",
                "false"
              ],
              [
                "test_xml_rpc_communication",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_finding_test_with_non_unique_name",
                "false"
              ],
              [
                "test_parse_cmdline",
                "false"
              ],
              [
                "test___importify",
                "false"
              ],
              [
                "test_runfile_imports",
                "false"
              ],
              [
                "test___unixify",
                "false"
              ],
              [
                "test_finding_tests_when_no_filter",
                "false"
              ],
              [
                "test___adjust_python_path_works_for_directories",
                "false"
              ],
              [
                "test___get_module_from_str",
                "false"
              ],
              [
                "test_finding_test_with_unique_name_returns_1_test",
                "false"
              ],
              [
                "test_finding_modules_from_import_strings",
                "false"
              ],
              [
                "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                "false"
              ],
              [
                "test_matching_tests",
                "false"
              ],
              [
                "test___match",
                "false"
              ],
              [
                "test_finding_tests_with_regex_filters",
                "false"
              ],
              [
                "test___is_valid_py_file",
                "false"
              ],
              [
                "test_finding_a_file_from_file_system",
                "false"
              ],
              [
                "test_suite_used",
                "false"
              ],
              [
                "test_finding_files_in_dir_from_file_system",
                "false"
              ],
              [
                "test_xml_rpc_communication",
                "true"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_finding_test_with_non_unique_name",
                []
              ],
              [
                "test_parse_cmdline",
                [
                  "self.file_dir"
                ]
              ],
              [
                "test___importify",
                [
                  "self.file_dir"
                ]
              ],
              [
                "test_runfile_imports",
                [
                  "self.file_dir"
                ]
              ],
              [
                "test___unixify",
                [
                  "self.file_dir"
                ]
              ],
              [
                "test_finding_tests_when_no_filter",
                [
                  "self.file_dir"
                ]
              ],
              [
                "test___adjust_python_path_works_for_directories",
                [
                  "self.file_dir"
                ]
              ],
              [
                "test___get_module_from_str",
                [
                  "self.file_dir"
                ]
              ],
              [
                "test_finding_test_with_unique_name_returns_1_test",
                []
              ],
              [
                "test_finding_modules_from_import_strings",
                [
                  "self.file_dir"
                ]
              ],
              [
                "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                []
              ],
              [
                "test_matching_tests",
                []
              ],
              [
                "test___match",
                [
                  "self.file_dir"
                ]
              ],
              [
                "test_finding_tests_with_regex_filters",
                []
              ],
              [
                "test___is_valid_py_file",
                [
                  "self.file_dir"
                ]
              ],
              [
                "test_finding_a_file_from_file_system",
                []
              ],
              [
                "test_suite_used",
                [
                  "self.file_dir"
                ]
              ],
              [
                "test_finding_files_in_dir_from_file_system",
                [
                  "self.file_dir"
                ]
              ],
              [
                "test_xml_rpc_communication",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_finding_test_with_non_unique_name",
                "false"
              ],
              [
                "test_parse_cmdline",
                "false"
              ],
              [
                "test___importify",
                "false"
              ],
              [
                "test_runfile_imports",
                "false"
              ],
              [
                "test___unixify",
                "false"
              ],
              [
                "test_finding_tests_when_no_filter",
                "false"
              ],
              [
                "test___adjust_python_path_works_for_directories",
                "false"
              ],
              [
                "test___get_module_from_str",
                "false"
              ],
              [
                "test_finding_test_with_unique_name_returns_1_test",
                "false"
              ],
              [
                "test_finding_modules_from_import_strings",
                "false"
              ],
              [
                "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                "false"
              ],
              [
                "test_matching_tests",
                "false"
              ],
              [
                "test___match",
                "false"
              ],
              [
                "test_finding_tests_with_regex_filters",
                "false"
              ],
              [
                "test___is_valid_py_file",
                "false"
              ],
              [
                "test_finding_a_file_from_file_system",
                "false"
              ],
              [
                "test_suite_used",
                "false"
              ],
              [
                "test_finding_files_in_dir_from_file_system",
                "false"
              ],
              [
                "test_xml_rpc_communication",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_finding_test_with_non_unique_name",
                "true"
              ],
              [
                "test_parse_cmdline",
                "true"
              ],
              [
                "test___importify",
                "false"
              ],
              [
                "test_runfile_imports",
                "false"
              ],
              [
                "test___unixify",
                "false"
              ],
              [
                "test_finding_tests_when_no_filter",
                "true"
              ],
              [
                "test___adjust_python_path_works_for_directories",
                "true"
              ],
              [
                "test___get_module_from_str",
                "false"
              ],
              [
                "test_finding_test_with_unique_name_returns_1_test",
                "true"
              ],
              [
                "test_finding_modules_from_import_strings",
                "true"
              ],
              [
                "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                "true"
              ],
              [
                "test_matching_tests",
                "true"
              ],
              [
                "test___match",
                "true"
              ],
              [
                "test_finding_tests_with_regex_filters",
                "true"
              ],
              [
                "test___is_valid_py_file",
                "true"
              ],
              [
                "test_finding_a_file_from_file_system",
                "true"
              ],
              [
                "test_suite_used",
                "false"
              ],
              [
                "test_finding_files_in_dir_from_file_system",
                "true"
              ],
              [
                "test_xml_rpc_communication",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_finding_test_with_non_unique_name",
                  "0"
                ],
                [
                  "test_parse_cmdline",
                  "0"
                ],
                [
                  "test___importify",
                  "0"
                ],
                [
                  "test_runfile_imports",
                  "0"
                ],
                [
                  "test___unixify",
                  "0"
                ],
                [
                  "test_finding_tests_when_no_filter",
                  "0"
                ],
                [
                  "test___adjust_python_path_works_for_directories",
                  "0"
                ],
                [
                  "test___get_module_from_str",
                  "0"
                ],
                [
                  "test_finding_test_with_unique_name_returns_1_test",
                  "0"
                ],
                [
                  "test_finding_modules_from_import_strings",
                  "0"
                ],
                [
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  "0"
                ],
                [
                  "test_matching_tests",
                  "0"
                ],
                [
                  "test___match",
                  "0"
                ],
                [
                  "test_finding_tests_with_regex_filters",
                  "0"
                ],
                [
                  "test___is_valid_py_file",
                  "0"
                ],
                [
                  "test_finding_a_file_from_file_system",
                  "0"
                ],
                [
                  "test_suite_used",
                  "0"
                ],
                [
                  "test_finding_files_in_dir_from_file_system",
                  "0"
                ],
                [
                  "test_xml_rpc_communication",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_finding_test_with_non_unique_name",
                  "0"
                ],
                [
                  "test_parse_cmdline",
                  "0"
                ],
                [
                  "test___importify",
                  "0"
                ],
                [
                  "test_runfile_imports",
                  "0"
                ],
                [
                  "test___unixify",
                  "0"
                ],
                [
                  "test_finding_tests_when_no_filter",
                  "0"
                ],
                [
                  "test___adjust_python_path_works_for_directories",
                  "0"
                ],
                [
                  "test___get_module_from_str",
                  "0"
                ],
                [
                  "test_finding_test_with_unique_name_returns_1_test",
                  "0"
                ],
                [
                  "test_finding_modules_from_import_strings",
                  "0"
                ],
                [
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  "0"
                ],
                [
                  "test_matching_tests",
                  "0"
                ],
                [
                  "test___match",
                  "0"
                ],
                [
                  "test_finding_tests_with_regex_filters",
                  "0"
                ],
                [
                  "test___is_valid_py_file",
                  "0"
                ],
                [
                  "test_finding_a_file_from_file_system",
                  "0"
                ],
                [
                  "test_suite_used",
                  "0"
                ],
                [
                  "test_finding_files_in_dir_from_file_system",
                  "0"
                ],
                [
                  "test_xml_rpc_communication",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_finding_test_with_non_unique_name",
                "false"
              ],
              [
                "test_parse_cmdline",
                "false"
              ],
              [
                "test___importify",
                "false"
              ],
              [
                "test_runfile_imports",
                "false"
              ],
              [
                "test___unixify",
                "false"
              ],
              [
                "test_finding_tests_when_no_filter",
                "false"
              ],
              [
                "test___adjust_python_path_works_for_directories",
                "false"
              ],
              [
                "test___get_module_from_str",
                "false"
              ],
              [
                "test_finding_test_with_unique_name_returns_1_test",
                "false"
              ],
              [
                "test_finding_modules_from_import_strings",
                "false"
              ],
              [
                "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                "false"
              ],
              [
                "test_matching_tests",
                "false"
              ],
              [
                "test___match",
                "false"
              ],
              [
                "test_finding_tests_with_regex_filters",
                "false"
              ],
              [
                "test___is_valid_py_file",
                "false"
              ],
              [
                "test_finding_a_file_from_file_system",
                "false"
              ],
              [
                "test_suite_used",
                "false"
              ],
              [
                "test_finding_files_in_dir_from_file_system",
                "false"
              ],
              [
                "test_xml_rpc_communication",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_finding_test_with_non_unique_name",
                "false"
              ],
              [
                "test_parse_cmdline",
                "false"
              ],
              [
                "test___importify",
                "false"
              ],
              [
                "test_runfile_imports",
                "false"
              ],
              [
                "test___unixify",
                "false"
              ],
              [
                "test_finding_tests_when_no_filter",
                "false"
              ],
              [
                "test___adjust_python_path_works_for_directories",
                "false"
              ],
              [
                "test___get_module_from_str",
                "false"
              ],
              [
                "test_finding_test_with_unique_name_returns_1_test",
                "false"
              ],
              [
                "test_finding_modules_from_import_strings",
                "false"
              ],
              [
                "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                "false"
              ],
              [
                "test_matching_tests",
                "false"
              ],
              [
                "test___match",
                "false"
              ],
              [
                "test_finding_tests_with_regex_filters",
                "false"
              ],
              [
                "test___is_valid_py_file",
                "false"
              ],
              [
                "test_finding_a_file_from_file_system",
                "false"
              ],
              [
                "test_suite_used",
                "false"
              ],
              [
                "test_finding_files_in_dir_from_file_system",
                "false"
              ],
              [
                "test_xml_rpc_communication",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_finding_test_with_non_unique_name",
                "1"
              ],
              [
                "test_parse_cmdline",
                "18"
              ],
              [
                "test___importify",
                "3"
              ],
              [
                "test_runfile_imports",
                "1"
              ],
              [
                "test___unixify",
                "1"
              ],
              [
                "test_finding_tests_when_no_filter",
                "2"
              ],
              [
                "test___adjust_python_path_works_for_directories",
                "1"
              ],
              [
                "test___get_module_from_str",
                "4"
              ],
              [
                "test_finding_test_with_unique_name_returns_1_test",
                "1"
              ],
              [
                "test_finding_modules_from_import_strings",
                "1"
              ],
              [
                "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                "1"
              ],
              [
                "test_matching_tests",
                "14"
              ],
              [
                "test___match",
                "5"
              ],
              [
                "test_finding_tests_with_regex_filters",
                "3"
              ],
              [
                "test___is_valid_py_file",
                "5"
              ],
              [
                "test_finding_a_file_from_file_system",
                "2"
              ],
              [
                "test_suite_used",
                "1"
              ],
              [
                "test_finding_files_in_dir_from_file_system",
                "5"
              ],
              [
                "test_xml_rpc_communication",
                "5"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": true,
            "detail": [
              [
                "test_finding_test_with_non_unique_name",
                [
                  "filtered_tests"
                ]
              ],
              [
                "test_parse_cmdline",
                [
                  "configuration"
                ]
              ],
              [
                "test___importify",
                [
                  "importify"
                ]
              ],
              [
                "test_runfile_imports",
                []
              ],
              [
                "test___unixify",
                [
                  "unixify"
                ]
              ],
              [
                "test_finding_tests_when_no_filter",
                [
                  "files_with_tests"
                ]
              ],
              [
                "test___adjust_python_path_works_for_directories",
                [
                  "orig_syspath",
                  "tempdir"
                ]
              ],
              [
                "test___get_module_from_str",
                [
                  "my_os_path",
                  "my_importer"
                ]
              ],
              [
                "test_finding_test_with_unique_name_returns_1_test",
                [
                  "filtered_tests"
                ]
              ],
              [
                "test_finding_modules_from_import_strings",
                []
              ],
              [
                "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                []
              ],
              [
                "test_matching_tests",
                [
                  "names",
                  "filtered_tests"
                ]
              ],
              [
                "test___match",
                [
                  "matcher"
                ]
              ],
              [
                "test_finding_tests_with_regex_filters",
                [
                  "filtered_tests"
                ]
              ],
              [
                "test___is_valid_py_file",
                [
                  "isvalid"
                ]
              ],
              [
                "test_finding_a_file_from_file_system",
                [
                  "files",
                  "test_file"
                ]
              ],
              [
                "test_suite_used",
                []
              ],
              [
                "test_finding_files_in_dir_from_file_system",
                []
              ],
              [
                "test_xml_rpc_communication",
                [
                  "simple_test2",
                  "server",
                  "b",
                  "new_notifications",
                  "captured_output",
                  "expected",
                  "simple_test",
                  "buf",
                  "files_to_tests",
                  "simpleModule_test",
                  "error_contents",
                  "simpleClass_test",
                  "notifications"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_finding_test_with_non_unique_name",
                [
                  "self.file_dir"
                ]
              ],
              [
                "test_parse_cmdline",
                []
              ],
              [
                "test___importify",
                []
              ],
              [
                "test_runfile_imports",
                []
              ],
              [
                "test___unixify",
                []
              ],
              [
                "test_finding_tests_when_no_filter",
                []
              ],
              [
                "test___adjust_python_path_works_for_directories",
                []
              ],
              [
                "test___get_module_from_str",
                []
              ],
              [
                "test_finding_test_with_unique_name_returns_1_test",
                [
                  "self.file_dir"
                ]
              ],
              [
                "test_finding_modules_from_import_strings",
                []
              ],
              [
                "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                [
                  "self.file_dir"
                ]
              ],
              [
                "test_matching_tests",
                [
                  "self.file_dir"
                ]
              ],
              [
                "test___match",
                []
              ],
              [
                "test_finding_tests_with_regex_filters",
                [
                  "self.file_dir"
                ]
              ],
              [
                "test___is_valid_py_file",
                []
              ],
              [
                "test_finding_a_file_from_file_system",
                [
                  "self.file_dir"
                ]
              ],
              [
                "test_suite_used",
                []
              ],
              [
                "test_finding_files_in_dir_from_file_system",
                []
              ],
              [
                "test_xml_rpc_communication",
                [
                  "self.file_dir"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.4133084463208753,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test___unixify",
                  "test_finding_modules_from_import_strings",
                  0.32732683535398854
                ],
                [
                  "test___importify",
                  "test_finding_modules_from_import_strings",
                  0.4076871241636057
                ],
                [
                  "test___adjust_python_path_works_for_directories",
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  0.3459163477751805
                ],
                [
                  "test_suite_used",
                  "test_finding_modules_from_import_strings",
                  0.2439750182371333
                ],
                [
                  "test___adjust_python_path_works_for_directories",
                  "test_finding_tests_with_regex_filters",
                  0.32636268941473195
                ],
                [
                  "test___get_module_from_str",
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  0.5830865133459672
                ],
                [
                  "test_suite_used",
                  "test___unixify",
                  0.32298759674996963
                ],
                [
                  "test___adjust_python_path_works_for_directories",
                  "test_finding_test_with_unique_name_returns_1_test",
                  0.350780380010057
                ],
                [
                  "test___importify",
                  "test_runfile_imports",
                  0.3187889170381769
                ],
                [
                  "test_parse_cmdline",
                  "test_finding_a_file_from_file_system",
                  0.32326697961781437
                ],
                [
                  "test___unixify",
                  "test_finding_test_with_unique_name_returns_1_test",
                  0.49330001764383447
                ],
                [
                  "test_finding_a_file_from_file_system",
                  "test___get_module_from_str",
                  0.33453940831548407
                ],
                [
                  "test___get_module_from_str",
                  "test_finding_test_with_unique_name_returns_1_test",
                  0.38372508087783896
                ],
                [
                  "test___adjust_python_path_works_for_directories",
                  "test___importify",
                  0.4262183570801332
                ],
                [
                  "test___get_module_from_str",
                  "test_runfile_imports",
                  0.3962440482763022
                ],
                [
                  "test___is_valid_py_file",
                  "test_finding_a_file_from_file_system",
                  0.3563437975780248
                ],
                [
                  "test___unixify",
                  "test_runfile_imports",
                  0.31282972023520056
                ],
                [
                  "test_finding_a_file_from_file_system",
                  "test_finding_files_in_dir_from_file_system",
                  0.3716423005686359
                ],
                [
                  "test_finding_modules_from_import_strings",
                  "test_runfile_imports",
                  0.2800874499006279
                ],
                [
                  "test_finding_modules_from_import_strings",
                  "test___match",
                  0.5232681184722836
                ],
                [
                  "test_suite_used",
                  "test_runfile_imports",
                  0.33329523591811855
                ],
                [
                  "test___adjust_python_path_works_for_directories",
                  "test_runfile_imports",
                  0.2710523708715754
                ],
                [
                  "test___get_module_from_str",
                  "test_finding_tests_with_regex_filters",
                  0.35651480156974935
                ],
                [
                  "test_finding_files_in_dir_from_file_system",
                  "test_matching_tests",
                  0.2777164447878044
                ],
                [
                  "test_finding_a_file_from_file_system",
                  "test_finding_test_with_non_unique_name",
                  0.5083834142031715
                ],
                [
                  "test_finding_tests_when_no_filter",
                  "test_finding_tests_with_regex_filters",
                  0.4957620912805811
                ],
                [
                  "test___unixify",
                  "test_finding_tests_with_regex_filters",
                  0.4090479940519309
                ],
                [
                  "test___importify",
                  "test_finding_tests_with_regex_filters",
                  0.46894509514701554
                ],
                [
                  "test___is_valid_py_file",
                  "test_matching_tests",
                  0.4956084529839914
                ],
                [
                  "test_suite_used",
                  "test___match",
                  0.26420969566808894
                ],
                [
                  "test_finding_modules_from_import_strings",
                  "test_finding_test_with_unique_name_returns_1_test",
                  0.4008918628686366
                ],
                [
                  "test_runfile_imports",
                  "test_finding_test_with_non_unique_name",
                  0.08205161505093933
                ],
                [
                  "test_runfile_imports",
                  "test_xml_rpc_communication",
                  0.24917420172527865
                ],
                [
                  "test___importify",
                  "test_xml_rpc_communication",
                  0.46165392597928256
                ],
                [
                  "test___adjust_python_path_works_for_directories",
                  "test_finding_tests_when_no_filter",
                  0.3981387857941288
                ],
                [
                  "test_parse_cmdline",
                  "test_finding_tests_when_no_filter",
                  0.34925343130287145
                ],
                [
                  "test___adjust_python_path_works_for_directories",
                  "test_finding_modules_from_import_strings",
                  0.2857142857142857
                ],
                [
                  "test___match",
                  "test_matching_tests",
                  0.48975206569717283
                ],
                [
                  "test_finding_modules_from_import_strings",
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  0.4694579005520307
                ],
                [
                  "test_runfile_imports",
                  "test___match",
                  0.19568851744344443
                ],
                [
                  "test_runfile_imports",
                  "test_matching_tests",
                  0.13646992071351577
                ],
                [
                  "test___unixify",
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  0.6038810848771177
                ],
                [
                  "test___adjust_python_path_works_for_directories",
                  "test___unixify",
                  0.38188130791298663
                ],
                [
                  "test___get_module_from_str",
                  "test_xml_rpc_communication",
                  0.40307988461747124
                ],
                [
                  "test___unixify",
                  "test___get_module_from_str",
                  0.5164871448630789
                ],
                [
                  "test___importify",
                  "test___get_module_from_str",
                  0.588246570986197
                ],
                [
                  "test_finding_test_with_non_unique_name",
                  "test_matching_tests",
                  0.7714866319185358
                ],
                [
                  "test___unixify",
                  "test_xml_rpc_communication",
                  0.4414452284562954
                ],
                [
                  "test_finding_modules_from_import_strings",
                  "test_xml_rpc_communication",
                  0.3325796802233699
                ],
                [
                  "test___importify",
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  0.6410256410256411
                ],
                [
                  "test_finding_test_with_unique_name_returns_1_test",
                  "test_matching_tests",
                  0.7767728177248162
                ],
                [
                  "test___importify",
                  "test_finding_test_with_unique_name_returns_1_test",
                  0.5373658150931907
                ],
                [
                  "test___unixify",
                  "test_finding_tests_when_no_filter",
                  0.5328701692569688
                ],
                [
                  "test___importify",
                  "test_finding_tests_when_no_filter",
                  0.5902402058123571
                ],
                [
                  "test_finding_a_file_from_file_system",
                  "test_finding_modules_from_import_strings",
                  0.36171967253016124
                ],
                [
                  "test_suite_used",
                  "test_finding_files_in_dir_from_file_system",
                  0.1914189681668089
                ],
                [
                  "test_finding_files_in_dir_from_file_system",
                  "test_finding_tests_when_no_filter",
                  0.4313728448262098
                ],
                [
                  "test___adjust_python_path_works_for_directories",
                  "test___match",
                  0.3981387857941288
                ],
                [
                  "test_parse_cmdline",
                  "test_finding_tests_with_regex_filters",
                  0.31781749832256584
                ],
                [
                  "test___importify",
                  "test_finding_files_in_dir_from_file_system",
                  0.3755989540463087
                ],
                [
                  "test___is_valid_py_file",
                  "test___importify",
                  0.6440653958362554
                ],
                [
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  "test_xml_rpc_communication",
                  0.5467083766655615
                ],
                [
                  "test_suite_used",
                  "test_finding_tests_when_no_filter",
                  0.38854367010013074
                ],
                [
                  "test_finding_a_file_from_file_system",
                  "test_finding_test_with_unique_name_returns_1_test",
                  0.5558734812012566
                ],
                [
                  "test_parse_cmdline",
                  "test_matching_tests",
                  0.3595752122753367
                ],
                [
                  "test___match",
                  "test_finding_tests_with_regex_filters",
                  0.485100540930461
                ],
                [
                  "test_finding_tests_when_no_filter",
                  "test_runfile_imports",
                  0.27338836995775323
                ],
                [
                  "test_suite_used",
                  "test___is_valid_py_file",
                  0.22881230837472036
                ],
                [
                  "test_finding_a_file_from_file_system",
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  0.24131201407727335
                ],
                [
                  "test_parse_cmdline",
                  "test___is_valid_py_file",
                  0.44932267268128717
                ],
                [
                  "test___is_valid_py_file",
                  "test_finding_tests_when_no_filter",
                  0.5710747227853907
                ],
                [
                  "test_finding_modules_from_import_strings",
                  "test_matching_tests",
                  0.3567980871143039
                ],
                [
                  "test_suite_used",
                  "test___importify",
                  0.379777262656375
                ],
                [
                  "test_finding_files_in_dir_from_file_system",
                  "test_finding_tests_with_regex_filters",
                  0.27903869878539667
                ],
                [
                  "test_finding_test_with_unique_name_returns_1_test",
                  "test_finding_test_with_non_unique_name",
                  0.8596048246406337
                ],
                [
                  "test___is_valid_py_file",
                  "test_finding_files_in_dir_from_file_system",
                  0.5732518267048476
                ],
                [
                  "test_finding_tests_when_no_filter",
                  "test_matching_tests",
                  0.5235747221679721
                ],
                [
                  "test_parse_cmdline",
                  "test___importify",
                  0.4670042084300268
                ],
                [
                  "test_suite_used",
                  "test_finding_tests_with_regex_filters",
                  0.32013069226601654
                ],
                [
                  "test_finding_tests_when_no_filter",
                  "test___match",
                  0.463768115942029
                ],
                [
                  "test_runfile_imports",
                  "test_finding_tests_with_regex_filters",
                  0.071978832867395
                ],
                [
                  "test_parse_cmdline",
                  "test_runfile_imports",
                  0.23009754863918866
                ],
                [
                  "test___get_module_from_str",
                  "test_finding_tests_when_no_filter",
                  0.47037381280299273
                ],
                [
                  "test___is_valid_py_file",
                  "test___get_module_from_str",
                  0.5719438211269187
                ],
                [
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  "test_finding_tests_with_regex_filters",
                  0.44578731267061966
                ],
                [
                  "test___get_module_from_str",
                  "test_finding_modules_from_import_strings",
                  0.46242910425004496
                ],
                [
                  "test___unixify",
                  "test___importify",
                  0.6604949365843475
                ],
                [
                  "test_finding_files_in_dir_from_file_system",
                  "test___get_module_from_str",
                  0.4340121050573701
                ],
                [
                  "test_suite_used",
                  "test___adjust_python_path_works_for_directories",
                  0.34156502553198664
                ],
                [
                  "test_suite_used",
                  "test___get_module_from_str",
                  0.1630447574708648
                ],
                [
                  "test___unixify",
                  "test_finding_a_file_from_file_system",
                  0.3683572843831339
                ],
                [
                  "test_finding_files_in_dir_from_file_system",
                  "test_xml_rpc_communication",
                  0.2917882959573558
                ],
                [
                  "test_matching_tests",
                  "test_xml_rpc_communication",
                  0.4405097527435077
                ],
                [
                  "test_suite_used",
                  "test_xml_rpc_communication",
                  0.22913701302728212
                ],
                [
                  "test___is_valid_py_file",
                  "test_runfile_imports",
                  0.2990668717675361
                ],
                [
                  "test_finding_tests_when_no_filter",
                  "test_xml_rpc_communication",
                  0.521502995944102
                ],
                [
                  "test_suite_used",
                  "test_parse_cmdline",
                  0.23814210262439883
                ],
                [
                  "test___adjust_python_path_works_for_directories",
                  "test___get_module_from_str",
                  0.3356340272782584
                ],
                [
                  "test_parse_cmdline",
                  "test___adjust_python_path_works_for_directories",
                  0.43733999392651324
                ],
                [
                  "test___is_valid_py_file",
                  "test_finding_tests_with_regex_filters",
                  0.45242549889961
                ],
                [
                  "test___adjust_python_path_works_for_directories",
                  "test_xml_rpc_communication",
                  0.34679248707052246
                ],
                [
                  "test_parse_cmdline",
                  "test___get_module_from_str",
                  0.33753731073849585
                ],
                [
                  "test___unixify",
                  "test_finding_files_in_dir_from_file_system",
                  0.24968173125224757
                ],
                [
                  "test___match",
                  "test_xml_rpc_communication",
                  0.35491176112862494
                ],
                [
                  "test_parse_cmdline",
                  "test_xml_rpc_communication",
                  0.30898975348592106
                ],
                [
                  "test___adjust_python_path_works_for_directories",
                  "test_matching_tests",
                  0.3461790964263782
                ],
                [
                  "test_finding_files_in_dir_from_file_system",
                  "test_finding_modules_from_import_strings",
                  0.5837680781178806
                ],
                [
                  "test___is_valid_py_file",
                  "test_finding_modules_from_import_strings",
                  0.5319745242113929
                ],
                [
                  "test_finding_a_file_from_file_system",
                  "test_finding_tests_when_no_filter",
                  0.4526174124025975
                ],
                [
                  "test_parse_cmdline",
                  "test___match",
                  0.43202447571569075
                ],
                [
                  "test_finding_files_in_dir_from_file_system",
                  "test_runfile_imports",
                  0.2746902687201585
                ],
                [
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  "test_finding_test_with_non_unique_name",
                  0.43630859533727995
                ],
                [
                  "test___is_valid_py_file",
                  "test___unixify",
                  0.5317041844621473
                ],
                [
                  "test_finding_files_in_dir_from_file_system",
                  "test_finding_test_with_unique_name_returns_1_test",
                  0.26211121699831136
                ],
                [
                  "test___importify",
                  "test_finding_a_file_from_file_system",
                  0.4289991361373749
                ],
                [
                  "test_parse_cmdline",
                  "test_finding_modules_from_import_strings",
                  0.27254521360637785
                ],
                [
                  "test___unixify",
                  "test_matching_tests",
                  0.4866232863145076
                ],
                [
                  "test___adjust_python_path_works_for_directories",
                  "test___is_valid_py_file",
                  0.4236093433535166
                ],
                [
                  "test___is_valid_py_file",
                  "test_xml_rpc_communication",
                  0.47045296108050555
                ],
                [
                  "test___get_module_from_str",
                  "test_matching_tests",
                  0.4559506633801725
                ],
                [
                  "test_finding_test_with_unique_name_returns_1_test",
                  "test_xml_rpc_communication",
                  0.40682282100726314
                ],
                [
                  "test_parse_cmdline",
                  "test___unixify",
                  0.34209214882379396
                ],
                [
                  "test_finding_files_in_dir_from_file_system",
                  "test___match",
                  0.5280598617700154
                ],
                [
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  "test_matching_tests",
                  0.5201367985769494
                ],
                [
                  "test___adjust_python_path_works_for_directories",
                  "test_finding_files_in_dir_from_file_system",
                  0.268533315934225
                ],
                [
                  "test_finding_a_file_from_file_system",
                  "test_finding_tests_with_regex_filters",
                  0.5388005465417027
                ],
                [
                  "test_suite_used",
                  "test_matching_tests",
                  0.3104776906581154
                ],
                [
                  "test___importify",
                  "test_finding_test_with_non_unique_name",
                  0.44877455520405946
                ],
                [
                  "test_suite_used",
                  "test_finding_a_file_from_file_system",
                  0.4059525930304695
                ],
                [
                  "test_parse_cmdline",
                  "test_finding_files_in_dir_from_file_system",
                  0.3087342008479125
                ],
                [
                  "test___get_module_from_str",
                  "test_finding_test_with_non_unique_name",
                  0.3160934011218761
                ],
                [
                  "test___adjust_python_path_works_for_directories",
                  "test_finding_a_file_from_file_system",
                  0.34880111279694115
                ],
                [
                  "test___is_valid_py_file",
                  "test___match",
                  0.7718922077209128
                ],
                [
                  "test_finding_modules_from_import_strings",
                  "test_finding_test_with_non_unique_name",
                  0.4324499820938683
                ],
                [
                  "test___unixify",
                  "test_finding_test_with_non_unique_name",
                  0.40368671387966554
                ],
                [
                  "test_finding_a_file_from_file_system",
                  "test_runfile_imports",
                  0.07843597986415206
                ],
                [
                  "test_parse_cmdline",
                  "test_finding_test_with_non_unique_name",
                  0.2750117364023111
                ],
                [
                  "test___get_module_from_str",
                  "test___match",
                  0.47037381280299273
                ],
                [
                  "test_finding_tests_when_no_filter",
                  "test_finding_test_with_unique_name_returns_1_test",
                  0.595879571531124
                ],
                [
                  "test___is_valid_py_file",
                  "test_finding_test_with_non_unique_name",
                  0.3976213862437721
                ],
                [
                  "test_finding_modules_from_import_strings",
                  "test_finding_tests_with_regex_filters",
                  0.3849406080276326
                ],
                [
                  "test_runfile_imports",
                  "test_finding_test_with_unique_name_returns_1_test",
                  0.13099890948292006
                ],
                [
                  "test_finding_a_file_from_file_system",
                  "test_xml_rpc_communication",
                  0.3485633146493818
                ],
                [
                  "test_runfile_imports",
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  0.3781711662903863
                ],
                [
                  "test___unixify",
                  "test___match",
                  0.4286129622284315
                ],
                [
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  "test_finding_test_with_unique_name_returns_1_test",
                  0.5662564503132547
                ],
                [
                  "test_finding_test_with_non_unique_name",
                  "test_xml_rpc_communication",
                  0.3413260852960062
                ],
                [
                  "test_finding_tests_with_regex_filters",
                  "test_matching_tests",
                  0.8658774141976987
                ],
                [
                  "test_finding_test_with_unique_name_returns_1_test",
                  "test_finding_tests_with_regex_filters",
                  0.8297471856878231
                ],
                [
                  "test___match",
                  "test_finding_test_with_unique_name_returns_1_test",
                  0.4575503852828274
                ],
                [
                  "test_finding_tests_when_no_filter",
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  0.6531991610990084
                ],
                [
                  "test_parse_cmdline",
                  "test_finding_test_with_unique_name_returns_1_test",
                  0.2875516533048197
                ],
                [
                  "test_suite_used",
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  0.18566888396533887
                ],
                [
                  "test___importify",
                  "test___match",
                  0.5548257934636157
                ],
                [
                  "test_finding_a_file_from_file_system",
                  "test___match",
                  0.3785527449185361
                ],
                [
                  "test___is_valid_py_file",
                  "test_finding_test_with_unique_name_returns_1_test",
                  0.46997123524373463
                ],
                [
                  "test_finding_test_with_non_unique_name",
                  "test_finding_tests_with_regex_filters",
                  0.8444006618414982
                ],
                [
                  "test_finding_files_in_dir_from_file_system",
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  0.35540546189328137
                ],
                [
                  "test___is_valid_py_file",
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  0.6679196697561166
                ],
                [
                  "test_parse_cmdline",
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  0.3091436309325529
                ],
                [
                  "test_finding_modules_from_import_strings",
                  "test_finding_tests_when_no_filter",
                  0.5005173307126191
                ],
                [
                  "test_suite_used",
                  "test_finding_test_with_unique_name_returns_1_test",
                  0.38797014489949266
                ],
                [
                  "test_finding_tests_with_regex_filters",
                  "test_xml_rpc_communication",
                  0.321033841445703
                ],
                [
                  "test_finding_files_in_dir_from_file_system",
                  "test_finding_test_with_non_unique_name",
                  0.2591825081271573
                ],
                [
                  "test_finding_tests_when_no_filter",
                  "test_finding_test_with_non_unique_name",
                  0.5394820138009758
                ],
                [
                  "test___importify",
                  "test_matching_tests",
                  0.5576042798303738
                ],
                [
                  "test_finding_a_file_from_file_system",
                  "test_matching_tests",
                  0.510097792386716
                ],
                [
                  "test___match",
                  "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                  0.48793190347154847
                ],
                [
                  "test_suite_used",
                  "test_finding_test_with_non_unique_name",
                  0.3446561747421316
                ],
                [
                  "test___match",
                  "test_finding_test_with_non_unique_name",
                  0.41322026589010913
                ],
                [
                  "test___adjust_python_path_works_for_directories",
                  "test_finding_test_with_non_unique_name",
                  0.30631873731649006
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_finding_test_with_non_unique_name",
                "false"
              ],
              [
                "test_parse_cmdline",
                "true"
              ],
              [
                "test___importify",
                "false"
              ],
              [
                "test_runfile_imports",
                "false"
              ],
              [
                "test___unixify",
                "false"
              ],
              [
                "test_finding_tests_when_no_filter",
                "false"
              ],
              [
                "test___adjust_python_path_works_for_directories",
                "false"
              ],
              [
                "test___get_module_from_str",
                "false"
              ],
              [
                "test_finding_test_with_unique_name_returns_1_test",
                "false"
              ],
              [
                "test_finding_modules_from_import_strings",
                "false"
              ],
              [
                "test_finding_tests_from_modules_with_bad_filter_returns_0_tests",
                "false"
              ],
              [
                "test_matching_tests",
                "true"
              ],
              [
                "test___match",
                "false"
              ],
              [
                "test_finding_tests_with_regex_filters",
                "false"
              ],
              [
                "test___is_valid_py_file",
                "false"
              ],
              [
                "test_finding_a_file_from_file_system",
                "false"
              ],
              [
                "test_suite_used",
                "false"
              ],
              [
                "test_finding_files_in_dir_from_file_system",
                "false"
              ],
              [
                "test_xml_rpc_communication",
                "true"
              ]
            ]
          }
        ],
        "numberOfMethods": 19
      }
    ]
  },
  {
    "name": "tests_\u0026_test_check_pydevconsole.py",
    "testCases": [
      {
        "name": "Test",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_server",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_server",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_server",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_server",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_server",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_server",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_server",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_server",
                "true"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_server",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_server",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_server",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_server",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_server",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_server",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": true,
            "detail": [
              [
                "test_server",
                "true"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_server",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_server",
                [
                  "client_port",
                  "server",
                  "initial",
                  "frame_xml",
                  "server_port",
                  "client_thread",
                  "server_thread"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_server",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_server",
                "true"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_python_\u0026_test_save_locals.py",
    "testCases": [
      {
        "name": "TestSetLocals",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_set_locals_using_save_locals",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_frame_co_freevars",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_frame_simple_change",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_frame_change_in_inner_frame",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_frame_co_cellvars",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_set_locals_using_save_locals",
                  "[]"
                ],
                [
                  "test_frame_co_freevars",
                  "[]"
                ],
                [
                  "test_frame_simple_change",
                  "[]"
                ],
                [
                  "test_frame_change_in_inner_frame",
                  "[]"
                ],
                [
                  "test_frame_co_cellvars",
                  "[PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_set_locals_using_save_locals",
                  "false"
                ],
                [
                  "test_frame_co_freevars",
                  "false"
                ],
                [
                  "test_frame_simple_change",
                  "false"
                ],
                [
                  "test_frame_change_in_inner_frame",
                  "false"
                ],
                [
                  "test_frame_co_cellvars",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_set_locals_using_save_locals",
                  "false"
                ],
                [
                  "test_frame_co_freevars",
                  "false"
                ],
                [
                  "test_frame_simple_change",
                  "false"
                ],
                [
                  "test_frame_change_in_inner_frame",
                  "false"
                ],
                [
                  "test_frame_co_cellvars",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_set_locals_using_save_locals",
                  "false"
                ],
                [
                  "test_frame_co_freevars",
                  "false"
                ],
                [
                  "test_frame_simple_change",
                  "false"
                ],
                [
                  "test_frame_change_in_inner_frame",
                  "false"
                ],
                [
                  "test_frame_co_cellvars",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_set_locals_using_save_locals",
                  "false"
                ],
                [
                  "test_frame_co_freevars",
                  "false"
                ],
                [
                  "test_frame_simple_change",
                  "false"
                ],
                [
                  "test_frame_change_in_inner_frame",
                  "false"
                ],
                [
                  "test_frame_co_cellvars",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_locals_using_save_locals",
                "false"
              ],
              [
                "test_frame_co_freevars",
                "false"
              ],
              [
                "test_frame_simple_change",
                "false"
              ],
              [
                "test_frame_change_in_inner_frame",
                "false"
              ],
              [
                "test_frame_co_cellvars",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_set_locals_using_save_locals",
                "false"
              ],
              [
                "test_frame_co_freevars",
                "false"
              ],
              [
                "test_frame_simple_change",
                "false"
              ],
              [
                "test_frame_change_in_inner_frame",
                "false"
              ],
              [
                "test_frame_co_cellvars",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_set_locals_using_save_locals",
                []
              ],
              [
                "test_frame_co_freevars",
                []
              ],
              [
                "test_frame_simple_change",
                []
              ],
              [
                "test_frame_change_in_inner_frame",
                []
              ],
              [
                "test_frame_co_cellvars",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_locals_using_save_locals",
                "false"
              ],
              [
                "test_frame_co_freevars",
                "false"
              ],
              [
                "test_frame_simple_change",
                "false"
              ],
              [
                "test_frame_change_in_inner_frame",
                "false"
              ],
              [
                "test_frame_co_cellvars",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_set_locals_using_save_locals",
                "true"
              ],
              [
                "test_frame_co_freevars",
                "true"
              ],
              [
                "test_frame_simple_change",
                "true"
              ],
              [
                "test_frame_change_in_inner_frame",
                "true"
              ],
              [
                "test_frame_co_cellvars",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_set_locals_using_save_locals",
                  "0"
                ],
                [
                  "test_frame_co_freevars",
                  "0"
                ],
                [
                  "test_frame_simple_change",
                  "0"
                ],
                [
                  "test_frame_change_in_inner_frame",
                  "0"
                ],
                [
                  "test_frame_co_cellvars",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_set_locals_using_save_locals",
                  "0"
                ],
                [
                  "test_frame_co_freevars",
                  "0"
                ],
                [
                  "test_frame_simple_change",
                  "0"
                ],
                [
                  "test_frame_change_in_inner_frame",
                  "0"
                ],
                [
                  "test_frame_co_cellvars",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_set_locals_using_save_locals",
                "false"
              ],
              [
                "test_frame_co_freevars",
                "false"
              ],
              [
                "test_frame_simple_change",
                "false"
              ],
              [
                "test_frame_change_in_inner_frame",
                "false"
              ],
              [
                "test_frame_co_cellvars",
                "true"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_locals_using_save_locals",
                "false"
              ],
              [
                "test_frame_co_freevars",
                "false"
              ],
              [
                "test_frame_simple_change",
                "false"
              ],
              [
                "test_frame_change_in_inner_frame",
                "false"
              ],
              [
                "test_frame_co_cellvars",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_set_locals_using_save_locals",
                "1"
              ],
              [
                "test_frame_co_freevars",
                "1"
              ],
              [
                "test_frame_simple_change",
                "1"
              ],
              [
                "test_frame_change_in_inner_frame",
                "2"
              ],
              [
                "test_frame_co_cellvars",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_set_locals_using_save_locals",
                [
                  "x"
                ]
              ],
              [
                "test_frame_co_freevars",
                [
                  "outer_var",
                  "frame"
                ]
              ],
              [
                "test_frame_simple_change",
                [
                  "a",
                  "frame"
                ]
              ],
              [
                "test_frame_change_in_inner_frame",
                [
                  "a",
                  "frame"
                ]
              ],
              [
                "test_frame_co_cellvars",
                [
                  "frame"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_set_locals_using_save_locals",
                []
              ],
              [
                "test_frame_co_freevars",
                []
              ],
              [
                "test_frame_simple_change",
                []
              ],
              [
                "test_frame_change_in_inner_frame",
                []
              ],
              [
                "test_frame_co_cellvars",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6061879359810021,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_set_locals_using_save_locals",
                  "test_frame_co_freevars",
                  0.45369643578108027
                ],
                [
                  "test_set_locals_using_save_locals",
                  "test_frame_simple_change",
                  0.47304991679126607
                ],
                [
                  "test_frame_simple_change",
                  "test_frame_co_freevars",
                  0.8206099398622182
                ],
                [
                  "test_frame_simple_change",
                  "test_frame_change_in_inner_frame",
                  0.7856773899247458
                ],
                [
                  "test_frame_co_cellvars",
                  "test_frame_change_in_inner_frame",
                  0.6131393394849657
                ],
                [
                  "test_frame_co_freevars",
                  "test_frame_change_in_inner_frame",
                  0.7092081432669752
                ],
                [
                  "test_frame_simple_change",
                  "test_frame_co_cellvars",
                  0.6917144638660746
                ],
                [
                  "test_frame_co_freevars",
                  "test_frame_co_cellvars",
                  0.6868295951599088
                ],
                [
                  "test_set_locals_using_save_locals",
                  "test_frame_change_in_inner_frame",
                  0.4455210556068153
                ],
                [
                  "test_set_locals_using_save_locals",
                  "test_frame_co_cellvars",
                  0.3824330800659704
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_set_locals_using_save_locals",
                "false"
              ],
              [
                "test_frame_co_freevars",
                "false"
              ],
              [
                "test_frame_simple_change",
                "false"
              ],
              [
                "test_frame_change_in_inner_frame",
                "true"
              ],
              [
                "test_frame_co_cellvars",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      }
    ]
  },
  {
    "name": "tests_python_\u0026_test_pydevcoverage.py",
    "testCases": [
      {
        "name": "Test",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_pydev_analyse_invalid_files",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_pydev_analyse_non_standard_encoding",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_pydev_analyze_ok",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_pydev_analyse_invalid_files",
                  "[]"
                ],
                [
                  "test_pydev_analyse_non_standard_encoding",
                  "[]"
                ],
                [
                  "test_pydev_analyze_ok",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_pydev_analyse_invalid_files",
                  "false"
                ],
                [
                  "test_pydev_analyse_non_standard_encoding",
                  "false"
                ],
                [
                  "test_pydev_analyze_ok",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_pydev_analyse_invalid_files",
                  "false"
                ],
                [
                  "test_pydev_analyse_non_standard_encoding",
                  "false"
                ],
                [
                  "test_pydev_analyze_ok",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_pydev_analyse_invalid_files",
                  "false"
                ],
                [
                  "test_pydev_analyse_non_standard_encoding",
                  "false"
                ],
                [
                  "test_pydev_analyze_ok",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_pydev_analyse_invalid_files",
                  "false"
                ],
                [
                  "test_pydev_analyse_non_standard_encoding",
                  "false"
                ],
                [
                  "test_pydev_analyze_ok",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_pydev_analyse_invalid_files",
                "false"
              ],
              [
                "test_pydev_analyse_non_standard_encoding",
                "false"
              ],
              [
                "test_pydev_analyze_ok",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_pydev_analyse_invalid_files",
                "false"
              ],
              [
                "test_pydev_analyse_non_standard_encoding",
                "false"
              ],
              [
                "test_pydev_analyze_ok",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_pydev_analyse_invalid_files",
                [
                  "self._coverage_file"
                ]
              ],
              [
                "test_pydev_analyse_non_standard_encoding",
                [
                  "self._coverage_file"
                ]
              ],
              [
                "test_pydev_analyze_ok",
                [
                  "self._coverage_file"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_pydev_analyse_invalid_files",
                "false"
              ],
              [
                "test_pydev_analyse_non_standard_encoding",
                "false"
              ],
              [
                "test_pydev_analyze_ok",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_pydev_analyse_invalid_files",
                "false"
              ],
              [
                "test_pydev_analyse_non_standard_encoding",
                "false"
              ],
              [
                "test_pydev_analyze_ok",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_pydev_analyse_invalid_files",
                  "0"
                ],
                [
                  "test_pydev_analyse_non_standard_encoding",
                  "0"
                ],
                [
                  "test_pydev_analyze_ok",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_pydev_analyse_invalid_files",
                  "0"
                ],
                [
                  "test_pydev_analyse_non_standard_encoding",
                  "0"
                ],
                [
                  "test_pydev_analyze_ok",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_pydev_analyse_invalid_files",
                "false"
              ],
              [
                "test_pydev_analyse_non_standard_encoding",
                "false"
              ],
              [
                "test_pydev_analyze_ok",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_pydev_analyse_invalid_files",
                "false"
              ],
              [
                "test_pydev_analyse_non_standard_encoding",
                "false"
              ],
              [
                "test_pydev_analyze_ok",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_pydev_analyse_invalid_files",
                "1"
              ],
              [
                "test_pydev_analyse_non_standard_encoding",
                "1"
              ],
              [
                "test_pydev_analyze_ok",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_pydev_analyse_invalid_files",
                [
                  "ref_valid_files",
                  "ref_invalid_files",
                  "invalid_files"
                ]
              ],
              [
                "test_pydev_analyse_non_standard_encoding",
                [
                  "ref_valid_files",
                  "ref_invalid_files",
                  "invalid_files"
                ]
              ],
              [
                "test_pydev_analyze_ok",
                [
                  "ref_valid_files",
                  "ref_invalid_files",
                  "invalid_files"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_pydev_analyse_invalid_files",
                [
                  "self._resources_path"
                ]
              ],
              [
                "test_pydev_analyse_non_standard_encoding",
                [
                  "self._resources_path"
                ]
              ],
              [
                "test_pydev_analyze_ok",
                [
                  "self._resources_path"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8460540481203801,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_pydev_analyze_ok",
                  "test_pydev_analyse_invalid_files",
                  0.8201706088047072
                ],
                [
                  "test_pydev_analyse_non_standard_encoding",
                  "test_pydev_analyse_invalid_files",
                  0.8787447400804972
                ],
                [
                  "test_pydev_analyze_ok",
                  "test_pydev_analyse_non_standard_encoding",
                  0.8392467954759357
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_pydev_analyse_invalid_files",
                "false"
              ],
              [
                "test_pydev_analyse_non_standard_encoding",
                "false"
              ],
              [
                "test_pydev_analyze_ok",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_runfiles_\u0026_test_pydevd_property.py",
    "testCases": [
      {
        "name": "Test",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_property",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_property3",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_property2",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_property",
                  "[]"
                ],
                [
                  "test_property3",
                  "[]"
                ],
                [
                  "test_property2",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_property",
                  "false"
                ],
                [
                  "test_property3",
                  "false"
                ],
                [
                  "test_property2",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_property",
                  "false"
                ],
                [
                  "test_property3",
                  "false"
                ],
                [
                  "test_property2",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_property",
                  "false"
                ],
                [
                  "test_property3",
                  "false"
                ],
                [
                  "test_property2",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_property",
                  "false"
                ],
                [
                  "test_property3",
                  "false"
                ],
                [
                  "test_property2",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_property",
                "false"
              ],
              [
                "test_property3",
                "false"
              ],
              [
                "test_property2",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_property",
                "false"
              ],
              [
                "test_property3",
                "false"
              ],
              [
                "test_property2",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_property",
                [
                  "self.tempdir",
                  "self.old"
                ]
              ],
              [
                "test_property3",
                [
                  "self.tempdir",
                  "self.old"
                ]
              ],
              [
                "test_property2",
                [
                  "self.tempdir",
                  "self.old"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_property",
                "false"
              ],
              [
                "test_property3",
                "false"
              ],
              [
                "test_property2",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_property",
                "false"
              ],
              [
                "test_property3",
                "false"
              ],
              [
                "test_property2",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_property",
                  "0"
                ],
                [
                  "test_property3",
                  "0"
                ],
                [
                  "test_property2",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_property",
                  "0"
                ],
                [
                  "test_property3",
                  "0"
                ],
                [
                  "test_property2",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_property",
                "false"
              ],
              [
                "test_property3",
                "false"
              ],
              [
                "test_property2",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_property",
                "false"
              ],
              [
                "test_property3",
                "false"
              ],
              [
                "test_property2",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_property",
                "1"
              ],
              [
                "test_property3",
                "2"
              ],
              [
                "test_property2",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_property",
                [
                  "testObj",
                  "name"
                ]
              ],
              [
                "test_property3",
                [
                  "testObj",
                  "name"
                ]
              ],
              [
                "test_property2",
                [
                  "testObj",
                  "name"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_property",
                []
              ],
              [
                "test_property3",
                []
              ],
              [
                "test_property2",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7735307719590939,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_property2",
                  "test_property3",
                  0.6940676809654636
                ],
                [
                  "test_property",
                  "test_property3",
                  0.6556946574976555
                ],
                [
                  "test_property",
                  "test_property2",
                  0.9708299774141624
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_property",
                "false"
              ],
              [
                "test_property3",
                "false"
              ],
              [
                "test_property2",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "test_pydevd_reload_\u0026_test_pydevd_reload.py",
    "testCases": [
      {
        "name": "Test",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_pydevd_reload2",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_reload_custom_code_after_changes",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_reload_custom_code_after_changes_in_class",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_parent_function",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_pydevd_reload3",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_pydevd_reload",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_update_constant_with_custom_code2",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_if_code_obj_equals",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertFalse, PyCallExpression: self.assertTrue, PyCallExpression: self.assertFalse]"
                ],
                [
                  "test_change_hierarchy_old_style",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_pydevd_reload4",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_change_hierarchy",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_create_class2",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_create_class",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_update_constant_with_custom_code",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_metaclass",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_update_with_slots",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_update_constant",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_pydevd_reload2",
                  "[]"
                ],
                [
                  "test_reload_custom_code_after_changes",
                  "[]"
                ],
                [
                  "test_reload_custom_code_after_changes_in_class",
                  "[]"
                ],
                [
                  "test_parent_function",
                  "[]"
                ],
                [
                  "test_pydevd_reload3",
                  "[]"
                ],
                [
                  "test_pydevd_reload",
                  "[]"
                ],
                [
                  "test_update_constant_with_custom_code2",
                  "[]"
                ],
                [
                  "test_if_code_obj_equals",
                  "[]"
                ],
                [
                  "test_change_hierarchy_old_style",
                  "[]"
                ],
                [
                  "test_pydevd_reload4",
                  "[]"
                ],
                [
                  "test_change_hierarchy",
                  "[]"
                ],
                [
                  "test_create_class2",
                  "[]"
                ],
                [
                  "test_create_class",
                  "[]"
                ],
                [
                  "test_update_constant_with_custom_code",
                  "[]"
                ],
                [
                  "test_metaclass",
                  "[]"
                ],
                [
                  "test_update_with_slots",
                  "[]"
                ],
                [
                  "test_update_constant",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_pydevd_reload2",
                  "false"
                ],
                [
                  "test_reload_custom_code_after_changes",
                  "false"
                ],
                [
                  "test_reload_custom_code_after_changes_in_class",
                  "false"
                ],
                [
                  "test_parent_function",
                  "false"
                ],
                [
                  "test_pydevd_reload3",
                  "false"
                ],
                [
                  "test_pydevd_reload",
                  "true"
                ],
                [
                  "test_update_constant_with_custom_code2",
                  "false"
                ],
                [
                  "test_if_code_obj_equals",
                  "true"
                ],
                [
                  "test_change_hierarchy_old_style",
                  "false"
                ],
                [
                  "test_pydevd_reload4",
                  "false"
                ],
                [
                  "test_change_hierarchy",
                  "false"
                ],
                [
                  "test_create_class2",
                  "false"
                ],
                [
                  "test_create_class",
                  "false"
                ],
                [
                  "test_update_constant_with_custom_code",
                  "false"
                ],
                [
                  "test_metaclass",
                  "false"
                ],
                [
                  "test_update_with_slots",
                  "false"
                ],
                [
                  "test_update_constant",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_pydevd_reload2",
                  "false"
                ],
                [
                  "test_reload_custom_code_after_changes",
                  "false"
                ],
                [
                  "test_reload_custom_code_after_changes_in_class",
                  "false"
                ],
                [
                  "test_parent_function",
                  "false"
                ],
                [
                  "test_pydevd_reload3",
                  "false"
                ],
                [
                  "test_pydevd_reload",
                  "false"
                ],
                [
                  "test_update_constant_with_custom_code2",
                  "false"
                ],
                [
                  "test_if_code_obj_equals",
                  "false"
                ],
                [
                  "test_change_hierarchy_old_style",
                  "false"
                ],
                [
                  "test_pydevd_reload4",
                  "false"
                ],
                [
                  "test_change_hierarchy",
                  "false"
                ],
                [
                  "test_create_class2",
                  "false"
                ],
                [
                  "test_create_class",
                  "false"
                ],
                [
                  "test_update_constant_with_custom_code",
                  "false"
                ],
                [
                  "test_metaclass",
                  "false"
                ],
                [
                  "test_update_with_slots",
                  "false"
                ],
                [
                  "test_update_constant",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_pydevd_reload2",
                  "false"
                ],
                [
                  "test_reload_custom_code_after_changes",
                  "false"
                ],
                [
                  "test_reload_custom_code_after_changes_in_class",
                  "false"
                ],
                [
                  "test_parent_function",
                  "false"
                ],
                [
                  "test_pydevd_reload3",
                  "false"
                ],
                [
                  "test_pydevd_reload",
                  "true"
                ],
                [
                  "test_update_constant_with_custom_code2",
                  "false"
                ],
                [
                  "test_if_code_obj_equals",
                  "false"
                ],
                [
                  "test_change_hierarchy_old_style",
                  "false"
                ],
                [
                  "test_pydevd_reload4",
                  "false"
                ],
                [
                  "test_change_hierarchy",
                  "false"
                ],
                [
                  "test_create_class2",
                  "false"
                ],
                [
                  "test_create_class",
                  "false"
                ],
                [
                  "test_update_constant_with_custom_code",
                  "false"
                ],
                [
                  "test_metaclass",
                  "false"
                ],
                [
                  "test_update_with_slots",
                  "false"
                ],
                [
                  "test_update_constant",
                  "true"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_pydevd_reload2",
                  "false"
                ],
                [
                  "test_reload_custom_code_after_changes",
                  "false"
                ],
                [
                  "test_reload_custom_code_after_changes_in_class",
                  "false"
                ],
                [
                  "test_parent_function",
                  "false"
                ],
                [
                  "test_pydevd_reload3",
                  "false"
                ],
                [
                  "test_pydevd_reload",
                  "false"
                ],
                [
                  "test_update_constant_with_custom_code2",
                  "false"
                ],
                [
                  "test_if_code_obj_equals",
                  "false"
                ],
                [
                  "test_change_hierarchy_old_style",
                  "false"
                ],
                [
                  "test_pydevd_reload4",
                  "false"
                ],
                [
                  "test_change_hierarchy",
                  "false"
                ],
                [
                  "test_create_class2",
                  "false"
                ],
                [
                  "test_create_class",
                  "false"
                ],
                [
                  "test_update_constant_with_custom_code",
                  "false"
                ],
                [
                  "test_metaclass",
                  "false"
                ],
                [
                  "test_update_with_slots",
                  "false"
                ],
                [
                  "test_update_constant",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_pydevd_reload2",
                "false"
              ],
              [
                "test_reload_custom_code_after_changes",
                "false"
              ],
              [
                "test_reload_custom_code_after_changes_in_class",
                "false"
              ],
              [
                "test_parent_function",
                "false"
              ],
              [
                "test_pydevd_reload3",
                "false"
              ],
              [
                "test_pydevd_reload",
                "false"
              ],
              [
                "test_update_constant_with_custom_code2",
                "false"
              ],
              [
                "test_if_code_obj_equals",
                "false"
              ],
              [
                "test_change_hierarchy_old_style",
                "false"
              ],
              [
                "test_pydevd_reload4",
                "false"
              ],
              [
                "test_change_hierarchy",
                "false"
              ],
              [
                "test_create_class2",
                "false"
              ],
              [
                "test_create_class",
                "false"
              ],
              [
                "test_update_constant_with_custom_code",
                "false"
              ],
              [
                "test_metaclass",
                "false"
              ],
              [
                "test_update_with_slots",
                "false"
              ],
              [
                "test_update_constant",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_pydevd_reload2",
                "false"
              ],
              [
                "test_reload_custom_code_after_changes",
                "false"
              ],
              [
                "test_reload_custom_code_after_changes_in_class",
                "false"
              ],
              [
                "test_parent_function",
                "false"
              ],
              [
                "test_pydevd_reload3",
                "false"
              ],
              [
                "test_pydevd_reload",
                "false"
              ],
              [
                "test_update_constant_with_custom_code2",
                "false"
              ],
              [
                "test_if_code_obj_equals",
                "false"
              ],
              [
                "test_change_hierarchy_old_style",
                "true"
              ],
              [
                "test_pydevd_reload4",
                "false"
              ],
              [
                "test_change_hierarchy",
                "true"
              ],
              [
                "test_create_class2",
                "false"
              ],
              [
                "test_create_class",
                "false"
              ],
              [
                "test_update_constant_with_custom_code",
                "false"
              ],
              [
                "test_metaclass",
                "false"
              ],
              [
                "test_update_with_slots",
                "false"
              ],
              [
                "test_update_constant",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_pydevd_reload2",
                [
                  "self.tempdir",
                  "self.save_path"
                ]
              ],
              [
                "test_reload_custom_code_after_changes",
                [
                  "self.tempdir",
                  "self.save_path"
                ]
              ],
              [
                "test_reload_custom_code_after_changes_in_class",
                [
                  "self.tempdir",
                  "self.save_path"
                ]
              ],
              [
                "test_parent_function",
                [
                  "self.tempdir",
                  "self.save_path"
                ]
              ],
              [
                "test_pydevd_reload3",
                [
                  "self.tempdir",
                  "self.save_path"
                ]
              ],
              [
                "test_pydevd_reload",
                [
                  "self.tempdir",
                  "self.save_path"
                ]
              ],
              [
                "test_update_constant_with_custom_code2",
                [
                  "self.tempdir",
                  "self.save_path"
                ]
              ],
              [
                "test_if_code_obj_equals",
                [
                  "self.tempdir",
                  "self.save_path"
                ]
              ],
              [
                "test_change_hierarchy_old_style",
                [
                  "self.tempdir",
                  "self.save_path"
                ]
              ],
              [
                "test_pydevd_reload4",
                [
                  "self.tempdir",
                  "self.save_path"
                ]
              ],
              [
                "test_change_hierarchy",
                [
                  "self.tempdir",
                  "self.save_path"
                ]
              ],
              [
                "test_create_class2",
                [
                  "self.tempdir",
                  "self.save_path"
                ]
              ],
              [
                "test_create_class",
                [
                  "self.tempdir",
                  "self.save_path"
                ]
              ],
              [
                "test_update_constant_with_custom_code",
                [
                  "self.tempdir",
                  "self.save_path"
                ]
              ],
              [
                "test_metaclass",
                [
                  "self.tempdir",
                  "self.save_path"
                ]
              ],
              [
                "test_update_with_slots",
                [
                  "self.tempdir",
                  "self.save_path"
                ]
              ],
              [
                "test_update_constant",
                [
                  "self.tempdir",
                  "self.save_path"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_pydevd_reload2",
                "false"
              ],
              [
                "test_reload_custom_code_after_changes",
                "false"
              ],
              [
                "test_reload_custom_code_after_changes_in_class",
                "false"
              ],
              [
                "test_parent_function",
                "false"
              ],
              [
                "test_pydevd_reload3",
                "false"
              ],
              [
                "test_pydevd_reload",
                "false"
              ],
              [
                "test_update_constant_with_custom_code2",
                "false"
              ],
              [
                "test_if_code_obj_equals",
                "false"
              ],
              [
                "test_change_hierarchy_old_style",
                "false"
              ],
              [
                "test_pydevd_reload4",
                "false"
              ],
              [
                "test_change_hierarchy",
                "false"
              ],
              [
                "test_create_class2",
                "false"
              ],
              [
                "test_create_class",
                "false"
              ],
              [
                "test_update_constant_with_custom_code",
                "false"
              ],
              [
                "test_metaclass",
                "false"
              ],
              [
                "test_update_with_slots",
                "false"
              ],
              [
                "test_update_constant",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_pydevd_reload2",
                "true"
              ],
              [
                "test_reload_custom_code_after_changes",
                "true"
              ],
              [
                "test_reload_custom_code_after_changes_in_class",
                "true"
              ],
              [
                "test_parent_function",
                "true"
              ],
              [
                "test_pydevd_reload3",
                "true"
              ],
              [
                "test_pydevd_reload",
                "false"
              ],
              [
                "test_update_constant_with_custom_code2",
                "true"
              ],
              [
                "test_if_code_obj_equals",
                "false"
              ],
              [
                "test_change_hierarchy_old_style",
                "true"
              ],
              [
                "test_pydevd_reload4",
                "true"
              ],
              [
                "test_change_hierarchy",
                "true"
              ],
              [
                "test_create_class2",
                "true"
              ],
              [
                "test_create_class",
                "true"
              ],
              [
                "test_update_constant_with_custom_code",
                "true"
              ],
              [
                "test_metaclass",
                "true"
              ],
              [
                "test_update_with_slots",
                "true"
              ],
              [
                "test_update_constant",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_pydevd_reload2",
                  "0"
                ],
                [
                  "test_reload_custom_code_after_changes",
                  "0"
                ],
                [
                  "test_reload_custom_code_after_changes_in_class",
                  "0"
                ],
                [
                  "test_parent_function",
                  "0"
                ],
                [
                  "test_pydevd_reload3",
                  "0"
                ],
                [
                  "test_pydevd_reload",
                  "0"
                ],
                [
                  "test_update_constant_with_custom_code2",
                  "0"
                ],
                [
                  "test_if_code_obj_equals",
                  "0"
                ],
                [
                  "test_change_hierarchy_old_style",
                  "0"
                ],
                [
                  "test_pydevd_reload4",
                  "0"
                ],
                [
                  "test_change_hierarchy",
                  "0"
                ],
                [
                  "test_create_class2",
                  "0"
                ],
                [
                  "test_create_class",
                  "0"
                ],
                [
                  "test_update_constant_with_custom_code",
                  "0"
                ],
                [
                  "test_metaclass",
                  "0"
                ],
                [
                  "test_update_with_slots",
                  "0"
                ],
                [
                  "test_update_constant",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_pydevd_reload2",
                  "0"
                ],
                [
                  "test_reload_custom_code_after_changes",
                  "0"
                ],
                [
                  "test_reload_custom_code_after_changes_in_class",
                  "0"
                ],
                [
                  "test_parent_function",
                  "0"
                ],
                [
                  "test_pydevd_reload3",
                  "0"
                ],
                [
                  "test_pydevd_reload",
                  "0"
                ],
                [
                  "test_update_constant_with_custom_code2",
                  "0"
                ],
                [
                  "test_if_code_obj_equals",
                  "0"
                ],
                [
                  "test_change_hierarchy_old_style",
                  "0"
                ],
                [
                  "test_pydevd_reload4",
                  "0"
                ],
                [
                  "test_change_hierarchy",
                  "0"
                ],
                [
                  "test_create_class2",
                  "0"
                ],
                [
                  "test_create_class",
                  "0"
                ],
                [
                  "test_update_constant_with_custom_code",
                  "0"
                ],
                [
                  "test_metaclass",
                  "0"
                ],
                [
                  "test_update_with_slots",
                  "0"
                ],
                [
                  "test_update_constant",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_pydevd_reload2",
                "false"
              ],
              [
                "test_reload_custom_code_after_changes",
                "false"
              ],
              [
                "test_reload_custom_code_after_changes_in_class",
                "false"
              ],
              [
                "test_parent_function",
                "false"
              ],
              [
                "test_pydevd_reload3",
                "false"
              ],
              [
                "test_pydevd_reload",
                "false"
              ],
              [
                "test_update_constant_with_custom_code2",
                "false"
              ],
              [
                "test_if_code_obj_equals",
                "false"
              ],
              [
                "test_change_hierarchy_old_style",
                "false"
              ],
              [
                "test_pydevd_reload4",
                "false"
              ],
              [
                "test_change_hierarchy",
                "false"
              ],
              [
                "test_create_class2",
                "false"
              ],
              [
                "test_create_class",
                "false"
              ],
              [
                "test_update_constant_with_custom_code",
                "false"
              ],
              [
                "test_metaclass",
                "false"
              ],
              [
                "test_update_with_slots",
                "false"
              ],
              [
                "test_update_constant",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_pydevd_reload2",
                "false"
              ],
              [
                "test_reload_custom_code_after_changes",
                "false"
              ],
              [
                "test_reload_custom_code_after_changes_in_class",
                "false"
              ],
              [
                "test_parent_function",
                "false"
              ],
              [
                "test_pydevd_reload3",
                "false"
              ],
              [
                "test_pydevd_reload",
                "false"
              ],
              [
                "test_update_constant_with_custom_code2",
                "false"
              ],
              [
                "test_if_code_obj_equals",
                "false"
              ],
              [
                "test_change_hierarchy_old_style",
                "false"
              ],
              [
                "test_pydevd_reload4",
                "false"
              ],
              [
                "test_change_hierarchy",
                "false"
              ],
              [
                "test_create_class2",
                "false"
              ],
              [
                "test_create_class",
                "false"
              ],
              [
                "test_update_constant_with_custom_code",
                "false"
              ],
              [
                "test_metaclass",
                "false"
              ],
              [
                "test_update_with_slots",
                "false"
              ],
              [
                "test_update_constant",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_pydevd_reload2",
                "4"
              ],
              [
                "test_reload_custom_code_after_changes",
                "2"
              ],
              [
                "test_reload_custom_code_after_changes_in_class",
                "2"
              ],
              [
                "test_parent_function",
                "2"
              ],
              [
                "test_pydevd_reload3",
                "2"
              ],
              [
                "test_pydevd_reload",
                "8"
              ],
              [
                "test_update_constant_with_custom_code2",
                "2"
              ],
              [
                "test_if_code_obj_equals",
                "4"
              ],
              [
                "test_change_hierarchy_old_style",
                "2"
              ],
              [
                "test_pydevd_reload4",
                "2"
              ],
              [
                "test_change_hierarchy",
                "2"
              ],
              [
                "test_create_class2",
                "2"
              ],
              [
                "test_create_class",
                "2"
              ],
              [
                "test_update_constant_with_custom_code",
                "2"
              ],
              [
                "test_metaclass",
                "2"
              ],
              [
                "test_update_with_slots",
                "3"
              ],
              [
                "test_update_constant",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_pydevd_reload2",
                [
                  "c",
                  "cfoo"
                ]
              ],
              [
                "test_reload_custom_code_after_changes",
                [
                  "SAMPLE_CODE1",
                  "foo",
                  "SAMPLE_CODE2"
                ]
              ],
              [
                "test_reload_custom_code_after_changes_in_class",
                [
                  "SAMPLE_CODE1",
                  "foo",
                  "SAMPLE_CODE2"
                ]
              ],
              [
                "test_parent_function",
                [
                  "call",
                  "SAMPLE_CODE1",
                  "SAMPLE_CODE2"
                ]
              ],
              [
                "test_pydevd_reload3",
                []
              ],
              [
                "test_pydevd_reload",
                [
                  "Cstomp",
                  "b",
                  "C",
                  "Cfoo",
                  "COut",
                  "count",
                  "bfoo",
                  "Cbar"
                ]
              ],
              [
                "test_update_constant_with_custom_code2",
                [
                  "SAMPLE_CODE1",
                  "foo",
                  "SAMPLE_CODE2"
                ]
              ],
              [
                "test_if_code_obj_equals",
                []
              ],
              [
                "test_change_hierarchy_old_style",
                [
                  "old"
                ]
              ],
              [
                "test_pydevd_reload4",
                []
              ],
              [
                "test_change_hierarchy",
                [
                  "old"
                ]
              ],
              [
                "test_create_class2",
                [
                  "SAMPLE_CODE1",
                  "foo",
                  "SAMPLE_CODE2"
                ]
              ],
              [
                "test_create_class",
                [
                  "SAMPLE_CODE1",
                  "foo",
                  "SAMPLE_CODE2"
                ]
              ],
              [
                "test_update_constant_with_custom_code",
                [
                  "SAMPLE_CODE1",
                  "foo",
                  "SAMPLE_CODE2"
                ]
              ],
              [
                "test_metaclass",
                [
                  "__metaclass__"
                ]
              ],
              [
                "test_update_with_slots",
                [
                  "B",
                  "b",
                  "SAMPLE_CODE1",
                  "SAMPLE_CODE2"
                ]
              ],
              [
                "test_update_constant",
                [
                  "SAMPLE_CODE1",
                  "foo",
                  "SAMPLE_CODE2"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_pydevd_reload2",
                []
              ],
              [
                "test_reload_custom_code_after_changes",
                []
              ],
              [
                "test_reload_custom_code_after_changes_in_class",
                []
              ],
              [
                "test_parent_function",
                []
              ],
              [
                "test_pydevd_reload3",
                []
              ],
              [
                "test_pydevd_reload",
                []
              ],
              [
                "test_update_constant_with_custom_code2",
                []
              ],
              [
                "test_if_code_obj_equals",
                []
              ],
              [
                "test_change_hierarchy_old_style",
                []
              ],
              [
                "test_pydevd_reload4",
                []
              ],
              [
                "test_change_hierarchy",
                []
              ],
              [
                "test_create_class2",
                []
              ],
              [
                "test_create_class",
                []
              ],
              [
                "test_update_constant_with_custom_code",
                []
              ],
              [
                "test_metaclass",
                []
              ],
              [
                "test_update_with_slots",
                []
              ],
              [
                "test_update_constant",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7549783513668725,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_pydevd_reload",
                  "test_reload_custom_code_after_changes",
                  0.812024312239216
                ],
                [
                  "test_pydevd_reload2",
                  "test_reload_custom_code_after_changes_in_class",
                  0.1678643621275338
                ],
                [
                  "test_change_hierarchy_old_style",
                  "test_parent_function",
                  0.7621115098778997
                ],
                [
                  "test_parent_function",
                  "test_reload_custom_code_after_changes",
                  0.9014024639416547
                ],
                [
                  "test_update_constant",
                  "test_update_constant_with_custom_code2",
                  0.9614128936512356
                ],
                [
                  "test_update_constant_with_custom_code",
                  "test_update_constant_with_custom_code2",
                  0.9876997166949365
                ],
                [
                  "test_if_code_obj_equals",
                  "test_update_constant",
                  0.7522449560384046
                ],
                [
                  "test_pydevd_reload4",
                  "test_create_class",
                  0.7825316071250759
                ],
                [
                  "test_pydevd_reload2",
                  "test_parent_function",
                  0.16908941005050726
                ],
                [
                  "test_pydevd_reload4",
                  "test_update_with_slots",
                  0.8304898941033615
                ],
                [
                  "test_pydevd_reload4",
                  "test_update_constant_with_custom_code",
                  0.7855671396442525
                ],
                [
                  "test_create_class2",
                  "test_update_constant",
                  0.931324190035832
                ],
                [
                  "test_metaclass",
                  "test_change_hierarchy_old_style",
                  0.8084729230826493
                ],
                [
                  "test_pydevd_reload",
                  "test_change_hierarchy_old_style",
                  0.7184731130191904
                ],
                [
                  "test_pydevd_reload2",
                  "test_metaclass",
                  0.10552084383687459
                ],
                [
                  "test_create_class2",
                  "test_reload_custom_code_after_changes",
                  0.9261748806272365
                ],
                [
                  "test_change_hierarchy",
                  "test_update_constant_with_custom_code",
                  0.7532780512962209
                ],
                [
                  "test_reload_custom_code_after_changes",
                  "test_update_with_slots",
                  0.9448875658808417
                ],
                [
                  "test_pydevd_reload3",
                  "test_parent_function",
                  0.7749904089364379
                ],
                [
                  "test_metaclass",
                  "test_create_class",
                  0.8423577991023545
                ],
                [
                  "test_pydevd_reload",
                  "test_pydevd_reload3",
                  0.6923581422670335
                ],
                [
                  "test_change_hierarchy_old_style",
                  "test_update_constant_with_custom_code2",
                  0.7546198343478951
                ],
                [
                  "test_update_constant",
                  "test_reload_custom_code_after_changes_in_class",
                  0.9791181034762849
                ],
                [
                  "test_pydevd_reload",
                  "test_update_constant",
                  0.7964745710114239
                ],
                [
                  "test_change_hierarchy",
                  "test_update_constant_with_custom_code2",
                  0.7595850749055434
                ],
                [
                  "test_reload_custom_code_after_changes",
                  "test_update_constant_with_custom_code2",
                  0.9681313734812048
                ],
                [
                  "test_pydevd_reload2",
                  "test_if_code_obj_equals",
                  0.20751911284172592
                ],
                [
                  "test_change_hierarchy",
                  "test_reload_custom_code_after_changes_in_class",
                  0.754211499313642
                ],
                [
                  "test_if_code_obj_equals",
                  "test_reload_custom_code_after_changes",
                  0.77287706017332
                ],
                [
                  "test_metaclass",
                  "test_update_constant_with_custom_code",
                  0.8571221412398811
                ],
                [
                  "test_pydevd_reload2",
                  "test_pydevd_reload4",
                  0.20500308879748697
                ],
                [
                  "test_pydevd_reload",
                  "test_change_hierarchy",
                  0.7248220415364962
                ],
                [
                  "test_pydevd_reload2",
                  "test_change_hierarchy",
                  0.21667287717786035
                ],
                [
                  "test_pydevd_reload",
                  "test_create_class2",
                  0.7504081900864102
                ],
                [
                  "test_pydevd_reload3",
                  "test_reload_custom_code_after_changes_in_class",
                  0.7677036757368007
                ],
                [
                  "test_change_hierarchy",
                  "test_parent_function",
                  0.7711549046641532
                ],
                [
                  "test_change_hierarchy_old_style",
                  "test_reload_custom_code_after_changes_in_class",
                  0.743680703499239
                ],
                [
                  "test_create_class",
                  "test_update_constant_with_custom_code",
                  0.9273377255728861
                ],
                [
                  "test_metaclass",
                  "test_create_class2",
                  0.8407686686208313
                ],
                [
                  "test_pydevd_reload",
                  "test_pydevd_reload2",
                  0.30236190298129073
                ],
                [
                  "test_pydevd_reload3",
                  "test_update_constant_with_custom_code2",
                  0.7675362799716541
                ],
                [
                  "test_pydevd_reload4",
                  "test_metaclass",
                  0.9042590315396742
                ],
                [
                  "test_update_constant",
                  "test_update_with_slots",
                  0.9348937403299282
                ],
                [
                  "test_update_constant_with_custom_code",
                  "test_update_with_slots",
                  0.932024236071494
                ],
                [
                  "test_metaclass",
                  "test_update_constant",
                  0.8497306014743132
                ],
                [
                  "test_pydevd_reload3",
                  "test_reload_custom_code_after_changes",
                  0.784911248942992
                ],
                [
                  "test_pydevd_reload4",
                  "test_create_class2",
                  0.7832220105871545
                ],
                [
                  "test_reload_custom_code_after_changes",
                  "test_reload_custom_code_after_changes_in_class",
                  0.9893408271910304
                ],
                [
                  "test_pydevd_reload",
                  "test_create_class",
                  0.7588529470897915
                ],
                [
                  "test_pydevd_reload",
                  "test_update_with_slots",
                  0.8404200651187475
                ],
                [
                  "test_create_class2",
                  "test_update_with_slots",
                  0.9137452126215765
                ],
                [
                  "test_pydevd_reload2",
                  "test_create_class",
                  0.18544954675472897
                ],
                [
                  "test_create_class",
                  "test_update_constant_with_custom_code2",
                  0.9146767644772346
                ],
                [
                  "test_pydevd_reload3",
                  "test_update_constant",
                  0.7687981119574341
                ],
                [
                  "test_metaclass",
                  "test_update_with_slots",
                  0.894076675774934
                ],
                [
                  "test_change_hierarchy_old_style",
                  "test_create_class",
                  0.7361547855667021
                ],
                [
                  "test_change_hierarchy",
                  "test_create_class2",
                  0.7441548127197812
                ],
                [
                  "test_create_class",
                  "test_update_with_slots",
                  0.9167978244201505
                ],
                [
                  "test_if_code_obj_equals",
                  "test_create_class2",
                  0.7667320213694223
                ],
                [
                  "test_parent_function",
                  "test_update_constant_with_custom_code",
                  0.8973279290077166
                ],
                [
                  "test_metaclass",
                  "test_update_constant_with_custom_code2",
                  0.8575073893266593
                ],
                [
                  "test_pydevd_reload2",
                  "test_update_constant_with_custom_code2",
                  0.14770382146458638
                ],
                [
                  "test_parent_function",
                  "test_update_constant",
                  0.9061437464107537
                ],
                [
                  "test_pydevd_reload3",
                  "test_create_class2",
                  0.7798100078513336
                ],
                [
                  "test_pydevd_reload3",
                  "test_update_constant_with_custom_code",
                  0.7675089513564466
                ],
                [
                  "test_if_code_obj_equals",
                  "test_update_constant_with_custom_code",
                  0.7559561504418859
                ],
                [
                  "test_pydevd_reload4",
                  "test_update_constant_with_custom_code2",
                  0.7850863602290482
                ],
                [
                  "test_pydevd_reload",
                  "test_update_constant_with_custom_code2",
                  0.7956527876246415
                ],
                [
                  "test_pydevd_reload2",
                  "test_update_with_slots",
                  0.21053403017365918
                ],
                [
                  "test_pydevd_reload3",
                  "test_if_code_obj_equals",
                  0.8002807957483141
                ],
                [
                  "test_pydevd_reload3",
                  "test_update_with_slots",
                  0.7976823657461407
                ],
                [
                  "test_create_class",
                  "test_update_constant",
                  0.934224975843144
                ],
                [
                  "test_pydevd_reload2",
                  "test_pydevd_reload3",
                  0.21350420507344953
                ],
                [
                  "test_pydevd_reload3",
                  "test_create_class",
                  0.7720880321914483
                ],
                [
                  "test_metaclass",
                  "test_reload_custom_code_after_changes_in_class",
                  0.8501636697597694
                ],
                [
                  "test_pydevd_reload2",
                  "test_create_class2",
                  0.18808800533618092
                ],
                [
                  "test_reload_custom_code_after_changes_in_class",
                  "test_update_constant_with_custom_code2",
                  0.9697415374861673
                ],
                [
                  "test_pydevd_reload",
                  "test_metaclass",
                  0.790925925316176
                ],
                [
                  "test_pydevd_reload4",
                  "test_change_hierarchy",
                  0.7939826373067855
                ],
                [
                  "test_pydevd_reload2",
                  "test_change_hierarchy_old_style",
                  0.21477497599659237
                ],
                [
                  "test_change_hierarchy",
                  "test_reload_custom_code_after_changes",
                  0.756248566130371
                ],
                [
                  "test_create_class2",
                  "test_update_constant_with_custom_code2",
                  0.9115204500783051
                ],
                [
                  "test_pydevd_reload4",
                  "test_update_constant",
                  0.7848705585800696
                ],
                [
                  "test_update_constant_with_custom_code",
                  "test_reload_custom_code_after_changes",
                  0.9794859682270566
                ],
                [
                  "test_change_hierarchy",
                  "test_update_constant",
                  0.7430398251709112
                ],
                [
                  "test_create_class2",
                  "test_update_constant_with_custom_code",
                  0.9235916222077656
                ],
                [
                  "test_update_constant",
                  "test_reload_custom_code_after_changes",
                  0.9824907336039402
                ],
                [
                  "test_metaclass",
                  "test_parent_function",
                  0.8191986988484184
                ],
                [
                  "test_parent_function",
                  "test_reload_custom_code_after_changes_in_class",
                  0.8929103788027736
                ],
                [
                  "test_pydevd_reload4",
                  "test_if_code_obj_equals",
                  0.7737337001916752
                ],
                [
                  "test_change_hierarchy_old_style",
                  "test_update_with_slots",
                  0.7528307328401018
                ],
                [
                  "test_change_hierarchy",
                  "test_change_hierarchy_old_style",
                  0.9883080423478419
                ],
                [
                  "test_update_constant_with_custom_code2",
                  "test_update_with_slots",
                  0.9233026831605053
                ],
                [
                  "test_pydevd_reload",
                  "test_update_constant_with_custom_code",
                  0.8010116552906502
                ],
                [
                  "test_if_code_obj_equals",
                  "test_update_with_slots",
                  0.7985530982868648
                ],
                [
                  "test_create_class2",
                  "test_reload_custom_code_after_changes_in_class",
                  0.9158222511048448
                ],
                [
                  "test_if_code_obj_equals",
                  "test_reload_custom_code_after_changes_in_class",
                  0.7550895868017002
                ],
                [
                  "test_pydevd_reload",
                  "test_if_code_obj_equals",
                  0.672008309081442
                ],
                [
                  "test_if_code_obj_equals",
                  "test_update_constant_with_custom_code2",
                  0.7557264571104401
                ],
                [
                  "test_pydevd_reload2",
                  "test_update_constant",
                  0.17517090922517398
                ],
                [
                  "test_create_class",
                  "test_create_class2",
                  0.9868369664827308
                ],
                [
                  "test_create_class2",
                  "test_parent_function",
                  0.9444022009968155
                ],
                [
                  "test_metaclass",
                  "test_change_hierarchy",
                  0.8137291498977489
                ],
                [
                  "test_parent_function",
                  "test_update_constant_with_custom_code2",
                  0.8811847062259345
                ],
                [
                  "test_create_class",
                  "test_parent_function",
                  0.9396263685781397
                ],
                [
                  "test_pydevd_reload2",
                  "test_update_constant_with_custom_code",
                  0.16130597622508192
                ],
                [
                  "test_pydevd_reload3",
                  "test_metaclass",
                  0.9190336969824345
                ],
                [
                  "test_change_hierarchy_old_style",
                  "test_update_constant",
                  0.7320265430255798
                ],
                [
                  "test_create_class",
                  "test_reload_custom_code_after_changes_in_class",
                  0.9211759448730756
                ],
                [
                  "test_parent_function",
                  "test_update_with_slots",
                  0.871448700424539
                ],
                [
                  "test_pydevd_reload4",
                  "test_change_hierarchy_old_style",
                  0.7907935946623791
                ],
                [
                  "test_pydevd_reload4",
                  "test_reload_custom_code_after_changes",
                  0.8043853720808194
                ],
                [
                  "test_change_hierarchy_old_style",
                  "test_update_constant_with_custom_code",
                  0.7447045246896109
                ],
                [
                  "test_reload_custom_code_after_changes_in_class",
                  "test_update_with_slots",
                  0.9293118842771584
                ],
                [
                  "test_pydevd_reload",
                  "test_pydevd_reload4",
                  0.7614872489032756
                ],
                [
                  "test_update_constant",
                  "test_update_constant_with_custom_code",
                  0.9764842242455954
                ],
                [
                  "test_if_code_obj_equals",
                  "test_change_hierarchy_old_style",
                  0.6917133127561969
                ],
                [
                  "test_change_hierarchy_old_style",
                  "test_reload_custom_code_after_changes",
                  0.7458948890360843
                ],
                [
                  "test_if_code_obj_equals",
                  "test_parent_function",
                  0.7498026027385528
                ],
                [
                  "test_change_hierarchy",
                  "test_update_with_slots",
                  0.7629512293339812
                ],
                [
                  "test_pydevd_reload3",
                  "test_change_hierarchy_old_style",
                  0.8314300894251873
                ],
                [
                  "test_pydevd_reload",
                  "test_reload_custom_code_after_changes_in_class",
                  0.7977887037259073
                ],
                [
                  "test_pydevd_reload2",
                  "test_reload_custom_code_after_changes",
                  0.1595250324386482
                ],
                [
                  "test_if_code_obj_equals",
                  "test_metaclass",
                  0.8311646304550646
                ],
                [
                  "test_if_code_obj_equals",
                  "test_change_hierarchy",
                  0.6957550734290139
                ],
                [
                  "test_if_code_obj_equals",
                  "test_create_class",
                  0.7649993149082573
                ],
                [
                  "test_create_class",
                  "test_reload_custom_code_after_changes",
                  0.9303222760329687
                ],
                [
                  "test_pydevd_reload",
                  "test_parent_function",
                  0.7186863160212138
                ],
                [
                  "test_pydevd_reload4",
                  "test_parent_function",
                  0.7411678741165866
                ],
                [
                  "test_metaclass",
                  "test_reload_custom_code_after_changes",
                  0.8727547596361283
                ],
                [
                  "test_pydevd_reload3",
                  "test_pydevd_reload4",
                  0.9042992480104425
                ],
                [
                  "test_change_hierarchy_old_style",
                  "test_create_class2",
                  0.7376365427983097
                ],
                [
                  "test_pydevd_reload4",
                  "test_reload_custom_code_after_changes_in_class",
                  0.7854310628247446
                ],
                [
                  "test_update_constant_with_custom_code",
                  "test_reload_custom_code_after_changes_in_class",
                  0.9760216896118785
                ],
                [
                  "test_pydevd_reload3",
                  "test_change_hierarchy",
                  0.834820688256446
                ],
                [
                  "test_change_hierarchy",
                  "test_create_class",
                  0.7377253439645219
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_pydevd_reload2",
                "false"
              ],
              [
                "test_reload_custom_code_after_changes",
                "false"
              ],
              [
                "test_reload_custom_code_after_changes_in_class",
                "false"
              ],
              [
                "test_parent_function",
                "false"
              ],
              [
                "test_pydevd_reload3",
                "false"
              ],
              [
                "test_pydevd_reload",
                "false"
              ],
              [
                "test_update_constant_with_custom_code2",
                "false"
              ],
              [
                "test_if_code_obj_equals",
                "false"
              ],
              [
                "test_change_hierarchy_old_style",
                "false"
              ],
              [
                "test_pydevd_reload4",
                "true"
              ],
              [
                "test_change_hierarchy",
                "false"
              ],
              [
                "test_create_class2",
                "false"
              ],
              [
                "test_create_class",
                "false"
              ],
              [
                "test_update_constant_with_custom_code",
                "false"
              ],
              [
                "test_metaclass",
                "false"
              ],
              [
                "test_update_with_slots",
                "false"
              ],
              [
                "test_update_constant",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 17
      }
    ]
  },
  {
    "name": "tests_python_\u0026_test_process_command_line.py",
    "testCases": [
      {
        "name": "Test",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "testProcessCommandLine",
                  "[]"
                ],
                [
                  "testProcessCommandLine2",
                  "[PyCallExpression: self.assertRaises]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "testProcessCommandLine",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "testProcessCommandLine2",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "testProcessCommandLine",
                  "false"
                ],
                [
                  "testProcessCommandLine2",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "testProcessCommandLine",
                  "false"
                ],
                [
                  "testProcessCommandLine2",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "testProcessCommandLine",
                  "false"
                ],
                [
                  "testProcessCommandLine2",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "testProcessCommandLine",
                  "false"
                ],
                [
                  "testProcessCommandLine2",
                  "true"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "testProcessCommandLine",
                "false"
              ],
              [
                "testProcessCommandLine2",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "testProcessCommandLine",
                "false"
              ],
              [
                "testProcessCommandLine2",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "testProcessCommandLine",
                []
              ],
              [
                "testProcessCommandLine2",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "testProcessCommandLine",
                "false"
              ],
              [
                "testProcessCommandLine2",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "testProcessCommandLine",
                "false"
              ],
              [
                "testProcessCommandLine2",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "testProcessCommandLine",
                  "0"
                ],
                [
                  "testProcessCommandLine2",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "testProcessCommandLine",
                  "0"
                ],
                [
                  "testProcessCommandLine2",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "testProcessCommandLine",
                "false"
              ],
              [
                "testProcessCommandLine2",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "testProcessCommandLine",
                "false"
              ],
              [
                "testProcessCommandLine2",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "testProcessCommandLine",
                "5"
              ],
              [
                "testProcessCommandLine2",
                "4"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "testProcessCommandLine",
                [
                  "setup",
                  "argv"
                ]
              ],
              [
                "testProcessCommandLine2",
                [
                  "setup"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "testProcessCommandLine",
                []
              ],
              [
                "testProcessCommandLine2",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7292126266407629,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "testProcessCommandLine",
                  "testProcessCommandLine2",
                  0.7292126266407629
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "testProcessCommandLine",
                "false"
              ],
              [
                "testProcessCommandLine2",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_python_\u0026_test_bytecode_modification.py",
    "testCases": [
      {
        "name": "TestInsertCode",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_for_loop",
                  "[]"
                ],
                [
                  "test_class_method",
                  "[]"
                ],
                [
                  "test_assignment",
                  "[]"
                ],
                [
                  "test_else",
                  "[]"
                ],
                [
                  "test_for_else",
                  "[]"
                ],
                [
                  "test_extended_arg_overflow",
                  "[]"
                ],
                [
                  "test_double_extended_arg",
                  "[]"
                ],
                [
                  "test_elif",
                  "[]"
                ],
                [
                  "test_many_names",
                  "[]"
                ],
                [
                  "test_offset_overflow",
                  "[]"
                ],
                [
                  "test_call_other_function",
                  "[]"
                ],
                [
                  "test_if",
                  "[]"
                ],
                [
                  "test_line",
                  "[]"
                ],
                [
                  "test_long_lines",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_for_loop",
                  "[]"
                ],
                [
                  "test_class_method",
                  "[]"
                ],
                [
                  "test_assignment",
                  "[]"
                ],
                [
                  "test_else",
                  "[]"
                ],
                [
                  "test_for_else",
                  "[]"
                ],
                [
                  "test_extended_arg_overflow",
                  "[]"
                ],
                [
                  "test_double_extended_arg",
                  "[]"
                ],
                [
                  "test_elif",
                  "[]"
                ],
                [
                  "test_many_names",
                  "[]"
                ],
                [
                  "test_offset_overflow",
                  "[]"
                ],
                [
                  "test_call_other_function",
                  "[]"
                ],
                [
                  "test_if",
                  "[]"
                ],
                [
                  "test_line",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_long_lines",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_for_loop",
                  "true"
                ],
                [
                  "test_class_method",
                  "false"
                ],
                [
                  "test_assignment",
                  "false"
                ],
                [
                  "test_else",
                  "true"
                ],
                [
                  "test_for_else",
                  "true"
                ],
                [
                  "test_extended_arg_overflow",
                  "false"
                ],
                [
                  "test_double_extended_arg",
                  "true"
                ],
                [
                  "test_elif",
                  "true"
                ],
                [
                  "test_many_names",
                  "false"
                ],
                [
                  "test_offset_overflow",
                  "true"
                ],
                [
                  "test_call_other_function",
                  "false"
                ],
                [
                  "test_if",
                  "true"
                ],
                [
                  "test_line",
                  "false"
                ],
                [
                  "test_long_lines",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_for_loop",
                  "false"
                ],
                [
                  "test_class_method",
                  "false"
                ],
                [
                  "test_assignment",
                  "false"
                ],
                [
                  "test_else",
                  "false"
                ],
                [
                  "test_for_else",
                  "false"
                ],
                [
                  "test_extended_arg_overflow",
                  "false"
                ],
                [
                  "test_double_extended_arg",
                  "false"
                ],
                [
                  "test_elif",
                  "false"
                ],
                [
                  "test_many_names",
                  "false"
                ],
                [
                  "test_offset_overflow",
                  "false"
                ],
                [
                  "test_call_other_function",
                  "false"
                ],
                [
                  "test_if",
                  "false"
                ],
                [
                  "test_line",
                  "false"
                ],
                [
                  "test_long_lines",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_for_loop",
                  "false"
                ],
                [
                  "test_class_method",
                  "false"
                ],
                [
                  "test_assignment",
                  "false"
                ],
                [
                  "test_else",
                  "false"
                ],
                [
                  "test_for_else",
                  "false"
                ],
                [
                  "test_extended_arg_overflow",
                  "false"
                ],
                [
                  "test_double_extended_arg",
                  "false"
                ],
                [
                  "test_elif",
                  "false"
                ],
                [
                  "test_many_names",
                  "false"
                ],
                [
                  "test_offset_overflow",
                  "false"
                ],
                [
                  "test_call_other_function",
                  "false"
                ],
                [
                  "test_if",
                  "false"
                ],
                [
                  "test_line",
                  "false"
                ],
                [
                  "test_long_lines",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_for_loop",
                  "false"
                ],
                [
                  "test_class_method",
                  "false"
                ],
                [
                  "test_assignment",
                  "false"
                ],
                [
                  "test_else",
                  "false"
                ],
                [
                  "test_for_else",
                  "false"
                ],
                [
                  "test_extended_arg_overflow",
                  "false"
                ],
                [
                  "test_double_extended_arg",
                  "false"
                ],
                [
                  "test_elif",
                  "false"
                ],
                [
                  "test_many_names",
                  "false"
                ],
                [
                  "test_offset_overflow",
                  "false"
                ],
                [
                  "test_call_other_function",
                  "false"
                ],
                [
                  "test_if",
                  "false"
                ],
                [
                  "test_line",
                  "true"
                ],
                [
                  "test_long_lines",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_for_loop",
                "false"
              ],
              [
                "test_class_method",
                "false"
              ],
              [
                "test_assignment",
                "false"
              ],
              [
                "test_else",
                "false"
              ],
              [
                "test_for_else",
                "false"
              ],
              [
                "test_extended_arg_overflow",
                "false"
              ],
              [
                "test_double_extended_arg",
                "false"
              ],
              [
                "test_elif",
                "false"
              ],
              [
                "test_many_names",
                "false"
              ],
              [
                "test_offset_overflow",
                "false"
              ],
              [
                "test_call_other_function",
                "false"
              ],
              [
                "test_if",
                "false"
              ],
              [
                "test_line",
                "false"
              ],
              [
                "test_long_lines",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_for_loop",
                "true"
              ],
              [
                "test_class_method",
                "true"
              ],
              [
                "test_assignment",
                "true"
              ],
              [
                "test_else",
                "true"
              ],
              [
                "test_for_else",
                "true"
              ],
              [
                "test_extended_arg_overflow",
                "false"
              ],
              [
                "test_double_extended_arg",
                "true"
              ],
              [
                "test_elif",
                "true"
              ],
              [
                "test_many_names",
                "true"
              ],
              [
                "test_offset_overflow",
                "true"
              ],
              [
                "test_call_other_function",
                "true"
              ],
              [
                "test_if",
                "true"
              ],
              [
                "test_line",
                "false"
              ],
              [
                "test_long_lines",
                "true"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_for_loop",
                []
              ],
              [
                "test_class_method",
                []
              ],
              [
                "test_assignment",
                []
              ],
              [
                "test_else",
                []
              ],
              [
                "test_for_else",
                []
              ],
              [
                "test_extended_arg_overflow",
                []
              ],
              [
                "test_double_extended_arg",
                []
              ],
              [
                "test_elif",
                []
              ],
              [
                "test_many_names",
                []
              ],
              [
                "test_offset_overflow",
                []
              ],
              [
                "test_call_other_function",
                []
              ],
              [
                "test_if",
                []
              ],
              [
                "test_line",
                []
              ],
              [
                "test_long_lines",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_for_loop",
                "false"
              ],
              [
                "test_class_method",
                "false"
              ],
              [
                "test_assignment",
                "false"
              ],
              [
                "test_else",
                "false"
              ],
              [
                "test_for_else",
                "false"
              ],
              [
                "test_extended_arg_overflow",
                "false"
              ],
              [
                "test_double_extended_arg",
                "false"
              ],
              [
                "test_elif",
                "false"
              ],
              [
                "test_many_names",
                "false"
              ],
              [
                "test_offset_overflow",
                "false"
              ],
              [
                "test_call_other_function",
                "false"
              ],
              [
                "test_if",
                "false"
              ],
              [
                "test_line",
                "false"
              ],
              [
                "test_long_lines",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_for_loop",
                "false"
              ],
              [
                "test_class_method",
                "false"
              ],
              [
                "test_assignment",
                "false"
              ],
              [
                "test_else",
                "false"
              ],
              [
                "test_for_else",
                "false"
              ],
              [
                "test_extended_arg_overflow",
                "false"
              ],
              [
                "test_double_extended_arg",
                "false"
              ],
              [
                "test_elif",
                "false"
              ],
              [
                "test_many_names",
                "false"
              ],
              [
                "test_offset_overflow",
                "false"
              ],
              [
                "test_call_other_function",
                "false"
              ],
              [
                "test_if",
                "false"
              ],
              [
                "test_line",
                "false"
              ],
              [
                "test_long_lines",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_for_loop",
                  "0"
                ],
                [
                  "test_class_method",
                  "0"
                ],
                [
                  "test_assignment",
                  "0"
                ],
                [
                  "test_else",
                  "0"
                ],
                [
                  "test_for_else",
                  "0"
                ],
                [
                  "test_extended_arg_overflow",
                  "0"
                ],
                [
                  "test_double_extended_arg",
                  "0"
                ],
                [
                  "test_elif",
                  "0"
                ],
                [
                  "test_many_names",
                  "0"
                ],
                [
                  "test_offset_overflow",
                  "0"
                ],
                [
                  "test_call_other_function",
                  "0"
                ],
                [
                  "test_if",
                  "0"
                ],
                [
                  "test_line",
                  "0"
                ],
                [
                  "test_long_lines",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_for_loop",
                  "0"
                ],
                [
                  "test_class_method",
                  "0"
                ],
                [
                  "test_assignment",
                  "0"
                ],
                [
                  "test_else",
                  "0"
                ],
                [
                  "test_for_else",
                  "0"
                ],
                [
                  "test_extended_arg_overflow",
                  "0"
                ],
                [
                  "test_double_extended_arg",
                  "0"
                ],
                [
                  "test_elif",
                  "0"
                ],
                [
                  "test_many_names",
                  "0"
                ],
                [
                  "test_offset_overflow",
                  "0"
                ],
                [
                  "test_call_other_function",
                  "0"
                ],
                [
                  "test_if",
                  "0"
                ],
                [
                  "test_line",
                  "0"
                ],
                [
                  "test_long_lines",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "test_for_loop",
                "false"
              ],
              [
                "test_class_method",
                "true"
              ],
              [
                "test_assignment",
                "false"
              ],
              [
                "test_else",
                "true"
              ],
              [
                "test_for_else",
                "true"
              ],
              [
                "test_extended_arg_overflow",
                "false"
              ],
              [
                "test_double_extended_arg",
                "false"
              ],
              [
                "test_elif",
                "true"
              ],
              [
                "test_many_names",
                "false"
              ],
              [
                "test_offset_overflow",
                "true"
              ],
              [
                "test_call_other_function",
                "false"
              ],
              [
                "test_if",
                "true"
              ],
              [
                "test_line",
                "false"
              ],
              [
                "test_long_lines",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_for_loop",
                "false"
              ],
              [
                "test_class_method",
                "false"
              ],
              [
                "test_assignment",
                "false"
              ],
              [
                "test_else",
                "false"
              ],
              [
                "test_for_else",
                "false"
              ],
              [
                "test_extended_arg_overflow",
                "false"
              ],
              [
                "test_double_extended_arg",
                "false"
              ],
              [
                "test_elif",
                "false"
              ],
              [
                "test_many_names",
                "false"
              ],
              [
                "test_offset_overflow",
                "false"
              ],
              [
                "test_call_other_function",
                "false"
              ],
              [
                "test_if",
                "false"
              ],
              [
                "test_line",
                "false"
              ],
              [
                "test_long_lines",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_for_loop",
                "0"
              ],
              [
                "test_class_method",
                "0"
              ],
              [
                "test_assignment",
                "0"
              ],
              [
                "test_else",
                "0"
              ],
              [
                "test_for_else",
                "0"
              ],
              [
                "test_extended_arg_overflow",
                "0"
              ],
              [
                "test_double_extended_arg",
                "0"
              ],
              [
                "test_elif",
                "0"
              ],
              [
                "test_many_names",
                "0"
              ],
              [
                "test_offset_overflow",
                "0"
              ],
              [
                "test_call_other_function",
                "0"
              ],
              [
                "test_if",
                "0"
              ],
              [
                "test_line",
                "6"
              ],
              [
                "test_long_lines",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": true,
            "detail": [
              [
                "test_for_loop",
                [
                  "sum",
                  "n"
                ]
              ],
              [
                "test_class_method",
                [
                  "original"
                ]
              ],
              [
                "test_assignment",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "test_else",
                [
                  "a"
                ]
              ],
              [
                "test_for_else",
                [
                  "sum"
                ]
              ],
              [
                "test_extended_arg_overflow",
                []
              ],
              [
                "test_double_extended_arg",
                [
                  "a",
                  "b",
                  "d"
                ]
              ],
              [
                "test_elif",
                [
                  "a",
                  "b"
                ]
              ],
              [
                "test_many_names",
                []
              ],
              [
                "test_offset_overflow",
                [
                  "a11",
                  "a",
                  "a10",
                  "b",
                  "a13",
                  "c",
                  "a12",
                  "a1",
                  "a2",
                  "a3",
                  "a4",
                  "a5",
                  "a6",
                  "a7",
                  "a8",
                  "a9"
                ]
              ],
              [
                "test_call_other_function",
                [
                  "a",
                  "b",
                  "c"
                ]
              ],
              [
                "test_if",
                [
                  "a"
                ]
              ],
              [
                "test_line",
                [
                  "result",
                  "a",
                  "b",
                  "c",
                  "success"
                ]
              ],
              [
                "test_long_lines",
                [
                  "a",
                  "b",
                  "c",
                  "d",
                  "e"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_for_loop",
                []
              ],
              [
                "test_class_method",
                []
              ],
              [
                "test_assignment",
                []
              ],
              [
                "test_else",
                []
              ],
              [
                "test_for_else",
                []
              ],
              [
                "test_extended_arg_overflow",
                []
              ],
              [
                "test_double_extended_arg",
                []
              ],
              [
                "test_elif",
                []
              ],
              [
                "test_many_names",
                []
              ],
              [
                "test_offset_overflow",
                []
              ],
              [
                "test_call_other_function",
                []
              ],
              [
                "test_if",
                []
              ],
              [
                "test_line",
                []
              ],
              [
                "test_long_lines",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7617850970433968,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_assignment",
                  "test_extended_arg_overflow",
                  0.6590886209145004
                ],
                [
                  "test_else",
                  "test_double_extended_arg",
                  0.7392332850333335
                ],
                [
                  "test_for_else",
                  "test_many_names",
                  0.6499003555672103
                ],
                [
                  "test_elif",
                  "test_offset_overflow",
                  0.8744923349969709
                ],
                [
                  "test_for_loop",
                  "test_for_else",
                  0.7227264165850102
                ],
                [
                  "test_offset_overflow",
                  "test_many_names",
                  0.5085204989296102
                ],
                [
                  "test_if",
                  "test_many_names",
                  0.7870808162733253
                ],
                [
                  "test_else",
                  "test_long_lines",
                  0.7271826686609384
                ],
                [
                  "test_line",
                  "test_many_names",
                  0.4972505621707787
                ],
                [
                  "test_elif",
                  "test_double_extended_arg",
                  0.8413308432291058
                ],
                [
                  "test_for_loop",
                  "test_extended_arg_overflow",
                  0.5374838498865699
                ],
                [
                  "test_else",
                  "test_extended_arg_overflow",
                  0.774125589304193
                ],
                [
                  "test_many_names",
                  "test_extended_arg_overflow",
                  0.5514633642457702
                ],
                [
                  "test_for_loop",
                  "test_long_lines",
                  0.5135890115651472
                ],
                [
                  "test_if",
                  "test_elif",
                  0.8704019448174187
                ],
                [
                  "test_long_lines",
                  "test_double_extended_arg",
                  0.8834132621676236
                ],
                [
                  "test_assignment",
                  "test_many_names",
                  0.7742122016804484
                ],
                [
                  "test_call_other_function",
                  "test_long_lines",
                  0.7458643081744779
                ],
                [
                  "test_else",
                  "test_class_method",
                  0.9133931367170858
                ],
                [
                  "test_for_loop",
                  "test_many_names",
                  0.721122731372548
                ],
                [
                  "test_line",
                  "test_call_other_function",
                  0.7831555804874293
                ],
                [
                  "test_if",
                  "test_else",
                  0.9922178988326846
                ],
                [
                  "test_for_else",
                  "test_elif",
                  0.8591719574732105
                ],
                [
                  "test_if",
                  "test_class_method",
                  0.9133931367170858
                ],
                [
                  "test_line",
                  "test_for_else",
                  0.7599807856306805
                ],
                [
                  "test_elif",
                  "test_extended_arg_overflow",
                  0.8297770390500713
                ],
                [
                  "test_call_other_function",
                  "test_double_extended_arg",
                  0.7915457873480788
                ],
                [
                  "test_assignment",
                  "test_double_extended_arg",
                  0.7132389356082142
                ],
                [
                  "test_class_method",
                  "test_many_names",
                  0.7340670876453232
                ],
                [
                  "test_line",
                  "test_for_loop",
                  0.5423188131152069
                ],
                [
                  "test_for_loop",
                  "test_class_method",
                  0.7119605911554877
                ],
                [
                  "test_long_lines",
                  "test_many_names",
                  0.42859480199331274
                ],
                [
                  "test_assignment",
                  "test_long_lines",
                  0.6492294208951558
                ],
                [
                  "test_offset_overflow",
                  "test_double_extended_arg",
                  0.9035759436711945
                ],
                [
                  "test_assignment",
                  "test_class_method",
                  0.7969456506662983
                ],
                [
                  "test_for_loop",
                  "test_double_extended_arg",
                  0.5518289467439175
                ],
                [
                  "test_elif",
                  "test_class_method",
                  0.849402559568297
                ],
                [
                  "test_if",
                  "test_extended_arg_overflow",
                  0.774125589304193
                ],
                [
                  "test_elif",
                  "test_long_lines",
                  0.8080750401689766
                ],
                [
                  "test_call_other_function",
                  "test_class_method",
                  0.8954569957833348
                ],
                [
                  "test_for_else",
                  "test_call_other_function",
                  0.8734888407253448
                ],
                [
                  "test_for_loop",
                  "test_call_other_function",
                  0.752784905167275
                ],
                [
                  "test_offset_overflow",
                  "test_long_lines",
                  0.9727851059241321
                ],
                [
                  "test_for_loop",
                  "test_elif",
                  0.6142910513381841
                ],
                [
                  "test_if",
                  "test_long_lines",
                  0.7271826686609384
                ],
                [
                  "test_assignment",
                  "test_for_loop",
                  0.8767378667067266
                ],
                [
                  "test_assignment",
                  "test_elif",
                  0.7491404499178118
                ],
                [
                  "test_line",
                  "test_long_lines",
                  0.7628969931007306
                ],
                [
                  "test_for_loop",
                  "test_if",
                  0.7612274465503869
                ],
                [
                  "test_class_method",
                  "test_double_extended_arg",
                  0.7045621594976414
                ],
                [
                  "test_call_other_function",
                  "test_extended_arg_overflow",
                  0.8028974309165163
                ],
                [
                  "test_line",
                  "test_class_method",
                  0.7559692750433844
                ],
                [
                  "test_for_else",
                  "test_offset_overflow",
                  0.7667191087405884
                ],
                [
                  "test_line",
                  "test_double_extended_arg",
                  0.7483423057448849
                ],
                [
                  "test_assignment",
                  "test_if",
                  0.8686818731663921
                ],
                [
                  "test_extended_arg_overflow",
                  "test_double_extended_arg",
                  0.7769907899987353
                ],
                [
                  "test_line",
                  "test_if",
                  0.7330717852658827
                ],
                [
                  "test_else",
                  "test_many_names",
                  0.7870808162733253
                ],
                [
                  "test_line",
                  "test_assignment",
                  0.659169383350339
                ],
                [
                  "test_class_method",
                  "test_extended_arg_overflow",
                  0.7912724766810363
                ],
                [
                  "test_if",
                  "test_double_extended_arg",
                  0.7392332850333335
                ],
                [
                  "test_offset_overflow",
                  "test_extended_arg_overflow",
                  0.8541016353348264
                ],
                [
                  "test_assignment",
                  "test_else",
                  0.8686818731663921
                ],
                [
                  "test_class_method",
                  "test_long_lines",
                  0.6962477642562512
                ],
                [
                  "test_line",
                  "test_offset_overflow",
                  0.8083385050343709
                ],
                [
                  "test_for_loop",
                  "test_else",
                  0.7612274465503869
                ],
                [
                  "test_elif",
                  "test_many_names",
                  0.5934153632254087
                ],
                [
                  "test_if",
                  "test_offset_overflow",
                  0.8062834637743269
                ],
                [
                  "test_call_other_function",
                  "test_many_names",
                  0.6972732573189103
                ],
                [
                  "test_for_else",
                  "test_extended_arg_overflow",
                  0.8022894765176365
                ],
                [
                  "test_call_other_function",
                  "test_offset_overflow",
                  0.8369618529384492
                ],
                [
                  "test_else",
                  "test_for_else",
                  0.8804630890729798
                ],
                [
                  "test_elif",
                  "test_call_other_function",
                  0.8863051056235798
                ],
                [
                  "test_for_loop",
                  "test_offset_overflow",
                  0.6094855736203999
                ],
                [
                  "test_line",
                  "test_elif",
                  0.7861576968539523
                ],
                [
                  "test_many_names",
                  "test_double_extended_arg",
                  0.47593326294988686
                ],
                [
                  "test_else",
                  "test_elif",
                  0.8704019448174187
                ],
                [
                  "test_assignment",
                  "test_for_else",
                  0.7151172381637259
                ],
                [
                  "test_assignment",
                  "test_offset_overflow",
                  0.7552495971544056
                ],
                [
                  "test_if",
                  "test_call_other_function",
                  0.8976821010179955
                ],
                [
                  "test_for_else",
                  "test_double_extended_arg",
                  0.70485281745728
                ],
                [
                  "test_else",
                  "test_call_other_function",
                  0.8976821010179955
                ],
                [
                  "test_else",
                  "test_offset_overflow",
                  0.8062834637743269
                ],
                [
                  "test_for_else",
                  "test_long_lines",
                  0.7041684182073058
                ],
                [
                  "test_line",
                  "test_else",
                  0.7330717852658827
                ],
                [
                  "test_long_lines",
                  "test_extended_arg_overflow",
                  0.822245812010646
                ],
                [
                  "test_for_else",
                  "test_class_method",
                  0.9057379784406968
                ],
                [
                  "test_if",
                  "test_for_else",
                  0.8792316721651854
                ],
                [
                  "test_class_method",
                  "test_offset_overflow",
                  0.7642013091553691
                ],
                [
                  "test_line",
                  "test_extended_arg_overflow",
                  0.8148066612488511
                ],
                [
                  "test_assignment",
                  "test_call_other_function",
                  0.884081182860453
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_for_loop",
                "false"
              ],
              [
                "test_class_method",
                "false"
              ],
              [
                "test_assignment",
                "false"
              ],
              [
                "test_else",
                "false"
              ],
              [
                "test_for_else",
                "false"
              ],
              [
                "test_extended_arg_overflow",
                "false"
              ],
              [
                "test_double_extended_arg",
                "false"
              ],
              [
                "test_elif",
                "false"
              ],
              [
                "test_many_names",
                "false"
              ],
              [
                "test_offset_overflow",
                "false"
              ],
              [
                "test_call_other_function",
                "false"
              ],
              [
                "test_if",
                "false"
              ],
              [
                "test_line",
                "false"
              ],
              [
                "test_long_lines",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 14
      }
    ]
  },
  {
    "name": "tests_python_\u0026_test_additional_thread_info.py",
    "testCases": [
      {
        "name": "TestCase",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_start_new_thread",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_start_new_thread2",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_start_new_thread",
                  "[]"
                ],
                [
                  "test_start_new_thread2",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_start_new_thread",
                  "true"
                ],
                [
                  "test_start_new_thread2",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_start_new_thread",
                  "false"
                ],
                [
                  "test_start_new_thread2",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_start_new_thread",
                  "false"
                ],
                [
                  "test_start_new_thread2",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_start_new_thread",
                  "false"
                ],
                [
                  "test_start_new_thread2",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_start_new_thread",
                "false"
              ],
              [
                "test_start_new_thread2",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_start_new_thread",
                "true"
              ],
              [
                "test_start_new_thread2",
                "true"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_start_new_thread",
                []
              ],
              [
                "test_start_new_thread2",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_start_new_thread",
                "false"
              ],
              [
                "test_start_new_thread2",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_start_new_thread",
                "false"
              ],
              [
                "test_start_new_thread2",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_start_new_thread",
                  "0"
                ],
                [
                  "test_start_new_thread2",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_start_new_thread",
                  "0"
                ],
                [
                  "test_start_new_thread2",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_start_new_thread",
                "false"
              ],
              [
                "test_start_new_thread2",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": true,
            "detail": [
              [
                "test_start_new_thread",
                "true"
              ],
              [
                "test_start_new_thread2",
                "true"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_start_new_thread",
                "2"
              ],
              [
                "test_start_new_thread2",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_start_new_thread",
                [
                  "found"
                ]
              ],
              [
                "test_start_new_thread2",
                [
                  "found",
                  "f",
                  "start_new_thread"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_start_new_thread",
                []
              ],
              [
                "test_start_new_thread2",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9508033562649069,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_start_new_thread",
                  "test_start_new_thread2",
                  0.9508033562649069
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_start_new_thread",
                "false"
              ],
              [
                "test_start_new_thread2",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  }
]