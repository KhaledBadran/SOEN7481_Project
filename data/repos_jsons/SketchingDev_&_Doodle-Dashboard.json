[
  {
    "name": "tests_\u0026_doodledashboard_\u0026_datafeeds_\u0026_test_rss.py",
    "testCases": [
      {
        "name": "TestConfig",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_data_feed_created_with_descending_sort_order_from_options",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_id_is_rss",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_data_feed_created_with_url_from_options",
                  "[PyCallExpression: self.assertIsInstance]"
                ],
                [
                  "test_data_feed_created_with_ascending_sort_order_from_options",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_exception_raised_when_invalid_sort_in_options",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_exception_raised_when_no_url_in_options",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_data_feed_created_with_descending_sort_order_from_options",
                  "[]"
                ],
                [
                  "test_id_is_rss",
                  "[]"
                ],
                [
                  "test_data_feed_created_with_url_from_options",
                  "[]"
                ],
                [
                  "test_data_feed_created_with_ascending_sort_order_from_options",
                  "[]"
                ],
                [
                  "test_exception_raised_when_invalid_sort_in_options",
                  "[]"
                ],
                [
                  "test_exception_raised_when_no_url_in_options",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_data_feed_created_with_descending_sort_order_from_options",
                  "false"
                ],
                [
                  "test_id_is_rss",
                  "false"
                ],
                [
                  "test_data_feed_created_with_url_from_options",
                  "false"
                ],
                [
                  "test_data_feed_created_with_ascending_sort_order_from_options",
                  "false"
                ],
                [
                  "test_exception_raised_when_invalid_sort_in_options",
                  "false"
                ],
                [
                  "test_exception_raised_when_no_url_in_options",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_data_feed_created_with_descending_sort_order_from_options",
                  "false"
                ],
                [
                  "test_id_is_rss",
                  "false"
                ],
                [
                  "test_data_feed_created_with_url_from_options",
                  "false"
                ],
                [
                  "test_data_feed_created_with_ascending_sort_order_from_options",
                  "false"
                ],
                [
                  "test_exception_raised_when_invalid_sort_in_options",
                  "false"
                ],
                [
                  "test_exception_raised_when_no_url_in_options",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_data_feed_created_with_descending_sort_order_from_options",
                  "false"
                ],
                [
                  "test_id_is_rss",
                  "false"
                ],
                [
                  "test_data_feed_created_with_url_from_options",
                  "false"
                ],
                [
                  "test_data_feed_created_with_ascending_sort_order_from_options",
                  "false"
                ],
                [
                  "test_exception_raised_when_invalid_sort_in_options",
                  "false"
                ],
                [
                  "test_exception_raised_when_no_url_in_options",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_data_feed_created_with_descending_sort_order_from_options",
                  "false"
                ],
                [
                  "test_id_is_rss",
                  "false"
                ],
                [
                  "test_data_feed_created_with_url_from_options",
                  "false"
                ],
                [
                  "test_data_feed_created_with_ascending_sort_order_from_options",
                  "false"
                ],
                [
                  "test_exception_raised_when_invalid_sort_in_options",
                  "false"
                ],
                [
                  "test_exception_raised_when_no_url_in_options",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_data_feed_created_with_descending_sort_order_from_options",
                "false"
              ],
              [
                "test_id_is_rss",
                "false"
              ],
              [
                "test_data_feed_created_with_url_from_options",
                "false"
              ],
              [
                "test_data_feed_created_with_ascending_sort_order_from_options",
                "false"
              ],
              [
                "test_exception_raised_when_invalid_sort_in_options",
                "false"
              ],
              [
                "test_exception_raised_when_no_url_in_options",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_data_feed_created_with_descending_sort_order_from_options",
                "false"
              ],
              [
                "test_id_is_rss",
                "false"
              ],
              [
                "test_data_feed_created_with_url_from_options",
                "false"
              ],
              [
                "test_data_feed_created_with_ascending_sort_order_from_options",
                "false"
              ],
              [
                "test_exception_raised_when_invalid_sort_in_options",
                "false"
              ],
              [
                "test_exception_raised_when_no_url_in_options",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_data_feed_created_with_descending_sort_order_from_options",
                []
              ],
              [
                "test_id_is_rss",
                []
              ],
              [
                "test_data_feed_created_with_url_from_options",
                []
              ],
              [
                "test_data_feed_created_with_ascending_sort_order_from_options",
                []
              ],
              [
                "test_exception_raised_when_invalid_sort_in_options",
                []
              ],
              [
                "test_exception_raised_when_no_url_in_options",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_data_feed_created_with_descending_sort_order_from_options",
                "false"
              ],
              [
                "test_id_is_rss",
                "false"
              ],
              [
                "test_data_feed_created_with_url_from_options",
                "false"
              ],
              [
                "test_data_feed_created_with_ascending_sort_order_from_options",
                "false"
              ],
              [
                "test_exception_raised_when_invalid_sort_in_options",
                "false"
              ],
              [
                "test_exception_raised_when_no_url_in_options",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_data_feed_created_with_descending_sort_order_from_options",
                "false"
              ],
              [
                "test_id_is_rss",
                "false"
              ],
              [
                "test_data_feed_created_with_url_from_options",
                "false"
              ],
              [
                "test_data_feed_created_with_ascending_sort_order_from_options",
                "false"
              ],
              [
                "test_exception_raised_when_invalid_sort_in_options",
                "false"
              ],
              [
                "test_exception_raised_when_no_url_in_options",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_data_feed_created_with_descending_sort_order_from_options",
                  "0"
                ],
                [
                  "test_id_is_rss",
                  "0"
                ],
                [
                  "test_data_feed_created_with_url_from_options",
                  "0"
                ],
                [
                  "test_data_feed_created_with_ascending_sort_order_from_options",
                  "0"
                ],
                [
                  "test_exception_raised_when_invalid_sort_in_options",
                  "0"
                ],
                [
                  "test_exception_raised_when_no_url_in_options",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_data_feed_created_with_descending_sort_order_from_options",
                  "0"
                ],
                [
                  "test_id_is_rss",
                  "0"
                ],
                [
                  "test_data_feed_created_with_url_from_options",
                  "0"
                ],
                [
                  "test_data_feed_created_with_ascending_sort_order_from_options",
                  "0"
                ],
                [
                  "test_exception_raised_when_invalid_sort_in_options",
                  "0"
                ],
                [
                  "test_exception_raised_when_no_url_in_options",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_data_feed_created_with_descending_sort_order_from_options",
                "false"
              ],
              [
                "test_id_is_rss",
                "false"
              ],
              [
                "test_data_feed_created_with_url_from_options",
                "false"
              ],
              [
                "test_data_feed_created_with_ascending_sort_order_from_options",
                "false"
              ],
              [
                "test_exception_raised_when_invalid_sort_in_options",
                "false"
              ],
              [
                "test_exception_raised_when_no_url_in_options",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_data_feed_created_with_descending_sort_order_from_options",
                "false"
              ],
              [
                "test_id_is_rss",
                "false"
              ],
              [
                "test_data_feed_created_with_url_from_options",
                "false"
              ],
              [
                "test_data_feed_created_with_ascending_sort_order_from_options",
                "false"
              ],
              [
                "test_exception_raised_when_invalid_sort_in_options",
                "false"
              ],
              [
                "test_exception_raised_when_no_url_in_options",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_data_feed_created_with_descending_sort_order_from_options",
                "1"
              ],
              [
                "test_id_is_rss",
                "1"
              ],
              [
                "test_data_feed_created_with_url_from_options",
                "1"
              ],
              [
                "test_data_feed_created_with_ascending_sort_order_from_options",
                "1"
              ],
              [
                "test_exception_raised_when_invalid_sort_in_options",
                "1"
              ],
              [
                "test_exception_raised_when_no_url_in_options",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_data_feed_created_with_descending_sort_order_from_options",
                [
                  "options_with_descending_order",
                  "data_feed"
                ]
              ],
              [
                "test_id_is_rss",
                []
              ],
              [
                "test_data_feed_created_with_url_from_options",
                [
                  "data_feed",
                  "options_with_url"
                ]
              ],
              [
                "test_data_feed_created_with_ascending_sort_order_from_options",
                [
                  "options_with_ascending_order",
                  "data_feed"
                ]
              ],
              [
                "test_exception_raised_when_invalid_sort_in_options",
                [
                  "options_with_invalid_sort"
                ]
              ],
              [
                "test_exception_raised_when_no_url_in_options",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_data_feed_created_with_descending_sort_order_from_options",
                []
              ],
              [
                "test_id_is_rss",
                []
              ],
              [
                "test_data_feed_created_with_url_from_options",
                []
              ],
              [
                "test_data_feed_created_with_ascending_sort_order_from_options",
                []
              ],
              [
                "test_exception_raised_when_invalid_sort_in_options",
                []
              ],
              [
                "test_exception_raised_when_no_url_in_options",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.610352831927086,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_id_is_rss",
                  "test_data_feed_created_with_url_from_options",
                  0.45184805705753195
                ],
                [
                  "test_id_is_rss",
                  "test_data_feed_created_with_ascending_sort_order_from_options",
                  0.3561978058282742
                ],
                [
                  "test_exception_raised_when_invalid_sort_in_options",
                  "test_data_feed_created_with_descending_sort_order_from_options",
                  0.7133544323742435
                ],
                [
                  "test_id_is_rss",
                  "test_exception_raised_when_no_url_in_options",
                  0.3595462477533374
                ],
                [
                  "test_exception_raised_when_no_url_in_options",
                  "test_exception_raised_when_invalid_sort_in_options",
                  0.7727293192586547
                ],
                [
                  "test_exception_raised_when_invalid_sort_in_options",
                  "test_data_feed_created_with_ascending_sort_order_from_options",
                  0.7379528610768036
                ],
                [
                  "test_data_feed_created_with_url_from_options",
                  "test_data_feed_created_with_descending_sort_order_from_options",
                  0.817116992957667
                ],
                [
                  "test_data_feed_created_with_url_from_options",
                  "test_exception_raised_when_invalid_sort_in_options",
                  0.6954006683576303
                ],
                [
                  "test_id_is_rss",
                  "test_exception_raised_when_invalid_sort_in_options",
                  0.3491282676376716
                ],
                [
                  "test_data_feed_created_with_url_from_options",
                  "test_data_feed_created_with_ascending_sort_order_from_options",
                  0.817116992957667
                ],
                [
                  "test_data_feed_created_with_ascending_sort_order_from_options",
                  "test_data_feed_created_with_descending_sort_order_from_options",
                  0.900900900900901
                ],
                [
                  "test_exception_raised_when_no_url_in_options",
                  "test_data_feed_created_with_ascending_sort_order_from_options",
                  0.5910903902008976
                ],
                [
                  "test_exception_raised_when_no_url_in_options",
                  "test_data_feed_created_with_url_from_options",
                  0.6456213465158374
                ],
                [
                  "test_id_is_rss",
                  "test_data_feed_created_with_descending_sort_order_from_options",
                  0.3561978058282742
                ],
                [
                  "test_exception_raised_when_no_url_in_options",
                  "test_data_feed_created_with_descending_sort_order_from_options",
                  0.5910903902008976
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_data_feed_created_with_descending_sort_order_from_options",
                "false"
              ],
              [
                "test_id_is_rss",
                "false"
              ],
              [
                "test_data_feed_created_with_url_from_options",
                "false"
              ],
              [
                "test_data_feed_created_with_ascending_sort_order_from_options",
                "false"
              ],
              [
                "test_exception_raised_when_invalid_sort_in_options",
                "false"
              ],
              [
                "test_exception_raised_when_no_url_in_options",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      },
      {
        "name": "TestFeed",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_messages_ordered_by_date_ascending",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_messages_sorted_natural_order_by_default",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_messages_ordered_by_date_descending",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_messages_ordered_by_date_ascending",
                  "[]"
                ],
                [
                  "test_messages_sorted_natural_order_by_default",
                  "[]"
                ],
                [
                  "test_messages_ordered_by_date_descending",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_messages_ordered_by_date_ascending",
                  "false"
                ],
                [
                  "test_messages_sorted_natural_order_by_default",
                  "false"
                ],
                [
                  "test_messages_ordered_by_date_descending",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_messages_ordered_by_date_ascending",
                  "false"
                ],
                [
                  "test_messages_sorted_natural_order_by_default",
                  "false"
                ],
                [
                  "test_messages_ordered_by_date_descending",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_messages_ordered_by_date_ascending",
                  "false"
                ],
                [
                  "test_messages_sorted_natural_order_by_default",
                  "false"
                ],
                [
                  "test_messages_ordered_by_date_descending",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_messages_ordered_by_date_ascending",
                  "false"
                ],
                [
                  "test_messages_sorted_natural_order_by_default",
                  "false"
                ],
                [
                  "test_messages_ordered_by_date_descending",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_messages_ordered_by_date_ascending",
                "false"
              ],
              [
                "test_messages_sorted_natural_order_by_default",
                "false"
              ],
              [
                "test_messages_ordered_by_date_descending",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_messages_ordered_by_date_ascending",
                "false"
              ],
              [
                "test_messages_sorted_natural_order_by_default",
                "false"
              ],
              [
                "test_messages_ordered_by_date_descending",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_messages_ordered_by_date_ascending",
                []
              ],
              [
                "test_messages_sorted_natural_order_by_default",
                []
              ],
              [
                "test_messages_ordered_by_date_descending",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_messages_ordered_by_date_ascending",
                "false"
              ],
              [
                "test_messages_sorted_natural_order_by_default",
                "false"
              ],
              [
                "test_messages_ordered_by_date_descending",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_messages_ordered_by_date_ascending",
                "true"
              ],
              [
                "test_messages_sorted_natural_order_by_default",
                "true"
              ],
              [
                "test_messages_ordered_by_date_descending",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_messages_ordered_by_date_ascending",
                  "0"
                ],
                [
                  "test_messages_sorted_natural_order_by_default",
                  "0"
                ],
                [
                  "test_messages_ordered_by_date_descending",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_messages_ordered_by_date_ascending",
                  "0"
                ],
                [
                  "test_messages_sorted_natural_order_by_default",
                  "0"
                ],
                [
                  "test_messages_ordered_by_date_descending",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_messages_ordered_by_date_ascending",
                "false"
              ],
              [
                "test_messages_sorted_natural_order_by_default",
                "false"
              ],
              [
                "test_messages_ordered_by_date_descending",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_messages_ordered_by_date_ascending",
                "false"
              ],
              [
                "test_messages_sorted_natural_order_by_default",
                "false"
              ],
              [
                "test_messages_ordered_by_date_descending",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_messages_ordered_by_date_ascending",
                "4"
              ],
              [
                "test_messages_sorted_natural_order_by_default",
                "4"
              ],
              [
                "test_messages_ordered_by_date_descending",
                "4"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_messages_ordered_by_date_ascending",
                [
                  "data_feed",
                  "options",
                  "messages"
                ]
              ],
              [
                "test_messages_sorted_natural_order_by_default",
                [
                  "data_feed",
                  "options",
                  "messages"
                ]
              ],
              [
                "test_messages_ordered_by_date_descending",
                [
                  "data_feed",
                  "options",
                  "messages"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_messages_ordered_by_date_ascending",
                [
                  "self.http_server"
                ]
              ],
              [
                "test_messages_sorted_natural_order_by_default",
                [
                  "self.http_server"
                ]
              ],
              [
                "test_messages_ordered_by_date_descending",
                [
                  "self.http_server"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.992762396568028,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_messages_ordered_by_date_descending",
                  "test_messages_sorted_natural_order_by_default",
                  0.991115981439813
                ],
                [
                  "test_messages_ordered_by_date_ascending",
                  "test_messages_sorted_natural_order_by_default",
                  0.991115981439813
                ],
                [
                  "test_messages_ordered_by_date_ascending",
                  "test_messages_ordered_by_date_descending",
                  0.9960552268244577
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_messages_ordered_by_date_ascending",
                "false"
              ],
              [
                "test_messages_sorted_natural_order_by_default",
                "false"
              ],
              [
                "test_messages_ordered_by_date_descending",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_doodledashboard_\u0026_display_\u0026_test_console.py",
    "testCases": [
      {
        "name": "TestConsoleDisplay",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_id",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_warning_shown_for_unsupported_notifications",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_id",
                  "[]"
                ],
                [
                  "test_warning_shown_for_unsupported_notifications",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_id",
                  "false"
                ],
                [
                  "test_warning_shown_for_unsupported_notifications",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_id",
                  "false"
                ],
                [
                  "test_warning_shown_for_unsupported_notifications",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_id",
                  "false"
                ],
                [
                  "test_warning_shown_for_unsupported_notifications",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_id",
                  "false"
                ],
                [
                  "test_warning_shown_for_unsupported_notifications",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_id",
                "false"
              ],
              [
                "test_warning_shown_for_unsupported_notifications",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_id",
                "false"
              ],
              [
                "test_warning_shown_for_unsupported_notifications",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_id",
                []
              ],
              [
                "test_warning_shown_for_unsupported_notifications",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_id",
                "false"
              ],
              [
                "test_warning_shown_for_unsupported_notifications",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_id",
                "false"
              ],
              [
                "test_warning_shown_for_unsupported_notifications",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_id",
                  "0"
                ],
                [
                  "test_warning_shown_for_unsupported_notifications",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_id",
                  "0"
                ],
                [
                  "test_warning_shown_for_unsupported_notifications",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_id",
                "false"
              ],
              [
                "test_warning_shown_for_unsupported_notifications",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_id",
                "false"
              ],
              [
                "test_warning_shown_for_unsupported_notifications",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_id",
                "1"
              ],
              [
                "test_warning_shown_for_unsupported_notifications",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_id",
                []
              ],
              [
                "test_warning_shown_for_unsupported_notifications",
                [
                  "result",
                  "cmd",
                  "image_notification"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_id",
                []
              ],
              [
                "test_warning_shown_for_unsupported_notifications",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.29848100289785456,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_id",
                  "test_warning_shown_for_unsupported_notifications",
                  0.29848100289785456
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_id",
                "false"
              ],
              [
                "test_warning_shown_for_unsupported_notifications",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "TestTextNotification",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_centred",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_console_resizes_dynamically",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_centred",
                  "[]"
                ],
                [
                  "test_console_resizes_dynamically",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_centred",
                  "false"
                ],
                [
                  "test_console_resizes_dynamically",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_centred",
                  "false"
                ],
                [
                  "test_console_resizes_dynamically",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_centred",
                  "false"
                ],
                [
                  "test_console_resizes_dynamically",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_centred",
                  "false"
                ],
                [
                  "test_console_resizes_dynamically",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_centred",
                "false"
              ],
              [
                "test_console_resizes_dynamically",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_centred",
                "false"
              ],
              [
                "test_console_resizes_dynamically",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_centred",
                []
              ],
              [
                "test_console_resizes_dynamically",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_centred",
                "false"
              ],
              [
                "test_console_resizes_dynamically",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_centred",
                "false"
              ],
              [
                "test_console_resizes_dynamically",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_centred",
                  "0"
                ],
                [
                  "test_console_resizes_dynamically",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_centred",
                  "0"
                ],
                [
                  "test_console_resizes_dynamically",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_centred",
                "false"
              ],
              [
                "test_console_resizes_dynamically",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_centred",
                "false"
              ],
              [
                "test_console_resizes_dynamically",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_centred",
                "1"
              ],
              [
                "test_console_resizes_dynamically",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_centred",
                [
                  "result",
                  "console",
                  "expected_terminal_output",
                  "text_output",
                  "cmd"
                ]
              ],
              [
                "test_console_resizes_dynamically",
                [
                  "console",
                  "cmd2",
                  "cmd1",
                  "text_output",
                  "result2",
                  "mock_size_getter",
                  "result1"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_centred",
                []
              ],
              [
                "test_console_resizes_dynamically",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6823556990457954,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_centred",
                  "test_console_resizes_dynamically",
                  0.6823556990457954
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_centred",
                "false"
              ],
              [
                "test_console_resizes_dynamically",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "TestImageNotification",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_conversion",
                  "[PyCallExpression: self.assertIn]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_conversion",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_conversion",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_conversion",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_conversion",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_conversion",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_conversion",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_conversion",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_conversion",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_conversion",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_conversion",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_conversion",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_conversion",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_conversion",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_conversion",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_conversion",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_conversion",
                [
                  "result",
                  "console",
                  "expected_terminal_output",
                  "image_output",
                  "input_image",
                  "cmd",
                  "expected_ascii_output_file",
                  "console_size"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_conversion",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_conversion",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_doodledashboard_\u0026_notifications_\u0026_image_\u0026_test_file_downloader.py",
    "testCases": [
      {
        "name": "TestFileDownloader",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_local_filename_created_from_remote_filename_is_safe",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_local_filename_created_from_remote_filename_is_safe",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_local_filename_created_from_remote_filename_is_safe",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_local_filename_created_from_remote_filename_is_safe",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_local_filename_created_from_remote_filename_is_safe",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_local_filename_created_from_remote_filename_is_safe",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_local_filename_created_from_remote_filename_is_safe",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_local_filename_created_from_remote_filename_is_safe",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_local_filename_created_from_remote_filename_is_safe",
                [
                  "self.http_server"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_local_filename_created_from_remote_filename_is_safe",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_local_filename_created_from_remote_filename_is_safe",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_local_filename_created_from_remote_filename_is_safe",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_local_filename_created_from_remote_filename_is_safe",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_local_filename_created_from_remote_filename_is_safe",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_local_filename_created_from_remote_filename_is_safe",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_local_filename_created_from_remote_filename_is_safe",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_local_filename_created_from_remote_filename_is_safe",
                [
                  "remote_with_expected_local",
                  "description",
                  "remote_filename",
                  "expected_end_of_local_filename"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_local_filename_created_from_remote_filename_is_safe",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_local_filename_created_from_remote_filename_is_safe",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_doodledashboard_\u0026_notifications_\u0026_image_\u0026_test_image_configuration.py",
    "testCases": [
      {
        "name": "TestConfig",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_exception_raised_when_image_missing_path_in_options",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_output_created_with_path_and_pattern",
                  "[PyCallExpression: self.assertIsInstance, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_exception_raised_when_no_image_list_and_default_image_in_options",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_notification_encodes_image_path_in_output",
                  "[PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertEquals]"
                ],
                [
                  "test_output_created_with_default_image",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_output_created_with_path_and_contains",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_id_is_image_depending_on_message_content",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_exception_raised_when_image_missing_path_in_options",
                  "[]"
                ],
                [
                  "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                  "[]"
                ],
                [
                  "test_output_created_with_path_and_pattern",
                  "[]"
                ],
                [
                  "test_exception_raised_when_no_image_list_and_default_image_in_options",
                  "[]"
                ],
                [
                  "test_notification_encodes_image_path_in_output",
                  "[]"
                ],
                [
                  "test_output_created_with_default_image",
                  "[]"
                ],
                [
                  "test_output_created_with_path_and_contains",
                  "[]"
                ],
                [
                  "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                  "[]"
                ],
                [
                  "test_id_is_image_depending_on_message_content",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_exception_raised_when_image_missing_path_in_options",
                  "false"
                ],
                [
                  "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                  "false"
                ],
                [
                  "test_output_created_with_path_and_pattern",
                  "false"
                ],
                [
                  "test_exception_raised_when_no_image_list_and_default_image_in_options",
                  "false"
                ],
                [
                  "test_notification_encodes_image_path_in_output",
                  "false"
                ],
                [
                  "test_output_created_with_default_image",
                  "false"
                ],
                [
                  "test_output_created_with_path_and_contains",
                  "false"
                ],
                [
                  "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                  "false"
                ],
                [
                  "test_id_is_image_depending_on_message_content",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_exception_raised_when_image_missing_path_in_options",
                  "false"
                ],
                [
                  "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                  "false"
                ],
                [
                  "test_output_created_with_path_and_pattern",
                  "false"
                ],
                [
                  "test_exception_raised_when_no_image_list_and_default_image_in_options",
                  "false"
                ],
                [
                  "test_notification_encodes_image_path_in_output",
                  "false"
                ],
                [
                  "test_output_created_with_default_image",
                  "false"
                ],
                [
                  "test_output_created_with_path_and_contains",
                  "false"
                ],
                [
                  "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                  "false"
                ],
                [
                  "test_id_is_image_depending_on_message_content",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_exception_raised_when_image_missing_path_in_options",
                  "false"
                ],
                [
                  "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                  "false"
                ],
                [
                  "test_output_created_with_path_and_pattern",
                  "false"
                ],
                [
                  "test_exception_raised_when_no_image_list_and_default_image_in_options",
                  "false"
                ],
                [
                  "test_notification_encodes_image_path_in_output",
                  "false"
                ],
                [
                  "test_output_created_with_default_image",
                  "false"
                ],
                [
                  "test_output_created_with_path_and_contains",
                  "false"
                ],
                [
                  "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                  "false"
                ],
                [
                  "test_id_is_image_depending_on_message_content",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_exception_raised_when_image_missing_path_in_options",
                  "false"
                ],
                [
                  "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                  "false"
                ],
                [
                  "test_output_created_with_path_and_pattern",
                  "false"
                ],
                [
                  "test_exception_raised_when_no_image_list_and_default_image_in_options",
                  "false"
                ],
                [
                  "test_notification_encodes_image_path_in_output",
                  "false"
                ],
                [
                  "test_output_created_with_default_image",
                  "false"
                ],
                [
                  "test_output_created_with_path_and_contains",
                  "false"
                ],
                [
                  "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                  "false"
                ],
                [
                  "test_id_is_image_depending_on_message_content",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_exception_raised_when_image_missing_path_in_options",
                "false"
              ],
              [
                "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                "false"
              ],
              [
                "test_output_created_with_path_and_pattern",
                "false"
              ],
              [
                "test_exception_raised_when_no_image_list_and_default_image_in_options",
                "false"
              ],
              [
                "test_notification_encodes_image_path_in_output",
                "false"
              ],
              [
                "test_output_created_with_default_image",
                "false"
              ],
              [
                "test_output_created_with_path_and_contains",
                "false"
              ],
              [
                "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                "false"
              ],
              [
                "test_id_is_image_depending_on_message_content",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": true,
            "detail": [
              [
                "test_exception_raised_when_image_missing_path_in_options",
                "false"
              ],
              [
                "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                "false"
              ],
              [
                "test_output_created_with_path_and_pattern",
                "true"
              ],
              [
                "test_exception_raised_when_no_image_list_and_default_image_in_options",
                "false"
              ],
              [
                "test_notification_encodes_image_path_in_output",
                "true"
              ],
              [
                "test_output_created_with_default_image",
                "true"
              ],
              [
                "test_output_created_with_path_and_contains",
                "true"
              ],
              [
                "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                "false"
              ],
              [
                "test_id_is_image_depending_on_message_content",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_exception_raised_when_image_missing_path_in_options",
                [
                  "self.http_server"
                ]
              ],
              [
                "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                [
                  "self.http_server"
                ]
              ],
              [
                "test_output_created_with_path_and_pattern",
                []
              ],
              [
                "test_exception_raised_when_no_image_list_and_default_image_in_options",
                [
                  "self.http_server"
                ]
              ],
              [
                "test_notification_encodes_image_path_in_output",
                []
              ],
              [
                "test_output_created_with_default_image",
                []
              ],
              [
                "test_output_created_with_path_and_contains",
                []
              ],
              [
                "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                [
                  "self.http_server"
                ]
              ],
              [
                "test_id_is_image_depending_on_message_content",
                [
                  "self.http_server"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_exception_raised_when_image_missing_path_in_options",
                "false"
              ],
              [
                "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                "false"
              ],
              [
                "test_output_created_with_path_and_pattern",
                "false"
              ],
              [
                "test_exception_raised_when_no_image_list_and_default_image_in_options",
                "false"
              ],
              [
                "test_notification_encodes_image_path_in_output",
                "false"
              ],
              [
                "test_output_created_with_default_image",
                "false"
              ],
              [
                "test_output_created_with_path_and_contains",
                "false"
              ],
              [
                "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                "false"
              ],
              [
                "test_id_is_image_depending_on_message_content",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_exception_raised_when_image_missing_path_in_options",
                "false"
              ],
              [
                "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                "false"
              ],
              [
                "test_output_created_with_path_and_pattern",
                "true"
              ],
              [
                "test_exception_raised_when_no_image_list_and_default_image_in_options",
                "false"
              ],
              [
                "test_notification_encodes_image_path_in_output",
                "false"
              ],
              [
                "test_output_created_with_default_image",
                "true"
              ],
              [
                "test_output_created_with_path_and_contains",
                "true"
              ],
              [
                "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                "false"
              ],
              [
                "test_id_is_image_depending_on_message_content",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_exception_raised_when_image_missing_path_in_options",
                  "0"
                ],
                [
                  "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                  "0"
                ],
                [
                  "test_output_created_with_path_and_pattern",
                  "0"
                ],
                [
                  "test_exception_raised_when_no_image_list_and_default_image_in_options",
                  "0"
                ],
                [
                  "test_notification_encodes_image_path_in_output",
                  "0"
                ],
                [
                  "test_output_created_with_default_image",
                  "0"
                ],
                [
                  "test_output_created_with_path_and_contains",
                  "0"
                ],
                [
                  "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                  "0"
                ],
                [
                  "test_id_is_image_depending_on_message_content",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_exception_raised_when_image_missing_path_in_options",
                  "0"
                ],
                [
                  "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                  "0"
                ],
                [
                  "test_output_created_with_path_and_pattern",
                  "0"
                ],
                [
                  "test_exception_raised_when_no_image_list_and_default_image_in_options",
                  "0"
                ],
                [
                  "test_notification_encodes_image_path_in_output",
                  "0"
                ],
                [
                  "test_output_created_with_default_image",
                  "0"
                ],
                [
                  "test_output_created_with_path_and_contains",
                  "0"
                ],
                [
                  "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                  "0"
                ],
                [
                  "test_id_is_image_depending_on_message_content",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_exception_raised_when_image_missing_path_in_options",
                "false"
              ],
              [
                "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                "false"
              ],
              [
                "test_output_created_with_path_and_pattern",
                "false"
              ],
              [
                "test_exception_raised_when_no_image_list_and_default_image_in_options",
                "false"
              ],
              [
                "test_notification_encodes_image_path_in_output",
                "false"
              ],
              [
                "test_output_created_with_default_image",
                "false"
              ],
              [
                "test_output_created_with_path_and_contains",
                "false"
              ],
              [
                "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                "false"
              ],
              [
                "test_id_is_image_depending_on_message_content",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_exception_raised_when_image_missing_path_in_options",
                "false"
              ],
              [
                "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                "false"
              ],
              [
                "test_output_created_with_path_and_pattern",
                "false"
              ],
              [
                "test_exception_raised_when_no_image_list_and_default_image_in_options",
                "false"
              ],
              [
                "test_notification_encodes_image_path_in_output",
                "false"
              ],
              [
                "test_output_created_with_default_image",
                "false"
              ],
              [
                "test_output_created_with_path_and_contains",
                "false"
              ],
              [
                "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                "false"
              ],
              [
                "test_id_is_image_depending_on_message_content",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_exception_raised_when_image_missing_path_in_options",
                "1"
              ],
              [
                "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                "1"
              ],
              [
                "test_output_created_with_path_and_pattern",
                "5"
              ],
              [
                "test_exception_raised_when_no_image_list_and_default_image_in_options",
                "1"
              ],
              [
                "test_notification_encodes_image_path_in_output",
                "2"
              ],
              [
                "test_output_created_with_default_image",
                "2"
              ],
              [
                "test_output_created_with_path_and_contains",
                "4"
              ],
              [
                "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                "1"
              ],
              [
                "test_id_is_image_depending_on_message_content",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_exception_raised_when_image_missing_path_in_options",
                [
                  "options",
                  "config"
                ]
              ],
              [
                "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                [
                  "options",
                  "config"
                ]
              ],
              [
                "test_output_created_with_path_and_pattern",
                [
                  "downloaded_files",
                  "image_filters",
                  "options",
                  "download_path",
                  "image_and_filter",
                  "config",
                  "downloader"
                ]
              ],
              [
                "test_exception_raised_when_no_image_list_and_default_image_in_options",
                [
                  "config"
                ]
              ],
              [
                "test_notification_encodes_image_path_in_output",
                [
                  "notification",
                  "image_output",
                  "file_contents",
                  "options",
                  "config",
                  "downloader"
                ]
              ],
              [
                "test_output_created_with_default_image",
                [
                  "notification",
                  "downloaded_files",
                  "options",
                  "download_path",
                  "config",
                  "downloader"
                ]
              ],
              [
                "test_output_created_with_path_and_contains",
                [
                  "notification",
                  "downloaded_files",
                  "image_filters",
                  "options",
                  "download_path",
                  "image_and_filter",
                  "config",
                  "downloader"
                ]
              ],
              [
                "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                [
                  "options",
                  "config"
                ]
              ],
              [
                "test_id_is_image_depending_on_message_content",
                [
                  "id"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_exception_raised_when_image_missing_path_in_options",
                []
              ],
              [
                "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                []
              ],
              [
                "test_output_created_with_path_and_pattern",
                [
                  "self.http_server"
                ]
              ],
              [
                "test_exception_raised_when_no_image_list_and_default_image_in_options",
                []
              ],
              [
                "test_notification_encodes_image_path_in_output",
                [
                  "self.http_server"
                ]
              ],
              [
                "test_output_created_with_default_image",
                [
                  "self.http_server"
                ]
              ],
              [
                "test_output_created_with_path_and_contains",
                [
                  "self.http_server"
                ]
              ],
              [
                "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                []
              ],
              [
                "test_id_is_image_depending_on_message_content",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5431649216746972,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_exception_raised_when_no_image_list_and_default_image_in_options",
                  "test_output_created_with_path_and_contains",
                  0.48936957457936936
                ],
                [
                  "test_exception_raised_when_no_image_list_and_default_image_in_options",
                  "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                  0.5417363388859614
                ],
                [
                  "test_output_created_with_path_and_pattern",
                  "test_notification_encodes_image_path_in_output",
                  0.6786839747867768
                ],
                [
                  "test_id_is_image_depending_on_message_content",
                  "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                  0.37862009270926783
                ],
                [
                  "test_output_created_with_default_image",
                  "test_notification_encodes_image_path_in_output",
                  0.7587688004317363
                ],
                [
                  "test_output_created_with_path_and_pattern",
                  "test_output_created_with_path_and_contains",
                  0.9767055839732975
                ],
                [
                  "test_id_is_image_depending_on_message_content",
                  "test_notification_encodes_image_path_in_output",
                  0.43446333477261917
                ],
                [
                  "test_exception_raised_when_image_missing_path_in_options",
                  "test_output_created_with_path_and_contains",
                  0.46167179193596464
                ],
                [
                  "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                  "test_output_created_with_path_and_pattern",
                  0.4724276462936497
                ],
                [
                  "test_output_created_with_path_and_pattern",
                  "test_output_created_with_default_image",
                  0.7901224557091948
                ],
                [
                  "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                  "test_output_created_with_default_image",
                  0.3635981740928194
                ],
                [
                  "test_output_created_with_path_and_contains",
                  "test_output_created_with_default_image",
                  0.7922581835493347
                ],
                [
                  "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                  "test_output_created_with_path_and_pattern",
                  0.5135428275630425
                ],
                [
                  "test_exception_raised_when_no_image_list_and_default_image_in_options",
                  "test_output_created_with_path_and_pattern",
                  0.5227704786845088
                ],
                [
                  "test_id_is_image_depending_on_message_content",
                  "test_exception_raised_when_no_image_list_and_default_image_in_options",
                  0.42389562394532926
                ],
                [
                  "test_exception_raised_when_image_missing_path_in_options",
                  "test_output_created_with_path_and_pattern",
                  0.47934454836887835
                ],
                [
                  "test_exception_raised_when_image_missing_path_in_options",
                  "test_notification_encodes_image_path_in_output",
                  0.46659265026724317
                ],
                [
                  "test_exception_raised_when_image_missing_path_in_options",
                  "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                  0.7647191129018723
                ],
                [
                  "test_exception_raised_when_image_missing_path_in_options",
                  "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                  0.8844395746351073
                ],
                [
                  "test_exception_raised_when_no_image_list_and_default_image_in_options",
                  "test_exception_raised_when_image_missing_path_in_options",
                  0.6076049943327182
                ],
                [
                  "test_exception_raised_when_no_image_list_and_default_image_in_options",
                  "test_notification_encodes_image_path_in_output",
                  0.5466293244284154
                ],
                [
                  "test_exception_raised_when_image_missing_path_in_options",
                  "test_output_created_with_default_image",
                  0.4089252394147098
                ],
                [
                  "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                  "test_output_created_with_default_image",
                  0.3564927588143791
                ],
                [
                  "test_exception_raised_when_no_image_list_and_default_image_in_options",
                  "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                  0.6042179781166439
                ],
                [
                  "test_exception_raised_when_no_image_list_and_default_image_in_options",
                  "test_output_created_with_default_image",
                  0.489809990578335
                ],
                [
                  "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                  "test_notification_encodes_image_path_in_output",
                  0.444604743649978
                ],
                [
                  "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                  "test_notification_encodes_image_path_in_output",
                  0.43349678555584276
                ],
                [
                  "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                  "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                  0.843775842245837
                ],
                [
                  "test_output_created_with_path_and_contains",
                  "test_notification_encodes_image_path_in_output",
                  0.6738909695228246
                ],
                [
                  "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                  "test_output_created_with_path_and_contains",
                  0.4567029663866058
                ],
                [
                  "test_id_is_image_depending_on_message_content",
                  "test_output_created_with_default_image",
                  0.34406977346028084
                ],
                [
                  "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                  "test_output_created_with_path_and_contains",
                  0.49907041016078696
                ],
                [
                  "test_id_is_image_depending_on_message_content",
                  "test_exception_raised_when_image_missing_path_in_options",
                  0.3980489699222199
                ],
                [
                  "test_id_is_image_depending_on_message_content",
                  "test_output_created_with_path_and_contains",
                  0.4025599776892246
                ],
                [
                  "test_id_is_image_depending_on_message_content",
                  "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                  0.3878358759406698
                ],
                [
                  "test_id_is_image_depending_on_message_content",
                  "test_output_created_with_path_and_pattern",
                  0.46246981198365555
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_exception_raised_when_image_missing_path_in_options",
                "false"
              ],
              [
                "test_exception_raised_when_image_in_list_missing_pattern_and_contains",
                "false"
              ],
              [
                "test_output_created_with_path_and_pattern",
                "false"
              ],
              [
                "test_exception_raised_when_no_image_list_and_default_image_in_options",
                "false"
              ],
              [
                "test_notification_encodes_image_path_in_output",
                "false"
              ],
              [
                "test_output_created_with_default_image",
                "false"
              ],
              [
                "test_output_created_with_path_and_contains",
                "false"
              ],
              [
                "test_exception_raised_when_image_in_list_image_contains_pattern_and_contains",
                "false"
              ],
              [
                "test_id_is_image_depending_on_message_content",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 9
      }
    ]
  }
]