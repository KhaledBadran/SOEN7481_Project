[
  {
    "name": "tests_\u0026_test_ecg.py",
    "testCases": [
      {
        "name": "TestEcg",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_ecg_simulate",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_ecg_process",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_ecg_simulate",
                  "[]"
                ],
                [
                  "test_ecg_process",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_ecg_simulate",
                  "false"
                ],
                [
                  "test_ecg_process",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_ecg_simulate",
                  "false"
                ],
                [
                  "test_ecg_process",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_ecg_simulate",
                  "false"
                ],
                [
                  "test_ecg_process",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_ecg_simulate",
                  "false"
                ],
                [
                  "test_ecg_process",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_ecg_simulate",
                "false"
              ],
              [
                "test_ecg_process",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_ecg_simulate",
                "false"
              ],
              [
                "test_ecg_process",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_ecg_simulate",
                []
              ],
              [
                "test_ecg_process",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_ecg_simulate",
                "false"
              ],
              [
                "test_ecg_process",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_ecg_simulate",
                "true"
              ],
              [
                "test_ecg_process",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_ecg_simulate",
                  "0"
                ],
                [
                  "test_ecg_process",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_ecg_simulate",
                  "0"
                ],
                [
                  "test_ecg_process",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_ecg_simulate",
                "false"
              ],
              [
                "test_ecg_process",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_ecg_simulate",
                "false"
              ],
              [
                "test_ecg_process",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_ecg_simulate",
                "1"
              ],
              [
                "test_ecg_process",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_ecg_simulate",
                []
              ],
              [
                "test_ecg_process",
                [
                  "ecg_processed"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_ecg_simulate",
                [
                  "self.ecg"
                ]
              ],
              [
                "test_ecg_process",
                [
                  "self.ecg"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.47809144373375745,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_ecg_simulate",
                  "test_ecg_process",
                  0.47809144373375745
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_ecg_simulate",
                "false"
              ],
              [
                "test_ecg_process",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_signal.py",
    "testCases": [
      {
        "name": "TestComplexity",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_entropy_multiscale",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_complexity_entropy_shannon",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_entropy_multiscale",
                  "[]"
                ],
                [
                  "test_complexity_entropy_shannon",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_entropy_multiscale",
                  "false"
                ],
                [
                  "test_complexity_entropy_shannon",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_entropy_multiscale",
                  "false"
                ],
                [
                  "test_complexity_entropy_shannon",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_entropy_multiscale",
                  "false"
                ],
                [
                  "test_complexity_entropy_shannon",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_entropy_multiscale",
                  "false"
                ],
                [
                  "test_complexity_entropy_shannon",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_entropy_multiscale",
                "false"
              ],
              [
                "test_complexity_entropy_shannon",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_entropy_multiscale",
                "false"
              ],
              [
                "test_complexity_entropy_shannon",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_entropy_multiscale",
                []
              ],
              [
                "test_complexity_entropy_shannon",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_entropy_multiscale",
                "false"
              ],
              [
                "test_complexity_entropy_shannon",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_entropy_multiscale",
                "true"
              ],
              [
                "test_complexity_entropy_shannon",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_entropy_multiscale",
                  "0"
                ],
                [
                  "test_complexity_entropy_shannon",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_entropy_multiscale",
                  "0"
                ],
                [
                  "test_complexity_entropy_shannon",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_entropy_multiscale",
                "false"
              ],
              [
                "test_complexity_entropy_shannon",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_entropy_multiscale",
                "false"
              ],
              [
                "test_complexity_entropy_shannon",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_entropy_multiscale",
                "1"
              ],
              [
                "test_complexity_entropy_shannon",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_entropy_multiscale",
                [
                  "mse"
                ]
              ],
              [
                "test_complexity_entropy_shannon",
                [
                  "shannon"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_entropy_multiscale",
                [
                  "self.signal"
                ]
              ],
              [
                "test_complexity_entropy_shannon",
                [
                  "self.signal"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7016464154456235,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_complexity_entropy_shannon",
                  "test_entropy_multiscale",
                  0.7016464154456235
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_entropy_multiscale",
                "false"
              ],
              [
                "test_complexity_entropy_shannon",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_statistics.py",
    "testCases": [
      {
        "name": "TestStatistics",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_mad",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_normal_range",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_staircase",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_find_outliers",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_z_score",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_compute_BMI",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_compute_dprime",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_compute_interoceptive_accuracy",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_mad",
                  "[]"
                ],
                [
                  "test_normal_range",
                  "[]"
                ],
                [
                  "test_staircase",
                  "[]"
                ],
                [
                  "test_find_outliers",
                  "[]"
                ],
                [
                  "test_z_score",
                  "[]"
                ],
                [
                  "test_compute_BMI",
                  "[]"
                ],
                [
                  "test_compute_dprime",
                  "[]"
                ],
                [
                  "test_compute_interoceptive_accuracy",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_mad",
                  "false"
                ],
                [
                  "test_normal_range",
                  "false"
                ],
                [
                  "test_staircase",
                  "true"
                ],
                [
                  "test_find_outliers",
                  "false"
                ],
                [
                  "test_z_score",
                  "false"
                ],
                [
                  "test_compute_BMI",
                  "false"
                ],
                [
                  "test_compute_dprime",
                  "false"
                ],
                [
                  "test_compute_interoceptive_accuracy",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_mad",
                  "false"
                ],
                [
                  "test_normal_range",
                  "false"
                ],
                [
                  "test_staircase",
                  "false"
                ],
                [
                  "test_find_outliers",
                  "false"
                ],
                [
                  "test_z_score",
                  "false"
                ],
                [
                  "test_compute_BMI",
                  "false"
                ],
                [
                  "test_compute_dprime",
                  "false"
                ],
                [
                  "test_compute_interoceptive_accuracy",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_mad",
                  "false"
                ],
                [
                  "test_normal_range",
                  "false"
                ],
                [
                  "test_staircase",
                  "false"
                ],
                [
                  "test_find_outliers",
                  "false"
                ],
                [
                  "test_z_score",
                  "false"
                ],
                [
                  "test_compute_BMI",
                  "false"
                ],
                [
                  "test_compute_dprime",
                  "false"
                ],
                [
                  "test_compute_interoceptive_accuracy",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_mad",
                  "false"
                ],
                [
                  "test_normal_range",
                  "false"
                ],
                [
                  "test_staircase",
                  "false"
                ],
                [
                  "test_find_outliers",
                  "false"
                ],
                [
                  "test_z_score",
                  "false"
                ],
                [
                  "test_compute_BMI",
                  "false"
                ],
                [
                  "test_compute_dprime",
                  "false"
                ],
                [
                  "test_compute_interoceptive_accuracy",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_mad",
                "false"
              ],
              [
                "test_normal_range",
                "false"
              ],
              [
                "test_staircase",
                "false"
              ],
              [
                "test_find_outliers",
                "false"
              ],
              [
                "test_z_score",
                "false"
              ],
              [
                "test_compute_BMI",
                "false"
              ],
              [
                "test_compute_dprime",
                "false"
              ],
              [
                "test_compute_interoceptive_accuracy",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_mad",
                "false"
              ],
              [
                "test_normal_range",
                "false"
              ],
              [
                "test_staircase",
                "false"
              ],
              [
                "test_find_outliers",
                "false"
              ],
              [
                "test_z_score",
                "false"
              ],
              [
                "test_compute_BMI",
                "false"
              ],
              [
                "test_compute_dprime",
                "false"
              ],
              [
                "test_compute_interoceptive_accuracy",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_mad",
                []
              ],
              [
                "test_normal_range",
                []
              ],
              [
                "test_staircase",
                []
              ],
              [
                "test_find_outliers",
                []
              ],
              [
                "test_z_score",
                []
              ],
              [
                "test_compute_BMI",
                []
              ],
              [
                "test_compute_dprime",
                []
              ],
              [
                "test_compute_interoceptive_accuracy",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_mad",
                "false"
              ],
              [
                "test_normal_range",
                "false"
              ],
              [
                "test_staircase",
                "false"
              ],
              [
                "test_find_outliers",
                "false"
              ],
              [
                "test_z_score",
                "false"
              ],
              [
                "test_compute_BMI",
                "false"
              ],
              [
                "test_compute_dprime",
                "false"
              ],
              [
                "test_compute_interoceptive_accuracy",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_mad",
                "true"
              ],
              [
                "test_normal_range",
                "true"
              ],
              [
                "test_staircase",
                "true"
              ],
              [
                "test_find_outliers",
                "false"
              ],
              [
                "test_z_score",
                "true"
              ],
              [
                "test_compute_BMI",
                "true"
              ],
              [
                "test_compute_dprime",
                "false"
              ],
              [
                "test_compute_interoceptive_accuracy",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_mad",
                  "0"
                ],
                [
                  "test_normal_range",
                  "0"
                ],
                [
                  "test_staircase",
                  "0"
                ],
                [
                  "test_find_outliers",
                  "0"
                ],
                [
                  "test_z_score",
                  "0"
                ],
                [
                  "test_compute_BMI",
                  "0"
                ],
                [
                  "test_compute_dprime",
                  "0"
                ],
                [
                  "test_compute_interoceptive_accuracy",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_mad",
                  "0"
                ],
                [
                  "test_normal_range",
                  "0"
                ],
                [
                  "test_staircase",
                  "0"
                ],
                [
                  "test_find_outliers",
                  "0"
                ],
                [
                  "test_z_score",
                  "0"
                ],
                [
                  "test_compute_BMI",
                  "0"
                ],
                [
                  "test_compute_dprime",
                  "0"
                ],
                [
                  "test_compute_interoceptive_accuracy",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_mad",
                "false"
              ],
              [
                "test_normal_range",
                "false"
              ],
              [
                "test_staircase",
                "false"
              ],
              [
                "test_find_outliers",
                "false"
              ],
              [
                "test_z_score",
                "false"
              ],
              [
                "test_compute_BMI",
                "false"
              ],
              [
                "test_compute_dprime",
                "false"
              ],
              [
                "test_compute_interoceptive_accuracy",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_mad",
                "false"
              ],
              [
                "test_normal_range",
                "false"
              ],
              [
                "test_staircase",
                "false"
              ],
              [
                "test_find_outliers",
                "false"
              ],
              [
                "test_z_score",
                "false"
              ],
              [
                "test_compute_BMI",
                "false"
              ],
              [
                "test_compute_dprime",
                "false"
              ],
              [
                "test_compute_interoceptive_accuracy",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_mad",
                "1"
              ],
              [
                "test_normal_range",
                "1"
              ],
              [
                "test_staircase",
                "2"
              ],
              [
                "test_find_outliers",
                "1"
              ],
              [
                "test_z_score",
                "1"
              ],
              [
                "test_compute_BMI",
                "2"
              ],
              [
                "test_compute_dprime",
                "1"
              ],
              [
                "test_compute_interoceptive_accuracy",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_mad",
                []
              ],
              [
                "test_normal_range",
                [
                  "top",
                  "bottom"
                ]
              ],
              [
                "test_staircase",
                [
                  "data",
                  "response",
                  "treshold",
                  "staircase",
                  "signal"
                ]
              ],
              [
                "test_find_outliers",
                [
                  "outliers"
                ]
              ],
              [
                "test_z_score",
                [
                  "raw_scores",
                  "z"
                ]
              ],
              [
                "test_compute_BMI",
                []
              ],
              [
                "test_compute_dprime",
                [
                  "parameters"
                ]
              ],
              [
                "test_compute_interoceptive_accuracy",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_mad",
                []
              ],
              [
                "test_normal_range",
                []
              ],
              [
                "test_staircase",
                []
              ],
              [
                "test_find_outliers",
                []
              ],
              [
                "test_z_score",
                []
              ],
              [
                "test_compute_BMI",
                []
              ],
              [
                "test_compute_dprime",
                []
              ],
              [
                "test_compute_interoceptive_accuracy",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6414319086758781,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_compute_dprime",
                  "test_staircase",
                  0.5457051563317492
                ],
                [
                  "test_compute_BMI",
                  "test_staircase",
                  0.5673656706716979
                ],
                [
                  "test_compute_interoceptive_accuracy",
                  "test_staircase",
                  0.3837824416689359
                ],
                [
                  "test_compute_BMI",
                  "test_compute_interoceptive_accuracy",
                  0.7223911980193305
                ],
                [
                  "test_z_score",
                  "test_compute_interoceptive_accuracy",
                  0.6429378690899678
                ],
                [
                  "test_find_outliers",
                  "test_compute_BMI",
                  0.8413303537700233
                ],
                [
                  "test_mad",
                  "test_normal_range",
                  0.5305892259424583
                ],
                [
                  "test_mad",
                  "test_compute_BMI",
                  0.8985176040307945
                ],
                [
                  "test_normal_range",
                  "test_compute_interoceptive_accuracy",
                  0.4554408594323317
                ],
                [
                  "test_find_outliers",
                  "test_compute_interoceptive_accuracy",
                  0.6971475307473004
                ],
                [
                  "test_compute_dprime",
                  "test_compute_interoceptive_accuracy",
                  0.6378951412791961
                ],
                [
                  "test_mad",
                  "test_z_score",
                  0.8361192551142619
                ],
                [
                  "test_find_outliers",
                  "test_normal_range",
                  0.5009593868751592
                ],
                [
                  "test_compute_dprime",
                  "test_compute_BMI",
                  0.7698234895923903
                ],
                [
                  "test_mad",
                  "test_compute_dprime",
                  0.7647518748636887
                ],
                [
                  "test_z_score",
                  "test_find_outliers",
                  0.8140972322759573
                ],
                [
                  "test_z_score",
                  "test_normal_range",
                  0.5372153093502535
                ],
                [
                  "test_find_outliers",
                  "test_compute_dprime",
                  0.7133041545521858
                ],
                [
                  "test_mad",
                  "test_compute_interoceptive_accuracy",
                  0.7383811510434602
                ],
                [
                  "test_find_outliers",
                  "test_staircase",
                  0.5020440589582051
                ],
                [
                  "test_mad",
                  "test_staircase",
                  0.5197619699887855
                ],
                [
                  "test_normal_range",
                  "test_compute_dprime",
                  0.5063517013445747
                ],
                [
                  "test_z_score",
                  "test_compute_BMI",
                  0.7668869461110862
                ],
                [
                  "test_normal_range",
                  "test_compute_BMI",
                  0.4732962328281559
                ],
                [
                  "test_mad",
                  "test_find_outliers",
                  0.9311038688889672
                ],
                [
                  "test_z_score",
                  "test_compute_dprime",
                  0.6929348671835832
                ],
                [
                  "test_z_score",
                  "test_staircase",
                  0.5907612536404029
                ],
                [
                  "test_normal_range",
                  "test_staircase",
                  0.3791976393296807
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_mad",
                "false"
              ],
              [
                "test_normal_range",
                "false"
              ],
              [
                "test_staircase",
                "true"
              ],
              [
                "test_find_outliers",
                "false"
              ],
              [
                "test_z_score",
                "false"
              ],
              [
                "test_compute_BMI",
                "false"
              ],
              [
                "test_compute_dprime",
                "false"
              ],
              [
                "test_compute_interoceptive_accuracy",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 8
      }
    ]
  },
  {
    "name": "tests_\u0026_test_miscellaneous.py",
    "testCases": [
      {
        "name": "TestMiscellaneous",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_find_closest_in_list",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_find_following_duplicates",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_Time",
                  "[PyCallExpression: self.assertIsInstance]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_find_closest_in_list",
                  "[]"
                ],
                [
                  "test_find_following_duplicates",
                  "[]"
                ],
                [
                  "test_Time",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_find_closest_in_list",
                  "false"
                ],
                [
                  "test_find_following_duplicates",
                  "false"
                ],
                [
                  "test_Time",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_find_closest_in_list",
                  "false"
                ],
                [
                  "test_find_following_duplicates",
                  "false"
                ],
                [
                  "test_Time",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_find_closest_in_list",
                  "false"
                ],
                [
                  "test_find_following_duplicates",
                  "false"
                ],
                [
                  "test_Time",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_find_closest_in_list",
                  "false"
                ],
                [
                  "test_find_following_duplicates",
                  "false"
                ],
                [
                  "test_Time",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_closest_in_list",
                "false"
              ],
              [
                "test_find_following_duplicates",
                "false"
              ],
              [
                "test_Time",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_find_closest_in_list",
                "false"
              ],
              [
                "test_find_following_duplicates",
                "false"
              ],
              [
                "test_Time",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_find_closest_in_list",
                []
              ],
              [
                "test_find_following_duplicates",
                []
              ],
              [
                "test_Time",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_closest_in_list",
                "false"
              ],
              [
                "test_find_following_duplicates",
                "false"
              ],
              [
                "test_Time",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_closest_in_list",
                "false"
              ],
              [
                "test_find_following_duplicates",
                "false"
              ],
              [
                "test_Time",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_find_closest_in_list",
                  "0"
                ],
                [
                  "test_find_following_duplicates",
                  "0"
                ],
                [
                  "test_Time",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_find_closest_in_list",
                  "0"
                ],
                [
                  "test_find_following_duplicates",
                  "0"
                ],
                [
                  "test_Time",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_find_closest_in_list",
                "false"
              ],
              [
                "test_find_following_duplicates",
                "false"
              ],
              [
                "test_Time",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_closest_in_list",
                "false"
              ],
              [
                "test_find_following_duplicates",
                "false"
              ],
              [
                "test_Time",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_closest_in_list",
                "1"
              ],
              [
                "test_find_following_duplicates",
                "1"
              ],
              [
                "test_Time",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_find_closest_in_list",
                [
                  "closest2",
                  "closest1"
                ]
              ],
              [
                "test_find_following_duplicates",
                [
                  "array",
                  "first"
                ]
              ],
              [
                "test_Time",
                [
                  "time_passed",
                  "clock"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_find_closest_in_list",
                []
              ],
              [
                "test_find_following_duplicates",
                []
              ],
              [
                "test_Time",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.23720139815007915,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_find_following_duplicates",
                  "test_find_closest_in_list",
                  0.12845874888467698
                ],
                [
                  "test_find_following_duplicates",
                  "test_Time",
                  0.3590924232298039
                ],
                [
                  "test_Time",
                  "test_find_closest_in_list",
                  0.22405302233575655
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_find_closest_in_list",
                "false"
              ],
              [
                "test_find_following_duplicates",
                "false"
              ],
              [
                "test_Time",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  }
]