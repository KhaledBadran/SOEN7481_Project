[
  {
    "name": "tests_\u0026_core_\u0026_test_core_actions.py",
    "testCases": [
      {
        "name": "TestActions",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_find_duplicates",
                  "[PyCallExpression: self.assertDictEqual, PyCallExpression: self.assertDictEqual, PyCallExpression: self.assertRaises, PyCallExpression: self.assertIn, PyCallExpression: self.assertIn, PyCallExpression: self.assertNotIn]"
                ],
                [
                  "test_verify",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertFalse, PyCallExpression: self.assertTrue, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_calculate",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertRaises]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_find_duplicates",
                  "[]"
                ],
                [
                  "test_verify",
                  "[]"
                ],
                [
                  "test_calculate",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_find_duplicates",
                  "false"
                ],
                [
                  "test_verify",
                  "false"
                ],
                [
                  "test_calculate",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_find_duplicates",
                  "false"
                ],
                [
                  "test_verify",
                  "false"
                ],
                [
                  "test_calculate",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_find_duplicates",
                  "false"
                ],
                [
                  "test_verify",
                  "false"
                ],
                [
                  "test_calculate",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_find_duplicates",
                  "false"
                ],
                [
                  "test_verify",
                  "false"
                ],
                [
                  "test_calculate",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_duplicates",
                "false"
              ],
              [
                "test_verify",
                "false"
              ],
              [
                "test_calculate",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_find_duplicates",
                "false"
              ],
              [
                "test_verify",
                "false"
              ],
              [
                "test_calculate",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_find_duplicates",
                []
              ],
              [
                "test_verify",
                [
                  "self.symfile",
                  "self.symdirectory",
                  "self.symlink2",
                  "self.symlink1",
                  "self.directory"
                ]
              ],
              [
                "test_calculate",
                [
                  "self.symfile",
                  "self.symdirectory",
                  "self.symlink2",
                  "self.symlink1"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_duplicates",
                "false"
              ],
              [
                "test_verify",
                "false"
              ],
              [
                "test_calculate",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_duplicates",
                "false"
              ],
              [
                "test_verify",
                "false"
              ],
              [
                "test_calculate",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_find_duplicates",
                  "0"
                ],
                [
                  "test_verify",
                  "0"
                ],
                [
                  "test_calculate",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_find_duplicates",
                  "0"
                ],
                [
                  "test_verify",
                  "0"
                ],
                [
                  "test_calculate",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_find_duplicates",
                "false"
              ],
              [
                "test_verify",
                "false"
              ],
              [
                "test_calculate",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_duplicates",
                "false"
              ],
              [
                "test_verify",
                "false"
              ],
              [
                "test_calculate",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_find_duplicates",
                "6"
              ],
              [
                "test_verify",
                "4"
              ],
              [
                "test_calculate",
                "4"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_find_duplicates",
                [
                  "ret_val"
                ]
              ],
              [
                "test_verify",
                [
                  "result",
                  "h",
                  "l"
                ]
              ],
              [
                "test_calculate",
                [
                  "result",
                  "l"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_find_duplicates",
                [
                  "self.file3",
                  "self.file2",
                  "self.symfile",
                  "self.file1",
                  "self.symdirectory",
                  "self.symlink2",
                  "self.symlink1",
                  "self.directory"
                ]
              ],
              [
                "test_verify",
                [
                  "self.file3",
                  "self.file2",
                  "self.file1"
                ]
              ],
              [
                "test_calculate",
                [
                  "self.file3",
                  "self.file2",
                  "self.file1",
                  "self.directory"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.44017151348053835,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_calculate",
                  "test_verify",
                  0.686692129153766
                ],
                [
                  "test_calculate",
                  "test_find_duplicates",
                  0.2729697550475419
                ],
                [
                  "test_verify",
                  "test_find_duplicates",
                  0.36085265624030705
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_find_duplicates",
                "false"
              ],
              [
                "test_verify",
                "false"
              ],
              [
                "test_calculate",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_core_\u0026_test_core_objects.py",
    "testCases": [
      {
        "name": "TestFileSystemObject",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_hash",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertNotEqual]"
                ],
                [
                  "test_str",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_repr",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_path",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_exists",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertTrue, PyCallExpression: self.assertFalse]"
                ],
                [
                  "test_name",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_eq",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertNotEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_hash",
                  "[]"
                ],
                [
                  "test_str",
                  "[]"
                ],
                [
                  "test_repr",
                  "[]"
                ],
                [
                  "test_path",
                  "[]"
                ],
                [
                  "test_exists",
                  "[]"
                ],
                [
                  "test_name",
                  "[]"
                ],
                [
                  "test_eq",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_hash",
                  "false"
                ],
                [
                  "test_str",
                  "false"
                ],
                [
                  "test_repr",
                  "false"
                ],
                [
                  "test_path",
                  "false"
                ],
                [
                  "test_exists",
                  "false"
                ],
                [
                  "test_name",
                  "false"
                ],
                [
                  "test_eq",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_hash",
                  "false"
                ],
                [
                  "test_str",
                  "false"
                ],
                [
                  "test_repr",
                  "false"
                ],
                [
                  "test_path",
                  "false"
                ],
                [
                  "test_exists",
                  "false"
                ],
                [
                  "test_name",
                  "false"
                ],
                [
                  "test_eq",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_hash",
                  "false"
                ],
                [
                  "test_str",
                  "false"
                ],
                [
                  "test_repr",
                  "false"
                ],
                [
                  "test_path",
                  "false"
                ],
                [
                  "test_exists",
                  "false"
                ],
                [
                  "test_name",
                  "false"
                ],
                [
                  "test_eq",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_hash",
                  "false"
                ],
                [
                  "test_str",
                  "false"
                ],
                [
                  "test_repr",
                  "false"
                ],
                [
                  "test_path",
                  "false"
                ],
                [
                  "test_exists",
                  "false"
                ],
                [
                  "test_name",
                  "false"
                ],
                [
                  "test_eq",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_hash",
                "false"
              ],
              [
                "test_str",
                "false"
              ],
              [
                "test_repr",
                "false"
              ],
              [
                "test_path",
                "false"
              ],
              [
                "test_exists",
                "false"
              ],
              [
                "test_name",
                "false"
              ],
              [
                "test_eq",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_hash",
                "false"
              ],
              [
                "test_str",
                "false"
              ],
              [
                "test_repr",
                "false"
              ],
              [
                "test_path",
                "false"
              ],
              [
                "test_exists",
                "false"
              ],
              [
                "test_name",
                "false"
              ],
              [
                "test_eq",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_hash",
                [
                  "self.non_existent_fsobject"
                ]
              ],
              [
                "test_str",
                [
                  "self.fsobject2",
                  "self.non_existent_fsobject"
                ]
              ],
              [
                "test_repr",
                [
                  "self.fsobject2",
                  "self.non_existent_fsobject"
                ]
              ],
              [
                "test_path",
                [
                  "self.non_existent_fsobject"
                ]
              ],
              [
                "test_exists",
                []
              ],
              [
                "test_name",
                [
                  "self.non_existent_fsobject"
                ]
              ],
              [
                "test_eq",
                [
                  "self.non_existent_fsobject"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_hash",
                "false"
              ],
              [
                "test_str",
                "false"
              ],
              [
                "test_repr",
                "false"
              ],
              [
                "test_path",
                "false"
              ],
              [
                "test_exists",
                "false"
              ],
              [
                "test_name",
                "false"
              ],
              [
                "test_eq",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_hash",
                "false"
              ],
              [
                "test_str",
                "false"
              ],
              [
                "test_repr",
                "false"
              ],
              [
                "test_path",
                "false"
              ],
              [
                "test_exists",
                "false"
              ],
              [
                "test_name",
                "false"
              ],
              [
                "test_eq",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_hash",
                  "0"
                ],
                [
                  "test_str",
                  "0"
                ],
                [
                  "test_repr",
                  "0"
                ],
                [
                  "test_path",
                  "0"
                ],
                [
                  "test_exists",
                  "0"
                ],
                [
                  "test_name",
                  "0"
                ],
                [
                  "test_eq",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_hash",
                  "0"
                ],
                [
                  "test_str",
                  "0"
                ],
                [
                  "test_repr",
                  "0"
                ],
                [
                  "test_path",
                  "0"
                ],
                [
                  "test_exists",
                  "0"
                ],
                [
                  "test_name",
                  "0"
                ],
                [
                  "test_eq",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_hash",
                "false"
              ],
              [
                "test_str",
                "false"
              ],
              [
                "test_repr",
                "false"
              ],
              [
                "test_path",
                "false"
              ],
              [
                "test_exists",
                "false"
              ],
              [
                "test_name",
                "false"
              ],
              [
                "test_eq",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_hash",
                "false"
              ],
              [
                "test_str",
                "false"
              ],
              [
                "test_repr",
                "false"
              ],
              [
                "test_path",
                "false"
              ],
              [
                "test_exists",
                "false"
              ],
              [
                "test_name",
                "false"
              ],
              [
                "test_eq",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_hash",
                "2"
              ],
              [
                "test_str",
                "1"
              ],
              [
                "test_repr",
                "1"
              ],
              [
                "test_path",
                "2"
              ],
              [
                "test_exists",
                "3"
              ],
              [
                "test_name",
                "2"
              ],
              [
                "test_eq",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_hash",
                []
              ],
              [
                "test_str",
                []
              ],
              [
                "test_repr",
                []
              ],
              [
                "test_path",
                []
              ],
              [
                "test_exists",
                []
              ],
              [
                "test_name",
                []
              ],
              [
                "test_eq",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_hash",
                [
                  "self.fsobject2",
                  "self.fsobject1"
                ]
              ],
              [
                "test_str",
                [
                  "self.fsobject1"
                ]
              ],
              [
                "test_repr",
                [
                  "self.fsobject1"
                ]
              ],
              [
                "test_path",
                [
                  "self.fsobject2",
                  "self.fsobject1"
                ]
              ],
              [
                "test_exists",
                [
                  "self.fsobject2",
                  "self.non_existent_fsobject",
                  "self.fsobject1"
                ]
              ],
              [
                "test_name",
                [
                  "self.fsobject2",
                  "self.fsobject1"
                ]
              ],
              [
                "test_eq",
                [
                  "self.fsobject2",
                  "self.fsobject1"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.45477425718061665,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_name",
                  "test_eq",
                  0.5685735326841777
                ],
                [
                  "test_path",
                  "test_hash",
                  0.43386091563731227
                ],
                [
                  "test_path",
                  "test_str",
                  0.3999999999999999
                ],
                [
                  "test_path",
                  "test_exists",
                  0.3296902366978935
                ],
                [
                  "test_eq",
                  "test_hash",
                  0.5413902920037097
                ],
                [
                  "test_str",
                  "test_eq",
                  0.4110541536602924
                ],
                [
                  "test_repr",
                  "test_str",
                  0.8999999999999998
                ],
                [
                  "test_name",
                  "test_exists",
                  0.38306543884143696
                ],
                [
                  "test_exists",
                  "test_str",
                  0.3296902366978935
                ],
                [
                  "test_exists",
                  "test_eq",
                  0.3484813916980649
                ],
                [
                  "test_repr",
                  "test_eq",
                  0.4110541536602924
                ],
                [
                  "test_path",
                  "test_eq",
                  0.4991371865874979
                ],
                [
                  "test_name",
                  "test_hash",
                  0.3850770231077027
                ],
                [
                  "test_name",
                  "test_str",
                  0.5809475019311126
                ],
                [
                  "test_name",
                  "test_path",
                  0.4195731958391369
                ],
                [
                  "test_exists",
                  "test_repr",
                  0.3296902366978935
                ],
                [
                  "test_name",
                  "test_repr",
                  0.5809475019311126
                ],
                [
                  "test_path",
                  "test_repr",
                  0.3999999999999999
                ],
                [
                  "test_repr",
                  "test_hash",
                  0.4880935300919763
                ],
                [
                  "test_exists",
                  "test_hash",
                  0.3218393429334682
                ],
                [
                  "test_str",
                  "test_hash",
                  0.4880935300919763
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_hash",
                "false"
              ],
              [
                "test_str",
                "false"
              ],
              [
                "test_repr",
                "false"
              ],
              [
                "test_path",
                "false"
              ],
              [
                "test_exists",
                "false"
              ],
              [
                "test_name",
                "false"
              ],
              [
                "test_eq",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      },
      {
        "name": "TestFileObject",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_md5",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_size",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_sha256",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_sha1",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_sha512",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertRaises]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_md5",
                  "[]"
                ],
                [
                  "test_size",
                  "[]"
                ],
                [
                  "test_sha256",
                  "[]"
                ],
                [
                  "test_sha1",
                  "[]"
                ],
                [
                  "test_sha512",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_md5",
                  "false"
                ],
                [
                  "test_size",
                  "false"
                ],
                [
                  "test_sha256",
                  "false"
                ],
                [
                  "test_sha1",
                  "false"
                ],
                [
                  "test_sha512",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_md5",
                  "false"
                ],
                [
                  "test_size",
                  "false"
                ],
                [
                  "test_sha256",
                  "false"
                ],
                [
                  "test_sha1",
                  "false"
                ],
                [
                  "test_sha512",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_md5",
                  "false"
                ],
                [
                  "test_size",
                  "false"
                ],
                [
                  "test_sha256",
                  "false"
                ],
                [
                  "test_sha1",
                  "false"
                ],
                [
                  "test_sha512",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_md5",
                  "false"
                ],
                [
                  "test_size",
                  "false"
                ],
                [
                  "test_sha256",
                  "false"
                ],
                [
                  "test_sha1",
                  "false"
                ],
                [
                  "test_sha512",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_md5",
                "false"
              ],
              [
                "test_size",
                "false"
              ],
              [
                "test_sha256",
                "false"
              ],
              [
                "test_sha1",
                "false"
              ],
              [
                "test_sha512",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_md5",
                "false"
              ],
              [
                "test_size",
                "false"
              ],
              [
                "test_sha256",
                "false"
              ],
              [
                "test_sha1",
                "false"
              ],
              [
                "test_sha512",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_md5",
                []
              ],
              [
                "test_size",
                []
              ],
              [
                "test_sha256",
                []
              ],
              [
                "test_sha1",
                []
              ],
              [
                "test_sha512",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_md5",
                "false"
              ],
              [
                "test_size",
                "false"
              ],
              [
                "test_sha256",
                "false"
              ],
              [
                "test_sha1",
                "false"
              ],
              [
                "test_sha512",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_md5",
                "false"
              ],
              [
                "test_size",
                "true"
              ],
              [
                "test_sha256",
                "false"
              ],
              [
                "test_sha1",
                "false"
              ],
              [
                "test_sha512",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_md5",
                  "0"
                ],
                [
                  "test_size",
                  "0"
                ],
                [
                  "test_sha256",
                  "0"
                ],
                [
                  "test_sha1",
                  "0"
                ],
                [
                  "test_sha512",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_md5",
                  "0"
                ],
                [
                  "test_size",
                  "0"
                ],
                [
                  "test_sha256",
                  "0"
                ],
                [
                  "test_sha1",
                  "0"
                ],
                [
                  "test_sha512",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_md5",
                "false"
              ],
              [
                "test_size",
                "false"
              ],
              [
                "test_sha256",
                "false"
              ],
              [
                "test_sha1",
                "false"
              ],
              [
                "test_sha512",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_md5",
                "false"
              ],
              [
                "test_size",
                "false"
              ],
              [
                "test_sha256",
                "false"
              ],
              [
                "test_sha1",
                "false"
              ],
              [
                "test_sha512",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_md5",
                "2"
              ],
              [
                "test_size",
                "2"
              ],
              [
                "test_sha256",
                "2"
              ],
              [
                "test_sha1",
                "2"
              ],
              [
                "test_sha512",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_md5",
                []
              ],
              [
                "test_size",
                []
              ],
              [
                "test_sha256",
                []
              ],
              [
                "test_sha1",
                []
              ],
              [
                "test_sha512",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_md5",
                [
                  "self.fobject",
                  "self.non_existent_fobject"
                ]
              ],
              [
                "test_size",
                [
                  "self.fobject",
                  "self.non_existent_fobject"
                ]
              ],
              [
                "test_sha256",
                [
                  "self.fobject",
                  "self.non_existent_fobject"
                ]
              ],
              [
                "test_sha1",
                [
                  "self.fobject",
                  "self.non_existent_fobject"
                ]
              ],
              [
                "test_sha512",
                [
                  "self.fobject",
                  "self.non_existent_fobject"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5164918763988945,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_size",
                  "test_sha256",
                  0.4370733787381238
                ],
                [
                  "test_sha1",
                  "test_sha256",
                  0.598056818096707
                ],
                [
                  "test_md5",
                  "test_sha1",
                  0.6172133998483675
                ],
                [
                  "test_size",
                  "test_md5",
                  0.5863954716083737
                ],
                [
                  "test_size",
                  "test_sha1",
                  0.5428967140306368
                ],
                [
                  "test_sha1",
                  "test_sha512",
                  0.3066428716703988
                ],
                [
                  "test_size",
                  "test_sha512",
                  0.2774590123512963
                ],
                [
                  "test_sha256",
                  "test_sha512",
                  0.5877880132154986
                ],
                [
                  "test_md5",
                  "test_sha256",
                  0.5962847939999439
                ],
                [
                  "test_md5",
                  "test_sha512",
                  0.615108290429599
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_md5",
                "false"
              ],
              [
                "test_size",
                "false"
              ],
              [
                "test_sha256",
                "false"
              ],
              [
                "test_sha1",
                "false"
              ],
              [
                "test_sha512",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      },
      {
        "name": "TestDirectoryObject",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_size",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_directory_objects",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_file_objects",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_empty",
                  "[PyCallExpression: self.assertFalse, PyCallExpression: self.assertRaises]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_size",
                  "[]"
                ],
                [
                  "test_directory_objects",
                  "[]"
                ],
                [
                  "test_file_objects",
                  "[]"
                ],
                [
                  "test_empty",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_size",
                  "false"
                ],
                [
                  "test_directory_objects",
                  "false"
                ],
                [
                  "test_file_objects",
                  "false"
                ],
                [
                  "test_empty",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_size",
                  "false"
                ],
                [
                  "test_directory_objects",
                  "false"
                ],
                [
                  "test_file_objects",
                  "true"
                ],
                [
                  "test_empty",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_size",
                  "false"
                ],
                [
                  "test_directory_objects",
                  "false"
                ],
                [
                  "test_file_objects",
                  "false"
                ],
                [
                  "test_empty",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_size",
                  "false"
                ],
                [
                  "test_directory_objects",
                  "false"
                ],
                [
                  "test_file_objects",
                  "false"
                ],
                [
                  "test_empty",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_size",
                "false"
              ],
              [
                "test_directory_objects",
                "false"
              ],
              [
                "test_file_objects",
                "false"
              ],
              [
                "test_empty",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_size",
                "false"
              ],
              [
                "test_directory_objects",
                "false"
              ],
              [
                "test_file_objects",
                "false"
              ],
              [
                "test_empty",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_size",
                [
                  "self.hidden_test_dir"
                ]
              ],
              [
                "test_directory_objects",
                [
                  "self.non_existent_dobject",
                  "self.dobject"
                ]
              ],
              [
                "test_file_objects",
                [
                  "self.non_existent_dobject",
                  "self.dobject"
                ]
              ],
              [
                "test_empty",
                [
                  "self.hidden_test_dir"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_size",
                "false"
              ],
              [
                "test_directory_objects",
                "false"
              ],
              [
                "test_file_objects",
                "false"
              ],
              [
                "test_empty",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_size",
                "true"
              ],
              [
                "test_directory_objects",
                "true"
              ],
              [
                "test_file_objects",
                "true"
              ],
              [
                "test_empty",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_size",
                  "0"
                ],
                [
                  "test_directory_objects",
                  "0"
                ],
                [
                  "test_file_objects",
                  "0"
                ],
                [
                  "test_empty",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_size",
                  "0"
                ],
                [
                  "test_directory_objects",
                  "0"
                ],
                [
                  "test_file_objects",
                  "0"
                ],
                [
                  "test_empty",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_size",
                "false"
              ],
              [
                "test_directory_objects",
                "false"
              ],
              [
                "test_file_objects",
                "false"
              ],
              [
                "test_empty",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_size",
                "false"
              ],
              [
                "test_directory_objects",
                "false"
              ],
              [
                "test_file_objects",
                "false"
              ],
              [
                "test_empty",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_size",
                "2"
              ],
              [
                "test_directory_objects",
                "2"
              ],
              [
                "test_file_objects",
                "2"
              ],
              [
                "test_empty",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_size",
                []
              ],
              [
                "test_directory_objects",
                []
              ],
              [
                "test_file_objects",
                [
                  "l"
                ]
              ],
              [
                "test_empty",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_size",
                [
                  "self.non_existent_dobject",
                  "self.dobject"
                ]
              ],
              [
                "test_directory_objects",
                [
                  "self.hidden_test_dir"
                ]
              ],
              [
                "test_file_objects",
                [
                  "self.hidden_test_dir"
                ]
              ],
              [
                "test_empty",
                [
                  "self.non_existent_dobject",
                  "self.dobject"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.41882070475898003,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_file_objects",
                  "test_directory_objects",
                  0.520425719508139
                ],
                [
                  "test_size",
                  "test_empty",
                  0.38949041885226
                ],
                [
                  "test_empty",
                  "test_directory_objects",
                  0.31069425495224695
                ],
                [
                  "test_size",
                  "test_file_objects",
                  0.47932350690035525
                ],
                [
                  "test_empty",
                  "test_file_objects",
                  0.225215641644363
                ],
                [
                  "test_size",
                  "test_directory_objects",
                  0.587774686696516
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_size",
                "false"
              ],
              [
                "test_directory_objects",
                "false"
              ],
              [
                "test_file_objects",
                "false"
              ],
              [
                "test_empty",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  }
]