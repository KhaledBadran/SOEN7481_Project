[
  {
    "name": "tests_\u0026_test_manager.py",
    "testCases": [
      {
        "name": "ManagerTestCase",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_add_file",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_add_dir_with_ignore",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_add_dir_with_only",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_add_dir",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_add_file",
                  "[]"
                ],
                [
                  "test_add_dir_with_ignore",
                  "[]"
                ],
                [
                  "test_add_dir_with_only",
                  "[]"
                ],
                [
                  "test_add_dir",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_add_file",
                  "false"
                ],
                [
                  "test_add_dir_with_ignore",
                  "false"
                ],
                [
                  "test_add_dir_with_only",
                  "false"
                ],
                [
                  "test_add_dir",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_add_file",
                  "false"
                ],
                [
                  "test_add_dir_with_ignore",
                  "true"
                ],
                [
                  "test_add_dir_with_only",
                  "true"
                ],
                [
                  "test_add_dir",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_add_file",
                  "false"
                ],
                [
                  "test_add_dir_with_ignore",
                  "false"
                ],
                [
                  "test_add_dir_with_only",
                  "false"
                ],
                [
                  "test_add_dir",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_add_file",
                  "false"
                ],
                [
                  "test_add_dir_with_ignore",
                  "false"
                ],
                [
                  "test_add_dir_with_only",
                  "false"
                ],
                [
                  "test_add_dir",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_add_file",
                "false"
              ],
              [
                "test_add_dir_with_ignore",
                "false"
              ],
              [
                "test_add_dir_with_only",
                "false"
              ],
              [
                "test_add_dir",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_add_file",
                "false"
              ],
              [
                "test_add_dir_with_ignore",
                "false"
              ],
              [
                "test_add_dir_with_only",
                "false"
              ],
              [
                "test_add_dir",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_add_file",
                []
              ],
              [
                "test_add_dir_with_ignore",
                []
              ],
              [
                "test_add_dir_with_only",
                []
              ],
              [
                "test_add_dir",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_add_file",
                "false"
              ],
              [
                "test_add_dir_with_ignore",
                "false"
              ],
              [
                "test_add_dir_with_only",
                "false"
              ],
              [
                "test_add_dir",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_add_file",
                "false"
              ],
              [
                "test_add_dir_with_ignore",
                "false"
              ],
              [
                "test_add_dir_with_only",
                "false"
              ],
              [
                "test_add_dir",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_add_file",
                  "0"
                ],
                [
                  "test_add_dir_with_ignore",
                  "0"
                ],
                [
                  "test_add_dir_with_only",
                  "0"
                ],
                [
                  "test_add_dir",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_add_file",
                  "0"
                ],
                [
                  "test_add_dir_with_ignore",
                  "0"
                ],
                [
                  "test_add_dir_with_only",
                  "0"
                ],
                [
                  "test_add_dir",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_add_file",
                "false"
              ],
              [
                "test_add_dir_with_ignore",
                "false"
              ],
              [
                "test_add_dir_with_only",
                "false"
              ],
              [
                "test_add_dir",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_add_file",
                "false"
              ],
              [
                "test_add_dir_with_ignore",
                "false"
              ],
              [
                "test_add_dir_with_only",
                "false"
              ],
              [
                "test_add_dir",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_add_file",
                "2"
              ],
              [
                "test_add_dir_with_ignore",
                "2"
              ],
              [
                "test_add_dir_with_only",
                "2"
              ],
              [
                "test_add_dir",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_add_file",
                []
              ],
              [
                "test_add_dir_with_ignore",
                [
                  "testext",
                  "files",
                  "add_dir_result",
                  "testcase"
                ]
              ],
              [
                "test_add_dir_with_only",
                [
                  "testext",
                  "files",
                  "add_dir_result",
                  "testcase"
                ]
              ],
              [
                "test_add_dir",
                [
                  "files",
                  "add_dir_result",
                  "testcase"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_add_file",
                [
                  "self.manager"
                ]
              ],
              [
                "test_add_dir_with_ignore",
                [
                  "self.manager"
                ]
              ],
              [
                "test_add_dir_with_only",
                [
                  "self.manager"
                ]
              ],
              [
                "test_add_dir",
                [
                  "self.manager"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.678964632582506,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_add_file",
                  "test_add_dir",
                  0.5328701692569688
                ],
                [
                  "test_add_file",
                  "test_add_dir_with_ignore",
                  0.4455663943395034
                ],
                [
                  "test_add_dir",
                  "test_add_dir_with_only",
                  0.8496154919522859
                ],
                [
                  "test_add_dir",
                  "test_add_dir_with_ignore",
                  0.8464861424907173
                ],
                [
                  "test_add_dir_with_ignore",
                  "test_add_dir_with_only",
                  0.9520360019556023
                ],
                [
                  "test_add_file",
                  "test_add_dir_with_only",
                  0.4472135954999579
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_add_file",
                "false"
              ],
              [
                "test_add_dir_with_ignore",
                "false"
              ],
              [
                "test_add_dir_with_only",
                "false"
              ],
              [
                "test_add_dir",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "tests_\u0026_test_objects.py",
    "testCases": [
      {
        "name": "FileItemTestCase",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_obj",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertNotEqual, PyCallExpression: self.assertFalse, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_obj",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_obj",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_obj",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_obj",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_obj",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_obj",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_obj",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_obj",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_obj",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_obj",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_obj",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_obj",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_obj",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_obj",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_obj",
                "5"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_obj",
                [
                  "a",
                  "b",
                  "c",
                  "testcase"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_obj",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_obj",
                "true"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_observer.py",
    "testCases": [
      {
        "name": "ManagerTestCase",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_observer",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_observer",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_observer",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_observer",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_observer",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_observer",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_observer",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_observer",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_observer",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_observer",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_observer",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_observer",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_observer",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_observer",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_observer",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_observer",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_observer",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_observer",
                [
                  "self.observer",
                  "self.manager"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_observer",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  }
]