[
  {
    "name": "tests_\u0026_test_core.py",
    "testCases": [
      {
        "name": "TestCore",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_a_add_b",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_signum",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_echo",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_re",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_a_add_b",
                  "[]"
                ],
                [
                  "test_signum",
                  "[]"
                ],
                [
                  "test_echo",
                  "[]"
                ],
                [
                  "test_re",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_a_add_b",
                  "false"
                ],
                [
                  "test_signum",
                  "false"
                ],
                [
                  "test_echo",
                  "false"
                ],
                [
                  "test_re",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_a_add_b",
                  "false"
                ],
                [
                  "test_signum",
                  "false"
                ],
                [
                  "test_echo",
                  "false"
                ],
                [
                  "test_re",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_a_add_b",
                  "false"
                ],
                [
                  "test_signum",
                  "false"
                ],
                [
                  "test_echo",
                  "false"
                ],
                [
                  "test_re",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_a_add_b",
                  "false"
                ],
                [
                  "test_signum",
                  "false"
                ],
                [
                  "test_echo",
                  "false"
                ],
                [
                  "test_re",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_a_add_b",
                "false"
              ],
              [
                "test_signum",
                "false"
              ],
              [
                "test_echo",
                "false"
              ],
              [
                "test_re",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_a_add_b",
                "false"
              ],
              [
                "test_signum",
                "false"
              ],
              [
                "test_echo",
                "false"
              ],
              [
                "test_re",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_a_add_b",
                []
              ],
              [
                "test_signum",
                []
              ],
              [
                "test_echo",
                []
              ],
              [
                "test_re",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_a_add_b",
                "false"
              ],
              [
                "test_signum",
                "false"
              ],
              [
                "test_echo",
                "false"
              ],
              [
                "test_re",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_a_add_b",
                "false"
              ],
              [
                "test_signum",
                "true"
              ],
              [
                "test_echo",
                "true"
              ],
              [
                "test_re",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_a_add_b",
                  "0"
                ],
                [
                  "test_signum",
                  "0"
                ],
                [
                  "test_echo",
                  "0"
                ],
                [
                  "test_re",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_a_add_b",
                  "0"
                ],
                [
                  "test_signum",
                  "0"
                ],
                [
                  "test_echo",
                  "0"
                ],
                [
                  "test_re",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_a_add_b",
                "false"
              ],
              [
                "test_signum",
                "false"
              ],
              [
                "test_echo",
                "false"
              ],
              [
                "test_re",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_a_add_b",
                "false"
              ],
              [
                "test_signum",
                "false"
              ],
              [
                "test_echo",
                "false"
              ],
              [
                "test_re",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_a_add_b",
                "1"
              ],
              [
                "test_signum",
                "1"
              ],
              [
                "test_echo",
                "3"
              ],
              [
                "test_re",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_a_add_b",
                [
                  "jl",
                  "code",
                  "in_data"
                ]
              ],
              [
                "test_signum",
                [
                  "jl",
                  "code",
                  "stats"
                ]
              ],
              [
                "test_echo",
                [
                  "jl",
                  "stats"
                ]
              ],
              [
                "test_re",
                [
                  "jl",
                  "code",
                  "stats"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_a_add_b",
                []
              ],
              [
                "test_signum",
                []
              ],
              [
                "test_echo",
                []
              ],
              [
                "test_re",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6551142327252367,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_echo",
                  "test_signum",
                  0.5324977701702561
                ],
                [
                  "test_signum",
                  "test_re",
                  0.9084083005031557
                ],
                [
                  "test_a_add_b",
                  "test_re",
                  0.669331866868109
                ],
                [
                  "test_echo",
                  "test_re",
                  0.5737774175346211
                ],
                [
                  "test_echo",
                  "test_a_add_b",
                  0.5991712703227052
                ],
                [
                  "test_a_add_b",
                  "test_signum",
                  0.6474987709525735
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_a_add_b",
                "false"
              ],
              [
                "test_signum",
                "false"
              ],
              [
                "test_echo",
                "false"
              ],
              [
                "test_re",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "tests_\u0026_test_syscall.py",
    "testCases": [
      {
        "name": "TestSyscall",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_exec",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_hello",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_new",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_openat",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_malloc",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_requests",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_fork",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_system",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_exec",
                  "[]"
                ],
                [
                  "test_hello",
                  "[]"
                ],
                [
                  "test_new",
                  "[]"
                ],
                [
                  "test_openat",
                  "[]"
                ],
                [
                  "test_malloc",
                  "[]"
                ],
                [
                  "test_requests",
                  "[]"
                ],
                [
                  "test_fork",
                  "[]"
                ],
                [
                  "test_system",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_exec",
                  "false"
                ],
                [
                  "test_hello",
                  "false"
                ],
                [
                  "test_new",
                  "false"
                ],
                [
                  "test_openat",
                  "false"
                ],
                [
                  "test_malloc",
                  "false"
                ],
                [
                  "test_requests",
                  "false"
                ],
                [
                  "test_fork",
                  "false"
                ],
                [
                  "test_system",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_exec",
                  "false"
                ],
                [
                  "test_hello",
                  "false"
                ],
                [
                  "test_new",
                  "false"
                ],
                [
                  "test_openat",
                  "false"
                ],
                [
                  "test_malloc",
                  "false"
                ],
                [
                  "test_requests",
                  "false"
                ],
                [
                  "test_fork",
                  "false"
                ],
                [
                  "test_system",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_exec",
                  "false"
                ],
                [
                  "test_hello",
                  "false"
                ],
                [
                  "test_new",
                  "false"
                ],
                [
                  "test_openat",
                  "false"
                ],
                [
                  "test_malloc",
                  "false"
                ],
                [
                  "test_requests",
                  "false"
                ],
                [
                  "test_fork",
                  "false"
                ],
                [
                  "test_system",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_exec",
                  "false"
                ],
                [
                  "test_hello",
                  "false"
                ],
                [
                  "test_new",
                  "false"
                ],
                [
                  "test_openat",
                  "false"
                ],
                [
                  "test_malloc",
                  "false"
                ],
                [
                  "test_requests",
                  "false"
                ],
                [
                  "test_fork",
                  "false"
                ],
                [
                  "test_system",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_exec",
                "false"
              ],
              [
                "test_hello",
                "false"
              ],
              [
                "test_new",
                "false"
              ],
              [
                "test_openat",
                "false"
              ],
              [
                "test_malloc",
                "false"
              ],
              [
                "test_requests",
                "false"
              ],
              [
                "test_fork",
                "false"
              ],
              [
                "test_system",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_exec",
                "false"
              ],
              [
                "test_hello",
                "false"
              ],
              [
                "test_new",
                "false"
              ],
              [
                "test_openat",
                "false"
              ],
              [
                "test_malloc",
                "false"
              ],
              [
                "test_requests",
                "false"
              ],
              [
                "test_fork",
                "false"
              ],
              [
                "test_system",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_exec",
                []
              ],
              [
                "test_hello",
                []
              ],
              [
                "test_new",
                []
              ],
              [
                "test_openat",
                []
              ],
              [
                "test_malloc",
                []
              ],
              [
                "test_requests",
                []
              ],
              [
                "test_fork",
                []
              ],
              [
                "test_system",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_exec",
                "false"
              ],
              [
                "test_hello",
                "false"
              ],
              [
                "test_new",
                "false"
              ],
              [
                "test_openat",
                "false"
              ],
              [
                "test_malloc",
                "false"
              ],
              [
                "test_requests",
                "false"
              ],
              [
                "test_fork",
                "false"
              ],
              [
                "test_system",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_exec",
                "true"
              ],
              [
                "test_hello",
                "true"
              ],
              [
                "test_new",
                "true"
              ],
              [
                "test_openat",
                "true"
              ],
              [
                "test_malloc",
                "true"
              ],
              [
                "test_requests",
                "true"
              ],
              [
                "test_fork",
                "true"
              ],
              [
                "test_system",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_exec",
                  "0"
                ],
                [
                  "test_hello",
                  "0"
                ],
                [
                  "test_new",
                  "0"
                ],
                [
                  "test_openat",
                  "0"
                ],
                [
                  "test_malloc",
                  "0"
                ],
                [
                  "test_requests",
                  "0"
                ],
                [
                  "test_fork",
                  "0"
                ],
                [
                  "test_system",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_exec",
                  "0"
                ],
                [
                  "test_hello",
                  "0"
                ],
                [
                  "test_new",
                  "0"
                ],
                [
                  "test_openat",
                  "0"
                ],
                [
                  "test_malloc",
                  "0"
                ],
                [
                  "test_requests",
                  "0"
                ],
                [
                  "test_fork",
                  "0"
                ],
                [
                  "test_system",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_exec",
                "false"
              ],
              [
                "test_hello",
                "false"
              ],
              [
                "test_new",
                "false"
              ],
              [
                "test_openat",
                "false"
              ],
              [
                "test_malloc",
                "false"
              ],
              [
                "test_requests",
                "false"
              ],
              [
                "test_fork",
                "false"
              ],
              [
                "test_system",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_exec",
                "false"
              ],
              [
                "test_hello",
                "false"
              ],
              [
                "test_new",
                "false"
              ],
              [
                "test_openat",
                "false"
              ],
              [
                "test_malloc",
                "false"
              ],
              [
                "test_requests",
                "false"
              ],
              [
                "test_fork",
                "false"
              ],
              [
                "test_system",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_exec",
                "2"
              ],
              [
                "test_hello",
                "2"
              ],
              [
                "test_new",
                "1"
              ],
              [
                "test_openat",
                "2"
              ],
              [
                "test_malloc",
                "1"
              ],
              [
                "test_requests",
                "2"
              ],
              [
                "test_fork",
                "2"
              ],
              [
                "test_system",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_exec",
                [
                  "jl",
                  "code",
                  "stats"
                ]
              ],
              [
                "test_hello",
                [
                  "jl",
                  "code",
                  "stats"
                ]
              ],
              [
                "test_new",
                [
                  "jl",
                  "code",
                  "stats"
                ]
              ],
              [
                "test_openat",
                [
                  "jl",
                  "code",
                  "stats"
                ]
              ],
              [
                "test_malloc",
                [
                  "jl",
                  "code",
                  "stats"
                ]
              ],
              [
                "test_requests",
                [
                  "jl",
                  "code",
                  "stats"
                ]
              ],
              [
                "test_fork",
                [
                  "jl",
                  "code",
                  "stats"
                ]
              ],
              [
                "test_system",
                [
                  "jl",
                  "code",
                  "stats"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_exec",
                []
              ],
              [
                "test_hello",
                []
              ],
              [
                "test_new",
                []
              ],
              [
                "test_openat",
                []
              ],
              [
                "test_malloc",
                []
              ],
              [
                "test_requests",
                []
              ],
              [
                "test_fork",
                []
              ],
              [
                "test_system",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7538027449315815,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_malloc",
                  "test_exec",
                  0.7562051853647912
                ],
                [
                  "test_new",
                  "test_fork",
                  0.7991125898544322
                ],
                [
                  "test_new",
                  "test_requests",
                  0.5466787650174689
                ],
                [
                  "test_system",
                  "test_openat",
                  0.742205726654179
                ],
                [
                  "test_new",
                  "test_system",
                  0.7445694406464903
                ],
                [
                  "test_hello",
                  "test_requests",
                  0.5962953949011955
                ],
                [
                  "test_exec",
                  "test_system",
                  0.7621312235413489
                ],
                [
                  "test_new",
                  "test_openat",
                  0.6874448302182181
                ],
                [
                  "test_system",
                  "test_requests",
                  0.6147074157508847
                ],
                [
                  "test_hello",
                  "test_fork",
                  0.7776967060557217
                ],
                [
                  "test_hello",
                  "test_exec",
                  0.7644398105348864
                ],
                [
                  "test_fork",
                  "test_requests",
                  0.7462988847080343
                ],
                [
                  "test_hello",
                  "test_malloc",
                  0.7633246533977213
                ],
                [
                  "test_exec",
                  "test_openat",
                  0.88202268583414
                ],
                [
                  "test_requests",
                  "test_openat",
                  0.7183343180818138
                ],
                [
                  "test_hello",
                  "test_system",
                  0.8995224295566137
                ],
                [
                  "test_malloc",
                  "test_openat",
                  0.6879195028064858
                ],
                [
                  "test_malloc",
                  "test_requests",
                  0.54013147775426
                ],
                [
                  "test_exec",
                  "test_requests",
                  0.7376189553526813
                ],
                [
                  "test_new",
                  "test_exec",
                  0.7550287834530105
                ],
                [
                  "test_fork",
                  "test_system",
                  0.7827829282432728
                ],
                [
                  "test_hello",
                  "test_new",
                  0.7491659745613082
                ],
                [
                  "test_malloc",
                  "test_fork",
                  0.8005078955343856
                ],
                [
                  "test_exec",
                  "test_fork",
                  0.9318911162960933
                ],
                [
                  "test_fork",
                  "test_openat",
                  0.8823182486276072
                ],
                [
                  "test_hello",
                  "test_openat",
                  0.7613733650369042
                ],
                [
                  "test_malloc",
                  "test_system",
                  0.7610194341477616
                ],
                [
                  "test_malloc",
                  "test_new",
                  0.9157291161525718
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_exec",
                "true"
              ],
              [
                "test_hello",
                "false"
              ],
              [
                "test_new",
                "false"
              ],
              [
                "test_openat",
                "true"
              ],
              [
                "test_malloc",
                "false"
              ],
              [
                "test_requests",
                "true"
              ],
              [
                "test_fork",
                "true"
              ],
              [
                "test_system",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 8
      }
    ]
  }
]