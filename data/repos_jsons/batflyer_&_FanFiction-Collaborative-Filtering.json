[
  {
    "name": "ffscraper_\u0026_tests_\u0026_ffscrapertests_\u0026_test_format.py",
    "testCases": [
      {
        "name": "formatTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_format_2",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_format_5",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_format_1",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_format_4",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_format_3",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_format_2",
                  "[]"
                ],
                [
                  "test_format_5",
                  "[]"
                ],
                [
                  "test_format_1",
                  "[]"
                ],
                [
                  "test_format_4",
                  "[]"
                ],
                [
                  "test_format_3",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_format_2",
                  "false"
                ],
                [
                  "test_format_5",
                  "false"
                ],
                [
                  "test_format_1",
                  "false"
                ],
                [
                  "test_format_4",
                  "false"
                ],
                [
                  "test_format_3",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_format_2",
                  "false"
                ],
                [
                  "test_format_5",
                  "false"
                ],
                [
                  "test_format_1",
                  "false"
                ],
                [
                  "test_format_4",
                  "false"
                ],
                [
                  "test_format_3",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_format_2",
                  "false"
                ],
                [
                  "test_format_5",
                  "false"
                ],
                [
                  "test_format_1",
                  "false"
                ],
                [
                  "test_format_4",
                  "false"
                ],
                [
                  "test_format_3",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_format_2",
                  "false"
                ],
                [
                  "test_format_5",
                  "false"
                ],
                [
                  "test_format_1",
                  "false"
                ],
                [
                  "test_format_4",
                  "false"
                ],
                [
                  "test_format_3",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_format_2",
                "false"
              ],
              [
                "test_format_5",
                "false"
              ],
              [
                "test_format_1",
                "false"
              ],
              [
                "test_format_4",
                "false"
              ],
              [
                "test_format_3",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_format_2",
                "false"
              ],
              [
                "test_format_5",
                "false"
              ],
              [
                "test_format_1",
                "false"
              ],
              [
                "test_format_4",
                "false"
              ],
              [
                "test_format_3",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_format_2",
                []
              ],
              [
                "test_format_5",
                []
              ],
              [
                "test_format_1",
                []
              ],
              [
                "test_format_4",
                []
              ],
              [
                "test_format_3",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_format_2",
                "false"
              ],
              [
                "test_format_5",
                "false"
              ],
              [
                "test_format_1",
                "false"
              ],
              [
                "test_format_4",
                "false"
              ],
              [
                "test_format_3",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_format_2",
                "false"
              ],
              [
                "test_format_5",
                "false"
              ],
              [
                "test_format_1",
                "false"
              ],
              [
                "test_format_4",
                "false"
              ],
              [
                "test_format_3",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_format_2",
                  "0"
                ],
                [
                  "test_format_5",
                  "0"
                ],
                [
                  "test_format_1",
                  "0"
                ],
                [
                  "test_format_4",
                  "0"
                ],
                [
                  "test_format_3",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_format_2",
                  "0"
                ],
                [
                  "test_format_5",
                  "0"
                ],
                [
                  "test_format_1",
                  "0"
                ],
                [
                  "test_format_4",
                  "0"
                ],
                [
                  "test_format_3",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_format_2",
                "false"
              ],
              [
                "test_format_5",
                "false"
              ],
              [
                "test_format_1",
                "false"
              ],
              [
                "test_format_4",
                "false"
              ],
              [
                "test_format_3",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_format_2",
                "false"
              ],
              [
                "test_format_5",
                "false"
              ],
              [
                "test_format_1",
                "false"
              ],
              [
                "test_format_4",
                "false"
              ],
              [
                "test_format_3",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_format_2",
                "1"
              ],
              [
                "test_format_5",
                "1"
              ],
              [
                "test_format_1",
                "1"
              ],
              [
                "test_format_4",
                "1"
              ],
              [
                "test_format_3",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_format_2",
                [
                  "reality",
                  "expectation"
                ]
              ],
              [
                "test_format_5",
                []
              ],
              [
                "test_format_1",
                [
                  "reality",
                  "expectation"
                ]
              ],
              [
                "test_format_4",
                []
              ],
              [
                "test_format_3",
                [
                  "reality",
                  "expectation"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_format_2",
                []
              ],
              [
                "test_format_5",
                []
              ],
              [
                "test_format_1",
                []
              ],
              [
                "test_format_4",
                []
              ],
              [
                "test_format_3",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6425569491827277,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_format_1",
                  "test_format_5",
                  0.5172065470681888
                ],
                [
                  "test_format_4",
                  "test_format_5",
                  0.9291641968594222
                ],
                [
                  "test_format_1",
                  "test_format_3",
                  0.8585457105482137
                ],
                [
                  "test_format_1",
                  "test_format_4",
                  0.502518907629606
                ],
                [
                  "test_format_2",
                  "test_format_4",
                  0.48391079087419847
                ],
                [
                  "test_format_3",
                  "test_format_5",
                  0.4884500086981309
                ],
                [
                  "test_format_2",
                  "test_format_5",
                  0.5002780094738026
                ],
                [
                  "test_format_2",
                  "test_format_3",
                  0.8267540335004896
                ],
                [
                  "test_format_3",
                  "test_format_4",
                  0.4745789978762495
                ],
                [
                  "test_format_1",
                  "test_format_2",
                  0.8441622892989753
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_format_2",
                "false"
              ],
              [
                "test_format_5",
                "false"
              ],
              [
                "test_format_1",
                "false"
              ],
              [
                "test_format_4",
                "false"
              ],
              [
                "test_format_3",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      }
    ]
  },
  {
    "name": "ffscraper_\u0026_tests_\u0026_ffscrapertests_\u0026_test_storyid.py",
    "testCases": [
      {
        "name": "GetSidsTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_get_storyids_1",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_get_storyids_2",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_get_storyids_3",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_get_storyids_0",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_get_storyids_1",
                  "[]"
                ],
                [
                  "test_get_storyids_2",
                  "[]"
                ],
                [
                  "test_get_storyids_3",
                  "[]"
                ],
                [
                  "test_get_storyids_0",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_get_storyids_1",
                  "false"
                ],
                [
                  "test_get_storyids_2",
                  "false"
                ],
                [
                  "test_get_storyids_3",
                  "false"
                ],
                [
                  "test_get_storyids_0",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_get_storyids_1",
                  "false"
                ],
                [
                  "test_get_storyids_2",
                  "false"
                ],
                [
                  "test_get_storyids_3",
                  "false"
                ],
                [
                  "test_get_storyids_0",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_get_storyids_1",
                  "false"
                ],
                [
                  "test_get_storyids_2",
                  "false"
                ],
                [
                  "test_get_storyids_3",
                  "false"
                ],
                [
                  "test_get_storyids_0",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_get_storyids_1",
                  "false"
                ],
                [
                  "test_get_storyids_2",
                  "false"
                ],
                [
                  "test_get_storyids_3",
                  "false"
                ],
                [
                  "test_get_storyids_0",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_storyids_1",
                "false"
              ],
              [
                "test_get_storyids_2",
                "false"
              ],
              [
                "test_get_storyids_3",
                "false"
              ],
              [
                "test_get_storyids_0",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_get_storyids_1",
                "false"
              ],
              [
                "test_get_storyids_2",
                "false"
              ],
              [
                "test_get_storyids_3",
                "false"
              ],
              [
                "test_get_storyids_0",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_get_storyids_1",
                []
              ],
              [
                "test_get_storyids_2",
                []
              ],
              [
                "test_get_storyids_3",
                []
              ],
              [
                "test_get_storyids_0",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_storyids_1",
                "false"
              ],
              [
                "test_get_storyids_2",
                "false"
              ],
              [
                "test_get_storyids_3",
                "false"
              ],
              [
                "test_get_storyids_0",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_storyids_1",
                "false"
              ],
              [
                "test_get_storyids_2",
                "false"
              ],
              [
                "test_get_storyids_3",
                "false"
              ],
              [
                "test_get_storyids_0",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_get_storyids_1",
                  "0"
                ],
                [
                  "test_get_storyids_2",
                  "0"
                ],
                [
                  "test_get_storyids_3",
                  "0"
                ],
                [
                  "test_get_storyids_0",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_get_storyids_1",
                  "0"
                ],
                [
                  "test_get_storyids_2",
                  "0"
                ],
                [
                  "test_get_storyids_3",
                  "0"
                ],
                [
                  "test_get_storyids_0",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_get_storyids_1",
                "false"
              ],
              [
                "test_get_storyids_2",
                "false"
              ],
              [
                "test_get_storyids_3",
                "false"
              ],
              [
                "test_get_storyids_0",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_storyids_1",
                "false"
              ],
              [
                "test_get_storyids_2",
                "false"
              ],
              [
                "test_get_storyids_3",
                "false"
              ],
              [
                "test_get_storyids_0",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_storyids_1",
                "1"
              ],
              [
                "test_get_storyids_2",
                "1"
              ],
              [
                "test_get_storyids_3",
                "1"
              ],
              [
                "test_get_storyids_0",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_get_storyids_1",
                [
                  "sids",
                  "soup"
                ]
              ],
              [
                "test_get_storyids_2",
                [
                  "sids",
                  "soup"
                ]
              ],
              [
                "test_get_storyids_3",
                [
                  "sids",
                  "soup"
                ]
              ],
              [
                "test_get_storyids_0",
                [
                  "sids",
                  "soup"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_get_storyids_1",
                []
              ],
              [
                "test_get_storyids_2",
                []
              ],
              [
                "test_get_storyids_3",
                []
              ],
              [
                "test_get_storyids_0",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6893979772892855,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_get_storyids_1",
                  "test_get_storyids_2",
                  0.9598448225277527
                ],
                [
                  "test_get_storyids_1",
                  "test_get_storyids_3",
                  0.9226481060290836
                ],
                [
                  "test_get_storyids_0",
                  "test_get_storyids_2",
                  0.38533731779422614
                ],
                [
                  "test_get_storyids_0",
                  "test_get_storyids_3",
                  0.3026960695525271
                ],
                [
                  "test_get_storyids_2",
                  "test_get_storyids_3",
                  0.993783994284768
                ],
                [
                  "test_get_storyids_0",
                  "test_get_storyids_1",
                  0.5720775535473553
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_get_storyids_1",
                "false"
              ],
              [
                "test_get_storyids_2",
                "false"
              ],
              [
                "test_get_storyids_3",
                "false"
              ],
              [
                "test_get_storyids_0",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      },
      {
        "name": "NumberOfPagesTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_get_number_of_pages",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_get_number_of_pages_1",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_get_number_of_pages_2",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_get_number_of_pages",
                  "[]"
                ],
                [
                  "test_get_number_of_pages_1",
                  "[]"
                ],
                [
                  "test_get_number_of_pages_2",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_get_number_of_pages",
                  "false"
                ],
                [
                  "test_get_number_of_pages_1",
                  "false"
                ],
                [
                  "test_get_number_of_pages_2",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_get_number_of_pages",
                  "false"
                ],
                [
                  "test_get_number_of_pages_1",
                  "false"
                ],
                [
                  "test_get_number_of_pages_2",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_get_number_of_pages",
                  "false"
                ],
                [
                  "test_get_number_of_pages_1",
                  "false"
                ],
                [
                  "test_get_number_of_pages_2",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_get_number_of_pages",
                  "false"
                ],
                [
                  "test_get_number_of_pages_1",
                  "false"
                ],
                [
                  "test_get_number_of_pages_2",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_number_of_pages",
                "false"
              ],
              [
                "test_get_number_of_pages_1",
                "false"
              ],
              [
                "test_get_number_of_pages_2",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_get_number_of_pages",
                "false"
              ],
              [
                "test_get_number_of_pages_1",
                "false"
              ],
              [
                "test_get_number_of_pages_2",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_get_number_of_pages",
                []
              ],
              [
                "test_get_number_of_pages_1",
                []
              ],
              [
                "test_get_number_of_pages_2",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_number_of_pages",
                "false"
              ],
              [
                "test_get_number_of_pages_1",
                "false"
              ],
              [
                "test_get_number_of_pages_2",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_get_number_of_pages",
                "true"
              ],
              [
                "test_get_number_of_pages_1",
                "true"
              ],
              [
                "test_get_number_of_pages_2",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_get_number_of_pages",
                  "0"
                ],
                [
                  "test_get_number_of_pages_1",
                  "0"
                ],
                [
                  "test_get_number_of_pages_2",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_get_number_of_pages",
                  "0"
                ],
                [
                  "test_get_number_of_pages_1",
                  "0"
                ],
                [
                  "test_get_number_of_pages_2",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_get_number_of_pages",
                "false"
              ],
              [
                "test_get_number_of_pages_1",
                "false"
              ],
              [
                "test_get_number_of_pages_2",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_number_of_pages",
                "false"
              ],
              [
                "test_get_number_of_pages_1",
                "false"
              ],
              [
                "test_get_number_of_pages_2",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_number_of_pages",
                "1"
              ],
              [
                "test_get_number_of_pages_1",
                "1"
              ],
              [
                "test_get_number_of_pages_2",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_get_number_of_pages",
                [
                  "soup",
                  "number_of_pages"
                ]
              ],
              [
                "test_get_number_of_pages_1",
                [
                  "soup",
                  "number_of_pages"
                ]
              ],
              [
                "test_get_number_of_pages_2",
                [
                  "soup",
                  "number_of_pages"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_get_number_of_pages",
                []
              ],
              [
                "test_get_number_of_pages_1",
                []
              ],
              [
                "test_get_number_of_pages_2",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6007935172714677,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_get_number_of_pages_1",
                  "test_get_number_of_pages",
                  0.3923021059878226
                ],
                [
                  "test_get_number_of_pages_1",
                  "test_get_number_of_pages_2",
                  0.4158037040557881
                ],
                [
                  "test_get_number_of_pages_2",
                  "test_get_number_of_pages",
                  0.9942747417707924
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_get_number_of_pages",
                "false"
              ],
              [
                "test_get_number_of_pages_1",
                "false"
              ],
              [
                "test_get_number_of_pages_2",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "ffscraper_\u0026_tests_\u0026_ffscrapertests_\u0026_test_nlp_index.py",
    "testCases": [
      {
        "name": "IndexTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_normalize_1",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_normalize_4",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_normalize_5",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_normalize_2",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_normalize_3",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_normalize_1",
                  "[]"
                ],
                [
                  "test_normalize_4",
                  "[]"
                ],
                [
                  "test_normalize_5",
                  "[]"
                ],
                [
                  "test_normalize_2",
                  "[]"
                ],
                [
                  "test_normalize_3",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_normalize_1",
                  "false"
                ],
                [
                  "test_normalize_4",
                  "false"
                ],
                [
                  "test_normalize_5",
                  "false"
                ],
                [
                  "test_normalize_2",
                  "false"
                ],
                [
                  "test_normalize_3",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_normalize_1",
                  "true"
                ],
                [
                  "test_normalize_4",
                  "true"
                ],
                [
                  "test_normalize_5",
                  "true"
                ],
                [
                  "test_normalize_2",
                  "true"
                ],
                [
                  "test_normalize_3",
                  "true"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_normalize_1",
                  "false"
                ],
                [
                  "test_normalize_4",
                  "false"
                ],
                [
                  "test_normalize_5",
                  "false"
                ],
                [
                  "test_normalize_2",
                  "false"
                ],
                [
                  "test_normalize_3",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_normalize_1",
                  "false"
                ],
                [
                  "test_normalize_4",
                  "false"
                ],
                [
                  "test_normalize_5",
                  "false"
                ],
                [
                  "test_normalize_2",
                  "false"
                ],
                [
                  "test_normalize_3",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_normalize_1",
                "false"
              ],
              [
                "test_normalize_4",
                "false"
              ],
              [
                "test_normalize_5",
                "false"
              ],
              [
                "test_normalize_2",
                "false"
              ],
              [
                "test_normalize_3",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_normalize_1",
                "false"
              ],
              [
                "test_normalize_4",
                "false"
              ],
              [
                "test_normalize_5",
                "false"
              ],
              [
                "test_normalize_2",
                "false"
              ],
              [
                "test_normalize_3",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_normalize_1",
                []
              ],
              [
                "test_normalize_4",
                []
              ],
              [
                "test_normalize_5",
                []
              ],
              [
                "test_normalize_2",
                []
              ],
              [
                "test_normalize_3",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_normalize_1",
                "false"
              ],
              [
                "test_normalize_4",
                "false"
              ],
              [
                "test_normalize_5",
                "false"
              ],
              [
                "test_normalize_2",
                "false"
              ],
              [
                "test_normalize_3",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_normalize_1",
                "false"
              ],
              [
                "test_normalize_4",
                "false"
              ],
              [
                "test_normalize_5",
                "false"
              ],
              [
                "test_normalize_2",
                "false"
              ],
              [
                "test_normalize_3",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_normalize_1",
                  "0"
                ],
                [
                  "test_normalize_4",
                  "0"
                ],
                [
                  "test_normalize_5",
                  "0"
                ],
                [
                  "test_normalize_2",
                  "0"
                ],
                [
                  "test_normalize_3",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_normalize_1",
                  "0"
                ],
                [
                  "test_normalize_4",
                  "0"
                ],
                [
                  "test_normalize_5",
                  "0"
                ],
                [
                  "test_normalize_2",
                  "0"
                ],
                [
                  "test_normalize_3",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_normalize_1",
                "false"
              ],
              [
                "test_normalize_4",
                "false"
              ],
              [
                "test_normalize_5",
                "false"
              ],
              [
                "test_normalize_2",
                "false"
              ],
              [
                "test_normalize_3",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_normalize_1",
                "false"
              ],
              [
                "test_normalize_4",
                "false"
              ],
              [
                "test_normalize_5",
                "false"
              ],
              [
                "test_normalize_2",
                "false"
              ],
              [
                "test_normalize_3",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_normalize_1",
                "1"
              ],
              [
                "test_normalize_4",
                "1"
              ],
              [
                "test_normalize_5",
                "1"
              ],
              [
                "test_normalize_2",
                "1"
              ],
              [
                "test_normalize_3",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_normalize_1",
                [
                  "sentences",
                  "sentence_generator"
                ]
              ],
              [
                "test_normalize_4",
                [
                  "sentences",
                  "expected",
                  "sentence_generator"
                ]
              ],
              [
                "test_normalize_5",
                [
                  "sentences",
                  "expected",
                  "sentence_generator"
                ]
              ],
              [
                "test_normalize_2",
                [
                  "sentences",
                  "expected",
                  "sentence_generator"
                ]
              ],
              [
                "test_normalize_3",
                [
                  "sentences",
                  "expected",
                  "sentence_generator"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_normalize_1",
                []
              ],
              [
                "test_normalize_4",
                []
              ],
              [
                "test_normalize_5",
                []
              ],
              [
                "test_normalize_2",
                []
              ],
              [
                "test_normalize_3",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6651404234840453,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_normalize_1",
                  "test_normalize_3",
                  0.7857142857142857
                ],
                [
                  "test_normalize_2",
                  "test_normalize_5",
                  0.48723677290099787
                ],
                [
                  "test_normalize_1",
                  "test_normalize_5",
                  0.6640368076317485
                ],
                [
                  "test_normalize_4",
                  "test_normalize_5",
                  0.6933970835280351
                ],
                [
                  "test_normalize_2",
                  "test_normalize_4",
                  0.5603656501211943
                ],
                [
                  "test_normalize_3",
                  "test_normalize_4",
                  0.9447658003878092
                ],
                [
                  "test_normalize_1",
                  "test_normalize_4",
                  0.7955922529581552
                ],
                [
                  "test_normalize_1",
                  "test_normalize_2",
                  0.5479902423657637
                ],
                [
                  "test_normalize_3",
                  "test_normalize_5",
                  0.6521790074954673
                ],
                [
                  "test_normalize_2",
                  "test_normalize_3",
                  0.520126331736996
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_normalize_1",
                "false"
              ],
              [
                "test_normalize_4",
                "false"
              ],
              [
                "test_normalize_5",
                "false"
              ],
              [
                "test_normalize_2",
                "false"
              ],
              [
                "test_normalize_3",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      },
      {
        "name": "WordcountTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_wordcount_1",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_wordcount_4",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_wordcount_3",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_wordcount_2",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_wordcount_1",
                  "[]"
                ],
                [
                  "test_wordcount_4",
                  "[]"
                ],
                [
                  "test_wordcount_3",
                  "[]"
                ],
                [
                  "test_wordcount_2",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_wordcount_1",
                  "false"
                ],
                [
                  "test_wordcount_4",
                  "false"
                ],
                [
                  "test_wordcount_3",
                  "false"
                ],
                [
                  "test_wordcount_2",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_wordcount_1",
                  "false"
                ],
                [
                  "test_wordcount_4",
                  "false"
                ],
                [
                  "test_wordcount_3",
                  "false"
                ],
                [
                  "test_wordcount_2",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_wordcount_1",
                  "false"
                ],
                [
                  "test_wordcount_4",
                  "false"
                ],
                [
                  "test_wordcount_3",
                  "false"
                ],
                [
                  "test_wordcount_2",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_wordcount_1",
                  "false"
                ],
                [
                  "test_wordcount_4",
                  "false"
                ],
                [
                  "test_wordcount_3",
                  "false"
                ],
                [
                  "test_wordcount_2",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_wordcount_1",
                "false"
              ],
              [
                "test_wordcount_4",
                "false"
              ],
              [
                "test_wordcount_3",
                "false"
              ],
              [
                "test_wordcount_2",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_wordcount_1",
                "false"
              ],
              [
                "test_wordcount_4",
                "false"
              ],
              [
                "test_wordcount_3",
                "false"
              ],
              [
                "test_wordcount_2",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_wordcount_1",
                []
              ],
              [
                "test_wordcount_4",
                []
              ],
              [
                "test_wordcount_3",
                []
              ],
              [
                "test_wordcount_2",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_wordcount_1",
                "false"
              ],
              [
                "test_wordcount_4",
                "false"
              ],
              [
                "test_wordcount_3",
                "false"
              ],
              [
                "test_wordcount_2",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_wordcount_1",
                "false"
              ],
              [
                "test_wordcount_4",
                "false"
              ],
              [
                "test_wordcount_3",
                "false"
              ],
              [
                "test_wordcount_2",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_wordcount_1",
                  "0"
                ],
                [
                  "test_wordcount_4",
                  "0"
                ],
                [
                  "test_wordcount_3",
                  "0"
                ],
                [
                  "test_wordcount_2",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_wordcount_1",
                  "0"
                ],
                [
                  "test_wordcount_4",
                  "0"
                ],
                [
                  "test_wordcount_3",
                  "0"
                ],
                [
                  "test_wordcount_2",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_wordcount_1",
                "false"
              ],
              [
                "test_wordcount_4",
                "false"
              ],
              [
                "test_wordcount_3",
                "false"
              ],
              [
                "test_wordcount_2",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_wordcount_1",
                "false"
              ],
              [
                "test_wordcount_4",
                "false"
              ],
              [
                "test_wordcount_3",
                "false"
              ],
              [
                "test_wordcount_2",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_wordcount_1",
                "1"
              ],
              [
                "test_wordcount_4",
                "1"
              ],
              [
                "test_wordcount_3",
                "1"
              ],
              [
                "test_wordcount_2",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_wordcount_1",
                [
                  "expected",
                  "doc"
                ]
              ],
              [
                "test_wordcount_4",
                [
                  "expected",
                  "doc"
                ]
              ],
              [
                "test_wordcount_3",
                [
                  "expected",
                  "doc"
                ]
              ],
              [
                "test_wordcount_2",
                [
                  "expected",
                  "doc"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_wordcount_1",
                []
              ],
              [
                "test_wordcount_4",
                []
              ],
              [
                "test_wordcount_3",
                []
              ],
              [
                "test_wordcount_2",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6894018257237949,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_wordcount_1",
                  "test_wordcount_3",
                  0.5434863342265375
                ],
                [
                  "test_wordcount_2",
                  "test_wordcount_3",
                  0.716182890839134
                ],
                [
                  "test_wordcount_1",
                  "test_wordcount_2",
                  0.7439552787737572
                ],
                [
                  "test_wordcount_2",
                  "test_wordcount_4",
                  0.7333716292361935
                ],
                [
                  "test_wordcount_1",
                  "test_wordcount_4",
                  0.743804753159962
                ],
                [
                  "test_wordcount_3",
                  "test_wordcount_4",
                  0.6556100681071857
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_wordcount_1",
                "false"
              ],
              [
                "test_wordcount_4",
                "false"
              ],
              [
                "test_wordcount_3",
                "false"
              ],
              [
                "test_wordcount_2",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "ffscraper_\u0026_tests_\u0026_ffscrapertests_\u0026_test_fanfic_review.py",
    "testCases": [
      {
        "name": "ReviewsTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_reviews_1",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_reviews_1",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_reviews_1",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_reviews_1",
                  "true"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_reviews_1",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_reviews_1",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_reviews_1",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_reviews_1",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_reviews_1",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_reviews_1",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_reviews_1",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_reviews_1",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_reviews_1",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_reviews_1",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_reviews_1",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_reviews_1",
                "12"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_reviews_1",
                [
                  "soup",
                  "reviews",
                  "reality"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_reviews_1",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_reviews_1",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "ffscraper_\u0026_tests_\u0026_ffscrapertests_\u0026_test_author_profile.py",
    "testCases": [
      {
        "name": "FavoriteAuthorsTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_favorite_authors_2",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_favorite_authors_3",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_favorite_authors_5",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_favorite_authors_4",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_favorite_authors_1",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_favorite_authors_2",
                  "[]"
                ],
                [
                  "test_favorite_authors_3",
                  "[]"
                ],
                [
                  "test_favorite_authors_5",
                  "[]"
                ],
                [
                  "test_favorite_authors_4",
                  "[]"
                ],
                [
                  "test_favorite_authors_1",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_favorite_authors_2",
                  "false"
                ],
                [
                  "test_favorite_authors_3",
                  "false"
                ],
                [
                  "test_favorite_authors_5",
                  "false"
                ],
                [
                  "test_favorite_authors_4",
                  "false"
                ],
                [
                  "test_favorite_authors_1",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_favorite_authors_2",
                  "false"
                ],
                [
                  "test_favorite_authors_3",
                  "false"
                ],
                [
                  "test_favorite_authors_5",
                  "false"
                ],
                [
                  "test_favorite_authors_4",
                  "false"
                ],
                [
                  "test_favorite_authors_1",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_favorite_authors_2",
                  "false"
                ],
                [
                  "test_favorite_authors_3",
                  "false"
                ],
                [
                  "test_favorite_authors_5",
                  "false"
                ],
                [
                  "test_favorite_authors_4",
                  "false"
                ],
                [
                  "test_favorite_authors_1",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_favorite_authors_2",
                  "false"
                ],
                [
                  "test_favorite_authors_3",
                  "false"
                ],
                [
                  "test_favorite_authors_5",
                  "false"
                ],
                [
                  "test_favorite_authors_4",
                  "false"
                ],
                [
                  "test_favorite_authors_1",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_favorite_authors_2",
                "false"
              ],
              [
                "test_favorite_authors_3",
                "false"
              ],
              [
                "test_favorite_authors_5",
                "false"
              ],
              [
                "test_favorite_authors_4",
                "false"
              ],
              [
                "test_favorite_authors_1",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_favorite_authors_2",
                "false"
              ],
              [
                "test_favorite_authors_3",
                "false"
              ],
              [
                "test_favorite_authors_5",
                "false"
              ],
              [
                "test_favorite_authors_4",
                "false"
              ],
              [
                "test_favorite_authors_1",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_favorite_authors_2",
                []
              ],
              [
                "test_favorite_authors_3",
                []
              ],
              [
                "test_favorite_authors_5",
                []
              ],
              [
                "test_favorite_authors_4",
                []
              ],
              [
                "test_favorite_authors_1",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_favorite_authors_2",
                "false"
              ],
              [
                "test_favorite_authors_3",
                "false"
              ],
              [
                "test_favorite_authors_5",
                "false"
              ],
              [
                "test_favorite_authors_4",
                "false"
              ],
              [
                "test_favorite_authors_1",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_favorite_authors_2",
                "false"
              ],
              [
                "test_favorite_authors_3",
                "false"
              ],
              [
                "test_favorite_authors_5",
                "false"
              ],
              [
                "test_favorite_authors_4",
                "false"
              ],
              [
                "test_favorite_authors_1",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_favorite_authors_2",
                  "0"
                ],
                [
                  "test_favorite_authors_3",
                  "0"
                ],
                [
                  "test_favorite_authors_5",
                  "0"
                ],
                [
                  "test_favorite_authors_4",
                  "0"
                ],
                [
                  "test_favorite_authors_1",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_favorite_authors_2",
                  "0"
                ],
                [
                  "test_favorite_authors_3",
                  "0"
                ],
                [
                  "test_favorite_authors_5",
                  "0"
                ],
                [
                  "test_favorite_authors_4",
                  "0"
                ],
                [
                  "test_favorite_authors_1",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_favorite_authors_2",
                "false"
              ],
              [
                "test_favorite_authors_3",
                "false"
              ],
              [
                "test_favorite_authors_5",
                "false"
              ],
              [
                "test_favorite_authors_4",
                "false"
              ],
              [
                "test_favorite_authors_1",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_favorite_authors_2",
                "false"
              ],
              [
                "test_favorite_authors_3",
                "false"
              ],
              [
                "test_favorite_authors_5",
                "false"
              ],
              [
                "test_favorite_authors_4",
                "false"
              ],
              [
                "test_favorite_authors_1",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_favorite_authors_2",
                "1"
              ],
              [
                "test_favorite_authors_3",
                "1"
              ],
              [
                "test_favorite_authors_5",
                "1"
              ],
              [
                "test_favorite_authors_4",
                "1"
              ],
              [
                "test_favorite_authors_1",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_favorite_authors_2",
                [
                  "soup",
                  "expected",
                  "reality"
                ]
              ],
              [
                "test_favorite_authors_3",
                [
                  "soup",
                  "expected",
                  "reality"
                ]
              ],
              [
                "test_favorite_authors_5",
                [
                  "soup",
                  "expected",
                  "reality"
                ]
              ],
              [
                "test_favorite_authors_4",
                [
                  "soup",
                  "expected",
                  "reality"
                ]
              ],
              [
                "test_favorite_authors_1",
                [
                  "soup",
                  "expected",
                  "reality"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_favorite_authors_2",
                []
              ],
              [
                "test_favorite_authors_3",
                []
              ],
              [
                "test_favorite_authors_5",
                []
              ],
              [
                "test_favorite_authors_4",
                []
              ],
              [
                "test_favorite_authors_1",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6430464568082862,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_favorite_authors_2",
                  "test_favorite_authors_3",
                  0.8117599696745419
                ],
                [
                  "test_favorite_authors_2",
                  "test_favorite_authors_4",
                  0.45037734911104504
                ],
                [
                  "test_favorite_authors_1",
                  "test_favorite_authors_2",
                  0.8993491857669996
                ],
                [
                  "test_favorite_authors_2",
                  "test_favorite_authors_5",
                  0.5120196528544807
                ],
                [
                  "test_favorite_authors_3",
                  "test_favorite_authors_5",
                  0.8249579113843054
                ],
                [
                  "test_favorite_authors_4",
                  "test_favorite_authors_5",
                  0.8665782448262421
                ],
                [
                  "test_favorite_authors_1",
                  "test_favorite_authors_3",
                  0.6439599252919856
                ],
                [
                  "test_favorite_authors_1",
                  "test_favorite_authors_5",
                  0.3650472645460155
                ],
                [
                  "test_favorite_authors_1",
                  "test_favorite_authors_4",
                  0.3210990406128003
                ],
                [
                  "test_favorite_authors_3",
                  "test_favorite_authors_4",
                  0.7353160240144463
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_favorite_authors_2",
                "false"
              ],
              [
                "test_favorite_authors_3",
                "false"
              ],
              [
                "test_favorite_authors_5",
                "false"
              ],
              [
                "test_favorite_authors_4",
                "false"
              ],
              [
                "test_favorite_authors_1",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      },
      {
        "name": "FavoriteStoriesTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_favorites_stories_3",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_favorites_stories_4",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_favorites_stories_1",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_favorites_stories_2",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_favorites_stories_3",
                  "[]"
                ],
                [
                  "test_favorites_stories_4",
                  "[]"
                ],
                [
                  "test_favorites_stories_1",
                  "[]"
                ],
                [
                  "test_favorites_stories_2",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_favorites_stories_3",
                  "false"
                ],
                [
                  "test_favorites_stories_4",
                  "false"
                ],
                [
                  "test_favorites_stories_1",
                  "false"
                ],
                [
                  "test_favorites_stories_2",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_favorites_stories_3",
                  "false"
                ],
                [
                  "test_favorites_stories_4",
                  "false"
                ],
                [
                  "test_favorites_stories_1",
                  "false"
                ],
                [
                  "test_favorites_stories_2",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_favorites_stories_3",
                  "false"
                ],
                [
                  "test_favorites_stories_4",
                  "false"
                ],
                [
                  "test_favorites_stories_1",
                  "false"
                ],
                [
                  "test_favorites_stories_2",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_favorites_stories_3",
                  "false"
                ],
                [
                  "test_favorites_stories_4",
                  "false"
                ],
                [
                  "test_favorites_stories_1",
                  "false"
                ],
                [
                  "test_favorites_stories_2",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_favorites_stories_3",
                "false"
              ],
              [
                "test_favorites_stories_4",
                "false"
              ],
              [
                "test_favorites_stories_1",
                "false"
              ],
              [
                "test_favorites_stories_2",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_favorites_stories_3",
                "false"
              ],
              [
                "test_favorites_stories_4",
                "false"
              ],
              [
                "test_favorites_stories_1",
                "false"
              ],
              [
                "test_favorites_stories_2",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_favorites_stories_3",
                []
              ],
              [
                "test_favorites_stories_4",
                []
              ],
              [
                "test_favorites_stories_1",
                []
              ],
              [
                "test_favorites_stories_2",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_favorites_stories_3",
                "false"
              ],
              [
                "test_favorites_stories_4",
                "false"
              ],
              [
                "test_favorites_stories_1",
                "false"
              ],
              [
                "test_favorites_stories_2",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_favorites_stories_3",
                "false"
              ],
              [
                "test_favorites_stories_4",
                "false"
              ],
              [
                "test_favorites_stories_1",
                "false"
              ],
              [
                "test_favorites_stories_2",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_favorites_stories_3",
                  "0"
                ],
                [
                  "test_favorites_stories_4",
                  "0"
                ],
                [
                  "test_favorites_stories_1",
                  "0"
                ],
                [
                  "test_favorites_stories_2",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_favorites_stories_3",
                  "0"
                ],
                [
                  "test_favorites_stories_4",
                  "0"
                ],
                [
                  "test_favorites_stories_1",
                  "0"
                ],
                [
                  "test_favorites_stories_2",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_favorites_stories_3",
                "false"
              ],
              [
                "test_favorites_stories_4",
                "false"
              ],
              [
                "test_favorites_stories_1",
                "false"
              ],
              [
                "test_favorites_stories_2",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_favorites_stories_3",
                "false"
              ],
              [
                "test_favorites_stories_4",
                "false"
              ],
              [
                "test_favorites_stories_1",
                "false"
              ],
              [
                "test_favorites_stories_2",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_favorites_stories_3",
                "2"
              ],
              [
                "test_favorites_stories_4",
                "2"
              ],
              [
                "test_favorites_stories_1",
                "2"
              ],
              [
                "test_favorites_stories_2",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_favorites_stories_3",
                [
                  "fav_inverted",
                  "soup",
                  "fav_list"
                ]
              ],
              [
                "test_favorites_stories_4",
                [
                  "fav_inverted",
                  "soup",
                  "fav_list"
                ]
              ],
              [
                "test_favorites_stories_1",
                [
                  "fav_inverted",
                  "soup",
                  "fav_list"
                ]
              ],
              [
                "test_favorites_stories_2",
                [
                  "fav_inverted",
                  "soup",
                  "fav_list"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_favorites_stories_3",
                []
              ],
              [
                "test_favorites_stories_4",
                []
              ],
              [
                "test_favorites_stories_1",
                []
              ],
              [
                "test_favorites_stories_2",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6874747489557008,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_favorites_stories_3",
                  "test_favorites_stories_4",
                  0.5904597164647871
                ],
                [
                  "test_favorites_stories_2",
                  "test_favorites_stories_3",
                  0.7838370907244194
                ],
                [
                  "test_favorites_stories_1",
                  "test_favorites_stories_3",
                  0.43516891051214646
                ],
                [
                  "test_favorites_stories_2",
                  "test_favorites_stories_4",
                  0.7954716334459858
                ],
                [
                  "test_favorites_stories_1",
                  "test_favorites_stories_2",
                  0.6061386122741239
                ],
                [
                  "test_favorites_stories_1",
                  "test_favorites_stories_4",
                  0.9137725303127416
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_favorites_stories_3",
                "false"
              ],
              [
                "test_favorites_stories_4",
                "false"
              ],
              [
                "test_favorites_stories_1",
                "false"
              ],
              [
                "test_favorites_stories_2",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      },
      {
        "name": "TestRelativeLikes",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_relative_likes_2",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_relative_likes_4",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_relative_likes_3",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_relative_likes_1",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_relative_likes_5",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_relative_likes_2",
                  "[]"
                ],
                [
                  "test_relative_likes_4",
                  "[]"
                ],
                [
                  "test_relative_likes_3",
                  "[]"
                ],
                [
                  "test_relative_likes_1",
                  "[]"
                ],
                [
                  "test_relative_likes_5",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_relative_likes_2",
                  "false"
                ],
                [
                  "test_relative_likes_4",
                  "false"
                ],
                [
                  "test_relative_likes_3",
                  "false"
                ],
                [
                  "test_relative_likes_1",
                  "false"
                ],
                [
                  "test_relative_likes_5",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_relative_likes_2",
                  "false"
                ],
                [
                  "test_relative_likes_4",
                  "false"
                ],
                [
                  "test_relative_likes_3",
                  "false"
                ],
                [
                  "test_relative_likes_1",
                  "false"
                ],
                [
                  "test_relative_likes_5",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_relative_likes_2",
                  "false"
                ],
                [
                  "test_relative_likes_4",
                  "false"
                ],
                [
                  "test_relative_likes_3",
                  "false"
                ],
                [
                  "test_relative_likes_1",
                  "false"
                ],
                [
                  "test_relative_likes_5",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_relative_likes_2",
                  "false"
                ],
                [
                  "test_relative_likes_4",
                  "false"
                ],
                [
                  "test_relative_likes_3",
                  "false"
                ],
                [
                  "test_relative_likes_1",
                  "false"
                ],
                [
                  "test_relative_likes_5",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_relative_likes_2",
                "false"
              ],
              [
                "test_relative_likes_4",
                "false"
              ],
              [
                "test_relative_likes_3",
                "false"
              ],
              [
                "test_relative_likes_1",
                "false"
              ],
              [
                "test_relative_likes_5",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_relative_likes_2",
                "false"
              ],
              [
                "test_relative_likes_4",
                "false"
              ],
              [
                "test_relative_likes_3",
                "false"
              ],
              [
                "test_relative_likes_1",
                "false"
              ],
              [
                "test_relative_likes_5",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_relative_likes_2",
                []
              ],
              [
                "test_relative_likes_4",
                []
              ],
              [
                "test_relative_likes_3",
                []
              ],
              [
                "test_relative_likes_1",
                []
              ],
              [
                "test_relative_likes_5",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_relative_likes_2",
                "false"
              ],
              [
                "test_relative_likes_4",
                "false"
              ],
              [
                "test_relative_likes_3",
                "false"
              ],
              [
                "test_relative_likes_1",
                "false"
              ],
              [
                "test_relative_likes_5",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_relative_likes_2",
                "true"
              ],
              [
                "test_relative_likes_4",
                "true"
              ],
              [
                "test_relative_likes_3",
                "true"
              ],
              [
                "test_relative_likes_1",
                "true"
              ],
              [
                "test_relative_likes_5",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_relative_likes_2",
                  "0"
                ],
                [
                  "test_relative_likes_4",
                  "0"
                ],
                [
                  "test_relative_likes_3",
                  "0"
                ],
                [
                  "test_relative_likes_1",
                  "0"
                ],
                [
                  "test_relative_likes_5",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_relative_likes_2",
                  "0"
                ],
                [
                  "test_relative_likes_4",
                  "0"
                ],
                [
                  "test_relative_likes_3",
                  "0"
                ],
                [
                  "test_relative_likes_1",
                  "0"
                ],
                [
                  "test_relative_likes_5",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_relative_likes_2",
                "false"
              ],
              [
                "test_relative_likes_4",
                "false"
              ],
              [
                "test_relative_likes_3",
                "false"
              ],
              [
                "test_relative_likes_1",
                "false"
              ],
              [
                "test_relative_likes_5",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_relative_likes_2",
                "false"
              ],
              [
                "test_relative_likes_4",
                "false"
              ],
              [
                "test_relative_likes_3",
                "false"
              ],
              [
                "test_relative_likes_1",
                "false"
              ],
              [
                "test_relative_likes_5",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_relative_likes_2",
                "1"
              ],
              [
                "test_relative_likes_4",
                "1"
              ],
              [
                "test_relative_likes_3",
                "1"
              ],
              [
                "test_relative_likes_1",
                "1"
              ],
              [
                "test_relative_likes_5",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_relative_likes_2",
                [
                  "fav_inverted",
                  "soup",
                  "relative_likes",
                  "fav_list"
                ]
              ],
              [
                "test_relative_likes_4",
                [
                  "fav_inverted",
                  "soup",
                  "relative_likes",
                  "fav_list"
                ]
              ],
              [
                "test_relative_likes_3",
                [
                  "fav_inverted",
                  "soup",
                  "relative_likes",
                  "fav_list"
                ]
              ],
              [
                "test_relative_likes_1",
                [
                  "fav_inverted",
                  "soup",
                  "relative_likes",
                  "fav_list"
                ]
              ],
              [
                "test_relative_likes_5",
                [
                  "fav_inverted",
                  "soup",
                  "relative_likes",
                  "fav_list"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_relative_likes_2",
                []
              ],
              [
                "test_relative_likes_4",
                []
              ],
              [
                "test_relative_likes_3",
                []
              ],
              [
                "test_relative_likes_1",
                []
              ],
              [
                "test_relative_likes_5",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.874350135914591,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_relative_likes_1",
                  "test_relative_likes_4",
                  0.8624459344919034
                ],
                [
                  "test_relative_likes_2",
                  "test_relative_likes_4",
                  0.8432714931417468
                ],
                [
                  "test_relative_likes_3",
                  "test_relative_likes_4",
                  0.9325123688259279
                ],
                [
                  "test_relative_likes_1",
                  "test_relative_likes_5",
                  0.9119365042133776
                ],
                [
                  "test_relative_likes_2",
                  "test_relative_likes_3",
                  0.8724590280307597
                ],
                [
                  "test_relative_likes_1",
                  "test_relative_likes_3",
                  0.9306166492800841
                ],
                [
                  "test_relative_likes_4",
                  "test_relative_likes_5",
                  0.9153210456708636
                ],
                [
                  "test_relative_likes_2",
                  "test_relative_likes_5",
                  0.8005004692388159
                ],
                [
                  "test_relative_likes_3",
                  "test_relative_likes_5",
                  0.9187336509165978
                ],
                [
                  "test_relative_likes_1",
                  "test_relative_likes_2",
                  0.755704215335832
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_relative_likes_2",
                "false"
              ],
              [
                "test_relative_likes_4",
                "false"
              ],
              [
                "test_relative_likes_3",
                "false"
              ],
              [
                "test_relative_likes_1",
                "false"
              ],
              [
                "test_relative_likes_5",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      }
    ]
  },
  {
    "name": "ffscraper_\u0026_tests_\u0026_ffscrapertests_\u0026_test_format_cytoscape.py",
    "testCases": [
      {
        "name": "cytoscapeFormatTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_cytoscapeFormat_1",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_cytoscapeFormat_2",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_cytoscapeFormat_5",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_cytoscapeFormat_6",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_cytoscapeFormat_4",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_cytoscapeFormat_3",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_cytoscapeFormat_1",
                  "[]"
                ],
                [
                  "test_cytoscapeFormat_2",
                  "[]"
                ],
                [
                  "test_cytoscapeFormat_5",
                  "[]"
                ],
                [
                  "test_cytoscapeFormat_6",
                  "[]"
                ],
                [
                  "test_cytoscapeFormat_4",
                  "[]"
                ],
                [
                  "test_cytoscapeFormat_3",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_cytoscapeFormat_1",
                  "false"
                ],
                [
                  "test_cytoscapeFormat_2",
                  "false"
                ],
                [
                  "test_cytoscapeFormat_5",
                  "false"
                ],
                [
                  "test_cytoscapeFormat_6",
                  "false"
                ],
                [
                  "test_cytoscapeFormat_4",
                  "false"
                ],
                [
                  "test_cytoscapeFormat_3",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_cytoscapeFormat_1",
                  "false"
                ],
                [
                  "test_cytoscapeFormat_2",
                  "false"
                ],
                [
                  "test_cytoscapeFormat_5",
                  "false"
                ],
                [
                  "test_cytoscapeFormat_6",
                  "false"
                ],
                [
                  "test_cytoscapeFormat_4",
                  "false"
                ],
                [
                  "test_cytoscapeFormat_3",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_cytoscapeFormat_1",
                  "false"
                ],
                [
                  "test_cytoscapeFormat_2",
                  "false"
                ],
                [
                  "test_cytoscapeFormat_5",
                  "false"
                ],
                [
                  "test_cytoscapeFormat_6",
                  "false"
                ],
                [
                  "test_cytoscapeFormat_4",
                  "false"
                ],
                [
                  "test_cytoscapeFormat_3",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_cytoscapeFormat_1",
                  "false"
                ],
                [
                  "test_cytoscapeFormat_2",
                  "false"
                ],
                [
                  "test_cytoscapeFormat_5",
                  "false"
                ],
                [
                  "test_cytoscapeFormat_6",
                  "false"
                ],
                [
                  "test_cytoscapeFormat_4",
                  "false"
                ],
                [
                  "test_cytoscapeFormat_3",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cytoscapeFormat_1",
                "false"
              ],
              [
                "test_cytoscapeFormat_2",
                "false"
              ],
              [
                "test_cytoscapeFormat_5",
                "false"
              ],
              [
                "test_cytoscapeFormat_6",
                "false"
              ],
              [
                "test_cytoscapeFormat_4",
                "false"
              ],
              [
                "test_cytoscapeFormat_3",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_cytoscapeFormat_1",
                "false"
              ],
              [
                "test_cytoscapeFormat_2",
                "false"
              ],
              [
                "test_cytoscapeFormat_5",
                "false"
              ],
              [
                "test_cytoscapeFormat_6",
                "false"
              ],
              [
                "test_cytoscapeFormat_4",
                "false"
              ],
              [
                "test_cytoscapeFormat_3",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_cytoscapeFormat_1",
                []
              ],
              [
                "test_cytoscapeFormat_2",
                []
              ],
              [
                "test_cytoscapeFormat_5",
                []
              ],
              [
                "test_cytoscapeFormat_6",
                []
              ],
              [
                "test_cytoscapeFormat_4",
                []
              ],
              [
                "test_cytoscapeFormat_3",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cytoscapeFormat_1",
                "false"
              ],
              [
                "test_cytoscapeFormat_2",
                "false"
              ],
              [
                "test_cytoscapeFormat_5",
                "false"
              ],
              [
                "test_cytoscapeFormat_6",
                "false"
              ],
              [
                "test_cytoscapeFormat_4",
                "false"
              ],
              [
                "test_cytoscapeFormat_3",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cytoscapeFormat_1",
                "false"
              ],
              [
                "test_cytoscapeFormat_2",
                "false"
              ],
              [
                "test_cytoscapeFormat_5",
                "false"
              ],
              [
                "test_cytoscapeFormat_6",
                "false"
              ],
              [
                "test_cytoscapeFormat_4",
                "false"
              ],
              [
                "test_cytoscapeFormat_3",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_cytoscapeFormat_1",
                  "0"
                ],
                [
                  "test_cytoscapeFormat_2",
                  "0"
                ],
                [
                  "test_cytoscapeFormat_5",
                  "0"
                ],
                [
                  "test_cytoscapeFormat_6",
                  "0"
                ],
                [
                  "test_cytoscapeFormat_4",
                  "0"
                ],
                [
                  "test_cytoscapeFormat_3",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_cytoscapeFormat_1",
                  "0"
                ],
                [
                  "test_cytoscapeFormat_2",
                  "0"
                ],
                [
                  "test_cytoscapeFormat_5",
                  "0"
                ],
                [
                  "test_cytoscapeFormat_6",
                  "0"
                ],
                [
                  "test_cytoscapeFormat_4",
                  "0"
                ],
                [
                  "test_cytoscapeFormat_3",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_cytoscapeFormat_1",
                "false"
              ],
              [
                "test_cytoscapeFormat_2",
                "false"
              ],
              [
                "test_cytoscapeFormat_5",
                "false"
              ],
              [
                "test_cytoscapeFormat_6",
                "false"
              ],
              [
                "test_cytoscapeFormat_4",
                "false"
              ],
              [
                "test_cytoscapeFormat_3",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cytoscapeFormat_1",
                "false"
              ],
              [
                "test_cytoscapeFormat_2",
                "false"
              ],
              [
                "test_cytoscapeFormat_5",
                "false"
              ],
              [
                "test_cytoscapeFormat_6",
                "false"
              ],
              [
                "test_cytoscapeFormat_4",
                "false"
              ],
              [
                "test_cytoscapeFormat_3",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_cytoscapeFormat_1",
                "1"
              ],
              [
                "test_cytoscapeFormat_2",
                "1"
              ],
              [
                "test_cytoscapeFormat_5",
                "1"
              ],
              [
                "test_cytoscapeFormat_6",
                "1"
              ],
              [
                "test_cytoscapeFormat_4",
                "1"
              ],
              [
                "test_cytoscapeFormat_3",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_cytoscapeFormat_1",
                [
                  "reality",
                  "expectation"
                ]
              ],
              [
                "test_cytoscapeFormat_2",
                [
                  "reality",
                  "expectation"
                ]
              ],
              [
                "test_cytoscapeFormat_5",
                [
                  "reality",
                  "expectation"
                ]
              ],
              [
                "test_cytoscapeFormat_6",
                [
                  "reality",
                  "expectation"
                ]
              ],
              [
                "test_cytoscapeFormat_4",
                [
                  "reality",
                  "expectation"
                ]
              ],
              [
                "test_cytoscapeFormat_3",
                [
                  "reality",
                  "expectation"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_cytoscapeFormat_1",
                []
              ],
              [
                "test_cytoscapeFormat_2",
                []
              ],
              [
                "test_cytoscapeFormat_5",
                []
              ],
              [
                "test_cytoscapeFormat_6",
                []
              ],
              [
                "test_cytoscapeFormat_4",
                []
              ],
              [
                "test_cytoscapeFormat_3",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7063845729447013,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_cytoscapeFormat_2",
                  "test_cytoscapeFormat_3",
                  0.778498944161523
                ],
                [
                  "test_cytoscapeFormat_3",
                  "test_cytoscapeFormat_5",
                  0.8447367914999205
                ],
                [
                  "test_cytoscapeFormat_1",
                  "test_cytoscapeFormat_6",
                  0.5617467761896284
                ],
                [
                  "test_cytoscapeFormat_1",
                  "test_cytoscapeFormat_2",
                  0.5785419118799024
                ],
                [
                  "test_cytoscapeFormat_5",
                  "test_cytoscapeFormat_6",
                  0.6405126152203486
                ],
                [
                  "test_cytoscapeFormat_4",
                  "test_cytoscapeFormat_6",
                  0.760608730574164
                ],
                [
                  "test_cytoscapeFormat_1",
                  "test_cytoscapeFormat_4",
                  0.5539117094069974
                ],
                [
                  "test_cytoscapeFormat_2",
                  "test_cytoscapeFormat_5",
                  0.6963106238227914
                ],
                [
                  "test_cytoscapeFormat_1",
                  "test_cytoscapeFormat_3",
                  0.4954336943068623
                ],
                [
                  "test_cytoscapeFormat_1",
                  "test_cytoscapeFormat_5",
                  0.6154574548966636
                ],
                [
                  "test_cytoscapeFormat_2",
                  "test_cytoscapeFormat_6",
                  0.9198662110077999
                ],
                [
                  "test_cytoscapeFormat_2",
                  "test_cytoscapeFormat_4",
                  0.8268688657895648
                ],
                [
                  "test_cytoscapeFormat_3",
                  "test_cytoscapeFormat_6",
                  0.7161148740394329
                ],
                [
                  "test_cytoscapeFormat_3",
                  "test_cytoscapeFormat_4",
                  0.8571593913749195
                ],
                [
                  "test_cytoscapeFormat_4",
                  "test_cytoscapeFormat_5",
                  0.75
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_cytoscapeFormat_1",
                "false"
              ],
              [
                "test_cytoscapeFormat_2",
                "false"
              ],
              [
                "test_cytoscapeFormat_5",
                "false"
              ],
              [
                "test_cytoscapeFormat_6",
                "false"
              ],
              [
                "test_cytoscapeFormat_4",
                "false"
              ],
              [
                "test_cytoscapeFormat_3",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      }
    ]
  },
  {
    "name": "ffscraper_\u0026_tests_\u0026_ffscrapertests_\u0026_test_format_predicate.py",
    "testCases": [
      {
        "name": "predicateFormatTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_predicateFormat_7",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_predicateFormat_9",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_predicateFormat_8",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_predicateFormat_2",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_predicateFormat_3",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_predicateFormat_5",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_predicateFormat_1",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_predicateFormat_4",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_predicateFormat_6",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_predicateFormat_7",
                  "[]"
                ],
                [
                  "test_predicateFormat_9",
                  "[]"
                ],
                [
                  "test_predicateFormat_8",
                  "[]"
                ],
                [
                  "test_predicateFormat_2",
                  "[]"
                ],
                [
                  "test_predicateFormat_3",
                  "[]"
                ],
                [
                  "test_predicateFormat_5",
                  "[]"
                ],
                [
                  "test_predicateFormat_1",
                  "[]"
                ],
                [
                  "test_predicateFormat_4",
                  "[]"
                ],
                [
                  "test_predicateFormat_6",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_predicateFormat_7",
                  "false"
                ],
                [
                  "test_predicateFormat_9",
                  "false"
                ],
                [
                  "test_predicateFormat_8",
                  "false"
                ],
                [
                  "test_predicateFormat_2",
                  "false"
                ],
                [
                  "test_predicateFormat_3",
                  "false"
                ],
                [
                  "test_predicateFormat_5",
                  "false"
                ],
                [
                  "test_predicateFormat_1",
                  "false"
                ],
                [
                  "test_predicateFormat_4",
                  "false"
                ],
                [
                  "test_predicateFormat_6",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_predicateFormat_7",
                  "false"
                ],
                [
                  "test_predicateFormat_9",
                  "false"
                ],
                [
                  "test_predicateFormat_8",
                  "false"
                ],
                [
                  "test_predicateFormat_2",
                  "false"
                ],
                [
                  "test_predicateFormat_3",
                  "false"
                ],
                [
                  "test_predicateFormat_5",
                  "false"
                ],
                [
                  "test_predicateFormat_1",
                  "false"
                ],
                [
                  "test_predicateFormat_4",
                  "false"
                ],
                [
                  "test_predicateFormat_6",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_predicateFormat_7",
                  "false"
                ],
                [
                  "test_predicateFormat_9",
                  "false"
                ],
                [
                  "test_predicateFormat_8",
                  "false"
                ],
                [
                  "test_predicateFormat_2",
                  "false"
                ],
                [
                  "test_predicateFormat_3",
                  "false"
                ],
                [
                  "test_predicateFormat_5",
                  "false"
                ],
                [
                  "test_predicateFormat_1",
                  "false"
                ],
                [
                  "test_predicateFormat_4",
                  "false"
                ],
                [
                  "test_predicateFormat_6",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_predicateFormat_7",
                  "false"
                ],
                [
                  "test_predicateFormat_9",
                  "false"
                ],
                [
                  "test_predicateFormat_8",
                  "false"
                ],
                [
                  "test_predicateFormat_2",
                  "false"
                ],
                [
                  "test_predicateFormat_3",
                  "false"
                ],
                [
                  "test_predicateFormat_5",
                  "false"
                ],
                [
                  "test_predicateFormat_1",
                  "false"
                ],
                [
                  "test_predicateFormat_4",
                  "false"
                ],
                [
                  "test_predicateFormat_6",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_predicateFormat_7",
                "false"
              ],
              [
                "test_predicateFormat_9",
                "false"
              ],
              [
                "test_predicateFormat_8",
                "false"
              ],
              [
                "test_predicateFormat_2",
                "false"
              ],
              [
                "test_predicateFormat_3",
                "false"
              ],
              [
                "test_predicateFormat_5",
                "false"
              ],
              [
                "test_predicateFormat_1",
                "false"
              ],
              [
                "test_predicateFormat_4",
                "false"
              ],
              [
                "test_predicateFormat_6",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_predicateFormat_7",
                "false"
              ],
              [
                "test_predicateFormat_9",
                "false"
              ],
              [
                "test_predicateFormat_8",
                "false"
              ],
              [
                "test_predicateFormat_2",
                "false"
              ],
              [
                "test_predicateFormat_3",
                "false"
              ],
              [
                "test_predicateFormat_5",
                "false"
              ],
              [
                "test_predicateFormat_1",
                "false"
              ],
              [
                "test_predicateFormat_4",
                "false"
              ],
              [
                "test_predicateFormat_6",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_predicateFormat_7",
                []
              ],
              [
                "test_predicateFormat_9",
                []
              ],
              [
                "test_predicateFormat_8",
                []
              ],
              [
                "test_predicateFormat_2",
                []
              ],
              [
                "test_predicateFormat_3",
                []
              ],
              [
                "test_predicateFormat_5",
                []
              ],
              [
                "test_predicateFormat_1",
                []
              ],
              [
                "test_predicateFormat_4",
                []
              ],
              [
                "test_predicateFormat_6",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_predicateFormat_7",
                "false"
              ],
              [
                "test_predicateFormat_9",
                "false"
              ],
              [
                "test_predicateFormat_8",
                "false"
              ],
              [
                "test_predicateFormat_2",
                "false"
              ],
              [
                "test_predicateFormat_3",
                "false"
              ],
              [
                "test_predicateFormat_5",
                "false"
              ],
              [
                "test_predicateFormat_1",
                "false"
              ],
              [
                "test_predicateFormat_4",
                "false"
              ],
              [
                "test_predicateFormat_6",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_predicateFormat_7",
                "false"
              ],
              [
                "test_predicateFormat_9",
                "false"
              ],
              [
                "test_predicateFormat_8",
                "false"
              ],
              [
                "test_predicateFormat_2",
                "false"
              ],
              [
                "test_predicateFormat_3",
                "false"
              ],
              [
                "test_predicateFormat_5",
                "false"
              ],
              [
                "test_predicateFormat_1",
                "false"
              ],
              [
                "test_predicateFormat_4",
                "false"
              ],
              [
                "test_predicateFormat_6",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_predicateFormat_7",
                  "0"
                ],
                [
                  "test_predicateFormat_9",
                  "0"
                ],
                [
                  "test_predicateFormat_8",
                  "0"
                ],
                [
                  "test_predicateFormat_2",
                  "0"
                ],
                [
                  "test_predicateFormat_3",
                  "0"
                ],
                [
                  "test_predicateFormat_5",
                  "0"
                ],
                [
                  "test_predicateFormat_1",
                  "0"
                ],
                [
                  "test_predicateFormat_4",
                  "0"
                ],
                [
                  "test_predicateFormat_6",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_predicateFormat_7",
                  "0"
                ],
                [
                  "test_predicateFormat_9",
                  "0"
                ],
                [
                  "test_predicateFormat_8",
                  "0"
                ],
                [
                  "test_predicateFormat_2",
                  "0"
                ],
                [
                  "test_predicateFormat_3",
                  "0"
                ],
                [
                  "test_predicateFormat_5",
                  "0"
                ],
                [
                  "test_predicateFormat_1",
                  "0"
                ],
                [
                  "test_predicateFormat_4",
                  "0"
                ],
                [
                  "test_predicateFormat_6",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_predicateFormat_7",
                "false"
              ],
              [
                "test_predicateFormat_9",
                "false"
              ],
              [
                "test_predicateFormat_8",
                "false"
              ],
              [
                "test_predicateFormat_2",
                "false"
              ],
              [
                "test_predicateFormat_3",
                "false"
              ],
              [
                "test_predicateFormat_5",
                "false"
              ],
              [
                "test_predicateFormat_1",
                "false"
              ],
              [
                "test_predicateFormat_4",
                "false"
              ],
              [
                "test_predicateFormat_6",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_predicateFormat_7",
                "false"
              ],
              [
                "test_predicateFormat_9",
                "false"
              ],
              [
                "test_predicateFormat_8",
                "false"
              ],
              [
                "test_predicateFormat_2",
                "false"
              ],
              [
                "test_predicateFormat_3",
                "false"
              ],
              [
                "test_predicateFormat_5",
                "false"
              ],
              [
                "test_predicateFormat_1",
                "false"
              ],
              [
                "test_predicateFormat_4",
                "false"
              ],
              [
                "test_predicateFormat_6",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_predicateFormat_7",
                "1"
              ],
              [
                "test_predicateFormat_9",
                "1"
              ],
              [
                "test_predicateFormat_8",
                "1"
              ],
              [
                "test_predicateFormat_2",
                "1"
              ],
              [
                "test_predicateFormat_3",
                "1"
              ],
              [
                "test_predicateFormat_5",
                "1"
              ],
              [
                "test_predicateFormat_1",
                "1"
              ],
              [
                "test_predicateFormat_4",
                "1"
              ],
              [
                "test_predicateFormat_6",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_predicateFormat_7",
                [
                  "reality",
                  "expectation"
                ]
              ],
              [
                "test_predicateFormat_9",
                [
                  "reality",
                  "expectation"
                ]
              ],
              [
                "test_predicateFormat_8",
                [
                  "reality",
                  "expectation"
                ]
              ],
              [
                "test_predicateFormat_2",
                [
                  "reality",
                  "expectation"
                ]
              ],
              [
                "test_predicateFormat_3",
                [
                  "reality",
                  "expectation"
                ]
              ],
              [
                "test_predicateFormat_5",
                [
                  "reality",
                  "expectation"
                ]
              ],
              [
                "test_predicateFormat_1",
                [
                  "reality",
                  "expectation"
                ]
              ],
              [
                "test_predicateFormat_4",
                [
                  "reality",
                  "expectation"
                ]
              ],
              [
                "test_predicateFormat_6",
                [
                  "reality",
                  "expectation"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_predicateFormat_7",
                []
              ],
              [
                "test_predicateFormat_9",
                []
              ],
              [
                "test_predicateFormat_8",
                []
              ],
              [
                "test_predicateFormat_2",
                []
              ],
              [
                "test_predicateFormat_3",
                []
              ],
              [
                "test_predicateFormat_5",
                []
              ],
              [
                "test_predicateFormat_1",
                []
              ],
              [
                "test_predicateFormat_4",
                []
              ],
              [
                "test_predicateFormat_6",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7293413794200974,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_predicateFormat_3",
                  "test_predicateFormat_8",
                  0.65991201759609
                ],
                [
                  "test_predicateFormat_3",
                  "test_predicateFormat_4",
                  0.9139076937674137
                ],
                [
                  "test_predicateFormat_4",
                  "test_predicateFormat_9",
                  0.6892556229607353
                ],
                [
                  "test_predicateFormat_2",
                  "test_predicateFormat_6",
                  0.9057894597833126
                ],
                [
                  "test_predicateFormat_7",
                  "test_predicateFormat_8",
                  0.7902633289178096
                ],
                [
                  "test_predicateFormat_1",
                  "test_predicateFormat_8",
                  0.7396934513601644
                ],
                [
                  "test_predicateFormat_6",
                  "test_predicateFormat_7",
                  0.6822422923379533
                ],
                [
                  "test_predicateFormat_2",
                  "test_predicateFormat_8",
                  0.722897396012249
                ],
                [
                  "test_predicateFormat_3",
                  "test_predicateFormat_5",
                  0.8249579113843055
                ],
                [
                  "test_predicateFormat_7",
                  "test_predicateFormat_9",
                  0.7902633289178096
                ],
                [
                  "test_predicateFormat_3",
                  "test_predicateFormat_9",
                  0.65991201759609
                ],
                [
                  "test_predicateFormat_1",
                  "test_predicateFormat_9",
                  0.8101404467277991
                ],
                [
                  "test_predicateFormat_2",
                  "test_predicateFormat_7",
                  0.7155417527999327
                ],
                [
                  "test_predicateFormat_1",
                  "test_predicateFormat_3",
                  0.6405126152203486
                ],
                [
                  "test_predicateFormat_6",
                  "test_predicateFormat_9",
                  0.7658395810674836
                ],
                [
                  "test_predicateFormat_4",
                  "test_predicateFormat_5",
                  0.7693218186208295
                ],
                [
                  "test_predicateFormat_1",
                  "test_predicateFormat_7",
                  0.7844645405527362
                ],
                [
                  "test_predicateFormat_1",
                  "test_predicateFormat_6",
                  0.7108057085060271
                ],
                [
                  "test_predicateFormat_2",
                  "test_predicateFormat_9",
                  0.722897396012249
                ],
                [
                  "test_predicateFormat_4",
                  "test_predicateFormat_6",
                  0.7272727272727273
                ],
                [
                  "test_predicateFormat_8",
                  "test_predicateFormat_9",
                  0.870967741935484
                ],
                [
                  "test_predicateFormat_2",
                  "test_predicateFormat_5",
                  0.677772085586298
                ],
                [
                  "test_predicateFormat_6",
                  "test_predicateFormat_8",
                  0.6892556229607353
                ],
                [
                  "test_predicateFormat_1",
                  "test_predicateFormat_2",
                  0.7016464154456235
                ],
                [
                  "test_predicateFormat_3",
                  "test_predicateFormat_7",
                  0.6531972647421809
                ],
                [
                  "test_predicateFormat_5",
                  "test_predicateFormat_6",
                  0.6154574548966636
                ],
                [
                  "test_predicateFormat_5",
                  "test_predicateFormat_7",
                  0.5773502691896258
                ],
                [
                  "test_predicateFormat_2",
                  "test_predicateFormat_3",
                  0.7759402897989853
                ],
                [
                  "test_predicateFormat_4",
                  "test_predicateFormat_8",
                  0.6892556229607353
                ],
                [
                  "test_predicateFormat_4",
                  "test_predicateFormat_7",
                  0.6822422923379533
                ],
                [
                  "test_predicateFormat_1",
                  "test_predicateFormat_5",
                  0.5661385170722979
                ],
                [
                  "test_predicateFormat_5",
                  "test_predicateFormat_8",
                  0.7777137710478191
                ],
                [
                  "test_predicateFormat_2",
                  "test_predicateFormat_4",
                  0.8104432008587533
                ],
                [
                  "test_predicateFormat_3",
                  "test_predicateFormat_6",
                  0.6963106238227914
                ],
                [
                  "test_predicateFormat_5",
                  "test_predicateFormat_9",
                  0.7777137710478191
                ],
                [
                  "test_predicateFormat_1",
                  "test_predicateFormat_4",
                  0.6689936080056726
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_predicateFormat_7",
                "false"
              ],
              [
                "test_predicateFormat_9",
                "false"
              ],
              [
                "test_predicateFormat_8",
                "false"
              ],
              [
                "test_predicateFormat_2",
                "false"
              ],
              [
                "test_predicateFormat_3",
                "false"
              ],
              [
                "test_predicateFormat_5",
                "false"
              ],
              [
                "test_predicateFormat_1",
                "false"
              ],
              [
                "test_predicateFormat_4",
                "false"
              ],
              [
                "test_predicateFormat_6",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 9
      }
    ]
  }
]