[
  {
    "name": "dragonfire_\u0026_sr_\u0026_decoder_test.py",
    "testCases": [
      {
        "name": "DecoderPipelineTests",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "testRecognize",
                  "[]"
                ],
                [
                  "testWav",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "testRecognize",
                  "[]"
                ],
                [
                  "testWav",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "testRecognize",
                  "true"
                ],
                [
                  "testWav",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "testRecognize",
                  "false"
                ],
                [
                  "testWav",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": true
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "testRecognize",
                  "false"
                ],
                [
                  "testWav",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "testRecognize",
                  "false"
                ],
                [
                  "testWav",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "testRecognize",
                "false"
              ],
              [
                "testWav",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "testRecognize",
                "false"
              ],
              [
                "testWav",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "testRecognize",
                [
                  "self.__class__.words",
                  "self.__class__.finished"
                ]
              ],
              [
                "testWav",
                [
                  "self.__class__.words",
                  "self.__class__.finished"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "testRecognize",
                "false"
              ],
              [
                "testWav",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "testRecognize",
                "false"
              ],
              [
                "testWav",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "testRecognize",
                  "0"
                ],
                [
                  "testWav",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "testRecognize",
                  "0"
                ],
                [
                  "testWav",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": true,
            "detail": [
              [
                "testRecognize",
                "true"
              ],
              [
                "testWav",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": true,
            "detail": [
              [
                "testRecognize",
                "true"
              ],
              [
                "testWav",
                "true"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "testRecognize",
                "0"
              ],
              [
                "testWav",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "testRecognize",
                [
                  "p",
                  "data",
                  "stream"
                ]
              ],
              [
                "testWav",
                [
                  "f"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "testRecognize",
                [
                  "self.finished",
                  "self.decoder_pipeline",
                  "self.words"
                ]
              ],
              [
                "testWav",
                [
                  "self.finished",
                  "self.decoder_pipeline",
                  "self.words"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.45331094816020495,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "testRecognize",
                  "testWav",
                  0.45331094816020495
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "testRecognize",
                "false"
              ],
              [
                "testWav",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  }
]