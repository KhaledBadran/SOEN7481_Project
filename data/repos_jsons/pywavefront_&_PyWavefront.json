[
  {
    "name": "tests_\u0026_test_mesh.py",
    "testCases": [
      {
        "name": "TestMesh",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "testMeshName",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "testMeshName",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "testMeshName",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "testMeshName",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "testMeshName",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "testMeshName",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "testMeshName",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "testMeshName",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "testMeshName",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "testMeshName",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "testMeshName",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "testMeshName",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "testMeshName",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "testMeshName",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "testMeshName",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "testMeshName",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "testMeshName",
                [
                  "my_mesh"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "testMeshName",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "testMeshName",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_cache.py",
    "testCases": [
      {
        "name": "CacheTest",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_load",
                  "[PyCallExpression: self.assertFalse, PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual, PyCallExpression: self.assertNotEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_create",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_missing_meta",
                  "[PyCallExpression: self.assertFalse, PyCallExpression: self.assertFalse]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_load",
                  "[]"
                ],
                [
                  "test_create",
                  "[]"
                ],
                [
                  "test_missing_meta",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_load",
                  "true"
                ],
                [
                  "test_create",
                  "false"
                ],
                [
                  "test_missing_meta",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_load",
                  "false"
                ],
                [
                  "test_create",
                  "true"
                ],
                [
                  "test_missing_meta",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_load",
                  "false"
                ],
                [
                  "test_create",
                  "false"
                ],
                [
                  "test_missing_meta",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_load",
                  "false"
                ],
                [
                  "test_create",
                  "false"
                ],
                [
                  "test_missing_meta",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_load",
                "false"
              ],
              [
                "test_create",
                "false"
              ],
              [
                "test_missing_meta",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_load",
                "false"
              ],
              [
                "test_create",
                "false"
              ],
              [
                "test_missing_meta",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_load",
                []
              ],
              [
                "test_create",
                []
              ],
              [
                "test_missing_meta",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_load",
                "false"
              ],
              [
                "test_create",
                "false"
              ],
              [
                "test_missing_meta",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_load",
                "false"
              ],
              [
                "test_create",
                "false"
              ],
              [
                "test_missing_meta",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_load",
                  "0"
                ],
                [
                  "test_create",
                  "0"
                ],
                [
                  "test_missing_meta",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_load",
                  "0"
                ],
                [
                  "test_create",
                  "0"
                ],
                [
                  "test_missing_meta",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_load",
                "false"
              ],
              [
                "test_create",
                "false"
              ],
              [
                "test_missing_meta",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_load",
                "false"
              ],
              [
                "test_create",
                "false"
              ],
              [
                "test_missing_meta",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_load",
                "8"
              ],
              [
                "test_create",
                "3"
              ],
              [
                "test_missing_meta",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_load",
                [
                  "scene_post",
                  "post_mat",
                  "scene_pre"
                ]
              ],
              [
                "test_create",
                [
                  "scene"
                ]
              ],
              [
                "test_missing_meta",
                [
                  "scene_post",
                  "scene_pre"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_load",
                []
              ],
              [
                "test_create",
                []
              ],
              [
                "test_missing_meta",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5180407061379779,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_create",
                  "test_load",
                  0.48113599968497267
                ],
                [
                  "test_create",
                  "test_missing_meta",
                  0.4604696317147035
                ],
                [
                  "test_load",
                  "test_missing_meta",
                  0.6125164870142576
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_load",
                "false"
              ],
              [
                "test_create",
                "false"
              ],
              [
                "test_missing_meta",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_parser.py",
    "testCases": [
      {
        "name": "TestParsers",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "testObjName",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "testObjVertices",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "testObjMaterials",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "testObjName",
                  "[]"
                ],
                [
                  "testObjVertices",
                  "[]"
                ],
                [
                  "testObjMaterials",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "testObjName",
                  "false"
                ],
                [
                  "testObjVertices",
                  "false"
                ],
                [
                  "testObjMaterials",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "testObjName",
                  "false"
                ],
                [
                  "testObjVertices",
                  "false"
                ],
                [
                  "testObjMaterials",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "testObjName",
                  "false"
                ],
                [
                  "testObjVertices",
                  "false"
                ],
                [
                  "testObjMaterials",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "testObjName",
                  "false"
                ],
                [
                  "testObjVertices",
                  "false"
                ],
                [
                  "testObjMaterials",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "testObjName",
                "false"
              ],
              [
                "testObjVertices",
                "false"
              ],
              [
                "testObjMaterials",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "testObjName",
                "false"
              ],
              [
                "testObjVertices",
                "false"
              ],
              [
                "testObjMaterials",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "testObjName",
                [
                  "self.maxDiff"
                ]
              ],
              [
                "testObjVertices",
                [
                  "self.maxDiff"
                ]
              ],
              [
                "testObjMaterials",
                [
                  "self.maxDiff"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "testObjName",
                "false"
              ],
              [
                "testObjVertices",
                "false"
              ],
              [
                "testObjMaterials",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "testObjName",
                "false"
              ],
              [
                "testObjVertices",
                "false"
              ],
              [
                "testObjMaterials",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "testObjName",
                  "0"
                ],
                [
                  "testObjVertices",
                  "0"
                ],
                [
                  "testObjMaterials",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "testObjName",
                  "0"
                ],
                [
                  "testObjVertices",
                  "0"
                ],
                [
                  "testObjMaterials",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "testObjName",
                "false"
              ],
              [
                "testObjVertices",
                "false"
              ],
              [
                "testObjMaterials",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "testObjName",
                "false"
              ],
              [
                "testObjVertices",
                "false"
              ],
              [
                "testObjMaterials",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "testObjName",
                "2"
              ],
              [
                "testObjVertices",
                "3"
              ],
              [
                "testObjMaterials",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "testObjName",
                []
              ],
              [
                "testObjVertices",
                []
              ],
              [
                "testObjMaterials",
                [
                  "material2",
                  "material1"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "testObjName",
                [
                  "self.mesh1",
                  "self.mesh2"
                ]
              ],
              [
                "testObjVertices",
                [
                  "self.mesh1",
                  "self.mesh2"
                ]
              ],
              [
                "testObjMaterials",
                [
                  "self.mesh1",
                  "self.mesh2"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.23379181986975917,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "testObjName",
                  "testObjVertices",
                  0.05569892553617364
                ],
                [
                  "testObjName",
                  "testObjMaterials",
                  0.4749304077710322
                ],
                [
                  "testObjVertices",
                  "testObjMaterials",
                  0.17074612630207173
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "testObjName",
                "false"
              ],
              [
                "testObjVertices",
                "false"
              ],
              [
                "testObjMaterials",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      },
      {
        "name": "TestParserCollectFaces",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "testTrianglesOnlyFaces",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual]"
                ],
                [
                  "testQuadFaces",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual]"
                ],
                [
                  "testArbitrarilyMixedFaced",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "testTrianglesOnlyFaces",
                  "[]"
                ],
                [
                  "testQuadFaces",
                  "[]"
                ],
                [
                  "testArbitrarilyMixedFaced",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "testTrianglesOnlyFaces",
                  "false"
                ],
                [
                  "testQuadFaces",
                  "false"
                ],
                [
                  "testArbitrarilyMixedFaced",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "testTrianglesOnlyFaces",
                  "false"
                ],
                [
                  "testQuadFaces",
                  "false"
                ],
                [
                  "testArbitrarilyMixedFaced",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "testTrianglesOnlyFaces",
                  "false"
                ],
                [
                  "testQuadFaces",
                  "false"
                ],
                [
                  "testArbitrarilyMixedFaced",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "testTrianglesOnlyFaces",
                  "false"
                ],
                [
                  "testQuadFaces",
                  "false"
                ],
                [
                  "testArbitrarilyMixedFaced",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "testTrianglesOnlyFaces",
                "false"
              ],
              [
                "testQuadFaces",
                "false"
              ],
              [
                "testArbitrarilyMixedFaced",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "testTrianglesOnlyFaces",
                "false"
              ],
              [
                "testQuadFaces",
                "false"
              ],
              [
                "testArbitrarilyMixedFaced",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "testTrianglesOnlyFaces",
                []
              ],
              [
                "testQuadFaces",
                []
              ],
              [
                "testArbitrarilyMixedFaced",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "testTrianglesOnlyFaces",
                "false"
              ],
              [
                "testQuadFaces",
                "false"
              ],
              [
                "testArbitrarilyMixedFaced",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "testTrianglesOnlyFaces",
                "false"
              ],
              [
                "testQuadFaces",
                "false"
              ],
              [
                "testArbitrarilyMixedFaced",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "testTrianglesOnlyFaces",
                  "0"
                ],
                [
                  "testQuadFaces",
                  "0"
                ],
                [
                  "testArbitrarilyMixedFaced",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "testTrianglesOnlyFaces",
                  "0"
                ],
                [
                  "testQuadFaces",
                  "0"
                ],
                [
                  "testArbitrarilyMixedFaced",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "testTrianglesOnlyFaces",
                "false"
              ],
              [
                "testQuadFaces",
                "false"
              ],
              [
                "testArbitrarilyMixedFaced",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "testTrianglesOnlyFaces",
                "false"
              ],
              [
                "testQuadFaces",
                "false"
              ],
              [
                "testArbitrarilyMixedFaced",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "testTrianglesOnlyFaces",
                "2"
              ],
              [
                "testQuadFaces",
                "2"
              ],
              [
                "testArbitrarilyMixedFaced",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "testTrianglesOnlyFaces",
                []
              ],
              [
                "testQuadFaces",
                []
              ],
              [
                "testArbitrarilyMixedFaced",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "testTrianglesOnlyFaces",
                [
                  "self.meshes"
                ]
              ],
              [
                "testQuadFaces",
                [
                  "self.meshes"
                ]
              ],
              [
                "testArbitrarilyMixedFaced",
                [
                  "self.meshes"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7180450343340109,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "testQuadFaces",
                  "testArbitrarilyMixedFaced",
                  0.987242131840138
                ],
                [
                  "testTrianglesOnlyFaces",
                  "testQuadFaces",
                  0.609749843620211
                ],
                [
                  "testTrianglesOnlyFaces",
                  "testArbitrarilyMixedFaced",
                  0.557143127541684
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "testTrianglesOnlyFaces",
                "false"
              ],
              [
                "testQuadFaces",
                "false"
              ],
              [
                "testArbitrarilyMixedFaced",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      },
      {
        "name": "TestParserMissingMaterials",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_missing_material_create",
                  "[]"
                ],
                [
                  "test_missing_material_error",
                  "[PyCallExpression: self.assertRaises]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_missing_material_create",
                  "[]"
                ],
                [
                  "test_missing_material_error",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_missing_material_create",
                  "false"
                ],
                [
                  "test_missing_material_error",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_missing_material_create",
                  "false"
                ],
                [
                  "test_missing_material_error",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_missing_material_create",
                  "false"
                ],
                [
                  "test_missing_material_error",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_missing_material_create",
                  "false"
                ],
                [
                  "test_missing_material_error",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_material_create",
                "false"
              ],
              [
                "test_missing_material_error",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_material_create",
                "false"
              ],
              [
                "test_missing_material_error",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_material_create",
                []
              ],
              [
                "test_missing_material_error",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_material_create",
                "false"
              ],
              [
                "test_missing_material_error",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_material_create",
                "false"
              ],
              [
                "test_missing_material_error",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_missing_material_create",
                  "0"
                ],
                [
                  "test_missing_material_error",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_missing_material_create",
                  "0"
                ],
                [
                  "test_missing_material_error",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_material_create",
                "false"
              ],
              [
                "test_missing_material_error",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_material_create",
                "false"
              ],
              [
                "test_missing_material_error",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_missing_material_create",
                "0"
              ],
              [
                "test_missing_material_error",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_material_create",
                []
              ],
              [
                "test_missing_material_error",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_material_create",
                []
              ],
              [
                "test_missing_material_error",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.704469953676347,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_missing_material_error",
                  "test_missing_material_create",
                  0.704469953676347
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_material_create",
                "false"
              ],
              [
                "test_missing_material_error",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "TestParserVertexVariants",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "testObjNoUVs",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_undefined_normals",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "testObjNoNormals",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_undefined_uvs",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "testObjColors",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "testObjOnlyPositions",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "testObjNoUVs",
                  "[]"
                ],
                [
                  "test_undefined_normals",
                  "[]"
                ],
                [
                  "testObjNoNormals",
                  "[]"
                ],
                [
                  "test_undefined_uvs",
                  "[]"
                ],
                [
                  "testObjColors",
                  "[]"
                ],
                [
                  "testObjOnlyPositions",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "testObjNoUVs",
                  "false"
                ],
                [
                  "test_undefined_normals",
                  "false"
                ],
                [
                  "testObjNoNormals",
                  "false"
                ],
                [
                  "test_undefined_uvs",
                  "false"
                ],
                [
                  "testObjColors",
                  "false"
                ],
                [
                  "testObjOnlyPositions",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "testObjNoUVs",
                  "false"
                ],
                [
                  "test_undefined_normals",
                  "false"
                ],
                [
                  "testObjNoNormals",
                  "false"
                ],
                [
                  "test_undefined_uvs",
                  "false"
                ],
                [
                  "testObjColors",
                  "false"
                ],
                [
                  "testObjOnlyPositions",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "testObjNoUVs",
                  "false"
                ],
                [
                  "test_undefined_normals",
                  "false"
                ],
                [
                  "testObjNoNormals",
                  "false"
                ],
                [
                  "test_undefined_uvs",
                  "false"
                ],
                [
                  "testObjColors",
                  "false"
                ],
                [
                  "testObjOnlyPositions",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "testObjNoUVs",
                  "false"
                ],
                [
                  "test_undefined_normals",
                  "false"
                ],
                [
                  "testObjNoNormals",
                  "false"
                ],
                [
                  "test_undefined_uvs",
                  "false"
                ],
                [
                  "testObjColors",
                  "false"
                ],
                [
                  "testObjOnlyPositions",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "testObjNoUVs",
                "false"
              ],
              [
                "test_undefined_normals",
                "false"
              ],
              [
                "testObjNoNormals",
                "false"
              ],
              [
                "test_undefined_uvs",
                "false"
              ],
              [
                "testObjColors",
                "false"
              ],
              [
                "testObjOnlyPositions",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "testObjNoUVs",
                "false"
              ],
              [
                "test_undefined_normals",
                "false"
              ],
              [
                "testObjNoNormals",
                "false"
              ],
              [
                "test_undefined_uvs",
                "false"
              ],
              [
                "testObjColors",
                "false"
              ],
              [
                "testObjOnlyPositions",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "testObjNoUVs",
                []
              ],
              [
                "test_undefined_normals",
                []
              ],
              [
                "testObjNoNormals",
                []
              ],
              [
                "test_undefined_uvs",
                []
              ],
              [
                "testObjColors",
                []
              ],
              [
                "testObjOnlyPositions",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "testObjNoUVs",
                "false"
              ],
              [
                "test_undefined_normals",
                "false"
              ],
              [
                "testObjNoNormals",
                "false"
              ],
              [
                "test_undefined_uvs",
                "false"
              ],
              [
                "testObjColors",
                "false"
              ],
              [
                "testObjOnlyPositions",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "testObjNoUVs",
                "false"
              ],
              [
                "test_undefined_normals",
                "false"
              ],
              [
                "testObjNoNormals",
                "false"
              ],
              [
                "test_undefined_uvs",
                "false"
              ],
              [
                "testObjColors",
                "false"
              ],
              [
                "testObjOnlyPositions",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "testObjNoUVs",
                  "0"
                ],
                [
                  "test_undefined_normals",
                  "0"
                ],
                [
                  "testObjNoNormals",
                  "0"
                ],
                [
                  "test_undefined_uvs",
                  "0"
                ],
                [
                  "testObjColors",
                  "0"
                ],
                [
                  "testObjOnlyPositions",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "testObjNoUVs",
                  "0"
                ],
                [
                  "test_undefined_normals",
                  "0"
                ],
                [
                  "testObjNoNormals",
                  "0"
                ],
                [
                  "test_undefined_uvs",
                  "0"
                ],
                [
                  "testObjColors",
                  "0"
                ],
                [
                  "testObjOnlyPositions",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "testObjNoUVs",
                "false"
              ],
              [
                "test_undefined_normals",
                "false"
              ],
              [
                "testObjNoNormals",
                "false"
              ],
              [
                "test_undefined_uvs",
                "false"
              ],
              [
                "testObjColors",
                "false"
              ],
              [
                "testObjOnlyPositions",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "testObjNoUVs",
                "false"
              ],
              [
                "test_undefined_normals",
                "false"
              ],
              [
                "testObjNoNormals",
                "false"
              ],
              [
                "test_undefined_uvs",
                "false"
              ],
              [
                "testObjColors",
                "false"
              ],
              [
                "testObjOnlyPositions",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "testObjNoUVs",
                "3"
              ],
              [
                "test_undefined_normals",
                "2"
              ],
              [
                "testObjNoNormals",
                "3"
              ],
              [
                "test_undefined_uvs",
                "2"
              ],
              [
                "testObjColors",
                "3"
              ],
              [
                "testObjOnlyPositions",
                "3"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "testObjNoUVs",
                [
                  "meshes"
                ]
              ],
              [
                "test_undefined_normals",
                [
                  "meshes"
                ]
              ],
              [
                "testObjNoNormals",
                [
                  "meshes"
                ]
              ],
              [
                "test_undefined_uvs",
                [
                  "meshes"
                ]
              ],
              [
                "testObjColors",
                [
                  "meshes"
                ]
              ],
              [
                "testObjOnlyPositions",
                [
                  "meshes"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "testObjNoUVs",
                []
              ],
              [
                "test_undefined_normals",
                []
              ],
              [
                "testObjNoNormals",
                []
              ],
              [
                "test_undefined_uvs",
                []
              ],
              [
                "testObjColors",
                []
              ],
              [
                "testObjOnlyPositions",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9859326815817472,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "testObjNoNormals",
                  "test_undefined_normals",
                  0.9846389832559822
                ],
                [
                  "testObjNoNormals",
                  "testObjOnlyPositions",
                  0.9891101287255599
                ],
                [
                  "testObjColors",
                  "test_undefined_normals",
                  0.9959323024081719
                ],
                [
                  "test_undefined_uvs",
                  "test_undefined_normals",
                  0.9947164861951208
                ],
                [
                  "testObjNoUVs",
                  "test_undefined_uvs",
                  0.9895704767431936
                ],
                [
                  "testObjOnlyPositions",
                  "test_undefined_uvs",
                  0.9629096236514952
                ],
                [
                  "testObjNoNormals",
                  "testObjColors",
                  0.9927607543237157
                ],
                [
                  "testObjNoUVs",
                  "test_undefined_normals",
                  0.99060920343836
                ],
                [
                  "testObjOnlyPositions",
                  "test_undefined_normals",
                  0.9663240084279737
                ],
                [
                  "testObjNoUVs",
                  "testObjColors",
                  0.9950776921507999
                ],
                [
                  "testObjOnlyPositions",
                  "testObjColors",
                  0.977215695280222
                ],
                [
                  "testObjNoNormals",
                  "test_undefined_uvs",
                  0.9781549966007154
                ],
                [
                  "testObjNoNormals",
                  "testObjNoUVs",
                  0.9944247372723786
                ],
                [
                  "testObjNoUVs",
                  "testObjOnlyPositions",
                  0.9865830325091289
                ],
                [
                  "testObjColors",
                  "test_undefined_uvs",
                  0.9909621027433897
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "testObjNoUVs",
                "false"
              ],
              [
                "test_undefined_normals",
                "false"
              ],
              [
                "testObjNoNormals",
                "false"
              ],
              [
                "test_undefined_uvs",
                "false"
              ],
              [
                "testObjColors",
                "false"
              ],
              [
                "testObjOnlyPositions",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      },
      {
        "name": "TestMtlParser",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "testMtlNi",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "testMtlDiffuse",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "testMtlSpecular",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "testMtlIllum",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "testMtlTransparency",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "testMtlAmbient",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "testTextures",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "testMtlName",
                  "[PyCallExpression: self.assertIn, PyCallExpression: self.assertIn]"
                ],
                [
                  "testMtlShininess",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "testMtlNi",
                  "[]"
                ],
                [
                  "testMtlDiffuse",
                  "[]"
                ],
                [
                  "testMtlSpecular",
                  "[]"
                ],
                [
                  "testMtlIllum",
                  "[]"
                ],
                [
                  "testMtlTransparency",
                  "[]"
                ],
                [
                  "testMtlAmbient",
                  "[]"
                ],
                [
                  "testTextures",
                  "[]"
                ],
                [
                  "testMtlName",
                  "[]"
                ],
                [
                  "testMtlShininess",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "testMtlNi",
                  "false"
                ],
                [
                  "testMtlDiffuse",
                  "false"
                ],
                [
                  "testMtlSpecular",
                  "false"
                ],
                [
                  "testMtlIllum",
                  "false"
                ],
                [
                  "testMtlTransparency",
                  "false"
                ],
                [
                  "testMtlAmbient",
                  "false"
                ],
                [
                  "testTextures",
                  "false"
                ],
                [
                  "testMtlName",
                  "false"
                ],
                [
                  "testMtlShininess",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "testMtlNi",
                  "false"
                ],
                [
                  "testMtlDiffuse",
                  "false"
                ],
                [
                  "testMtlSpecular",
                  "false"
                ],
                [
                  "testMtlIllum",
                  "false"
                ],
                [
                  "testMtlTransparency",
                  "false"
                ],
                [
                  "testMtlAmbient",
                  "false"
                ],
                [
                  "testTextures",
                  "false"
                ],
                [
                  "testMtlName",
                  "false"
                ],
                [
                  "testMtlShininess",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "testMtlNi",
                  "false"
                ],
                [
                  "testMtlDiffuse",
                  "false"
                ],
                [
                  "testMtlSpecular",
                  "false"
                ],
                [
                  "testMtlIllum",
                  "false"
                ],
                [
                  "testMtlTransparency",
                  "false"
                ],
                [
                  "testMtlAmbient",
                  "false"
                ],
                [
                  "testTextures",
                  "false"
                ],
                [
                  "testMtlName",
                  "false"
                ],
                [
                  "testMtlShininess",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "testMtlNi",
                  "false"
                ],
                [
                  "testMtlDiffuse",
                  "false"
                ],
                [
                  "testMtlSpecular",
                  "false"
                ],
                [
                  "testMtlIllum",
                  "false"
                ],
                [
                  "testMtlTransparency",
                  "false"
                ],
                [
                  "testMtlAmbient",
                  "false"
                ],
                [
                  "testTextures",
                  "false"
                ],
                [
                  "testMtlName",
                  "false"
                ],
                [
                  "testMtlShininess",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "testMtlNi",
                "false"
              ],
              [
                "testMtlDiffuse",
                "false"
              ],
              [
                "testMtlSpecular",
                "false"
              ],
              [
                "testMtlIllum",
                "false"
              ],
              [
                "testMtlTransparency",
                "false"
              ],
              [
                "testMtlAmbient",
                "false"
              ],
              [
                "testTextures",
                "false"
              ],
              [
                "testMtlName",
                "false"
              ],
              [
                "testMtlShininess",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "testMtlNi",
                "false"
              ],
              [
                "testMtlDiffuse",
                "false"
              ],
              [
                "testMtlSpecular",
                "false"
              ],
              [
                "testMtlIllum",
                "false"
              ],
              [
                "testMtlTransparency",
                "false"
              ],
              [
                "testMtlAmbient",
                "false"
              ],
              [
                "testTextures",
                "false"
              ],
              [
                "testMtlName",
                "false"
              ],
              [
                "testMtlShininess",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "testMtlNi",
                [
                  "self.materials",
                  "self.material2"
                ]
              ],
              [
                "testMtlDiffuse",
                [
                  "self.materials",
                  "self.material2"
                ]
              ],
              [
                "testMtlSpecular",
                [
                  "self.materials",
                  "self.material2"
                ]
              ],
              [
                "testMtlIllum",
                [
                  "self.materials",
                  "self.material2"
                ]
              ],
              [
                "testMtlTransparency",
                [
                  "self.materials",
                  "self.material2"
                ]
              ],
              [
                "testMtlAmbient",
                [
                  "self.materials",
                  "self.material2"
                ]
              ],
              [
                "testTextures",
                [
                  "self.materials",
                  "self.material2"
                ]
              ],
              [
                "testMtlName",
                [
                  "self.material2",
                  "self.material1"
                ]
              ],
              [
                "testMtlShininess",
                [
                  "self.materials",
                  "self.material2"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "testMtlNi",
                "false"
              ],
              [
                "testMtlDiffuse",
                "false"
              ],
              [
                "testMtlSpecular",
                "false"
              ],
              [
                "testMtlIllum",
                "false"
              ],
              [
                "testMtlTransparency",
                "false"
              ],
              [
                "testMtlAmbient",
                "false"
              ],
              [
                "testTextures",
                "false"
              ],
              [
                "testMtlName",
                "false"
              ],
              [
                "testMtlShininess",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "testMtlNi",
                "true"
              ],
              [
                "testMtlDiffuse",
                "false"
              ],
              [
                "testMtlSpecular",
                "false"
              ],
              [
                "testMtlIllum",
                "true"
              ],
              [
                "testMtlTransparency",
                "true"
              ],
              [
                "testMtlAmbient",
                "false"
              ],
              [
                "testTextures",
                "false"
              ],
              [
                "testMtlName",
                "false"
              ],
              [
                "testMtlShininess",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "testMtlNi",
                  "0"
                ],
                [
                  "testMtlDiffuse",
                  "0"
                ],
                [
                  "testMtlSpecular",
                  "0"
                ],
                [
                  "testMtlIllum",
                  "0"
                ],
                [
                  "testMtlTransparency",
                  "0"
                ],
                [
                  "testMtlAmbient",
                  "0"
                ],
                [
                  "testTextures",
                  "0"
                ],
                [
                  "testMtlName",
                  "0"
                ],
                [
                  "testMtlShininess",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "testMtlNi",
                  "0"
                ],
                [
                  "testMtlDiffuse",
                  "0"
                ],
                [
                  "testMtlSpecular",
                  "0"
                ],
                [
                  "testMtlIllum",
                  "0"
                ],
                [
                  "testMtlTransparency",
                  "0"
                ],
                [
                  "testMtlAmbient",
                  "0"
                ],
                [
                  "testTextures",
                  "0"
                ],
                [
                  "testMtlName",
                  "0"
                ],
                [
                  "testMtlShininess",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "testMtlNi",
                "false"
              ],
              [
                "testMtlDiffuse",
                "false"
              ],
              [
                "testMtlSpecular",
                "false"
              ],
              [
                "testMtlIllum",
                "false"
              ],
              [
                "testMtlTransparency",
                "false"
              ],
              [
                "testMtlAmbient",
                "false"
              ],
              [
                "testTextures",
                "false"
              ],
              [
                "testMtlName",
                "false"
              ],
              [
                "testMtlShininess",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "testMtlNi",
                "false"
              ],
              [
                "testMtlDiffuse",
                "false"
              ],
              [
                "testMtlSpecular",
                "false"
              ],
              [
                "testMtlIllum",
                "false"
              ],
              [
                "testMtlTransparency",
                "false"
              ],
              [
                "testMtlAmbient",
                "false"
              ],
              [
                "testTextures",
                "false"
              ],
              [
                "testMtlName",
                "false"
              ],
              [
                "testMtlShininess",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "testMtlNi",
                "1"
              ],
              [
                "testMtlDiffuse",
                "1"
              ],
              [
                "testMtlSpecular",
                "1"
              ],
              [
                "testMtlIllum",
                "1"
              ],
              [
                "testMtlTransparency",
                "1"
              ],
              [
                "testMtlAmbient",
                "1"
              ],
              [
                "testTextures",
                "12"
              ],
              [
                "testMtlName",
                "2"
              ],
              [
                "testMtlShininess",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "testMtlNi",
                []
              ],
              [
                "testMtlDiffuse",
                []
              ],
              [
                "testMtlSpecular",
                []
              ],
              [
                "testMtlIllum",
                []
              ],
              [
                "testMtlTransparency",
                []
              ],
              [
                "testMtlAmbient",
                []
              ],
              [
                "testTextures",
                []
              ],
              [
                "testMtlName",
                []
              ],
              [
                "testMtlShininess",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "testMtlNi",
                [
                  "self.material1"
                ]
              ],
              [
                "testMtlDiffuse",
                [
                  "self.material1"
                ]
              ],
              [
                "testMtlSpecular",
                [
                  "self.material1"
                ]
              ],
              [
                "testMtlIllum",
                [
                  "self.material1"
                ]
              ],
              [
                "testMtlTransparency",
                [
                  "self.material1"
                ]
              ],
              [
                "testMtlAmbient",
                [
                  "self.material1"
                ]
              ],
              [
                "testTextures",
                [
                  "self.material1"
                ]
              ],
              [
                "testMtlName",
                [
                  "self.materials"
                ]
              ],
              [
                "testMtlShininess",
                [
                  "self.material1"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.46650000044106527,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "testMtlAmbient",
                  "testTextures",
                  0.19387368815947367
                ],
                [
                  "testMtlShininess",
                  "testMtlAmbient",
                  0.6356417261637282
                ],
                [
                  "testMtlSpecular",
                  "testMtlNi",
                  0.4923659639173309
                ],
                [
                  "testMtlName",
                  "testMtlShininess",
                  0.5850179393017045
                ],
                [
                  "testMtlName",
                  "testMtlTransparency",
                  0.27116307227332015
                ],
                [
                  "testMtlShininess",
                  "testMtlIllum",
                  0.4719399037242694
                ],
                [
                  "testMtlAmbient",
                  "testMtlDiffuse",
                  0.669438681395203
                ],
                [
                  "testMtlDiffuse",
                  "testMtlNi",
                  0.4923659639173309
                ],
                [
                  "testMtlName",
                  "testMtlAmbient",
                  0.43461349368017654
                ],
                [
                  "testMtlAmbient",
                  "testMtlIllum",
                  0.4242640687119285
                ],
                [
                  "testMtlTransparency",
                  "testTextures",
                  0.3960360432634953
                ],
                [
                  "testMtlTransparency",
                  "testMtlNi",
                  0.7627700713964739
                ],
                [
                  "testMtlShininess",
                  "testMtlNi",
                  0.5142594772265799
                ],
                [
                  "testMtlShininess",
                  "testMtlDiffuse",
                  0.6672976811635084
                ],
                [
                  "testMtlSpecular",
                  "testMtlIllum",
                  0.38729833462074165
                ],
                [
                  "testMtlName",
                  "testMtlSpecular",
                  0.39674602380793605
                ],
                [
                  "testMtlIllum",
                  "testTextures",
                  0.3960360432634953
                ],
                [
                  "testMtlSpecular",
                  "testMtlTransparency",
                  0.5163977794943222
                ],
                [
                  "testMtlAmbient",
                  "testMtlNi",
                  0.40451991747794525
                ],
                [
                  "testMtlName",
                  "testTextures",
                  0.21478070044459788
                ],
                [
                  "testMtlTransparency",
                  "testMtlIllum",
                  0.6999999999999998
                ],
                [
                  "testMtlName",
                  "testMtlDiffuse",
                  0.39674602380793605
                ],
                [
                  "testMtlAmbient",
                  "testMtlTransparency",
                  0.4242640687119285
                ],
                [
                  "testMtlSpecular",
                  "testTextures",
                  0.20320115812726203
                ],
                [
                  "testMtlDiffuse",
                  "testTextures",
                  0.17698165385277662
                ],
                [
                  "testMtlShininess",
                  "testTextures",
                  0.2670074458987351
                ],
                [
                  "testMtlDiffuse",
                  "testMtlSpecular",
                  0.9444444444444444
                ],
                [
                  "testMtlIllum",
                  "testMtlNi",
                  0.6674238124719146
                ],
                [
                  "testMtlShininess",
                  "testMtlSpecular",
                  0.6672976811635084
                ],
                [
                  "testMtlName",
                  "testMtlIllum",
                  0.27116307227332015
                ],
                [
                  "testMtlDiffuse",
                  "testMtlIllum",
                  0.38729833462074165
                ],
                [
                  "testMtlShininess",
                  "testMtlTransparency",
                  0.5393598899705936
                ],
                [
                  "testMtlAmbient",
                  "testMtlSpecular",
                  0.669438681395203
                ],
                [
                  "testMtlName",
                  "testMtlNi",
                  0.2585438449975096
                ],
                [
                  "testMtlDiffuse",
                  "testMtlTransparency",
                  0.5163977794943222
                ],
                [
                  "testMtlNi",
                  "testTextures",
                  0.3776055512445916
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "testMtlNi",
                "false"
              ],
              [
                "testMtlDiffuse",
                "false"
              ],
              [
                "testMtlSpecular",
                "false"
              ],
              [
                "testMtlIllum",
                "false"
              ],
              [
                "testMtlTransparency",
                "false"
              ],
              [
                "testMtlAmbient",
                "false"
              ],
              [
                "testTextures",
                "false"
              ],
              [
                "testMtlName",
                "false"
              ],
              [
                "testMtlShininess",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 9
      },
      {
        "name": "TestParserFailure",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "testMissingParsedFile",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "testMissingParseFunction",
                  "[PyCallExpression: self.assertRaises]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "testMissingParsedFile",
                  "[]"
                ],
                [
                  "testMissingParseFunction",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "testMissingParsedFile",
                  "false"
                ],
                [
                  "testMissingParseFunction",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "testMissingParsedFile",
                  "false"
                ],
                [
                  "testMissingParseFunction",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "testMissingParsedFile",
                  "false"
                ],
                [
                  "testMissingParseFunction",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "testMissingParsedFile",
                  "false"
                ],
                [
                  "testMissingParseFunction",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "testMissingParsedFile",
                "false"
              ],
              [
                "testMissingParseFunction",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "testMissingParsedFile",
                "false"
              ],
              [
                "testMissingParseFunction",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "testMissingParsedFile",
                []
              ],
              [
                "testMissingParseFunction",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "testMissingParsedFile",
                "false"
              ],
              [
                "testMissingParseFunction",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "testMissingParsedFile",
                "false"
              ],
              [
                "testMissingParseFunction",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "testMissingParsedFile",
                  "0"
                ],
                [
                  "testMissingParseFunction",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "testMissingParsedFile",
                  "0"
                ],
                [
                  "testMissingParseFunction",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "testMissingParsedFile",
                "false"
              ],
              [
                "testMissingParseFunction",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "testMissingParsedFile",
                "false"
              ],
              [
                "testMissingParseFunction",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "testMissingParsedFile",
                "1"
              ],
              [
                "testMissingParseFunction",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "testMissingParsedFile",
                [
                  "parser",
                  "file_name"
                ]
              ],
              [
                "testMissingParseFunction",
                [
                  "parser"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "testMissingParsedFile",
                []
              ],
              [
                "testMissingParseFunction",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5019011475427825,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "testMissingParseFunction",
                  "testMissingParsedFile",
                  0.5019011475427825
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "testMissingParsedFile",
                "false"
              ],
              [
                "testMissingParseFunction",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "tests_\u0026_test_texture.py",
    "testCases": [
      {
        "name": "TestTexture",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "testPathVsName",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "testPathedImageName",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue]"
                ],
                [
                  "testMissingFile",
                  "[PyCallExpression: self.assertFalse, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_options",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "testPathVsName",
                  "[]"
                ],
                [
                  "testPathedImageName",
                  "[]"
                ],
                [
                  "testMissingFile",
                  "[]"
                ],
                [
                  "test_options",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "testPathVsName",
                  "false"
                ],
                [
                  "testPathedImageName",
                  "false"
                ],
                [
                  "testMissingFile",
                  "false"
                ],
                [
                  "test_options",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "testPathVsName",
                  "false"
                ],
                [
                  "testPathedImageName",
                  "false"
                ],
                [
                  "testMissingFile",
                  "false"
                ],
                [
                  "test_options",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "testPathVsName",
                  "false"
                ],
                [
                  "testPathedImageName",
                  "false"
                ],
                [
                  "testMissingFile",
                  "false"
                ],
                [
                  "test_options",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "testPathVsName",
                  "false"
                ],
                [
                  "testPathedImageName",
                  "false"
                ],
                [
                  "testMissingFile",
                  "false"
                ],
                [
                  "test_options",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "testPathVsName",
                "false"
              ],
              [
                "testPathedImageName",
                "false"
              ],
              [
                "testMissingFile",
                "false"
              ],
              [
                "test_options",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "testPathVsName",
                "false"
              ],
              [
                "testPathedImageName",
                "false"
              ],
              [
                "testMissingFile",
                "false"
              ],
              [
                "test_options",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "testPathVsName",
                []
              ],
              [
                "testPathedImageName",
                []
              ],
              [
                "testMissingFile",
                []
              ],
              [
                "test_options",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "testPathVsName",
                "false"
              ],
              [
                "testPathedImageName",
                "false"
              ],
              [
                "testMissingFile",
                "false"
              ],
              [
                "test_options",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "testPathVsName",
                "false"
              ],
              [
                "testPathedImageName",
                "false"
              ],
              [
                "testMissingFile",
                "false"
              ],
              [
                "test_options",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "testPathVsName",
                  "0"
                ],
                [
                  "testPathedImageName",
                  "0"
                ],
                [
                  "testMissingFile",
                  "0"
                ],
                [
                  "test_options",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "testPathVsName",
                  "0"
                ],
                [
                  "testPathedImageName",
                  "0"
                ],
                [
                  "testMissingFile",
                  "0"
                ],
                [
                  "test_options",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "testPathVsName",
                "false"
              ],
              [
                "testPathedImageName",
                "false"
              ],
              [
                "testMissingFile",
                "false"
              ],
              [
                "test_options",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "testPathVsName",
                "false"
              ],
              [
                "testPathedImageName",
                "false"
              ],
              [
                "testMissingFile",
                "false"
              ],
              [
                "test_options",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "testPathVsName",
                "8"
              ],
              [
                "testPathedImageName",
                "6"
              ],
              [
                "testMissingFile",
                "2"
              ],
              [
                "test_options",
                "13"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "testPathVsName",
                [
                  "texture"
                ]
              ],
              [
                "testPathedImageName",
                [
                  "texture"
                ]
              ],
              [
                "testMissingFile",
                [
                  "texture"
                ]
              ],
              [
                "test_options",
                [
                  "opts",
                  "texture",
                  "params"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "testPathVsName",
                []
              ],
              [
                "testPathedImageName",
                []
              ],
              [
                "testMissingFile",
                []
              ],
              [
                "test_options",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.2922762619395762,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "testMissingFile",
                  "testPathVsName",
                  0.3170260258097708
                ],
                [
                  "testPathedImageName",
                  "test_options",
                  0.2924682389426517
                ],
                [
                  "testPathedImageName",
                  "testMissingFile",
                  0.322317316435946
                ],
                [
                  "testPathVsName",
                  "test_options",
                  0.21036568662112595
                ],
                [
                  "testMissingFile",
                  "test_options",
                  0.12448785072399741
                ],
                [
                  "testPathedImageName",
                  "testPathVsName",
                  0.48699245310396505
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "testPathVsName",
                "false"
              ],
              [
                "testPathedImageName",
                "false"
              ],
              [
                "testMissingFile",
                "false"
              ],
              [
                "test_options",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "tests_\u0026_test_material.py",
    "testCases": [
      {
        "name": "TestMaterial",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "testSetSpecular",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "testUnsetTexture",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "testPadLight",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "testSetDiffuse",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "testSetAmbient",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "testSetEmissive",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "testSetAlpha",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "testSetTexture",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "testTransparency",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "testSetSpecular",
                  "[]"
                ],
                [
                  "testUnsetTexture",
                  "[]"
                ],
                [
                  "testPadLight",
                  "[]"
                ],
                [
                  "testSetDiffuse",
                  "[]"
                ],
                [
                  "testSetAmbient",
                  "[]"
                ],
                [
                  "testSetEmissive",
                  "[]"
                ],
                [
                  "testSetAlpha",
                  "[]"
                ],
                [
                  "testSetTexture",
                  "[]"
                ],
                [
                  "testTransparency",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "testSetSpecular",
                  "false"
                ],
                [
                  "testUnsetTexture",
                  "false"
                ],
                [
                  "testPadLight",
                  "false"
                ],
                [
                  "testSetDiffuse",
                  "false"
                ],
                [
                  "testSetAmbient",
                  "false"
                ],
                [
                  "testSetEmissive",
                  "false"
                ],
                [
                  "testSetAlpha",
                  "false"
                ],
                [
                  "testSetTexture",
                  "false"
                ],
                [
                  "testTransparency",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "testSetSpecular",
                  "false"
                ],
                [
                  "testUnsetTexture",
                  "false"
                ],
                [
                  "testPadLight",
                  "false"
                ],
                [
                  "testSetDiffuse",
                  "false"
                ],
                [
                  "testSetAmbient",
                  "false"
                ],
                [
                  "testSetEmissive",
                  "false"
                ],
                [
                  "testSetAlpha",
                  "false"
                ],
                [
                  "testSetTexture",
                  "false"
                ],
                [
                  "testTransparency",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "testSetSpecular",
                  "false"
                ],
                [
                  "testUnsetTexture",
                  "false"
                ],
                [
                  "testPadLight",
                  "false"
                ],
                [
                  "testSetDiffuse",
                  "false"
                ],
                [
                  "testSetAmbient",
                  "false"
                ],
                [
                  "testSetEmissive",
                  "false"
                ],
                [
                  "testSetAlpha",
                  "false"
                ],
                [
                  "testSetTexture",
                  "false"
                ],
                [
                  "testTransparency",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "testSetSpecular",
                  "false"
                ],
                [
                  "testUnsetTexture",
                  "false"
                ],
                [
                  "testPadLight",
                  "false"
                ],
                [
                  "testSetDiffuse",
                  "false"
                ],
                [
                  "testSetAmbient",
                  "false"
                ],
                [
                  "testSetEmissive",
                  "false"
                ],
                [
                  "testSetAlpha",
                  "false"
                ],
                [
                  "testSetTexture",
                  "false"
                ],
                [
                  "testTransparency",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "testSetSpecular",
                "false"
              ],
              [
                "testUnsetTexture",
                "false"
              ],
              [
                "testPadLight",
                "false"
              ],
              [
                "testSetDiffuse",
                "false"
              ],
              [
                "testSetAmbient",
                "false"
              ],
              [
                "testSetEmissive",
                "false"
              ],
              [
                "testSetAlpha",
                "false"
              ],
              [
                "testSetTexture",
                "false"
              ],
              [
                "testTransparency",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "testSetSpecular",
                "false"
              ],
              [
                "testUnsetTexture",
                "false"
              ],
              [
                "testPadLight",
                "false"
              ],
              [
                "testSetDiffuse",
                "false"
              ],
              [
                "testSetAmbient",
                "false"
              ],
              [
                "testSetEmissive",
                "false"
              ],
              [
                "testSetAlpha",
                "false"
              ],
              [
                "testSetTexture",
                "false"
              ],
              [
                "testTransparency",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "testSetSpecular",
                []
              ],
              [
                "testUnsetTexture",
                []
              ],
              [
                "testPadLight",
                []
              ],
              [
                "testSetDiffuse",
                []
              ],
              [
                "testSetAmbient",
                []
              ],
              [
                "testSetEmissive",
                []
              ],
              [
                "testSetAlpha",
                []
              ],
              [
                "testSetTexture",
                []
              ],
              [
                "testTransparency",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "testSetSpecular",
                "false"
              ],
              [
                "testUnsetTexture",
                "false"
              ],
              [
                "testPadLight",
                "false"
              ],
              [
                "testSetDiffuse",
                "false"
              ],
              [
                "testSetAmbient",
                "false"
              ],
              [
                "testSetEmissive",
                "false"
              ],
              [
                "testSetAlpha",
                "false"
              ],
              [
                "testSetTexture",
                "false"
              ],
              [
                "testTransparency",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "testSetSpecular",
                "false"
              ],
              [
                "testUnsetTexture",
                "false"
              ],
              [
                "testPadLight",
                "false"
              ],
              [
                "testSetDiffuse",
                "false"
              ],
              [
                "testSetAmbient",
                "false"
              ],
              [
                "testSetEmissive",
                "false"
              ],
              [
                "testSetAlpha",
                "true"
              ],
              [
                "testSetTexture",
                "false"
              ],
              [
                "testTransparency",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "testSetSpecular",
                  "0"
                ],
                [
                  "testUnsetTexture",
                  "0"
                ],
                [
                  "testPadLight",
                  "0"
                ],
                [
                  "testSetDiffuse",
                  "0"
                ],
                [
                  "testSetAmbient",
                  "0"
                ],
                [
                  "testSetEmissive",
                  "0"
                ],
                [
                  "testSetAlpha",
                  "0"
                ],
                [
                  "testSetTexture",
                  "0"
                ],
                [
                  "testTransparency",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "testSetSpecular",
                  "0"
                ],
                [
                  "testUnsetTexture",
                  "0"
                ],
                [
                  "testPadLight",
                  "0"
                ],
                [
                  "testSetDiffuse",
                  "0"
                ],
                [
                  "testSetAmbient",
                  "0"
                ],
                [
                  "testSetEmissive",
                  "0"
                ],
                [
                  "testSetAlpha",
                  "0"
                ],
                [
                  "testSetTexture",
                  "0"
                ],
                [
                  "testTransparency",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "testSetSpecular",
                "false"
              ],
              [
                "testUnsetTexture",
                "false"
              ],
              [
                "testPadLight",
                "false"
              ],
              [
                "testSetDiffuse",
                "false"
              ],
              [
                "testSetAmbient",
                "false"
              ],
              [
                "testSetEmissive",
                "false"
              ],
              [
                "testSetAlpha",
                "false"
              ],
              [
                "testSetTexture",
                "false"
              ],
              [
                "testTransparency",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "testSetSpecular",
                "false"
              ],
              [
                "testUnsetTexture",
                "false"
              ],
              [
                "testPadLight",
                "false"
              ],
              [
                "testSetDiffuse",
                "false"
              ],
              [
                "testSetAmbient",
                "false"
              ],
              [
                "testSetEmissive",
                "false"
              ],
              [
                "testSetAlpha",
                "false"
              ],
              [
                "testSetTexture",
                "false"
              ],
              [
                "testTransparency",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "testSetSpecular",
                "1"
              ],
              [
                "testUnsetTexture",
                "1"
              ],
              [
                "testPadLight",
                "1"
              ],
              [
                "testSetDiffuse",
                "1"
              ],
              [
                "testSetAmbient",
                "1"
              ],
              [
                "testSetEmissive",
                "1"
              ],
              [
                "testSetAlpha",
                "4"
              ],
              [
                "testSetTexture",
                "4"
              ],
              [
                "testTransparency",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "testSetSpecular",
                []
              ],
              [
                "testUnsetTexture",
                []
              ],
              [
                "testPadLight",
                []
              ],
              [
                "testSetDiffuse",
                []
              ],
              [
                "testSetAmbient",
                []
              ],
              [
                "testSetEmissive",
                []
              ],
              [
                "testSetAlpha",
                []
              ],
              [
                "testSetTexture",
                []
              ],
              [
                "testTransparency",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "testSetSpecular",
                [
                  "self.material"
                ]
              ],
              [
                "testUnsetTexture",
                [
                  "self.material"
                ]
              ],
              [
                "testPadLight",
                [
                  "self.material"
                ]
              ],
              [
                "testSetDiffuse",
                [
                  "self.material"
                ]
              ],
              [
                "testSetAmbient",
                [
                  "self.material"
                ]
              ],
              [
                "testSetEmissive",
                [
                  "self.material"
                ]
              ],
              [
                "testSetAlpha",
                [
                  "self.material"
                ]
              ],
              [
                "testSetTexture",
                [
                  "self.material"
                ]
              ],
              [
                "testTransparency",
                [
                  "self.material"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5092850238527032,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "testSetDiffuse",
                  "testSetSpecular",
                  0.8695819912499182
                ],
                [
                  "testSetTexture",
                  "testSetAmbient",
                  0.5031781961435418
                ],
                [
                  "testPadLight",
                  "testSetSpecular",
                  0.7431605356175381
                ],
                [
                  "testUnsetTexture",
                  "testPadLight",
                  0.3363363969981562
                ],
                [
                  "testUnsetTexture",
                  "testSetAlpha",
                  0.36595122157317495
                ],
                [
                  "testSetTexture",
                  "testTransparency",
                  0.38124642583151164
                ],
                [
                  "testSetAmbient",
                  "testTransparency",
                  0.4766031238193982
                ],
                [
                  "testPadLight",
                  "testSetEmissive",
                  0.7431605356175381
                ],
                [
                  "testSetAlpha",
                  "testSetSpecular",
                  0.49393916995360654
                ],
                [
                  "testSetDiffuse",
                  "testSetEmissive",
                  0.8695819912499182
                ],
                [
                  "testSetTexture",
                  "testUnsetTexture",
                  0.4863981746034856
                ],
                [
                  "testSetTexture",
                  "testPadLight",
                  0.35137019269127184
                ],
                [
                  "testSetTexture",
                  "testSetAlpha",
                  0.48528356668577266
                ],
                [
                  "testUnsetTexture",
                  "testSetDiffuse",
                  0.40929374234328036
                ],
                [
                  "testUnsetTexture",
                  "testSetAmbient",
                  0.3660533256519379
                ],
                [
                  "testSetDiffuse",
                  "testTransparency",
                  0.36893239368631087
                ],
                [
                  "testUnsetTexture",
                  "testSetEmissive",
                  0.3922322702763681
                ],
                [
                  "testSetAmbient",
                  "testSetEmissive",
                  0.6394535450837623
                ],
                [
                  "testSetAlpha",
                  "testTransparency",
                  0.42688278913848304
                ],
                [
                  "testSetTexture",
                  "testSetSpecular",
                  0.4493032216809934
                ],
                [
                  "testPadLight",
                  "testSetAlpha",
                  0.39531272103637405
                ],
                [
                  "testPadLight",
                  "testSetDiffuse",
                  0.7413994892191247
                ],
                [
                  "testPadLight",
                  "testSetAmbient",
                  0.5512908203729234
                ],
                [
                  "testSetTexture",
                  "testSetEmissive",
                  0.4493032216809934
                ],
                [
                  "testSetTexture",
                  "testSetDiffuse",
                  0.4983175829094258
                ],
                [
                  "testUnsetTexture",
                  "testSetSpecular",
                  0.3922322702763681
                ],
                [
                  "testSetSpecular",
                  "testSetEmissive",
                  0.8888888888888888
                ],
                [
                  "testSetAmbient",
                  "testSetSpecular",
                  0.6394535450837623
                ],
                [
                  "testSetAlpha",
                  "testSetDiffuse",
                  0.5072433834629432
                ],
                [
                  "testSetAlpha",
                  "testSetAmbient",
                  0.4438989181268476
                ],
                [
                  "testSetAlpha",
                  "testSetEmissive",
                  0.49393916995360654
                ],
                [
                  "testSetSpecular",
                  "testTransparency",
                  0.35355339059327373
                ],
                [
                  "testPadLight",
                  "testTransparency",
                  0.36380343755449945
                ],
                [
                  "testUnsetTexture",
                  "testTransparency",
                  0.34668762264076824
                ],
                [
                  "testSetEmissive",
                  "testTransparency",
                  0.35355339059327373
                ],
                [
                  "testSetDiffuse",
                  "testSetAmbient",
                  0.7574401964082748
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "testSetSpecular",
                "false"
              ],
              [
                "testUnsetTexture",
                "true"
              ],
              [
                "testPadLight",
                "false"
              ],
              [
                "testSetDiffuse",
                "false"
              ],
              [
                "testSetAmbient",
                "false"
              ],
              [
                "testSetEmissive",
                "false"
              ],
              [
                "testSetAlpha",
                "false"
              ],
              [
                "testSetTexture",
                "false"
              ],
              [
                "testTransparency",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 9
      },
      {
        "name": "TestInvalidMaterial",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_missing_texture",
                  "[PyCallExpression: self.assertFalse]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_missing_texture",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_missing_texture",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_missing_texture",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_missing_texture",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_missing_texture",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_texture",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_texture",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_texture",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_texture",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_texture",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_missing_texture",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_missing_texture",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_texture",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_texture",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_texture",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_texture",
                [
                  "material"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_texture",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_missing_texture",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "tests_\u0026_test_wavefront.py",
    "testCases": [
      {
        "name": "TestWavefront",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "testAddDuplicateMesh",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "testMeshMaterialVertices",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "testMeshes",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "testMeshList",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "testMaterials",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "testAddDuplicateMesh",
                  "[]"
                ],
                [
                  "testMeshMaterialVertices",
                  "[]"
                ],
                [
                  "testMeshes",
                  "[]"
                ],
                [
                  "testMeshList",
                  "[]"
                ],
                [
                  "testMaterials",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "testAddDuplicateMesh",
                  "false"
                ],
                [
                  "testMeshMaterialVertices",
                  "false"
                ],
                [
                  "testMeshes",
                  "false"
                ],
                [
                  "testMeshList",
                  "false"
                ],
                [
                  "testMaterials",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "testAddDuplicateMesh",
                  "false"
                ],
                [
                  "testMeshMaterialVertices",
                  "false"
                ],
                [
                  "testMeshes",
                  "false"
                ],
                [
                  "testMeshList",
                  "false"
                ],
                [
                  "testMaterials",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "testAddDuplicateMesh",
                  "false"
                ],
                [
                  "testMeshMaterialVertices",
                  "false"
                ],
                [
                  "testMeshes",
                  "false"
                ],
                [
                  "testMeshList",
                  "false"
                ],
                [
                  "testMaterials",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "testAddDuplicateMesh",
                  "false"
                ],
                [
                  "testMeshMaterialVertices",
                  "false"
                ],
                [
                  "testMeshes",
                  "false"
                ],
                [
                  "testMeshList",
                  "false"
                ],
                [
                  "testMaterials",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "testAddDuplicateMesh",
                "false"
              ],
              [
                "testMeshMaterialVertices",
                "false"
              ],
              [
                "testMeshes",
                "false"
              ],
              [
                "testMeshList",
                "false"
              ],
              [
                "testMaterials",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "testAddDuplicateMesh",
                "false"
              ],
              [
                "testMeshMaterialVertices",
                "false"
              ],
              [
                "testMeshes",
                "false"
              ],
              [
                "testMeshList",
                "false"
              ],
              [
                "testMaterials",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "testAddDuplicateMesh",
                [
                  "self.material_names"
                ]
              ],
              [
                "testMeshMaterialVertices",
                [
                  "self.material_names"
                ]
              ],
              [
                "testMeshes",
                [
                  "self.material_names"
                ]
              ],
              [
                "testMeshList",
                [
                  "self.material_names"
                ]
              ],
              [
                "testMaterials",
                [
                  "self.mesh_names"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "testAddDuplicateMesh",
                "false"
              ],
              [
                "testMeshMaterialVertices",
                "false"
              ],
              [
                "testMeshes",
                "false"
              ],
              [
                "testMeshList",
                "false"
              ],
              [
                "testMaterials",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "testAddDuplicateMesh",
                "false"
              ],
              [
                "testMeshMaterialVertices",
                "true"
              ],
              [
                "testMeshes",
                "false"
              ],
              [
                "testMeshList",
                "false"
              ],
              [
                "testMaterials",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "testAddDuplicateMesh",
                  "0"
                ],
                [
                  "testMeshMaterialVertices",
                  "0"
                ],
                [
                  "testMeshes",
                  "0"
                ],
                [
                  "testMeshList",
                  "0"
                ],
                [
                  "testMaterials",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "testAddDuplicateMesh",
                  "0"
                ],
                [
                  "testMeshMaterialVertices",
                  "0"
                ],
                [
                  "testMeshes",
                  "0"
                ],
                [
                  "testMeshList",
                  "0"
                ],
                [
                  "testMaterials",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "testAddDuplicateMesh",
                "false"
              ],
              [
                "testMeshMaterialVertices",
                "false"
              ],
              [
                "testMeshes",
                "false"
              ],
              [
                "testMeshList",
                "false"
              ],
              [
                "testMaterials",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "testAddDuplicateMesh",
                "false"
              ],
              [
                "testMeshMaterialVertices",
                "false"
              ],
              [
                "testMeshes",
                "false"
              ],
              [
                "testMeshList",
                "false"
              ],
              [
                "testMaterials",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "testAddDuplicateMesh",
                "2"
              ],
              [
                "testMeshMaterialVertices",
                "1"
              ],
              [
                "testMeshes",
                "2"
              ],
              [
                "testMeshList",
                "2"
              ],
              [
                "testMaterials",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "testAddDuplicateMesh",
                []
              ],
              [
                "testMeshMaterialVertices",
                []
              ],
              [
                "testMeshes",
                []
              ],
              [
                "testMeshList",
                []
              ],
              [
                "testMaterials",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "testAddDuplicateMesh",
                [
                  "self.mesh_names",
                  "self.meshes"
                ]
              ],
              [
                "testMeshMaterialVertices",
                [
                  "self.mesh_names",
                  "self.meshes"
                ]
              ],
              [
                "testMeshes",
                [
                  "self.mesh_names",
                  "self.meshes"
                ]
              ],
              [
                "testMeshList",
                [
                  "self.mesh_names",
                  "self.meshes"
                ]
              ],
              [
                "testMaterials",
                [
                  "self.meshes",
                  "self.material_names"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5293529768861547,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "testMaterials",
                  "testMeshList",
                  0.636929755298482
                ],
                [
                  "testMeshes",
                  "testMeshMaterialVertices",
                  0.4862645390838647
                ],
                [
                  "testMaterials",
                  "testMeshes",
                  0.7586206896551725
                ],
                [
                  "testAddDuplicateMesh",
                  "testMeshMaterialVertices",
                  0.46291004988627577
                ],
                [
                  "testMeshList",
                  "testAddDuplicateMesh",
                  0.48507125007266594
                ],
                [
                  "testMaterials",
                  "testMeshMaterialVertices",
                  0.44574249416020933
                ],
                [
                  "testMeshList",
                  "testMeshMaterialVertices",
                  0.48651277256732783
                ],
                [
                  "testMaterials",
                  "testAddDuplicateMesh",
                  0.28887415229138963
                ],
                [
                  "testMeshes",
                  "testMeshList",
                  0.7961621941231025
                ],
                [
                  "testMeshes",
                  "testAddDuplicateMesh",
                  0.44644187172305666
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "testAddDuplicateMesh",
                "false"
              ],
              [
                "testMeshMaterialVertices",
                "false"
              ],
              [
                "testMeshes",
                "false"
              ],
              [
                "testMeshList",
                "false"
              ],
              [
                "testMaterials",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      },
      {
        "name": "TestBrokenWavefront",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "testUnknownUsemtl",
                  "[PyCallExpression: self.assertRaises]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "testUnknownUsemtl",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "testUnknownUsemtl",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "testUnknownUsemtl",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "testUnknownUsemtl",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "testUnknownUsemtl",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "testUnknownUsemtl",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "testUnknownUsemtl",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "testUnknownUsemtl",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "testUnknownUsemtl",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "testUnknownUsemtl",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "testUnknownUsemtl",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "testUnknownUsemtl",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "testUnknownUsemtl",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "testUnknownUsemtl",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "testUnknownUsemtl",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "testUnknownUsemtl",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "testUnknownUsemtl",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "testUnknownUsemtl",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      },
      {
        "name": "TestNoMaterial",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "testMeshMaterialVertices",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "testMeshMaterialVertices",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "testMeshMaterialVertices",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "testMeshMaterialVertices",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "testMeshMaterialVertices",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "testMeshMaterialVertices",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "testMeshMaterialVertices",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "testMeshMaterialVertices",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "testMeshMaterialVertices",
                [
                  "self.material_names"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "testMeshMaterialVertices",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "testMeshMaterialVertices",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "testMeshMaterialVertices",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "testMeshMaterialVertices",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "testMeshMaterialVertices",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "testMeshMaterialVertices",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "testMeshMaterialVertices",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "testMeshMaterialVertices",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "testMeshMaterialVertices",
                [
                  "self.mesh_names",
                  "self.meshes"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "testMeshMaterialVertices",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  }
]