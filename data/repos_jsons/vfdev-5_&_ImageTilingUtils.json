[
  {
    "name": "tests_\u0026_test_const_size.py",
    "testCases": [
      {
        "name": "TestConstSizeTiles",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_wrong_args",
                  "[]"
                ],
                [
                  "test_as_iterator",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test__compute_number_of_tiles",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_wrong_index",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test__compute_float_overlapping",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_all",
                  "[PyCallExpression: self.assertGreater, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertLessEqual, PyCallExpression: self.assertGreaterEqual, PyCallExpression: self.assertLess, PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_wrong_args",
                  "[]"
                ],
                [
                  "test_as_iterator",
                  "[]"
                ],
                [
                  "test__compute_number_of_tiles",
                  "[]"
                ],
                [
                  "test_wrong_index",
                  "[]"
                ],
                [
                  "test__compute_float_overlapping",
                  "[]"
                ],
                [
                  "test_all",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_wrong_args",
                  "false"
                ],
                [
                  "test_as_iterator",
                  "true"
                ],
                [
                  "test__compute_number_of_tiles",
                  "false"
                ],
                [
                  "test_wrong_index",
                  "false"
                ],
                [
                  "test__compute_float_overlapping",
                  "false"
                ],
                [
                  "test_all",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_wrong_args",
                  "false"
                ],
                [
                  "test_as_iterator",
                  "false"
                ],
                [
                  "test__compute_number_of_tiles",
                  "false"
                ],
                [
                  "test_wrong_index",
                  "false"
                ],
                [
                  "test__compute_float_overlapping",
                  "false"
                ],
                [
                  "test_all",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_wrong_args",
                  "false"
                ],
                [
                  "test_as_iterator",
                  "false"
                ],
                [
                  "test__compute_number_of_tiles",
                  "true"
                ],
                [
                  "test_wrong_index",
                  "false"
                ],
                [
                  "test__compute_float_overlapping",
                  "false"
                ],
                [
                  "test_all",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_wrong_args",
                  "false"
                ],
                [
                  "test_as_iterator",
                  "false"
                ],
                [
                  "test__compute_number_of_tiles",
                  "false"
                ],
                [
                  "test_wrong_index",
                  "false"
                ],
                [
                  "test__compute_float_overlapping",
                  "false"
                ],
                [
                  "test_all",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_wrong_args",
                "false"
              ],
              [
                "test_as_iterator",
                "false"
              ],
              [
                "test__compute_number_of_tiles",
                "false"
              ],
              [
                "test_wrong_index",
                "false"
              ],
              [
                "test__compute_float_overlapping",
                "false"
              ],
              [
                "test_all",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_wrong_args",
                "false"
              ],
              [
                "test_as_iterator",
                "false"
              ],
              [
                "test__compute_number_of_tiles",
                "false"
              ],
              [
                "test_wrong_index",
                "false"
              ],
              [
                "test__compute_float_overlapping",
                "false"
              ],
              [
                "test_all",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_wrong_args",
                []
              ],
              [
                "test_as_iterator",
                []
              ],
              [
                "test__compute_number_of_tiles",
                []
              ],
              [
                "test_wrong_index",
                []
              ],
              [
                "test__compute_float_overlapping",
                []
              ],
              [
                "test_all",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_wrong_args",
                "false"
              ],
              [
                "test_as_iterator",
                "false"
              ],
              [
                "test__compute_number_of_tiles",
                "false"
              ],
              [
                "test_wrong_index",
                "false"
              ],
              [
                "test__compute_float_overlapping",
                "false"
              ],
              [
                "test_all",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_wrong_args",
                "false"
              ],
              [
                "test_as_iterator",
                "false"
              ],
              [
                "test__compute_number_of_tiles",
                "true"
              ],
              [
                "test_wrong_index",
                "false"
              ],
              [
                "test__compute_float_overlapping",
                "false"
              ],
              [
                "test_all",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_wrong_args",
                  "0"
                ],
                [
                  "test_as_iterator",
                  "0"
                ],
                [
                  "test__compute_number_of_tiles",
                  "0"
                ],
                [
                  "test_wrong_index",
                  "0"
                ],
                [
                  "test__compute_float_overlapping",
                  "0"
                ],
                [
                  "test_all",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_wrong_args",
                  "0"
                ],
                [
                  "test_as_iterator",
                  "0"
                ],
                [
                  "test__compute_number_of_tiles",
                  "0"
                ],
                [
                  "test_wrong_index",
                  "0"
                ],
                [
                  "test__compute_float_overlapping",
                  "0"
                ],
                [
                  "test_all",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_wrong_args",
                "false"
              ],
              [
                "test_as_iterator",
                "false"
              ],
              [
                "test__compute_number_of_tiles",
                "false"
              ],
              [
                "test_wrong_index",
                "false"
              ],
              [
                "test__compute_float_overlapping",
                "false"
              ],
              [
                "test_all",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_wrong_args",
                "false"
              ],
              [
                "test_as_iterator",
                "false"
              ],
              [
                "test__compute_number_of_tiles",
                "false"
              ],
              [
                "test_wrong_index",
                "false"
              ],
              [
                "test__compute_float_overlapping",
                "false"
              ],
              [
                "test_all",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_wrong_args",
                "3"
              ],
              [
                "test_as_iterator",
                "3"
              ],
              [
                "test__compute_number_of_tiles",
                "4"
              ],
              [
                "test_wrong_index",
                "1"
              ],
              [
                "test__compute_float_overlapping",
                "1"
              ],
              [
                "test_all",
                "8"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_wrong_args",
                [
                  "assertRaisesRegex"
                ]
              ],
              [
                "test_as_iterator",
                [
                  "tiles",
                  "_out_size",
                  "_extent",
                  "extent2",
                  "extent1",
                  "counter"
                ]
              ],
              [
                "test__compute_number_of_tiles",
                [
                  "res",
                  "scale"
                ]
              ],
              [
                "test_wrong_index",
                [
                  "tiles"
                ]
              ],
              [
                "test__compute_float_overlapping",
                [
                  "res"
                ]
              ],
              [
                "test_all",
                [
                  "extent",
                  "debug_msg",
                  "tiles",
                  "prev_extent",
                  "extent0",
                  "out_size",
                  "var_debug_msg",
                  "_"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_wrong_args",
                []
              ],
              [
                "test_as_iterator",
                []
              ],
              [
                "test__compute_number_of_tiles",
                []
              ],
              [
                "test_wrong_index",
                []
              ],
              [
                "test__compute_float_overlapping",
                []
              ],
              [
                "test_all",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6784238166212982,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test__compute_float_overlapping",
                  "test_all",
                  0.6566945570725101
                ],
                [
                  "test__compute_float_overlapping",
                  "test_as_iterator",
                  0.7611218825271865
                ],
                [
                  "test_wrong_args",
                  "test_as_iterator",
                  0.7032585524453414
                ],
                [
                  "test_wrong_index",
                  "test__compute_float_overlapping",
                  0.6027962867863101
                ],
                [
                  "test_wrong_args",
                  "test__compute_float_overlapping",
                  0.6343887091443465
                ],
                [
                  "test_wrong_args",
                  "test_all",
                  0.5874884571501542
                ],
                [
                  "test__compute_number_of_tiles",
                  "test_as_iterator",
                  0.7640813784373212
                ],
                [
                  "test_wrong_index",
                  "test_all",
                  0.5572637054887198
                ],
                [
                  "test__compute_number_of_tiles",
                  "test__compute_float_overlapping",
                  0.8946126369470446
                ],
                [
                  "test_wrong_index",
                  "test_as_iterator",
                  0.6829548776199382
                ],
                [
                  "test_wrong_index",
                  "test__compute_number_of_tiles",
                  0.6027383562411005
                ],
                [
                  "test_wrong_args",
                  "test_wrong_index",
                  0.7024628854212898
                ],
                [
                  "test_as_iterator",
                  "test_all",
                  0.7490255709580337
                ],
                [
                  "test_wrong_args",
                  "test__compute_number_of_tiles",
                  0.6315593291745397
                ],
                [
                  "test__compute_number_of_tiles",
                  "test_all",
                  0.6459100639056367
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_wrong_args",
                "false"
              ],
              [
                "test_as_iterator",
                "false"
              ],
              [
                "test__compute_number_of_tiles",
                "false"
              ],
              [
                "test_wrong_index",
                "false"
              ],
              [
                "test__compute_float_overlapping",
                "false"
              ],
              [
                "test_all",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      }
    ]
  },
  {
    "name": "tests_\u0026_test_const_stride.py",
    "testCases": [
      {
        "name": "TestConstStrideTiles",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_get_version",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_with_nodata",
                  "[PyCallExpression: self.assertGreater, PyCallExpression: self.assertLess, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertLess, PyCallExpression: self.assertLess, PyCallExpression: self.assertGreaterEqual, PyCallExpression: self.assertGreaterEqual]"
                ],
                [
                  "test_without_nodata",
                  "[PyCallExpression: self.assertGreater, PyCallExpression: self.assertLess, PyCallExpression: self.assertEqual, PyCallExpression: self.assertLessEqual, PyCallExpression: self.assertLessEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertLessEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertLess, PyCallExpression: self.assertLess, PyCallExpression: self.assertEqual, PyCallExpression: self.assertLessEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertLessEqual]"
                ],
                [
                  "test_as_iterator",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_wrong_index",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_wrong_args",
                  "[]"
                ],
                [
                  "test_int_ceil",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_get_version",
                  "[]"
                ],
                [
                  "test_with_nodata",
                  "[]"
                ],
                [
                  "test_without_nodata",
                  "[]"
                ],
                [
                  "test_as_iterator",
                  "[]"
                ],
                [
                  "test_wrong_index",
                  "[]"
                ],
                [
                  "test_wrong_args",
                  "[]"
                ],
                [
                  "test_int_ceil",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_get_version",
                  "false"
                ],
                [
                  "test_with_nodata",
                  "true"
                ],
                [
                  "test_without_nodata",
                  "true"
                ],
                [
                  "test_as_iterator",
                  "true"
                ],
                [
                  "test_wrong_index",
                  "false"
                ],
                [
                  "test_wrong_args",
                  "false"
                ],
                [
                  "test_int_ceil",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_get_version",
                  "false"
                ],
                [
                  "test_with_nodata",
                  "false"
                ],
                [
                  "test_without_nodata",
                  "false"
                ],
                [
                  "test_as_iterator",
                  "false"
                ],
                [
                  "test_wrong_index",
                  "false"
                ],
                [
                  "test_wrong_args",
                  "false"
                ],
                [
                  "test_int_ceil",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_get_version",
                  "false"
                ],
                [
                  "test_with_nodata",
                  "false"
                ],
                [
                  "test_without_nodata",
                  "true"
                ],
                [
                  "test_as_iterator",
                  "false"
                ],
                [
                  "test_wrong_index",
                  "false"
                ],
                [
                  "test_wrong_args",
                  "false"
                ],
                [
                  "test_int_ceil",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_get_version",
                  "false"
                ],
                [
                  "test_with_nodata",
                  "false"
                ],
                [
                  "test_without_nodata",
                  "false"
                ],
                [
                  "test_as_iterator",
                  "false"
                ],
                [
                  "test_wrong_index",
                  "false"
                ],
                [
                  "test_wrong_args",
                  "false"
                ],
                [
                  "test_int_ceil",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_version",
                "false"
              ],
              [
                "test_with_nodata",
                "false"
              ],
              [
                "test_without_nodata",
                "false"
              ],
              [
                "test_as_iterator",
                "false"
              ],
              [
                "test_wrong_index",
                "false"
              ],
              [
                "test_wrong_args",
                "false"
              ],
              [
                "test_int_ceil",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_get_version",
                "false"
              ],
              [
                "test_with_nodata",
                "false"
              ],
              [
                "test_without_nodata",
                "false"
              ],
              [
                "test_as_iterator",
                "false"
              ],
              [
                "test_wrong_index",
                "false"
              ],
              [
                "test_wrong_args",
                "false"
              ],
              [
                "test_int_ceil",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_get_version",
                []
              ],
              [
                "test_with_nodata",
                []
              ],
              [
                "test_without_nodata",
                []
              ],
              [
                "test_as_iterator",
                []
              ],
              [
                "test_wrong_index",
                []
              ],
              [
                "test_wrong_args",
                []
              ],
              [
                "test_int_ceil",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_version",
                "false"
              ],
              [
                "test_with_nodata",
                "false"
              ],
              [
                "test_without_nodata",
                "false"
              ],
              [
                "test_as_iterator",
                "false"
              ],
              [
                "test_wrong_index",
                "false"
              ],
              [
                "test_wrong_args",
                "false"
              ],
              [
                "test_int_ceil",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_get_version",
                "false"
              ],
              [
                "test_with_nodata",
                "true"
              ],
              [
                "test_without_nodata",
                "true"
              ],
              [
                "test_as_iterator",
                "false"
              ],
              [
                "test_wrong_index",
                "false"
              ],
              [
                "test_wrong_args",
                "false"
              ],
              [
                "test_int_ceil",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_get_version",
                  "0"
                ],
                [
                  "test_with_nodata",
                  "0"
                ],
                [
                  "test_without_nodata",
                  "0"
                ],
                [
                  "test_as_iterator",
                  "0"
                ],
                [
                  "test_wrong_index",
                  "0"
                ],
                [
                  "test_wrong_args",
                  "0"
                ],
                [
                  "test_int_ceil",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_get_version",
                  "0"
                ],
                [
                  "test_with_nodata",
                  "0"
                ],
                [
                  "test_without_nodata",
                  "0"
                ],
                [
                  "test_as_iterator",
                  "0"
                ],
                [
                  "test_wrong_index",
                  "0"
                ],
                [
                  "test_wrong_args",
                  "0"
                ],
                [
                  "test_int_ceil",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_get_version",
                "false"
              ],
              [
                "test_with_nodata",
                "false"
              ],
              [
                "test_without_nodata",
                "false"
              ],
              [
                "test_as_iterator",
                "false"
              ],
              [
                "test_wrong_index",
                "false"
              ],
              [
                "test_wrong_args",
                "false"
              ],
              [
                "test_int_ceil",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_version",
                "false"
              ],
              [
                "test_with_nodata",
                "false"
              ],
              [
                "test_without_nodata",
                "false"
              ],
              [
                "test_as_iterator",
                "false"
              ],
              [
                "test_wrong_index",
                "false"
              ],
              [
                "test_wrong_args",
                "false"
              ],
              [
                "test_int_ceil",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_version",
                "1"
              ],
              [
                "test_with_nodata",
                "13"
              ],
              [
                "test_without_nodata",
                "24"
              ],
              [
                "test_as_iterator",
                "4"
              ],
              [
                "test_wrong_index",
                "1"
              ],
              [
                "test_wrong_args",
                "9"
              ],
              [
                "test_int_ceil",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_get_version",
                []
              ],
              [
                "test_with_nodata",
                [
                  "extent",
                  "debug_msg",
                  "tiles",
                  "prev_extent",
                  "d",
                  "out_size0",
                  "extent0",
                  "out_size",
                  "_"
                ]
              ],
              [
                "test_without_nodata",
                [
                  "extent",
                  "debug_msg",
                  "tiles",
                  "prev_extent",
                  "out_size0",
                  "extent0",
                  "out_size",
                  "var_debug_msg",
                  "_"
                ]
              ],
              [
                "test_as_iterator",
                [
                  "tiles",
                  "_out_size",
                  "_extent",
                  "out_size1",
                  "extent2",
                  "extent1",
                  "counter",
                  "out_size2"
                ]
              ],
              [
                "test_wrong_index",
                [
                  "tiles"
                ]
              ],
              [
                "test_wrong_args",
                [
                  "assertRaisesRegex"
                ]
              ],
              [
                "test_int_ceil",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_get_version",
                []
              ],
              [
                "test_with_nodata",
                []
              ],
              [
                "test_without_nodata",
                []
              ],
              [
                "test_as_iterator",
                []
              ],
              [
                "test_wrong_index",
                []
              ],
              [
                "test_wrong_args",
                []
              ],
              [
                "test_int_ceil",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.47317064230333916,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_with_nodata",
                  "test_as_iterator",
                  0.7315350321129039
                ],
                [
                  "test_get_version",
                  "test_wrong_args",
                  0.5112869496845952
                ],
                [
                  "test_without_nodata",
                  "test_int_ceil",
                  0.14569544592451628
                ],
                [
                  "test_wrong_index",
                  "test_with_nodata",
                  0.558969857733827
                ],
                [
                  "test_with_nodata",
                  "test_int_ceil",
                  0.20219046770741714
                ],
                [
                  "test_with_nodata",
                  "test_without_nodata",
                  0.8853446451572512
                ],
                [
                  "test_wrong_args",
                  "test_with_nodata",
                  0.4811661516121785
                ],
                [
                  "test_wrong_args",
                  "test_as_iterator",
                  0.6278082995430748
                ],
                [
                  "test_wrong_args",
                  "test_without_nodata",
                  0.33868862379828857
                ],
                [
                  "test_as_iterator",
                  "test_without_nodata",
                  0.5114835255855472
                ],
                [
                  "test_get_version",
                  "test_with_nodata",
                  0.5727983607368708
                ],
                [
                  "test_get_version",
                  "test_without_nodata",
                  0.40254305327080286
                ],
                [
                  "test_get_version",
                  "test_as_iterator",
                  0.6713848194274099
                ],
                [
                  "test_wrong_args",
                  "test_wrong_index",
                  0.6802267469156651
                ],
                [
                  "test_wrong_index",
                  "test_as_iterator",
                  0.721125263058815
                ],
                [
                  "test_wrong_index",
                  "test_int_ceil",
                  0.3046358979224712
                ],
                [
                  "test_wrong_index",
                  "test_without_nodata",
                  0.4149318818735393
                ],
                [
                  "test_get_version",
                  "test_wrong_index",
                  0.6265503646771936
                ],
                [
                  "test_as_iterator",
                  "test_int_ceil",
                  0.20652005056869158
                ],
                [
                  "test_get_version",
                  "test_int_ceil",
                  0.1688801323682996
                ],
                [
                  "test_wrong_args",
                  "test_int_ceil",
                  0.17281791869076296
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_get_version",
                "false"
              ],
              [
                "test_with_nodata",
                "false"
              ],
              [
                "test_without_nodata",
                "false"
              ],
              [
                "test_as_iterator",
                "false"
              ],
              [
                "test_wrong_index",
                "false"
              ],
              [
                "test_wrong_args",
                "false"
              ],
              [
                "test_int_ceil",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      }
    ]
  }
]