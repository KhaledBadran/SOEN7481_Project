[
  {
    "name": "api_\u0026_test_app.py",
    "testCases": [
      {
        "name": "TestAPI",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_vincinv",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_vincdir",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_vincinv",
                  "[]"
                ],
                [
                  "test_vincdir",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_vincinv",
                  "false"
                ],
                [
                  "test_vincdir",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_vincinv",
                  "false"
                ],
                [
                  "test_vincdir",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_vincinv",
                  "false"
                ],
                [
                  "test_vincdir",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_vincinv",
                  "false"
                ],
                [
                  "test_vincdir",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_vincinv",
                "false"
              ],
              [
                "test_vincdir",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_vincinv",
                "false"
              ],
              [
                "test_vincdir",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_vincinv",
                []
              ],
              [
                "test_vincdir",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_vincinv",
                "false"
              ],
              [
                "test_vincdir",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_vincinv",
                "false"
              ],
              [
                "test_vincdir",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_vincinv",
                  "0"
                ],
                [
                  "test_vincdir",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_vincinv",
                  "0"
                ],
                [
                  "test_vincdir",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_vincinv",
                "false"
              ],
              [
                "test_vincdir",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_vincinv",
                "false"
              ],
              [
                "test_vincdir",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_vincinv",
                "1"
              ],
              [
                "test_vincdir",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_vincinv",
                [
                  "response",
                  "query",
                  "expected_response"
                ]
              ],
              [
                "test_vincdir",
                [
                  "response",
                  "query",
                  "expected_response"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_vincinv",
                []
              ],
              [
                "test_vincdir",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9912663755458514,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_vincinv",
                  "test_vincdir",
                  0.9912663755458514
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_vincinv",
                "false"
              ],
              [
                "test_vincdir",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "geodepy_\u0026_tests_\u0026_test_height.py",
    "testCases": [
      {
        "name": "TestHeights",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_AVWS_H",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_AHD_H_STD",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_AVWS_H_STD",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_DOVPV",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_DOVPM",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_AHD_H",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_AVWS_H",
                  "[]"
                ],
                [
                  "test_AHD_H_STD",
                  "[]"
                ],
                [
                  "test_AVWS_H_STD",
                  "[]"
                ],
                [
                  "test_DOVPV",
                  "[]"
                ],
                [
                  "test_DOVPM",
                  "[]"
                ],
                [
                  "test_AHD_H",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_AVWS_H",
                  "false"
                ],
                [
                  "test_AHD_H_STD",
                  "false"
                ],
                [
                  "test_AVWS_H_STD",
                  "false"
                ],
                [
                  "test_DOVPV",
                  "false"
                ],
                [
                  "test_DOVPM",
                  "false"
                ],
                [
                  "test_AHD_H",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_AVWS_H",
                  "false"
                ],
                [
                  "test_AHD_H_STD",
                  "false"
                ],
                [
                  "test_AVWS_H_STD",
                  "false"
                ],
                [
                  "test_DOVPV",
                  "false"
                ],
                [
                  "test_DOVPM",
                  "false"
                ],
                [
                  "test_AHD_H",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_AVWS_H",
                  "false"
                ],
                [
                  "test_AHD_H_STD",
                  "false"
                ],
                [
                  "test_AVWS_H_STD",
                  "false"
                ],
                [
                  "test_DOVPV",
                  "false"
                ],
                [
                  "test_DOVPM",
                  "false"
                ],
                [
                  "test_AHD_H",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_AVWS_H",
                  "false"
                ],
                [
                  "test_AHD_H_STD",
                  "false"
                ],
                [
                  "test_AVWS_H_STD",
                  "false"
                ],
                [
                  "test_DOVPV",
                  "false"
                ],
                [
                  "test_DOVPM",
                  "false"
                ],
                [
                  "test_AHD_H",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_AVWS_H",
                "false"
              ],
              [
                "test_AHD_H_STD",
                "false"
              ],
              [
                "test_AVWS_H_STD",
                "false"
              ],
              [
                "test_DOVPV",
                "false"
              ],
              [
                "test_DOVPM",
                "false"
              ],
              [
                "test_AHD_H",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_AVWS_H",
                "false"
              ],
              [
                "test_AHD_H_STD",
                "false"
              ],
              [
                "test_AVWS_H_STD",
                "false"
              ],
              [
                "test_DOVPV",
                "false"
              ],
              [
                "test_DOVPM",
                "false"
              ],
              [
                "test_AHD_H",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_AVWS_H",
                []
              ],
              [
                "test_AHD_H_STD",
                []
              ],
              [
                "test_AVWS_H_STD",
                []
              ],
              [
                "test_DOVPV",
                []
              ],
              [
                "test_DOVPM",
                []
              ],
              [
                "test_AHD_H",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_AVWS_H",
                "false"
              ],
              [
                "test_AHD_H_STD",
                "false"
              ],
              [
                "test_AVWS_H_STD",
                "false"
              ],
              [
                "test_DOVPV",
                "false"
              ],
              [
                "test_DOVPM",
                "false"
              ],
              [
                "test_AHD_H",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_AVWS_H",
                "true"
              ],
              [
                "test_AHD_H_STD",
                "true"
              ],
              [
                "test_AVWS_H_STD",
                "true"
              ],
              [
                "test_DOVPV",
                "true"
              ],
              [
                "test_DOVPM",
                "true"
              ],
              [
                "test_AHD_H",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_AVWS_H",
                  "0"
                ],
                [
                  "test_AHD_H_STD",
                  "0"
                ],
                [
                  "test_AVWS_H_STD",
                  "0"
                ],
                [
                  "test_DOVPV",
                  "0"
                ],
                [
                  "test_DOVPM",
                  "0"
                ],
                [
                  "test_AHD_H",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_AVWS_H",
                  "0"
                ],
                [
                  "test_AHD_H_STD",
                  "0"
                ],
                [
                  "test_AVWS_H_STD",
                  "0"
                ],
                [
                  "test_DOVPV",
                  "0"
                ],
                [
                  "test_DOVPM",
                  "0"
                ],
                [
                  "test_AHD_H",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_AVWS_H",
                "false"
              ],
              [
                "test_AHD_H_STD",
                "false"
              ],
              [
                "test_AVWS_H_STD",
                "false"
              ],
              [
                "test_DOVPV",
                "false"
              ],
              [
                "test_DOVPM",
                "false"
              ],
              [
                "test_AHD_H",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_AVWS_H",
                "false"
              ],
              [
                "test_AHD_H_STD",
                "false"
              ],
              [
                "test_AVWS_H_STD",
                "false"
              ],
              [
                "test_DOVPV",
                "false"
              ],
              [
                "test_DOVPM",
                "false"
              ],
              [
                "test_AHD_H",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_AVWS_H",
                "1"
              ],
              [
                "test_AHD_H_STD",
                "1"
              ],
              [
                "test_AVWS_H_STD",
                "1"
              ],
              [
                "test_DOVPV",
                "1"
              ],
              [
                "test_DOVPM",
                "1"
              ],
              [
                "test_AHD_H",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_AVWS_H",
                []
              ],
              [
                "test_AHD_H_STD",
                []
              ],
              [
                "test_AVWS_H_STD",
                []
              ],
              [
                "test_DOVPV",
                []
              ],
              [
                "test_DOVPM",
                []
              ],
              [
                "test_AHD_H",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_AVWS_H",
                []
              ],
              [
                "test_AHD_H_STD",
                []
              ],
              [
                "test_AVWS_H_STD",
                []
              ],
              [
                "test_DOVPV",
                []
              ],
              [
                "test_DOVPM",
                []
              ],
              [
                "test_AHD_H",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8652599215586645,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_AVWS_H",
                  "test_AHD_H",
                  0.9404761904761905
                ],
                [
                  "test_AVWS_H",
                  "test_DOVPM",
                  0.8041664463712644
                ],
                [
                  "test_AHD_H",
                  "test_AHD_H_STD",
                  0.9602307070452852
                ],
                [
                  "test_AVWS_H",
                  "test_AVWS_H_STD",
                  0.9602307070452852
                ],
                [
                  "test_AVWS_H_STD",
                  "test_AHD_H_STD",
                  0.9596774193548389
                ],
                [
                  "test_DOVPM",
                  "test_AHD_H",
                  0.8041664463712644
                ],
                [
                  "test_DOVPV",
                  "test_AHD_H_STD",
                  0.7976419741300036
                ],
                [
                  "test_AVWS_H",
                  "test_DOVPV",
                  0.8041664463712644
                ],
                [
                  "test_AVWS_H_STD",
                  "test_DOVPV",
                  0.7976419741300036
                ],
                [
                  "test_AVWS_H",
                  "test_AHD_H_STD",
                  0.911239344440934
                ],
                [
                  "test_AVWS_H_STD",
                  "test_AHD_H",
                  0.911239344440934
                ],
                [
                  "test_DOVPV",
                  "test_DOVPM",
                  0.9285714285714285
                ],
                [
                  "test_DOVPM",
                  "test_AHD_H_STD",
                  0.7976419741300036
                ],
                [
                  "test_DOVPV",
                  "test_AHD_H",
                  0.8041664463712644
                ],
                [
                  "test_AVWS_H_STD",
                  "test_DOVPM",
                  0.7976419741300036
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_AVWS_H",
                "false"
              ],
              [
                "test_AHD_H_STD",
                "false"
              ],
              [
                "test_AVWS_H_STD",
                "false"
              ],
              [
                "test_DOVPV",
                "false"
              ],
              [
                "test_DOVPM",
                "false"
              ],
              [
                "test_AHD_H",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      },
      {
        "name": "TestNC",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_NC",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_Grav",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_NC",
                  "[]"
                ],
                [
                  "test_Grav",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_NC",
                  "false"
                ],
                [
                  "test_Grav",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_NC",
                  "false"
                ],
                [
                  "test_Grav",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_NC",
                  "false"
                ],
                [
                  "test_Grav",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_NC",
                  "false"
                ],
                [
                  "test_Grav",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_NC",
                "false"
              ],
              [
                "test_Grav",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_NC",
                "false"
              ],
              [
                "test_Grav",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_NC",
                []
              ],
              [
                "test_Grav",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_NC",
                "false"
              ],
              [
                "test_Grav",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_NC",
                "true"
              ],
              [
                "test_Grav",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_NC",
                  "0"
                ],
                [
                  "test_Grav",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_NC",
                  "0"
                ],
                [
                  "test_Grav",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_NC",
                "false"
              ],
              [
                "test_Grav",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_NC",
                "false"
              ],
              [
                "test_Grav",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_NC",
                "1"
              ],
              [
                "test_Grav",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_NC",
                []
              ],
              [
                "test_Grav",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_NC",
                []
              ],
              [
                "test_Grav",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9780748502820075,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_NC",
                  "test_Grav",
                  0.9780748502820075
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_NC",
                "false"
              ],
              [
                "test_Grav",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      },
      {
        "name": "TestNoc",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_noc",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_noc",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_noc",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_noc",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_noc",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_noc",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_noc",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_noc",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_noc",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_noc",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_noc",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_noc",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_noc",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_noc",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_noc",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_noc",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_noc",
                [
                  "PLH1",
                  "result",
                  "PLH2",
                  "expected_result"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_noc",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_noc",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "geodepy_\u0026_tests_\u0026_test_convert.py",
    "testCases": [
      {
        "name": "TestConvert",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_dec2dms",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_dd2sec",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_DMSAngle",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertFalse, PyCallExpression: self.assertTrue, PyCallExpression: self.assertFalse, PyCallExpression: self.assertTrue, PyCallExpression: self.assertFalse, PyCallExpression: self.assertTrue, PyCallExpression: self.assertFalse, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_geo2grid",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertLess, PyCallExpression: self.assertLess, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_hp2dms",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_hp2dec",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_DDMAngle",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertFalse, PyCallExpression: self.assertTrue, PyCallExpression: self.assertFalse, PyCallExpression: self.assertTrue, PyCallExpression: self.assertFalse, PyCallExpression: self.assertTrue, PyCallExpression: self.assertFalse, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_dec2hp",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_hp2ddm",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_llh2xyz",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_xyz2llh",
                  "[]"
                ],
                [
                  "test_grid2geo",
                  "[PyCallExpression: self.assertLess, PyCallExpression: self.assertLess, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_date_to_yyyydoy",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_yyyydoy_to_date",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_dec2ddm",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_geo_grid_transform_interoperability",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_dec2dms",
                  "[]"
                ],
                [
                  "test_dd2sec",
                  "[]"
                ],
                [
                  "test_DMSAngle",
                  "[]"
                ],
                [
                  "test_geo2grid",
                  "[]"
                ],
                [
                  "test_hp2dms",
                  "[]"
                ],
                [
                  "test_hp2dec",
                  "[]"
                ],
                [
                  "test_DDMAngle",
                  "[]"
                ],
                [
                  "test_dec2hp",
                  "[]"
                ],
                [
                  "test_hp2ddm",
                  "[]"
                ],
                [
                  "test_llh2xyz",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_xyz2llh",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_grid2geo",
                  "[]"
                ],
                [
                  "test_date_to_yyyydoy",
                  "[]"
                ],
                [
                  "test_yyyydoy_to_date",
                  "[]"
                ],
                [
                  "test_dec2ddm",
                  "[]"
                ],
                [
                  "test_geo_grid_transform_interoperability",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_dec2dms",
                  "false"
                ],
                [
                  "test_dd2sec",
                  "false"
                ],
                [
                  "test_DMSAngle",
                  "false"
                ],
                [
                  "test_geo2grid",
                  "true"
                ],
                [
                  "test_hp2dms",
                  "false"
                ],
                [
                  "test_hp2dec",
                  "false"
                ],
                [
                  "test_DDMAngle",
                  "false"
                ],
                [
                  "test_dec2hp",
                  "false"
                ],
                [
                  "test_hp2ddm",
                  "false"
                ],
                [
                  "test_llh2xyz",
                  "true"
                ],
                [
                  "test_xyz2llh",
                  "true"
                ],
                [
                  "test_grid2geo",
                  "true"
                ],
                [
                  "test_date_to_yyyydoy",
                  "false"
                ],
                [
                  "test_yyyydoy_to_date",
                  "false"
                ],
                [
                  "test_dec2ddm",
                  "false"
                ],
                [
                  "test_geo_grid_transform_interoperability",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_dec2dms",
                  "false"
                ],
                [
                  "test_dd2sec",
                  "false"
                ],
                [
                  "test_DMSAngle",
                  "false"
                ],
                [
                  "test_geo2grid",
                  "false"
                ],
                [
                  "test_hp2dms",
                  "false"
                ],
                [
                  "test_hp2dec",
                  "false"
                ],
                [
                  "test_DDMAngle",
                  "false"
                ],
                [
                  "test_dec2hp",
                  "false"
                ],
                [
                  "test_hp2ddm",
                  "false"
                ],
                [
                  "test_llh2xyz",
                  "false"
                ],
                [
                  "test_xyz2llh",
                  "false"
                ],
                [
                  "test_grid2geo",
                  "false"
                ],
                [
                  "test_date_to_yyyydoy",
                  "false"
                ],
                [
                  "test_yyyydoy_to_date",
                  "false"
                ],
                [
                  "test_dec2ddm",
                  "false"
                ],
                [
                  "test_geo_grid_transform_interoperability",
                  "true"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_dec2dms",
                  "false"
                ],
                [
                  "test_dd2sec",
                  "false"
                ],
                [
                  "test_DMSAngle",
                  "true"
                ],
                [
                  "test_geo2grid",
                  "true"
                ],
                [
                  "test_hp2dms",
                  "false"
                ],
                [
                  "test_hp2dec",
                  "false"
                ],
                [
                  "test_DDMAngle",
                  "true"
                ],
                [
                  "test_dec2hp",
                  "false"
                ],
                [
                  "test_hp2ddm",
                  "false"
                ],
                [
                  "test_llh2xyz",
                  "true"
                ],
                [
                  "test_xyz2llh",
                  "false"
                ],
                [
                  "test_grid2geo",
                  "true"
                ],
                [
                  "test_date_to_yyyydoy",
                  "true"
                ],
                [
                  "test_yyyydoy_to_date",
                  "true"
                ],
                [
                  "test_dec2ddm",
                  "false"
                ],
                [
                  "test_geo_grid_transform_interoperability",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_dec2dms",
                  "false"
                ],
                [
                  "test_dd2sec",
                  "false"
                ],
                [
                  "test_DMSAngle",
                  "false"
                ],
                [
                  "test_geo2grid",
                  "false"
                ],
                [
                  "test_hp2dms",
                  "false"
                ],
                [
                  "test_hp2dec",
                  "false"
                ],
                [
                  "test_DDMAngle",
                  "false"
                ],
                [
                  "test_dec2hp",
                  "false"
                ],
                [
                  "test_hp2ddm",
                  "false"
                ],
                [
                  "test_llh2xyz",
                  "false"
                ],
                [
                  "test_xyz2llh",
                  "false"
                ],
                [
                  "test_grid2geo",
                  "false"
                ],
                [
                  "test_date_to_yyyydoy",
                  "false"
                ],
                [
                  "test_yyyydoy_to_date",
                  "false"
                ],
                [
                  "test_dec2ddm",
                  "false"
                ],
                [
                  "test_geo_grid_transform_interoperability",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_dec2dms",
                "false"
              ],
              [
                "test_dd2sec",
                "false"
              ],
              [
                "test_DMSAngle",
                "false"
              ],
              [
                "test_geo2grid",
                "false"
              ],
              [
                "test_hp2dms",
                "false"
              ],
              [
                "test_hp2dec",
                "false"
              ],
              [
                "test_DDMAngle",
                "false"
              ],
              [
                "test_dec2hp",
                "false"
              ],
              [
                "test_hp2ddm",
                "false"
              ],
              [
                "test_llh2xyz",
                "false"
              ],
              [
                "test_xyz2llh",
                "false"
              ],
              [
                "test_grid2geo",
                "false"
              ],
              [
                "test_date_to_yyyydoy",
                "false"
              ],
              [
                "test_yyyydoy_to_date",
                "false"
              ],
              [
                "test_dec2ddm",
                "false"
              ],
              [
                "test_geo_grid_transform_interoperability",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_dec2dms",
                "false"
              ],
              [
                "test_dd2sec",
                "false"
              ],
              [
                "test_DMSAngle",
                "false"
              ],
              [
                "test_geo2grid",
                "false"
              ],
              [
                "test_hp2dms",
                "false"
              ],
              [
                "test_hp2dec",
                "false"
              ],
              [
                "test_DDMAngle",
                "false"
              ],
              [
                "test_dec2hp",
                "false"
              ],
              [
                "test_hp2ddm",
                "false"
              ],
              [
                "test_llh2xyz",
                "false"
              ],
              [
                "test_xyz2llh",
                "false"
              ],
              [
                "test_grid2geo",
                "false"
              ],
              [
                "test_date_to_yyyydoy",
                "false"
              ],
              [
                "test_yyyydoy_to_date",
                "false"
              ],
              [
                "test_dec2ddm",
                "false"
              ],
              [
                "test_geo_grid_transform_interoperability",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_dec2dms",
                []
              ],
              [
                "test_dd2sec",
                []
              ],
              [
                "test_DMSAngle",
                []
              ],
              [
                "test_geo2grid",
                []
              ],
              [
                "test_hp2dms",
                []
              ],
              [
                "test_hp2dec",
                []
              ],
              [
                "test_DDMAngle",
                []
              ],
              [
                "test_dec2hp",
                []
              ],
              [
                "test_hp2ddm",
                []
              ],
              [
                "test_llh2xyz",
                []
              ],
              [
                "test_xyz2llh",
                []
              ],
              [
                "test_grid2geo",
                []
              ],
              [
                "test_date_to_yyyydoy",
                []
              ],
              [
                "test_yyyydoy_to_date",
                []
              ],
              [
                "test_dec2ddm",
                []
              ],
              [
                "test_geo_grid_transform_interoperability",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_dec2dms",
                "false"
              ],
              [
                "test_dd2sec",
                "false"
              ],
              [
                "test_DMSAngle",
                "false"
              ],
              [
                "test_geo2grid",
                "false"
              ],
              [
                "test_hp2dms",
                "false"
              ],
              [
                "test_hp2dec",
                "false"
              ],
              [
                "test_DDMAngle",
                "false"
              ],
              [
                "test_dec2hp",
                "false"
              ],
              [
                "test_hp2ddm",
                "false"
              ],
              [
                "test_llh2xyz",
                "false"
              ],
              [
                "test_xyz2llh",
                "false"
              ],
              [
                "test_grid2geo",
                "false"
              ],
              [
                "test_date_to_yyyydoy",
                "false"
              ],
              [
                "test_yyyydoy_to_date",
                "false"
              ],
              [
                "test_dec2ddm",
                "false"
              ],
              [
                "test_geo_grid_transform_interoperability",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_dec2dms",
                "false"
              ],
              [
                "test_dd2sec",
                "true"
              ],
              [
                "test_DMSAngle",
                "true"
              ],
              [
                "test_geo2grid",
                "true"
              ],
              [
                "test_hp2dms",
                "true"
              ],
              [
                "test_hp2dec",
                "true"
              ],
              [
                "test_DDMAngle",
                "true"
              ],
              [
                "test_dec2hp",
                "true"
              ],
              [
                "test_hp2ddm",
                "false"
              ],
              [
                "test_llh2xyz",
                "true"
              ],
              [
                "test_xyz2llh",
                "false"
              ],
              [
                "test_grid2geo",
                "true"
              ],
              [
                "test_date_to_yyyydoy",
                "false"
              ],
              [
                "test_yyyydoy_to_date",
                "false"
              ],
              [
                "test_dec2ddm",
                "false"
              ],
              [
                "test_geo_grid_transform_interoperability",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_dec2dms",
                  "0"
                ],
                [
                  "test_dd2sec",
                  "0"
                ],
                [
                  "test_DMSAngle",
                  "0"
                ],
                [
                  "test_geo2grid",
                  "0"
                ],
                [
                  "test_hp2dms",
                  "0"
                ],
                [
                  "test_hp2dec",
                  "0"
                ],
                [
                  "test_DDMAngle",
                  "0"
                ],
                [
                  "test_dec2hp",
                  "0"
                ],
                [
                  "test_hp2ddm",
                  "0"
                ],
                [
                  "test_llh2xyz",
                  "0"
                ],
                [
                  "test_xyz2llh",
                  "0"
                ],
                [
                  "test_grid2geo",
                  "0"
                ],
                [
                  "test_date_to_yyyydoy",
                  "0"
                ],
                [
                  "test_yyyydoy_to_date",
                  "0"
                ],
                [
                  "test_dec2ddm",
                  "0"
                ],
                [
                  "test_geo_grid_transform_interoperability",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_dec2dms",
                  "0"
                ],
                [
                  "test_dd2sec",
                  "0"
                ],
                [
                  "test_DMSAngle",
                  "0"
                ],
                [
                  "test_geo2grid",
                  "0"
                ],
                [
                  "test_hp2dms",
                  "0"
                ],
                [
                  "test_hp2dec",
                  "0"
                ],
                [
                  "test_DDMAngle",
                  "0"
                ],
                [
                  "test_dec2hp",
                  "0"
                ],
                [
                  "test_hp2ddm",
                  "0"
                ],
                [
                  "test_llh2xyz",
                  "0"
                ],
                [
                  "test_xyz2llh",
                  "0"
                ],
                [
                  "test_grid2geo",
                  "0"
                ],
                [
                  "test_date_to_yyyydoy",
                  "0"
                ],
                [
                  "test_yyyydoy_to_date",
                  "0"
                ],
                [
                  "test_dec2ddm",
                  "0"
                ],
                [
                  "test_geo_grid_transform_interoperability",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_dec2dms",
                "false"
              ],
              [
                "test_dd2sec",
                "false"
              ],
              [
                "test_DMSAngle",
                "false"
              ],
              [
                "test_geo2grid",
                "false"
              ],
              [
                "test_hp2dms",
                "false"
              ],
              [
                "test_hp2dec",
                "false"
              ],
              [
                "test_DDMAngle",
                "false"
              ],
              [
                "test_dec2hp",
                "false"
              ],
              [
                "test_hp2ddm",
                "false"
              ],
              [
                "test_llh2xyz",
                "false"
              ],
              [
                "test_xyz2llh",
                "false"
              ],
              [
                "test_grid2geo",
                "false"
              ],
              [
                "test_date_to_yyyydoy",
                "false"
              ],
              [
                "test_yyyydoy_to_date",
                "false"
              ],
              [
                "test_dec2ddm",
                "false"
              ],
              [
                "test_geo_grid_transform_interoperability",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_dec2dms",
                "false"
              ],
              [
                "test_dd2sec",
                "false"
              ],
              [
                "test_DMSAngle",
                "false"
              ],
              [
                "test_geo2grid",
                "false"
              ],
              [
                "test_hp2dms",
                "false"
              ],
              [
                "test_hp2dec",
                "false"
              ],
              [
                "test_DDMAngle",
                "false"
              ],
              [
                "test_dec2hp",
                "false"
              ],
              [
                "test_hp2ddm",
                "false"
              ],
              [
                "test_llh2xyz",
                "false"
              ],
              [
                "test_xyz2llh",
                "false"
              ],
              [
                "test_grid2geo",
                "false"
              ],
              [
                "test_date_to_yyyydoy",
                "false"
              ],
              [
                "test_yyyydoy_to_date",
                "false"
              ],
              [
                "test_dec2ddm",
                "false"
              ],
              [
                "test_geo_grid_transform_interoperability",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_dec2dms",
                "2"
              ],
              [
                "test_dd2sec",
                "9"
              ],
              [
                "test_DMSAngle",
                "58"
              ],
              [
                "test_geo2grid",
                "34"
              ],
              [
                "test_hp2dms",
                "7"
              ],
              [
                "test_hp2dec",
                "3"
              ],
              [
                "test_DDMAngle",
                "49"
              ],
              [
                "test_dec2hp",
                "2"
              ],
              [
                "test_hp2ddm",
                "2"
              ],
              [
                "test_llh2xyz",
                "12"
              ],
              [
                "test_xyz2llh",
                "3"
              ],
              [
                "test_grid2geo",
                "13"
              ],
              [
                "test_date_to_yyyydoy",
                "7"
              ],
              [
                "test_yyyydoy_to_date",
                "15"
              ],
              [
                "test_dec2ddm",
                "2"
              ],
              [
                "test_geo_grid_transform_interoperability",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": true,
            "detail": [
              [
                "test_dec2dms",
                []
              ],
              [
                "test_dd2sec",
                []
              ],
              [
                "test_DMSAngle",
                []
              ],
              [
                "test_geo2grid",
                [
                  "psf",
                  "north",
                  "grid_conv",
                  "zonecomp",
                  "eastcomp",
                  "testdata",
                  "south_ex",
                  "hem",
                  "south_grid",
                  "east",
                  "abs_path",
                  "zone",
                  "north_grid",
                  "north_ex",
                  "northcomp"
                ]
              ],
              [
                "test_hp2dms",
                []
              ],
              [
                "test_hp2dec",
                []
              ],
              [
                "test_DDMAngle",
                []
              ],
              [
                "test_dec2hp",
                []
              ],
              [
                "test_hp2ddm",
                []
              ],
              [
                "test_llh2xyz",
                [
                  "testdata",
                  "abs_path",
                  "x",
                  "y",
                  "z",
                  "zcomp",
                  "xcomp",
                  "ycomp"
                ]
              ],
              [
                "test_xyz2llh",
                [
                  "testdata",
                  "abs_path",
                  "ell_htcomp",
                  "latcomp",
                  "longcomp"
                ]
              ],
              [
                "test_grid2geo",
                [
                  "testdata",
                  "south_ex",
                  "psf",
                  "abs_path",
                  "latcomp",
                  "grid_conv",
                  "longcomp",
                  "north_ex",
                  "south_geo",
                  "north_geo"
                ]
              ],
              [
                "test_date_to_yyyydoy",
                []
              ],
              [
                "test_yyyydoy_to_date",
                []
              ],
              [
                "test_dec2ddm",
                []
              ],
              [
                "test_geo_grid_transform_interoperability",
                [
                  "geoed_grid",
                  "abs_path",
                  "gridded_geo",
                  "test_geo_coords",
                  "test_grid_coords"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_dec2dms",
                []
              ],
              [
                "test_dd2sec",
                []
              ],
              [
                "test_DMSAngle",
                []
              ],
              [
                "test_geo2grid",
                []
              ],
              [
                "test_hp2dms",
                []
              ],
              [
                "test_hp2dec",
                []
              ],
              [
                "test_DDMAngle",
                []
              ],
              [
                "test_dec2hp",
                []
              ],
              [
                "test_hp2ddm",
                []
              ],
              [
                "test_llh2xyz",
                []
              ],
              [
                "test_xyz2llh",
                []
              ],
              [
                "test_grid2geo",
                []
              ],
              [
                "test_date_to_yyyydoy",
                []
              ],
              [
                "test_yyyydoy_to_date",
                []
              ],
              [
                "test_dec2ddm",
                []
              ],
              [
                "test_geo_grid_transform_interoperability",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.3636489517624425,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_DDMAngle",
                  "test_geo2grid",
                  0.623606610600047
                ],
                [
                  "test_DDMAngle",
                  "test_xyz2llh",
                  0.2907923551486456
                ],
                [
                  "test_hp2dec",
                  "test_geo_grid_transform_interoperability",
                  0.29576024087563857
                ],
                [
                  "test_dec2dms",
                  "test_geo2grid",
                  0.13017210501894322
                ],
                [
                  "test_dd2sec",
                  "test_geo_grid_transform_interoperability",
                  0.16953076192258637
                ],
                [
                  "test_hp2dms",
                  "test_llh2xyz",
                  0.2542308913344919
                ],
                [
                  "test_xyz2llh",
                  "test_grid2geo",
                  0.4456631551359156
                ],
                [
                  "test_dec2ddm",
                  "test_geo2grid",
                  0.13017210501894322
                ],
                [
                  "test_hp2dms",
                  "test_geo2grid",
                  0.3021708426965693
                ],
                [
                  "test_yyyydoy_to_date",
                  "test_grid2geo",
                  0.6424338257303179
                ],
                [
                  "test_dec2ddm",
                  "test_grid2geo",
                  0.12247040486036707
                ],
                [
                  "test_dec2dms",
                  "test_yyyydoy_to_date",
                  0.1325350053834193
                ],
                [
                  "test_hp2dms",
                  "test_xyz2llh",
                  0.11180339887498948
                ],
                [
                  "test_dec2ddm",
                  "test_xyz2llh",
                  0.03450327796711771
                ],
                [
                  "test_hp2dec",
                  "test_hp2dms",
                  0.5069444444444444
                ],
                [
                  "test_hp2dms",
                  "test_geo_grid_transform_interoperability",
                  0.17063090819748375
                ],
                [
                  "test_dec2ddm",
                  "test_llh2xyz",
                  0.08031653545497917
                ],
                [
                  "test_hp2dec",
                  "test_yyyydoy_to_date",
                  0.2840715505877809
                ],
                [
                  "test_DMSAngle",
                  "test_date_to_yyyydoy",
                  0.543462406733493
                ],
                [
                  "test_DDMAngle",
                  "test_dd2sec",
                  0.547175534582057
                ],
                [
                  "test_dec2dms",
                  "test_dd2sec",
                  0.19163559494160481
                ],
                [
                  "test_hp2dec",
                  "test_geo2grid",
                  0.47638158363897926
                ],
                [
                  "test_hp2dec",
                  "test_llh2xyz",
                  0.4680981103481049
                ],
                [
                  "test_dec2dms",
                  "test_hp2dms",
                  0.3086066999241838
                ],
                [
                  "test_dd2sec",
                  "test_geo2grid",
                  0.4985839441075182
                ],
                [
                  "test_dd2sec",
                  "test_llh2xyz",
                  0.5243373403595276
                ],
                [
                  "test_DDMAngle",
                  "test_yyyydoy_to_date",
                  0.451242670607114
                ],
                [
                  "test_hp2dec",
                  "test_DDMAngle",
                  0.5733859356783123
                ],
                [
                  "test_dec2dms",
                  "test_xyz2llh",
                  0.03450327796711771
                ],
                [
                  "test_dec2ddm",
                  "test_hp2ddm",
                  0.6071428571428571
                ],
                [
                  "test_DDMAngle",
                  "test_hp2dms",
                  0.3205181404478996
                ],
                [
                  "test_geo_grid_transform_interoperability",
                  "test_xyz2llh",
                  0.3866295405893278
                ],
                [
                  "test_date_to_yyyydoy",
                  "test_geo_grid_transform_interoperability",
                  0.19113821288565186
                ],
                [
                  "test_hp2ddm",
                  "test_geo_grid_transform_interoperability",
                  0.13691038785811876
                ],
                [
                  "test_hp2dec",
                  "test_dd2sec",
                  0.46055297227811637
                ],
                [
                  "test_hp2dms",
                  "test_grid2geo",
                  0.24545874537139714
                ],
                [
                  "test_dd2sec",
                  "test_grid2geo",
                  0.4085290514205628
                ],
                [
                  "test_dec2hp",
                  "test_grid2geo",
                  0.3483847134123866
                ],
                [
                  "test_DMSAngle",
                  "test_dd2sec",
                  0.5132139157865038
                ],
                [
                  "test_dec2dms",
                  "test_date_to_yyyydoy",
                  0.13468700594029476
                ],
                [
                  "test_llh2xyz",
                  "test_grid2geo",
                  0.7489871078088084
                ],
                [
                  "test_yyyydoy_to_date",
                  "test_geo_grid_transform_interoperability",
                  0.19174822569242453
                ],
                [
                  "test_geo_grid_transform_interoperability",
                  "test_geo2grid",
                  0.45254672372397753
                ],
                [
                  "test_dec2dms",
                  "test_hp2ddm",
                  0.49999999999999994
                ],
                [
                  "test_geo_grid_transform_interoperability",
                  "test_llh2xyz",
                  0.420391962016853
                ],
                [
                  "test_dec2dms",
                  "test_geo_grid_transform_interoperability",
                  0.13691038785811876
                ],
                [
                  "test_DDMAngle",
                  "test_geo_grid_transform_interoperability",
                  0.2044162085054718
                ],
                [
                  "test_dec2hp",
                  "test_geo_grid_transform_interoperability",
                  0.3083969773719806
                ],
                [
                  "test_dec2hp",
                  "test_dec2dms",
                  0.567733589433837
                ],
                [
                  "test_DDMAngle",
                  "test_hp2ddm",
                  0.23897471260241007
                ],
                [
                  "test_hp2dec",
                  "test_dec2ddm",
                  0.3471825374147068
                ],
                [
                  "test_DDMAngle",
                  "test_dec2dms",
                  0.2499201192864899
                ],
                [
                  "test_DDMAngle",
                  "test_grid2geo",
                  0.5738481845705228
                ],
                [
                  "test_xyz2llh",
                  "test_geo2grid",
                  0.4749026802617986
                ],
                [
                  "test_DDMAngle",
                  "test_date_to_yyyydoy",
                  0.44287546821289714
                ],
                [
                  "test_dec2hp",
                  "test_hp2ddm",
                  0.2988071523335984
                ],
                [
                  "test_hp2dms",
                  "test_dd2sec",
                  0.3208346548454293
                ],
                [
                  "test_dec2ddm",
                  "test_hp2dms",
                  0.20573779994945587
                ],
                [
                  "test_hp2ddm",
                  "test_date_to_yyyydoy",
                  0.13468700594029476
                ],
                [
                  "test_DMSAngle",
                  "test_dec2ddm",
                  0.19952110059295072
                ],
                [
                  "test_dec2dms",
                  "test_grid2geo",
                  0.12247040486036707
                ],
                [
                  "test_dd2sec",
                  "test_yyyydoy_to_date",
                  0.2944629852901929
                ],
                [
                  "test_hp2dms",
                  "test_yyyydoy_to_date",
                  0.2192048185637994
                ],
                [
                  "test_dec2hp",
                  "test_date_to_yyyydoy",
                  0.253546276418555
                ],
                [
                  "test_dec2hp",
                  "test_DMSAngle",
                  0.3995918695506684
                ],
                [
                  "test_DMSAngle",
                  "test_DDMAngle",
                  0.81065035441394
                ],
                [
                  "test_geo2grid",
                  "test_grid2geo",
                  0.8743614155521394
                ],
                [
                  "test_dec2hp",
                  "test_yyyydoy_to_date",
                  0.24949516752176726
                ],
                [
                  "test_hp2ddm",
                  "test_dd2sec",
                  0.19163559494160481
                ],
                [
                  "test_DMSAngle",
                  "test_llh2xyz",
                  0.6924401668045802
                ],
                [
                  "test_dec2hp",
                  "test_llh2xyz",
                  0.44238442834217867
                ],
                [
                  "test_DMSAngle",
                  "test_hp2dms",
                  0.3039552562070195
                ],
                [
                  "test_dec2hp",
                  "test_geo2grid",
                  0.4471033764975446
                ],
                [
                  "test_hp2ddm",
                  "test_grid2geo",
                  0.12247040486036707
                ],
                [
                  "test_dec2hp",
                  "test_DDMAngle",
                  0.4120912911027823
                ],
                [
                  "test_dec2hp",
                  "test_xyz2llh",
                  0.25980762113533157
                ],
                [
                  "test_hp2dec",
                  "test_date_to_yyyydoy",
                  0.28641098093474004
                ],
                [
                  "test_DMSAngle",
                  "test_yyyydoy_to_date",
                  0.5518434196340104
                ],
                [
                  "test_date_to_yyyydoy",
                  "test_xyz2llh",
                  0.21144501580551553
                ],
                [
                  "test_date_to_yyyydoy",
                  "test_grid2geo",
                  0.6321774725314204
                ],
                [
                  "test_date_to_yyyydoy",
                  "test_yyyydoy_to_date",
                  0.7067778579278858
                ],
                [
                  "test_hp2ddm",
                  "test_xyz2llh",
                  0.03450327796711771
                ],
                [
                  "test_DMSAngle",
                  "test_geo_grid_transform_interoperability",
                  0.2526251974771129
                ],
                [
                  "test_DMSAngle",
                  "test_geo2grid",
                  0.7618448808738629
                ],
                [
                  "test_hp2ddm",
                  "test_yyyydoy_to_date",
                  0.1325350053834193
                ],
                [
                  "test_dec2dms",
                  "test_dec2ddm",
                  0.8214285714285713
                ],
                [
                  "test_dd2sec",
                  "test_date_to_yyyydoy",
                  0.33876707174981807
                ],
                [
                  "test_dec2hp",
                  "test_dd2sec",
                  0.38480122067691946
                ],
                [
                  "test_DMSAngle",
                  "test_grid2geo",
                  0.6876129992940243
                ],
                [
                  "test_hp2dms",
                  "test_date_to_yyyydoy",
                  0.21518708620493693
                ],
                [
                  "test_dec2ddm",
                  "test_date_to_yyyydoy",
                  0.13468700594029476
                ],
                [
                  "test_dec2hp",
                  "test_hp2dms",
                  0.30123203803835463
                ],
                [
                  "test_hp2dms",
                  "test_hp2ddm",
                  0.5143444998736397
                ],
                [
                  "test_dec2hp",
                  "test_dec2ddm",
                  0.567733589433837
                ],
                [
                  "test_yyyydoy_to_date",
                  "test_llh2xyz",
                  0.5576852342922284
                ],
                [
                  "test_hp2dec",
                  "test_grid2geo",
                  0.3968494685645344
                ],
                [
                  "test_yyyydoy_to_date",
                  "test_geo2grid",
                  0.6459420026259728
                ],
                [
                  "test_hp2dec",
                  "test_dec2dms",
                  0.3471825374147068
                ],
                [
                  "test_hp2dec",
                  "test_hp2ddm",
                  0.4629100498862757
                ],
                [
                  "test_DDMAngle",
                  "test_dec2ddm",
                  0.2663382293126097
                ],
                [
                  "test_DMSAngle",
                  "test_dec2dms",
                  0.2082501487438923
                ],
                [
                  "test_dec2ddm",
                  "test_geo_grid_transform_interoperability",
                  0.13691038785811876
                ],
                [
                  "test_date_to_yyyydoy",
                  "test_llh2xyz",
                  0.58291054320474
                ],
                [
                  "test_yyyydoy_to_date",
                  "test_xyz2llh",
                  0.22407171442476037
                ],
                [
                  "test_dd2sec",
                  "test_xyz2llh",
                  0.3054769964706846
                ],
                [
                  "test_llh2xyz",
                  "test_xyz2llh",
                  0.5787155394072069
                ],
                [
                  "test_hp2dec",
                  "test_DMSAngle",
                  0.5508908410133132
                ],
                [
                  "test_DMSAngle",
                  "test_hp2ddm",
                  0.1808159974123616
                ],
                [
                  "test_llh2xyz",
                  "test_geo2grid",
                  0.90309410379377
                ],
                [
                  "test_geo_grid_transform_interoperability",
                  "test_grid2geo",
                  0.441801354358398
                ],
                [
                  "test_dec2hp",
                  "test_hp2dec",
                  0.6616346549771004
                ],
                [
                  "test_date_to_yyyydoy",
                  "test_geo2grid",
                  0.6568340162246555
                ],
                [
                  "test_hp2ddm",
                  "test_geo2grid",
                  0.13531047758548045
                ],
                [
                  "test_hp2dec",
                  "test_xyz2llh",
                  0.24224069756247724
                ],
                [
                  "test_DDMAngle",
                  "test_llh2xyz",
                  0.5635745274064273
                ],
                [
                  "test_hp2ddm",
                  "test_llh2xyz",
                  0.09035610238685157
                ],
                [
                  "test_dec2ddm",
                  "test_dd2sec",
                  0.19163559494160481
                ],
                [
                  "test_dec2dms",
                  "test_llh2xyz",
                  0.08031653545497917
                ],
                [
                  "test_DMSAngle",
                  "test_xyz2llh",
                  0.34515316785237543
                ],
                [
                  "test_dec2ddm",
                  "test_yyyydoy_to_date",
                  0.1325350053834193
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_dec2dms",
                "false"
              ],
              [
                "test_dd2sec",
                "false"
              ],
              [
                "test_DMSAngle",
                "true"
              ],
              [
                "test_geo2grid",
                "false"
              ],
              [
                "test_hp2dms",
                "false"
              ],
              [
                "test_hp2dec",
                "false"
              ],
              [
                "test_DDMAngle",
                "true"
              ],
              [
                "test_dec2hp",
                "false"
              ],
              [
                "test_hp2ddm",
                "false"
              ],
              [
                "test_llh2xyz",
                "false"
              ],
              [
                "test_xyz2llh",
                "false"
              ],
              [
                "test_grid2geo",
                "false"
              ],
              [
                "test_date_to_yyyydoy",
                "false"
              ],
              [
                "test_yyyydoy_to_date",
                "false"
              ],
              [
                "test_dec2ddm",
                "false"
              ],
              [
                "test_geo_grid_transform_interoperability",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 16
      }
    ]
  },
  {
    "name": "geodepy_\u0026_tests_\u0026_test_geodesy.py",
    "testCases": [
      {
        "name": "TestGeodesy",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_enu2xyz",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_vincdir_utm",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_vincdir",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_vincinv_utm",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_vincinv_edgecases",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_vincinv",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_equality_vincentys",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_enu2xyz",
                  "[]"
                ],
                [
                  "test_vincdir_utm",
                  "[]"
                ],
                [
                  "test_vincdir",
                  "[]"
                ],
                [
                  "test_vincinv_utm",
                  "[]"
                ],
                [
                  "test_vincinv_edgecases",
                  "[]"
                ],
                [
                  "test_vincinv",
                  "[]"
                ],
                [
                  "test_equality_vincentys",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_enu2xyz",
                  "false"
                ],
                [
                  "test_vincdir_utm",
                  "false"
                ],
                [
                  "test_vincdir",
                  "false"
                ],
                [
                  "test_vincinv_utm",
                  "false"
                ],
                [
                  "test_vincinv_edgecases",
                  "false"
                ],
                [
                  "test_vincinv",
                  "false"
                ],
                [
                  "test_equality_vincentys",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_enu2xyz",
                  "false"
                ],
                [
                  "test_vincdir_utm",
                  "false"
                ],
                [
                  "test_vincdir",
                  "false"
                ],
                [
                  "test_vincinv_utm",
                  "false"
                ],
                [
                  "test_vincinv_edgecases",
                  "false"
                ],
                [
                  "test_vincinv",
                  "false"
                ],
                [
                  "test_equality_vincentys",
                  "true"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_enu2xyz",
                  "false"
                ],
                [
                  "test_vincdir_utm",
                  "true"
                ],
                [
                  "test_vincdir",
                  "true"
                ],
                [
                  "test_vincinv_utm",
                  "false"
                ],
                [
                  "test_vincinv_edgecases",
                  "false"
                ],
                [
                  "test_vincinv",
                  "true"
                ],
                [
                  "test_equality_vincentys",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_enu2xyz",
                  "false"
                ],
                [
                  "test_vincdir_utm",
                  "false"
                ],
                [
                  "test_vincdir",
                  "false"
                ],
                [
                  "test_vincinv_utm",
                  "false"
                ],
                [
                  "test_vincinv_edgecases",
                  "false"
                ],
                [
                  "test_vincinv",
                  "false"
                ],
                [
                  "test_equality_vincentys",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_enu2xyz",
                "false"
              ],
              [
                "test_vincdir_utm",
                "false"
              ],
              [
                "test_vincdir",
                "false"
              ],
              [
                "test_vincinv_utm",
                "false"
              ],
              [
                "test_vincinv_edgecases",
                "false"
              ],
              [
                "test_vincinv",
                "false"
              ],
              [
                "test_equality_vincentys",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_enu2xyz",
                "false"
              ],
              [
                "test_vincdir_utm",
                "false"
              ],
              [
                "test_vincdir",
                "false"
              ],
              [
                "test_vincinv_utm",
                "false"
              ],
              [
                "test_vincinv_edgecases",
                "false"
              ],
              [
                "test_vincinv",
                "false"
              ],
              [
                "test_equality_vincentys",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_enu2xyz",
                []
              ],
              [
                "test_vincdir_utm",
                []
              ],
              [
                "test_vincdir",
                []
              ],
              [
                "test_vincinv_utm",
                []
              ],
              [
                "test_vincinv_edgecases",
                []
              ],
              [
                "test_vincinv",
                []
              ],
              [
                "test_equality_vincentys",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_enu2xyz",
                "false"
              ],
              [
                "test_vincdir_utm",
                "false"
              ],
              [
                "test_vincdir",
                "false"
              ],
              [
                "test_vincinv_utm",
                "false"
              ],
              [
                "test_vincinv_edgecases",
                "false"
              ],
              [
                "test_vincinv",
                "false"
              ],
              [
                "test_equality_vincentys",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_enu2xyz",
                "true"
              ],
              [
                "test_vincdir_utm",
                "true"
              ],
              [
                "test_vincdir",
                "true"
              ],
              [
                "test_vincinv_utm",
                "true"
              ],
              [
                "test_vincinv_edgecases",
                "false"
              ],
              [
                "test_vincinv",
                "true"
              ],
              [
                "test_equality_vincentys",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_enu2xyz",
                  "0"
                ],
                [
                  "test_vincdir_utm",
                  "0"
                ],
                [
                  "test_vincdir",
                  "0"
                ],
                [
                  "test_vincinv_utm",
                  "0"
                ],
                [
                  "test_vincinv_edgecases",
                  "0"
                ],
                [
                  "test_vincinv",
                  "0"
                ],
                [
                  "test_equality_vincentys",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_enu2xyz",
                  "0"
                ],
                [
                  "test_vincdir_utm",
                  "0"
                ],
                [
                  "test_vincdir",
                  "0"
                ],
                [
                  "test_vincinv_utm",
                  "0"
                ],
                [
                  "test_vincinv_edgecases",
                  "0"
                ],
                [
                  "test_vincinv",
                  "0"
                ],
                [
                  "test_equality_vincentys",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_enu2xyz",
                "false"
              ],
              [
                "test_vincdir_utm",
                "false"
              ],
              [
                "test_vincdir",
                "false"
              ],
              [
                "test_vincinv_utm",
                "false"
              ],
              [
                "test_vincinv_edgecases",
                "false"
              ],
              [
                "test_vincinv",
                "false"
              ],
              [
                "test_equality_vincentys",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_enu2xyz",
                "false"
              ],
              [
                "test_vincdir_utm",
                "false"
              ],
              [
                "test_vincdir",
                "false"
              ],
              [
                "test_vincinv_utm",
                "false"
              ],
              [
                "test_vincinv_edgecases",
                "false"
              ],
              [
                "test_vincinv",
                "false"
              ],
              [
                "test_equality_vincentys",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_enu2xyz",
                "6"
              ],
              [
                "test_vincdir_utm",
                "15"
              ],
              [
                "test_vincdir",
                "9"
              ],
              [
                "test_vincinv_utm",
                "3"
              ],
              [
                "test_vincinv_edgecases",
                "3"
              ],
              [
                "test_vincinv",
                "15"
              ],
              [
                "test_equality_vincentys",
                "3"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": true,
            "detail": [
              [
                "test_enu2xyz",
                [
                  "MOBS_GDA1994",
                  "grid_brg",
                  "e",
                  "MOBS_GDA2020_XYZ",
                  "local_north",
                  "n",
                  "local_vector",
                  "MOBS_GDA1994_XYZ",
                  "mga_vector",
                  "MOBS_MGA2020",
                  "MOBS_GDA2020",
                  "grid_dist",
                  "u",
                  "xyz_vector",
                  "x",
                  "y",
                  "z",
                  "MOBS_MGA1994",
                  "local_east"
                ]
              ],
              [
                "test_vincdir_utm",
                [
                  "azimuth1to2",
                  "azimuth2to1",
                  "east2",
                  "east1",
                  "hemisphere2",
                  "north1",
                  "north2",
                  "ell_dist",
                  "zone2",
                  "zone1",
                  "azimuth1to2_DMS"
                ]
              ],
              [
                "test_vincdir",
                [
                  "lat1",
                  "long2",
                  "lat1_DMS",
                  "lat2",
                  "lon1",
                  "azimuth1to2",
                  "lon2",
                  "azimuth2to1",
                  "lon1_DMS",
                  "ell_dist",
                  "azimuth1to2_DMS"
                ]
              ],
              [
                "test_vincinv_utm",
                [
                  "azimuth1to2",
                  "azimuth2to1",
                  "east2",
                  "east1",
                  "north1",
                  "north2",
                  "ell_dist",
                  "zone2",
                  "zone1"
                ]
              ],
              [
                "test_vincinv_edgecases",
                [
                  "lat1",
                  "lat2",
                  "lon1",
                  "gdist_2",
                  "lon2",
                  "az21",
                  "gdist",
                  "az12",
                  "az12_2",
                  "az21_2"
                ]
              ],
              [
                "test_vincinv",
                [
                  "lat1",
                  "lat2",
                  "lat2_DMS",
                  "azimuth1to2",
                  "lon2_DMS",
                  "azimuth2to1",
                  "ell_dist",
                  "lat1_DMS",
                  "test2",
                  "lon1",
                  "pl1",
                  "lon2",
                  "lon1_DMS",
                  "pl2"
                ]
              ],
              [
                "test_equality_vincentys",
                [
                  "vincdir_input",
                  "abs_path",
                  "vincdir_result",
                  "test_pairs",
                  "test_geo_coord2",
                  "test_geo_coords",
                  "vincinv_result"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_enu2xyz",
                []
              ],
              [
                "test_vincdir_utm",
                []
              ],
              [
                "test_vincdir",
                []
              ],
              [
                "test_vincinv_utm",
                []
              ],
              [
                "test_vincinv_edgecases",
                []
              ],
              [
                "test_vincinv",
                []
              ],
              [
                "test_equality_vincentys",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8091235144330592,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_enu2xyz",
                  "test_vincdir_utm",
                  0.7194296094868168
                ],
                [
                  "test_enu2xyz",
                  "test_vincinv",
                  0.8309973711837718
                ],
                [
                  "test_vincinv_utm",
                  "test_vincdir_utm",
                  0.9140012987932634
                ],
                [
                  "test_enu2xyz",
                  "test_vincinv_edgecases",
                  0.7799850558624406
                ],
                [
                  "test_vincinv",
                  "test_vincdir_utm",
                  0.9190602266482928
                ],
                [
                  "test_vincinv_utm",
                  "test_vincinv_edgecases",
                  0.8517942838244995
                ],
                [
                  "test_enu2xyz",
                  "test_vincinv_utm",
                  0.8255779249991441
                ],
                [
                  "test_vincinv",
                  "test_equality_vincentys",
                  0.6819451469797316
                ],
                [
                  "test_vincdir",
                  "test_vincinv_edgecases",
                  0.8629264719611122
                ],
                [
                  "test_vincdir_utm",
                  "test_equality_vincentys",
                  0.5999897347886575
                ],
                [
                  "test_vincinv",
                  "test_vincinv_utm",
                  0.9450143831872655
                ],
                [
                  "test_equality_vincentys",
                  "test_vincinv_edgecases",
                  0.6409716406803116
                ],
                [
                  "test_vincinv",
                  "test_vincdir",
                  0.9798535959954173
                ],
                [
                  "test_enu2xyz",
                  "test_vincdir",
                  0.8026688431529581
                ],
                [
                  "test_vincinv",
                  "test_vincinv_edgecases",
                  0.9034281587691969
                ],
                [
                  "test_vincinv_utm",
                  "test_equality_vincentys",
                  0.6870103389586111
                ],
                [
                  "test_enu2xyz",
                  "test_equality_vincentys",
                  0.6925699144259432
                ],
                [
                  "test_vincdir",
                  "test_vincinv_utm",
                  0.9393623147705249
                ],
                [
                  "test_vincdir",
                  "test_equality_vincentys",
                  0.6623721430296093
                ],
                [
                  "test_vincdir_utm",
                  "test_vincinv_edgecases",
                  0.8339074783133327
                ],
                [
                  "test_vincdir",
                  "test_vincdir_utm",
                  0.9187278672833439
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_enu2xyz",
                "false"
              ],
              [
                "test_vincdir_utm",
                "false"
              ],
              [
                "test_vincdir",
                "false"
              ],
              [
                "test_vincinv_utm",
                "false"
              ],
              [
                "test_vincinv_edgecases",
                "false"
              ],
              [
                "test_vincinv",
                "false"
              ],
              [
                "test_equality_vincentys",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 7
      }
    ]
  },
  {
    "name": "geodepy_\u0026_tests_\u0026_test_transform.py",
    "testCases": [
      {
        "name": "TestTransforms",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_conform14",
                  "[]"
                ],
                [
                  "test_mga94_to_mga2020",
                  "[]"
                ],
                [
                  "test_conform7",
                  "[]"
                ],
                [
                  "test_atrf2014_to_gda2020",
                  "[]"
                ],
                [
                  "test_mga2020_to_mga94",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_conform14",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_mga94_to_mga2020",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_conform7",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_atrf2014_to_gda2020",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_mga2020_to_mga94",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_conform14",
                  "false"
                ],
                [
                  "test_mga94_to_mga2020",
                  "false"
                ],
                [
                  "test_conform7",
                  "false"
                ],
                [
                  "test_atrf2014_to_gda2020",
                  "false"
                ],
                [
                  "test_mga2020_to_mga94",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_conform14",
                  "false"
                ],
                [
                  "test_mga94_to_mga2020",
                  "false"
                ],
                [
                  "test_conform7",
                  "false"
                ],
                [
                  "test_atrf2014_to_gda2020",
                  "false"
                ],
                [
                  "test_mga2020_to_mga94",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_conform14",
                  "false"
                ],
                [
                  "test_mga94_to_mga2020",
                  "false"
                ],
                [
                  "test_conform7",
                  "false"
                ],
                [
                  "test_atrf2014_to_gda2020",
                  "false"
                ],
                [
                  "test_mga2020_to_mga94",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_conform14",
                  "false"
                ],
                [
                  "test_mga94_to_mga2020",
                  "false"
                ],
                [
                  "test_conform7",
                  "false"
                ],
                [
                  "test_atrf2014_to_gda2020",
                  "false"
                ],
                [
                  "test_mga2020_to_mga94",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_conform14",
                "false"
              ],
              [
                "test_mga94_to_mga2020",
                "false"
              ],
              [
                "test_conform7",
                "false"
              ],
              [
                "test_atrf2014_to_gda2020",
                "false"
              ],
              [
                "test_mga2020_to_mga94",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_conform14",
                "false"
              ],
              [
                "test_mga94_to_mga2020",
                "false"
              ],
              [
                "test_conform7",
                "false"
              ],
              [
                "test_atrf2014_to_gda2020",
                "false"
              ],
              [
                "test_mga2020_to_mga94",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_conform14",
                []
              ],
              [
                "test_mga94_to_mga2020",
                []
              ],
              [
                "test_conform7",
                []
              ],
              [
                "test_atrf2014_to_gda2020",
                []
              ],
              [
                "test_mga2020_to_mga94",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_conform14",
                "false"
              ],
              [
                "test_mga94_to_mga2020",
                "false"
              ],
              [
                "test_conform7",
                "false"
              ],
              [
                "test_atrf2014_to_gda2020",
                "false"
              ],
              [
                "test_mga2020_to_mga94",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_conform14",
                "false"
              ],
              [
                "test_mga94_to_mga2020",
                "false"
              ],
              [
                "test_conform7",
                "false"
              ],
              [
                "test_atrf2014_to_gda2020",
                "false"
              ],
              [
                "test_mga2020_to_mga94",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_conform14",
                  "0"
                ],
                [
                  "test_mga94_to_mga2020",
                  "0"
                ],
                [
                  "test_conform7",
                  "0"
                ],
                [
                  "test_atrf2014_to_gda2020",
                  "0"
                ],
                [
                  "test_mga2020_to_mga94",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_conform14",
                  "0"
                ],
                [
                  "test_mga94_to_mga2020",
                  "0"
                ],
                [
                  "test_conform7",
                  "0"
                ],
                [
                  "test_atrf2014_to_gda2020",
                  "0"
                ],
                [
                  "test_mga2020_to_mga94",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_conform14",
                "false"
              ],
              [
                "test_mga94_to_mga2020",
                "false"
              ],
              [
                "test_conform7",
                "false"
              ],
              [
                "test_atrf2014_to_gda2020",
                "false"
              ],
              [
                "test_mga2020_to_mga94",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_conform14",
                "false"
              ],
              [
                "test_mga94_to_mga2020",
                "false"
              ],
              [
                "test_conform7",
                "false"
              ],
              [
                "test_atrf2014_to_gda2020",
                "false"
              ],
              [
                "test_mga2020_to_mga94",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_conform14",
                "6"
              ],
              [
                "test_mga94_to_mga2020",
                "8"
              ],
              [
                "test_conform7",
                "6"
              ],
              [
                "test_atrf2014_to_gda2020",
                "6"
              ],
              [
                "test_mga2020_to_mga94",
                "8"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_conform14",
                [
                  "alic_gda2020",
                  "alic_gda2020_comp",
                  "alic_itrf14at2018_comp",
                  "alic_itrf14at2018"
                ]
              ],
              [
                "test_mga94_to_mga2020",
                [
                  "alic_mga20_noellht_comp",
                  "alic_mga20",
                  "alic_mga94",
                  "alic_mga20_ellht_comp"
                ]
              ],
              [
                "test_conform7",
                [
                  "alic_gda1994_comp",
                  "alic_gda2020",
                  "alic_gda2020_comp",
                  "alic_gda1994"
                ]
              ],
              [
                "test_atrf2014_to_gda2020",
                [
                  "alic_gda2020",
                  "alic_gda2020_comp",
                  "alic_itrf14at2018_comp",
                  "alic_itrf14at2018"
                ]
              ],
              [
                "test_mga2020_to_mga94",
                [
                  "alic_mga20",
                  "alic_mga94_noellht_comp",
                  "alic_mga94",
                  "alic_mga94_ellht_comp"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_conform14",
                []
              ],
              [
                "test_mga94_to_mga2020",
                []
              ],
              [
                "test_conform7",
                []
              ],
              [
                "test_atrf2014_to_gda2020",
                []
              ],
              [
                "test_mga2020_to_mga94",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7938134373618428,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_atrf2014_to_gda2020",
                  "test_mga94_to_mga2020",
                  0.6901034715827149
                ],
                [
                  "test_conform14",
                  "test_mga2020_to_mga94",
                  0.7052910349164367
                ],
                [
                  "test_conform7",
                  "test_atrf2014_to_gda2020",
                  0.9130100353364472
                ],
                [
                  "test_conform7",
                  "test_mga2020_to_mga94",
                  0.6721491010546432
                ],
                [
                  "test_conform14",
                  "test_atrf2014_to_gda2020",
                  0.9780765648591997
                ],
                [
                  "test_atrf2014_to_gda2020",
                  "test_mga2020_to_mga94",
                  0.6901034715827149
                ],
                [
                  "test_conform7",
                  "test_mga94_to_mga2020",
                  0.6721491010546432
                ],
                [
                  "test_conform14",
                  "test_mga94_to_mga2020",
                  0.7052910349164367
                ],
                [
                  "test_conform7",
                  "test_conform14",
                  0.9119605583151913
                ],
                [
                  "test_mga94_to_mga2020",
                  "test_mga2020_to_mga94",
                  1.0
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_conform14",
                "false"
              ],
              [
                "test_mga94_to_mga2020",
                "false"
              ],
              [
                "test_conform7",
                "false"
              ],
              [
                "test_atrf2014_to_gda2020",
                "false"
              ],
              [
                "test_mga2020_to_mga94",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      }
    ]
  },
  {
    "name": "geodepy_\u0026_tests_\u0026_test_statistics.py",
    "testCases": [
      {
        "name": "TestStatistics",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_rotation_matrix",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_relative_error",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_k_val95_typeError",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_vcv_local2cart_3X1",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_vcv_local2cart_3X2",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_error_ellipse",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_circ_hz_pu",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_k_val95_between_1_and_120",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_vcv_cart2local_3x3",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_k_val95_greater_120",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_vcv_cart2local_3X2",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_k_val95_less_1",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_vcv_cart2local_3x1",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_vcv_local2cart_3X3",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_rotation_matrix",
                  "[]"
                ],
                [
                  "test_relative_error",
                  "[]"
                ],
                [
                  "test_k_val95_typeError",
                  "[]"
                ],
                [
                  "test_vcv_local2cart_3X1",
                  "[]"
                ],
                [
                  "test_vcv_local2cart_3X2",
                  "[]"
                ],
                [
                  "test_error_ellipse",
                  "[]"
                ],
                [
                  "test_circ_hz_pu",
                  "[]"
                ],
                [
                  "test_k_val95_between_1_and_120",
                  "[]"
                ],
                [
                  "test_vcv_cart2local_3x3",
                  "[]"
                ],
                [
                  "test_k_val95_greater_120",
                  "[]"
                ],
                [
                  "test_vcv_cart2local_3X2",
                  "[]"
                ],
                [
                  "test_k_val95_less_1",
                  "[]"
                ],
                [
                  "test_vcv_cart2local_3x1",
                  "[]"
                ],
                [
                  "test_vcv_local2cart_3X3",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_rotation_matrix",
                  "false"
                ],
                [
                  "test_relative_error",
                  "false"
                ],
                [
                  "test_k_val95_typeError",
                  "true"
                ],
                [
                  "test_vcv_local2cart_3X1",
                  "false"
                ],
                [
                  "test_vcv_local2cart_3X2",
                  "false"
                ],
                [
                  "test_error_ellipse",
                  "false"
                ],
                [
                  "test_circ_hz_pu",
                  "false"
                ],
                [
                  "test_k_val95_between_1_and_120",
                  "false"
                ],
                [
                  "test_vcv_cart2local_3x3",
                  "false"
                ],
                [
                  "test_k_val95_greater_120",
                  "false"
                ],
                [
                  "test_vcv_cart2local_3X2",
                  "false"
                ],
                [
                  "test_k_val95_less_1",
                  "false"
                ],
                [
                  "test_vcv_cart2local_3x1",
                  "false"
                ],
                [
                  "test_vcv_local2cart_3X3",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_rotation_matrix",
                  "false"
                ],
                [
                  "test_relative_error",
                  "false"
                ],
                [
                  "test_k_val95_typeError",
                  "false"
                ],
                [
                  "test_vcv_local2cart_3X1",
                  "false"
                ],
                [
                  "test_vcv_local2cart_3X2",
                  "false"
                ],
                [
                  "test_error_ellipse",
                  "false"
                ],
                [
                  "test_circ_hz_pu",
                  "false"
                ],
                [
                  "test_k_val95_between_1_and_120",
                  "false"
                ],
                [
                  "test_vcv_cart2local_3x3",
                  "false"
                ],
                [
                  "test_k_val95_greater_120",
                  "false"
                ],
                [
                  "test_vcv_cart2local_3X2",
                  "false"
                ],
                [
                  "test_k_val95_less_1",
                  "false"
                ],
                [
                  "test_vcv_cart2local_3x1",
                  "false"
                ],
                [
                  "test_vcv_local2cart_3X3",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_rotation_matrix",
                  "false"
                ],
                [
                  "test_relative_error",
                  "false"
                ],
                [
                  "test_k_val95_typeError",
                  "false"
                ],
                [
                  "test_vcv_local2cart_3X1",
                  "false"
                ],
                [
                  "test_vcv_local2cart_3X2",
                  "false"
                ],
                [
                  "test_error_ellipse",
                  "false"
                ],
                [
                  "test_circ_hz_pu",
                  "false"
                ],
                [
                  "test_k_val95_between_1_and_120",
                  "false"
                ],
                [
                  "test_vcv_cart2local_3x3",
                  "false"
                ],
                [
                  "test_k_val95_greater_120",
                  "false"
                ],
                [
                  "test_vcv_cart2local_3X2",
                  "false"
                ],
                [
                  "test_k_val95_less_1",
                  "false"
                ],
                [
                  "test_vcv_cart2local_3x1",
                  "false"
                ],
                [
                  "test_vcv_local2cart_3X3",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_rotation_matrix",
                  "false"
                ],
                [
                  "test_relative_error",
                  "false"
                ],
                [
                  "test_k_val95_typeError",
                  "false"
                ],
                [
                  "test_vcv_local2cart_3X1",
                  "false"
                ],
                [
                  "test_vcv_local2cart_3X2",
                  "false"
                ],
                [
                  "test_error_ellipse",
                  "false"
                ],
                [
                  "test_circ_hz_pu",
                  "false"
                ],
                [
                  "test_k_val95_between_1_and_120",
                  "false"
                ],
                [
                  "test_vcv_cart2local_3x3",
                  "false"
                ],
                [
                  "test_k_val95_greater_120",
                  "false"
                ],
                [
                  "test_vcv_cart2local_3X2",
                  "false"
                ],
                [
                  "test_k_val95_less_1",
                  "false"
                ],
                [
                  "test_vcv_cart2local_3x1",
                  "false"
                ],
                [
                  "test_vcv_local2cart_3X3",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_rotation_matrix",
                "false"
              ],
              [
                "test_relative_error",
                "false"
              ],
              [
                "test_k_val95_typeError",
                "false"
              ],
              [
                "test_vcv_local2cart_3X1",
                "false"
              ],
              [
                "test_vcv_local2cart_3X2",
                "false"
              ],
              [
                "test_error_ellipse",
                "false"
              ],
              [
                "test_circ_hz_pu",
                "false"
              ],
              [
                "test_k_val95_between_1_and_120",
                "false"
              ],
              [
                "test_vcv_cart2local_3x3",
                "false"
              ],
              [
                "test_k_val95_greater_120",
                "false"
              ],
              [
                "test_vcv_cart2local_3X2",
                "false"
              ],
              [
                "test_k_val95_less_1",
                "false"
              ],
              [
                "test_vcv_cart2local_3x1",
                "false"
              ],
              [
                "test_vcv_local2cart_3X3",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_rotation_matrix",
                "false"
              ],
              [
                "test_relative_error",
                "false"
              ],
              [
                "test_k_val95_typeError",
                "false"
              ],
              [
                "test_vcv_local2cart_3X1",
                "false"
              ],
              [
                "test_vcv_local2cart_3X2",
                "false"
              ],
              [
                "test_error_ellipse",
                "false"
              ],
              [
                "test_circ_hz_pu",
                "false"
              ],
              [
                "test_k_val95_between_1_and_120",
                "false"
              ],
              [
                "test_vcv_cart2local_3x3",
                "false"
              ],
              [
                "test_k_val95_greater_120",
                "false"
              ],
              [
                "test_vcv_cart2local_3X2",
                "false"
              ],
              [
                "test_k_val95_less_1",
                "false"
              ],
              [
                "test_vcv_cart2local_3x1",
                "false"
              ],
              [
                "test_vcv_local2cart_3X3",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_rotation_matrix",
                []
              ],
              [
                "test_relative_error",
                []
              ],
              [
                "test_k_val95_typeError",
                []
              ],
              [
                "test_vcv_local2cart_3X1",
                []
              ],
              [
                "test_vcv_local2cart_3X2",
                []
              ],
              [
                "test_error_ellipse",
                []
              ],
              [
                "test_circ_hz_pu",
                []
              ],
              [
                "test_k_val95_between_1_and_120",
                []
              ],
              [
                "test_vcv_cart2local_3x3",
                []
              ],
              [
                "test_k_val95_greater_120",
                []
              ],
              [
                "test_vcv_cart2local_3X2",
                []
              ],
              [
                "test_k_val95_less_1",
                []
              ],
              [
                "test_vcv_cart2local_3x1",
                []
              ],
              [
                "test_vcv_local2cart_3X3",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_rotation_matrix",
                "false"
              ],
              [
                "test_relative_error",
                "false"
              ],
              [
                "test_k_val95_typeError",
                "false"
              ],
              [
                "test_vcv_local2cart_3X1",
                "false"
              ],
              [
                "test_vcv_local2cart_3X2",
                "false"
              ],
              [
                "test_error_ellipse",
                "false"
              ],
              [
                "test_circ_hz_pu",
                "false"
              ],
              [
                "test_k_val95_between_1_and_120",
                "false"
              ],
              [
                "test_vcv_cart2local_3x3",
                "false"
              ],
              [
                "test_k_val95_greater_120",
                "false"
              ],
              [
                "test_vcv_cart2local_3X2",
                "false"
              ],
              [
                "test_k_val95_less_1",
                "false"
              ],
              [
                "test_vcv_cart2local_3x1",
                "false"
              ],
              [
                "test_vcv_local2cart_3X3",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_rotation_matrix",
                "false"
              ],
              [
                "test_relative_error",
                "false"
              ],
              [
                "test_k_val95_typeError",
                "false"
              ],
              [
                "test_vcv_local2cart_3X1",
                "false"
              ],
              [
                "test_vcv_local2cart_3X2",
                "false"
              ],
              [
                "test_error_ellipse",
                "false"
              ],
              [
                "test_circ_hz_pu",
                "false"
              ],
              [
                "test_k_val95_between_1_and_120",
                "false"
              ],
              [
                "test_vcv_cart2local_3x3",
                "false"
              ],
              [
                "test_k_val95_greater_120",
                "false"
              ],
              [
                "test_vcv_cart2local_3X2",
                "false"
              ],
              [
                "test_k_val95_less_1",
                "false"
              ],
              [
                "test_vcv_cart2local_3x1",
                "false"
              ],
              [
                "test_vcv_local2cart_3X3",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_rotation_matrix",
                  "0"
                ],
                [
                  "test_relative_error",
                  "0"
                ],
                [
                  "test_k_val95_typeError",
                  "0"
                ],
                [
                  "test_vcv_local2cart_3X1",
                  "0"
                ],
                [
                  "test_vcv_local2cart_3X2",
                  "0"
                ],
                [
                  "test_error_ellipse",
                  "0"
                ],
                [
                  "test_circ_hz_pu",
                  "0"
                ],
                [
                  "test_k_val95_between_1_and_120",
                  "0"
                ],
                [
                  "test_vcv_cart2local_3x3",
                  "0"
                ],
                [
                  "test_k_val95_greater_120",
                  "0"
                ],
                [
                  "test_vcv_cart2local_3X2",
                  "0"
                ],
                [
                  "test_k_val95_less_1",
                  "0"
                ],
                [
                  "test_vcv_cart2local_3x1",
                  "0"
                ],
                [
                  "test_vcv_local2cart_3X3",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_rotation_matrix",
                  "0"
                ],
                [
                  "test_relative_error",
                  "0"
                ],
                [
                  "test_k_val95_typeError",
                  "0"
                ],
                [
                  "test_vcv_local2cart_3X1",
                  "0"
                ],
                [
                  "test_vcv_local2cart_3X2",
                  "0"
                ],
                [
                  "test_error_ellipse",
                  "0"
                ],
                [
                  "test_circ_hz_pu",
                  "0"
                ],
                [
                  "test_k_val95_between_1_and_120",
                  "0"
                ],
                [
                  "test_vcv_cart2local_3x3",
                  "0"
                ],
                [
                  "test_k_val95_greater_120",
                  "0"
                ],
                [
                  "test_vcv_cart2local_3X2",
                  "0"
                ],
                [
                  "test_k_val95_less_1",
                  "0"
                ],
                [
                  "test_vcv_cart2local_3x1",
                  "0"
                ],
                [
                  "test_vcv_local2cart_3X3",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_rotation_matrix",
                "false"
              ],
              [
                "test_relative_error",
                "false"
              ],
              [
                "test_k_val95_typeError",
                "false"
              ],
              [
                "test_vcv_local2cart_3X1",
                "false"
              ],
              [
                "test_vcv_local2cart_3X2",
                "false"
              ],
              [
                "test_error_ellipse",
                "false"
              ],
              [
                "test_circ_hz_pu",
                "false"
              ],
              [
                "test_k_val95_between_1_and_120",
                "false"
              ],
              [
                "test_vcv_cart2local_3x3",
                "false"
              ],
              [
                "test_k_val95_greater_120",
                "false"
              ],
              [
                "test_vcv_cart2local_3X2",
                "false"
              ],
              [
                "test_k_val95_less_1",
                "false"
              ],
              [
                "test_vcv_cart2local_3x1",
                "false"
              ],
              [
                "test_vcv_local2cart_3X3",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_rotation_matrix",
                "false"
              ],
              [
                "test_relative_error",
                "false"
              ],
              [
                "test_k_val95_typeError",
                "false"
              ],
              [
                "test_vcv_local2cart_3X1",
                "false"
              ],
              [
                "test_vcv_local2cart_3X2",
                "false"
              ],
              [
                "test_error_ellipse",
                "false"
              ],
              [
                "test_circ_hz_pu",
                "false"
              ],
              [
                "test_k_val95_between_1_and_120",
                "false"
              ],
              [
                "test_vcv_cart2local_3x3",
                "false"
              ],
              [
                "test_k_val95_greater_120",
                "false"
              ],
              [
                "test_vcv_cart2local_3X2",
                "false"
              ],
              [
                "test_k_val95_less_1",
                "false"
              ],
              [
                "test_vcv_cart2local_3x1",
                "false"
              ],
              [
                "test_vcv_local2cart_3X3",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_rotation_matrix",
                "2"
              ],
              [
                "test_relative_error",
                "2"
              ],
              [
                "test_k_val95_typeError",
                "1"
              ],
              [
                "test_vcv_local2cart_3X1",
                "2"
              ],
              [
                "test_vcv_local2cart_3X2",
                "1"
              ],
              [
                "test_error_ellipse",
                "2"
              ],
              [
                "test_circ_hz_pu",
                "1"
              ],
              [
                "test_k_val95_between_1_and_120",
                "1"
              ],
              [
                "test_vcv_cart2local_3x3",
                "2"
              ],
              [
                "test_k_val95_greater_120",
                "1"
              ],
              [
                "test_vcv_cart2local_3X2",
                "1"
              ],
              [
                "test_k_val95_less_1",
                "1"
              ],
              [
                "test_vcv_cart2local_3x1",
                "2"
              ],
              [
                "test_vcv_local2cart_3X3",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_rotation_matrix",
                [
                  "result",
                  "expected_result"
                ]
              ],
              [
                "test_relative_error",
                [
                  "lat1",
                  "lon1",
                  "var2",
                  "cov12",
                  "expected_results",
                  "var1",
                  "results"
                ]
              ],
              [
                "test_k_val95_typeError",
                [
                  "dof"
                ]
              ],
              [
                "test_vcv_local2cart_3X1",
                [
                  "result",
                  "expected_result"
                ]
              ],
              [
                "test_vcv_local2cart_3X2",
                [
                  "v_cart"
                ]
              ],
              [
                "test_error_ellipse",
                [
                  "result",
                  "expected_result"
                ]
              ],
              [
                "test_circ_hz_pu",
                [
                  "result",
                  "a",
                  "b",
                  "expected_result"
                ]
              ],
              [
                "test_k_val95_between_1_and_120",
                [
                  "result",
                  "dof",
                  "expected_result"
                ]
              ],
              [
                "test_vcv_cart2local_3x3",
                [
                  "result",
                  "expected_result"
                ]
              ],
              [
                "test_k_val95_greater_120",
                [
                  "result",
                  "dof",
                  "expected_result"
                ]
              ],
              [
                "test_vcv_cart2local_3X2",
                [
                  "v_cart"
                ]
              ],
              [
                "test_k_val95_less_1",
                [
                  "result",
                  "dof",
                  "expected_result"
                ]
              ],
              [
                "test_vcv_cart2local_3x1",
                [
                  "result",
                  "expected_result"
                ]
              ],
              [
                "test_vcv_local2cart_3X3",
                [
                  "result",
                  "expected_result"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_rotation_matrix",
                []
              ],
              [
                "test_relative_error",
                []
              ],
              [
                "test_k_val95_typeError",
                []
              ],
              [
                "test_vcv_local2cart_3X1",
                []
              ],
              [
                "test_vcv_local2cart_3X2",
                []
              ],
              [
                "test_error_ellipse",
                []
              ],
              [
                "test_circ_hz_pu",
                []
              ],
              [
                "test_k_val95_between_1_and_120",
                []
              ],
              [
                "test_vcv_cart2local_3x3",
                []
              ],
              [
                "test_k_val95_greater_120",
                []
              ],
              [
                "test_vcv_cart2local_3X2",
                []
              ],
              [
                "test_k_val95_less_1",
                []
              ],
              [
                "test_vcv_cart2local_3x1",
                []
              ],
              [
                "test_vcv_local2cart_3X3",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5270169198632702,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_rotation_matrix",
                  "test_vcv_local2cart_3X3",
                  0.9500489001652873
                ],
                [
                  "test_relative_error",
                  "test_k_val95_greater_120",
                  0.41891624518531084
                ],
                [
                  "test_vcv_cart2local_3X2",
                  "test_circ_hz_pu",
                  0.5765925913445669
                ],
                [
                  "test_k_val95_typeError",
                  "test_k_val95_between_1_and_120",
                  0.4099600308453939
                ],
                [
                  "test_circ_hz_pu",
                  "test_k_val95_typeError",
                  0.28368325730679006
                ],
                [
                  "test_relative_error",
                  "test_k_val95_typeError",
                  0.10966421051124833
                ],
                [
                  "test_vcv_local2cart_3X3",
                  "test_circ_hz_pu",
                  0.4796009737449393
                ],
                [
                  "test_vcv_cart2local_3x3",
                  "test_circ_hz_pu",
                  0.44026710693399373
                ],
                [
                  "test_relative_error",
                  "test_k_val95_between_1_and_120",
                  0.3757394155621674
                ],
                [
                  "test_vcv_cart2local_3x1",
                  "test_vcv_local2cart_3X3",
                  0.705228672209306
                ],
                [
                  "test_vcv_local2cart_3X2",
                  "test_k_val95_greater_120",
                  0.5021133232958694
                ],
                [
                  "test_k_val95_typeError",
                  "test_k_val95_greater_120",
                  0.4386692417126296
                ],
                [
                  "test_k_val95_less_1",
                  "test_k_val95_greater_120",
                  0.8656336257034147
                ],
                [
                  "test_vcv_local2cart_3X1",
                  "test_vcv_local2cart_3X2",
                  0.48413006817023163
                ],
                [
                  "test_vcv_local2cart_3X1",
                  "test_k_val95_between_1_and_120",
                  0.45828913319500475
                ],
                [
                  "test_circ_hz_pu",
                  "test_k_val95_less_1",
                  0.7137183894183611
                ],
                [
                  "test_vcv_cart2local_3X2",
                  "test_vcv_local2cart_3X3",
                  0.6326548876042799
                ],
                [
                  "test_k_val95_greater_120",
                  "test_k_val95_between_1_and_120",
                  0.9408307090960767
                ],
                [
                  "test_rotation_matrix",
                  "test_k_val95_typeError",
                  0.12748335742576652
                ],
                [
                  "test_vcv_local2cart_3X2",
                  "test_k_val95_less_1",
                  0.3965452776772878
                ],
                [
                  "test_error_ellipse",
                  "test_circ_hz_pu",
                  0.5987066163014242
                ],
                [
                  "test_circ_hz_pu",
                  "test_k_val95_between_1_and_120",
                  0.8140915784106942
                ],
                [
                  "test_vcv_cart2local_3x1",
                  "test_k_val95_less_1",
                  0.4948797390405599
                ],
                [
                  "test_vcv_cart2local_3X2",
                  "test_k_val95_between_1_and_120",
                  0.5832770786118242
                ],
                [
                  "test_relative_error",
                  "test_circ_hz_pu",
                  0.4101575686079362
                ],
                [
                  "test_rotation_matrix",
                  "test_relative_error",
                  0.8171686191935718
                ],
                [
                  "test_rotation_matrix",
                  "test_error_ellipse",
                  0.765826823638704
                ],
                [
                  "test_vcv_cart2local_3x1",
                  "test_k_val95_greater_120",
                  0.43312411645778165
                ],
                [
                  "test_vcv_cart2local_3x3",
                  "test_k_val95_between_1_and_120",
                  0.3976528224920913
                ],
                [
                  "test_vcv_local2cart_3X3",
                  "test_k_val95_between_1_and_120",
                  0.442739313306952
                ],
                [
                  "test_rotation_matrix",
                  "test_k_val95_less_1",
                  0.3728873071320941
                ],
                [
                  "test_vcv_local2cart_3X2",
                  "test_relative_error",
                  0.2919782518219702
                ],
                [
                  "test_vcv_local2cart_3X2",
                  "test_k_val95_typeError",
                  0.31068488300060004
                ],
                [
                  "test_circ_hz_pu",
                  "test_k_val95_greater_120",
                  0.8464147390303177
                ],
                [
                  "test_vcv_cart2local_3x3",
                  "test_vcv_cart2local_3x1",
                  0.7220891085983752
                ],
                [
                  "test_vcv_local2cart_3X1",
                  "test_circ_hz_pu",
                  0.5026704642491095
                ],
                [
                  "test_vcv_cart2local_3X2",
                  "test_k_val95_greater_120",
                  0.6100455846621579
                ],
                [
                  "test_vcv_local2cart_3X2",
                  "test_error_ellipse",
                  0.3259179368665352
                ],
                [
                  "test_rotation_matrix",
                  "test_vcv_local2cart_3X2",
                  0.2957334014980647
                ],
                [
                  "test_rotation_matrix",
                  "test_k_val95_between_1_and_120",
                  0.38210119324213765
                ],
                [
                  "test_vcv_local2cart_3X1",
                  "test_k_val95_less_1",
                  0.540464005537528
                ],
                [
                  "test_rotation_matrix",
                  "test_vcv_local2cart_3X1",
                  0.6717738920890469
                ],
                [
                  "test_vcv_cart2local_3x3",
                  "test_vcv_cart2local_3X2",
                  0.6196158889303218
                ],
                [
                  "test_vcv_cart2local_3X2",
                  "test_error_ellipse",
                  0.507661469629964
                ],
                [
                  "test_vcv_cart2local_3X2",
                  "test_relative_error",
                  0.5358485153435871
                ],
                [
                  "test_vcv_cart2local_3x3",
                  "test_error_ellipse",
                  0.7491764253692733
                ],
                [
                  "test_vcv_cart2local_3x1",
                  "test_k_val95_between_1_and_120",
                  0.3702967397323253
                ],
                [
                  "test_error_ellipse",
                  "test_k_val95_between_1_and_120",
                  0.5127645625236082
                ],
                [
                  "test_rotation_matrix",
                  "test_vcv_cart2local_3x3",
                  0.9507791073420138
                ],
                [
                  "test_vcv_cart2local_3x3",
                  "test_k_val95_typeError",
                  0.12471164898158098
                ],
                [
                  "test_vcv_local2cart_3X3",
                  "test_error_ellipse",
                  0.7535248119459949
                ],
                [
                  "test_vcv_cart2local_3X2",
                  "test_k_val95_typeError",
                  0.29036035109749636
                ],
                [
                  "test_vcv_local2cart_3X3",
                  "test_relative_error",
                  0.8172546180733723
                ],
                [
                  "test_vcv_local2cart_3X3",
                  "test_k_val95_greater_120",
                  0.4986779306630932
                ],
                [
                  "test_error_ellipse",
                  "test_k_val95_greater_120",
                  0.5961812992852878
                ],
                [
                  "test_rotation_matrix",
                  "test_k_val95_greater_120",
                  0.45784934986033676
                ],
                [
                  "test_vcv_local2cart_3X1",
                  "test_relative_error",
                  0.46830458483809295
                ],
                [
                  "test_vcv_local2cart_3X1",
                  "test_k_val95_typeError",
                  0.16937687147353955
                ],
                [
                  "test_vcv_cart2local_3X2",
                  "test_vcv_local2cart_3X1",
                  0.5245901639344263
                ],
                [
                  "test_vcv_cart2local_3x1",
                  "test_relative_error",
                  0.42946615069054955
                ],
                [
                  "test_rotation_matrix",
                  "test_vcv_cart2local_3X2",
                  0.5278223437842511
                ],
                [
                  "test_error_ellipse",
                  "test_k_val95_typeError",
                  0.20173664619648224
                ],
                [
                  "test_vcv_cart2local_3x1",
                  "test_vcv_local2cart_3X1",
                  0.9919118927301527
                ],
                [
                  "test_vcv_cart2local_3x1",
                  "test_error_ellipse",
                  0.6207453418840368
                ],
                [
                  "test_vcv_local2cart_3X1",
                  "test_error_ellipse",
                  0.6443395576072619
                ],
                [
                  "test_vcv_cart2local_3x3",
                  "test_k_val95_greater_120",
                  0.4568528122446548
                ],
                [
                  "test_vcv_local2cart_3X2",
                  "test_circ_hz_pu",
                  0.47457899787624946
                ],
                [
                  "test_vcv_cart2local_3x1",
                  "test_vcv_local2cart_3X2",
                  0.43173289177634555
                ],
                [
                  "test_vcv_cart2local_3X2",
                  "test_k_val95_less_1",
                  0.4246502900652006
                ],
                [
                  "test_rotation_matrix",
                  "test_vcv_cart2local_3x1",
                  0.6495609938226388
                ],
                [
                  "test_error_ellipse",
                  "test_k_val95_less_1",
                  0.5287705633524583
                ],
                [
                  "test_relative_error",
                  "test_k_val95_less_1",
                  0.30486073638535227
                ],
                [
                  "test_k_val95_typeError",
                  "test_k_val95_less_1",
                  0.4558423058385518
                ],
                [
                  "test_vcv_cart2local_3X2",
                  "test_vcv_local2cart_3X2",
                  0.8630144693469346
                ],
                [
                  "test_vcv_cart2local_3x1",
                  "test_k_val95_typeError",
                  0.14888750009563953
                ],
                [
                  "test_vcv_local2cart_3X3",
                  "test_k_val95_less_1",
                  0.42103767916034224
                ],
                [
                  "test_k_val95_less_1",
                  "test_k_val95_between_1_and_120",
                  0.8829944192264336
                ],
                [
                  "test_rotation_matrix",
                  "test_circ_hz_pu",
                  0.45005201530423206
                ],
                [
                  "test_error_ellipse",
                  "test_relative_error",
                  0.5953176227956346
                ],
                [
                  "test_vcv_local2cart_3X3",
                  "test_vcv_local2cart_3X1",
                  0.7335129131643824
                ],
                [
                  "test_vcv_cart2local_3x1",
                  "test_vcv_cart2local_3X2",
                  0.4539257814188834
                ],
                [
                  "test_vcv_local2cart_3X3",
                  "test_vcv_local2cart_3X2",
                  0.4473685283282678
                ],
                [
                  "test_vcv_cart2local_3x3",
                  "test_k_val95_less_1",
                  0.3979419194568437
                ],
                [
                  "test_vcv_local2cart_3X1",
                  "test_k_val95_greater_120",
                  0.5161924177910566
                ],
                [
                  "test_vcv_cart2local_3x3",
                  "test_relative_error",
                  0.8084274676031529
                ],
                [
                  "test_vcv_cart2local_3x3",
                  "test_vcv_local2cart_3X3",
                  0.9871520948365688
                ],
                [
                  "test_vcv_cart2local_3x3",
                  "test_vcv_local2cart_3X2",
                  0.4219011510133478
                ],
                [
                  "test_vcv_local2cart_3X3",
                  "test_k_val95_typeError",
                  0.13533299049019168
                ],
                [
                  "test_vcv_local2cart_3X2",
                  "test_k_val95_between_1_and_120",
                  0.49928406613504445
                ],
                [
                  "test_vcv_cart2local_3x3",
                  "test_vcv_local2cart_3X1",
                  0.7416614428105367
                ],
                [
                  "test_vcv_cart2local_3x1",
                  "test_circ_hz_pu",
                  0.42453490440418584
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_rotation_matrix",
                "false"
              ],
              [
                "test_relative_error",
                "false"
              ],
              [
                "test_k_val95_typeError",
                "false"
              ],
              [
                "test_vcv_local2cart_3X1",
                "false"
              ],
              [
                "test_vcv_local2cart_3X2",
                "false"
              ],
              [
                "test_error_ellipse",
                "false"
              ],
              [
                "test_circ_hz_pu",
                "false"
              ],
              [
                "test_k_val95_between_1_and_120",
                "false"
              ],
              [
                "test_vcv_cart2local_3x3",
                "false"
              ],
              [
                "test_k_val95_greater_120",
                "false"
              ],
              [
                "test_vcv_cart2local_3X2",
                "false"
              ],
              [
                "test_k_val95_less_1",
                "false"
              ],
              [
                "test_vcv_cart2local_3x1",
                "false"
              ],
              [
                "test_vcv_local2cart_3X3",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 14
      }
    ]
  }
]