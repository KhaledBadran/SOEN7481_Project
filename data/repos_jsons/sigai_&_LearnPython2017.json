[
  {
    "name": "Learn_Flask_\u0026_tests_\u0026_test_basics.py",
    "testCases": [
      {
        "name": "BasicTestCase",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_app_exists",
                  "[PyCallExpression: self.assertFalse]"
                ],
                [
                  "test_app_is_testing",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_app_exists",
                  "[]"
                ],
                [
                  "test_app_is_testing",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_app_exists",
                  "false"
                ],
                [
                  "test_app_is_testing",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_app_exists",
                  "false"
                ],
                [
                  "test_app_is_testing",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_app_exists",
                  "false"
                ],
                [
                  "test_app_is_testing",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_app_exists",
                  "false"
                ],
                [
                  "test_app_is_testing",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_app_exists",
                "false"
              ],
              [
                "test_app_is_testing",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_app_exists",
                "false"
              ],
              [
                "test_app_is_testing",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_app_exists",
                [
                  "self.app",
                  "self.app_context"
                ]
              ],
              [
                "test_app_is_testing",
                [
                  "self.app",
                  "self.app_context"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_app_exists",
                "false"
              ],
              [
                "test_app_is_testing",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_app_exists",
                "false"
              ],
              [
                "test_app_is_testing",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_app_exists",
                  "0"
                ],
                [
                  "test_app_is_testing",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_app_exists",
                  "0"
                ],
                [
                  "test_app_is_testing",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_app_exists",
                "false"
              ],
              [
                "test_app_is_testing",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_app_exists",
                "false"
              ],
              [
                "test_app_is_testing",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_app_exists",
                "1"
              ],
              [
                "test_app_is_testing",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_app_exists",
                []
              ],
              [
                "test_app_is_testing",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_app_exists",
                []
              ],
              [
                "test_app_is_testing",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5773502691896257,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_app_exists",
                  "test_app_is_testing",
                  0.5773502691896257
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_app_exists",
                "true"
              ],
              [
                "test_app_is_testing",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 2
      }
    ]
  },
  {
    "name": "Learn_Flask_\u0026_tests_\u0026_test_user_model.py",
    "testCases": [
      {
        "name": "UserModelTestCase",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_no_password_getter",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_password_salts_are_random",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_password_setter",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_password_verification",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertFalse]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_no_password_getter",
                  "[]"
                ],
                [
                  "test_password_salts_are_random",
                  "[]"
                ],
                [
                  "test_password_setter",
                  "[]"
                ],
                [
                  "test_password_verification",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_no_password_getter",
                  "false"
                ],
                [
                  "test_password_salts_are_random",
                  "false"
                ],
                [
                  "test_password_setter",
                  "false"
                ],
                [
                  "test_password_verification",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_no_password_getter",
                  "false"
                ],
                [
                  "test_password_salts_are_random",
                  "false"
                ],
                [
                  "test_password_setter",
                  "false"
                ],
                [
                  "test_password_verification",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_no_password_getter",
                  "false"
                ],
                [
                  "test_password_salts_are_random",
                  "false"
                ],
                [
                  "test_password_setter",
                  "false"
                ],
                [
                  "test_password_verification",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_no_password_getter",
                  "false"
                ],
                [
                  "test_password_salts_are_random",
                  "false"
                ],
                [
                  "test_password_setter",
                  "false"
                ],
                [
                  "test_password_verification",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_no_password_getter",
                "false"
              ],
              [
                "test_password_salts_are_random",
                "false"
              ],
              [
                "test_password_setter",
                "false"
              ],
              [
                "test_password_verification",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_no_password_getter",
                "false"
              ],
              [
                "test_password_salts_are_random",
                "false"
              ],
              [
                "test_password_setter",
                "false"
              ],
              [
                "test_password_verification",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_no_password_getter",
                []
              ],
              [
                "test_password_salts_are_random",
                []
              ],
              [
                "test_password_setter",
                []
              ],
              [
                "test_password_verification",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_no_password_getter",
                "false"
              ],
              [
                "test_password_salts_are_random",
                "false"
              ],
              [
                "test_password_setter",
                "false"
              ],
              [
                "test_password_verification",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_no_password_getter",
                "false"
              ],
              [
                "test_password_salts_are_random",
                "false"
              ],
              [
                "test_password_setter",
                "false"
              ],
              [
                "test_password_verification",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_no_password_getter",
                  "0"
                ],
                [
                  "test_password_salts_are_random",
                  "0"
                ],
                [
                  "test_password_setter",
                  "0"
                ],
                [
                  "test_password_verification",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_no_password_getter",
                  "0"
                ],
                [
                  "test_password_salts_are_random",
                  "0"
                ],
                [
                  "test_password_setter",
                  "0"
                ],
                [
                  "test_password_verification",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_no_password_getter",
                "false"
              ],
              [
                "test_password_salts_are_random",
                "false"
              ],
              [
                "test_password_setter",
                "false"
              ],
              [
                "test_password_verification",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_no_password_getter",
                "false"
              ],
              [
                "test_password_salts_are_random",
                "false"
              ],
              [
                "test_password_setter",
                "false"
              ],
              [
                "test_password_verification",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_no_password_getter",
                "1"
              ],
              [
                "test_password_salts_are_random",
                "1"
              ],
              [
                "test_password_setter",
                "1"
              ],
              [
                "test_password_verification",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_no_password_getter",
                [
                  "u"
                ]
              ],
              [
                "test_password_salts_are_random",
                [
                  "u",
                  "u2"
                ]
              ],
              [
                "test_password_setter",
                [
                  "u"
                ]
              ],
              [
                "test_password_verification",
                [
                  "u"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_no_password_getter",
                []
              ],
              [
                "test_password_salts_are_random",
                []
              ],
              [
                "test_password_setter",
                []
              ],
              [
                "test_password_verification",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6155265381572859,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_password_verification",
                  "test_password_salts_are_random",
                  0.6083303292403596
                ],
                [
                  "test_no_password_getter",
                  "test_password_verification",
                  0.5809475019311126
                ],
                [
                  "test_no_password_getter",
                  "test_password_salts_are_random",
                  0.5863954716083738
                ],
                [
                  "test_password_setter",
                  "test_no_password_getter",
                  0.5636018619766345
                ],
                [
                  "test_password_setter",
                  "test_password_verification",
                  0.6063390625908325
                ],
                [
                  "test_password_setter",
                  "test_password_salts_are_random",
                  0.747545001596402
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_no_password_getter",
                "false"
              ],
              [
                "test_password_salts_are_random",
                "true"
              ],
              [
                "test_password_setter",
                "true"
              ],
              [
                "test_password_verification",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "Learn_Python_with_Socratica_\u0026_unit_tests_\u0026_test_circles.py",
    "testCases": [
      {
        "name": "TestCircleArea",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_area",
                  "[PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual, PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_types",
                  "[PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises, PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_values",
                  "[PyCallExpression: self.assertRaises]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_area",
                  "[]"
                ],
                [
                  "test_types",
                  "[]"
                ],
                [
                  "test_values",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_area",
                  "false"
                ],
                [
                  "test_types",
                  "false"
                ],
                [
                  "test_values",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_area",
                  "false"
                ],
                [
                  "test_types",
                  "false"
                ],
                [
                  "test_values",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_area",
                  "false"
                ],
                [
                  "test_types",
                  "false"
                ],
                [
                  "test_values",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_area",
                  "false"
                ],
                [
                  "test_types",
                  "false"
                ],
                [
                  "test_values",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_area",
                "false"
              ],
              [
                "test_types",
                "false"
              ],
              [
                "test_values",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_area",
                "false"
              ],
              [
                "test_types",
                "false"
              ],
              [
                "test_values",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_area",
                []
              ],
              [
                "test_types",
                []
              ],
              [
                "test_values",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_area",
                "false"
              ],
              [
                "test_types",
                "false"
              ],
              [
                "test_values",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_area",
                "true"
              ],
              [
                "test_types",
                "false"
              ],
              [
                "test_values",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_area",
                  "0"
                ],
                [
                  "test_types",
                  "0"
                ],
                [
                  "test_values",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_area",
                  "0"
                ],
                [
                  "test_types",
                  "0"
                ],
                [
                  "test_values",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_area",
                "false"
              ],
              [
                "test_types",
                "false"
              ],
              [
                "test_values",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_area",
                "false"
              ],
              [
                "test_types",
                "false"
              ],
              [
                "test_values",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_area",
                "3"
              ],
              [
                "test_types",
                "3"
              ],
              [
                "test_values",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_area",
                []
              ],
              [
                "test_types",
                []
              ],
              [
                "test_values",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_area",
                []
              ],
              [
                "test_types",
                []
              ],
              [
                "test_values",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.3738951821370063,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_area",
                  "test_types",
                  0.30954574523196393
                ],
                [
                  "test_area",
                  "test_values",
                  0.2340181886004545
                ],
                [
                  "test_values",
                  "test_types",
                  0.5781216125786004
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_area",
                "false"
              ],
              [
                "test_types",
                "false"
              ],
              [
                "test_values",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  }
]