[
  {
    "name": "tests_\u0026_test_iex_scraper.py",
    "testCases": [
      {
        "name": "TestIEXScraper",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_scraper_get_company",
                  "[PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertNotEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertIsNone]"
                ],
                [
                  "test_scraper_default_init",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_scraper_get_data",
                  "[PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsNone]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_scraper_get_company",
                  "[]"
                ],
                [
                  "test_scraper_default_init",
                  "[]"
                ],
                [
                  "test_scraper_get_data",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_scraper_get_company",
                  "false"
                ],
                [
                  "test_scraper_default_init",
                  "false"
                ],
                [
                  "test_scraper_get_data",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_scraper_get_company",
                  "false"
                ],
                [
                  "test_scraper_default_init",
                  "false"
                ],
                [
                  "test_scraper_get_data",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_scraper_get_company",
                  "false"
                ],
                [
                  "test_scraper_default_init",
                  "false"
                ],
                [
                  "test_scraper_get_data",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_scraper_get_company",
                  "false"
                ],
                [
                  "test_scraper_default_init",
                  "false"
                ],
                [
                  "test_scraper_get_data",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_scraper_get_company",
                "false"
              ],
              [
                "test_scraper_default_init",
                "false"
              ],
              [
                "test_scraper_get_data",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_scraper_get_company",
                "false"
              ],
              [
                "test_scraper_default_init",
                "false"
              ],
              [
                "test_scraper_get_data",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_scraper_get_company",
                []
              ],
              [
                "test_scraper_default_init",
                []
              ],
              [
                "test_scraper_get_data",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_scraper_get_company",
                "false"
              ],
              [
                "test_scraper_default_init",
                "false"
              ],
              [
                "test_scraper_get_data",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_scraper_get_company",
                "false"
              ],
              [
                "test_scraper_default_init",
                "true"
              ],
              [
                "test_scraper_get_data",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_scraper_get_company",
                  "0"
                ],
                [
                  "test_scraper_default_init",
                  "0"
                ],
                [
                  "test_scraper_get_data",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_scraper_get_company",
                  "0"
                ],
                [
                  "test_scraper_default_init",
                  "0"
                ],
                [
                  "test_scraper_get_data",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_scraper_get_company",
                "false"
              ],
              [
                "test_scraper_default_init",
                "false"
              ],
              [
                "test_scraper_get_data",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_scraper_get_company",
                "false"
              ],
              [
                "test_scraper_default_init",
                "false"
              ],
              [
                "test_scraper_get_data",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_scraper_get_company",
                "4"
              ],
              [
                "test_scraper_default_init",
                "4"
              ],
              [
                "test_scraper_get_data",
                "4"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_scraper_get_company",
                [
                  "response",
                  "valid_ticker",
                  "invalid_ticker"
                ]
              ],
              [
                "test_scraper_default_init",
                []
              ],
              [
                "test_scraper_get_data",
                [
                  "response",
                  "valid_ticker",
                  "invalid_ticker"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_scraper_get_company",
                [
                  "self.scraper"
                ]
              ],
              [
                "test_scraper_default_init",
                [
                  "self.scraper"
                ]
              ],
              [
                "test_scraper_get_data",
                [
                  "self.scraper"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5013905956242545,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_scraper_default_init",
                  "test_scraper_get_company",
                  0.31016140346615695
                ],
                [
                  "test_scraper_default_init",
                  "test_scraper_get_data",
                  0.3253000243161777
                ],
                [
                  "test_scraper_get_data",
                  "test_scraper_get_company",
                  0.8687103590904286
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_scraper_get_company",
                "false"
              ],
              [
                "test_scraper_default_init",
                "false"
              ],
              [
                "test_scraper_get_data",
                "true"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_yahoo_scraper.py",
    "testCases": [
      {
        "name": "TestYahooScraper",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_scraper_default_init",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_scraper_get_data",
                  "[PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsNone]"
                ],
                [
                  "test_scraper_get_company",
                  "[PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertNotEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertIsNone]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_scraper_default_init",
                  "[]"
                ],
                [
                  "test_scraper_get_data",
                  "[]"
                ],
                [
                  "test_scraper_get_company",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_scraper_default_init",
                  "false"
                ],
                [
                  "test_scraper_get_data",
                  "false"
                ],
                [
                  "test_scraper_get_company",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_scraper_default_init",
                  "false"
                ],
                [
                  "test_scraper_get_data",
                  "false"
                ],
                [
                  "test_scraper_get_company",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_scraper_default_init",
                  "false"
                ],
                [
                  "test_scraper_get_data",
                  "false"
                ],
                [
                  "test_scraper_get_company",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_scraper_default_init",
                  "false"
                ],
                [
                  "test_scraper_get_data",
                  "false"
                ],
                [
                  "test_scraper_get_company",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_scraper_default_init",
                "false"
              ],
              [
                "test_scraper_get_data",
                "false"
              ],
              [
                "test_scraper_get_company",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_scraper_default_init",
                "false"
              ],
              [
                "test_scraper_get_data",
                "false"
              ],
              [
                "test_scraper_get_company",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_scraper_default_init",
                []
              ],
              [
                "test_scraper_get_data",
                []
              ],
              [
                "test_scraper_get_company",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_scraper_default_init",
                "false"
              ],
              [
                "test_scraper_get_data",
                "false"
              ],
              [
                "test_scraper_get_company",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_scraper_default_init",
                "true"
              ],
              [
                "test_scraper_get_data",
                "false"
              ],
              [
                "test_scraper_get_company",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_scraper_default_init",
                  "0"
                ],
                [
                  "test_scraper_get_data",
                  "0"
                ],
                [
                  "test_scraper_get_company",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_scraper_default_init",
                  "0"
                ],
                [
                  "test_scraper_get_data",
                  "0"
                ],
                [
                  "test_scraper_get_company",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_scraper_default_init",
                "false"
              ],
              [
                "test_scraper_get_data",
                "false"
              ],
              [
                "test_scraper_get_company",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_scraper_default_init",
                "false"
              ],
              [
                "test_scraper_get_data",
                "false"
              ],
              [
                "test_scraper_get_company",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_scraper_default_init",
                "4"
              ],
              [
                "test_scraper_get_data",
                "4"
              ],
              [
                "test_scraper_get_company",
                "4"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_scraper_default_init",
                []
              ],
              [
                "test_scraper_get_data",
                [
                  "response",
                  "valid_ticker",
                  "invalid_ticker"
                ]
              ],
              [
                "test_scraper_get_company",
                [
                  "response",
                  "valid_ticker",
                  "invalid_ticker"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_scraper_default_init",
                [
                  "self.scraper"
                ]
              ],
              [
                "test_scraper_get_data",
                [
                  "self.scraper"
                ]
              ],
              [
                "test_scraper_get_company",
                [
                  "self.scraper"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5007115860548447,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_scraper_get_data",
                  "test_scraper_get_company",
                  0.8652231568278274
                ],
                [
                  "test_scraper_default_init",
                  "test_scraper_get_data",
                  0.32024493467003995
                ],
                [
                  "test_scraper_default_init",
                  "test_scraper_get_company",
                  0.31666666666666665
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_scraper_default_init",
                "false"
              ],
              [
                "test_scraper_get_data",
                "true"
              ],
              [
                "test_scraper_get_company",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "tests_\u0026_test_data_container.py",
    "testCases": [
      {
        "name": "TestTickerData",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_repr",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_merge_change_price",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_equals",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertFalse]"
                ],
                [
                  "test_merge_keep_price",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_str",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_repr",
                  "[]"
                ],
                [
                  "test_merge_change_price",
                  "[]"
                ],
                [
                  "test_equals",
                  "[]"
                ],
                [
                  "test_merge_keep_price",
                  "[]"
                ],
                [
                  "test_str",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_repr",
                  "false"
                ],
                [
                  "test_merge_change_price",
                  "false"
                ],
                [
                  "test_equals",
                  "false"
                ],
                [
                  "test_merge_keep_price",
                  "false"
                ],
                [
                  "test_str",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_repr",
                  "false"
                ],
                [
                  "test_merge_change_price",
                  "false"
                ],
                [
                  "test_equals",
                  "false"
                ],
                [
                  "test_merge_keep_price",
                  "false"
                ],
                [
                  "test_str",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_repr",
                  "false"
                ],
                [
                  "test_merge_change_price",
                  "false"
                ],
                [
                  "test_equals",
                  "false"
                ],
                [
                  "test_merge_keep_price",
                  "false"
                ],
                [
                  "test_str",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_repr",
                  "false"
                ],
                [
                  "test_merge_change_price",
                  "false"
                ],
                [
                  "test_equals",
                  "false"
                ],
                [
                  "test_merge_keep_price",
                  "false"
                ],
                [
                  "test_str",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_repr",
                "false"
              ],
              [
                "test_merge_change_price",
                "false"
              ],
              [
                "test_equals",
                "false"
              ],
              [
                "test_merge_keep_price",
                "false"
              ],
              [
                "test_str",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_repr",
                "false"
              ],
              [
                "test_merge_change_price",
                "false"
              ],
              [
                "test_equals",
                "false"
              ],
              [
                "test_merge_keep_price",
                "false"
              ],
              [
                "test_str",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_repr",
                [
                  "self.example.price",
                  "self.example.etf"
                ]
              ],
              [
                "test_merge_change_price",
                [
                  "self.example.price",
                  "self.example.etf"
                ]
              ],
              [
                "test_equals",
                [
                  "self.example.price",
                  "self.example.etf"
                ]
              ],
              [
                "test_merge_keep_price",
                [
                  "self.example.price",
                  "self.example.etf"
                ]
              ],
              [
                "test_str",
                [
                  "self.example.price",
                  "self.example.etf"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_repr",
                "false"
              ],
              [
                "test_merge_change_price",
                "false"
              ],
              [
                "test_equals",
                "false"
              ],
              [
                "test_merge_keep_price",
                "false"
              ],
              [
                "test_str",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_repr",
                "false"
              ],
              [
                "test_merge_change_price",
                "false"
              ],
              [
                "test_equals",
                "false"
              ],
              [
                "test_merge_keep_price",
                "false"
              ],
              [
                "test_str",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_repr",
                  "0"
                ],
                [
                  "test_merge_change_price",
                  "0"
                ],
                [
                  "test_equals",
                  "0"
                ],
                [
                  "test_merge_keep_price",
                  "0"
                ],
                [
                  "test_str",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_repr",
                  "0"
                ],
                [
                  "test_merge_change_price",
                  "0"
                ],
                [
                  "test_equals",
                  "0"
                ],
                [
                  "test_merge_keep_price",
                  "0"
                ],
                [
                  "test_str",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_repr",
                "false"
              ],
              [
                "test_merge_change_price",
                "false"
              ],
              [
                "test_equals",
                "false"
              ],
              [
                "test_merge_keep_price",
                "false"
              ],
              [
                "test_str",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_repr",
                "false"
              ],
              [
                "test_merge_change_price",
                "false"
              ],
              [
                "test_equals",
                "false"
              ],
              [
                "test_merge_keep_price",
                "false"
              ],
              [
                "test_str",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_repr",
                "1"
              ],
              [
                "test_merge_change_price",
                "1"
              ],
              [
                "test_equals",
                "2"
              ],
              [
                "test_merge_keep_price",
                "1"
              ],
              [
                "test_str",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_repr",
                [
                  "expected"
                ]
              ],
              [
                "test_merge_change_price",
                [
                  "expected",
                  "to_merge"
                ]
              ],
              [
                "test_equals",
                [
                  "my_copy"
                ]
              ],
              [
                "test_merge_keep_price",
                [
                  "expected",
                  "to_merge"
                ]
              ],
              [
                "test_str",
                [
                  "expected"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_repr",
                [
                  "self.example"
                ]
              ],
              [
                "test_merge_change_price",
                [
                  "self.example"
                ]
              ],
              [
                "test_equals",
                [
                  "self.example"
                ]
              ],
              [
                "test_merge_keep_price",
                [
                  "self.example"
                ]
              ],
              [
                "test_str",
                [
                  "self.example"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.5236629010102574,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_equals",
                  "test_repr",
                  0.2799462554779272
                ],
                [
                  "test_equals",
                  "test_merge_change_price",
                  0.37911711646740864
                ],
                [
                  "test_str",
                  "test_merge_change_price",
                  0.5595028849441883
                ],
                [
                  "test_repr",
                  "test_merge_change_price",
                  0.5370300307417597
                ],
                [
                  "test_equals",
                  "test_merge_keep_price",
                  0.3718568433708361
                ],
                [
                  "test_repr",
                  "test_merge_keep_price",
                  0.5658137419351119
                ],
                [
                  "test_str",
                  "test_merge_keep_price",
                  0.6065038251752028
                ],
                [
                  "test_merge_keep_price",
                  "test_merge_change_price",
                  0.9714994126604849
                ],
                [
                  "test_str",
                  "test_repr",
                  0.7010963201705882
                ],
                [
                  "test_equals",
                  "test_str",
                  0.26426257915906604
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_repr",
                "false"
              ],
              [
                "test_merge_change_price",
                "true"
              ],
              [
                "test_equals",
                "true"
              ],
              [
                "test_merge_keep_price",
                "true"
              ],
              [
                "test_str",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      },
      {
        "name": "TestCompanyData",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_equals",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertFalse]"
                ],
                [
                  "test_repr",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_str",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_merge",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_equals",
                  "[]"
                ],
                [
                  "test_repr",
                  "[]"
                ],
                [
                  "test_str",
                  "[]"
                ],
                [
                  "test_merge",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_equals",
                  "false"
                ],
                [
                  "test_repr",
                  "false"
                ],
                [
                  "test_str",
                  "false"
                ],
                [
                  "test_merge",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_equals",
                  "false"
                ],
                [
                  "test_repr",
                  "false"
                ],
                [
                  "test_str",
                  "false"
                ],
                [
                  "test_merge",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_equals",
                  "false"
                ],
                [
                  "test_repr",
                  "false"
                ],
                [
                  "test_str",
                  "false"
                ],
                [
                  "test_merge",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_equals",
                  "false"
                ],
                [
                  "test_repr",
                  "false"
                ],
                [
                  "test_str",
                  "false"
                ],
                [
                  "test_merge",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_equals",
                "false"
              ],
              [
                "test_repr",
                "false"
              ],
              [
                "test_str",
                "false"
              ],
              [
                "test_merge",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_equals",
                "false"
              ],
              [
                "test_repr",
                "false"
              ],
              [
                "test_str",
                "false"
              ],
              [
                "test_merge",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_equals",
                [
                  "self.example.symbol"
                ]
              ],
              [
                "test_repr",
                [
                  "self.example.symbol"
                ]
              ],
              [
                "test_str",
                [
                  "self.example.symbol"
                ]
              ],
              [
                "test_merge",
                [
                  "self.example.symbol"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_equals",
                "false"
              ],
              [
                "test_repr",
                "false"
              ],
              [
                "test_str",
                "false"
              ],
              [
                "test_merge",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_equals",
                "false"
              ],
              [
                "test_repr",
                "false"
              ],
              [
                "test_str",
                "false"
              ],
              [
                "test_merge",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_equals",
                  "0"
                ],
                [
                  "test_repr",
                  "0"
                ],
                [
                  "test_str",
                  "0"
                ],
                [
                  "test_merge",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_equals",
                  "0"
                ],
                [
                  "test_repr",
                  "0"
                ],
                [
                  "test_str",
                  "0"
                ],
                [
                  "test_merge",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_equals",
                "false"
              ],
              [
                "test_repr",
                "false"
              ],
              [
                "test_str",
                "false"
              ],
              [
                "test_merge",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_equals",
                "false"
              ],
              [
                "test_repr",
                "false"
              ],
              [
                "test_str",
                "false"
              ],
              [
                "test_merge",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_equals",
                "2"
              ],
              [
                "test_repr",
                "1"
              ],
              [
                "test_str",
                "1"
              ],
              [
                "test_merge",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_equals",
                [
                  "my_copy"
                ]
              ],
              [
                "test_repr",
                [
                  "expected"
                ]
              ],
              [
                "test_str",
                [
                  "expected"
                ]
              ],
              [
                "test_merge",
                [
                  "expected",
                  "to_merge"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_equals",
                [
                  "self.example"
                ]
              ],
              [
                "test_repr",
                [
                  "self.example"
                ]
              ],
              [
                "test_str",
                [
                  "self.example"
                ]
              ],
              [
                "test_merge",
                [
                  "self.example"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.33770839595368196,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_equals",
                  "test_str",
                  0.18222357403119846
                ],
                [
                  "test_str",
                  "test_repr",
                  0.7250629952941459
                ],
                [
                  "test_repr",
                  "test_merge",
                  0.2858309752375147
                ],
                [
                  "test_equals",
                  "test_repr",
                  0.20145574100634506
                ],
                [
                  "test_equals",
                  "test_merge",
                  0.37313324515537794
                ],
                [
                  "test_str",
                  "test_merge",
                  0.25854384499750954
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_equals",
                "true"
              ],
              [
                "test_repr",
                "false"
              ],
              [
                "test_str",
                "false"
              ],
              [
                "test_merge",
                "true"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "tests_\u0026_test_circular_buffer.py",
    "testCases": [
      {
        "name": "TestCircularBuffer",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_buffer_timestamp",
                  "[PyCallExpression: self.assertAlmostEqual]"
                ],
                [
                  "test_buffer_get_element",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertNotEqual]"
                ],
                [
                  "test_buffer_add_element",
                  "[PyCallExpression: self.assertDictEqual, PyCallExpression: self.assertListEqual, PyCallExpression: self.assertDictEqual, PyCallExpression: self.assertListEqual]"
                ],
                [
                  "test_buffer_clear",
                  "[PyCallExpression: self.assertDictEqual]"
                ],
                [
                  "test_buffer_set_max_size",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_buffer_refresh",
                  "[PyCallExpression: self.assertDictEqual, PyCallExpression: self.assertNotEqual]"
                ],
                [
                  "test_buffer_set_max_holding_time",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_buffer_delete_element",
                  "[PyCallExpression: self.assertDictEqual]"
                ],
                [
                  "test_buffer_overflow",
                  "[PyCallExpression: self.assertDictEqual, PyCallExpression: self.assertNotEqual]"
                ],
                [
                  "test_old_data_delete",
                  "[PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertIsNone]"
                ],
                [
                  "test_buffer_init",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertListEqual, PyCallExpression: self.assertDictEqual, PyCallExpression: self.assertDictEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_buffer_timestamp",
                  "[]"
                ],
                [
                  "test_buffer_get_element",
                  "[]"
                ],
                [
                  "test_buffer_add_element",
                  "[]"
                ],
                [
                  "test_buffer_clear",
                  "[]"
                ],
                [
                  "test_buffer_set_max_size",
                  "[]"
                ],
                [
                  "test_buffer_refresh",
                  "[]"
                ],
                [
                  "test_buffer_set_max_holding_time",
                  "[]"
                ],
                [
                  "test_buffer_delete_element",
                  "[]"
                ],
                [
                  "test_buffer_overflow",
                  "[]"
                ],
                [
                  "test_old_data_delete",
                  "[]"
                ],
                [
                  "test_buffer_init",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_buffer_timestamp",
                  "false"
                ],
                [
                  "test_buffer_get_element",
                  "false"
                ],
                [
                  "test_buffer_add_element",
                  "false"
                ],
                [
                  "test_buffer_clear",
                  "false"
                ],
                [
                  "test_buffer_set_max_size",
                  "false"
                ],
                [
                  "test_buffer_refresh",
                  "false"
                ],
                [
                  "test_buffer_set_max_holding_time",
                  "false"
                ],
                [
                  "test_buffer_delete_element",
                  "false"
                ],
                [
                  "test_buffer_overflow",
                  "false"
                ],
                [
                  "test_old_data_delete",
                  "false"
                ],
                [
                  "test_buffer_init",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_buffer_timestamp",
                  "false"
                ],
                [
                  "test_buffer_get_element",
                  "false"
                ],
                [
                  "test_buffer_add_element",
                  "false"
                ],
                [
                  "test_buffer_clear",
                  "false"
                ],
                [
                  "test_buffer_set_max_size",
                  "false"
                ],
                [
                  "test_buffer_refresh",
                  "false"
                ],
                [
                  "test_buffer_set_max_holding_time",
                  "false"
                ],
                [
                  "test_buffer_delete_element",
                  "false"
                ],
                [
                  "test_buffer_overflow",
                  "false"
                ],
                [
                  "test_old_data_delete",
                  "false"
                ],
                [
                  "test_buffer_init",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_buffer_timestamp",
                  "false"
                ],
                [
                  "test_buffer_get_element",
                  "false"
                ],
                [
                  "test_buffer_add_element",
                  "false"
                ],
                [
                  "test_buffer_clear",
                  "false"
                ],
                [
                  "test_buffer_set_max_size",
                  "false"
                ],
                [
                  "test_buffer_refresh",
                  "false"
                ],
                [
                  "test_buffer_set_max_holding_time",
                  "false"
                ],
                [
                  "test_buffer_delete_element",
                  "false"
                ],
                [
                  "test_buffer_overflow",
                  "false"
                ],
                [
                  "test_old_data_delete",
                  "false"
                ],
                [
                  "test_buffer_init",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_buffer_timestamp",
                  "false"
                ],
                [
                  "test_buffer_get_element",
                  "false"
                ],
                [
                  "test_buffer_add_element",
                  "false"
                ],
                [
                  "test_buffer_clear",
                  "false"
                ],
                [
                  "test_buffer_set_max_size",
                  "false"
                ],
                [
                  "test_buffer_refresh",
                  "false"
                ],
                [
                  "test_buffer_set_max_holding_time",
                  "false"
                ],
                [
                  "test_buffer_delete_element",
                  "false"
                ],
                [
                  "test_buffer_overflow",
                  "false"
                ],
                [
                  "test_old_data_delete",
                  "false"
                ],
                [
                  "test_buffer_init",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_buffer_timestamp",
                "false"
              ],
              [
                "test_buffer_get_element",
                "false"
              ],
              [
                "test_buffer_add_element",
                "false"
              ],
              [
                "test_buffer_clear",
                "false"
              ],
              [
                "test_buffer_set_max_size",
                "false"
              ],
              [
                "test_buffer_refresh",
                "false"
              ],
              [
                "test_buffer_set_max_holding_time",
                "false"
              ],
              [
                "test_buffer_delete_element",
                "false"
              ],
              [
                "test_buffer_overflow",
                "false"
              ],
              [
                "test_old_data_delete",
                "false"
              ],
              [
                "test_buffer_init",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_buffer_timestamp",
                "false"
              ],
              [
                "test_buffer_get_element",
                "false"
              ],
              [
                "test_buffer_add_element",
                "false"
              ],
              [
                "test_buffer_clear",
                "false"
              ],
              [
                "test_buffer_set_max_size",
                "false"
              ],
              [
                "test_buffer_refresh",
                "false"
              ],
              [
                "test_buffer_set_max_holding_time",
                "false"
              ],
              [
                "test_buffer_delete_element",
                "false"
              ],
              [
                "test_buffer_overflow",
                "false"
              ],
              [
                "test_old_data_delete",
                "false"
              ],
              [
                "test_buffer_init",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_buffer_timestamp",
                []
              ],
              [
                "test_buffer_get_element",
                []
              ],
              [
                "test_buffer_add_element",
                []
              ],
              [
                "test_buffer_clear",
                []
              ],
              [
                "test_buffer_set_max_size",
                []
              ],
              [
                "test_buffer_refresh",
                []
              ],
              [
                "test_buffer_set_max_holding_time",
                []
              ],
              [
                "test_buffer_delete_element",
                []
              ],
              [
                "test_buffer_overflow",
                []
              ],
              [
                "test_old_data_delete",
                []
              ],
              [
                "test_buffer_init",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_buffer_timestamp",
                "false"
              ],
              [
                "test_buffer_get_element",
                "false"
              ],
              [
                "test_buffer_add_element",
                "false"
              ],
              [
                "test_buffer_clear",
                "false"
              ],
              [
                "test_buffer_set_max_size",
                "false"
              ],
              [
                "test_buffer_refresh",
                "false"
              ],
              [
                "test_buffer_set_max_holding_time",
                "false"
              ],
              [
                "test_buffer_delete_element",
                "false"
              ],
              [
                "test_buffer_overflow",
                "false"
              ],
              [
                "test_old_data_delete",
                "false"
              ],
              [
                "test_buffer_init",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_buffer_timestamp",
                "true"
              ],
              [
                "test_buffer_get_element",
                "false"
              ],
              [
                "test_buffer_add_element",
                "false"
              ],
              [
                "test_buffer_clear",
                "false"
              ],
              [
                "test_buffer_set_max_size",
                "true"
              ],
              [
                "test_buffer_refresh",
                "false"
              ],
              [
                "test_buffer_set_max_holding_time",
                "true"
              ],
              [
                "test_buffer_delete_element",
                "false"
              ],
              [
                "test_buffer_overflow",
                "false"
              ],
              [
                "test_old_data_delete",
                "false"
              ],
              [
                "test_buffer_init",
                "true"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_buffer_timestamp",
                  "0"
                ],
                [
                  "test_buffer_get_element",
                  "0"
                ],
                [
                  "test_buffer_add_element",
                  "0"
                ],
                [
                  "test_buffer_clear",
                  "0"
                ],
                [
                  "test_buffer_set_max_size",
                  "0"
                ],
                [
                  "test_buffer_refresh",
                  "0"
                ],
                [
                  "test_buffer_set_max_holding_time",
                  "0"
                ],
                [
                  "test_buffer_delete_element",
                  "0"
                ],
                [
                  "test_buffer_overflow",
                  "0"
                ],
                [
                  "test_old_data_delete",
                  "0"
                ],
                [
                  "test_buffer_init",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_buffer_timestamp",
                  "0"
                ],
                [
                  "test_buffer_get_element",
                  "0"
                ],
                [
                  "test_buffer_add_element",
                  "0"
                ],
                [
                  "test_buffer_clear",
                  "0"
                ],
                [
                  "test_buffer_set_max_size",
                  "0"
                ],
                [
                  "test_buffer_refresh",
                  "0"
                ],
                [
                  "test_buffer_set_max_holding_time",
                  "0"
                ],
                [
                  "test_buffer_delete_element",
                  "0"
                ],
                [
                  "test_buffer_overflow",
                  "0"
                ],
                [
                  "test_old_data_delete",
                  "0"
                ],
                [
                  "test_buffer_init",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_buffer_timestamp",
                "false"
              ],
              [
                "test_buffer_get_element",
                "false"
              ],
              [
                "test_buffer_add_element",
                "false"
              ],
              [
                "test_buffer_clear",
                "false"
              ],
              [
                "test_buffer_set_max_size",
                "false"
              ],
              [
                "test_buffer_refresh",
                "false"
              ],
              [
                "test_buffer_set_max_holding_time",
                "false"
              ],
              [
                "test_buffer_delete_element",
                "false"
              ],
              [
                "test_buffer_overflow",
                "false"
              ],
              [
                "test_old_data_delete",
                "false"
              ],
              [
                "test_buffer_init",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": true,
            "detail": [
              [
                "test_buffer_timestamp",
                "false"
              ],
              [
                "test_buffer_get_element",
                "false"
              ],
              [
                "test_buffer_add_element",
                "false"
              ],
              [
                "test_buffer_clear",
                "false"
              ],
              [
                "test_buffer_set_max_size",
                "false"
              ],
              [
                "test_buffer_refresh",
                "false"
              ],
              [
                "test_buffer_set_max_holding_time",
                "false"
              ],
              [
                "test_buffer_delete_element",
                "false"
              ],
              [
                "test_buffer_overflow",
                "false"
              ],
              [
                "test_old_data_delete",
                "true"
              ],
              [
                "test_buffer_init",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_buffer_timestamp",
                "1"
              ],
              [
                "test_buffer_get_element",
                "2"
              ],
              [
                "test_buffer_add_element",
                "4"
              ],
              [
                "test_buffer_clear",
                "1"
              ],
              [
                "test_buffer_set_max_size",
                "1"
              ],
              [
                "test_buffer_refresh",
                "2"
              ],
              [
                "test_buffer_set_max_holding_time",
                "1"
              ],
              [
                "test_buffer_delete_element",
                "1"
              ],
              [
                "test_buffer_overflow",
                "2"
              ],
              [
                "test_old_data_delete",
                "2"
              ],
              [
                "test_buffer_init",
                "5"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_buffer_timestamp",
                []
              ],
              [
                "test_buffer_get_element",
                [
                  "obj"
                ]
              ],
              [
                "test_buffer_add_element",
                [
                  "obj"
                ]
              ],
              [
                "test_buffer_clear",
                [
                  "obj",
                  "expected"
                ]
              ],
              [
                "test_buffer_set_max_size",
                []
              ],
              [
                "test_buffer_refresh",
                [
                  "obj",
                  "expected"
                ]
              ],
              [
                "test_buffer_set_max_holding_time",
                []
              ],
              [
                "test_buffer_delete_element",
                [
                  "obj",
                  "expected"
                ]
              ],
              [
                "test_buffer_overflow",
                [
                  "obj",
                  "expected"
                ]
              ],
              [
                "test_old_data_delete",
                []
              ],
              [
                "test_buffer_init",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_buffer_timestamp",
                [
                  "self.buffer"
                ]
              ],
              [
                "test_buffer_get_element",
                [
                  "self.buffer"
                ]
              ],
              [
                "test_buffer_add_element",
                [
                  "self.buffer"
                ]
              ],
              [
                "test_buffer_clear",
                [
                  "self.buffer"
                ]
              ],
              [
                "test_buffer_set_max_size",
                [
                  "self.buffer"
                ]
              ],
              [
                "test_buffer_refresh",
                [
                  "self.buffer"
                ]
              ],
              [
                "test_buffer_set_max_holding_time",
                [
                  "self.buffer"
                ]
              ],
              [
                "test_buffer_delete_element",
                [
                  "self.buffer"
                ]
              ],
              [
                "test_buffer_overflow",
                [
                  "self.buffer"
                ]
              ],
              [
                "test_old_data_delete",
                [
                  "self.buffer"
                ]
              ],
              [
                "test_buffer_init",
                [
                  "self.buffer"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.46538174643085506,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_buffer_set_max_holding_time",
                  "test_buffer_timestamp",
                  0.4588314677411235
                ],
                [
                  "test_buffer_set_max_holding_time",
                  "test_buffer_get_element",
                  0.19402850002906638
                ],
                [
                  "test_buffer_timestamp",
                  "test_buffer_overflow",
                  0.4366913682654144
                ],
                [
                  "test_buffer_get_element",
                  "test_buffer_clear",
                  0.7867183938373667
                ],
                [
                  "test_buffer_clear",
                  "test_old_data_delete",
                  0.25077519565890877
                ],
                [
                  "test_buffer_init",
                  "test_buffer_overflow",
                  0.3368769288428413
                ],
                [
                  "test_buffer_get_element",
                  "test_buffer_refresh",
                  0.757579611687455
                ],
                [
                  "test_buffer_set_max_size",
                  "test_buffer_clear",
                  0.25802342327107
                ],
                [
                  "test_buffer_add_element",
                  "test_buffer_delete_element",
                  0.747974872248143
                ],
                [
                  "test_buffer_get_element",
                  "test_buffer_delete_element",
                  0.7763376175556711
                ],
                [
                  "test_buffer_set_max_size",
                  "test_buffer_set_max_holding_time",
                  0.65
                ],
                [
                  "test_buffer_init",
                  "test_buffer_get_element",
                  0.30254163376677895
                ],
                [
                  "test_buffer_delete_element",
                  "test_buffer_clear",
                  0.9061443857892422
                ],
                [
                  "test_buffer_set_max_size",
                  "test_buffer_refresh",
                  0.24659848095803594
                ],
                [
                  "test_buffer_clear",
                  "test_buffer_refresh",
                  0.8726150980146953
                ],
                [
                  "test_buffer_init",
                  "test_buffer_set_max_holding_time",
                  0.5252257314388902
                ],
                [
                  "test_buffer_set_max_holding_time",
                  "test_buffer_refresh",
                  0.19727878476642877
                ],
                [
                  "test_buffer_get_element",
                  "test_old_data_delete",
                  0.27500954910846337
                ],
                [
                  "test_buffer_delete_element",
                  "test_buffer_refresh",
                  0.8735390360462875
                ],
                [
                  "test_buffer_overflow",
                  "test_old_data_delete",
                  0.25024449883594174
                ],
                [
                  "test_buffer_refresh",
                  "test_old_data_delete",
                  0.24854790640048002
                ],
                [
                  "test_buffer_timestamp",
                  "test_buffer_get_element",
                  0.38949041885226
                ],
                [
                  "test_buffer_set_max_holding_time",
                  "test_buffer_clear",
                  0.20641873861685597
                ],
                [
                  "test_buffer_add_element",
                  "test_buffer_get_element",
                  0.744452764963515
                ],
                [
                  "test_buffer_set_max_holding_time",
                  "test_old_data_delete",
                  0.22677868380553634
                ],
                [
                  "test_buffer_delete_element",
                  "test_old_data_delete",
                  0.21777026332312227
                ],
                [
                  "test_buffer_timestamp",
                  "test_buffer_refresh",
                  0.4337307146827106
                ],
                [
                  "test_buffer_init",
                  "test_buffer_set_max_size",
                  0.5580523396538208
                ],
                [
                  "test_buffer_set_max_size",
                  "test_buffer_timestamp",
                  0.5735393346764044
                ],
                [
                  "test_buffer_set_max_size",
                  "test_buffer_get_element",
                  0.24253562503633297
                ],
                [
                  "test_buffer_timestamp",
                  "test_buffer_add_element",
                  0.38616422286061647
                ],
                [
                  "test_buffer_overflow",
                  "test_buffer_refresh",
                  0.9796145038140934
                ],
                [
                  "test_buffer_init",
                  "test_buffer_add_element",
                  0.5330522416796524
                ],
                [
                  "test_buffer_init",
                  "test_buffer_refresh",
                  0.3345929911266678
                ],
                [
                  "test_buffer_timestamp",
                  "test_buffer_clear",
                  0.4397315594696299
                ],
                [
                  "test_buffer_set_max_size",
                  "test_old_data_delete",
                  0.2834733547569204
                ],
                [
                  "test_buffer_timestamp",
                  "test_buffer_delete_element",
                  0.44060512158453496
                ],
                [
                  "test_buffer_get_element",
                  "test_buffer_overflow",
                  0.7627508636085153
                ],
                [
                  "test_buffer_add_element",
                  "test_buffer_overflow",
                  0.7375067434373956
                ],
                [
                  "test_buffer_init",
                  "test_buffer_delete_element",
                  0.3194292535910661
                ],
                [
                  "test_buffer_init",
                  "test_buffer_timestamp",
                  0.48198018650302227
                ],
                [
                  "test_buffer_clear",
                  "test_buffer_overflow",
                  0.8785715842140841
                ],
                [
                  "test_buffer_timestamp",
                  "test_old_data_delete",
                  0.3468439878096479
                ],
                [
                  "test_buffer_set_max_size",
                  "test_buffer_add_element",
                  0.2475368857441686
                ],
                [
                  "test_buffer_set_max_holding_time",
                  "test_buffer_add_element",
                  0.19802950859533489
                ],
                [
                  "test_buffer_set_max_holding_time",
                  "test_buffer_delete_element",
                  0.20485900789263356
                ],
                [
                  "test_buffer_delete_element",
                  "test_buffer_overflow",
                  0.8795018290631342
                ],
                [
                  "test_buffer_set_max_holding_time",
                  "test_buffer_overflow",
                  0.1986254132645683
                ],
                [
                  "test_buffer_init",
                  "test_old_data_delete",
                  0.34740416688982556
                ],
                [
                  "test_buffer_add_element",
                  "test_buffer_refresh",
                  0.7406456027345512
                ],
                [
                  "test_buffer_init",
                  "test_buffer_clear",
                  0.32912131438150566
                ],
                [
                  "test_buffer_add_element",
                  "test_buffer_clear",
                  0.759144311215919
                ],
                [
                  "test_buffer_add_element",
                  "test_old_data_delete",
                  0.3181045051401759
                ],
                [
                  "test_buffer_set_max_size",
                  "test_buffer_delete_element",
                  0.25607375986579195
                ],
                [
                  "test_buffer_set_max_size",
                  "test_buffer_overflow",
                  0.24828176658071038
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_buffer_timestamp",
                "false"
              ],
              [
                "test_buffer_get_element",
                "false"
              ],
              [
                "test_buffer_add_element",
                "false"
              ],
              [
                "test_buffer_clear",
                "false"
              ],
              [
                "test_buffer_set_max_size",
                "false"
              ],
              [
                "test_buffer_refresh",
                "false"
              ],
              [
                "test_buffer_set_max_holding_time",
                "false"
              ],
              [
                "test_buffer_delete_element",
                "false"
              ],
              [
                "test_buffer_overflow",
                "false"
              ],
              [
                "test_old_data_delete",
                "false"
              ],
              [
                "test_buffer_init",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 11
      }
    ]
  },
  {
    "name": "tests_\u0026_test_finance_scraper.py",
    "testCases": [
      {
        "name": "TestFinanceScraper",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_get_company_data_fast",
                  "[PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertEqual, PyCallExpression: self.assertNotEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertIsNone, PyCallExpression: self.assertIsNone]"
                ],
                [
                  "test_set_holding_time",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_scraper_default_init",
                  "[PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertIsNone]"
                ],
                [
                  "test_set_buffer_size",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_set_approach",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_close_connection",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_fetch_data",
                  "[PyCallExpression: self.assertRaises]"
                ],
                [
                  "test_scraper_order",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_get_data_thorough",
                  "[PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsNone]"
                ],
                [
                  "test_get_data_fast",
                  "[PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsNone, PyCallExpression: self.assertIsNone]"
                ],
                [
                  "test_get_data_balanced",
                  "[PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertIsNone]"
                ],
                [
                  "test_get_company_data_thorough",
                  "[PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertEqual, PyCallExpression: self.assertNotEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertEqual, PyCallExpression: self.assertNotEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertIsNone]"
                ],
                [
                  "test_get_company_data_balanced",
                  "[PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertEqual, PyCallExpression: self.assertNotEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertIsNotNone, PyCallExpression: self.assertEqual, PyCallExpression: self.assertNotEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertIsNone]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_get_company_data_fast",
                  "[]"
                ],
                [
                  "test_set_holding_time",
                  "[]"
                ],
                [
                  "test_scraper_default_init",
                  "[]"
                ],
                [
                  "test_set_buffer_size",
                  "[]"
                ],
                [
                  "test_set_approach",
                  "[]"
                ],
                [
                  "test_close_connection",
                  "[]"
                ],
                [
                  "test_fetch_data",
                  "[]"
                ],
                [
                  "test_scraper_order",
                  "[]"
                ],
                [
                  "test_get_data_thorough",
                  "[]"
                ],
                [
                  "test_get_data_fast",
                  "[]"
                ],
                [
                  "test_get_data_balanced",
                  "[]"
                ],
                [
                  "test_get_company_data_thorough",
                  "[]"
                ],
                [
                  "test_get_company_data_balanced",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_get_company_data_fast",
                  "false"
                ],
                [
                  "test_set_holding_time",
                  "true"
                ],
                [
                  "test_scraper_default_init",
                  "false"
                ],
                [
                  "test_set_buffer_size",
                  "true"
                ],
                [
                  "test_set_approach",
                  "false"
                ],
                [
                  "test_close_connection",
                  "false"
                ],
                [
                  "test_fetch_data",
                  "false"
                ],
                [
                  "test_scraper_order",
                  "true"
                ],
                [
                  "test_get_data_thorough",
                  "false"
                ],
                [
                  "test_get_data_fast",
                  "false"
                ],
                [
                  "test_get_data_balanced",
                  "false"
                ],
                [
                  "test_get_company_data_thorough",
                  "false"
                ],
                [
                  "test_get_company_data_balanced",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_get_company_data_fast",
                  "false"
                ],
                [
                  "test_set_holding_time",
                  "false"
                ],
                [
                  "test_scraper_default_init",
                  "false"
                ],
                [
                  "test_set_buffer_size",
                  "false"
                ],
                [
                  "test_set_approach",
                  "false"
                ],
                [
                  "test_close_connection",
                  "false"
                ],
                [
                  "test_fetch_data",
                  "false"
                ],
                [
                  "test_scraper_order",
                  "false"
                ],
                [
                  "test_get_data_thorough",
                  "false"
                ],
                [
                  "test_get_data_fast",
                  "false"
                ],
                [
                  "test_get_data_balanced",
                  "false"
                ],
                [
                  "test_get_company_data_thorough",
                  "false"
                ],
                [
                  "test_get_company_data_balanced",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_get_company_data_fast",
                  "true"
                ],
                [
                  "test_set_holding_time",
                  "false"
                ],
                [
                  "test_scraper_default_init",
                  "false"
                ],
                [
                  "test_set_buffer_size",
                  "false"
                ],
                [
                  "test_set_approach",
                  "false"
                ],
                [
                  "test_close_connection",
                  "false"
                ],
                [
                  "test_fetch_data",
                  "false"
                ],
                [
                  "test_scraper_order",
                  "false"
                ],
                [
                  "test_get_data_thorough",
                  "true"
                ],
                [
                  "test_get_data_fast",
                  "true"
                ],
                [
                  "test_get_data_balanced",
                  "true"
                ],
                [
                  "test_get_company_data_thorough",
                  "true"
                ],
                [
                  "test_get_company_data_balanced",
                  "true"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_get_company_data_fast",
                  "false"
                ],
                [
                  "test_set_holding_time",
                  "false"
                ],
                [
                  "test_scraper_default_init",
                  "false"
                ],
                [
                  "test_set_buffer_size",
                  "false"
                ],
                [
                  "test_set_approach",
                  "false"
                ],
                [
                  "test_close_connection",
                  "false"
                ],
                [
                  "test_fetch_data",
                  "false"
                ],
                [
                  "test_scraper_order",
                  "false"
                ],
                [
                  "test_get_data_thorough",
                  "false"
                ],
                [
                  "test_get_data_fast",
                  "false"
                ],
                [
                  "test_get_data_balanced",
                  "false"
                ],
                [
                  "test_get_company_data_thorough",
                  "false"
                ],
                [
                  "test_get_company_data_balanced",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_company_data_fast",
                "false"
              ],
              [
                "test_set_holding_time",
                "false"
              ],
              [
                "test_scraper_default_init",
                "false"
              ],
              [
                "test_set_buffer_size",
                "false"
              ],
              [
                "test_set_approach",
                "false"
              ],
              [
                "test_close_connection",
                "false"
              ],
              [
                "test_fetch_data",
                "false"
              ],
              [
                "test_scraper_order",
                "false"
              ],
              [
                "test_get_data_thorough",
                "false"
              ],
              [
                "test_get_data_fast",
                "false"
              ],
              [
                "test_get_data_balanced",
                "false"
              ],
              [
                "test_get_company_data_thorough",
                "false"
              ],
              [
                "test_get_company_data_balanced",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_get_company_data_fast",
                "false"
              ],
              [
                "test_set_holding_time",
                "false"
              ],
              [
                "test_scraper_default_init",
                "false"
              ],
              [
                "test_set_buffer_size",
                "false"
              ],
              [
                "test_set_approach",
                "false"
              ],
              [
                "test_close_connection",
                "false"
              ],
              [
                "test_fetch_data",
                "false"
              ],
              [
                "test_scraper_order",
                "false"
              ],
              [
                "test_get_data_thorough",
                "false"
              ],
              [
                "test_get_data_fast",
                "false"
              ],
              [
                "test_get_data_balanced",
                "false"
              ],
              [
                "test_get_company_data_thorough",
                "false"
              ],
              [
                "test_get_company_data_balanced",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_get_company_data_fast",
                []
              ],
              [
                "test_set_holding_time",
                [
                  "self.invalid_ticker",
                  "self.valid_ticker",
                  "self.iex_invalid_ticker"
                ]
              ],
              [
                "test_scraper_default_init",
                [
                  "self.invalid_ticker",
                  "self.valid_ticker",
                  "self.iex_invalid_ticker"
                ]
              ],
              [
                "test_set_buffer_size",
                [
                  "self.invalid_ticker",
                  "self.valid_ticker",
                  "self.iex_invalid_ticker"
                ]
              ],
              [
                "test_set_approach",
                [
                  "self.invalid_ticker",
                  "self.valid_ticker",
                  "self.iex_invalid_ticker"
                ]
              ],
              [
                "test_close_connection",
                [
                  "self.invalid_ticker",
                  "self.valid_ticker",
                  "self.iex_invalid_ticker"
                ]
              ],
              [
                "test_fetch_data",
                [
                  "self.invalid_ticker",
                  "self.iex_invalid_ticker"
                ]
              ],
              [
                "test_scraper_order",
                [
                  "self.invalid_ticker",
                  "self.valid_ticker",
                  "self.iex_invalid_ticker"
                ]
              ],
              [
                "test_get_data_thorough",
                []
              ],
              [
                "test_get_data_fast",
                []
              ],
              [
                "test_get_data_balanced",
                []
              ],
              [
                "test_get_company_data_thorough",
                []
              ],
              [
                "test_get_company_data_balanced",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_company_data_fast",
                "false"
              ],
              [
                "test_set_holding_time",
                "false"
              ],
              [
                "test_scraper_default_init",
                "false"
              ],
              [
                "test_set_buffer_size",
                "false"
              ],
              [
                "test_set_approach",
                "false"
              ],
              [
                "test_close_connection",
                "false"
              ],
              [
                "test_fetch_data",
                "false"
              ],
              [
                "test_scraper_order",
                "false"
              ],
              [
                "test_get_data_thorough",
                "false"
              ],
              [
                "test_get_data_fast",
                "false"
              ],
              [
                "test_get_data_balanced",
                "false"
              ],
              [
                "test_get_company_data_thorough",
                "false"
              ],
              [
                "test_get_company_data_balanced",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_get_company_data_fast",
                "false"
              ],
              [
                "test_set_holding_time",
                "true"
              ],
              [
                "test_scraper_default_init",
                "true"
              ],
              [
                "test_set_buffer_size",
                "true"
              ],
              [
                "test_set_approach",
                "false"
              ],
              [
                "test_close_connection",
                "false"
              ],
              [
                "test_fetch_data",
                "false"
              ],
              [
                "test_scraper_order",
                "false"
              ],
              [
                "test_get_data_thorough",
                "false"
              ],
              [
                "test_get_data_fast",
                "false"
              ],
              [
                "test_get_data_balanced",
                "false"
              ],
              [
                "test_get_company_data_thorough",
                "false"
              ],
              [
                "test_get_company_data_balanced",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_get_company_data_fast",
                  "0"
                ],
                [
                  "test_set_holding_time",
                  "0"
                ],
                [
                  "test_scraper_default_init",
                  "0"
                ],
                [
                  "test_set_buffer_size",
                  "0"
                ],
                [
                  "test_set_approach",
                  "0"
                ],
                [
                  "test_close_connection",
                  "0"
                ],
                [
                  "test_fetch_data",
                  "0"
                ],
                [
                  "test_scraper_order",
                  "0"
                ],
                [
                  "test_get_data_thorough",
                  "0"
                ],
                [
                  "test_get_data_fast",
                  "0"
                ],
                [
                  "test_get_data_balanced",
                  "0"
                ],
                [
                  "test_get_company_data_thorough",
                  "0"
                ],
                [
                  "test_get_company_data_balanced",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_get_company_data_fast",
                  "0"
                ],
                [
                  "test_set_holding_time",
                  "0"
                ],
                [
                  "test_scraper_default_init",
                  "0"
                ],
                [
                  "test_set_buffer_size",
                  "0"
                ],
                [
                  "test_set_approach",
                  "0"
                ],
                [
                  "test_close_connection",
                  "0"
                ],
                [
                  "test_fetch_data",
                  "0"
                ],
                [
                  "test_scraper_order",
                  "0"
                ],
                [
                  "test_get_data_thorough",
                  "0"
                ],
                [
                  "test_get_data_fast",
                  "0"
                ],
                [
                  "test_get_data_balanced",
                  "0"
                ],
                [
                  "test_get_company_data_thorough",
                  "0"
                ],
                [
                  "test_get_company_data_balanced",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_get_company_data_fast",
                "false"
              ],
              [
                "test_set_holding_time",
                "false"
              ],
              [
                "test_scraper_default_init",
                "false"
              ],
              [
                "test_set_buffer_size",
                "false"
              ],
              [
                "test_set_approach",
                "false"
              ],
              [
                "test_close_connection",
                "false"
              ],
              [
                "test_fetch_data",
                "false"
              ],
              [
                "test_scraper_order",
                "false"
              ],
              [
                "test_get_data_thorough",
                "false"
              ],
              [
                "test_get_data_fast",
                "false"
              ],
              [
                "test_get_data_balanced",
                "false"
              ],
              [
                "test_get_company_data_thorough",
                "false"
              ],
              [
                "test_get_company_data_balanced",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_company_data_fast",
                "false"
              ],
              [
                "test_set_holding_time",
                "false"
              ],
              [
                "test_scraper_default_init",
                "false"
              ],
              [
                "test_set_buffer_size",
                "false"
              ],
              [
                "test_set_approach",
                "false"
              ],
              [
                "test_close_connection",
                "false"
              ],
              [
                "test_fetch_data",
                "false"
              ],
              [
                "test_scraper_order",
                "false"
              ],
              [
                "test_get_data_thorough",
                "false"
              ],
              [
                "test_get_data_fast",
                "false"
              ],
              [
                "test_get_data_balanced",
                "false"
              ],
              [
                "test_get_company_data_thorough",
                "false"
              ],
              [
                "test_get_company_data_balanced",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_company_data_fast",
                "6"
              ],
              [
                "test_set_holding_time",
                "1"
              ],
              [
                "test_scraper_default_init",
                "4"
              ],
              [
                "test_set_buffer_size",
                "1"
              ],
              [
                "test_set_approach",
                "1"
              ],
              [
                "test_close_connection",
                "1"
              ],
              [
                "test_fetch_data",
                "1"
              ],
              [
                "test_scraper_order",
                "1"
              ],
              [
                "test_get_data_thorough",
                "7"
              ],
              [
                "test_get_data_fast",
                "5"
              ],
              [
                "test_get_data_balanced",
                "7"
              ],
              [
                "test_get_company_data_thorough",
                "9"
              ],
              [
                "test_get_company_data_balanced",
                "9"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_get_company_data_fast",
                [
                  "response"
                ]
              ],
              [
                "test_set_holding_time",
                [
                  "idx"
                ]
              ],
              [
                "test_scraper_default_init",
                []
              ],
              [
                "test_set_buffer_size",
                [
                  "idx"
                ]
              ],
              [
                "test_set_approach",
                []
              ],
              [
                "test_close_connection",
                []
              ],
              [
                "test_fetch_data",
                []
              ],
              [
                "test_scraper_order",
                [
                  "valid_ticker",
                  "end_slower",
                  "start_faster",
                  "idx",
                  "start_slower",
                  "end_faster"
                ]
              ],
              [
                "test_get_data_thorough",
                [
                  "response"
                ]
              ],
              [
                "test_get_data_fast",
                [
                  "response"
                ]
              ],
              [
                "test_get_data_balanced",
                [
                  "response"
                ]
              ],
              [
                "test_get_company_data_thorough",
                [
                  "response"
                ]
              ],
              [
                "test_get_company_data_balanced",
                [
                  "response"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_get_company_data_fast",
                [
                  "self.scraper",
                  "self.invalid_ticker",
                  "self.valid_ticker",
                  "self.iex_invalid_ticker"
                ]
              ],
              [
                "test_set_holding_time",
                [
                  "self.scraper"
                ]
              ],
              [
                "test_scraper_default_init",
                [
                  "self.scraper"
                ]
              ],
              [
                "test_set_buffer_size",
                [
                  "self.scraper"
                ]
              ],
              [
                "test_set_approach",
                [
                  "self.scraper"
                ]
              ],
              [
                "test_close_connection",
                [
                  "self.scraper"
                ]
              ],
              [
                "test_fetch_data",
                [
                  "self.scraper",
                  "self.valid_ticker"
                ]
              ],
              [
                "test_scraper_order",
                [
                  "self.scraper"
                ]
              ],
              [
                "test_get_data_thorough",
                [
                  "self.scraper",
                  "self.invalid_ticker",
                  "self.valid_ticker",
                  "self.iex_invalid_ticker"
                ]
              ],
              [
                "test_get_data_fast",
                [
                  "self.scraper",
                  "self.invalid_ticker",
                  "self.valid_ticker",
                  "self.iex_invalid_ticker"
                ]
              ],
              [
                "test_get_data_balanced",
                [
                  "self.scraper",
                  "self.invalid_ticker",
                  "self.valid_ticker",
                  "self.iex_invalid_ticker"
                ]
              ],
              [
                "test_get_company_data_thorough",
                [
                  "self.scraper",
                  "self.invalid_ticker",
                  "self.valid_ticker",
                  "self.iex_invalid_ticker"
                ]
              ],
              [
                "test_get_company_data_balanced",
                [
                  "self.scraper",
                  "self.invalid_ticker",
                  "self.valid_ticker",
                  "self.iex_invalid_ticker"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.3656669324616346,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_set_holding_time",
                  "test_get_data_fast",
                  0.13460756800596457
                ],
                [
                  "test_get_data_fast",
                  "test_get_data_balanced",
                  0.9470204928122461
                ],
                [
                  "test_scraper_default_init",
                  "test_get_company_data_fast",
                  0.3966644140109588
                ],
                [
                  "test_scraper_order",
                  "test_get_data_fast",
                  0.26496458405414064
                ],
                [
                  "test_fetch_data",
                  "test_get_company_data_balanced",
                  0.2908640121023908
                ],
                [
                  "test_fetch_data",
                  "test_get_company_data_thorough",
                  0.2895702534395041
                ],
                [
                  "test_fetch_data",
                  "test_get_data_fast",
                  0.2855457724081408
                ],
                [
                  "test_scraper_order",
                  "test_get_company_data_balanced",
                  0.2488632179694328
                ],
                [
                  "test_set_buffer_size",
                  "test_get_company_data_fast",
                  0.1317647464097706
                ],
                [
                  "test_set_buffer_size",
                  "test_get_company_data_thorough",
                  0.1264594954837358
                ],
                [
                  "test_get_data_balanced",
                  "test_get_data_thorough",
                  0.9270473799663935
                ],
                [
                  "test_set_holding_time",
                  "test_get_data_thorough",
                  0.1250348918359901
                ],
                [
                  "test_close_connection",
                  "test_get_company_data_balanced",
                  0.22268849079920192
                ],
                [
                  "test_get_data_balanced",
                  "test_get_company_data_thorough",
                  0.7545746968882979
                ],
                [
                  "test_set_holding_time",
                  "test_get_company_data_thorough",
                  0.12133753471821067
                ],
                [
                  "test_set_buffer_size",
                  "test_scraper_order",
                  0.5014813660997871
                ],
                [
                  "test_set_approach",
                  "test_get_company_data_balanced",
                  0.23748947139652285
                ],
                [
                  "test_fetch_data",
                  "test_get_company_data_fast",
                  0.29054360157398823
                ],
                [
                  "test_close_connection",
                  "test_get_data_balanced",
                  0.22023395290457834
                ],
                [
                  "test_set_buffer_size",
                  "test_set_holding_time",
                  0.8436958338752907
                ],
                [
                  "test_set_buffer_size",
                  "test_get_company_data_balanced",
                  0.12609049483857873
                ],
                [
                  "test_scraper_default_init",
                  "test_set_buffer_size",
                  0.43598876923213475
                ],
                [
                  "test_scraper_default_init",
                  "test_get_data_fast",
                  0.3992918259420682
                ],
                [
                  "test_set_holding_time",
                  "test_get_company_data_fast",
                  0.12642790824820277
                ],
                [
                  "test_scraper_order",
                  "test_get_company_data_fast",
                  0.2623436659360336
                ],
                [
                  "test_scraper_default_init",
                  "test_set_approach",
                  0.2760262237369417
                ],
                [
                  "test_close_connection",
                  "test_scraper_order",
                  0.06469966392206304
                ],
                [
                  "test_set_approach",
                  "test_scraper_order",
                  0.11905869272970875
                ],
                [
                  "test_scraper_order",
                  "test_get_company_data_thorough",
                  0.2463074110704559
                ],
                [
                  "test_get_data_fast",
                  "test_get_company_data_balanced",
                  0.8021246531375585
                ],
                [
                  "test_scraper_default_init",
                  "test_set_holding_time",
                  0.4780914437337574
                ],
                [
                  "test_scraper_default_init",
                  "test_get_company_data_balanced",
                  0.4251325733439309
                ],
                [
                  "test_set_approach",
                  "test_get_data_balanced",
                  0.25329310982879266
                ],
                [
                  "test_get_company_data_balanced",
                  "test_get_company_data_thorough",
                  0.947950484555456
                ],
                [
                  "test_close_connection",
                  "test_set_buffer_size",
                  0.12456821978060993
                ],
                [
                  "test_set_buffer_size",
                  "test_get_data_fast",
                  0.14028969006053302
                ],
                [
                  "test_get_company_data_fast",
                  "test_get_company_data_balanced",
                  0.9529213786880811
                ],
                [
                  "test_close_connection",
                  "test_set_holding_time",
                  0.11952286093343935
                ],
                [
                  "test_close_connection",
                  "test_set_approach",
                  0.20701966780270628
                ],
                [
                  "test_scraper_default_init",
                  "test_get_data_balanced",
                  0.4159974665975369
                ],
                [
                  "test_scraper_default_init",
                  "test_scraper_order",
                  0.25879865568825217
                ],
                [
                  "test_set_approach",
                  "test_get_data_fast",
                  0.317927927549473
                ],
                [
                  "test_close_connection",
                  "test_get_company_data_fast",
                  0.21155435413917803
                ],
                [
                  "test_set_holding_time",
                  "test_set_approach",
                  0.13746434980705374
                ],
                [
                  "test_scraper_order",
                  "test_get_data_balanced",
                  0.2374843789525614
                ],
                [
                  "test_set_buffer_size",
                  "test_get_data_balanced",
                  0.13209035882644823
                ],
                [
                  "test_get_company_data_fast",
                  "test_get_company_data_thorough",
                  0.916112540623844
                ],
                [
                  "test_close_connection",
                  "test_get_data_fast",
                  0.21500329089188286
                ],
                [
                  "test_set_holding_time",
                  "test_get_data_balanced",
                  0.12674033245772673
                ],
                [
                  "test_set_buffer_size",
                  "test_set_approach",
                  0.1432670637653132
                ],
                [
                  "test_set_approach",
                  "test_get_company_data_fast",
                  0.29197274744072477
                ],
                [
                  "test_scraper_default_init",
                  "test_get_company_data_thorough",
                  0.4187628431947845
                ],
                [
                  "test_fetch_data",
                  "test_get_data_thorough",
                  0.2652390597064653
                ],
                [
                  "test_close_connection",
                  "test_get_data_thorough",
                  0.22416791983111015
                ],
                [
                  "test_get_data_balanced",
                  "test_get_company_data_fast",
                  0.7894662643447277
                ],
                [
                  "test_get_data_fast",
                  "test_get_company_data_fast",
                  0.8690861447571466
                ],
                [
                  "test_get_data_thorough",
                  "test_get_company_data_balanced",
                  0.7351797956319452
                ],
                [
                  "test_fetch_data",
                  "test_close_connection",
                  0.50709255283711
                ],
                [
                  "test_get_data_fast",
                  "test_get_company_data_thorough",
                  0.7775783629146745
                ],
                [
                  "test_get_data_fast",
                  "test_get_data_thorough",
                  0.8950841802699915
                ],
                [
                  "test_scraper_order",
                  "test_get_data_thorough",
                  0.2320574252028928
                ],
                [
                  "test_scraper_default_init",
                  "test_close_connection",
                  0.29999999999999993
                ],
                [
                  "test_set_approach",
                  "test_get_data_thorough",
                  0.2475048975757873
                ],
                [
                  "test_close_connection",
                  "test_get_company_data_thorough",
                  0.22841609628806428
                ],
                [
                  "test_set_holding_time",
                  "test_scraper_order",
                  0.5155392622264671
                ],
                [
                  "test_scraper_default_init",
                  "test_get_data_thorough",
                  0.4035022556959983
                ],
                [
                  "test_set_holding_time",
                  "test_get_company_data_balanced",
                  0.12098347962395682
                ],
                [
                  "test_set_approach",
                  "test_get_company_data_thorough",
                  0.2364331218717302
                ],
                [
                  "test_fetch_data",
                  "test_set_approach",
                  0.17496355305594133
                ],
                [
                  "test_get_data_thorough",
                  "test_get_company_data_thorough",
                  0.8192569785734071
                ],
                [
                  "test_scraper_default_init",
                  "test_fetch_data",
                  0.253546276418555
                ],
                [
                  "test_fetch_data",
                  "test_set_buffer_size",
                  0.10527936095153946
                ],
                [
                  "test_fetch_data",
                  "test_get_data_balanced",
                  0.2688568455920882
                ],
                [
                  "test_fetch_data",
                  "test_scraper_order",
                  0.09113532707206115
                ],
                [
                  "test_set_buffer_size",
                  "test_get_data_thorough",
                  0.13031292729132476
                ],
                [
                  "test_fetch_data",
                  "test_set_holding_time",
                  0.10101525445522107
                ],
                [
                  "test_get_data_balanced",
                  "test_get_company_data_balanced",
                  0.7926232985060698
                ],
                [
                  "test_get_data_thorough",
                  "test_get_company_data_fast",
                  0.7469232671028484
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_get_company_data_fast",
                "false"
              ],
              [
                "test_set_holding_time",
                "false"
              ],
              [
                "test_scraper_default_init",
                "false"
              ],
              [
                "test_set_buffer_size",
                "false"
              ],
              [
                "test_set_approach",
                "false"
              ],
              [
                "test_close_connection",
                "false"
              ],
              [
                "test_fetch_data",
                "false"
              ],
              [
                "test_scraper_order",
                "true"
              ],
              [
                "test_get_data_thorough",
                "true"
              ],
              [
                "test_get_data_fast",
                "true"
              ],
              [
                "test_get_data_balanced",
                "true"
              ],
              [
                "test_get_company_data_thorough",
                "false"
              ],
              [
                "test_get_company_data_balanced",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 13
      }
    ]
  },
  {
    "name": "tests_\u0026_test_general_scraper.py",
    "testCases": [
      {
        "name": "TestBaseScraperFunctionality",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_get_data_with_buffer",
                  "[PyCallExpression: self.assertTrue]"
                ],
                [
                  "test_scraper_set_buffer_size",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_scraper_set_holding_time",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_get_data_without_buffer",
                  "[PyCallExpression: self.assertIsNotNone]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_get_data_with_buffer",
                  "[]"
                ],
                [
                  "test_scraper_set_buffer_size",
                  "[]"
                ],
                [
                  "test_scraper_set_holding_time",
                  "[]"
                ],
                [
                  "test_get_data_without_buffer",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_get_data_with_buffer",
                  "false"
                ],
                [
                  "test_scraper_set_buffer_size",
                  "false"
                ],
                [
                  "test_scraper_set_holding_time",
                  "false"
                ],
                [
                  "test_get_data_without_buffer",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_get_data_with_buffer",
                  "false"
                ],
                [
                  "test_scraper_set_buffer_size",
                  "false"
                ],
                [
                  "test_scraper_set_holding_time",
                  "false"
                ],
                [
                  "test_get_data_without_buffer",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_get_data_with_buffer",
                  "false"
                ],
                [
                  "test_scraper_set_buffer_size",
                  "false"
                ],
                [
                  "test_scraper_set_holding_time",
                  "false"
                ],
                [
                  "test_get_data_without_buffer",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_get_data_with_buffer",
                  "false"
                ],
                [
                  "test_scraper_set_buffer_size",
                  "false"
                ],
                [
                  "test_scraper_set_holding_time",
                  "false"
                ],
                [
                  "test_get_data_without_buffer",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data_with_buffer",
                "false"
              ],
              [
                "test_scraper_set_buffer_size",
                "false"
              ],
              [
                "test_scraper_set_holding_time",
                "false"
              ],
              [
                "test_get_data_without_buffer",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data_with_buffer",
                "false"
              ],
              [
                "test_scraper_set_buffer_size",
                "false"
              ],
              [
                "test_scraper_set_holding_time",
                "false"
              ],
              [
                "test_get_data_without_buffer",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data_with_buffer",
                []
              ],
              [
                "test_scraper_set_buffer_size",
                []
              ],
              [
                "test_scraper_set_holding_time",
                []
              ],
              [
                "test_get_data_without_buffer",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data_with_buffer",
                "false"
              ],
              [
                "test_scraper_set_buffer_size",
                "false"
              ],
              [
                "test_scraper_set_holding_time",
                "false"
              ],
              [
                "test_get_data_without_buffer",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_get_data_with_buffer",
                "false"
              ],
              [
                "test_scraper_set_buffer_size",
                "true"
              ],
              [
                "test_scraper_set_holding_time",
                "true"
              ],
              [
                "test_get_data_without_buffer",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_get_data_with_buffer",
                  "0"
                ],
                [
                  "test_scraper_set_buffer_size",
                  "0"
                ],
                [
                  "test_scraper_set_holding_time",
                  "0"
                ],
                [
                  "test_get_data_without_buffer",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_get_data_with_buffer",
                  "0"
                ],
                [
                  "test_scraper_set_buffer_size",
                  "0"
                ],
                [
                  "test_scraper_set_holding_time",
                  "0"
                ],
                [
                  "test_get_data_without_buffer",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data_with_buffer",
                "false"
              ],
              [
                "test_scraper_set_buffer_size",
                "false"
              ],
              [
                "test_scraper_set_holding_time",
                "false"
              ],
              [
                "test_get_data_without_buffer",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data_with_buffer",
                "false"
              ],
              [
                "test_scraper_set_buffer_size",
                "false"
              ],
              [
                "test_scraper_set_holding_time",
                "false"
              ],
              [
                "test_get_data_without_buffer",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data_with_buffer",
                "1"
              ],
              [
                "test_scraper_set_buffer_size",
                "1"
              ],
              [
                "test_scraper_set_holding_time",
                "1"
              ],
              [
                "test_get_data_without_buffer",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data_with_buffer",
                [
                  "end_time_buffer",
                  "start_time",
                  "valid_ticker",
                  "end_time",
                  "start_time_buffer"
                ]
              ],
              [
                "test_scraper_set_buffer_size",
                []
              ],
              [
                "test_scraper_set_holding_time",
                []
              ],
              [
                "test_get_data_without_buffer",
                [
                  "valid_ticker"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_get_data_with_buffer",
                [
                  "self.scraper"
                ]
              ],
              [
                "test_scraper_set_buffer_size",
                [
                  "self.scraper"
                ]
              ],
              [
                "test_scraper_set_holding_time",
                [
                  "self.scraper"
                ]
              ],
              [
                "test_get_data_without_buffer",
                [
                  "self.scraper"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.2798601606778813,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_scraper_set_buffer_size",
                  "test_scraper_set_holding_time",
                  0.5619514869490164
                ],
                [
                  "test_scraper_set_buffer_size",
                  "test_get_data_without_buffer",
                  0.2513123449750173
                ],
                [
                  "test_scraper_set_holding_time",
                  "test_get_data_with_buffer",
                  0.04841229182759271
                ],
                [
                  "test_scraper_set_buffer_size",
                  "test_get_data_with_buffer",
                  0.1632321562747526
                ],
                [
                  "test_get_data_with_buffer",
                  "test_get_data_without_buffer",
                  0.5051814855409225
                ],
                [
                  "test_scraper_set_holding_time",
                  "test_get_data_without_buffer",
                  0.14907119849998599
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_get_data_with_buffer",
                "true"
              ],
              [
                "test_scraper_set_buffer_size",
                "false"
              ],
              [
                "test_scraper_set_holding_time",
                "false"
              ],
              [
                "test_get_data_without_buffer",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "tests_\u0026_test_currency_converter.py",
    "testCases": [
      {
        "name": "TestCurrencyConverter",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_converter_init",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertTrue, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_converter_convert",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual, PyCallExpression: self.assertIsNone]"
                ],
                [
                  "test_converter_set_holding_time",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_no_buffer",
                  "[]"
                ],
                [
                  "test_converter_set_buffer_size",
                  "[PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_using_buffer",
                  "[PyCallExpression: self.assertTrue]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_converter_init",
                  "[]"
                ],
                [
                  "test_converter_convert",
                  "[]"
                ],
                [
                  "test_converter_set_holding_time",
                  "[]"
                ],
                [
                  "test_no_buffer",
                  "[]"
                ],
                [
                  "test_converter_set_buffer_size",
                  "[]"
                ],
                [
                  "test_using_buffer",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_converter_init",
                  "false"
                ],
                [
                  "test_converter_convert",
                  "false"
                ],
                [
                  "test_converter_set_holding_time",
                  "false"
                ],
                [
                  "test_no_buffer",
                  "false"
                ],
                [
                  "test_converter_set_buffer_size",
                  "false"
                ],
                [
                  "test_using_buffer",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_converter_init",
                  "false"
                ],
                [
                  "test_converter_convert",
                  "false"
                ],
                [
                  "test_converter_set_holding_time",
                  "false"
                ],
                [
                  "test_no_buffer",
                  "false"
                ],
                [
                  "test_converter_set_buffer_size",
                  "false"
                ],
                [
                  "test_using_buffer",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_converter_init",
                  "false"
                ],
                [
                  "test_converter_convert",
                  "false"
                ],
                [
                  "test_converter_set_holding_time",
                  "false"
                ],
                [
                  "test_no_buffer",
                  "false"
                ],
                [
                  "test_converter_set_buffer_size",
                  "false"
                ],
                [
                  "test_using_buffer",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_converter_init",
                  "false"
                ],
                [
                  "test_converter_convert",
                  "false"
                ],
                [
                  "test_converter_set_holding_time",
                  "false"
                ],
                [
                  "test_no_buffer",
                  "false"
                ],
                [
                  "test_converter_set_buffer_size",
                  "false"
                ],
                [
                  "test_using_buffer",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_converter_init",
                "false"
              ],
              [
                "test_converter_convert",
                "false"
              ],
              [
                "test_converter_set_holding_time",
                "false"
              ],
              [
                "test_no_buffer",
                "false"
              ],
              [
                "test_converter_set_buffer_size",
                "false"
              ],
              [
                "test_using_buffer",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_converter_init",
                "false"
              ],
              [
                "test_converter_convert",
                "false"
              ],
              [
                "test_converter_set_holding_time",
                "false"
              ],
              [
                "test_no_buffer",
                "false"
              ],
              [
                "test_converter_set_buffer_size",
                "false"
              ],
              [
                "test_using_buffer",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_converter_init",
                []
              ],
              [
                "test_converter_convert",
                []
              ],
              [
                "test_converter_set_holding_time",
                []
              ],
              [
                "test_no_buffer",
                []
              ],
              [
                "test_converter_set_buffer_size",
                []
              ],
              [
                "test_using_buffer",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_converter_init",
                "false"
              ],
              [
                "test_converter_convert",
                "false"
              ],
              [
                "test_converter_set_holding_time",
                "false"
              ],
              [
                "test_no_buffer",
                "false"
              ],
              [
                "test_converter_set_buffer_size",
                "false"
              ],
              [
                "test_using_buffer",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": true,
            "detail": [
              [
                "test_converter_init",
                "true"
              ],
              [
                "test_converter_convert",
                "true"
              ],
              [
                "test_converter_set_holding_time",
                "true"
              ],
              [
                "test_no_buffer",
                "false"
              ],
              [
                "test_converter_set_buffer_size",
                "true"
              ],
              [
                "test_using_buffer",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_converter_init",
                  "0"
                ],
                [
                  "test_converter_convert",
                  "0"
                ],
                [
                  "test_converter_set_holding_time",
                  "0"
                ],
                [
                  "test_no_buffer",
                  "0"
                ],
                [
                  "test_converter_set_buffer_size",
                  "0"
                ],
                [
                  "test_using_buffer",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_converter_init",
                  "0"
                ],
                [
                  "test_converter_convert",
                  "0"
                ],
                [
                  "test_converter_set_holding_time",
                  "0"
                ],
                [
                  "test_no_buffer",
                  "0"
                ],
                [
                  "test_converter_set_buffer_size",
                  "0"
                ],
                [
                  "test_using_buffer",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_converter_init",
                "false"
              ],
              [
                "test_converter_convert",
                "false"
              ],
              [
                "test_converter_set_holding_time",
                "false"
              ],
              [
                "test_no_buffer",
                "false"
              ],
              [
                "test_converter_set_buffer_size",
                "false"
              ],
              [
                "test_using_buffer",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_converter_init",
                "false"
              ],
              [
                "test_converter_convert",
                "false"
              ],
              [
                "test_converter_set_holding_time",
                "false"
              ],
              [
                "test_no_buffer",
                "false"
              ],
              [
                "test_converter_set_buffer_size",
                "false"
              ],
              [
                "test_using_buffer",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_converter_init",
                "5"
              ],
              [
                "test_converter_convert",
                "3"
              ],
              [
                "test_converter_set_holding_time",
                "1"
              ],
              [
                "test_no_buffer",
                "0"
              ],
              [
                "test_converter_set_buffer_size",
                "1"
              ],
              [
                "test_using_buffer",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_converter_init",
                []
              ],
              [
                "test_converter_convert",
                []
              ],
              [
                "test_converter_set_holding_time",
                []
              ],
              [
                "test_no_buffer",
                []
              ],
              [
                "test_converter_set_buffer_size",
                []
              ],
              [
                "test_using_buffer",
                [
                  "end_time_buffer",
                  "start_time",
                  "end_time",
                  "start_time_buffer"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": true,
            "detail": [
              [
                "test_converter_init",
                [
                  "self.usd_converter"
                ]
              ],
              [
                "test_converter_convert",
                [
                  "self.usd_converter"
                ]
              ],
              [
                "test_converter_set_holding_time",
                [
                  "self.usd_converter"
                ]
              ],
              [
                "test_no_buffer",
                []
              ],
              [
                "test_converter_set_buffer_size",
                [
                  "self.usd_converter"
                ]
              ],
              [
                "test_using_buffer",
                [
                  "self.usd_converter"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": true,
            "detail": {
              "testClassCohesionScore": 0.36329313643006056,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_converter_set_buffer_size",
                  "test_converter_convert",
                  0.401188709901439
                ],
                [
                  "test_no_buffer",
                  "test_using_buffer",
                  0.3317386522674101
                ],
                [
                  "test_converter_init",
                  "test_using_buffer",
                  0.16700224051969775
                ],
                [
                  "test_converter_set_holding_time",
                  "test_converter_convert",
                  0.36055512754639896
                ],
                [
                  "test_converter_convert",
                  "test_using_buffer",
                  0.2778961629318814
                ],
                [
                  "test_converter_init",
                  "test_converter_set_holding_time",
                  0.5510661829601742
                ],
                [
                  "test_converter_init",
                  "test_converter_convert",
                  0.5528757923720704
                ],
                [
                  "test_converter_init",
                  "test_no_buffer",
                  0.20330224427150914
                ],
                [
                  "test_converter_convert",
                  "test_no_buffer",
                  0.27456258919345766
                ],
                [
                  "test_converter_set_buffer_size",
                  "test_no_buffer",
                  0.42365927286816174
                ],
                [
                  "test_converter_set_buffer_size",
                  "test_converter_set_holding_time",
                  0.5991446895152781
                ],
                [
                  "test_converter_set_buffer_size",
                  "test_using_buffer",
                  0.3169414134756567
                ],
                [
                  "test_converter_init",
                  "test_converter_set_buffer_size",
                  0.5331911679747279
                ],
                [
                  "test_converter_set_holding_time",
                  "test_no_buffer",
                  0.2719641466102106
                ],
                [
                  "test_converter_set_holding_time",
                  "test_using_buffer",
                  0.18430865404283492
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": true,
            "detail": [
              [
                "test_converter_init",
                "false"
              ],
              [
                "test_converter_convert",
                "false"
              ],
              [
                "test_converter_set_holding_time",
                "false"
              ],
              [
                "test_no_buffer",
                "false"
              ],
              [
                "test_converter_set_buffer_size",
                "false"
              ],
              [
                "test_using_buffer",
                "true"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      }
    ]
  }
]