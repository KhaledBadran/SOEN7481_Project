[
  {
    "name": "test_\u0026_cfr_\u0026_test_cfr.py",
    "testCases": [
      {
        "name": "TestCFR",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_run_CFRplus",
                  "[]"
                ],
                [
                  "test_run_linearCFR",
                  "[]"
                ],
                [
                  "test_run_CFR",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_run_CFRplus",
                  "[]"
                ],
                [
                  "test_run_linearCFR",
                  "[]"
                ],
                [
                  "test_run_CFR",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_run_CFRplus",
                  "true"
                ],
                [
                  "test_run_linearCFR",
                  "true"
                ],
                [
                  "test_run_CFR",
                  "true"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_run_CFRplus",
                  "false"
                ],
                [
                  "test_run_linearCFR",
                  "false"
                ],
                [
                  "test_run_CFR",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_run_CFRplus",
                  "false"
                ],
                [
                  "test_run_linearCFR",
                  "false"
                ],
                [
                  "test_run_CFR",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_run_CFRplus",
                  "false"
                ],
                [
                  "test_run_linearCFR",
                  "false"
                ],
                [
                  "test_run_CFR",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_run_CFRplus",
                "false"
              ],
              [
                "test_run_linearCFR",
                "false"
              ],
              [
                "test_run_CFR",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_run_CFRplus",
                "false"
              ],
              [
                "test_run_linearCFR",
                "false"
              ],
              [
                "test_run_CFR",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_run_CFRplus",
                []
              ],
              [
                "test_run_linearCFR",
                []
              ],
              [
                "test_run_CFR",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_run_CFRplus",
                "false"
              ],
              [
                "test_run_linearCFR",
                "false"
              ],
              [
                "test_run_CFR",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_run_CFRplus",
                "false"
              ],
              [
                "test_run_linearCFR",
                "false"
              ],
              [
                "test_run_CFR",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_run_CFRplus",
                  "0"
                ],
                [
                  "test_run_linearCFR",
                  "0"
                ],
                [
                  "test_run_CFR",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_run_CFRplus",
                  "0"
                ],
                [
                  "test_run_linearCFR",
                  "0"
                ],
                [
                  "test_run_CFR",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_run_CFRplus",
                "false"
              ],
              [
                "test_run_linearCFR",
                "false"
              ],
              [
                "test_run_CFR",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_run_CFRplus",
                "false"
              ],
              [
                "test_run_linearCFR",
                "false"
              ],
              [
                "test_run_CFR",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": true,
            "detail": [
              [
                "test_run_CFRplus",
                "0"
              ],
              [
                "test_run_linearCFR",
                "0"
              ],
              [
                "test_run_CFR",
                "0"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_run_CFRplus",
                [
                  "chief",
                  "name",
                  "n_iterations",
                  "cfr"
                ]
              ],
              [
                "test_run_linearCFR",
                [
                  "chief",
                  "name",
                  "n_iterations",
                  "cfr"
                ]
              ],
              [
                "test_run_CFR",
                [
                  "chief",
                  "name",
                  "n_iterations",
                  "cfr"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_run_CFRplus",
                []
              ],
              [
                "test_run_linearCFR",
                []
              ],
              [
                "test_run_CFR",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.9313309252692236,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_run_CFRplus",
                  "test_run_linearCFR",
                  0.9018621800409632
                ],
                [
                  "test_run_CFR",
                  "test_run_linearCFR",
                  0.950911699220019
                ],
                [
                  "test_run_CFR",
                  "test_run_CFRplus",
                  0.9412188965466886
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_run_CFRplus",
                "false"
              ],
              [
                "test_run_linearCFR",
                "false"
              ],
              [
                "test_run_CFR",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  },
  {
    "name": "test_\u0026_game_\u0026_test_CppLibPoker.py",
    "testCases": [
      {
        "name": "TestCppLib",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_get_hand_rank_52_holdem",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_get_hand_rank_52_holdem",
                  "[PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_get_hand_rank_52_holdem",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_get_hand_rank_52_holdem",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_get_hand_rank_52_holdem",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_get_hand_rank_52_holdem",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_hand_rank_52_holdem",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_get_hand_rank_52_holdem",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_get_hand_rank_52_holdem",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_hand_rank_52_holdem",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_hand_rank_52_holdem",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_get_hand_rank_52_holdem",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_get_hand_rank_52_holdem",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_get_hand_rank_52_holdem",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_hand_rank_52_holdem",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_hand_rank_52_holdem",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_get_hand_rank_52_holdem",
                [
                  "cpp_poker",
                  "b",
                  "h"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_get_hand_rank_52_holdem",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.0,
              "threshold": 0.6,
              "cosineSimilarityScores": []
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_get_hand_rank_52_holdem",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 1
      }
    ]
  },
  {
    "name": "test_\u0026_game_\u0026_test_look_up_table.py",
    "testCases": [
      {
        "name": "TestLutGetterHoldem",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_get_1d_card_2_2d_card_lut",
                  "[]"
                ],
                [
                  "test_get_hole_card_2_idx_lut",
                  "[]"
                ],
                [
                  "test_get_2d_card_2_1d_card_lut",
                  "[]"
                ],
                [
                  "test_get_lut_card_in_what_range_idxs",
                  "[]"
                ],
                [
                  "test_get_idx_2_hole_card_lut",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_get_1d_card_2_2d_card_lut",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_get_hole_card_2_idx_lut",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_get_2d_card_2_1d_card_lut",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_get_lut_card_in_what_range_idxs",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_get_idx_2_hole_card_lut",
                  "[PyAssertStatement, PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_get_1d_card_2_2d_card_lut",
                  "false"
                ],
                [
                  "test_get_hole_card_2_idx_lut",
                  "true"
                ],
                [
                  "test_get_2d_card_2_1d_card_lut",
                  "false"
                ],
                [
                  "test_get_lut_card_in_what_range_idxs",
                  "true"
                ],
                [
                  "test_get_idx_2_hole_card_lut",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_get_1d_card_2_2d_card_lut",
                  "false"
                ],
                [
                  "test_get_hole_card_2_idx_lut",
                  "false"
                ],
                [
                  "test_get_2d_card_2_1d_card_lut",
                  "false"
                ],
                [
                  "test_get_lut_card_in_what_range_idxs",
                  "false"
                ],
                [
                  "test_get_idx_2_hole_card_lut",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_get_1d_card_2_2d_card_lut",
                  "false"
                ],
                [
                  "test_get_hole_card_2_idx_lut",
                  "false"
                ],
                [
                  "test_get_2d_card_2_1d_card_lut",
                  "false"
                ],
                [
                  "test_get_lut_card_in_what_range_idxs",
                  "false"
                ],
                [
                  "test_get_idx_2_hole_card_lut",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_get_1d_card_2_2d_card_lut",
                  "false"
                ],
                [
                  "test_get_hole_card_2_idx_lut",
                  "false"
                ],
                [
                  "test_get_2d_card_2_1d_card_lut",
                  "false"
                ],
                [
                  "test_get_lut_card_in_what_range_idxs",
                  "false"
                ],
                [
                  "test_get_idx_2_hole_card_lut",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_1d_card_2_2d_card_lut",
                "false"
              ],
              [
                "test_get_hole_card_2_idx_lut",
                "false"
              ],
              [
                "test_get_2d_card_2_1d_card_lut",
                "false"
              ],
              [
                "test_get_lut_card_in_what_range_idxs",
                "false"
              ],
              [
                "test_get_idx_2_hole_card_lut",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_get_1d_card_2_2d_card_lut",
                "false"
              ],
              [
                "test_get_hole_card_2_idx_lut",
                "false"
              ],
              [
                "test_get_2d_card_2_1d_card_lut",
                "false"
              ],
              [
                "test_get_lut_card_in_what_range_idxs",
                "false"
              ],
              [
                "test_get_idx_2_hole_card_lut",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_get_1d_card_2_2d_card_lut",
                []
              ],
              [
                "test_get_hole_card_2_idx_lut",
                []
              ],
              [
                "test_get_2d_card_2_1d_card_lut",
                []
              ],
              [
                "test_get_lut_card_in_what_range_idxs",
                []
              ],
              [
                "test_get_idx_2_hole_card_lut",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_1d_card_2_2d_card_lut",
                "false"
              ],
              [
                "test_get_hole_card_2_idx_lut",
                "false"
              ],
              [
                "test_get_2d_card_2_1d_card_lut",
                "false"
              ],
              [
                "test_get_lut_card_in_what_range_idxs",
                "false"
              ],
              [
                "test_get_idx_2_hole_card_lut",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_1d_card_2_2d_card_lut",
                "false"
              ],
              [
                "test_get_hole_card_2_idx_lut",
                "false"
              ],
              [
                "test_get_2d_card_2_1d_card_lut",
                "false"
              ],
              [
                "test_get_lut_card_in_what_range_idxs",
                "false"
              ],
              [
                "test_get_idx_2_hole_card_lut",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_get_1d_card_2_2d_card_lut",
                  "0"
                ],
                [
                  "test_get_hole_card_2_idx_lut",
                  "0"
                ],
                [
                  "test_get_2d_card_2_1d_card_lut",
                  "0"
                ],
                [
                  "test_get_lut_card_in_what_range_idxs",
                  "0"
                ],
                [
                  "test_get_idx_2_hole_card_lut",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_get_1d_card_2_2d_card_lut",
                  "0"
                ],
                [
                  "test_get_hole_card_2_idx_lut",
                  "0"
                ],
                [
                  "test_get_2d_card_2_1d_card_lut",
                  "0"
                ],
                [
                  "test_get_lut_card_in_what_range_idxs",
                  "0"
                ],
                [
                  "test_get_idx_2_hole_card_lut",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_get_1d_card_2_2d_card_lut",
                "false"
              ],
              [
                "test_get_hole_card_2_idx_lut",
                "false"
              ],
              [
                "test_get_2d_card_2_1d_card_lut",
                "false"
              ],
              [
                "test_get_lut_card_in_what_range_idxs",
                "false"
              ],
              [
                "test_get_idx_2_hole_card_lut",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_1d_card_2_2d_card_lut",
                "false"
              ],
              [
                "test_get_hole_card_2_idx_lut",
                "false"
              ],
              [
                "test_get_2d_card_2_1d_card_lut",
                "false"
              ],
              [
                "test_get_lut_card_in_what_range_idxs",
                "false"
              ],
              [
                "test_get_idx_2_hole_card_lut",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_1d_card_2_2d_card_lut",
                "2"
              ],
              [
                "test_get_hole_card_2_idx_lut",
                "3"
              ],
              [
                "test_get_2d_card_2_1d_card_lut",
                "2"
              ],
              [
                "test_get_lut_card_in_what_range_idxs",
                "3"
              ],
              [
                "test_get_idx_2_hole_card_lut",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_get_1d_card_2_2d_card_lut",
                [
                  "lut",
                  "lg"
                ]
              ],
              [
                "test_get_hole_card_2_idx_lut",
                [
                  "lut",
                  "lg"
                ]
              ],
              [
                "test_get_2d_card_2_1d_card_lut",
                [
                  "lut",
                  "lg"
                ]
              ],
              [
                "test_get_lut_card_in_what_range_idxs",
                [
                  "counts",
                  "lut",
                  "lg"
                ]
              ],
              [
                "test_get_idx_2_hole_card_lut",
                [
                  "lut",
                  "lg"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_get_1d_card_2_2d_card_lut",
                []
              ],
              [
                "test_get_hole_card_2_idx_lut",
                []
              ],
              [
                "test_get_2d_card_2_1d_card_lut",
                []
              ],
              [
                "test_get_lut_card_in_what_range_idxs",
                []
              ],
              [
                "test_get_idx_2_hole_card_lut",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8432578038780525,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_get_1d_card_2_2d_card_lut",
                  "test_get_idx_2_hole_card_lut",
                  0.9094270910709175
                ],
                [
                  "test_get_1d_card_2_2d_card_lut",
                  "test_get_hole_card_2_idx_lut",
                  0.8311541828971976
                ],
                [
                  "test_get_1d_card_2_2d_card_lut",
                  "test_get_lut_card_in_what_range_idxs",
                  0.7546725820048061
                ],
                [
                  "test_get_idx_2_hole_card_lut",
                  "test_get_hole_card_2_idx_lut",
                  0.8573250324002701
                ],
                [
                  "test_get_idx_2_hole_card_lut",
                  "test_get_lut_card_in_what_range_idxs",
                  0.8154010901247439
                ],
                [
                  "test_get_2d_card_2_1d_card_lut",
                  "test_get_lut_card_in_what_range_idxs",
                  0.7546725820048061
                ],
                [
                  "test_get_1d_card_2_2d_card_lut",
                  "test_get_2d_card_2_1d_card_lut",
                  1.0
                ],
                [
                  "test_get_2d_card_2_1d_card_lut",
                  "test_get_hole_card_2_idx_lut",
                  0.8311541828971976
                ],
                [
                  "test_get_hole_card_2_idx_lut",
                  "test_get_lut_card_in_what_range_idxs",
                  0.7693442043096679
                ],
                [
                  "test_get_2d_card_2_1d_card_lut",
                  "test_get_idx_2_hole_card_lut",
                  0.9094270910709175
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_get_1d_card_2_2d_card_lut",
                "false"
              ],
              [
                "test_get_hole_card_2_idx_lut",
                "false"
              ],
              [
                "test_get_2d_card_2_1d_card_lut",
                "false"
              ],
              [
                "test_get_lut_card_in_what_range_idxs",
                "false"
              ],
              [
                "test_get_idx_2_hole_card_lut",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      },
      {
        "name": "TestLutGetterLeduc",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_get_idx_2_hole_card_lut",
                  "[]"
                ],
                [
                  "test_get_lut_card_in_what_range_idxs",
                  "[]"
                ],
                [
                  "test_get_2d_card_2_1d_card_lut",
                  "[]"
                ],
                [
                  "test_get_1d_card_2_2d_card_lut",
                  "[]"
                ],
                [
                  "test_get_hole_card_2_idx_lut",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_get_idx_2_hole_card_lut",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_get_lut_card_in_what_range_idxs",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_get_2d_card_2_1d_card_lut",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_get_1d_card_2_2d_card_lut",
                  "[PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_get_hole_card_2_idx_lut",
                  "[PyAssertStatement, PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_get_idx_2_hole_card_lut",
                  "false"
                ],
                [
                  "test_get_lut_card_in_what_range_idxs",
                  "true"
                ],
                [
                  "test_get_2d_card_2_1d_card_lut",
                  "false"
                ],
                [
                  "test_get_1d_card_2_2d_card_lut",
                  "false"
                ],
                [
                  "test_get_hole_card_2_idx_lut",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_get_idx_2_hole_card_lut",
                  "false"
                ],
                [
                  "test_get_lut_card_in_what_range_idxs",
                  "false"
                ],
                [
                  "test_get_2d_card_2_1d_card_lut",
                  "false"
                ],
                [
                  "test_get_1d_card_2_2d_card_lut",
                  "false"
                ],
                [
                  "test_get_hole_card_2_idx_lut",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_get_idx_2_hole_card_lut",
                  "false"
                ],
                [
                  "test_get_lut_card_in_what_range_idxs",
                  "false"
                ],
                [
                  "test_get_2d_card_2_1d_card_lut",
                  "false"
                ],
                [
                  "test_get_1d_card_2_2d_card_lut",
                  "false"
                ],
                [
                  "test_get_hole_card_2_idx_lut",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_get_idx_2_hole_card_lut",
                  "false"
                ],
                [
                  "test_get_lut_card_in_what_range_idxs",
                  "false"
                ],
                [
                  "test_get_2d_card_2_1d_card_lut",
                  "false"
                ],
                [
                  "test_get_1d_card_2_2d_card_lut",
                  "false"
                ],
                [
                  "test_get_hole_card_2_idx_lut",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_idx_2_hole_card_lut",
                "false"
              ],
              [
                "test_get_lut_card_in_what_range_idxs",
                "false"
              ],
              [
                "test_get_2d_card_2_1d_card_lut",
                "false"
              ],
              [
                "test_get_1d_card_2_2d_card_lut",
                "false"
              ],
              [
                "test_get_hole_card_2_idx_lut",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_get_idx_2_hole_card_lut",
                "false"
              ],
              [
                "test_get_lut_card_in_what_range_idxs",
                "false"
              ],
              [
                "test_get_2d_card_2_1d_card_lut",
                "false"
              ],
              [
                "test_get_1d_card_2_2d_card_lut",
                "false"
              ],
              [
                "test_get_hole_card_2_idx_lut",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_get_idx_2_hole_card_lut",
                []
              ],
              [
                "test_get_lut_card_in_what_range_idxs",
                []
              ],
              [
                "test_get_2d_card_2_1d_card_lut",
                []
              ],
              [
                "test_get_1d_card_2_2d_card_lut",
                []
              ],
              [
                "test_get_hole_card_2_idx_lut",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_idx_2_hole_card_lut",
                "false"
              ],
              [
                "test_get_lut_card_in_what_range_idxs",
                "false"
              ],
              [
                "test_get_2d_card_2_1d_card_lut",
                "false"
              ],
              [
                "test_get_1d_card_2_2d_card_lut",
                "false"
              ],
              [
                "test_get_hole_card_2_idx_lut",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_idx_2_hole_card_lut",
                "false"
              ],
              [
                "test_get_lut_card_in_what_range_idxs",
                "false"
              ],
              [
                "test_get_2d_card_2_1d_card_lut",
                "false"
              ],
              [
                "test_get_1d_card_2_2d_card_lut",
                "false"
              ],
              [
                "test_get_hole_card_2_idx_lut",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_get_idx_2_hole_card_lut",
                  "0"
                ],
                [
                  "test_get_lut_card_in_what_range_idxs",
                  "0"
                ],
                [
                  "test_get_2d_card_2_1d_card_lut",
                  "0"
                ],
                [
                  "test_get_1d_card_2_2d_card_lut",
                  "0"
                ],
                [
                  "test_get_hole_card_2_idx_lut",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_get_idx_2_hole_card_lut",
                  "0"
                ],
                [
                  "test_get_lut_card_in_what_range_idxs",
                  "0"
                ],
                [
                  "test_get_2d_card_2_1d_card_lut",
                  "0"
                ],
                [
                  "test_get_1d_card_2_2d_card_lut",
                  "0"
                ],
                [
                  "test_get_hole_card_2_idx_lut",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_get_idx_2_hole_card_lut",
                "false"
              ],
              [
                "test_get_lut_card_in_what_range_idxs",
                "false"
              ],
              [
                "test_get_2d_card_2_1d_card_lut",
                "false"
              ],
              [
                "test_get_1d_card_2_2d_card_lut",
                "false"
              ],
              [
                "test_get_hole_card_2_idx_lut",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_idx_2_hole_card_lut",
                "false"
              ],
              [
                "test_get_lut_card_in_what_range_idxs",
                "false"
              ],
              [
                "test_get_2d_card_2_1d_card_lut",
                "false"
              ],
              [
                "test_get_1d_card_2_2d_card_lut",
                "false"
              ],
              [
                "test_get_hole_card_2_idx_lut",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_idx_2_hole_card_lut",
                "2"
              ],
              [
                "test_get_lut_card_in_what_range_idxs",
                "3"
              ],
              [
                "test_get_2d_card_2_1d_card_lut",
                "2"
              ],
              [
                "test_get_1d_card_2_2d_card_lut",
                "2"
              ],
              [
                "test_get_hole_card_2_idx_lut",
                "2"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_get_idx_2_hole_card_lut",
                [
                  "lut",
                  "lg"
                ]
              ],
              [
                "test_get_lut_card_in_what_range_idxs",
                [
                  "counts",
                  "lut",
                  "lg"
                ]
              ],
              [
                "test_get_2d_card_2_1d_card_lut",
                [
                  "lut",
                  "lg"
                ]
              ],
              [
                "test_get_1d_card_2_2d_card_lut",
                [
                  "lut",
                  "lg"
                ]
              ],
              [
                "test_get_hole_card_2_idx_lut",
                [
                  "lut",
                  "lg"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_get_idx_2_hole_card_lut",
                []
              ],
              [
                "test_get_lut_card_in_what_range_idxs",
                []
              ],
              [
                "test_get_2d_card_2_1d_card_lut",
                []
              ],
              [
                "test_get_1d_card_2_2d_card_lut",
                []
              ],
              [
                "test_get_hole_card_2_idx_lut",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8771678434289931,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_get_1d_card_2_2d_card_lut",
                  "test_get_hole_card_2_idx_lut",
                  0.9091363699524708
                ],
                [
                  "test_get_1d_card_2_2d_card_lut",
                  "test_get_2d_card_2_1d_card_lut",
                  1.0
                ],
                [
                  "test_get_idx_2_hole_card_lut",
                  "test_get_lut_card_in_what_range_idxs",
                  0.814163358431611
                ],
                [
                  "test_get_2d_card_2_1d_card_lut",
                  "test_get_idx_2_hole_card_lut",
                  0.9091363699524708
                ],
                [
                  "test_get_hole_card_2_idx_lut",
                  "test_get_lut_card_in_what_range_idxs",
                  0.814163358431611
                ],
                [
                  "test_get_2d_card_2_1d_card_lut",
                  "test_get_lut_card_in_what_range_idxs",
                  0.7534031188084134
                ],
                [
                  "test_get_idx_2_hole_card_lut",
                  "test_get_hole_card_2_idx_lut",
                  1.0
                ],
                [
                  "test_get_1d_card_2_2d_card_lut",
                  "test_get_lut_card_in_what_range_idxs",
                  0.7534031188084134
                ],
                [
                  "test_get_1d_card_2_2d_card_lut",
                  "test_get_idx_2_hole_card_lut",
                  0.9091363699524708
                ],
                [
                  "test_get_2d_card_2_1d_card_lut",
                  "test_get_hole_card_2_idx_lut",
                  0.9091363699524708
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_get_idx_2_hole_card_lut",
                "false"
              ],
              [
                "test_get_lut_card_in_what_range_idxs",
                "false"
              ],
              [
                "test_get_2d_card_2_1d_card_lut",
                "false"
              ],
              [
                "test_get_1d_card_2_2d_card_lut",
                "false"
              ],
              [
                "test_get_hole_card_2_idx_lut",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 5
      },
      {
        "name": "TestLutHolderHoldem",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_get_1d_card",
                  "[]"
                ],
                [
                  "test_hole_card_luts",
                  "[]"
                ],
                [
                  "test_create",
                  "[]"
                ],
                [
                  "test_get_range_idx_from_hole_cards",
                  "[]"
                ],
                [
                  "test_get_1d_cards",
                  "[]"
                ],
                [
                  "test_get_2d_cards",
                  "[]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_get_1d_card",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_hole_card_luts",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_create",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_get_range_idx_from_hole_cards",
                  "[PyAssertStatement]"
                ],
                [
                  "test_get_1d_cards",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ],
                [
                  "test_get_2d_cards",
                  "[PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement, PyAssertStatement]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": true,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_get_1d_card",
                  "false"
                ],
                [
                  "test_hole_card_luts",
                  "true"
                ],
                [
                  "test_create",
                  "false"
                ],
                [
                  "test_get_range_idx_from_hole_cards",
                  "true"
                ],
                [
                  "test_get_1d_cards",
                  "false"
                ],
                [
                  "test_get_2d_cards",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_get_1d_card",
                  "false"
                ],
                [
                  "test_hole_card_luts",
                  "false"
                ],
                [
                  "test_create",
                  "false"
                ],
                [
                  "test_get_range_idx_from_hole_cards",
                  "false"
                ],
                [
                  "test_get_1d_cards",
                  "false"
                ],
                [
                  "test_get_2d_cards",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": true,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_get_1d_card",
                  "false"
                ],
                [
                  "test_hole_card_luts",
                  "false"
                ],
                [
                  "test_create",
                  "false"
                ],
                [
                  "test_get_range_idx_from_hole_cards",
                  "false"
                ],
                [
                  "test_get_1d_cards",
                  "false"
                ],
                [
                  "test_get_2d_cards",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_get_1d_card",
                  "false"
                ],
                [
                  "test_hole_card_luts",
                  "false"
                ],
                [
                  "test_create",
                  "false"
                ],
                [
                  "test_get_range_idx_from_hole_cards",
                  "false"
                ],
                [
                  "test_get_1d_cards",
                  "false"
                ],
                [
                  "test_get_2d_cards",
                  "true"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_1d_card",
                "false"
              ],
              [
                "test_hole_card_luts",
                "false"
              ],
              [
                "test_create",
                "false"
              ],
              [
                "test_get_range_idx_from_hole_cards",
                "false"
              ],
              [
                "test_get_1d_cards",
                "false"
              ],
              [
                "test_get_2d_cards",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_get_1d_card",
                "false"
              ],
              [
                "test_hole_card_luts",
                "false"
              ],
              [
                "test_create",
                "false"
              ],
              [
                "test_get_range_idx_from_hole_cards",
                "false"
              ],
              [
                "test_get_1d_cards",
                "false"
              ],
              [
                "test_get_2d_cards",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": false,
            "detail": [
              [
                "test_get_1d_card",
                []
              ],
              [
                "test_hole_card_luts",
                []
              ],
              [
                "test_create",
                []
              ],
              [
                "test_get_range_idx_from_hole_cards",
                []
              ],
              [
                "test_get_1d_cards",
                []
              ],
              [
                "test_get_2d_cards",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_1d_card",
                "false"
              ],
              [
                "test_hole_card_luts",
                "false"
              ],
              [
                "test_create",
                "false"
              ],
              [
                "test_get_range_idx_from_hole_cards",
                "false"
              ],
              [
                "test_get_1d_cards",
                "false"
              ],
              [
                "test_get_2d_cards",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_1d_card",
                "false"
              ],
              [
                "test_hole_card_luts",
                "false"
              ],
              [
                "test_create",
                "false"
              ],
              [
                "test_get_range_idx_from_hole_cards",
                "false"
              ],
              [
                "test_get_1d_cards",
                "false"
              ],
              [
                "test_get_2d_cards",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_get_1d_card",
                  "0"
                ],
                [
                  "test_hole_card_luts",
                  "0"
                ],
                [
                  "test_create",
                  "0"
                ],
                [
                  "test_get_range_idx_from_hole_cards",
                  "0"
                ],
                [
                  "test_get_1d_cards",
                  "0"
                ],
                [
                  "test_get_2d_cards",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_get_1d_card",
                  "0"
                ],
                [
                  "test_hole_card_luts",
                  "0"
                ],
                [
                  "test_create",
                  "0"
                ],
                [
                  "test_get_range_idx_from_hole_cards",
                  "0"
                ],
                [
                  "test_get_1d_cards",
                  "0"
                ],
                [
                  "test_get_2d_cards",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_get_1d_card",
                "false"
              ],
              [
                "test_hole_card_luts",
                "false"
              ],
              [
                "test_create",
                "false"
              ],
              [
                "test_get_range_idx_from_hole_cards",
                "false"
              ],
              [
                "test_get_1d_cards",
                "false"
              ],
              [
                "test_get_2d_cards",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_1d_card",
                "false"
              ],
              [
                "test_hole_card_luts",
                "false"
              ],
              [
                "test_create",
                "false"
              ],
              [
                "test_get_range_idx_from_hole_cards",
                "false"
              ],
              [
                "test_get_1d_cards",
                "false"
              ],
              [
                "test_get_2d_cards",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_get_1d_card",
                "5"
              ],
              [
                "test_hole_card_luts",
                "3"
              ],
              [
                "test_create",
                "4"
              ],
              [
                "test_get_range_idx_from_hole_cards",
                "1"
              ],
              [
                "test_get_1d_cards",
                "4"
              ],
              [
                "test_get_2d_cards",
                "5"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_get_1d_card",
                [
                  "lh"
                ]
              ],
              [
                "test_hole_card_luts",
                [
                  "c_2d",
                  "cc1",
                  "c_1d",
                  "cc2",
                  "_c_2d",
                  "_c_1d",
                  "hole_cards",
                  "lh"
                ]
              ],
              [
                "test_create",
                [
                  "lh"
                ]
              ],
              [
                "test_get_range_idx_from_hole_cards",
                [
                  "lh",
                  "n"
                ]
              ],
              [
                "test_get_1d_cards",
                [
                  "lh"
                ]
              ],
              [
                "test_get_2d_cards",
                [
                  "lh"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_get_1d_card",
                []
              ],
              [
                "test_hole_card_luts",
                []
              ],
              [
                "test_create",
                []
              ],
              [
                "test_get_range_idx_from_hole_cards",
                []
              ],
              [
                "test_get_1d_cards",
                []
              ],
              [
                "test_get_2d_cards",
                []
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.8793065143590962,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_get_1d_cards",
                  "test_get_2d_cards",
                  0.9693016970277781
                ],
                [
                  "test_get_1d_cards",
                  "test_get_range_idx_from_hole_cards",
                  0.8224896219130879
                ],
                [
                  "test_get_1d_card",
                  "test_get_2d_cards",
                  0.917025010090247
                ],
                [
                  "test_get_1d_card",
                  "test_get_range_idx_from_hole_cards",
                  0.8316115694639703
                ],
                [
                  "test_get_1d_cards",
                  "test_hole_card_luts",
                  0.8924507065344532
                ],
                [
                  "test_create",
                  "test_hole_card_luts",
                  0.9043816840710394
                ],
                [
                  "test_create",
                  "test_get_1d_cards",
                  0.8377713731872974
                ],
                [
                  "test_create",
                  "test_get_range_idx_from_hole_cards",
                  0.8502025380223861
                ],
                [
                  "test_get_2d_cards",
                  "test_hole_card_luts",
                  0.8849058601441536
                ],
                [
                  "test_get_2d_cards",
                  "test_get_range_idx_from_hole_cards",
                  0.8107534010426416
                ],
                [
                  "test_get_1d_card",
                  "test_get_1d_cards",
                  0.9224923526278049
                ],
                [
                  "test_get_1d_card",
                  "test_hole_card_luts",
                  0.9188803548782545
                ],
                [
                  "test_create",
                  "test_get_1d_card",
                  0.8806867824226092
                ],
                [
                  "test_create",
                  "test_get_2d_cards",
                  0.8313662593407813
                ],
                [
                  "test_get_range_idx_from_hole_cards",
                  "test_hole_card_luts",
                  0.9152785046199395
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_get_1d_card",
                "false"
              ],
              [
                "test_hole_card_luts",
                "false"
              ],
              [
                "test_create",
                "false"
              ],
              [
                "test_get_range_idx_from_hole_cards",
                "false"
              ],
              [
                "test_get_1d_cards",
                "false"
              ],
              [
                "test_get_2d_cards",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 6
      }
    ]
  }
]