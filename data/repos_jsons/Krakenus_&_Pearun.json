[
  {
    "name": "tests_\u0026_test_pearunfile.py",
    "testCases": [
      {
        "name": "PearunfileTestCase",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": false,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_invalid_json",
                  "[PyCallExpression: self.assertRaisesRegex]"
                ],
                [
                  "test_non_string_commands",
                  "[PyCallExpression: self.assertRaisesRegex]"
                ],
                [
                  "test_valid_json",
                  "[PyCallExpression: self.assertDictEqual]"
                ],
                [
                  "test_complex_json",
                  "[PyCallExpression: self.assertRaisesRegex]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_invalid_json",
                  "[]"
                ],
                [
                  "test_non_string_commands",
                  "[]"
                ],
                [
                  "test_valid_json",
                  "[]"
                ],
                [
                  "test_complex_json",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_invalid_json",
                  "false"
                ],
                [
                  "test_non_string_commands",
                  "false"
                ],
                [
                  "test_valid_json",
                  "false"
                ],
                [
                  "test_complex_json",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_invalid_json",
                  "false"
                ],
                [
                  "test_non_string_commands",
                  "false"
                ],
                [
                  "test_valid_json",
                  "false"
                ],
                [
                  "test_complex_json",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_invalid_json",
                  "false"
                ],
                [
                  "test_non_string_commands",
                  "false"
                ],
                [
                  "test_valid_json",
                  "false"
                ],
                [
                  "test_complex_json",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_invalid_json",
                  "false"
                ],
                [
                  "test_non_string_commands",
                  "false"
                ],
                [
                  "test_valid_json",
                  "false"
                ],
                [
                  "test_complex_json",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_invalid_json",
                "false"
              ],
              [
                "test_non_string_commands",
                "false"
              ],
              [
                "test_valid_json",
                "false"
              ],
              [
                "test_complex_json",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_invalid_json",
                "false"
              ],
              [
                "test_non_string_commands",
                "false"
              ],
              [
                "test_valid_json",
                "false"
              ],
              [
                "test_complex_json",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_invalid_json",
                [
                  "self.valid_json",
                  "self.complex_json",
                  "self.non_string_json"
                ]
              ],
              [
                "test_non_string_commands",
                [
                  "self.valid_json",
                  "self.complex_json",
                  "self.invalid_json"
                ]
              ],
              [
                "test_valid_json",
                [
                  "self.complex_json",
                  "self.non_string_json",
                  "self.invalid_json"
                ]
              ],
              [
                "test_complex_json",
                [
                  "self.valid_json",
                  "self.non_string_json",
                  "self.invalid_json"
                ]
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_invalid_json",
                "false"
              ],
              [
                "test_non_string_commands",
                "false"
              ],
              [
                "test_valid_json",
                "false"
              ],
              [
                "test_complex_json",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_invalid_json",
                "false"
              ],
              [
                "test_non_string_commands",
                "false"
              ],
              [
                "test_valid_json",
                "false"
              ],
              [
                "test_complex_json",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_invalid_json",
                  "0"
                ],
                [
                  "test_non_string_commands",
                  "0"
                ],
                [
                  "test_valid_json",
                  "0"
                ],
                [
                  "test_complex_json",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_invalid_json",
                  "0"
                ],
                [
                  "test_non_string_commands",
                  "0"
                ],
                [
                  "test_valid_json",
                  "0"
                ],
                [
                  "test_complex_json",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_invalid_json",
                "false"
              ],
              [
                "test_non_string_commands",
                "false"
              ],
              [
                "test_valid_json",
                "false"
              ],
              [
                "test_complex_json",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_invalid_json",
                "false"
              ],
              [
                "test_non_string_commands",
                "false"
              ],
              [
                "test_valid_json",
                "false"
              ],
              [
                "test_complex_json",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_invalid_json",
                "1"
              ],
              [
                "test_non_string_commands",
                "1"
              ],
              [
                "test_valid_json",
                "1"
              ],
              [
                "test_complex_json",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_invalid_json",
                []
              ],
              [
                "test_non_string_commands",
                []
              ],
              [
                "test_valid_json",
                [
                  "pearunfile"
                ]
              ],
              [
                "test_complex_json",
                []
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_invalid_json",
                [
                  "self.invalid_json"
                ]
              ],
              [
                "test_non_string_commands",
                [
                  "self.non_string_json"
                ]
              ],
              [
                "test_valid_json",
                [
                  "self.valid_json"
                ]
              ],
              [
                "test_complex_json",
                [
                  "self.complex_json"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.7852808696351321,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_non_string_commands",
                  "test_complex_json",
                  0.8289563383053072
                ],
                [
                  "test_non_string_commands",
                  "test_valid_json",
                  0.7082882469748284
                ],
                [
                  "test_complex_json",
                  "test_valid_json",
                  0.7252266687565153
                ],
                [
                  "test_invalid_json",
                  "test_valid_json",
                  0.741249316661101
                ],
                [
                  "test_invalid_json",
                  "test_complex_json",
                  0.8434347122457898
                ],
                [
                  "test_invalid_json",
                  "test_non_string_commands",
                  0.8645299348672512
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_invalid_json",
                "false"
              ],
              [
                "test_non_string_commands",
                "false"
              ],
              [
                "test_valid_json",
                "false"
              ],
              [
                "test_complex_json",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 4
      }
    ]
  },
  {
    "name": "tests_\u0026_test_command_resolution.py",
    "testCases": [
      {
        "name": "CommandResolutionTestCase",
        "detectorResults": [
          {
            "name": "AssertionRoulette",
            "hasSmell": true,
            "detail": {
              "assertionCallsInTests": [
                [
                  "test_known_command",
                  "[PyCallExpression: self.assertEqual, PyCallExpression: self.assertEqual]"
                ],
                [
                  "test_unexisting_command",
                  "[PyCallExpression: self.assertRaisesRegex]"
                ],
                [
                  "test_command_with_args",
                  "[PyCallExpression: self.assertEqual]"
                ]
              ],
              "assertStatementsInTests": [
                [
                  "test_known_command",
                  "[]"
                ],
                [
                  "test_unexisting_command",
                  "[]"
                ],
                [
                  "test_command_with_args",
                  "[]"
                ]
              ]
            }
          },
          {
            "name": "ConditionalTestLogic",
            "hasSmell": false,
            "detail": {
              "testHasConditionalTestLogic": [
                [
                  "test_known_command",
                  "false"
                ],
                [
                  "test_unexisting_command",
                  "false"
                ],
                [
                  "test_command_with_args",
                  "false"
                ]
              ],
              "testHasComprehension": [
                [
                  "test_known_command",
                  "false"
                ],
                [
                  "test_unexisting_command",
                  "false"
                ],
                [
                  "test_command_with_args",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "ConstructorInitialization",
            "hasSmell": false
          },
          {
            "name": "DefaultTest",
            "hasSmell": false
          },
          {
            "name": "DuplicateAssertion",
            "hasSmell": false,
            "detail": {
              "testHasDuplicateAssertCall": [
                [
                  "test_known_command",
                  "false"
                ],
                [
                  "test_unexisting_command",
                  "false"
                ],
                [
                  "test_command_with_args",
                  "false"
                ]
              ],
              "testHasDuplicateAssertStatement": [
                [
                  "test_known_command",
                  "false"
                ],
                [
                  "test_unexisting_command",
                  "false"
                ],
                [
                  "test_command_with_args",
                  "false"
                ]
              ]
            }
          },
          {
            "name": "EmptyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_known_command",
                "false"
              ],
              [
                "test_unexisting_command",
                "false"
              ],
              [
                "test_command_with_args",
                "false"
              ]
            ]
          },
          {
            "name": "ExceptionHandling",
            "hasSmell": false,
            "detail": [
              [
                "test_known_command",
                "false"
              ],
              [
                "test_unexisting_command",
                "false"
              ],
              [
                "test_command_with_args",
                "false"
              ]
            ]
          },
          {
            "name": "GeneralFixture",
            "hasSmell": true,
            "detail": [
              [
                "test_known_command",
                []
              ],
              [
                "test_unexisting_command",
                [
                  "self.commands"
                ]
              ],
              [
                "test_command_with_args",
                []
              ]
            ]
          },
          {
            "name": "IgnoredTest",
            "hasSmell": false,
            "detail": [
              [
                "test_known_command",
                "false"
              ],
              [
                "test_unexisting_command",
                "false"
              ],
              [
                "test_command_with_args",
                "false"
              ]
            ]
          },
          {
            "name": "MagicNumberTest",
            "hasSmell": false,
            "detail": [
              [
                "test_known_command",
                "false"
              ],
              [
                "test_unexisting_command",
                "false"
              ],
              [
                "test_command_with_args",
                "false"
              ]
            ]
          },
          {
            "name": "RedundantAssertion",
            "hasSmell": false,
            "detail": {
              "testMethodHaveRedundantAssertCall": [
                [
                  "test_known_command",
                  "0"
                ],
                [
                  "test_unexisting_command",
                  "0"
                ],
                [
                  "test_command_with_args",
                  "0"
                ]
              ],
              "testMethodHaveRedundantAssertStatement": [
                [
                  "test_known_command",
                  "0"
                ],
                [
                  "test_unexisting_command",
                  "0"
                ],
                [
                  "test_command_with_args",
                  "0"
                ]
              ]
            }
          },
          {
            "name": "RedundantPrint",
            "hasSmell": false,
            "detail": [
              [
                "test_known_command",
                "false"
              ],
              [
                "test_unexisting_command",
                "false"
              ],
              [
                "test_command_with_args",
                "false"
              ]
            ]
          },
          {
            "name": "SleepyTest",
            "hasSmell": false,
            "detail": [
              [
                "test_known_command",
                "false"
              ],
              [
                "test_unexisting_command",
                "false"
              ],
              [
                "test_command_with_args",
                "false"
              ]
            ]
          },
          {
            "name": "UnknownTest",
            "hasSmell": false,
            "detail": [
              [
                "test_known_command",
                "2"
              ],
              [
                "test_unexisting_command",
                "1"
              ],
              [
                "test_command_with_args",
                "1"
              ]
            ]
          },
          {
            "name": "ObscureInLineSetup",
            "hasSmell": false,
            "detail": [
              [
                "test_known_command",
                [
                  "pearunfile",
                  "command_name",
                  "command"
                ]
              ],
              [
                "test_unexisting_command",
                [
                  "pearunfile"
                ]
              ],
              [
                "test_command_with_args",
                [
                  "command_args",
                  "pearunfile",
                  "command_name",
                  "expected_command",
                  "command"
                ]
              ]
            ]
          },
          {
            "name": "TestMaverick",
            "hasSmell": false,
            "detail": [
              [
                "test_known_command",
                [
                  "self.commands_json",
                  "self.commands"
                ]
              ],
              [
                "test_unexisting_command",
                [
                  "self.commands_json"
                ]
              ],
              [
                "test_command_with_args",
                [
                  "self.commands_json",
                  "self.commands"
                ]
              ]
            ]
          },
          {
            "name": "LackCohesion",
            "hasSmell": false,
            "detail": {
              "testClassCohesionScore": 0.6494561824390109,
              "threshold": 0.6,
              "cosineSimilarityScores": [
                [
                  "test_unexisting_command",
                  "test_known_command",
                  0.6784005252999682
                ],
                [
                  "test_known_command",
                  "test_command_with_args",
                  0.7448175288354217
                ],
                [
                  "test_unexisting_command",
                  "test_command_with_args",
                  0.525150493181643
                ]
              ]
            }
          },
          {
            "name": "SuboptimalAssert",
            "hasSmell": false,
            "detail": [
              [
                "test_known_command",
                "false"
              ],
              [
                "test_unexisting_command",
                "false"
              ],
              [
                "test_command_with_args",
                "false"
              ]
            ]
          }
        ],
        "numberOfMethods": 3
      }
    ]
  }
]