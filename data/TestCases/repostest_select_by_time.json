{
    "functionName": "test_select_by_time",
    "className": "TestStorage",
    "fileName": "/YuriyLisovskiy_&_EventReminder/tests_&_unittests_&_storage_&_test_models.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "dt = datetime.now()\nitem_1_expected = 'Some title 1', (dt + timedelta(minutes=30)).date().strftime(\n    EventModel.DATE_FORMAT), (dt + timedelta(minutes=30)).time().strftime(\n    EventModel.TIME_FORMAT), 'Some description 1', 0, 1\nitem_2_expected = 'Some title 2', dt.date().strftime(EventModel.DATE_FORMAT\n    ), dt.time().strftime(EventModel.TIME_FORMAT), 'Some description 2', 1, 0\nself.cursor.execute(\n    'INSERT INTO Events(title, date, time, description, is_past, repeat_weekly) VALUES (?, ?, ?, ?, ?, ?), (?, ?, ?, ?, ?, ?);'\n    , item_1_expected + item_2_expected)\nactual_list = EventModel.select(self.cursor, time=(dt + timedelta(minutes=\n    30)).time())\nself.assertEqual(len(actual_list), 1)\nactual = actual_list[0]\nself.assertEqual(actual.id, 1)\nself.assertEqual(actual.title, item_1_expected[0])\nself.assertEqual(actual.date, datetime.strptime(item_1_expected[1],\n    EventModel.DATE_FORMAT).date())\nself.assertEqual(actual.time, datetime.strptime(item_1_expected[2],\n    EventModel.TIME_FORMAT).time())\nself.assertEqual(actual.description, item_1_expected[3])\nself.assertEqual(actual.is_past, item_1_expected[4])\nself.assertEqual(actual.repeat_weekly, item_1_expected[5])\nactual_list = EventModel.select(self.cursor, time=dt.time())\nself.assertEqual(len(actual_list), 1)\nactual = actual_list[0]\nself.assertEqual(actual.id, 2)\nself.assertEqual(actual.title, item_2_expected[0])\nself.assertEqual(actual.date, datetime.strptime(item_2_expected[1],\n    EventModel.DATE_FORMAT).date())\nself.assertEqual(actual.time, datetime.strptime(item_2_expected[2],\n    EventModel.TIME_FORMAT).time())\nself.assertEqual(actual.description, item_2_expected[3])\nself.assertEqual(actual.is_past, item_2_expected[4])\nself.assertEqual(actual.repeat_weekly, item_2_expected[5])\nself.clean_db()\n"
}