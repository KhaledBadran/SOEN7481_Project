{
    "functionName": "test_lexicon_combo",
    "className": "TestLexicons",
    "fileName": "/apmoore1_&_Bella/tests_&_test_lexicons.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Tests combining two Lexicon classes together. Ensures that words are\n        removed if they have conflicting categories.\n        \"\"\"\nwith self.assertRaises(TypeError, msg=\n    'Should only accept type of Lexicon not lists'):\n    Lexicon.combine_lexicons([('great', 'positive')], [('best', 'positive')])\nfake_lexicon1 = [('happy', 'positive'), ('unfair', 'positive'), ('nothing',\n    'negative')]\nfake_lexicon2 = [('great', 'positive'), ('unfair', 'negative'), ('hate',\n    'negative')]\nfake_lex1 = Lexicon(lexicon=fake_lexicon1, name='fake 1')\nfake_lex2 = Lexicon(lexicon=fake_lexicon2, name='fake 2')\ncombined_fake = Lexicon.combine_lexicons(fake_lex1, fake_lex2)\ncombined_lexicon = set(combined_fake.lexicon)\nvalied_combined = set([('happy', 'positive'), ('great', 'positive'), (\n    'hate', 'negative'), ('nothing', 'negative')])\nself.assertEqual(combined_lexicon, valied_combined, msg=\n    'These should be equal {} {}'.format(combined_lexicon, valied_combined))\nself.assertEqual('fake 1 fake 2', combined_fake.name, msg=\n    'Name of the combined lexicon should be {} not {}'.format(\n    'fake 1 fake 2', combined_fake.name))\nfake_lexicon3 = [('happy', 'negative'), ('great', 'negative'), ('fantastic',\n    'positive')]\nfake_lex3 = Lexicon(lexicon=fake_lexicon3, name='fake 3')\ncombined_fake1 = Lexicon.combine_lexicons(combined_fake, fake_lex3)\ncombined_lexicon1 = set(combined_fake1.lexicon)\nvalid_combined1 = set([('hate', 'negative'), ('nothing', 'negative'), (\n    'fantastic', 'positive')])\nself.assertEqual(combined_lexicon1, valid_combined1, msg=\n    'These should be equal {} {}'.format(combined_lexicon1, valid_combined1))\nself.assertEqual('fake 1 fake 2 fake 3', combined_fake1.name, msg=\n    'Name of the combined lexicon should be {} not {}'.format(\n    'fake 1 fake 2 fake 3', combined_fake1.name))\n"
}