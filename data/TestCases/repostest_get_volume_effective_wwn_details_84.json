{
    "functionName": "test_get_volume_effective_wwn_details_84",
    "className": "CITestProvisioning",
    "fileName": "/MichaelMcAleer_&_PyU4V/PyU4V_&_tests_&_ci_tests_&_test_pyu4v_ci_provisioning.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Test test_get_volume_effective_wwn_details_84.\"\"\"\nvolume_list = self.provisioning.get_volume_list()\nselected_volume_list = list()\nselected_volume_details = None\nfor volume in volume_list:\n    volume_details = self.provisioning.get_volume(volume)\n    if volume_details[constants.HAS_EFFECTIVE_WWN]:\n        selected_volume_list.append(volume)\n        selected_volume_details = volume_details\n        break\nif selected_volume_details is None:\n    self.skipTest(\n        'test_get_volume_effective_wwn_details_84 - could not find a volume with effective wwn flag set to true.'\n        )\ncsv_file_name = 'test.csv'\ntemp_dir = self.create_temp_directory()\ncsv_file_path = os.path.join(temp_dir, csv_file_name)\nself.provisioning.get_vol_effective_wwn_details_84(selected_volume_list,\n    csv_file_path)\nparsed_values = file_handler.read_csv_values(csv_file_path)\nself.assertIsInstance(parsed_values, dict)\nself.assertIn(constants.VOLUME_ID_CAMEL, parsed_values)\nself.assertIn(constants.WWN, parsed_values)\nself.assertIn(constants.HAS_EFFECTIVE_WWN, parsed_values)\nself.assertIn(constants.EFFECTIVE_WWN, parsed_values)\nself.assertIn(constants.STORAGE_GROUP_ID_CAMEL, parsed_values)\nself.assertEqual(selected_volume_details[constants.VOLUME_ID_CAMEL],\n    parsed_values[constants.VOLUME_ID_CAMEL][0])\nself.assertEqual(selected_volume_details[constants.WWN], parsed_values[\n    constants.WWN][0])\nself.assertEqual(str(selected_volume_details[constants.HAS_EFFECTIVE_WWN]),\n    parsed_values[constants.HAS_EFFECTIVE_WWN][0])\nself.assertEqual(selected_volume_details[constants.EFFECTIVE_WWN],\n    parsed_values[constants.EFFECTIVE_WWN][0])\nif constants.STORAGE_GROUP_ID_CAMEL in selected_volume_details:\n    storage_group_reference = selected_volume_details[constants.\n        STORAGE_GROUP_ID_CAMEL]\nelse:\n    storage_group_reference = None\nself.assertEqual(str(storage_group_reference), parsed_values[constants.\n    STORAGE_GROUP_ID_CAMEL][0])\n"
}