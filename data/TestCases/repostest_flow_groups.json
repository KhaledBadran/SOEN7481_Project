{
    "functionName": "test_flow_groups",
    "className": "TestIxnOffline",
    "fileName": "/shmir_&_PyIxNetwork/tests_&_test_offline.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\" Test configuration build with various flow group types.\n\n        todo: refactor with NGPF\n        \"\"\"\nif self._is_linux_server():\n    pytest.skip('server does not support classical protocols')\nnum_ports = 2\nnum_ints = 2\nixn_ports = self._build_config(num_ports, num_ints)\nixn_ti = IxnL23TrafficItem(name='IPv4 TI with two EPs')\nixn_ti.set_attributes(trafficType='ipv4')\nixn_ti_es = IxnObject(parent=ixn_ti, objType='endpointSet')\nsources = [list(ixn_ports.keys())[0].ref]\ndestinations = [list(ixn_ports.keys())[1].ref]\nixn_ti_es.set_attributes(sources=sources, destinations=destinations)\nixn_ti_es = IxnObject(parent=ixn_ti, objType='endpointSet')\nsources = [list(ixn_ports.keys())[1].ref]\ndestinations = [list(ixn_ports.keys())[0].ref]\nixn_ti_es.set_attributes(sources=sources, destinations=destinations)\nixn_ti = IxnL23TrafficItem(name='Raw TI with two EPs')\nixn_ti.set_attributes(trafficType='raw')\nixn_ti_es = IxnObject(parent=ixn_ti, objType='endpointSet')\nixn_ti_es.api.commit()\nsources = [list(ixn_ports.keys())[0].ref + '/protocols']\ndestinations = [list(ixn_ports.keys())[1].ref + '/protocols']\nixn_ti_es.set_attributes(sources=sources, destinations=destinations)\nixn_ti_es.api.commit()\nixn_ti_es = IxnObject(parent=ixn_ti, objType='endpointSet')\nixn_ti_es.api.commit()\nsources = [list(ixn_ports.keys())[1].ref + '/protocols']\ndestinations = [list(ixn_ports.keys())[0].ref + '/protocols']\nixn_ti_es.set_attributes(sources=sources, destinations=destinations)\nixn_ti_es.api.commit()\nixn_tis = self.ixn.root.get_child_static('traffic').get_children('trafficItem')\nassert len(ixn_tis) == 2\nixn_eps = ixn_tis[0].get_children('endpointSet')\nassert len(ixn_eps) == 2\nixn_eps = ixn_tis[1].get_children('endpointSet')\nassert len(ixn_eps) == 2\nself._save_config()\n"
}