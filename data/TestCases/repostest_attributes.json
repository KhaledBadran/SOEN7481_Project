{
    "functionName": "test_attributes",
    "className": "AtomicContributionToModesTest",
    "fileName": "/JaGeo_&_AtomicContributions/AtomicContributions_&_tests_&_test_ContributionsOfAtomsToModes.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "self.assertAlmostEqual(self.Contributions._frequencies[47], 3490.6434922723,\n    places=1)\nself.assertAlmostEqual(abs(self.Contributions._EigFormat[15, 47, 0]), \n    0.00084433323436)\nself.assertAlmostEqual(abs(self.Contributions._EigFormat[15, 47, 1]), \n    0.00084433323436)\nself.assertAlmostEqual(abs(self.Contributions._EigFormat[15, 47, 2]), \n    0.37170414232138)\nself.assertEqual(np.sign(self.Contributions._EigFormat[14, 47, 2]), np.sign\n    (self.Contributions._EigFormat[15, 47, 0]))\nself.assertEqual(np.sign(self.Contributions._EigFormat[14, 47, 2]), np.sign\n    (self.Contributions._EigFormat[15, 47, 1]))\nself.assertEqual(np.sign(self.Contributions._EigFormat[14, 47, 2]), np.sign\n    (self.Contributions._EigFormat[15, 47, 2]))\nself.assertEqual(self.Contributions._IRLabels[-1], 'B2')\nsum_contribution = 0.0\nfor atom in range(0, 16):\n    sum_contribution += self.Contributions._PercentageAtom[47, atom]\nself.assertAlmostEqual(sum_contribution, 1.0)\nself.assertAlmostEqual(self.Contributions2._frequencies[-1], 153.7212069157,\n    places=2)\nself.assertAlmostEqual(self.Contributions_masses._frequencies[47], \n    2598.2875793589, places=1)\nself.assertAlmostEqual(abs(self.Contributions_masses._EigFormat[15, 47, 0]),\n    0.00378948635566)\nself.assertAlmostEqual(abs(self.Contributions_masses._EigFormat[15, 47, 1]),\n    0.00378948635566)\nself.assertAlmostEqual(abs(self.Contributions_masses._EigFormat[15, 47, 2]),\n    0.33223420830758)\nself.assertEqual(np.sign(self.Contributions_masses._EigFormat[14, 47, 2]),\n    np.sign(self.Contributions_masses._EigFormat[15, 47, 0]))\nself.assertEqual(np.sign(self.Contributions_masses._EigFormat[14, 47, 2]),\n    np.sign(self.Contributions_masses._EigFormat[15, 47, 1]))\nself.assertEqual(np.sign(self.Contributions_masses._EigFormat[14, 47, 2]),\n    np.sign(self.Contributions_masses._EigFormat[15, 47, 2]))\nself.assertEqual(self.Contributions._IRLabels[-1], 'B2')\nself.assertAlmostEqual(self.ContributionsFC._frequencies[-1], \n    3741.4132865293, places=1)\n"
}