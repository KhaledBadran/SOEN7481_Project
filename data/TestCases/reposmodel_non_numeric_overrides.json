{
    "functionName": "model_non_numeric_overrides",
    "className": null,
    "fileName": "/PEtab-dev_&_PEtab/tests_&_test_calculate.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"Model with non-numeric overrides.\"\"\"\nmeasurement_df = pd.DataFrame(data={OBSERVABLE_ID: ['obs_a', 'obs_a'],\n    SIMULATION_CONDITION_ID: ['c0', 'c0'], TIME: [5, 10], MEASUREMENT: [0.5,\n    1], NOISE_PARAMETERS: ['7;8', '2;par1']})\nobservable_df = pd.DataFrame(data={OBSERVABLE_ID: ['obs_a'],\n    OBSERVABLE_FORMULA: ['A'], OBSERVABLE_TRANSFORMATION: [LOG],\n    NOISE_FORMULA: [\n    '2*noiseParameter1_obs_a + noiseParameter2_obs_a + par2 + obs_a']}\n    ).set_index([OBSERVABLE_ID])\nparameter_df = pd.DataFrame(data={PARAMETER_ID: ['par1', 'par2'],\n    NOMINAL_VALUE: [3, 4]}).set_index([PARAMETER_ID])\nsimulation_df = measurement_df.copy(deep=True).rename(columns={MEASUREMENT:\n    SIMULATION})\nsimulation_df[SIMULATION] = [2, 3]\nexpected_residuals = {(np.log(2) - np.log(0.5)) / (2 * 7 + 8 + 4 + np.log(2\n    )), (np.log(3) - np.log(1)) / (2 * 2 + 3 + 4 + np.log(3))}\nexpected_residuals_nonorm = {np.log(2) - np.log(0.5), np.log(3) - np.log(1)}\nexpected_llh = -0.5 * (np.array(list(expected_residuals)) ** 2).sum(\n    ) - 0.5 * np.log(2 * np.pi * np.array([2 * 7 + 8 + 4 + np.log(2), 2 * 2 +\n    3 + 4 + np.log(3)]) ** 2 * np.array([0.5, 1]) ** 2).sum()\nreturn measurement_df, observable_df, parameter_df, simulation_df, expected_residuals, expected_residuals_nonorm, expected_llh\n"
}