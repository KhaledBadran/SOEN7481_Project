{
    "functionName": "test_single_element_methods",
    "className": "TestLazySet",
    "fileName": "/AvivYaish_&_LazySet/lazy_set_&_tests_&_test_lazy_set.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n\n        Tests the LazySet by adding and then removing single elements to it.\n\n        \"\"\"\nlazy_set = LazySet()\nregular_set = set()\nTestLazySet.basic_test(lazy_set, regular_set)\nelem1 = 1\nlazy_set.add(elem1)\nregular_set.add(elem1)\nTestLazySet.basic_test(lazy_set, regular_set)\nelem2 = '1'\nlazy_set.add(elem2)\nregular_set.add(elem2)\nTestLazySet.basic_test(lazy_set, regular_set)\nelem3 = None\nlazy_set.add(elem3)\nregular_set.add(elem3)\nTestLazySet.basic_test(lazy_set, regular_set)\nelem4 = float('inf')\nlazy_set.add(elem4)\nregular_set.add(elem4)\nTestLazySet.basic_test(lazy_set, regular_set)\nlazy_set.remove(elem2)\nregular_set.remove(elem2)\nTestLazySet.basic_test(lazy_set, regular_set)\nwith pytest.raises(KeyError) as lazy_excinfo:\n    lazy_set.remove(elem2)\nwith pytest.raises(KeyError) as regular_excinfo:\n    regular_set.remove(elem2)\nassert lazy_excinfo.type == regular_excinfo.type\nassert str(lazy_excinfo.value) == str(regular_excinfo.value)\nTestLazySet.basic_test(lazy_set, regular_set)\nlazy_set.discard(elem2)\nregular_set.discard(elem2)\nTestLazySet.basic_test(lazy_set, regular_set)\nlazy_set.discard(elem1)\nregular_set.discard(elem1)\nTestLazySet.basic_test(lazy_set, regular_set)\nlazy_set.add(elem2)\nregular_set.add(elem2)\nTestLazySet.basic_test(lazy_set, regular_set)\nlazy_set.discard(elem2)\nregular_set.discard(elem2)\nTestLazySet.basic_test(lazy_set, regular_set)\npop_elem = lazy_set.pop()\nregular_set.remove(pop_elem)\nTestLazySet.basic_test(lazy_set, regular_set)\npop_elem = lazy_set.pop()\nregular_set.remove(pop_elem)\nTestLazySet.basic_test(lazy_set, regular_set)\nwith pytest.raises(KeyError) as lazy_excinfo:\n    lazy_set.pop()\nwith pytest.raises(KeyError) as regular_excinfo:\n    regular_set.pop()\nassert lazy_excinfo.type == regular_excinfo.type\n"
}