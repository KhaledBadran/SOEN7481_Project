{
    "functionName": "test_variational_multivariate_prior_KL_full_q",
    "className": null,
    "fileName": "/GPflow_&_GPflow/tests_&_gpflow_&_models_&_test_variational.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "cov_q = MultiDatum.q_sqrt_full @ MultiDatum.q_sqrt_full.T\nmean_prior = np.zeros((MultiDatum.dim, 1))\ncov_prior = np.eye(MultiDatum.dim) if whiten else ref_rbf_kernel(MultiDatum\n    .X, MultiDatum.ls, MultiDatum.signal_var)\nreference_kl = multivariate_prior_KL(MultiDatum.q_mean, cov_q, mean_prior,\n    cov_prior)\nq_sqrt = MultiDatum.q_sqrt_full[(None), :, :]\nmodel = gpflow.models.SVGP(kernel=SquaredExponential(variance=MultiDatum.\n    signal_var, lengthscales=MultiDatum.ls), likelihood=Gaussian(MultiDatum\n    .noise_var), inducing_variable=MultiDatum.Z, num_latent_gps=MultiDatum.\n    num_latent_gps, q_diag=False, whiten=whiten, q_mu=MultiDatum.q_mean,\n    q_sqrt=q_sqrt)\nassert_allclose(model.prior_kl(), reference_kl, atol=4)\npytest.mark.parametrize('whiten', [True, False])"
}