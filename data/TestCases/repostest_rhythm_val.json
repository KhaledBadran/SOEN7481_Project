{
    "functionName": "test_rhythm_val",
    "className": "TestNoteClass",
    "fileName": "/ScottMorse_&_PyMusician/pymusician_&_test_&_test_note.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "pm.Note('C', 4, '0t').rhythm\ndouble_whole = pm.Note('C', 2, '0')\nself.assertEqual(double_whole.rhythm.value, 1024)\nfive_twelth = pm.Note('C', 3, '10')\nself.assertEqual(five_twelth.rhythm.value, 1)\ndot_quarter = pm.Note('D', 5, '3.')\nself.assertEqual(dot_quarter.rhythm.value, 192)\ntrip_quarter = pm.Note('E', 2, '3t')\nself.assertAlmostEqual(trip_quarter.rhythm.value, 85.3333333333333)\nself.assertEqual(pm.Note('A', None, '0').rhythm.value, 1024)\nself.assertEqual(pm.Note('A', None, '1').rhythm.value, 512)\nself.assertEqual(pm.Note('A', None, '2').rhythm.value, 256)\nself.assertEqual(pm.Note('A', None, '3').rhythm.value, 128)\nself.assertEqual(pm.Note('A', None, '4').rhythm.value, 64)\nself.assertEqual(pm.Note('A', None, '5').rhythm.value, 32)\nself.assertEqual(pm.Note('A', None, '6').rhythm.value, 16)\nself.assertEqual(pm.Note('A', None, '7').rhythm.value, 8)\nself.assertEqual(pm.Note('A', None, '8').rhythm.value, 4)\nself.assertEqual(pm.Note('A', None, '9').rhythm.value, 2)\nself.assertEqual(pm.Note('A', None, '10').rhythm.value, 1)\nself.assertEqual(pm.Note('A', None, '0.').rhythm.value, 1536)\nself.assertEqual(pm.Note('A', None, '10.').rhythm.value, 1.5)\nself.assertAlmostEqual(pm.Note('A', None, '10t').rhythm.value, 0.6666666666666)\n"
}