{
    "functionName": "test_write_point_z",
    "className": "TestNcWriter",
    "fileName": "/twhiteaker_&_CFGeom/cfgeom_&_test_&_test_ncgeom_&_test_convert_&_test_netcdf_&_test_nc_writer.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "root = join(self.path_data, 'simplified_examples')\njson_file = join(root, 'point_z.json')\nwith open(json_file) as f:\n    data = f.read()\ncontainer = json_to_container(data)\nfor vlen in [False, True]:\n    tmp_file = self.get_temporary_file_path('foo.nc')\n    container.to_netcdf(tmp_file, use_vlen=vlen)\n    with Dataset(tmp_file) as nc:\n        assert _has_dim(nc, 'instance', 2)\n        assert not _has_dim(nc, 'node')\n        assert not _has_dim(nc, 'part')\n        assert _has_var(nc, 'geometry_container')\n        var = nc.variables['geometry_container']\n        assert _has_attr(var, 'geometry_type', 'point')\n        assert _has_attr(var, 'node_coordinates', 'x y z')\n        assert not _has_attr(var, 'node_count')\n        assert not _has_attr(var, 'part_node_count')\n        assert not _has_attr(var, 'interior_ring')\n        assert not _has_var(nc, 'node_count')\n        assert not _has_var(nc, 'part_node_count')\n        assert not _has_var(nc, 'interior_ring')\n        assert _has_var(nc, 'x', float, [1, 2])\n        assert _has_var(nc, 'y', float, [1, 3])\n        assert _has_var(nc, 'z', float, [np.nan, 50])\n"
}