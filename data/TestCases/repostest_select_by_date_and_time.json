{
    "functionName": "test_select_by_date_and_time",
    "className": "TestStorage",
    "fileName": "/YuriyLisovskiy_&_EventReminder/tests_&_unittests_&_storage_&_test_models.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "dt = datetime.now()\nitem_1_expected = 'Some title 1', dt.date().strftime(EventModel.DATE_FORMAT), (\n    dt + timedelta(minutes=30)).time().strftime(EventModel.TIME_FORMAT\n    ), 'Some description 1', 0, 1\nself.cursor.execute(\n    'INSERT INTO Events(title, date, time, description, is_past, repeat_weekly) VALUES (?, ?, ?, ?, ?, ?);'\n    , item_1_expected)\nactual_list = EventModel.select(self.cursor, date=dt.date(), time=(dt +\n    timedelta(minutes=30)).time())\nself.assertEqual(len(actual_list), 1)\nactual = actual_list[0]\nself.assertEqual(actual.id, 1)\nself.assertEqual(actual.title, item_1_expected[0])\nself.assertEqual(actual.date, datetime.strptime(item_1_expected[1],\n    EventModel.DATE_FORMAT).date())\nself.assertEqual(actual.time, datetime.strptime(item_1_expected[2],\n    EventModel.TIME_FORMAT).time())\nself.assertEqual(actual.description, item_1_expected[3])\nself.assertEqual(actual.is_past, item_1_expected[4])\nself.assertEqual(actual.repeat_weekly, item_1_expected[5])\nself.clean_db()\n"
}