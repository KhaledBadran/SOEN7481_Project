{
    "functionName": "test_automl_early_stopping_callback",
    "className": null,
    "fileName": "/Neuraxio_&_Neuraxle/testing_&_metaopt_&_test_automl.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "hp_repository = InMemoryHyperparamsRepository(cache_folder=str(tmpdir))\nn_epochs = 60\nauto_ml = AutoML(pipeline=Pipeline([FitTransformCallbackStep().set_name(\n    'callback'), MultiplyByN(2).set_hyperparams_space(HyperparameterSpace({\n    'multiply_by': FixedHyperparameter(2)})), NumpyReshape(new_shape=(-1, 1\n    )), linear_model.LinearRegression()]), hyperparams_optimizer=\n    RandomSearchHyperparameterSelectionStrategy(), validation_splitter=\n    ValidationSplitter(0.2), scoring_callback=ScoringCallback(\n    mean_squared_error, higher_score_is_better=False), callbacks=[\n    MetricCallback('mse', metric_function=mean_squared_error,\n    higher_score_is_better=False)], n_trials=1, refit_trial=True, epochs=\n    n_epochs, hyperparams_repository=hp_repository)\ndata_inputs = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\nexpected_outputs = data_inputs * 2\nauto_ml = auto_ml.fit(data_inputs=data_inputs, expected_outputs=\n    expected_outputs)\np = auto_ml.get_best_model()\n"
}