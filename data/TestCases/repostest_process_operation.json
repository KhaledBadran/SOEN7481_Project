{
    "functionName": "test_process_operation",
    "className": "TestKmipEngine",
    "fileName": "/OpenKMIP_&_PyKMIP/kmip_&_tests_&_unit_&_services_&_server_&_test_engine.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Test that the right subroutine is called when invoking operations\n        supported by the server.\n        \"\"\"\ne = engine.KmipEngine()\ne._logger = mock.MagicMock()\ne._process_create = mock.MagicMock()\ne._process_create_key_pair = mock.MagicMock()\ne._process_delete_attribute = mock.MagicMock()\ne._process_derive_key = mock.MagicMock()\ne._process_register = mock.MagicMock()\ne._process_locate = mock.MagicMock()\ne._process_get = mock.MagicMock()\ne._process_get_attributes = mock.MagicMock()\ne._process_get_attribute_list = mock.MagicMock()\ne._process_activate = mock.MagicMock()\ne._process_revoke = mock.MagicMock()\ne._process_destroy = mock.MagicMock()\ne._process_query = mock.MagicMock()\ne._process_discover_versions = mock.MagicMock()\ne._process_encrypt = mock.MagicMock()\ne._process_decrypt = mock.MagicMock()\ne._process_signature_verify = mock.MagicMock()\ne._process_mac = mock.MagicMock()\ne._process_sign = mock.MagicMock()\ne._process_set_attribute = mock.MagicMock()\ne._process_modify_attribute = mock.MagicMock()\ne._process_operation(enums.Operation.CREATE, None)\ne._process_operation(enums.Operation.CREATE_KEY_PAIR, None)\ne._process_operation(enums.Operation.DELETE_ATTRIBUTE, None)\ne._process_operation(enums.Operation.DERIVE_KEY, None)\ne._process_operation(enums.Operation.REGISTER, None)\ne._process_operation(enums.Operation.LOCATE, None)\ne._process_operation(enums.Operation.GET, None)\ne._process_operation(enums.Operation.GET_ATTRIBUTES, None)\ne._process_operation(enums.Operation.GET_ATTRIBUTE_LIST, None)\ne._process_operation(enums.Operation.ACTIVATE, None)\ne._process_operation(enums.Operation.REVOKE, None)\ne._process_operation(enums.Operation.DESTROY, None)\ne._process_operation(enums.Operation.QUERY, None)\ne._process_operation(enums.Operation.DISCOVER_VERSIONS, None)\ne._process_operation(enums.Operation.ENCRYPT, None)\ne._process_operation(enums.Operation.DECRYPT, None)\ne._process_operation(enums.Operation.SIGN, None)\ne._process_operation(enums.Operation.SIGNATURE_VERIFY, None)\ne._process_operation(enums.Operation.MAC, None)\ne._process_operation(enums.Operation.SET_ATTRIBUTE, None)\ne._process_operation(enums.Operation.MODIFY_ATTRIBUTE, None)\ne._process_create.assert_called_with(None)\ne._process_create_key_pair.assert_called_with(None)\ne._process_delete_attribute.assert_called_with(None)\ne._process_derive_key.assert_called_with(None)\ne._process_register.assert_called_with(None)\ne._process_locate.assert_called_with(None)\ne._process_get.assert_called_with(None)\ne._process_get_attributes.assert_called_with(None)\ne._process_get_attribute_list.assert_called_with(None)\ne._process_activate.assert_called_with(None)\ne._process_revoke.assert_called_with(None)\ne._process_destroy.assert_called_with(None)\ne._process_query.assert_called_with(None)\ne._process_discover_versions.assert_called_with(None)\ne._process_encrypt.assert_called_with(None)\ne._process_decrypt.assert_called_with(None)\ne._process_signature_verify.assert_called_with(None)\ne._process_mac.assert_called_with(None)\ne._process_set_attribute.assert_called_with(None)\ne._process_modify_attribute.assert_called_with(None)\n"
}