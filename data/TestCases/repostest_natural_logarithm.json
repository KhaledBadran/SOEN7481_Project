{
    "functionName": "test_natural_logarithm",
    "className": "GenericSourceTermTest",
    "fileName": "/pmeal_&_OpenPNM/tests_&_unit_&_models_&_physics_&_GenericSourceTermTest.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "self.phys['pore.item1'] = 1.6e-15\nself.phys['pore.item2'] = 4\nself.phys['pore.item3'] = 1.4\nself.phys['pore.item4'] = 0.133\nself.phys['pore.item5'] = -5.1e-14\nself.phys.add_model(propname='pore.source1', model=pm.generic_source_term.\n    natural_logarithm, A1='pore.item1', A2='pore.item2', A3='pore.item3',\n    A4='pore.item4', A5='pore.item5', X='pore.mole_fraction', regen_mode=\n    'on_demand')\nself.phys.add_model(propname='pore.source2', model=pm.generic_source_term.\n    natural_logarithm_sym, A1='pore.item1', A2='pore.item2', A3=\n    'pore.item3', A4='pore.item4', A5='pore.item5', X='pore.mole_fraction',\n    regen_mode='normal')\nself.alg = op.algorithms.ReactiveTransport(network=self.net, phase=self.phase)\nself.alg.set_value_BC(values=0.4, pores=self.BC_pores)\nself.alg.set_source(propname='pore.source1', pores=self.source_pores)\nself.alg.settings.update({'conductance': 'throat.diffusive_conductance',\n    'quantity': 'pore.mole_fraction'})\nself.alg.run()\nself.phase.update(self.alg.results())\nself.phys.regenerate_models(propnames='pore.source1')\nself.phys.regenerate_models(propnames='pore.source2')\nX = self.phase['pore.mole_fraction']\nr1 = np.sum(1.6e-15 * np.log(4 * X[self.source_pores] ** 1.4 + 0.133) - 5.1e-14\n    )\nr2 = np.sum(self.phys['pore.source1.rate'][self.source_pores])\nrs = np.sum(self.phys['pore.source1.rate'][self.source_pores])\nassert r1 == r2\nassert r1 == rs\n"
}