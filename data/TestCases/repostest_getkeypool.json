{
    "functionName": "test_getkeypool",
    "className": "TestGetKeypool",
    "fileName": "/bitcoin-core_&_HWI/test_&_test_device.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "non_keypool_desc = self.do_command(self.dev_args + ['getkeypool',\n    '--nokeypool', '0', '20'])\nimport_result = self.wpk_rpc.importmulti(non_keypool_desc)\nself.assertTrue(import_result[0]['success'])\npkh_keypool_desc = self.do_command(self.dev_args + ['getkeypool', '0', '20'])\nimport_result = self.wpk_rpc.importmulti(pkh_keypool_desc)\nself.assertFalse(import_result[0]['success'])\nimport_result = self.wrpc.importmulti(pkh_keypool_desc)\nself.assertTrue(import_result[0]['success'])\nfor i in range(0, 21):\n    addr_info = self.wrpc.getaddressinfo(self.wrpc.getnewaddress())\n    self.assertEqual(addr_info['hdkeypath'], \"m/44'/1'/0'/0/{}\".format(i))\n    addr_info = self.wrpc.getaddressinfo(self.wrpc.getrawchangeaddress())\n    self.assertEqual(addr_info['hdkeypath'], \"m/44'/1'/0'/1/{}\".format(i))\nshwpkh_keypool_desc = self.do_command(self.dev_args + ['getkeypool',\n    '--sh_wpkh', '0', '20'])\nimport_result = self.wrpc.importmulti(shwpkh_keypool_desc)\nself.assertTrue(import_result[0]['success'])\nfor i in range(0, 21):\n    addr_info = self.wrpc.getaddressinfo(self.wrpc.getnewaddress('',\n        'p2sh-segwit'))\n    self.assertEqual(addr_info['hdkeypath'], \"m/49'/1'/0'/0/{}\".format(i))\n    addr_info = self.wrpc.getaddressinfo(self.wrpc.getrawchangeaddress(\n        'p2sh-segwit'))\n    self.assertEqual(addr_info['hdkeypath'], \"m/49'/1'/0'/1/{}\".format(i))\nwpkh_keypool_desc = self.do_command(self.dev_args + ['getkeypool', '--wpkh',\n    '0', '20'])\nimport_result = self.wrpc.importmulti(wpkh_keypool_desc)\nself.assertTrue(import_result[0]['success'])\nfor i in range(0, 21):\n    addr_info = self.wrpc.getaddressinfo(self.wrpc.getnewaddress())\n    self.assertEqual(addr_info['hdkeypath'], \"m/84'/1'/0'/0/{}\".format(i))\n    addr_info = self.wrpc.getaddressinfo(self.wrpc.getrawchangeaddress())\n    self.assertEqual(addr_info['hdkeypath'], \"m/84'/1'/0'/1/{}\".format(i))\nall_keypool_desc = self.do_command(self.dev_args + ['getkeypool', '--all',\n    '0', '20'])\nself.assertEqual(all_keypool_desc, pkh_keypool_desc + wpkh_keypool_desc +\n    shwpkh_keypool_desc)\nkeypool_desc = self.do_command(self.dev_args + ['getkeypool', '--sh_wpkh',\n    '--account', '3', '0', '20'])\nimport_result = self.wrpc.importmulti(keypool_desc)\nself.assertTrue(import_result[0]['success'])\nfor i in range(0, 21):\n    addr_info = self.wrpc.getaddressinfo(self.wrpc.getnewaddress('',\n        'p2sh-segwit'))\n    self.assertEqual(addr_info['hdkeypath'], \"m/49'/1'/3'/0/{}\".format(i))\n    addr_info = self.wrpc.getaddressinfo(self.wrpc.getrawchangeaddress(\n        'p2sh-segwit'))\n    self.assertEqual(addr_info['hdkeypath'], \"m/49'/1'/3'/1/{}\".format(i))\nkeypool_desc = self.do_command(self.dev_args + ['getkeypool', '--wpkh',\n    '--account', '3', '0', '20'])\nimport_result = self.wrpc.importmulti(keypool_desc)\nself.assertTrue(import_result[0]['success'])\nfor i in range(0, 21):\n    addr_info = self.wrpc.getaddressinfo(self.wrpc.getnewaddress())\n    self.assertEqual(addr_info['hdkeypath'], \"m/84'/1'/3'/0/{}\".format(i))\n    addr_info = self.wrpc.getaddressinfo(self.wrpc.getrawchangeaddress())\n    self.assertEqual(addr_info['hdkeypath'], \"m/84'/1'/3'/1/{}\".format(i))\nkeypool_desc = self.do_command(self.dev_args + ['getkeypool', '--path',\n    'm/0h/0h/4h/*', '0', '20'])\nimport_result = self.wrpc.importmulti(keypool_desc)\nself.assertTrue(import_result[0]['success'])\nfor i in range(0, 21):\n    addr_info = self.wrpc.getaddressinfo(self.wrpc.getnewaddress())\n    self.assertEqual(addr_info['hdkeypath'], \"m/0'/0'/4'/{}\".format(i))\nkeypool_desc = self.do_command(self.dev_args + ['getkeypool', '--path',\n    '/0h/0h/4h/*', '0', '20'])\nself.assertEqual(keypool_desc['error'], 'Path must start with m/')\nself.assertEqual(keypool_desc['code'], -7)\nkeypool_desc = self.do_command(self.dev_args + ['getkeypool', '--path',\n    'm/0h/0h/4h/', '0', '20'])\nself.assertEqual(keypool_desc['error'], 'Path must end with /*')\nself.assertEqual(keypool_desc['code'], -7)\n"
}