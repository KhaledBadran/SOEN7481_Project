{
    "functionName": "test_forgot_password_flow",
    "className": "TestCoreClient",
    "fileName": "/mozilla_&_PyFxA/fxa_&_tests_&_test_core.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "acct = TestEmailAccount()\nself.client.create_account(email=acct.email, stretchpwd=\n    DUMMY_STRETCHED_PASSWORD)\nself._accounts_to_delete.append(acct)\npftok = self.client.send_reset_code(acct.email, service='foobar')\nm = acct.wait_for_email(lambda m: 'x-recovery-code' in m['headers'])\nif not m:\n    raise RuntimeError('Password reset email was not received')\nacct.clear()\ncode = m['headers']['x-recovery-code']\ntries = pftok.tries_remaining\nself.assertTrue(tries > 1)\nwith self.assertRaises(Exception):\n    pftok.verify_code(mutate_one_byte(code))\npftok.get_status()\nself.assertEqual(pftok.tries_remaining, tries - 1)\npftok.resend_code()\nm = acct.wait_for_email(lambda m: 'x-recovery-code' in m['headers'])\nif not m:\n    raise RuntimeError('Password reset email was not received')\nself.assertEqual(m['headers']['x-recovery-code'], code)\nartok = pftok.verify_code(code)\nself.client.reset_account(email=acct.email, token=artok, stretchpwd=\n    DUMMY_STRETCHED_PASSWORD)\n"
}