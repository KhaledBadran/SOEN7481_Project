{
    "functionName": "test_uk_specified_drift",
    "className": null,
    "fileName": "/bsmurphy_&_PyKrige/tests_&_test_core.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "data, (gridx, gridy, gridx_2), mask_ref = sample_data_2d\nxg, yg = np.meshgrid(gridx, gridy)\nwell = np.array([[1.1, 1.1, -1.0]])\npoint_log = well[0, 2] * np.log(np.sqrt((xg - well[0, 0]) ** 2.0 + (yg -\n    well[0, 1]) ** 2.0)) * -1.0\nif np.any(np.isinf(point_log)):\n    point_log[np.isinf(point_log)] = -100.0 * well[0, 2] * -1.0\npoint_log_data = well[0, 2] * np.log(np.sqrt((data[:, (0)] - well[0, 0]) **\n    2.0 + (data[:, (1)] - well[0, 1]) ** 2.0)) * -1.0\nif np.any(np.isinf(point_log_data)):\n    point_log_data[np.isinf(point_log_data)] = -100.0 * well[0, 2] * -1.0\nwith pytest.raises(ValueError):\n    UniversalKriging(data[:, (0)], data[:, (1)], data[:, (2)],\n        variogram_model='linear', drift_terms=['specified'])\nwith pytest.raises(TypeError):\n    UniversalKriging(data[:, (0)], data[:, (1)], data[:, (2)],\n        variogram_model='linear', drift_terms=['specified'],\n        specified_drift=data[:, (0)])\nwith pytest.raises(ValueError):\n    UniversalKriging(data[:, (0)], data[:, (1)], data[:, (2)],\n        variogram_model='linear', drift_terms=['specified'],\n        specified_drift=[data[:2, (0)]])\nuk_spec = UniversalKriging(data[:, (0)], data[:, (1)], data[:, (2)],\n    variogram_model='linear', drift_terms=['specified'], specified_drift=[\n    data[:, (0)], data[:, (1)]])\nwith pytest.raises(ValueError):\n    uk_spec.execute('grid', gridx, gridy, specified_drift_arrays=[gridx, gridy]\n        )\nwith pytest.raises(TypeError):\n    uk_spec.execute('grid', gridx, gridy, specified_drift_arrays=gridx)\nwith pytest.raises(ValueError):\n    uk_spec.execute('grid', gridx, gridy, specified_drift_arrays=[xg])\nz_spec, ss_spec = uk_spec.execute('grid', gridx, gridy,\n    specified_drift_arrays=[xg, yg])\nuk_lin = UniversalKriging(data[:, (0)], data[:, (1)], data[:, (2)],\n    variogram_model='linear', drift_terms=['regional_linear'])\nz_lin, ss_lin = uk_lin.execute('grid', gridx, gridy)\nassert_allclose(z_spec, z_lin)\nassert_allclose(ss_spec, ss_lin)\nuk_spec = UniversalKriging(data[:, (0)], data[:, (1)], data[:, (2)],\n    variogram_model='linear', drift_terms=['specified'], specified_drift=[\n    point_log_data])\nz_spec, ss_spec = uk_spec.execute('grid', gridx, gridy,\n    specified_drift_arrays=[point_log])\nuk_lin = UniversalKriging(data[:, (0)], data[:, (1)], data[:, (2)],\n    variogram_model='linear', drift_terms=['point_log'], point_drift=well)\nz_lin, ss_lin = uk_lin.execute('grid', gridx, gridy)\nassert_allclose(z_spec, z_lin)\nassert_allclose(ss_spec, ss_lin)\nuk_spec = UniversalKriging(data[:, (0)], data[:, (1)], data[:, (2)],\n    variogram_model='linear', drift_terms=['specified'], specified_drift=[\n    data[:, (0)], data[:, (1)], point_log_data])\nz_spec, ss_spec = uk_spec.execute('grid', gridx, gridy,\n    specified_drift_arrays=[xg, yg, point_log])\nuk_lin = UniversalKriging(data[:, (0)], data[:, (1)], data[:, (2)],\n    variogram_model='linear', drift_terms=['regional_linear', 'point_log'],\n    point_drift=well)\nz_lin, ss_lin = uk_lin.execute('grid', gridx, gridy)\nassert_allclose(z_spec, z_lin)\nassert_allclose(ss_spec, ss_lin)\n"
}