{
    "functionName": "test_with_comma_decimal_delimiter",
    "className": "ChangeParametersMultipleElementDFTestCase",
    "fileName": "/mzy2240_&_ESA/tests_&_test_saw.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Ensure the method works with a comma decimal delimiter.\n\n        Test motivated by the following issue:\n\n        https://github.com/mzy2240/ESA/issues/61\n\n        Also note the following comments:\n        https://github.com/openjournals/joss-reviews/issues/2289#issuecomment-644265540\n        https://github.com/openjournals/joss-reviews/issues/2289#issuecomment-644371941\n\n        Note that the root of the problem in the aforementioned issues\n        and comment is the _to_numeric method itself, so this is a\n        high-level (and lazy?) way of getting at the problem.\n        \"\"\"\ncols = ['BusNum', 'LoadID', 'LoadMW', 'LoadMVR']\ncommand_df = pd.DataFrame([[13, '1', 13.8, '5.1'], [3, ' 1 ', 94.9, '29.0']\n    ], columns=cols)\nself.assertEqual(command_df['BusNum'].dtype, np.dtype('int64'))\nself.assertEqual(command_df['LoadID'].dtype, np.dtype('object'))\nself.assertEqual(command_df['LoadMW'].dtype, np.dtype('float64'))\nself.assertEqual(command_df['LoadMVR'].dtype, np.dtype('object'))\nwith patch.object(saw_14, 'decimal_delimiter', new=','):\n    with patch.object(saw_14, '_call_simauto', return_value=None):\n        saw_14.change_parameters_multiple_element_df('load', command_df)\n"
}