{
    "functionName": "test__parallel_serial_phase__total_density_within_values__if_not_true_raises_exception",
    "className": "TestPhase",
    "fileName": "/Jammy2211_&_PyAutoCTI/test_&_unit_&_pipeline_&_test_phase.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "phase = ph.ParallelSerialPhase(phase_name='test_phase', optimizer_class=NLO)\nphase.parallel_total_density_range = 1.0, 2.0\nphase.serial_total_density_range = 5.0, 6.0\nanalysis = phase.make_analysis(ci_datas=[ci_data], cti_settings=cti_settings)\nspecies_0 = arctic_params.Species(trap_density=0.75, trap_lifetime=1.0)\nspecies_1 = arctic_params.Species(trap_density=0.75, trap_lifetime=2.0)\nspecies_2 = arctic_params.Species(trap_density=5.5, trap_lifetime=1.0)\nspecies_3 = arctic_params.Species(trap_density=0.1, trap_lifetime=2.0)\ncti_params = arctic_params.ArcticParams(parallel_species=[species_0,\n    species_1], serial_species=[species_2, species_3])\nanalysis.check_total_density_within_range(cti_params=cti_params)\nphase.parallel_total_density_range = 1.0, 2.0\nphase.serial_total_density_range = 5.0, 6.0\nanalysis = phase.make_analysis(ci_datas=[ci_data], cti_settings=cti_settings)\nspecies_0 = arctic_params.Species(trap_density=0.1, trap_lifetime=1.0)\nspecies_1 = arctic_params.Species(trap_density=0.1, trap_lifetime=2.0)\nspecies_2 = arctic_params.Species(trap_density=5.5, trap_lifetime=1.0)\nspecies_3 = arctic_params.Species(trap_density=0.1, trap_lifetime=2.0)\ncti_params = arctic_params.ArcticParams(parallel_species=[species_0,\n    species_1], serial_species=[species_2, species_3])\nwith pytest.raises(exc.PriorException):\n    analysis.check_total_density_within_range(cti_params=cti_params)\nphase.parallel_total_density_range = 1.0, 2.0\nphase.serial_total_density_range = 5.0, 6.0\nanalysis = phase.make_analysis(ci_datas=[ci_data], cti_settings=cti_settings)\nspecies_0 = arctic_params.Species(trap_density=1.0, trap_lifetime=1.0)\nspecies_1 = arctic_params.Species(trap_density=0.5, trap_lifetime=2.0)\nspecies_2 = arctic_params.Species(trap_density=6.0, trap_lifetime=1.0)\nspecies_3 = arctic_params.Species(trap_density=0.1, trap_lifetime=2.0)\ncti_params = arctic_params.ArcticParams(parallel_species=[species_0,\n    species_1], serial_species=[species_2, species_3])\nwith pytest.raises(exc.PriorException):\n    analysis.check_total_density_within_range(cti_params=cti_params)\n"
}