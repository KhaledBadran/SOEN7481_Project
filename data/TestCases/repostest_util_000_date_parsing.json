{
    "functionName": "test_util_000_date_parsing",
    "className": "ACEUtilTestCase",
    "fileName": "/IntegralDefense_&_ACE/lib_&_saq_&_test_util.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "default_format = '2018-10-19 14:06:34 +0000'\nold_default_format = '2018-10-19 14:06:34'\njson_format = '2018-10-19T18:08:08.346118-05:00'\nold_json_format = '2018-10-19T18:08:08.346118'\nsplunk_format = '2015-02-19T09:50:49.000-05:00'\nresult = parse_event_time(default_format)\nself.assertEquals(result.year, 2018)\nself.assertEquals(result.month, 10)\nself.assertEquals(result.day, 19)\nself.assertEquals(result.hour, 14)\nself.assertEquals(result.minute, 6)\nself.assertEquals(result.second, 34)\nself.assertIsNotNone(result.tzinfo)\nself.assertEquals(int(result.tzinfo.utcoffset(None).total_seconds()), 0)\nresult = parse_event_time(old_default_format)\nself.assertEquals(result.year, 2018)\nself.assertEquals(result.month, 10)\nself.assertEquals(result.day, 19)\nself.assertEquals(result.hour, 14)\nself.assertEquals(result.minute, 6)\nself.assertEquals(result.second, 34)\nself.assertIsNotNone(result.tzinfo)\nself.assertEquals(saq.LOCAL_TIMEZONE.tzname, result.tzinfo.tzname)\nresult = parse_event_time(json_format)\nself.assertEquals(result.year, 2018)\nself.assertEquals(result.month, 10)\nself.assertEquals(result.day, 19)\nself.assertEquals(result.hour, 18)\nself.assertEquals(result.minute, 8)\nself.assertEquals(result.second, 8)\nself.assertIsNotNone(result.tzinfo)\nself.assertEquals(int(result.tzinfo.utcoffset(None).total_seconds()), -(5 *\n    60 * 60))\nresult = parse_event_time(old_json_format)\nself.assertEquals(result.year, 2018)\nself.assertEquals(result.month, 10)\nself.assertEquals(result.day, 19)\nself.assertEquals(result.hour, 18)\nself.assertEquals(result.minute, 8)\nself.assertEquals(result.second, 8)\nself.assertIsNotNone(result.tzinfo)\nself.assertEquals(saq.LOCAL_TIMEZONE.tzname, result.tzinfo.tzname)\nresult = parse_event_time(splunk_format)\nself.assertEquals(result.year, 2015)\nself.assertEquals(result.month, 2)\nself.assertEquals(result.day, 19)\nself.assertEquals(result.hour, 9)\nself.assertEquals(result.minute, 50)\nself.assertEquals(result.second, 49)\nself.assertIsNotNone(result.tzinfo)\nself.assertEquals(int(result.tzinfo.utcoffset(None).total_seconds()), -(5 *\n    60 * 60))\n"
}