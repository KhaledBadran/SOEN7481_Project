{
    "functionName": "test_pipeline_nested_mutate_inverse_transform",
    "className": null,
    "fileName": "/Neuraxio_&_Neuraxle/testing_&_test_pipeline.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "expected_tape = ['1', '2', '3', '4', '5', '6', '7', '7', '6', '5', '4', '3',\n    '2', '1']\ntape = TapeCallbackFunction()\np = Pipeline([Identity(), TransformCallbackStep(tape.callback, ['1']),\n    TransformCallbackStep(tape.callback, ['2']), Pipeline([Identity(),\n    TransformCallbackStep(tape.callback, ['3']), TransformCallbackStep(tape\n    .callback, ['4']), TransformCallbackStep(tape.callback, ['5']),\n    Identity()]), TransformCallbackStep(tape.callback, ['6']),\n    TransformCallbackStep(tape.callback, ['7']), Identity()])\np, _ = p.fit_transform(np.ones((1, 1)))\nprint('[mutating]')\np = p.mutate(new_method='inverse_transform', method_to_assign_to='transform')\np.transform(np.ones((1, 1)))\nprint(expected_tape)\nprint(tape.get_name_tape())\nassert expected_tape == tape.get_name_tape()\n"
}