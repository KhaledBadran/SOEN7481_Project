{
    "functionName": "test_mac_with_cryptographic_failure",
    "className": "TestCryptographyEngine",
    "fileName": "/OpenKMIP_&_PyKMIP/kmip_&_tests_&_unit_&_services_&_server_&_crypto_&_test_engine.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Test that an CryptographicFailure error is raised when the MAC\n        process fails.\n        \"\"\"\nclass DummyHashAlgorithm(object):\n\n    def __init__(self):\n        raise Exception()\nkey = b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\ndata = b'\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x0c\\r\\x0e\\x0f'\nengine = crypto.CryptographyEngine()\nargs = [enums.CryptographicAlgorithm.IDEA, key, data]\nself.assertRaises(exceptions.CryptographicFailure, engine.mac, *args)\nengine._hash_algorithms.update([(enums.CryptographicAlgorithm.HMAC_SHA256,\n    DummyHashAlgorithm)])\nargs = [enums.CryptographicAlgorithm.HMAC_SHA256, key, data]\nself.assertRaises(exceptions.CryptographicFailure, engine.mac, *args)\n"
}