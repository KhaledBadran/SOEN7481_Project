{
    "functionName": "test_syncThreeObjectsLeaderFail",
    "className": null,
    "fileName": "/bakwc_&_PySyncObj/test_syncobj.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "random.seed(12)\na = [getNextAddr(), getNextAddr(), getNextAddr()]\nstates = defaultdict(list)\no1 = TestObj(a[0], [a[1], a[2]], testBindAddr=True, onStateChanged=lambda\n    old, new: states[a[0]].append(new))\no2 = TestObj(a[1], [a[2], a[0]], testBindAddr=True, onStateChanged=lambda\n    old, new: states[a[1]].append(new))\no3 = TestObj(a[2], [a[0], a[1]], testBindAddr=True, onStateChanged=lambda\n    old, new: states[a[2]].append(new))\nobjs = [o1, o2, o3]\nassert not o1._isReady()\nassert not o2._isReady()\nassert not o3._isReady()\ndoTicks(objs, 10.0, stopFunc=lambda : o1._isReady() and o2._isReady() and\n    o3._isReady())\nassert o1._isReady()\nassert o2._isReady()\nassert o3._isReady()\nassert o1._getLeader().address in a\nassert o1._getLeader() == o2._getLeader()\nassert o1._getLeader() == o3._getLeader()\nassert _RAFT_STATE.LEADER in states[o1._getLeader().address]\no1.addValue(150)\no2.addValue(200)\ndoTicks(objs, 10.0, stopFunc=lambda : o3.getCounter() == 350)\nassert o3.getCounter() == 350\nprevLeader = o1._getLeader()\nnewObjs = [o for o in objs if o._SyncObj__selfNode != prevLeader]\nassert len(newObjs) == 2\ndoTicks(newObjs, 10.0, stopFunc=lambda : newObjs[0]._getLeader() !=\n    prevLeader and newObjs[0]._getLeader() is not None and newObjs[0].\n    _getLeader().address in a and newObjs[0]._getLeader() == newObjs[1].\n    _getLeader())\nassert newObjs[0]._getLeader() != prevLeader\nassert newObjs[0]._getLeader().address in a\nassert newObjs[0]._getLeader() == newObjs[1]._getLeader()\nassert _RAFT_STATE.LEADER in states[newObjs[0]._getLeader().address]\nnewObjs[1].addValue(50)\ndoTicks(newObjs, 10, stopFunc=lambda : newObjs[0].getCounter() == 400)\nassert newObjs[0].getCounter() == 400\ndoTicks(objs, 10.0, stopFunc=lambda : sum([int(o.getCounter() == 400) for o in\n    objs]) == len(objs))\nfor o in objs:\n    assert o.getCounter() == 400\no1._destroy()\no2._destroy()\no3._destroy()\n"
}