{
    "functionName": "test_file_analysis_003_xml_000_rels",
    "className": "TestCase",
    "fileName": "/IntegralDefense_&_ACE/lib_&_saq_&_modules_&_test_file_analysis.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "root = create_root_analysis(uuid=str(uuid.uuid4()))\nroot.initialize_storage()\nshutil.copy('test_data/docx/xml_rel.docx', root.storage_dir)\n_file = root.add_observable(F_FILE, 'xml_rel.docx')\nroot.save()\nroot.schedule()\nengine = TestEngine()\nengine.enable_module('analysis_module_archive', 'test_groups')\nengine.enable_module('analysis_module_file_type', 'test_groups')\nengine.enable_module('analysis_module_office_xml_rel', 'test_groups')\nengine.controlled_stop()\nengine.start()\nengine.wait()\nroot.load()\n_file = root.get_observable(_file.id)\nfrom saq.modules.file_analysis import ArchiveAnalysis\nanalysis = _file.get_analysis(ArchiveAnalysis)\nself.assertTrue(analysis)\nrel_file = None\nfor sub_file in analysis.get_observables_by_type(F_FILE):\n    if os.path.basename(sub_file.value) == 'document.xml.rels':\n        rel_file = sub_file\n        break\nself.assertIsNotNone(rel_file)\nfrom saq.modules.file_analysis import OfficeXMLRelationshipExternalURLAnalysis\nanalysis = rel_file.get_analysis(OfficeXMLRelationshipExternalURLAnalysis)\nself.assertTrue(analysis)\nurl = analysis.get_observables_by_type(F_URL)\nself.assertEquals(len(url), 1)\n"
}