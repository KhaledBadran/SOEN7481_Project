{
    "functionName": "test_read_missing_public_key_template_attribute",
    "className": "TestCreateKeyPairResponsePayload",
    "fileName": "/OpenKMIP_&_PyKMIP/kmip_&_tests_&_unit_&_core_&_messages_&_payloads_&_test_create_key_pair.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Test that a CreateKeyPair response payload can be read from a data\n        stream event when missing the public key template attribute.\n        \"\"\"\npayload = payloads.CreateKeyPairResponsePayload()\nself.assertIsNone(payload.private_key_unique_identifier)\nself.assertIsNone(payload.public_key_unique_identifier)\nself.assertIsNone(payload.private_key_template_attribute)\nself.assertIsNone(payload.public_key_template_attribute)\npayload.read(self.no_public_key_template_attribute_encoding)\nself.assertEqual('7f7ee394-40f9-444c-818c-fb1ae57bdf15', payload.\n    private_key_unique_identifier)\nself.assertEqual('79c0eb55-d020-43de-b72f-5e18c862647c', payload.\n    public_key_unique_identifier)\nself.assertEqual(objects.TemplateAttribute(attributes=[objects.Attribute(\n    attribute_name=objects.Attribute.AttributeName('State'),\n    attribute_value=primitives.Enumeration(enums.State, value=enums.State.\n    PRE_ACTIVE, tag=enums.Tags.STATE))], tag=enums.Tags.\n    PRIVATE_KEY_TEMPLATE_ATTRIBUTE), payload.private_key_template_attribute)\nself.assertIsNone(payload.public_key_template_attribute)\n"
}