{
    "functionName": "_t_normals",
    "className": "DelaunayGeometry",
    "fileName": "/pmeal_&_OpenPNM/openpnm_&_materials_&_VoronoiFibers.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"\n        Update the throat normals from the voronoi vertices\n        \"\"\"\nverts = self['throat.vertices']\nvalue = np.zeros([len(verts), 3])\nfor i in range(len(verts)):\n    if len(np.unique(verts[i][:, (0)])) == 1:\n        verts_2d = np.vstack((verts[i][:, (1)], verts[i][:, (2)])).T\n    elif len(np.unique(verts[i][:, (1)])) == 1:\n        verts_2d = np.vstack((verts[i][:, (0)], verts[i][:, (2)])).T\n    else:\n        verts_2d = np.vstack((verts[i][:, (0)], verts[i][:, (1)])).T\n    hull = sptl.ConvexHull(verts_2d, qhull_options='QJ Pp')\n    sorted_verts = verts[i][hull.vertices].astype(float)\n    v1 = sorted_verts[-1] - sorted_verts[0]\n    v2 = sorted_verts[1] - sorted_verts[0]\n    value[i] = tr.unit_vector(np.cross(v1, v2))\nreturn value\n"
}