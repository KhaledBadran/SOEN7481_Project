{
    "functionName": "test_Constraints_validate_sample",
    "className": null,
    "fileName": "/bytesandbrains_&_ProcessOptimizer/ProcessOptimizer_&_tests_&_test_constraints.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "space = Space([Real(1, 10), Real(1, 10), Real(1, 10), Integer(0, 10),\n    Integer(0, 10), Integer(0, 10), Categorical(list('abcdefg')),\n    Categorical(list('abcdefg')), Categorical(list('abcdefg'))])\ncons_list = [Single(0, 5.0, 'real')]\ncons = Constraints(cons_list, space)\nsample = [0] * space.n_dims\nsample[0] = 5.0\nassert_true(cons.validate_sample(sample))\nsample[0] = 5.00001\nassert_false(cons.validate_sample(sample))\nsample[0] = 4.99999\nassert_false(cons.validate_sample(sample))\ncons_list = [Single(3, 5, 'integer')]\ncons = Constraints(cons_list, space)\nsample = [0] * space.n_dims\nsample[3] = 5\nassert_true(cons.validate_sample(sample))\nsample[3] = 6\nassert_false(cons.validate_sample(sample))\nsample[3] = -5\nassert_false(cons.validate_sample(sample))\nsample[3] = 5.000001\nassert_false(cons.validate_sample(sample))\ncons_list = [Single(6, 'a', 'categorical')]\ncons = Constraints(cons_list, space)\nsample = [0] * space.n_dims\nsample[6] = 'a'\nassert_true(cons.validate_sample(sample))\nsample[6] = 'b'\nassert_false(cons.validate_sample(sample))\nsample[6] = -5\nassert_false(cons.validate_sample(sample))\nsample[6] = 5.000001\nassert_false(cons.validate_sample(sample))\ncons_list = [Inclusive(0, (5.0, 7.0), 'real')]\ncons = Constraints(cons_list, space)\nsample = [0] * space.n_dims\nsample[0] = 5.0\nassert_true(cons.validate_sample(sample))\nsample[0] = 7.0\nassert_true(cons.validate_sample(sample))\nsample[0] = 7.00001\nassert_false(cons.validate_sample(sample))\nsample[0] = 4.99999\nassert_false(cons.validate_sample(sample))\nsample[0] = -10\nassert_false(cons.validate_sample(sample))\ncons_list = [Inclusive(3, (5, 7), 'integer')]\ncons = Constraints(cons_list, space)\nsample = [0] * space.n_dims\nsample[3] = 5\nassert_true(cons.validate_sample(sample))\nsample[3] = 6\nassert_true(cons.validate_sample(sample))\nsample[3] = 7\nassert_true(cons.validate_sample(sample))\nsample[3] = 8\nassert_false(cons.validate_sample(sample))\nsample[3] = 4\nassert_false(cons.validate_sample(sample))\nsample[3] = -4\nassert_false(cons.validate_sample(sample))\ncons_list = [Inclusive(6, ('c', 'd', 'e'), 'categorical')]\ncons = Constraints(cons_list, space)\nsample = [0] * space.n_dims\nsample[6] = 'c'\nassert_true(cons.validate_sample(sample))\nsample[6] = 'e'\nassert_true(cons.validate_sample(sample))\nsample[6] = 'f'\nassert_false(cons.validate_sample(sample))\nsample[6] = -5\nassert_false(cons.validate_sample(sample))\nsample[6] = 3.3\nassert_false(cons.validate_sample(sample))\nsample[6] = 'a'\nassert_false(cons.validate_sample(sample))\ncons_list = [Exclusive(0, (5.0, 7.0), 'real')]\ncons = Constraints(cons_list, space)\nsample = [0] * space.n_dims\nsample[0] = 5.0\nassert_false(cons.validate_sample(sample))\nsample[0] = 7.0\nassert_false(cons.validate_sample(sample))\nsample[0] = 7.00001\nassert_true(cons.validate_sample(sample))\nsample[0] = 4.99999\nassert_true(cons.validate_sample(sample))\nsample[0] = -10\nassert_true(cons.validate_sample(sample))\ncons_list = [Exclusive(3, (5, 7), 'integer')]\ncons = Constraints(cons_list, space)\nsample = [0] * space.n_dims\nsample[3] = 5\nassert_false(cons.validate_sample(sample))\nsample[3] = 6\nassert_false(cons.validate_sample(sample))\nsample[3] = 7\nassert_false(cons.validate_sample(sample))\nsample[3] = 8\nassert_true(cons.validate_sample(sample))\nsample[3] = 4\nassert_true(cons.validate_sample(sample))\nsample[3] = -4\nassert_true(cons.validate_sample(sample))\ncons_list = [Exclusive(3, (5, 5), 'integer')]\ncons = Constraints(cons_list, space)\nsample = [0] * space.n_dims\nsample[3] = 5\nassert_false(cons.validate_sample(sample))\ncons_list = [Exclusive(6, ('c', 'd', 'e'), 'categorical')]\ncons = Constraints(cons_list, space)\nsample = [0] * space.n_dims\nsample[6] = 'c'\nassert_false(cons.validate_sample(sample))\nsample[6] = 'e'\nassert_false(cons.validate_sample(sample))\nsample[6] = 'f'\nassert_true(cons.validate_sample(sample))\nsample[6] = -5\nassert_true(cons.validate_sample(sample))\nsample[6] = 3.3\nassert_true(cons.validate_sample(sample))\nsample[6] = 'a'\nassert_true(cons.validate_sample(sample))\ncons_list = [Inclusive(0, (1.0, 2.0), 'real'), Inclusive(0, (3.0, 4.0),\n    'real'), Inclusive(0, (5.0, 6.0), 'real')]\ncons = Constraints(cons_list, space)\nsample = [0] * space.n_dims\nsample[0] = 1.3\nassert_true(cons.validate_sample(sample))\nsample[0] = 6.0\nassert_true(cons.validate_sample(sample))\nsample[0] = 5.0\nassert_true(cons.validate_sample(sample))\nsample[0] = 3.0\nassert_true(cons.validate_sample(sample))\nsample[0] = 4.0\nassert_true(cons.validate_sample(sample))\nsample[0] = 5.5\nassert_true(cons.validate_sample(sample))\nsample[0] = 2.1\nassert_false(cons.validate_sample(sample))\nsample[0] = 4.9\nassert_false(cons.validate_sample(sample))\nsample[0] = 7.0\nassert_false(cons.validate_sample(sample))\ncons_list = [Exclusive(0, (1.0, 2.0), 'real'), Exclusive(0, (3.0, 4.0),\n    'real'), Exclusive(0, (5.0, 6.0), 'real')]\ncons = Constraints(cons_list, space)\nsample = [0] * space.n_dims\nsample[0] = 1.3\nassert_false(cons.validate_sample(sample))\nsample[0] = 6.0\nassert_false(cons.validate_sample(sample))\nsample[0] = 5.0\nassert_false(cons.validate_sample(sample))\nsample[0] = 3.0\nassert_false(cons.validate_sample(sample))\nsample[0] = 4.0\nassert_false(cons.validate_sample(sample))\nsample[0] = 5.5\nassert_false(cons.validate_sample(sample))\nsample[0] = 2.1\nassert_true(cons.validate_sample(sample))\nsample[0] = 4.9\nassert_true(cons.validate_sample(sample))\nsample[0] = 7.0\nassert_true(cons.validate_sample(sample))\npytest.mark.fast_test"
}