{
    "functionName": "test_equal_on_not_equal_secrets",
    "className": "TestGetResponsePayload",
    "fileName": "/OpenKMIP_&_PyKMIP/kmip_&_tests_&_unit_&_core_&_messages_&_payloads_&_test_get.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Test that the equality operator returns False when comparing two\n        GetResponsePayload structs with different secret fields.\n        \"\"\"\na = payloads.GetResponsePayload(secret=secrets.SymmetricKey(key_block=\n    objects.KeyBlock(key_format_type=misc.KeyFormatType(enums.KeyFormatType\n    .RAW), key_value=objects.KeyValue(key_material=objects.KeyMaterial(\n    b'sgW\\x80Q\\x01*m\\x13J\\x85^%\\xc8\\xcd^L\\xa11EW)\\xd3\\xc8')),\n    cryptographic_algorithm=attributes.CryptographicAlgorithm(enums.\n    CryptographicAlgorithm.TRIPLE_DES), cryptographic_length=attributes.\n    CryptographicLength(168))))\nb = payloads.GetResponsePayload(secret=secrets.SymmetricKey(key_block=\n    objects.KeyBlock(key_format_type=misc.KeyFormatType(enums.KeyFormatType\n    .RAW), key_value=objects.KeyValue(key_material=objects.KeyMaterial(\n    b'sgW\\x80Q\\x01*m\\x13J\\x85^%\\xc8\\xcd^L\\xa11EW)\\xd3\\xc8')),\n    cryptographic_algorithm=attributes.CryptographicAlgorithm(enums.\n    CryptographicAlgorithm.TRIPLE_DES), cryptographic_length=attributes.\n    CryptographicLength(168))))\nself.assertFalse(a == b)\nself.assertFalse(b == a)\n"
}