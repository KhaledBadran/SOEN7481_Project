{
    "functionName": "test_shock_tube_setup_case",
    "className": "TestSimulation",
    "fileName": "/kyleniemeyer_&_PyTeCK/pyteck_&_tests_&_test_simulation.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Test that shock tube cases are set up properly.\n        \"\"\"\nfile_path = os.path.join('testfile_st.yaml')\nfilename = pkg_resources.resource_filename(__name__, file_path)\nproperties = ChemKED(filename, skip_validation=True)\nsimulations = create_simulations(filename, properties)\nassert len(simulations) == 5\nmechanism_filename = 'gri30.xml'\nSPEC_KEY = {'H2': 'H2', 'O2': 'O2', 'N2': 'N2', 'Ar': 'AR'}\ngas = ct.Solution(mechanism_filename)\nsim = simulations[0]\nsim.setup_case(mechanism_filename, SPEC_KEY)\ninit_pressure = 220.0 * units.kilopascal\nassert sim.apparatus == 'shock tube'\nassert np.allclose(sim.time_end, 0.047154)\nassert np.allclose(sim.gas.T, 1164.48)\nassert np.allclose(sim.gas.P, init_pressure.to('pascal').magnitude)\nmass_fracs = np.zeros(sim.gas.n_species)\nmass_fracs[sim.gas.species_index(SPEC_KEY['H2'])] = 0.00444\nmass_fracs[sim.gas.species_index(SPEC_KEY['O2'])] = 0.00556\nmass_fracs[sim.gas.species_index(SPEC_KEY['Ar'])] = 0.99\nassert np.allclose(sim.gas.X, mass_fracs)\ntimes = np.linspace(0.0, sim.time_end, 100)\nfor time in times:\n    assert np.allclose(sim.reac.walls[0].vdot(time), 0.0)\nassert sim.n_vars == gas.n_species + 3\nassert sim.properties.ignition_target == 'pressure'\nassert sim.properties.ignition_type == 'd/dt max'\nsim = simulations[1]\nsim.setup_case(mechanism_filename, SPEC_KEY)\nassert sim.apparatus == 'shock tube'\nassert np.allclose(sim.time_end, 0.044803)\nassert np.allclose(sim.gas.T, 1164.97)\nassert np.allclose(sim.gas.P, init_pressure.to('pascal').magnitude)\nmass_fracs = np.zeros(sim.gas.n_species)\nmass_fracs[sim.gas.species_index(SPEC_KEY['H2'])] = 0.00444\nmass_fracs[sim.gas.species_index(SPEC_KEY['O2'])] = 0.00556\nmass_fracs[sim.gas.species_index(SPEC_KEY['Ar'])] = 0.99\nassert np.allclose(sim.gas.X, mass_fracs)\ntimes = np.linspace(0.0, sim.time_end, 100)\nfor time in times:\n    assert np.allclose(sim.reac.walls[0].vdot(time), 0.0)\nassert sim.n_vars == gas.n_species + 3\nassert sim.properties.ignition_target == 'pressure'\nassert sim.properties.ignition_type == 'd/dt max'\n"
}