{
    "functionName": "test_send",
    "className": null,
    "fileName": "/VICSES_&_Python-Viper/tests_&_test_viper.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "ses_login_resp = Response()\nses_login_resp.status_code = 302\nses_login_resp.headers['Location'] = '/_yfniecqqxbdycgmvb_form?Lw=='\nviper_login_resp = Response()\nviper_login_resp.status_code = 302\nviper_login_resp.headers['Location'\n    ] = 'https://viper.ses.vic.gov.au/ViperWeb/login.jsp'\nsuccess_resp = Response()\nsuccess_resp.status_code = 200\nsuccess_resp._content = b'<td>Message Accepted</td>'\nbasic_resp = Response()\nbasic_resp.status_code = 200\nsend_url = 'https://viper.ses.vic.gov.au/ViperWeb/msg/sendMessage.do'\nses_login_url = 'https://viper.ses.vic.gov.au/_yfniecqqxbdycgmvb_login'\nviper_login_url = 'https://viper.ses.vic.gov.au/ViperWeb/login.do'\nresponses = []\ndef send_handler(request):\n    if request.path_url == '/ViperWeb/msg/sendMessage.do':\n        try:\n            return responses.pop(0)\n        except IndexError:\n            resp = Response\n            resp.status_code = 200\n            return resp\n    else:\n        return None\nadapter = requests_mock.Adapter()\nadapter.register_uri('POST', 'https://viper.ses.vic.gov.au/ViperWeb/login.do')\nadapter.register_uri('POST',\n    'https://viper.ses.vic.gov.au/_yfniecqqxbdycgmvb_login')\nadapter.add_matcher(send_handler)\nt1 = Viper(ses_id='23', ses_password='alphabet')\nresponses = [ses_login_resp, viper_login_resp, success_resp]\nwith requests_mock.mock() as m1:\n    m1._adapter = adapter\n    err1 = t1.send('111', 't1 send')\nassert err1 is False\nassert m1.request_history.pop(0).url == send_url\nassert m1.request_history.pop(0).url == ses_login_url\nassert m1.request_history.pop(0).url == send_url\nassert m1.request_history.pop(0).url == viper_login_url\nassert m1.request_history.pop(0).url == send_url\nassert len(m1.request_history) == 0\nassert len(responses) == 0\nt2 = Viper(ses_id='23', ses_password='alphabet')\nresponses = [success_resp]\nwith requests_mock.mock() as m2:\n    m2._adapter = adapter\n    err2 = t2.send('111', 't1 send')\nassert err2 is False\nassert m2.request_history.pop(0).url == send_url\nassert len(m1.request_history) == 0\nassert len(responses) == 0\nt3 = Viper(ses_id='23', ses_password='alphabet')\nresponses = [ses_login_resp, ses_login_resp, ses_login_resp, ses_login_resp,\n    ses_login_resp]\nwith requests_mock.mock() as m3:\n    m3._adapter = adapter\n    err3 = t3.send('111', 't1 send')\nassert err3 == 'SES Login'\nassert m3.request_history.pop(0).url == send_url\nassert m3.request_history.pop(0).url == ses_login_url\nassert m3.request_history.pop(0).url == send_url\nassert m3.request_history.pop(0).url == ses_login_url\nassert m3.request_history.pop(0).url == send_url\nassert m3.request_history.pop(0).url == ses_login_url\nassert m3.request_history.pop(0).url == send_url\nassert m3.request_history.pop(0).url == ses_login_url\nassert m3.request_history.pop(0).url == send_url\nassert m3.request_history.pop(0).url == ses_login_url\nassert len(m1.request_history) == 0\nassert len(responses) == 0\nt4 = Viper(ses_id='23', ses_password='alphabet')\nresponses = [ses_login_resp, viper_login_resp, viper_login_resp,\n    viper_login_resp, viper_login_resp]\nwith requests_mock.mock() as m4:\n    m4._adapter = adapter\n    err4 = t4.send('111', 't1 send')\nassert err4 == 'Viper Login'\nassert m3.request_history.pop(0).url == send_url\nassert m3.request_history.pop(0).url == ses_login_url\nassert m3.request_history.pop(0).url == send_url\nassert m3.request_history.pop(0).url == viper_login_url\nassert m3.request_history.pop(0).url == send_url\nassert m3.request_history.pop(0).url == viper_login_url\nassert m3.request_history.pop(0).url == send_url\nassert m3.request_history.pop(0).url == viper_login_url\nassert m3.request_history.pop(0).url == send_url\nassert m3.request_history.pop(0).url == viper_login_url\nassert len(m1.request_history) == 0\nassert len(responses) == 0\nt5 = Viper(ses_id='25', ses_password='alphabet')\nresponses = [basic_resp, basic_resp, basic_resp, basic_resp, basic_resp]\nwith requests_mock.mock() as m5:\n    m5._adapter = adapter\n    err5 = t5.send('111', 't1 send')\nassert err5 == 'Unknown response'\nassert m5.request_history.pop(0).url == send_url\nassert m5.request_history.pop(0).url == send_url\nassert m5.request_history.pop(0).url == send_url\nassert m5.request_history.pop(0).url == send_url\nassert m5.request_history.pop(0).url == send_url\nassert len(m1.request_history) == 0\nassert len(responses) == 0\nt6 = Viper(ses_id='23', ses_password='alphabet')\nresponses = [viper_login_resp, basic_resp, ses_login_resp, viper_login_resp,\n    success_resp]\nwith requests_mock.mock() as m6:\n    m6._adapter = adapter\n    err6 = t6.send('111', 't1 send')\nassert err6 is False\nassert m3.request_history.pop(0).url == send_url\nassert m3.request_history.pop(0).url == viper_login_url\nassert m3.request_history.pop(0).url == send_url\nassert m3.request_history.pop(0).url == send_url\nassert m3.request_history.pop(0).url == ses_login_url\nassert m3.request_history.pop(0).url == send_url\nassert m3.request_history.pop(0).url == viper_login_url\nassert m3.request_history.pop(0).url == send_url\nassert len(m1.request_history) == 0\nassert len(responses) == 0\n"
}