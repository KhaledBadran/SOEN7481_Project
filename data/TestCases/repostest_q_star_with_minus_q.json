{
    "functionName": "test_q_star_with_minus_q",
    "className": "TestStructureMethods",
    "fileName": "/mesonepigreco_&_CellConstructor/scripts_&_cellconstructor_test.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        This subroutine tests the interpolation in a supercell \n        where there is a q point so that\n        q != -q + G\n\n        In which there is no inversion symmetry (so -q is not in the star)\n        Then we try to both recover the correct q star, symmetrize and\n        check the symmetrization in the supercell\n        \"\"\"\ndyn = CC.Phonons.Phonons(self.struct_ice)\nfc_random = np.complex128(np.random.uniform(size=(3 * self.struct_ice.\n    N_atoms, 3 * self.struct_ice.N_atoms)))\nfc_random += fc_random.T\ndyn.dynmats = [fc_random]\ndyn.q_tot = [np.array([0, 0, 0])]\ndyn.q_stars = [[np.array([0, 0, 0])]]\nSUPERCELL = 1, 1, 3\nnew_dyn = dyn.Interpolate((1, 1, 1), SUPERCELL)\nnew_dyn.Symmetrize()\nsuper_dyn = new_dyn.GenerateSupercellDyn(new_dyn.GetSupercell())\nfc1 = super_dyn.dynmats[0].copy()\nnew_dyn.SymmetrizeSupercell()\nsuper_dyn = new_dyn.GenerateSupercellDyn(new_dyn.GetSupercell())\nfc2 = super_dyn.dynmats[0].copy()\nself.assertTrue(np.sqrt(np.sum((fc1 - fc2) ** 2)) < 1e-06)\n"
}