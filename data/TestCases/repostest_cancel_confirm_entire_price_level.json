{
    "functionName": "test_cancel_confirm_entire_price_level",
    "className": null,
    "fileName": "/nabicht_&_Buttonwood/tests_&_test_MarketObjects_&_test_Orderbooks_&_test_orderlevelbook.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "ob = build_base_order_book()\na = NewOrderCommand(56, 1234002.123, 1009, 'user_x', MARKET, ASK_SIDE, FAR,\n    Price('34.53'), 20)\nask_oec = OrderEventChain(a, LOGGER, SUBCHAIN_ID_GENERATOR)\na_ack = AcknowledgementReport(57, 1234002.123, 1009, 'user_z', MARKET, a,\n    Price('34.53'), 20, 20)\nask_oec.apply_acknowledgement_report(a_ack)\nob.handle_acknowledgement_report(a_ack, ask_oec)\nid_generator = MonotonicIntID()\nfor i, chain in enumerate(ob.order_chains_at_price(ASK_SIDE, ob.best_price(\n    ASK_SIDE))):\n    cancel_command = CancelCommand(id_generator.id(), 1234002.123, chain.\n        chain_id(), chain.user_id(), MARKET, USER_CANCEL)\n    chain.apply_cancel_command(cancel_command)\n    cancel_report = CancelReport(id_generator.id(), 1234002.123, chain.\n        chain_id(), chain.user_id(), MARKET, cancel_command, USER_CANCEL)\n    chain.apply_cancel_report(cancel_report)\n    ob.handle_cancel_report(cancel_report, chain)\nassert ob.best_priority_chain(ASK_SIDE).chain_id() == ask_oec.chain_id()\nassert ob.best_ask_price() == Price('34.53')\nassert ob.visible_qty_at_price(ASK_SIDE, ob.best_ask_price()) == 20\nassert ob.hidden_qty_at_price(ASK_SIDE, ob.best_ask_price()) == 0\nassert ob.num_orders_at_price(ASK_SIDE, ob.best_ask_price()) == 1\nbid_prices = ob.bid_prices()\nassert len(bid_prices) == 1\nassert bid_prices[0] == Price('34.50')\nassert ob.best_bid_price() == Price('34.50')\nassert ob.best_bid_level() == PriceLevel(Price('34.50'), 120, 0, 2)\n"
}