{
    "functionName": "test_yieldsMachineInClass",
    "className": "FindMachinesViaWrapperTests",
    "fileName": "/glyph_&_Automat/automat_&__test_&_test_discover.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        When given a L{twisted.python.modules.PythonAttribute} that refers\n        to a class that contains a L{MethodicalMachine} as a class\n        variable, L{findMachinesViaWrapper} yields that machine and\n        its FQPN.\n        \"\"\"\nsource = \"\"\"        from automat import MethodicalMachine\n\n        class PythonClass(object):\n            _classMachine = MethodicalMachine()\n        \"\"\"\nmoduleDict = self.makeModuleAsDict(source, self.pathDir, 'clsmod.py')\nPythonClass = moduleDict['clsmod.PythonClass']\nself.assertIn(('clsmod.PythonClass._classMachine', PythonClass.load().\n    _classMachine), list(self.findMachinesViaWrapper(PythonClass)))\n"
}