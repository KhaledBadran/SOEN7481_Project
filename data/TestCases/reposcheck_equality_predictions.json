{
    "functionName": "check_equality_predictions",
    "className": null,
    "fileName": "/GPflow_&_GPflow/tests_&_gpflow_&_conditionals_&_test_multioutput.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"\n    Executes a couple of checks to compare the equality of predictions\n    of different models. The models should be configured with the same\n    training data (X, Y). The following checks are done:\n    - check if elbo is (almost) equal for all models\n    - check if predicted mean is (almost) equal\n    - check if predicted variance is (almost) equal.\n      All possible variances over the inputs and outputs are calculated\n      and equality is checked.\n    - check if variances within model are consistent. Parts of the covariance\n      matrices should overlap, and this is tested.\n    \"\"\"\nelbos = [m.elbo(data) for m in models]\nassert_all_array_elements_almost_equal(elbos, decimal=5)\nmeans_tt, vars_tt = predict_all(models, Data.Xs, full_cov=True,\n    full_output_cov=True)\nmeans_tf, vars_tf = predict_all(models, Data.Xs, full_cov=True,\n    full_output_cov=False)\nmeans_ft, vars_ft = predict_all(models, Data.Xs, full_cov=False,\n    full_output_cov=True)\nmeans_ff, vars_ff = predict_all(models, Data.Xs, full_cov=False,\n    full_output_cov=False)\nall_means = means_tt + means_tf + means_ft + means_ff\nassert_all_array_elements_almost_equal(all_means, decimal=decimal)\nall_vars = [vars_tt, vars_tf, vars_ft, vars_ff]\n_ = [assert_all_array_elements_almost_equal(var, decimal=decimal) for var in\n    all_vars]\nvar_tt = vars_tt[0]\nvar_tf = vars_tf[0]\nvar_ft = vars_ft[0]\nvar_ff = vars_ff[0]\nnp.testing.assert_almost_equal(np.diagonal(var_tt, axis1=1, axis2=3), np.\n    transpose(var_tf, [1, 2, 0]), decimal=decimal)\nnp.testing.assert_almost_equal(np.diagonal(var_tt, axis1=0, axis2=2), np.\n    transpose(var_ft, [1, 2, 0]), decimal=decimal)\nnp.testing.assert_almost_equal(np.diagonal(np.diagonal(var_tt, axis1=0,\n    axis2=2)), var_ff, decimal=decimal)\n"
}