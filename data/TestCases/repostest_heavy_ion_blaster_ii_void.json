{
    "functionName": "test_heavy_ion_blaster_ii_void",
    "className": null,
    "fileName": "/Pyfa-fit_&_EVE_Gnosis/tests_&_real_eve_modules_&_test_turrets.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "expected_cached_run_count = 1027\nexpected_low_water_mark = 6853.240350730942\nexpected_time = 600038.9600000032\nexpected_capacitor_tick_0_percent = 1\nexpected_capacitor_tick_0_time = 0\nexpected_capacitor_tick_7_percent = 1\nexpected_capacitor_tick_7_time = 4059.7200000000007\nexpected_capacitor_tick_8_percent = 1\nexpected_capacitor_tick_8_time = 4639.680000000001\nexpected_capacitor_tick_max_run_percent = 0.69\nexpected_capacitor_tick_max_run_time = 600038.9600000032\ncapacitor_amount = 10000\ncapacitor_recharge = 9999999999999\nturret_slots = 5\nturret_count = 0\ndelay_time = 0\ncycle_time = 2899.8000000000006\nmodule_list = []\nwhile turret_count < turret_slots:\n    module_list.append({'Amount': -3.06403125, 'CycleTime': cycle_time,\n        'ReloadTime': 5000, 'Charges': 120, 'DelayTime': delay_time})\n    turret_count += 1\n    delay_time += cycle_time / turret_slots\nmatrix = Capacitor.capacitor_time_simulator(module_list, capacitor_amount,\n    capacitor_recharge)\ncached_runs_count = 0\nfor _ in matrix['Cached Runs']:\n    cached_runs_count += 1\nassert expected_cached_run_count == cached_runs_count\nassert expected_low_water_mark == matrix['Stability']['LowWaterMark']\nassert expected_time == matrix['Stability']['LowWaterMarkTime']\nassert expected_capacitor_tick_0_percent == matrix['Cached Runs'][0][\n    'Capacitor Percentage']\nassert expected_capacitor_tick_0_time == matrix['Cached Runs'][0][\n    'Current Time']\nassert expected_capacitor_tick_7_percent == matrix['Cached Runs'][7][\n    'Capacitor Percentage']\nassert expected_capacitor_tick_7_time == matrix['Cached Runs'][7][\n    'Current Time']\nassert expected_capacitor_tick_8_percent == matrix['Cached Runs'][8][\n    'Capacitor Percentage']\nassert expected_capacitor_tick_8_time == matrix['Cached Runs'][8][\n    'Current Time']\nassert expected_capacitor_tick_max_run_percent == matrix['Cached Runs'][\n    cached_runs_count - 1]['Capacitor Percentage']\nassert expected_capacitor_tick_max_run_time == matrix['Cached Runs'][\n    cached_runs_count - 1]['Current Time']\n"
}