{
    "functionName": "test_decrypt",
    "className": "TestProxyKmipClient",
    "fileName": "/OpenKMIP_&_PyKMIP/kmip_&_tests_&_unit_&_pie_&_test_client.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Test that the client can decrypt data.\n        \"\"\"\nresult = {'data': b'7654321 Now is the time for \\x00', 'result_status':\n    enums.ResultStatus.SUCCESS}\nclient = ProxyKmipClient()\nclient.open()\nclient.proxy.decrypt.return_value = result\ndecrypted_data = client.decrypt(\n    b'kw\\xb4\\xd60\\x06\\xde\\xe6\\x05\\xb1V\\xe2t\\x03\\x97\\x93X\\xde\\xb9\\xe7\\x15F\\x16\\xd9t\\x9d\\xec\\xbe\\xc0]&K'\n    , uid='1', cryptographic_parameters={'block_cipher_mode': enums.\n    BlockCipherMode.CBC, 'padding_method': enums.PaddingMethod.PKCS5,\n    'cryptographic_algorithm': enums.CryptographicAlgorithm.BLOWFISH},\n    iv_counter_nonce=b'\\xfe\\xdc\\xba\\x98vT2\\x10')\nself.assertEqual(result.get('data'), decrypted_data)\nmock.patch('kmip.pie.client.KMIPProxy', mock.MagicMock(spec_set=KMIPProxy))"
}