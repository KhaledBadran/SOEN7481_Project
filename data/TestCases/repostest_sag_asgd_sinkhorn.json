{
    "functionName": "test_sag_asgd_sinkhorn",
    "className": null,
    "fileName": "/PythonOT_&_POT/test_&_test_stochastic.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "n = 15\nreg = 1\nnb_iter = 100000\nrng = np.random.RandomState(0)\nx = rng.randn(n, 2)\nu = ot.utils.unif(n)\nM = ot.dist(x, x)\nG_asgd = ot.stochastic.solve_semi_dual_entropic(u, u, M, reg, 'asgd',\n    numItermax=nb_iter)\nG_sag = ot.stochastic.solve_semi_dual_entropic(u, u, M, reg, 'sag',\n    numItermax=nb_iter)\nG_sinkhorn = ot.sinkhorn(u, u, M, reg)\nnp.testing.assert_allclose(G_sag.sum(1), G_sinkhorn.sum(1), atol=0.001)\nnp.testing.assert_allclose(G_sag.sum(0), G_sinkhorn.sum(0), atol=0.001)\nnp.testing.assert_allclose(G_asgd.sum(1), G_sinkhorn.sum(1), atol=0.001)\nnp.testing.assert_allclose(G_asgd.sum(0), G_sinkhorn.sum(0), atol=0.001)\nnp.testing.assert_allclose(G_sag, G_sinkhorn, atol=0.001)\nnp.testing.assert_allclose(G_asgd, G_sinkhorn, atol=0.001)\n"
}