{
    "functionName": "test_intergenic_srna",
    "className": "TestsRNAIntergenic",
    "fileName": "/Sung-Huan_&_ANNOgesic/tests_&_test_sRNA_intergenic.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "si.read_libs = self.mock.mock_read_libs\nsi.read_wig = self.mock.mock_read_wig\ngff_file = os.path.join(self.test_folder, 'aaa.gff')\ntss_file = os.path.join(self.test_folder, 'aaa_TSS.gff')\ntran_file = os.path.join(self.test_folder, 'aaa_tran.gff')\npro_file = os.path.join(self.test_folder, 'aaa_processing.gff')\nwig_f_file = os.path.join(self.wig_folder, 'wig_f.wig')\nwig_r_file = os.path.join(self.wig_folder, 'wig_r.wig')\ngen_file(gff_file, self.example.gff_file)\ngen_file(tss_file, self.example.gff_file)\ngen_file(tran_file, self.example.gff_file)\ngen_file(pro_file, self.example.gff_file)\noutput_file = os.path.join(self.test_folder, 'output')\noutput_table = os.path.join(self.test_folder, 'table')\ncoverage = [0, 0, 0, 50, 10]\nsi.replicate_comparison = self.mock.mock_replicate_comparison\nsi.coverage_comparison = self.mock.mock_coverage_comparison\nargs = self.mock_args.mock()\nargs.gff_file = gff_file\nargs.tran_file = tran_file\nargs.pro_file = pro_file\nargs.tss_file = tss_file\nargs.table_best = True\nargs.cutoffs = coverage\nargs.out_folder = self.test_folder\nargs.file_type = 'frag'\nargs.cut_notex = coverage\nargs.input_libs = 'input_libs'\nargs.wig_folder = self.wig_folder\nargs.wig_f_file = wig_f_file\nargs.wig_r_file = wig_r_file\nargs.tss_source = True\nargs.output_file = output_file\nargs.output_table = output_table\nargs.in_cds = False\nargs.wigs_f = None\nargs.wigs_r = None\nargs.ex_srna = False\nsi.intergenic_srna(args, args.input_libs, None, args.wigs_f, args.wigs_r,\n    tss_file)\nself.assertTrue(os.path.exists(output_file))\nself.assertTrue(os.path.exists(output_table))\n"
}