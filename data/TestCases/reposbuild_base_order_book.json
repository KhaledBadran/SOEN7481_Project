{
    "functionName": "build_base_order_book",
    "className": null,
    "fileName": "/nabicht_&_Buttonwood/tests_&_test_MarketObjects_&_test_Orderbooks_&_test_orderlevelbook.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "ob = OrderLevelBook(MARKET, LOGGER)\nb1 = NewOrderCommand(1, 1234000.123, 1001, 'user_a', MARKET, BID_SIDE, FAR,\n    Price('34.50'), 50)\nbid_oec1 = OrderEventChain(b1, LOGGER, SUBCHAIN_ID_GENERATOR)\nb1_ack = AcknowledgementReport(2, 1234000.123, 1001, 'user_a', MARKET, b1,\n    Price('34.50'), 50, 50)\nbid_oec1.apply_acknowledgement_report(b1_ack)\nob.handle_acknowledgement_report(b1_ack, bid_oec1)\na1 = NewOrderCommand(3, 1234000.888, 1002, 'user_b', MARKET, ASK_SIDE, FAR,\n    Price('34.52'), 35, 10)\nask_oec1 = OrderEventChain(a1, LOGGER, SUBCHAIN_ID_GENERATOR)\na1_ack = AcknowledgementReport(4, 1234000.888, 1002, 'user_b', MARKET, a1,\n    Price('34.52'), 35, 10)\nask_oec1.apply_acknowledgement_report(a1_ack)\nob.handle_acknowledgement_report(a1_ack, ask_oec1)\na2 = NewOrderCommand(5, 1234001.888, 1003, 'user_c', MARKET, ASK_SIDE, FAR,\n    Price('34.52'), 20, 20)\nask_oec2 = OrderEventChain(a2, LOGGER, SUBCHAIN_ID_GENERATOR)\na2_ack = AcknowledgementReport(6, 1234001.888, 1003, 'user_b', MARKET, a2,\n    Price('34.52'), 20, 20)\nask_oec2.apply_acknowledgement_report(a2_ack)\nob.handle_acknowledgement_report(a2_ack, ask_oec2)\nb2 = NewOrderCommand(9, 1234000.123, 1004, 'user_z', MARKET, BID_SIDE, FAR,\n    Price('34.50'), 70)\nbid_oec2 = OrderEventChain(b2, LOGGER, SUBCHAIN_ID_GENERATOR)\nb2_ack = AcknowledgementReport(10, 1234000.123, 1004, 'user_z', MARKET, b2,\n    Price('34.50'), 70, 70)\nbid_oec2.apply_acknowledgement_report(b2_ack)\nob.handle_acknowledgement_report(b2_ack, bid_oec2)\nbid_prices = ob.prices(BID_SIDE)\nprint(ob.best_bid_price())\nprint(bid_prices)\nassert len(bid_prices) == 1\nassert bid_prices[0] == Price('34.50')\nassert ob.best_bid_price() == Price('34.50')\nassert ob.best_bid_level() == PriceLevel(Price('34.50'), 120, 0, 2)\nassert ob.best_priority_chain(BID_SIDE) == bid_oec1\nask_prices = ob.ask_prices()\nassert len(ask_prices) == 1\nassert ask_prices[0] == Price('34.52')\nassert ob.best_ask_price() == Price('34.52')\nassert ob.best_ask_level() == PriceLevel(Price('34.52'), 30, 25, 2)\nassert ob.best_priority_chain(ASK_SIDE) == ask_oec1\nreturn ob\n"
}