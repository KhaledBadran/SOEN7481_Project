{
    "functionName": "sparse2dense",
    "className": null,
    "fileName": "/haotianteng_&_Chiron/chiron_&_chiron_eval_test.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Transfer a sparse input in to dense representation\n    Args:\n        predict_val ((docded, log_probabilities)): Tuple of shape 2, output from the tf.nn.ctc_beam_search_decoder or tf.nn.ctc_greedy_decoder.\n            decoded:A list of length `top_paths`, where decoded[j] is a SparseTensor containing the decoded outputs:\n                decoded[j].indices: Matrix of shape [total_decoded_outputs[j], 2], each row stand for [batch, time] index in dense representation.\n                decoded[j].values: Vector of shape [total_decoded_outputs[j]]. The vector stores the decoded classes for beam j.\n                decoded[j].shape: Vector of shape [2]. Give the [batch_size, max_decoded_length[j]].\n            Check the format of the sparse tensor at https://www.tensorflow.org/api_docs/python/tf/SparseTensor\n            log_probability: A float matrix of shape [batch_size, top_paths]. Give the sequence log-probabilities.\n\n    Returns:\n        predict_read[Float]: Nested List, [path_index][read_index][base_index], give the list of decoded reads(in number representation 0-A, 1-C, 2-G, 3-T).\n        uniq_list[Int]: Nested List, [top_paths][batch_index], give the batch index that exist in the decoded output.\n    \"\"\"\npredict_val_top5 = predict_val[0]\npredict_read = list()\nuniq_list = list()\nfor i in range(len(predict_val_top5)):\n    predict_val = predict_val_top5[i]\n    unique, pre_counts = np.unique(predict_val.indices[:, (0)],\n        return_counts=True)\n    uniq_list.append(unique)\n    pos_predict = 0\n    predict_read_temp = list()\n    for indx, _ in enumerate(pre_counts):\n        predict_read_temp.append(predict_val.values[pos_predict:pos_predict +\n            pre_counts[indx]])\n        pos_predict += pre_counts[indx]\n    predict_read.append(predict_read_temp)\nreturn predict_read, uniq_list\n"
}