{
    "functionName": "test_randomizations",
    "className": "Test_Oi2",
    "fileName": "/fraenkel-lab_&_OmicsIntegrator2/test_&_test_graph.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "print('test_randomizations')\nforest, augmented_forest = self.graph.randomizations(noisy_edges_reps=3,\n    random_terminals_reps=3)\nassert isinstance(forest, nx.Graph)\nassert isinstance(augmented_forest, nx.Graph)\nassert set(nx.get_node_attributes(forest, 'robustness').keys()) != set()\nassert set(nx.get_node_attributes(augmented_forest, 'robustness').keys()\n    ) != set()\nassert set(nx.get_node_attributes(forest, 'specificity').keys()) != set()\nassert set(nx.get_node_attributes(augmented_forest, 'specificity').keys()\n    ) != set()\nforest, augmented_forest = self.graph.randomizations(noisy_edges_reps=0,\n    random_terminals_reps=3)\nassert isinstance(forest, nx.Graph)\nassert isinstance(augmented_forest, nx.Graph)\nassert set(nx.get_node_attributes(forest, 'robustness').keys()) == set()\nassert set(nx.get_node_attributes(augmented_forest, 'robustness').keys()\n    ) == set()\nassert set(nx.get_node_attributes(forest, 'specificity').keys()) != set()\nassert set(nx.get_node_attributes(augmented_forest, 'specificity').keys()\n    ) != set()\nforest, augmented_forest = self.graph.randomizations(noisy_edges_reps=3,\n    random_terminals_reps=0)\nassert isinstance(forest, nx.Graph)\nassert isinstance(augmented_forest, nx.Graph)\nassert set(nx.get_node_attributes(forest, 'robustness').keys()) != set()\nassert set(nx.get_node_attributes(augmented_forest, 'robustness').keys()\n    ) != set()\nassert set(nx.get_node_attributes(forest, 'specificity').keys()) == set()\nassert set(nx.get_node_attributes(augmented_forest, 'specificity').keys()\n    ) == set()\nforest, augmented_forest = self.graph.randomizations(noisy_edges_reps=0,\n    random_terminals_reps=0)\nassert isinstance(forest, nx.Graph)\nassert isinstance(augmented_forest, nx.Graph)\nassert set(nx.get_node_attributes(forest, 'robustness').keys()) == set()\nassert set(nx.get_node_attributes(augmented_forest, 'robustness').keys()\n    ) == set()\nassert set(nx.get_node_attributes(forest, 'specificity').keys()) == set()\nassert set(nx.get_node_attributes(augmented_forest, 'specificity').keys()\n    ) == set()\nprint('...pass')\n"
}