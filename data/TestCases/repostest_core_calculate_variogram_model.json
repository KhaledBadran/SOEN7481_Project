{
    "functionName": "test_core_calculate_variogram_model",
    "className": null,
    "fileName": "/bsmurphy_&_PyKrige/tests_&_test_core.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "res = core._calculate_variogram_model(np.array([1.0, 2.0, 3.0, 4.0]), np.\n    array([2.05, 2.95, 4.05, 4.95]), 'linear', variogram_models.\n    linear_variogram_model, False)\nassert_allclose(res, np.array([0.98, 1.05]), 0.01, 0.01)\nres = core._calculate_variogram_model(np.array([1.0, 2.0, 3.0, 4.0]), np.\n    array([2.05, 2.95, 4.05, 4.95]), 'linear', variogram_models.\n    linear_variogram_model, True)\nassert_allclose(res, np.array([0.98, 1.05]), 0.01, 0.01)\nres = core._calculate_variogram_model(np.array([1.0, 2.0, 3.0, 4.0]), np.\n    array([1.0, 2.8284271, 5.1961524, 8.0]), 'power', variogram_models.\n    power_variogram_model, False)\nassert_allclose(res, np.array([1.0, 1.5, 0.0]), 0.001, 0.001)\nres = core._calculate_variogram_model(np.array([1.0, 2.0, 3.0, 4.0]), np.\n    array([1.0, 1.4142, 1.7321, 2.0]), 'power', variogram_models.\n    power_variogram_model, False)\nassert_allclose(res, np.array([1.0, 0.5, 0.0]), 0.001, 0.001)\nres = core._calculate_variogram_model(np.array([1.0, 2.0, 3.0, 4.0]), np.\n    array([1.2642, 1.7293, 1.9004, 1.9634]), 'exponential',\n    variogram_models.exponential_variogram_model, False)\nassert_allclose(res, np.array([2.0, 3.0, 0.0]), 0.001, 0.001)\nres = core._calculate_variogram_model(np.array([1.0, 2.0, 3.0, 4.0]), np.\n    array([0.5769, 1.4872, 1.9065, 1.9914]), 'gaussian', variogram_models.\n    gaussian_variogram_model, False)\nassert_allclose(res, np.array([2.0, 3.0, 0.0]), 0.001, 0.001)\nres = core._calculate_variogram_model(np.array([1.0, 2.0, 3.0, 4.0]), np.\n    array([3.33060952, 3.85063879, 3.96667301, 3.99256374]), 'exponential',\n    variogram_models.exponential_variogram_model, False)\nassert_allclose(res, np.array([3.0, 2.0, 1.0]), 0.001, 0.001)\nres = core._calculate_variogram_model(np.array([1.0, 2.0, 3.0, 4.0]), np.\n    array([2.60487044, 3.85968813, 3.99694817, 3.99998564]), 'gaussian',\n    variogram_models.gaussian_variogram_model, False)\nassert_allclose(res, np.array([3.0, 2.0, 1.0]), 0.001, 0.001)\n"
}