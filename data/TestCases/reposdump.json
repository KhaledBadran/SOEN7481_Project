{
    "functionName": "dump",
    "className": "TestTF",
    "fileName": "/Microsoft_&_MMdnn/mmdnn_&_conversion_&_examples_&_tensorflow_&_imagenet_test.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "dump_tag = self.args.dump_tag\nif dump_tag == 'SERVING':\n    tag_list = [tf.saved_model.tag_constants.SERVING]\nelse:\n    tag_list = [tf.saved_model.tag_constants.TRAINING]\nif path is None:\n    path = self.args.dump\nwith tf.Session() as sess:\n    sess.run(tf.global_variables_initializer())\n    builder = tf.saved_model.builder.SavedModelBuilder(path)\n    tensor_info_input = tf.saved_model.utils.build_tensor_info(self.input)\n    tensor_info_output = tf.saved_model.utils.build_tensor_info(self.model)\n    prediction_signature = (tf.saved_model.signature_def_utils.\n        build_signature_def(inputs={'input': tensor_info_input}, outputs={\n        'output': tensor_info_output}, method_name=tf.saved_model.\n        signature_constants.PREDICT_METHOD_NAME))\n    builder.add_meta_graph_and_variables(sess, tag_list, signature_def_map=\n        {tf.saved_model.signature_constants.\n        DEFAULT_SERVING_SIGNATURE_DEF_KEY: prediction_signature})\n    save_path = builder.save()\n    print('Tensorflow file is saved as [{}], generated by [{}.py] and [{}].'\n        .format(save_path, self.args.n, self.args.w))\n"
}