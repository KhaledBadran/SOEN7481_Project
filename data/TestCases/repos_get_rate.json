{
    "functionName": "_get_rate",
    "className": "CurrencyConverter",
    "fileName": "/alexprengere_&_currencyconverter/currency_converter_&_currency_converter.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"Get a rate for a given currency and date.\n\n        :type date: datetime.date\n\n        >>> from datetime import date\n        >>> c = CurrencyConverter()\n        >>> c._get_rate('USD', date=date(2014, 3, 28))\n        1.375...\n        >>> c._get_rate('BGN', date=date(2010, 11, 21))\n        Traceback (most recent call last):\n        RateNotFoundError: BGN has no rate for 2010-11-21\n        \"\"\"\nif currency == self.ref_currency:\n    return self.cast('1')\nif date not in self._rates[currency]:\n    first_date, last_date = self.bounds[currency]\n    if not self.fallback_on_wrong_date:\n        raise RateNotFoundError('{0} not in {1} bounds {2}/{3}'.format(date,\n            currency, first_date, last_date))\n    if date < first_date:\n        fallback_date = first_date\n    elif date > last_date:\n        fallback_date = last_date\n    else:\n        raise AssertionError('Should never happen, bug in the code!')\n    if self.verbose:\n        print('/!\\\\ {0} not in {1} bounds {2}/{3}, falling back to {4}'.\n            format(date, currency, first_date, last_date, fallback_date))\n    date = fallback_date\nrate = self._rates[currency][date]\nif rate is None:\n    raise RateNotFoundError('{0} has no rate for {1}'.format(currency, date))\nreturn rate\n"
}