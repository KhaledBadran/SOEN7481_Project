{
    "functionName": "test_13Node_Basic",
    "className": null,
    "fileName": "/dss-extensions_&_OpenDSSDirect.py/tests_&_test_opendssdirect_no_ext_errors.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "assert dss.Basic.AllowForms() is False\ndss_classes = [u'Solution', u'LineCode', u'LoadShape', u'TShape',\n    u'PriceShape', u'XYcurve', u'GrowthShape', u'TCC_Curve', u'Spectrum',\n    u'WireData', u'CNData', u'TSData', u'LineGeometry', u'LineSpacing',\n    u'XfmrCode', u'Line', u'Vsource', u'Isource', u'VCCS', u'Load',\n    u'Transformer', u'RegControl', u'Capacitor', u'Reactor', u'CapControl',\n    u'Fault', u'Generator', u'GenDispatcher', u'Storage',\n    u'StorageController', u'Relay', u'Recloser', u'Fuse', u'SwtControl',\n    u'PVSystem', u'UPFC', u'UPFCControl', u'ESPVLControl', u'IndMach012',\n    u'GICsource', u'AutoTrans', u'InvControl', u'ExpControl', u'GICLine',\n    u'GICTransformer', u'VSConverter', u'Monitor', u'EnergyMeter', u'Sensor']\nassert dss.Basic.Classes() == dss_classes\nassert dss.Basic.NumClasses() == len(dss_classes)\nassert dss.Basic.ShowPanel() == 0\nassert dss.Basic.ClearAll() is None\nassert os.path.abspath(dss.Basic.DataPath()) == os.path.abspath('.' + os.sep)\nassert dss.Basic.NewCircuit('Circuit') == u'New Circuit'\nassert dss.Basic.NumCircuits() == 1\nassert dss.Basic.NumUserClasses() == 0\nassert dss.Basic.Reset() is None\nassert dss.Basic.Start(1) == 1\nassert dss.Basic.UserClasses() == []\nfrom six import string_types\nassert isinstance(dss.Basic.Version(), string_types)\n"
}