{
    "functionName": "test_halomodel_power",
    "className": null,
    "fileName": "/LSSTDESC_&_CCL/pyccl_&_tests_&_test_halomodel.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "from pyccl.pyutils import assert_warns\na = 0.8\nif kind == 'one':\n    func = ccl.onehalo_matter_power\nelif kind == 'two':\n    func = ccl.twohalo_matter_power\nelse:\n    func = ccl.halomodel_matter_power\npk = assert_warns(ccl.CCLWarning, func, COSMO, k, a)\nassert np.all(np.isfinite(pk))\nassert np.shape(k) == np.shape(pk)\npytest.mark.parametrize('k', [1, 1.0, [0.3, 0.5, 10], np.array([0.3, 0.5, 10])]\n    )pytest.mark.parametrize('kind', ['one', 'two', 'total'])"
}