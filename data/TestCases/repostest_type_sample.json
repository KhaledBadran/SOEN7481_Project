{
    "functionName": "test_type_sample",
    "className": null,
    "fileName": "/BFSSI-Bioinformatics-Lab_&_EnteroTyper/EnteroTyper_&_tests_&_test_typer.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n    Uses dummy data in the test_data_dir directory. Uses the MLST_Achtman database.\n    assembly_1.fasta should contain only recA_1 and fumC_7\n    assembly_2.fasta should contain only recA_1 and fumC_16\n    assembly_3.fasta should not contain any markers\n    :return:\n    \"\"\"\ntest_assembly_1 = test_data_dir / 'assembly_1.fasta'\ntest_assembly_2 = test_data_dir / 'assembly_2.fasta'\ntest_assembly_3 = test_data_dir / 'assembly_3.fasta'\ntest_assemblies = [test_assembly_1, test_assembly_2, test_assembly_3]\nfor assembly in test_assemblies:\n    assert assembly.exists()\n    tmpoutdir = Path(f'/tmp/typer_testing_{assembly.name}')\n    if tmpoutdir.exists():\n        shutil.rmtree(tmpoutdir)\n    detailed_report = type_sample(input_assembly=assembly, database=\n        test_database, outdir=tmpoutdir, create_db=True, keep_blast=False)\n    assert detailed_report.exists()\n    df = pd.read_csv(detailed_report, sep='\\t')\n    expected_columns = ['qseqid', 'sseqid', 'slen', 'length', 'qstart',\n        'qend', 'pident', 'lratio', 'locus', 'hit_type', 'qseq_strand_aware']\n    if 'assembly_3' not in assembly.name:\n        for column in list(df.columns):\n            assert column in expected_columns\n    if 'assembly_1' in assembly.name:\n        assert 'fumC_7' in df['sseqid'].tolist()\n        assert 'recA_1' in df['sseqid'].tolist()\n    elif 'assembly_2' in assembly.name:\n        assert 'fumC_16' in df['sseqid'].tolist()\n        assert 'recA_1' in df['sseqid'].tolist()\n    elif 'assembly_3' in assembly.name:\n        hit_types = list(df['hit_type'].unique())\n        assert len(hit_types) == 1\n        assert hit_types[0] == 'NO_MATCH'\n    shutil.rmtree(tmpoutdir)\n"
}