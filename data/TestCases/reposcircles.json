{
    "functionName": "circles",
    "className": null,
    "fileName": "/pmeal_&_OpenPNM/openpnm_&_io_&_COMSOL.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "f = file\np1x = centers[:, (0)] - radii\np1y = centers[:, (1)]\np2x = centers[:, (0)]\np2y = centers[:, (1)] - radii\np3x = centers[:, (0)] + radii\np3y = centers[:, (1)]\np4x = centers[:, (0)]\np4y = centers[:, (1)] + radii\nfor c in range(len(centers)):\n    f.write('# --------- circle nbr ' + str(c + 1) + ' ---------' + 2 * '\\n')\n    f.write('0 0 1' + '\\n')\n    f.write('5 Geom2 # class' + '\\n')\n    f.write('2 # version' + '\\n')\n    f.write('2 # type' + '\\n')\n    f.write('1 # voidsLabeled' + '\\n')\n    f.write('1e-010 # gtol' + '\\n')\n    f.write('0.0001 # resTol' + 2 * '\\n')\n    f.write('4 # number of vertices' + '\\n')\n    f.write('# Vertices' + '\\n')\n    f.write('# X Y dom tol' + '\\n')\n    f.write(str(p1x[c]) + ' ' + str(p1y[c]) + ' ' + '-1 NAN' + '\\n')\n    f.write(str(p2x[c]) + ' ' + str(p2y[c]) + ' ' + '-1 NAN' + '\\n')\n    f.write(str(p3x[c]) + ' ' + str(p3y[c]) + ' ' + '-1 NAN' + '\\n')\n    f.write(str(p4x[c]) + ' ' + str(p4y[c]) + ' ' + '-1 NAN' + 2 * '\\n')\n    f.write('4 # number of edges' + '\\n')\n    f.write('# Edges' + '\\n')\n    f.write('# vtx1 vtx2 s1 s2 up down mfd tol' + '\\n')\n    f.write('2 1 0 1 0 1 1 NAN' + '\\n')\n    f.write('3 2 0 1 0 1 2 NAN' + '\\n')\n    f.write('4 3 0 1 0 1 3 NAN' + '\\n')\n    f.write('1 4 0 1 0 1 4 NAN' + 2 * '\\n')\n    f.write('4 # number of manifolds' + '\\n')\n    f.write('# Manifolds' + 2 * '\\n')\n    f.write('# Manifold #0' + '\\n')\n    f.write('11 BezierCurve # class' + '\\n')\n    f.write('0 0 # version' + '\\n')\n    f.write('2 # sdim' + '\\n')\n    f.write('0 2 1 # transformation' + '\\n')\n    f.write('2 0 # degrees' + '\\n')\n    f.write('3 # number of control points' + '\\n')\n    f.write('# control point coords and weights' + '\\n')\n    f.write(str(p2x[c]) + ' ' + str(p2y[c]) + ' ' + '1' + '\\n')\n    f.write(str(p1x[c]) + ' ' + str(p2y[c]) + ' ' + '0.70710678118654746' +\n        '\\n')\n    f.write(str(p1x[c]) + ' ' + str(p1y[c]) + ' ' + '1' + 2 * '\\n')\n    f.write('# Manifold #1' + '\\n')\n    f.write('11 BezierCurve # class' + '\\n')\n    f.write('0 0 # version' + '\\n')\n    f.write('2 # sdim' + '\\n')\n    f.write('0 2 1 # transformation' + '\\n')\n    f.write('2 0 # degrees' + '\\n')\n    f.write('3 # number of control points' + '\\n')\n    f.write('# control point coords and weights' + '\\n')\n    f.write(str(p3x[c]) + ' ' + str(p3y[c]) + ' ' + '1' + '\\n')\n    f.write(str(p3x[c]) + ' ' + str(p2y[c]) + ' ' + '0.70710678118654746' +\n        '\\n')\n    f.write(str(p2x[c]) + ' ' + str(p2y[c]) + ' ' + '1' + 2 * '\\n')\n    f.write('# Manifold #2' + '\\n')\n    f.write('11 BezierCurve # class' + '\\n')\n    f.write('0 0 # version' + '\\n')\n    f.write('2 # sdim' + '\\n')\n    f.write('0 2 1 # transformation' + '\\n')\n    f.write('2 0 # degrees' + '\\n')\n    f.write('3 # number of control points' + '\\n')\n    f.write('# control point coords and weights' + '\\n')\n    f.write(str(p4x[c]) + ' ' + str(p4y[c]) + ' ' + '1' + '\\n')\n    f.write(str(p3x[c]) + ' ' + str(p4y[c]) + ' ' + '0.70710678118654746' +\n        '\\n')\n    f.write(str(p3x[c]) + ' ' + str(p3y[c]) + ' ' + '1' + 2 * '\\n')\n    f.write('# Manifold #3' + '\\n')\n    f.write('11 BezierCurve # class' + '\\n')\n    f.write('0 0 # version' + '\\n')\n    f.write('2 # sdim' + '\\n')\n    f.write('0 2 1 # transformation' + '\\n')\n    f.write('2 0 # degrees' + '\\n')\n    f.write('3 # number of control points' + '\\n')\n    f.write('# control point coords and weights' + '\\n')\n    f.write(str(p1x[c]) + ' ' + str(p1y[c]) + ' ' + '1' + '\\n')\n    f.write(str(p1x[c]) + ' ' + str(p4y[c]) + ' ' + '0.70710678118654746' +\n        '\\n')\n    f.write(str(p4x[c]) + ' ' + str(p4y[c]) + ' ' + '1' + 2 * '\\n')\n    f.write('# Attributes' + '\\n')\n    f.write('0 # nof attributes' + 2 * '\\n')\nreturn\n"
}