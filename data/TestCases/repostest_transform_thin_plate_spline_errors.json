{
    "functionName": "test_transform_thin_plate_spline_errors",
    "className": "TestTPSTransformLayer",
    "fileName": "/Lasagne_&_Lasagne/lasagne_&_tests_&_layers_&_test_special.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "import lasagne\nwith pytest.raises(ValueError):\n    num_control_points = 16\n    l_in_a = lasagne.layers.InputLayer((None, 3, 28, 28))\n    l_loc_a = lasagne.layers.DenseLayer(l_in_a, num_units=3 *\n        num_control_points)\n    l_trans = lasagne.layers.TPSTransformerLayer(l_in_a, l_loc_a,\n        control_points=num_control_points)\nwith pytest.raises(ValueError):\n    l_in = lasagne.layers.InputLayer((None, 3, None, 28))\n    l_loc = lasagne.layers.DenseLayer(lasagne.layers.ReshapeLayer(l_in, ([0\n        ], 3 * 28 * 28)), num_units=32)\n    l_trans = lasagne.layers.TPSTransformerLayer(l_in, l_loc,\n        precompute_grid=True)\nwith pytest.raises(ValueError):\n    l_in_b = lasagne.layers.InputLayer((3, 28, 28))\n    l_loc_b = lasagne.layers.DenseLayer(l_in_b, num_units=6)\n    l_trans = lasagne.layers.TPSTransformerLayer(l_in_b, l_loc_b)\nwith pytest.raises(ValueError):\n    num_control_points = 17\n    l_in_a = lasagne.layers.InputLayer((None, 3, 28, 28))\n    l_loc_a = lasagne.layers.DenseLayer(l_in_a, num_units=2 *\n        num_control_points)\n    l_trans = lasagne.layers.TPSTransformerLayer(l_in_a, l_loc_a,\n        control_points=num_control_points)\nwith pytest.raises(ValueError):\n    num_control_points = 16\n    l_in_b = lasagne.layers.InputLayer((3, 28, 28))\n    l_loc_b = lasagne.layers.DenseLayer(l_in_b, num_units=2 *\n        num_control_points)\n    l_trans = lasagne.layers.TPSTransformerLayer(l_in_b, l_loc_b)\n"
}