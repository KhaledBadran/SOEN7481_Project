{
    "functionName": "test_apt_pia_enabled_multi",
    "className": null,
    "fileName": "/Galvant_&_InstrumentKit/instruments_&_tests_&_test_thorlabs_&_test_thorlabs_apt.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Multi-channel enabling APT Piezo Inertia Actuator KIM101.\n\n    Tested with KIM101 driver connected to PIM1 mirror mount.\n    \"\"\"\nwith expected_protocol(ik.thorlabs.APTPiezoInertiaActuator, [init_kim101[0],\n    ThorLabsPacket(message_id=ThorLabsCommands.PZMOT_REQ_PARAMS, param1=43,\n    param2=0, dest=80, source=1, data=None).pack(), ThorLabsPacket(\n    message_id=ThorLabsCommands.PZMOT_REQ_PARAMS, param1=43, param2=0, dest\n    =80, source=1, data=None).pack(), ThorLabsPacket(message_id=\n    ThorLabsCommands.PZMOT_REQ_PARAMS, param1=43, param2=0, dest=80, source\n    =1, data=None).pack(), ThorLabsPacket(message_id=ThorLabsCommands.\n    PZMOT_SET_PARAMS, param1=None, param2=None, dest=80, source=1, data=\n    struct.pack('<HH', 43, 0)).pack(), ThorLabsPacket(message_id=\n    ThorLabsCommands.PZMOT_SET_PARAMS, param1=None, param2=None, dest=80,\n    source=1, data=struct.pack('<HH', 43, 5)).pack(), ThorLabsPacket(\n    message_id=ThorLabsCommands.PZMOT_SET_PARAMS, param1=None, param2=None,\n    dest=80, source=1, data=struct.pack('<HH', 43, 6)).pack()], [\n    init_kim101[1], ThorLabsPacket(message_id=ThorLabsCommands.\n    PZMOT_GET_PARAMS, param1=None, param2=None, dest=80, source=1, data=\n    struct.pack('<HH', 43, 0)).pack(), ThorLabsPacket(message_id=\n    ThorLabsCommands.PZMOT_GET_PARAMS, param1=None, param2=None, dest=80,\n    source=1, data=struct.pack('<HH', 43, 5)).pack(), ThorLabsPacket(\n    message_id=ThorLabsCommands.PZMOT_GET_PARAMS, param1=None, param2=None,\n    dest=80, source=1, data=struct.pack('<HH', 43, 6)).pack()], sep='') as apt:\n    assert apt.enabled_multi == 0\n    assert apt.enabled_multi == 1\n    assert apt.enabled_multi == 2\n    apt.enabled_multi = 0\n    apt.enabled_multi = 1\n    apt.enabled_multi = 2\n    with pytest.raises(ValueError):\n        apt.enabled_multi = 42\n"
}