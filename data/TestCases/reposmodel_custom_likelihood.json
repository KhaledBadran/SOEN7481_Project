{
    "functionName": "model_custom_likelihood",
    "className": null,
    "fileName": "/PEtab-dev_&_PEtab/tests_&_test_calculate.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"Model with customized likelihoods.\"\"\"\nmeasurement_df = pd.DataFrame(data={OBSERVABLE_ID: ['obs_a', 'obs_b'],\n    SIMULATION_CONDITION_ID: ['c0', 'c0'], TIME: [5, 10], MEASUREMENT: [0.5,\n    2]})\nobservable_df = pd.DataFrame(data={OBSERVABLE_ID: ['obs_a', 'obs_b'],\n    OBSERVABLE_FORMULA: ['A', 'B'], OBSERVABLE_TRANSFORMATION: [LOG, LIN],\n    NOISE_FORMULA: [2, 1.5], NOISE_DISTRIBUTION: [LAPLACE, LAPLACE]}\n    ).set_index([OBSERVABLE_ID])\nparameter_df = pd.DataFrame(data={PARAMETER_ID: ['par1', 'par2'],\n    NOMINAL_VALUE: [3, 4]}).set_index([PARAMETER_ID])\nsimulation_df = measurement_df.copy(deep=True).rename(columns={MEASUREMENT:\n    SIMULATION})\nsimulation_df[SIMULATION] = [2, 3]\nexpected_residuals = {(np.log(2) - np.log(0.5)) / 2, (3 - 2) / 1.5}\nexpected_residuals_nonorm = {np.log(2) - np.log(0.5), 3 - 2}\nexpected_llh = -np.abs(list(expected_residuals)).sum() - np.log(2 * np.\n    array([2, 1.5]) * np.array([0.5, 1])).sum()\nreturn measurement_df, observable_df, parameter_df, simulation_df, expected_residuals, expected_residuals_nonorm, expected_llh\n"
}