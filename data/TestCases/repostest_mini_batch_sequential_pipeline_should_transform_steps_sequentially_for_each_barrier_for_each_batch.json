{
    "functionName": "test_mini_batch_sequential_pipeline_should_transform_steps_sequentially_for_each_barrier_for_each_batch",
    "className": null,
    "fileName": "/Neuraxio_&_Neuraxle/testing_&_test_minibatch_sequential_pipeline.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "tape1 = TapeCallbackFunction()\ntape2 = TapeCallbackFunction()\ntape3 = TapeCallbackFunction()\ntape4 = TapeCallbackFunction()\np = MiniBatchSequentialPipeline([MultiplyBy2TransformCallbackStep(tape1, [\n    '1']), MultiplyBy2TransformCallbackStep(tape2, ['2']), Joiner(\n    batch_size=10), MultiplyBy2TransformCallbackStep(tape3, ['3']),\n    MultiplyBy2TransformCallbackStep(tape4, ['4']), Joiner(batch_size=10)])\noutputs = p.transform(range(20))\nassert outputs == [0, 16, 32, 48, 64, 80, 96, 112, 128, 144, 160, 176, 192,\n    208, 224, 240, 256, 272, 288, 304]\nassert tape1.data == [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [10, 11, 12, 13, 14, \n    15, 16, 17, 18, 19]]\nassert tape1.name_tape == ['1', '1']\nassert tape2.data == [[0, 2, 4, 6, 8, 10, 12, 14, 16, 18], [20, 22, 24, 26,\n    28, 30, 32, 34, 36, 38]]\nassert tape2.name_tape == ['2', '2']\nassert tape3.data == [[0, 4, 8, 12, 16, 20, 24, 28, 32, 36], [40, 44, 48, \n    52, 56, 60, 64, 68, 72, 76]]\nassert tape3.name_tape == ['3', '3']\nassert tape4.data == [[0, 8, 16, 24, 32, 40, 48, 56, 64, 72], [80, 88, 96, \n    104, 112, 120, 128, 136, 144, 152]]\nassert tape4.name_tape == ['4', '4']\n"
}