{
    "functionName": "test_decode_alignments",
    "className": "TestPENMANCodec",
    "fileName": "/goodmami_&_penman/tests_&_test_codec.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "g = decode('(a / alpha~1)')\nassert g.triples == [('a', ':instance', 'alpha')]\nassert surface.alignments(g) == {('a', ':instance', 'alpha'): surface.\n    Alignment((1,))}\nassert surface.role_alignments(g) == {}\nassert decode('(a / alpha~1)') == decode('(a / alpha ~1)')\ng = decode('(a :ARG~e.1,2 b)')\nassert g.triples == [('a', ':instance', None), ('a', ':ARG', 'b')]\nassert surface.alignments(g) == {}\nassert surface.role_alignments(g) == {('a', ':ARG', 'b'): surface.\n    RoleAlignment((1, 2), prefix='e.')}\ng = decode('(a :ARG1 \"str~ing\" :ARG2 \"str~ing\"~1)')\nassert g.triples == [('a', ':instance', None), ('a', ':ARG1', '\"str~ing\"'),\n    ('a', ':ARG2', '\"str~ing\"')]\nassert surface.alignments(g) == {('a', ':ARG2', '\"str~ing\"'): surface.\n    Alignment((1,))}\nassert surface.role_alignments(g) == {}\n"
}