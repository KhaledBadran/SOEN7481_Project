{
    "functionName": "test_coregion_slice",
    "className": null,
    "fileName": "/GPflow_&_GPflow/tests_&_gpflow_&_kernels_&_test_kernels.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "X = np.random.randint(0, output_dim, (N, input_dim))\nX = np.hstack((X, rng.randn(10, 1)))\nkernel1 = gpflow.kernels.Coregion(output_dim=output_dim, rank=rank,\n    active_dims=[0])\nkernel2 = gpflow.kernels.SquaredExponential(active_dims=[1])\nkernel_prod = kernel1 * kernel2\nK1 = kernel_prod(X)\nK2 = kernel1(X) * kernel2(X)\nassert np.allclose(K1, K2)\npytest.mark.parametrize('N, input_dim, output_dim, rank', [[10, 1, 3, 2]])"
}