{
    "functionName": "test_targetcoll_set",
    "className": "TestTarget",
    "fileName": "/apmoore1_&_Bella/tests_&_test_data_types.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Test the __setitem__ function of TargetCollection\n        \"\"\"\ntarget_example_0 = Target([(3, 5), (6, 8)], '1', 'Iphone',\n    'text with Iphone', 1)\ntarget_example_1 = Target([(1, 5)], '3', 'Iphone', 'text with Iphone', 1)\ntarget_example_2 = Target([(1, 2)], '2', 'Iphone', 'text with Iphone', 1)\ntarget_col = TargetCollection([target_example_0, target_example_1,\n    target_example_2])\ntarget_example_3 = Target([(2, 4)], '5', 'new', 'new text', 0)\ntarget_example_4 = Target([(1, 3)], '6', 'another', 'another text', 1)\ntarget_example_5 = Target([(1, 3)], '7', 'another', 'another text', 1)\ntarget_diff_1 = Target([(4, 5)], '3', 'test', 'test text', 0)\ntarget_col['5'] = target_example_3\nself.assertEqual(target_col['5'], target_example_3, msg=\n    'Cannot add new value. store {} value added {}'.format(target_col,\n    target_example_3))\nwith self.assertRaises(KeyError, msg=\n    'Should not be able to add value {} as its key {} already exists {}'.\n    format(target_diff_1, '3', target_col)):\n    target_col['3'] = target_diff_1\nwith self.assertRaises(KeyError, msg=\n    'Value with a different `id` to the key should fail. Key {} Value {}'.\n    format('7', target_example_4)):\n    target_col['7'] = target_example_4\ndel target_example_5['target_id']\nif 'target_id' in target_example_5:\n    raise KeyError('{} should not contain `id` key'.format(target_example_5))\ntarget_col['8'] = target_example_5\n"
}