{
    "functionName": "test_get_analysis",
    "className": "TestCase",
    "fileName": "/IntegralDefense_&_ACE/test_ace_api.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "result = self._submit()\nself.assertIsNotNone(result)\nself.assertTrue('result' in result)\nresult = result['result']\nself.assertIsNotNone(result['uuid'])\nuuid = result['uuid']\nresult = ace_api.get_analysis(uuid)\nself.assertIsNotNone(result)\nself.assertTrue('result' in result)\nresult = result['result']\nself.assertEquals(result['analysis_mode'], 'test_empty')\nself.assertEquals(result['tool'], 'unittest_tool')\nself.assertEquals(result['tool_instance'], 'unittest_tool_instance')\nself.assertEquals(result['type'], 'unittest_type')\nself.assertEquals(result['description'], 'testing')\nself.assertEquals(result['event_time'], '2017-11-11T07:36:01.000001+0000')\nself.assertEquals(result['tags'][0], 'alert_tag_1')\nself.assertEquals(result['tags'][1], 'alert_tag_2')\nself.assertEquals(len(result['observable_store']), 4)\nself.assertTrue(isinstance(result['details'], dict))\nself.assertTrue('file_path' in result['details'])\nself.assertTrue(result['details']['file_path'].startswith('RootAnalysis_'))\n"
}