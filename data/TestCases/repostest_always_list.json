{
    "functionName": "test_always_list",
    "className": null,
    "fileName": "/pwwang_&_PyPPL/tests_&_test_utils.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "assert always_list(data, trim) == expect\npytest.mark.parametrize('data,trim,expect', [('a, b,c', True, ['a', 'b',\n    'c']), (['a, b,c'], True, ['a', 'b', 'c']), (['a, b,c', 'd'], True, [\n    'a', 'b', 'c', 'd']), (['a, b,c ', 'd'], False, ['a', ' b', 'c ', 'd']),\n    (\"a,b, c, 'd,e'\", True, ['a', 'b', 'c', \"'d,e'\"]), (['o1:var:{{c1}}',\n    \"o2:var:{{c2 | __import__('math').pow(float(_), 2.0)}}\",\n    'o3:file:{{c3.fn}}2{{c3.ext}}'], True, ['o1:var:{{c1}}',\n    \"o2:var:{{c2 | __import__('math').pow(float(_), 2.0)}}\",\n    'o3:file:{{c3.fn}}2{{c3.ext}}']), (['o1:var:{{c1}}',\n    \"o2:var:c2 | __import__('math').pow float(_), 2.0)}}\",\n    'o3:file:{{c3.fn}}2{{c3.ext}}'], True, ['o1:var:{{c1}}',\n    \"o2:var:c2 | __import__('math').pow float(_)\", '2.0)}}',\n    'o3:file:{{c3.fn}}2{{c3.ext}}'])])"
}