{
    "functionName": "test_core_make_variogram_parameter_list",
    "className": null,
    "fileName": "/bsmurphy_&_PyKrige/tests_&_test_core.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "result = core._make_variogram_parameter_list('linear', None)\nassert result is None\nwith pytest.raises(KeyError):\n    core._make_variogram_parameter_list('linear', {'tacos': 1.0, 'burritos':\n        2.0})\nresult = core._make_variogram_parameter_list('linear', {'slope': 1.0,\n    'nugget': 0.0})\nassert result == [1.0, 0.0]\nwith pytest.raises(KeyError):\n    core._make_variogram_parameter_list('power', {'frijoles': 1.0})\nresult = core._make_variogram_parameter_list('power', {'scale': 2.0,\n    'exponent': 1.0, 'nugget': 0.0})\nassert result == [2.0, 1.0, 0.0]\nwith pytest.raises(KeyError):\n    core._make_variogram_parameter_list('exponential', {'tacos': 1.0})\nwith pytest.raises(KeyError):\n    core._make_variogram_parameter_list('exponential', {'range': 1.0,\n        'nugget': 1.0})\nresult = core._make_variogram_parameter_list('exponential', {'sill': 5.0,\n    'range': 2.0, 'nugget': 1.0})\nassert result == [4.0, 2.0, 1.0]\nresult = core._make_variogram_parameter_list('exponential', {'psill': 4.0,\n    'range': 2.0, 'nugget': 1.0})\nassert result == [4.0, 2.0, 1.0]\nwith pytest.raises(TypeError):\n    core._make_variogram_parameter_list('custom', {'junk': 1.0})\nwith pytest.raises(ValueError):\n    core._make_variogram_parameter_list('blarg', {'junk': 1.0})\nwith pytest.raises(ValueError):\n    core._make_variogram_parameter_list('linear', [1.0, 2.0, 3.0])\nresult = core._make_variogram_parameter_list('linear', [1.0, 2.0])\nassert result == [1.0, 2.0]\nwith pytest.raises(ValueError):\n    core._make_variogram_parameter_list('power', [1.0, 2.0])\nresult = core._make_variogram_parameter_list('power', [1.0, 2.0, 3.0])\nassert result == [1.0, 2.0, 3.0]\nwith pytest.raises(ValueError):\n    core._make_variogram_parameter_list('exponential', [1.0, 2.0, 3.0, 4.0])\nresult = core._make_variogram_parameter_list('exponential', [5.0, 2.0, 1.0])\nassert result == [4.0, 2.0, 1.0]\nresult = core._make_variogram_parameter_list('custom', [1.0, 2.0, 3.0])\nassert result == [1.0, 2.0, 3]\nwith pytest.raises(ValueError):\n    core._make_variogram_parameter_list('junk', [1.0, 1.0, 1.0])\nwith pytest.raises(TypeError):\n    core._make_variogram_parameter_list('linear', 'tacos')\n"
}