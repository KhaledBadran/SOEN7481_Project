{
    "functionName": "conv1d_md",
    "className": null,
    "fileName": "/Lasagne_&_Lasagne/lasagne_&_theano_extensions_&_conv.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"\n    using multiple dot products\n    \"\"\"\nif border_mode not in ('valid', 0, (0,)):\n    raise RuntimeError('Unsupported border_mode for conv1d_md: %s' %\n        border_mode)\nbatch_size, num_input_channels, input_length = image_shape\nnum_filters, num_input_channels_, filter_length = filter_shape\nstride = subsample[0]\nif filter_length % stride > 0:\n    raise RuntimeError(\n        'Filter length (%d) is not a multiple of the stride (%d)' % (\n        filter_length, stride))\nnum_steps = filter_length // stride\noutput_length = (input_length - filter_length + stride) // stride\noutput_shape = batch_size, num_filters, output_length\nfilters_flipped = filters[:, :, ::-1] if filter_flip else filters\nconved = T.zeros(output_shape)\nfor num in range(num_steps):\n    shift = num * stride\n    length = (input_length - shift) // filter_length\n    if length == 0:\n        continue\n    r_input_shape = batch_size, num_input_channels, length, filter_length\n    r_input = input[:, :, shift:length * filter_length + shift].reshape(\n        r_input_shape)\n    r_conved = T.tensordot(r_input, filters_flipped, np.asarray([[1, 3], [1,\n        2]]))\n    r_conved = r_conved.dimshuffle(0, 2, 1)\n    conved = T.set_subtensor(conved[:, :, num::num_steps], r_conved)\nreturn conved\n"
}