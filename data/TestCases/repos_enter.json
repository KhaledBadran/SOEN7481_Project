{
    "functionName": "_enter",
    "className": "SyncClient",
    "fileName": "/PRIArobotics_&_HedgehogClient/hedgehog_&_client_&_sync_client.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "if self.client and self.client.is_shutdown:\n    raise RuntimeError('Cannot reuse a client after it was once shut down')\nelif self.client:\n    self._call(self.client._aenter(daemon=daemon))\n    return self\nelse:\n    with ExitStack() as enter_stack:\n        enter_stack.enter_context(self._loop)\n\n        async def create_client():\n            return self._create_client()\n        self.client = self._call(create_client())\n\n        @enter_stack.callback\n        def clear_client():\n            self.client = None\n        if threading.current_thread() is threading.main_thread():\n\n            def sigint_handler(signal, frame):\n                self.shutdown()\n            signal_ctx = shutdown_handler.register(signal.SIGINT,\n                sigint_handler)\n            enter_stack.enter_context(signal_ctx)\n        else:\n            signal_ctx = None\n        self._call(self.client._aenter(daemon=daemon))\n        self._signal_ctx = signal_ctx\n        enter_stack.pop_all()\n        return self\n"
}