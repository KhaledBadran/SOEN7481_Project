{
    "functionName": "test_uk3d_specified_drift",
    "className": null,
    "fileName": "/bsmurphy_&_PyKrige/tests_&_test_core.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "data, (gridx_ref, gridy_ref, gridz_ref), mask_ref = sample_data_3d\nzg, yg, xg = np.meshgrid(gridz_ref, gridy_ref, gridx_ref, indexing='ij')\nwith pytest.raises(ValueError):\n    UniversalKriging3D(data[:, (0)], data[:, (1)], data[:, (2)], data[:, (3\n        )], variogram_model='linear', drift_terms=['specified'])\nwith pytest.raises(TypeError):\n    UniversalKriging3D(data[:, (0)], data[:, (1)], data[:, (2)], data[:, (3\n        )], variogram_model='linear', drift_terms=['specified'],\n        specified_drift=data[:, (0)])\nwith pytest.raises(ValueError):\n    UniversalKriging3D(data[:, (0)], data[:, (1)], data[:, (2)], data[:, (3\n        )], variogram_model='linear', drift_terms=['specified'],\n        specified_drift=[data[:2, (0)]])\nuk_spec = UniversalKriging3D(data[:, (0)], data[:, (1)], data[:, (2)], data\n    [:, (3)], variogram_model='linear', drift_terms=['specified'],\n    specified_drift=[data[:, (0)], data[:, (1)], data[:, (2)]])\nwith pytest.raises(ValueError):\n    uk_spec.execute('grid', gridx_ref, gridy_ref, gridz_ref,\n        specified_drift_arrays=[gridx_ref, gridy_ref, gridz_ref])\nwith pytest.raises(TypeError):\n    uk_spec.execute('grid', gridx_ref, gridy_ref, gridz_ref,\n        specified_drift_arrays=gridx_ref)\nwith pytest.raises(ValueError):\n    uk_spec.execute('grid', gridx_ref, gridy_ref, gridz_ref,\n        specified_drift_arrays=[zg])\nz_spec, ss_spec = uk_spec.execute('grid', gridx_ref, gridy_ref, gridz_ref,\n    specified_drift_arrays=[xg, yg, zg])\nuk_lin = UniversalKriging3D(data[:, (0)], data[:, (1)], data[:, (2)], data[\n    :, (3)], variogram_model='linear', drift_terms=['regional_linear'])\nz_lin, ss_lin = uk_lin.execute('grid', gridx_ref, gridy_ref, gridz_ref)\nassert_allclose(z_spec, z_lin)\nassert_allclose(ss_spec, ss_lin)\n"
}