{
    "functionName": "test_optimization_process",
    "className": "TestOptimizeTSSpredator",
    "fileName": "/Sung-Huan_&_ANNOgesic/tests_&_test_optimize_TSSpredator.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "current_para = copy.deepcopy(self.example.ref_para)\nbest_ref_para = copy.deepcopy(self.example.best_para)\nlist_num = [best_ref_para]\nindexs = copy.deepcopy(self.example.indexs)\nbest_para = {'re_factor': 0.3, 'processing': 3.3, 'enrichment': 2.5,\n    'height': 0.6, 'base_height': 0.0, 're_height': 0.2, 'factor': 0.7}\nstat_out = StringIO()\noutput_prefix = ['test_1']\ngen_file(os.path.join(self.test_folder, 'manual.gff'), self.example.manual_file\n    )\nif not os.path.exists(os.path.join(self.test_folder, 'wigs')):\n    os.mkdir(os.path.join(self.test_folder, 'wigs'))\nwig_folder = os.path.join(self.test_folder, 'wigs', 'tmp')\nif not os.path.exists(wig_folder):\n    os.mkdir(wig_folder)\ngen_file(os.path.join(wig_folder,\n    'GSM1649587_Hp26695_ML_B1_HS1_-TEX_forward_STRAIN_aaa.wig'), 'test')\ngen_file(os.path.join(wig_folder,\n    'GSM1649587_Hp26695_ML_B1_HS1_-TEX_reverse_STRAIN_aaa.wig'), 'test')\ngen_file(os.path.join(wig_folder,\n    'GSM1649588_Hp26695_ML_B1_HS1_-TEX_forward_STRAIN_aaa.wig'), 'test')\ngen_file(os.path.join(wig_folder,\n    'GSM1649588_Hp26695_ML_B1_HS1_-TEX_reverse_STRAIN_aaa.wig'), 'test')\not.run_TSSpredator_paralle = Mock_func().mock_run_TSSpredator_paralle\not.convert2gff = Mock_func().mock_convert2gff\nargs = self.mock_args.mock()\nargs.libs = self.example.libs\nargs.cores = 1\nargs.cluster = 3\nargs.program = 'TSS'\nargs.project_strain = 'aaa'\nargs.replicate = 'all_1'\nargs.utr = 200\nargs.replicate_name = 'test'\nargs.steps = 2\nargs.tsspredator_path = 'test'\nargs.gene_length = 2000\nargs.manual = os.path.join(self.test_folder, 'manual.gff')\nlog = open(os.path.join(self.test_folder, 'test.log'), 'w')\not.optimization_process(indexs, current_para, list_num, self.example.\n    max_nums, best_para, self.test_folder, stat_out, self.example.best,\n    wig_folder, 'aaa.fa', 'aaa.gff', 2, True, args, 'aaa', self.example.\n    mans, 2000, log)\nself.assertDictEqual(best_para, {'re_height': 0.2, 'factor': 0.7,\n    'processing': 3.3, 'height': 0.6, 'base_height': 0.0, 're_factor': 0.3,\n    'enrichment': 2.5})\n"
}