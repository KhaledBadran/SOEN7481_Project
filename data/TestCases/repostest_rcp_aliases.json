{
    "functionName": "test_rcp_aliases",
    "className": null,
    "fileName": "/OMS-NetZero_&_FAIR/tests_&_reproduction_&_reproduction_test.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "C, F, T = fair.forward.fair_scm(emissions=rcp26.Emissions.emissions, b_aero\n    =np.array([-0.003529 * 1.3741 * molwt.SO2 / molwt.S, 0.0, -0.0005034 * \n    1.3741, -0.0005763 * 1.3741 * molwt.NO / molwt.N, 0.0453 * 1.3741, -\n    0.003783 * 1.3741, -0.001035 * 1.3741]), efficacy=np.ones(13))\ndatadir = os.path.join(os.path.dirname(__file__), 'rcp3pd/')\nC_expected = np.load(datadir + 'C.npy')\nF_expected = np.load(datadir + 'F.npy')\nT_expected = np.load(datadir + 'T.npy')\nassert np.allclose(C, C_expected)\nassert np.allclose(F, F_expected)\nassert np.allclose(T, T_expected)\nC, F, T = fair.forward.fair_scm(emissions=rcp60.Emissions.emissions, b_aero\n    =np.array([-0.003529 * 1.3741 * molwt.SO2 / molwt.S, 0.0, -0.0005034 * \n    1.3741, -0.0005763 * 1.3741 * molwt.NO / molwt.N, 0.0453 * 1.3741, -\n    0.003783 * 1.3741, -0.001035 * 1.3741]), efficacy=np.ones(13))\ndatadir = os.path.join(os.path.dirname(__file__), 'rcp6/')\nC_expected = np.load(datadir + 'C.npy')\nF_expected = np.load(datadir + 'F.npy')\nT_expected = np.load(datadir + 'T.npy')\nassert np.allclose(C, C_expected)\nassert np.allclose(F, F_expected)\nassert np.allclose(T, T_expected)\n"
}