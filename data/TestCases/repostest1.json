{
    "functionName": "test1",
    "className": "test_compute_xlylzl",
    "fileName": "/jonwright_&_ImageD11/test_&_test_cImageD11.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "pks = self.sc, self.fc\np = self.pars\ntesttilts = [-0.5, 0.0, 0.24]\ntilts = [(x, y, z) for x in testtilts for y in testtilts for z in testtilts]\npars = np.array((p.get('z_center'), p.get('y_center'), p.get('z_size'), p.\n    get('y_size')))\ndist = np.array((p.get('distance'), 0.0, 0.0))\nok = 0\nfor o11, o12, o21, o22 in [[1, 0, 0, 1], [-1, 0, 0, 1], [-1, 0, 0, -1], [1,\n    0, 0, -1], [0, 1, 1, 0], [0, -1, 1, 0], [0, -1, -1, 0], [0, 1, -1, 0]]:\n    for tx, ty, tz in tilts:\n        p.parameters['tilt_x'] = tx\n        p.parameters['tilt_y'] = ty\n        p.parameters['tilt_z'] = tz\n        p.parameters['o11'] = o11\n        p.parameters['o12'] = o12\n        p.parameters['o21'] = o21\n        p.parameters['o22'] = o22\n        xlylzl = transform.compute_xyz_lab(pks, **p.parameters)\n        dmat = transform.detector_rotation_matrix(p.get('tilt_x'), p.get(\n            'tilt_y'), p.get('tilt_z'))\n        fmat = np.array([[1, 0, 0], [0, p.get('o22'), p.get('o21')], [0, p.\n            get('o12'), p.get('o11')]])\n        r = np.dot(dmat, fmat)\n        outxyz = np.zeros((len(self.sc), 3), np.float)\n        cImageD11.compute_xlylzl(self.sc, self.fc, pars, r.ravel(), dist,\n            outxyz)\n        error = np.abs(outxyz - xlylzl.T)\n        self.assertTrue(error.max() < 1e-06)\n        ok += 1\nprint('tested xlylzl %d times' % ok)\n"
}