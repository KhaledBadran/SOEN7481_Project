{
    "functionName": "test_object_detection_yolov3",
    "className": null,
    "fileName": "/OlafenwaMoses_&_ImageAI/test_&_test_object_detection.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "detector = ObjectDetection()\ndetector.setModelTypeAsYOLOv3()\ndetector.setModelPath(os.path.join(main_folder, 'data-models', 'yolo.h5'))\ndetector.loadModel()\nresults = detector.detectObjectsFromImage(input_image=image_input,\n    output_image_path=image_output, minimum_percentage_probability=40)\nassert isinstance(results, list)\nfor result in results:\n    assert isinstance(result['name'], str)\n    assert isinstance(result['percentage_probability'], float)\n    assert isinstance(result['box_points'], list)\nassert os.path.exists(image_output)\nos.remove(image_output)\nresults2, extracted_paths = detector.detectObjectsFromImage(input_image=\n    image_input, output_image_path=image_output,\n    minimum_percentage_probability=40, extract_detected_objects=True)\nassert isinstance(results2, list)\nassert isinstance(extracted_paths, list)\nassert os.path.isdir(os.path.join(image_output + '-objects'))\nfor result2 in results2:\n    assert isinstance(result2['name'], str)\n    assert isinstance(result2['percentage_probability'], float)\n    assert isinstance(result2['box_points'], list)\nfor extracted_path in extracted_paths:\n    assert os.path.exists(extracted_path)\nshutil.rmtree(os.path.join(image_output + '-objects'))\npytest.mark.detectionpytest.mark.yolov3"
}