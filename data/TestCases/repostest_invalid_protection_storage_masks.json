{
    "functionName": "test_invalid_protection_storage_masks",
    "className": "TestProtectionStorageMasks",
    "fileName": "/OpenKMIP_&_PyKMIP/kmip_&_tests_&_unit_&_core_&_objects_&_test_objects.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Test that a TypeError is raised when an invalid value is used to set\n        the protection storage masks of a ProtectionStorageMasks structure.\n        \"\"\"\nkwargs = {'protection_storage_masks': 'invalid'}\nself.assertRaisesRegex(TypeError,\n    'The protection storage masks must be a list of integers representing combinations of ProtectionStorageMask enumerations.'\n    , objects.ProtectionStorageMasks, **kwargs)\nkwargs = {'protection_storage_masks': ['invalid']}\nself.assertRaisesRegex(TypeError,\n    'The protection storage masks must be a list of integers representing combinations of ProtectionStorageMask enumerations.'\n    , objects.ProtectionStorageMasks, **kwargs)\nkwargs = {'protection_storage_masks': [268435456]}\nself.assertRaisesRegex(TypeError,\n    'The protection storage masks must be a list of integers representing combinations of ProtectionStorageMask enumerations.'\n    , objects.ProtectionStorageMasks, **kwargs)\nargs = objects.ProtectionStorageMasks(), 'protection_storage_masks', 'invalid'\nself.assertRaisesRegex(TypeError,\n    'The protection storage masks must be a list of integers representing combinations of ProtectionStorageMask enumerations.'\n    , setattr, *args)\nargs = objects.ProtectionStorageMasks(), 'protection_storage_masks', ['invalid'\n    ]\nself.assertRaisesRegex(TypeError,\n    'The protection storage masks must be a list of integers representing combinations of ProtectionStorageMask enumerations.'\n    , setattr, *args)\nargs = objects.ProtectionStorageMasks(), 'protection_storage_masks', [268435456\n    ]\nself.assertRaisesRegex(TypeError,\n    'The protection storage masks must be a list of integers representing combinations of ProtectionStorageMask enumerations.'\n    , setattr, *args)\n"
}