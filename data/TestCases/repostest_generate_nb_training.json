{
    "functionName": "test_generate_nb_training",
    "className": "TestSystem",
    "fileName": "/SimGus_&_Chatette/tests_&_system-testing_&_test_system.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Tests templates that generate a subset of all possible examples\n        for each intent and that generate only training data.\n        \"\"\"\nfacade = ChatetteFacade.get_or_create()\ninput_dir_path = 'tests/system-testing/inputs/generate-nb/training-only/'\ninput_filenames = ['only-words.chatette', 'words-and-groups.chatette',\n    'alias.chatette', 'include.chatette', 'slot.chatette',\n    'bugfixes/bug-22-slot-position.chatette']\nfor filename in input_filenames:\n    file_path = os.path.join(input_dir_path, filename)\n    facade.run(file_path)\n    legal_examples = TestSystem.get_legal_examples(file_path)\n    for ex in facade.train_examples:\n        formatted_ex = {'intent': ex.intent_name, 'text': ex.text}\n        if formatted_ex not in legal_examples:\n            pytest.fail(str(formatted_ex) + \" is not a legal example for '\" +\n                file_path + \"'\")\n    legal_syn = TestSystem.get_legal_synonyms(file_path)\n    if legal_syn is not None:\n        synonyms = AST.get_or_create().get_entities_synonyms()\n        for key in synonyms:\n            if key not in legal_syn:\n                pytest.fail(\"'\" + key + \"' shouldn't have any synonyms.\")\n            for syn in synonyms[key]:\n                if syn not in legal_syn[key]:\n                    pytest.fail(\"'\" + syn + \"' shouldn't be a synonym of '\" +\n                        key + \"'\")\nfilename_zero = 'zero-ex.chatette'\nfile_path = os.path.join(input_dir_path, filename_zero)\nfacade.run(file_path)\nif len(facade.train_examples) != 0:\n    pytest.fail(\"When dealing with file 'zero-ex.chatette', no examples \" +\n        \"\"\"should be generated.\nGenerated: \"\"\" + str(facade.train_examples))\nfilename_one = 'one-ex.chatette'\nfile_path = os.path.join(input_dir_path, filename_one)\nfacade.run(file_path)\nprint('TRAIN EX: ' + str(facade.train_examples))\nif len(facade.train_examples) != 1:\n    pytest.fail(\"When dealing with file 'one-ex.chatette', one examples \" +\n        \"\"\"should be generated.\nGenerated: \"\"\" + str(facade.train_examples))\n"
}