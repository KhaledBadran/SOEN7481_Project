{
    "functionName": "test_resubmit",
    "className": "TestCase",
    "fileName": "/IntegralDefense_&_ACE/test_ace_api.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "result = self._submit(analysis_mode=ANALYSIS_MODE_CORRELATION)\nself.assertIsNotNone(result)\nself.assertTrue('result' in result)\nresult = result['result']\nself.assertIsNotNone(result['uuid'])\nuuid = result['uuid']\nroot = RootAnalysis(storage_dir=storage_dir_from_uuid(uuid))\nroot.load()\nself.assertEquals(root.analysis_mode, ANALYSIS_MODE_CORRELATION)\nself.assertEquals(root.tool, 'unittest_tool')\nself.assertEquals(root.tool_instance, 'unittest_tool_instance')\nself.assertEquals(root.alert_type, 'unittest_type')\nself.assertEquals(root.description, 'testing')\nself.assertEquals(root.details, {'hello': 'world'})\nself.assertEquals(root.event_time, self._get_localized_submit_time())\nself.assertEquals(root.tags[0].name, 'alert_tag_1')\nself.assertEquals(root.tags[1].name, 'alert_tag_2')\nself.assertEquals(len(root.all_observables), 4)\no = root.find_observable(lambda o: o.type == 'ipv4')\nself.assertIsNotNone(o)\nself.assertEquals(o.value, '1.2.3.4')\nself.assertEquals(len(o.tags), 2)\nself.assertTrue(o.has_directive('no_scan'))\nself.assertTrue('basic_test' in o.limited_analysis)\no = root.find_observable(lambda o: o.type == 'file' and o.value == 'sample.dat'\n    )\nself.assertIsNotNone(o)\nwith open(os.path.join(root.storage_dir, o.value), 'rb') as fp:\n    self.assertEquals(fp.read(), b'Hello, world!')\no = root.find_observable(lambda o: o.type == 'file' and o.value ==\n    'submit_test.dat')\nself.assertIsNotNone(o)\nself.assertEquals(os.path.getsize(os.path.join(root.storage_dir, o.value)),\n    1024)\nc.execute(\n    'SELECT id, uuid, node_id, analysis_mode FROM workload WHERE uuid = %s',\n    (uuid,))\nrow = c.fetchone()\nself.assertIsNotNone(row)\nself.assertIsNotNone(row[0])\nself.assertEquals(row[1], uuid)\nself.assertIsNotNone(row[2])\nself.assertEquals(row[3], ANALYSIS_MODE_CORRELATION)\nresult = ace_api.resubmit_alert(uuid)\nself.assertFalse('error' in result)\nuse_db"
}