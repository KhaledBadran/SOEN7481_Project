{
    "functionName": "test_scan_non_poiss",
    "className": null,
    "fileName": "/bsafdi_&_NPTFit/tests_&_test_scan.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "n = nptfit.NPTF(tag='Test_NPoiss')\nfermi_data = np.array([2, 1, 1, 1, 4, 10]).astype(np.int32)\nfermi_exposure = np.array([1.0, 1.0, 1.0, 2.0, 2.0, 2.0])\nn.load_data(fermi_data, fermi_exposure)\nanalysis_mask = np.array([False, False, False, False, False, True])\ndif = np.array([1.0, 2.0, 3.0, 4.0, 5.0, 6.0])\niso = np.array([1.0, 1.0, 1.0, 1.0, 1.0, 1.0])\nn.add_template(dif, 'dif')\nn.add_template(iso, 'iso')\nn.add_poiss_model('iso', '$A_\\\\mathrm{iso}$', False, fixed=True, fixed_norm\n    =1.47)\nn.add_non_poiss_model('iso', ['$A^\\\\mathrm{ps}_\\\\mathrm{iso}$', '$n_1$',\n    '$n_2$', '$S_b$'], [[-6, 1], [2.05, 30], [-2, 1.95]], [True, False, \n    False], fixed_params=[[3, 22.0]])\npc_inst = pc.PSFCorrection(psf_sigma_deg=0.1812)\nf_ary, df_rho_div_f_ary = pc_inst.f_ary, pc_inst.df_rho_div_f_ary\nn.configure_for_scan(f_ary=f_ary, df_rho_div_f_ary=df_rho_div_f_ary, nexp=1)\nn.perform_scan(nlive=50)\nn.load_scan()\nn.load_scan()\nn = nptfit.NPTF(tag='Test_NPoiss')\nn.load_data(fermi_data, fermi_exposure)\nn.add_template(iso, 'iso')\nn.add_non_poiss_model('iso', ['$A^\\\\mathrm{ps}_\\\\mathrm{iso}$', '$n_1$',\n    '$n_2$', '$S_{b1}$'], [[0, 1], [2.05, 2.5], [-2.0, -1.5], [1.0, 4.0]])\nn.configure_for_scan()\nn.perform_scan(nlive=50)\nn = nptfit.NPTF(tag='Test_NPoiss')\nn.load_data(fermi_data, fermi_exposure)\nn.add_template(iso, 'iso')\nn.add_non_poiss_model('iso', ['$A^\\\\mathrm{ps}_\\\\mathrm{iso}$', '$n_1$',\n    '$n_2$', '$S_{b1}$'], [[0, 1]], units='flux', fixed_params=[[1, 2.0], [\n    2, -2.0], [3, 100.0]])\nn.configure_for_scan(nexp=len(dif) + 1)\nn.perform_scan(nlive=50)\nn = nptfit.NPTF(tag='Test_NPoiss')\nn.load_data(fermi_data, fermi_exposure)\nn.add_template(iso, 'iso')\nn.add_non_poiss_model('iso', ['$A^\\\\mathrm{ps}_\\\\mathrm{iso}$', '$n_1$',\n    '$n_2$', '$n_3', '$S_{b1}$', '$S_{b2}$'], [[0, 1], [0, 10], [0, 1.0]],\n    units='flux', fixed_params=[[1, 2.0], [2, -2.0], [3, 1.0]], dnds_model=\n    'specify_relative_breaks')\nn.configure_for_scan()\nn.perform_scan(nlive=50)\nn = nptfit.NPTF(tag='Test_NPoiss')\nn.load_data(fermi_data, fermi_exposure)\nn.add_template(iso, 'iso')\nn.add_non_poiss_model('iso', ['$A^\\\\mathrm{ps}_\\\\mathrm{iso}$', '$n_1$',\n    '$n_2$', '$n_3', '$S_{b1}$', '$S_{b2}$'], [[0, 200]], units='flux',\n    fixed_params=[[0, 1.0], [1, 2.0], [2, 1.0], [3, -2], [5, 250]])\nn.configure_for_scan()\nn.perform_scan(nlive=50)\nn = nptfit.NPTF(tag='Test_NPoiss')\nn.load_data(fermi_data, fermi_exposure)\nn.add_template(iso, 'iso')\nn.add_non_poiss_model('iso', ['$A^\\\\mathrm{ps}_\\\\mathrm{iso}$', '$n_1$',\n    '$n_2$', '$n_3', '$S_{b1}$', '$S_{b2}$'], [[200, 400]], units='flux',\n    dnds_model='specify_relative_breaks', fixed_params=[[0, 1.0], [1, 2.0],\n    [2, 1.0], [3, -2], [4, 150]])\nn.configure_for_scan()\nn.perform_scan(nlive=50)\nn = nptfit.NPTF(tag='Test_NPoiss')\nn.load_data(fermi_data, fermi_exposure)\nn.add_template(iso, 'iso')\nn.add_non_poiss_model('iso', ['$A^\\\\mathrm{ps}_\\\\mathrm{iso}$', '$n_1$',\n    '$n_2$', '$n_3', '$S_{b1}$', '$S_{b2}$'], [[0.0, 1.0]], [True], units=\n    'flux', fixed_params=[[0, 1.0], [1, 2.0], [2, 1.0], [3, -2], [5, 250]])\nn.configure_for_scan()\nn.perform_scan(nlive=50)\nn = nptfit.NPTF(tag='Test_NPoiss')\nn.load_data(fermi_data, fermi_exposure)\nn.add_template(iso, 'iso')\nn.add_non_poiss_model('iso', ['$A^\\\\mathrm{ps}_\\\\mathrm{iso}$', '$n_1$',\n    '$n_2$', '$n_3', '$S_{b1}$', '$S_{b2}$'], [[0.1, 1]], [True], units=\n    'flux', dnds_model='specify_relative_breaks', fixed_params=[[0, 1.0], [\n    1, 2.0], [2, 1.0], [3, -2], [4, 150]])\nn.configure_for_scan()\nn.perform_scan(nlive=50)\nn = nptfit.NPTF(tag='Test_NPoiss')\nn.load_data(fermi_data, fermi_exposure)\nn.add_template(iso, 'iso')\nn.add_template(dif, 'dif')\nn.add_non_poiss_model('iso', ['$A^\\\\mathrm{ps}_\\\\mathrm{iso}$', '$n_1$',\n    '$n_2$', '$S_{b1}$'], [[0, 1]], units='flux', fixed_params=[[1, 2.0], [\n    2, -2.0], [3, 100.0]])\nn.add_non_poiss_model('dif', ['$A^\\\\mathrm{ps}_\\\\mathrm{iso}$', '$n_1$',\n    '$n_2$', '$S_{b1}$'], [[0, 1]], units='flux', fixed_params=[[1, 2.0], [\n    2, -2.0], [3, 100.0]])\nn.configure_for_scan()\nn.perform_scan(nlive=50)\n"
}