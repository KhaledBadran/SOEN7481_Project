{
    "functionName": "test_change_password",
    "className": "TestSearch",
    "fileName": "/Keeper-Security_&_Commander/unit-tests_&_test_api.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "params = get_connected_params()\nwith mock.patch('keepercommander.rest_api.get_new_user_params'\n    ) as m_params, mock.patch('builtins.print'), mock.patch('getpass.getpass'\n    ) as m_getpass:\n    user_params = proto.NewUserMinimumParams()\n    user_params.minimumIterations = 1000\n    user_params.passwordMatchRegex.extend(['^(?=(.*[A-Z]){1,}).*$',\n        '^(?=(.*[0-9]){2,}).*$', '.{6,}'])\n    user_params.passwordMatchDescription.extend([\n        'Contains at least 1 uppercase character(s)',\n        'Contains at least 2 digit(s)', 'At least 6 character(s)'])\n    m_params.return_value = user_params\n    m_getpass.return_value = '1New2Password3'\n    KeeperApiHelper.communicate_expect(['change_master_password'])\n    self.assertTrue(api.change_master_password(params))\n    self.assertTrue(KeeperApiHelper.is_expect_empty())\n"
}