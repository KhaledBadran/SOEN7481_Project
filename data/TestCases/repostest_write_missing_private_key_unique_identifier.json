{
    "functionName": "test_write_missing_private_key_unique_identifier",
    "className": "TestCreateKeyPairResponsePayload",
    "fileName": "/OpenKMIP_&_PyKMIP/kmip_&_tests_&_unit_&_core_&_messages_&_payloads_&_test_create_key_pair.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Test that an InvalidField error is raised during the encoding of a\n        CreateKeyPair response payload when the payload is missing the private\n        key unique identifier.\n        \"\"\"\npayload = payloads.CreateKeyPairResponsePayload(public_key_unique_identifier\n    ='79c0eb55-d020-43de-b72f-5e18c862647c', private_key_template_attribute\n    =objects.TemplateAttribute(attributes=[objects.Attribute(attribute_name\n    =objects.Attribute.AttributeName('State'), attribute_value=primitives.\n    Enumeration(enums.State, value=enums.State.PRE_ACTIVE, tag=enums.Tags.\n    STATE))], tag=enums.Tags.PRIVATE_KEY_TEMPLATE_ATTRIBUTE),\n    public_key_template_attribute=objects.TemplateAttribute(attributes=[\n    objects.Attribute(attribute_name=objects.Attribute.AttributeName(\n    'State'), attribute_value=primitives.Enumeration(enums.State, value=\n    enums.State.PRE_ACTIVE, tag=enums.Tags.STATE))], tag=enums.Tags.\n    PUBLIC_KEY_TEMPLATE_ATTRIBUTE))\nstream = utils.BytearrayStream()\nargs = stream,\nself.assertRaisesRegex(exceptions.InvalidField,\n    'The CreateKeyPair response payload is missing the private key unique identifier field.'\n    , payload.write, *args)\n"
}