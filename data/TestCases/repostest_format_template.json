{
    "functionName": "test_format_template",
    "className": null,
    "fileName": "/alex-ber_&_AlexBerUtils/tests_&_utils_&_ymlparsers_extra_test.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "logger.info(f'{request._pyfuncitem.name}()')\nuconvert_mock = mocker.patch(\n    'alexber.utils._ymlparsers_extra._convert_template_to_string_format',\n    side_effect=_convert_template_to_string_format, autospec=True, spec_set\n    =True)\nexp_value = 'Hello, John!'\ntemplate = 'Hello, {{name}}!'\nvalue = format_template(template, name='John')\npytest.assume(exp_value == value)\npytest.assume(uconvert_mock.call_count > 0)\n"
}