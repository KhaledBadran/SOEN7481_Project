{
    "functionName": "test_encode_and_decode",
    "className": "TestSchedule",
    "fileName": "/named-data_&_PyNDN2/tests_&_unit_tests_&_test_schedule.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "schedule = Schedule()\ninterval1 = RepetitiveInterval(fromIsoString('20150825T000000'),\n    fromIsoString('20150828T000000'), 5, 10, 2, RepetitiveInterval.\n    RepeatUnit.DAY)\ninterval2 = RepetitiveInterval(fromIsoString('20150825T000000'),\n    fromIsoString('20150828T000000'), 6, 8, 1, RepetitiveInterval.\n    RepeatUnit.DAY)\ninterval3 = RepetitiveInterval(fromIsoString('20150827T000000'),\n    fromIsoString('20150827T000000'), 7, 8)\ninterval4 = RepetitiveInterval(fromIsoString('20150825T000000'),\n    fromIsoString('20150825T000000'), 4, 7)\nschedule.addWhiteInterval(interval1)\nschedule.addWhiteInterval(interval2)\nschedule.addWhiteInterval(interval4)\nschedule.addBlackInterval(interval3)\nencoding = schedule.wireEncode()\nencoding2 = Blob(SCHEDULE, False)\nself.assertTrue(encoding.equals(encoding2))\nschedule2 = Schedule()\nschedule2.wireDecode(encoding)\ntimePoint1 = fromIsoString('20150825T063000')\nresult = schedule.getCoveringInterval(timePoint1)\nself.assertEqual(result.isPositive, True)\nself.assertEqual(toIsoString(result.interval.getStartTime()), '20150825T040000'\n    )\nself.assertEqual(toIsoString(result.interval.getEndTime()), '20150825T100000')\ntimePoint2 = fromIsoString('20150826T073000')\nresult = schedule.getCoveringInterval(timePoint2)\nself.assertEqual(result.isPositive, True)\nself.assertEqual(toIsoString(result.interval.getStartTime()), '20150826T060000'\n    )\nself.assertEqual(toIsoString(result.interval.getEndTime()), '20150826T080000')\n"
}