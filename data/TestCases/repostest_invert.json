{
    "functionName": "test_invert",
    "className": "TestModel",
    "fileName": "/goodmami_&_penman/tests_&_test_model.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "m = Model()\nassert m.invert(('a', ':ARG0', 'b')) == ('b', ':ARG0-of', 'a')\nassert m.invert(('a', ':ARG0-of', 'b')) == ('b', ':ARG0', 'a')\nassert m.invert(('a', ':consist-of', 'b')) == ('b', ':consist', 'a')\nassert m.invert(('a', ':mod', 'b')) == ('b', ':mod-of', 'a')\nassert m.invert(('a', ':domain', 'b')) == ('b', ':domain-of', 'a')\nm = Model.from_dict(mini_amr)\nassert m.invert(('a', ':ARG0', 'b')) == ('b', ':ARG0-of', 'a')\nassert m.invert(('a', ':ARG0-of', 'b')) == ('b', ':ARG0', 'a')\nassert m.invert(('a', ':consist-of', 'b')) == ('b', ':consist-of-of', 'a')\nassert m.invert(('a', ':mod', 'b')) == ('b', ':mod-of', 'a')\nassert m.invert(('a', ':domain', 'b')) == ('b', ':domain-of', 'a')\n"
}