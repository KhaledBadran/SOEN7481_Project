{
    "functionName": "test_gaunine_enumeration",
    "className": null,
    "fileName": "/mcs07_&_MolVS/tests_&_test_tautomer.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Gaunine tautomers\"\"\"\nassert enumerate_tautomers_smiles('N1C(N)=NC=2N=CNC2C1=O') == {\n    'N=c1[nH]c(=O)c2[nH]cnc2[nH]1', 'N=c1[nH]c(=O)c2nc[nH]c2[nH]1',\n    'N=c1[nH]c2ncnc-2c(O)[nH]1', 'N=c1nc(O)c2[nH]cnc2[nH]1',\n    'N=c1nc(O)c2nc[nH]c2[nH]1', 'N=c1nc2[nH]cnc2c(O)[nH]1',\n    'N=c1nc2nc[nH]c2c(O)[nH]1', 'Nc1nc(=O)c2[nH]cnc2[nH]1',\n    'Nc1nc(=O)c2nc[nH]c2[nH]1', 'Nc1nc(O)c2[nH]cnc2n1',\n    'Nc1nc(O)c2nc[nH]c2n1', 'Nc1nc(O)c2ncnc-2[nH]1',\n    'Nc1nc2[nH]cnc2c(=O)[nH]1', 'Nc1nc2nc[nH]c2c(=O)[nH]1',\n    'Nc1nc2ncnc-2c(O)[nH]1'}\n"
}