{
    "functionName": "test_matrix_min",
    "className": "TestNeuralPooling",
    "fileName": "/apmoore1_&_Bella/tests_&_test_neural_pooling.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Tests :py:func:`bella.neural_pooling.matrix_min`\n        \"\"\"\nnum_cor = np.asarray([1, 2, 3, 4], dtype=np.float32).reshape(1, 4)\nminus_cor = np.asarray([-1, -6, 3, 4], dtype=np.float32).reshape(1, 4)\nfloat_cor = np.asarray([-1, -0.6], dtype=np.float32).reshape(1, 2)\nnum_out = matrix_min(self.num_array)\nminus_out = matrix_min(self.minus_num_array)\nfloat_out = matrix_min(self.float_array)\nself.assertEqual(True, np.array_equal(num_cor, num_out), msg=\n    'Cannot handle basic numbers: real out {} correct values {}'.format(\n    num_out, num_cor))\nself.assertEqual(True, np.array_equal(minus_cor, minus_out), msg=\n    'Cannot handle negatives')\nself.assertEqual(True, np.array_equal(float_cor, float_out), msg=\n    'Cannot handle float values')\n"
}