{
    "functionName": "test_column_transformer_fit_should_support_multiple_tuples",
    "className": null,
    "fileName": "/Neuraxio_&_Neuraxle/testing_&_steps_&_test_column_transformer.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "test_case = ColumnChooserTestCase(data_inputs=np.array([[1, 1, 2, 3], [10, \n    11, 12, 13], [20, 21, 22, 23]]), expected_outputs=np.array([[0, 1, 2, 3\n    ], [10, 11, 12, 13], [20, 21, 22, 23]]), expected_processed_outputs=np.\n    array([[2, 2, 2, 3], [20, 22, 12, 13], [40, 42, 44, 46]]),\n    column_transformer_tuple_list=[(slice(0, 2), MultiplyBy2()), (2,\n    MultiplyBy2())], n_dimension=3)\ndata_inputs = test_case.data_inputs\np = ColumnTransformer(test_case.column_transformer_tuple_list)\np = p.fit(data_inputs, test_case.expected_outputs)\nactual_fitted_data = p['2_MultiplyBy2']['MultiplyBy2'].fitted_data\nexpected_fitted_data = [([[2], [12], [22]], [[0, 1, 2, 3], [10, 11, 12, 13],\n    [20, 21, 22, 23]])]\nassert_data_fitted_properly(actual_fitted_data, expected_fitted_data)\nactual_fitted_data = p['slice(0, 2, None)_MultiplyBy2']['MultiplyBy2'\n    ].fitted_data\nexpected_fitted_data = [([[1, 1], [10, 11], [20, 21]], [[0, 1, 2, 3], [10, \n    11, 12, 13], [20, 21, 22, 23]])]\nassert_data_fitted_properly(actual_fitted_data, expected_fitted_data)\n"
}