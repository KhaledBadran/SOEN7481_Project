{
    "functionName": "test_check_type_compat",
    "className": null,
    "fileName": "/CCampJr_&_LazyHDF5/lazy5_&_tests_&_test_nonh5utils.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\" Test check_type_compat[ibility] \"\"\"\nassert check_type_compat(1, 2)\nassert check_type_compat(1.1, 2.1)\nassert check_type_compat(1.1 + 1.0j * 3, 2.1 + 1.0j * 8)\nassert check_type_compat('Test', 'Test2')\nassert check_type_compat(b'Test', b'Test2')\nassert check_type_compat(True, False)\nassert check_type_compat(1, np.int32(2))\nassert check_type_compat(1.1, np.float32(2.1))\nassert check_type_compat(1.1 + 1.0j * 3, np.complex64(2.1 + 1.0j * 8))\nassert check_type_compat('Test', np.str_('Test2'))\nassert check_type_compat(b'Test', np.bytes_('Test2'))\nassert check_type_compat(True, np.bool_(False))\nassert not check_type_compat(1, 2.1)\nassert not check_type_compat(1.1, 2)\nassert not check_type_compat(1.1 + 1.0j * 3, 2.1)\nassert not check_type_compat('Test', 1)\nassert not check_type_compat('Test', b'Test2')\nassert not check_type_compat(True, 1)\nassert not check_type_compat(1.1, np.int32(2))\nassert not check_type_compat(1, np.float32(2.1))\nassert not check_type_compat(1, np.complex64(2.1 + 1.0j * 8))\nassert not check_type_compat(1, np.str_('Test2'))\nassert not check_type_compat('Test', np.bytes_('Test2'))\nassert not check_type_compat(1, np.bool_(False))\n"
}