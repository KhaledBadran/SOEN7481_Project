{
    "functionName": "configureProxy",
    "className": null,
    "fileName": "/FaradayRF_&_Faraday-Software/faraday_&_proxy.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"\n    Configure proxy configuration file from command line\n\n    :param args: argparse arguments\n    :return: None\n    \"\"\"\nconfig = ConfigParser.RawConfigParser()\nconfig.read(os.path.join(faradayHelper.path, configFile))\nunit = 'UNIT' + str(args.unit)\nif args.unit is not 0:\n    try:\n        config.add_section(unit)\n    except ConfigParser.DuplicateSectionError:\n        pass\nif args.callsign is not None:\n    config.set(unit, 'CALLSIGN', args.callsign)\nif args.nodeid is not None:\n    config.set(unit, 'NODEID', args.nodeid)\nif args.port is not None:\n    config.set(unit, 'COM', args.port)\nif args.baudrate:\n    config.set(unit, 'BAUDRATE', args.baudrate)\nif args.timeout:\n    config.set(unit, 'TIMEOUT', args.timeout)\nif args.number is not 0:\n    config.set('PROXY', 'units', args.number)\nif args.log:\n    config.set('PROXY', 'log', 1)\nelse:\n    config.set('PROXY', 'log', 0)\nif args.testmode:\n    config.set('PROXY', 'testmode', 1)\nelse:\n    config.set('PROXY', 'testmode', 0)\nif args.testcallsign is not None:\n    config.set('PROXY', 'testcallsign', args.testcallsign)\nif args.testnodeid is not None:\n    config.set('PROXY', 'testnodeid', args.testnodeid)\nif args.testrate:\n    config.set('PROXY', 'testrate', args.testrate)\nif args.payloadsize:\n    config.set('PROXY', 'payloadsize', args.payloadsize)\nif args.database is not None:\n    config.set('DATABASE', 'filename', args.database)\nif args.schema is not None:\n    config.set('DATABASE', 'schemaname', args.schema)\nif args.testdatabase is not None:\n    config.set('TESTDATABASE', 'filename', args.testdatabase)\nif args.flaskhost is not None:\n    config.set('FLASK', 'host', args.flaskhost)\nif args.flaskport is not None:\n    config.set('FLASK', 'port', args.flaskport)\nfilename = os.path.join(faradayHelper.path, configFile)\nwith open(filename, 'wb') as configfile:\n    config.write(configfile)\n"
}