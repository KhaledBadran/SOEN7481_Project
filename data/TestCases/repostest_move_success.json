{
    "functionName": "test_move_success",
    "className": "TestFolder",
    "fileName": "/Keeper-Security_&_Commander/unit-tests_&_test_command_folder.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "params = get_synced_params()\ncmd = folder.FolderMoveCommand()\nuser_folder = next(iter([x for x in params.folder_cache.values() if x.type ==\n    'user_folder']))\nshared_folder = next(iter([x for x in params.folder_cache.values() if x.\n    type == 'shared_folder']))\nroot_record_uid = next(iter(params.subfolder_record_cache['']))\nsf_record_uid = next(iter(params.subfolder_record_cache[shared_folder.uid]))\nKeeperApiHelper.communicate_expect(['move'])\ncmd.execute(params, src=root_record_uid, dst=user_folder.uid)\nself.assertTrue(KeeperApiHelper.is_expect_empty())\nKeeperApiHelper.communicate_expect(['move'])\ncmd.execute(params, src=sf_record_uid, dst=user_folder.name)\nself.assertTrue(KeeperApiHelper.is_expect_empty())\nKeeperApiHelper.communicate_expect(['move'])\ncmd.execute(params, src=root_record_uid, dst=user_folder.uid)\nself.assertTrue(KeeperApiHelper.is_expect_empty())\n"
}