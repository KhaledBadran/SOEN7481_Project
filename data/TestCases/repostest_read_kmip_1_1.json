{
    "functionName": "test_read_kmip_1_1",
    "className": "TestQueryResponsePayload",
    "fileName": "/OpenKMIP_&_PyKMIP/kmip_&_tests_&_unit_&_core_&_messages_&_payloads_&_test_query.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Test that a QueryResponsePayload structure can be correctly read in\n        from a data stream with KMIP 1.1 features.\n        \"\"\"\npayload = payloads.QueryResponsePayload()\nself.assertIsNone(payload.operations)\nself.assertIsNone(payload.object_types)\nself.assertIsNone(payload.vendor_identification)\nself.assertIsNone(payload.server_information)\nself.assertIsNone(payload.application_namespaces)\nself.assertIsNone(payload.extension_information)\npayload.read(self.full_encoding_kmip_1_1, kmip_version=enums.KMIPVersion.\n    KMIP_1_1)\nself.assertEqual([enums.Operation.CREATE, enums.Operation.CREATE_KEY_PAIR,\n    enums.Operation.REGISTER, enums.Operation.REKEY, enums.Operation.\n    CERTIFY, enums.Operation.RECERTIFY, enums.Operation.LOCATE, enums.\n    Operation.CHECK, enums.Operation.GET, enums.Operation.GET_ATTRIBUTES,\n    enums.Operation.GET_ATTRIBUTE_LIST, enums.Operation.ADD_ATTRIBUTE,\n    enums.Operation.MODIFY_ATTRIBUTE, enums.Operation.DELETE_ATTRIBUTE,\n    enums.Operation.OBTAIN_LEASE, enums.Operation.GET_USAGE_ALLOCATION,\n    enums.Operation.ACTIVATE, enums.Operation.REVOKE, enums.Operation.\n    DESTROY, enums.Operation.ARCHIVE, enums.Operation.RECOVER, enums.\n    Operation.QUERY, enums.Operation.CANCEL, enums.Operation.POLL, enums.\n    Operation.REKEY_KEY_PAIR, enums.Operation.DISCOVER_VERSIONS], payload.\n    operations)\nself.assertEqual([enums.ObjectType.CERTIFICATE, enums.ObjectType.\n    SYMMETRIC_KEY, enums.ObjectType.PUBLIC_KEY, enums.ObjectType.\n    PRIVATE_KEY, enums.ObjectType.TEMPLATE, enums.ObjectType.SECRET_DATA],\n    payload.object_types)\nself.assertEqual('IBM test server, not-TKLM 2.0.1.1 KMIP 2.0.0.1', payload.\n    vendor_identification)\nself.assertEqual(misc.ServerInformation(), payload.server_information)\nself.assertEqual(['Namespace 1', 'Namespace 2'], payload.application_namespaces\n    )\nself.assertEqual([objects.ExtensionInformation(extension_name=objects.\n    ExtensionName('ACME LOCATION'), extension_tag=objects.ExtensionTag(\n    5548545), extension_type=objects.ExtensionType(7)), objects.\n    ExtensionInformation(extension_name=objects.ExtensionName(\n    'ACME ZIP CODE'), extension_tag=objects.ExtensionTag(5548546),\n    extension_type=objects.ExtensionType(2))], payload.extension_information)\n"
}