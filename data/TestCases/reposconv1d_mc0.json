{
    "functionName": "conv1d_mc0",
    "className": null,
    "fileName": "/Lasagne_&_Lasagne/lasagne_&_theano_extensions_&_conv.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"\n    using conv2d with width == 1\n    \"\"\"\nif image_shape is None:\n    image_shape_mc0 = None\nelse:\n    image_shape_mc0 = image_shape[0], image_shape[1], 1, image_shape[2]\nif filter_shape is None:\n    filter_shape_mc0 = None\nelse:\n    filter_shape_mc0 = filter_shape[0], filter_shape[1], 1, filter_shape[2]\nif isinstance(border_mode, tuple):\n    border_mode, = border_mode\nif isinstance(border_mode, int_types):\n    border_mode = 0, border_mode\ninput_mc0 = input.dimshuffle(0, 1, 'x', 2)\nfilters_mc0 = filters.dimshuffle(0, 1, 'x', 2)\nextra_kwargs = {'num_groups': num_groups} if num_groups > 1 else {}\nconved = T.nnet.conv2d(input_mc0, filters_mc0, image_shape_mc0,\n    filter_shape_mc0, subsample=(1, subsample[0]), border_mode=border_mode,\n    filter_flip=filter_flip, **extra_kwargs)\nreturn conved[:, :, (0), :]\n"
}