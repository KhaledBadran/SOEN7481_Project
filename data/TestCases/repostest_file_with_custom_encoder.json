{
    "functionName": "test_file_with_custom_encoder",
    "className": "TestGenerator",
    "fileName": "/BciPy_&_BciPy/bcipy_&_acquisition_&_tests_&_datastream_&_test_generator.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Should allow a custom encoder\"\"\"\ncol_count = 3\nrow_count = 100\nheader = ['col1,col2,col3']\ndata = [[float(cnum + rnum) for cnum in range(col_count)] for rnum in range\n    (row_count)]\nrows = map(lambda x: ','.join(map(str, x)), data)\ntest_data = '\\n'.join(header + rows)\nwith patch('bcipy.acquisition.datastream.generator.open', mock_open(\n    read_data=test_data), create=True):\n    gen = file_data(filename='foo', header_row=1, encoder=CustomEncoder())\n    generated_data = [next(gen) for _ in range(row_count)]\n    for _count, record in generated_data:\n        self.assertEqual(len(record), col_count)\n    self.assertEqual(generated_data[0][0], 1)\n    self.assertEqual(generated_data[99][0], 100)\n"
}