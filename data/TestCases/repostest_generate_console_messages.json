{
    "functionName": "test_generate_console_messages",
    "className": null,
    "fileName": "/bio-phys_&_MDBenchmark/mdbenchmark_&_tests_&_test_generate.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Test that the CLI for generate prints all error messages as expected.\"\"\"\nwith tmpdir.as_cwd():\n    monkeypatch.setattr('mdbenchmark.mdengines.get_available_modules', lambda :\n        {'gromacs': ['2016']})\n    result = cli_runner.invoke(cli, ['generate', '--module=gromacs/2016',\n        '--host=draco', '--yes'])\n    output = \"\"\"Usage: cli generate [OPTIONS]\n\nError: Invalid value for \"-n\" / \"--name\": Please specifiy the name of your input files.\"\"\"\n    result = cli_runner.invoke(cli, ['generate', '--module=gromacs/2016',\n        '--host=draco', '--name=md', '--yes'])\n    output = (\n        'ERROR File md.tpr does not exist, but is needed for GROMACS benchmarks.\\n'\n        )\n    assert result.exit_code == 1\n    assert result.output == output\n    with open('protein.tpr', 'w') as fh:\n        fh.write('This is a dummy tpr!')\n    result = cli_runner.invoke(cli, ['generate', '--module=gromacs/2016',\n        '--host=draco', '--name=protein', '--min-nodes=6', '--max-nodes=4',\n        '--yes'])\n    output = \"\"\"Usage: cli generate [OPTIONS]\n\nError: Invalid value for \"--min-nodes\": The minimal number of nodes needs to be smaller than the maximal number.\n\"\"\"\n    assert result.exit_code == 2\n    assert result.output == output\n    result = cli_runner.invoke(cli, ['generate', '--module=gromacs/2016',\n        '--host=minerva', '--name=protein', '--yes'])\n    output = \"\"\"Could not find template for host 'minerva'.\nAvailable host templates:\ncobra\ndraco\nhydra\n\"\"\"\n    assert result.exit_code == 0\n    assert result.output == output\n    result = cli_runner.invoke(cli, ['generate', '--host=draco',\n        '--name=protein', '--yes'])\n    output = \"\"\"Usage: cli generate [OPTIONS]\n\nError: Invalid value for \"-m\" / \"--module\": Please specify which MD engine module to use for the benchmarks.\n\"\"\"\n    assert result.exit_code == 2\n    assert result.output == output\n"
}