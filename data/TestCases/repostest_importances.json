{
    "functionName": "test_importances",
    "className": "ArrayModelBridgeTest",
    "fileName": "/facebook_&_Ax/ax_&_modelbridge_&_tests_&_test_array_modelbridge.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "exp = Experiment(search_space=get_search_space_for_range_value(), name='test')\nmodelbridge = ArrayModelBridge(search_space=\n    get_search_space_for_range_value(), model=NumpyModel(), transforms=[t1,\n    t2], experiment=exp, data=Data())\nmodelbridge.outcomes = ['a', 'b']\nself.assertEqual(modelbridge.feature_importances('a'), {'x': [1.0]})\nself.assertEqual(modelbridge.feature_importances('b'), {'x': [2.0]})\npatch(f'{ModelBridge.__module__}.observations_from_data', autospec=True,\n    return_value=[get_observation1()])patch(f'{ModelBridge.__module__}.unwrap_observation_data', autospec=True,\n    return_value=(2, 2))patch(f'{ModelBridge.__module__}.gen_arms', autospec=True, return_value=[\n    Arm(parameters={})])patch(f'{ModelBridge.__module__}.ModelBridge.predict', autospec=True,\n    return_value=({'m': [1.0]}, {'m': {'m': [2.0]}}))patch(f'{ModelBridge.__module__}.ModelBridge._fit', autospec=True)patch(f'{NumpyModel.__module__}.NumpyModel.feature_importances',\n    return_value=np.array([[[1.0]], [[2.0]]]), autospec=True)"
}