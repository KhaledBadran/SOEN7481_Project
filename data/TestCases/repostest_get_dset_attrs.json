{
    "functionName": "test_get_dset_attrs",
    "className": null,
    "fileName": "/CCampJr_&_LazyHDF5/lazy5_&_tests_&_test_inspect.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\" Get an HDF5 file's dataset list with groupnames prepended\"\"\"\nfilename, fid = hdf_dataset\ndset_attrs = get_attrs_dset(fid, 'base', convert_to_str=False)\nassert dset_attrs['Attribute_str'] == 'Test'\nassert dset_attrs['Attribute_bytes'] == b'Test'\nassert dset_attrs['Attribute_np_bytes'] == b'Test'\nassert np.allclose(dset_attrs['Attribute_np_bytes_inarray'] == b'Test', True)\nassert np.allclose(dset_attrs['Attribute_np_bytes_inarray2'] == b'Test', True)\nassert dset_attrs['Attribute_int'] == 1\nassert dset_attrs['Attribute_float'] == 1.1\nassert np.allclose(dset_attrs['Attribute_np_1d'], np.array([1, 2, 3]))\nassert np.allclose(dset_attrs['Attribute_np_2d'], np.array([[1, 2, 3], [4, \n    5, 6]]))\nassert dset_attrs['Attribute_np_sgl_int'] == np.array([1])\nassert dset_attrs['Attribute_np_sgl_float'] == np.array([1.0])\nassert dset_attrs['Attribute_np_sgl_complex'] == np.array([1.0 + 1.0j])\nassert_array_almost_equal(dset_attrs['Attribute_np_array_float'], np.array(\n    [1.0, 2.0]))\ndset_attrs = get_attrs_dset(fid, 'base', convert_to_str=True)\nassert dset_attrs['Attribute_str'] == 'Test'\nassert dset_attrs['Attribute_bytes'] == 'Test'\nassert dset_attrs['Attribute_np_bytes'] == 'Test'\nassert np.allclose(dset_attrs['Attribute_np_bytes_inarray'] == 'Test', True)\nassert np.allclose(dset_attrs['Attribute_np_bytes_inarray2'] == 'Test', True)\nassert dset_attrs['Attribute_int'] == 1\nassert dset_attrs['Attribute_float'] == 1.1\nassert np.allclose(dset_attrs['Attribute_np_1d'], np.array([1, 2, 3]))\nassert np.allclose(dset_attrs['Attribute_np_2d'], np.array([[1, 2, 3], [4, \n    5, 6]]))\nassert dset_attrs['Attribute_np_sgl_int'] == np.array([1])\nassert dset_attrs['Attribute_np_sgl_float'] == np.array([1.0])\nassert dset_attrs['Attribute_np_sgl_complex'] == np.array([1.0 + 1.0j])\nassert_array_almost_equal(dset_attrs['Attribute_np_array_float'], np.array(\n    [1.0, 2.0]))\ndset_attrs = get_attrs_dset(filename, 'base', convert_to_str=False)\nassert dset_attrs['Attribute_str'] == 'Test'\nassert dset_attrs['Attribute_bytes'] == b'Test'\nassert dset_attrs['Attribute_np_bytes'] == b'Test'\nassert np.allclose(dset_attrs['Attribute_np_bytes_inarray'] == b'Test', True)\nassert np.allclose(dset_attrs['Attribute_np_bytes_inarray2'] == b'Test', True)\nassert dset_attrs['Attribute_int'] == 1\nassert dset_attrs['Attribute_float'] == 1.1\nassert np.allclose(dset_attrs['Attribute_np_1d'], np.array([1, 2, 3]))\nassert np.allclose(dset_attrs['Attribute_np_2d'], np.array([[1, 2, 3], [4, \n    5, 6]]))\nassert dset_attrs['Attribute_np_sgl_int'] == np.array([1])\nassert dset_attrs['Attribute_np_sgl_float'] == np.array([1.0])\nassert dset_attrs['Attribute_np_sgl_complex'] == np.array([1.0 + 1.0j])\nassert_array_almost_equal(dset_attrs['Attribute_np_array_float'], np.array(\n    [1.0, 2.0]))\ndset_attrs = get_attrs_dset(filename, 'base', convert_to_str=True)\nassert dset_attrs['Attribute_str'] == 'Test'\nassert dset_attrs['Attribute_bytes'] == 'Test'\nassert dset_attrs['Attribute_np_bytes'] == 'Test'\nassert np.allclose(dset_attrs['Attribute_np_bytes_inarray'] == 'Test', True)\nassert np.allclose(dset_attrs['Attribute_np_bytes_inarray2'] == 'Test', True)\nassert dset_attrs['Attribute_int'] == 1\nassert dset_attrs['Attribute_float'] == 1.1\nassert np.allclose(dset_attrs['Attribute_np_1d'], np.array([1, 2, 3]))\nassert np.allclose(dset_attrs['Attribute_np_2d'], np.array([[1, 2, 3], [4, \n    5, 6]]))\nassert dset_attrs['Attribute_np_sgl_int'] == np.array([1])\nassert dset_attrs['Attribute_np_sgl_float'] == np.array([1.0])\nassert dset_attrs['Attribute_np_sgl_complex'] == np.array([1.0 + 1.0j])\nassert_array_almost_equal(dset_attrs['Attribute_np_array_float'], np.array(\n    [1.0, 2.0]))\ndset_attrs = get_attrs_dset(filename, 'base', convert_sgl_np_to_num=True)\nassert dset_attrs['Attribute_np_sgl_int'] == 1\nassert isinstance(dset_attrs['Attribute_np_sgl_int'], int)\nassert not isinstance(dset_attrs['Attribute_np_sgl_int'], np.ndarray)\nassert dset_attrs['Attribute_np_sgl_float'] == 1.0\nassert isinstance(dset_attrs['Attribute_np_sgl_float'], float)\nassert not isinstance(dset_attrs['Attribute_np_sgl_float'], np.ndarray)\nassert dset_attrs['Attribute_np_sgl_complex'] == 1.0 + 1.0j\nassert isinstance(dset_attrs['Attribute_np_sgl_complex'], complex)\nassert not isinstance(dset_attrs['Attribute_np_sgl_complex'], np.ndarray)\nassert_array_almost_equal(dset_attrs['Attribute_np_array_float'], np.array(\n    [1.0, 2.0]))\nassert isinstance(dset_attrs['Attribute_np_array_float'], np.ndarray)\ndset_attrs = get_attrs_dset(filename, 'base', convert_sgl_np_to_num=False)\nassert dset_attrs['Attribute_np_sgl_int'] == 1\nassert not isinstance(dset_attrs['Attribute_np_sgl_int'], int)\nassert isinstance(dset_attrs['Attribute_np_sgl_int'], np.ndarray)\nassert dset_attrs['Attribute_np_sgl_float'] == 1.0\nassert not isinstance(dset_attrs['Attribute_np_sgl_float'], float)\nassert isinstance(dset_attrs['Attribute_np_sgl_float'], np.ndarray)\nassert dset_attrs['Attribute_np_sgl_complex'] == 1.0 + 1.0j\nassert not isinstance(dset_attrs['Attribute_np_sgl_complex'], complex)\nassert isinstance(dset_attrs['Attribute_np_sgl_complex'], np.ndarray)\nassert_array_almost_equal(dset_attrs['Attribute_np_array_float'], np.array(\n    [1.0, 2.0]))\nassert isinstance(dset_attrs['Attribute_np_array_float'], np.ndarray)\n"
}