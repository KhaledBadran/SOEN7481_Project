{
    "functionName": "test_limited_records",
    "className": "TestValidationPolicyCommandInterest",
    "fileName": "/named-data_&_PyNDN2/tests_&_integration_tests_&_test_validation_policy_command_interest.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "self._fixture = ValidationPolicyCommandInterestFixture(\n    ValidationPolicyCommandInterest.Options(15 * 1000.0, 3))\nidentity1 = self._fixture.addSubCertificate(Name(\n    '/Security/V2/ValidatorFixture/Sub1'), self._fixture._identity)\nself._fixture._cache.insert(identity1.getDefaultKey().getDefaultCertificate())\nidentity2 = self._fixture.addSubCertificate(Name(\n    '/Security/V2/ValidatorFixture/Sub2'), self._fixture._identity)\nself._fixture._cache.insert(identity2.getDefaultKey().getDefaultCertificate())\nidentity3 = self._fixture.addSubCertificate(Name(\n    '/Security/V2/ValidatorFixture/Sub3'), self._fixture._identity)\nself._fixture._cache.insert(identity3.getDefaultKey().getDefaultCertificate())\nidentity4 = self._fixture.addSubCertificate(Name(\n    '/Security/V2/ValidatorFixture/Sub4'), self._fixture._identity)\nself._fixture._cache.insert(identity4.getDefaultKey().getDefaultCertificate())\ninterest1 = self._fixture.makeCommandInterest(identity2)\ninterest2 = self._fixture.makeCommandInterest(identity3)\ninterest3 = self._fixture.makeCommandInterest(identity4)\ninterest00 = self._fixture.makeCommandInterest(identity1)\nself._fixture.setNowOffsetMilliseconds(1 * 1000.0)\ninterest01 = self._fixture.makeCommandInterest(identity1)\nself._fixture.setNowOffsetMilliseconds(2 * 1000.0)\ninterest02 = self._fixture.makeCommandInterest(identity1)\nself.validateExpectSuccess(interest00, 'Should succeed')\nself.validateExpectSuccess(interest02, 'Should succeed')\nself.validateExpectSuccess(interest1, 'Should succeed')\nself.validateExpectSuccess(interest2, 'Should succeed')\nself.validateExpectSuccess(interest3, 'Should succeed, forgets identity1')\nself.validateExpectSuccess(interest01,\n    'Should succeed despite timestamp is reordered, because the record has been evicted'\n    )\n"
}