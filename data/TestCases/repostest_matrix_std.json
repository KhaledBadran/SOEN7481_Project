{
    "functionName": "test_matrix_std",
    "className": "TestNeuralPooling",
    "fileName": "/apmoore1_&_Bella/tests_&_test_neural_pooling.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Tests :py:func:`bella.neural_pooling.matrix_std`\n        \"\"\"\nnum_array = np.asarray([[1, 2], [5, 6], [9, 10]], dtype=np.float32)\nstd_array = np.asarray([[1, 2, 3, 4]], dtype=np.float32)\nnum_out = matrix_std(num_array)\nstd_out = matrix_std(std_array)\nnum_cor = np.asarray([3.265986323710904, 3.265986323710904], dtype=np.float32\n    ).reshape(1, 2)\nstd_corr = np.asarray([0, 0, 0, 0], dtype=np.float32).reshape(1, 4)\nself.assertEqual(True, np.array_equal(num_cor, num_out), msg=\n    'Cannot handle basic numbers: real out {} correct values {}'.format(\n    num_out, num_cor))\nself.assertEqual(True, np.array_equal(std_corr, std_out), msg=\n    'Cannot handle vectors: real out {} correct values {}'.format(std_out,\n    std_corr))\n"
}