{
    "functionName": "test_gen_recordings_far_neurons",
    "className": "TestGenerators",
    "fileName": "/alejoe91_&_MEArec/MEArec_&_tests_&_test_generators.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "print('Test recording generation - far neurons')\nne = 0\nni = 0\nnum_chan = self.num_chan\nn_neurons = ne + ni\nrec_params = mr.get_default_recordings_params()\nrec_params['spiketrains']['n_exc'] = ne\nrec_params['spiketrains']['n_inh'] = ni\nrec_params['spiketrains']['duration'] = 3\nn_jitter = 3\nrec_params['templates']['n_jitters'] = n_jitter\nrec_params['templates']['min_dist'] = 1\nrec_params['recordings']['modulation'] = 'none'\nrec_params['recordings']['noise_mode'] = 'far-neurons'\nrec_params['recordings']['far_neurons_n'] = 10\nrec_params['recordings']['far_neurons_max_amp'] = 100\nrec_params['recordings']['far_neurons_exc_inh_ratio'] = 0.8\nnoise_level = 20\nrec_params['recordings']['noise_level'] = noise_level\nrec_params['recordings']['filter'] = False\nrecgen_noise = mr.gen_recordings(params=rec_params, tempgen=self.tempgen,\n    verbose=False)\nassert recgen_noise.recordings.shape[0] == num_chan\nassert recgen_noise.channel_positions.shape == (num_chan, 3)\nassert len(recgen_noise.spiketrains) == n_neurons\nassert len(recgen_noise.spiketrains) == n_neurons\nassert len(recgen_noise.spiketrains) == n_neurons\nassert len(recgen_noise.spike_traces) == n_neurons\nassert np.isclose(np.std(recgen_noise.recordings), noise_level, atol=1)\ndel recgen_noise\nrec_params['recordings']['chunk_duration'] = 1\nrecgen_noise = mr.gen_recordings(params=rec_params, tempgen=self.tempgen,\n    verbose=False)\nassert recgen_noise.recordings.shape[0] == num_chan\nassert recgen_noise.channel_positions.shape == (num_chan, 3)\nassert len(recgen_noise.spiketrains) == n_neurons\nassert len(recgen_noise.spiketrains) == n_neurons\nassert len(recgen_noise.spiketrains) == n_neurons\nassert len(recgen_noise.spike_traces) == n_neurons\nassert np.isclose(np.std(recgen_noise.recordings), noise_level, atol=1)\ndel recgen_noise\n"
}