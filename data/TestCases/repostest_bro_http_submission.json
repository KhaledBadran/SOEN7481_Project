{
    "functionName": "test_bro_http_submission",
    "className": "TestCase",
    "fileName": "/IntegralDefense_&_ACE/lib_&_saq_&_modules_&_test_http.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "saq.CONFIG['analysis_mode_http']['cleanup'] = 'no'\nfrom flask import url_for\nfrom saq.analysis import _JSONEncoder\nfrom saq.modules.email import EmailAnalysis\nt = saq.LOCAL_TIMEZONE.localize(datetime.datetime.now()).astimezone(pytz.UTC\n    ).strftime(event_time_format_json_tz)\nready_fp = open(os.path.join('test_data', 'http_streams',\n    'CZZiJd1zicZKNMMrV1.0.ready'), 'rb')\nreply_fp = open(os.path.join('test_data', 'http_streams',\n    'CZZiJd1zicZKNMMrV1.0.reply'), 'rb')\nreply_entity_fp = open(os.path.join('test_data', 'http_streams',\n    'CZZiJd1zicZKNMMrV1.0.reply.entity'), 'rb')\nrequest_fp = open(os.path.join('test_data', 'http_streams',\n    'CZZiJd1zicZKNMMrV1.0.request'), 'rb')\nresult = self.client.post(url_for('analysis.submit'), data={'analysis':\n    json.dumps({'analysis_mode': ANALYSIS_MODE_HTTP, 'tool': 'unittest',\n    'tool_instance': 'unittest_instance', 'type': ANALYSIS_TYPE_BRO_HTTP,\n    'description': 'BRO HTTP Scanner Detection - {}'.format(\n    'CZZiJd1zicZKNMMrV1.0'), 'event_time': t, 'details': {}, 'observables':\n    [{'type': F_FILE, 'value': 'CZZiJd1zicZKNMMrV1.0.ready'}, {'type':\n    F_FILE, 'value': 'CZZiJd1zicZKNMMrV1.0.reply'}, {'type': F_FILE,\n    'value': 'CZZiJd1zicZKNMMrV1.0.reply.entity'}, {'type': F_FILE, 'value':\n    'CZZiJd1zicZKNMMrV1.0.request'}], 'tags': []}, cls=_JSONEncoder),\n    'file': [(ready_fp, 'CZZiJd1zicZKNMMrV1.0.ready'), (reply_fp,\n    'CZZiJd1zicZKNMMrV1.0.reply'), (reply_entity_fp,\n    'CZZiJd1zicZKNMMrV1.0.reply.entity'), (request_fp,\n    'CZZiJd1zicZKNMMrV1.0.request')]}, content_type='multipart/form-data')\nready_fp.close()\nreply_fp.close()\nreply_entity_fp.close()\nrequest_fp.close()\nresult = result.get_json()\nself.assertIsNotNone(result)\nself.assertTrue('result' in result)\nresult = result['result']\nself.assertIsNotNone(result['uuid'])\nuuid = result['uuid']\nengine = TestEngine(analysis_pools={ANALYSIS_MODE_HTTP: 1},\n    local_analysis_modes=[ANALYSIS_MODE_HTTP])\nengine.enable_module('analysis_module_bro_http_analyzer', ANALYSIS_MODE_HTTP)\nengine.controlled_stop()\nengine.start()\nengine.wait()\nroot = RootAnalysis(storage_dir=workload_storage_dir(uuid))\nroot.load()\nself.verify(root)\n"
}