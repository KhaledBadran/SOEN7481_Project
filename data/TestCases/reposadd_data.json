{
    "functionName": "add_data",
    "className": "_Hemisphere",
    "fileName": "/nipy_&_PySurfer/surfer_&_viz.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"Add data to the brain\"\"\"\nif array.ndim == 1:\n    array_plot = array\nelif array.ndim == 2:\n    array_plot = array[:, (0)]\nelif array.ndim == 3:\n    assert array.shape[1] == 3\n    assert magnitude is not None\n    assert scale_factor is not None\n    array_plot = magnitude[:, (0)]\nelse:\n    raise ValueError('data has to be 1D, 2D, or 3D')\nif smooth_mat is not None:\n    array_plot = smooth_mat * array_plot\narray_plot = _prepare_data(array_plot)\narray_id, pipe = self._add_scalar_data(array_plot)\nif array.ndim == 3:\n    vectors = array[:, :, (0)].copy()\n    glyphs = self._add_vector_data(vectors, fmin, fmid, fmax, scale_factor,\n        vertices, vector_alpha, lut)\nelse:\n    glyphs = None\nmesh = pipe.parent\nif thresh is not None:\n    if array_plot.min() >= thresh:\n        warn('Data min is greater than threshold.')\n    else:\n        with warnings.catch_warnings(record=True):\n            pipe = threshold_filter(pipe, low=thresh, figure=self._f)\nwith warnings.catch_warnings(record=True):\n    surf = mlab.pipeline.surface(pipe, colormap=colormap, vmin=fmin, vmax=\n        fmax, opacity=float(alpha), figure=self._f, reset_zoom=False, **kwargs)\n    surf.actor.property.backface_culling = False\n    if float(alpha) == 1:\n        surf.actor.actor.force_opaque = True\nif lut is not None:\n    l_m = surf.module_manager.scalar_lut_manager\n    l_m.load_lut_from_list(lut / 255.0)\norig_ctable = surf.module_manager.scalar_lut_manager.lut.table.to_array().copy(\n    )\nif colorbar:\n    bar = mlab.scalarbar(surf)\n    bar.label_text_property.color = self._fg_color\n    bar.scalar_bar_representation.position2 = 0.8, 0.09\nelse:\n    bar = None\nself.data[layer_id] = dict(array_id=array_id, mesh=mesh, glyphs=glyphs,\n    scale_factor=scale_factor)\nreturn surf, orig_ctable, bar, glyphs\nverbose"
}