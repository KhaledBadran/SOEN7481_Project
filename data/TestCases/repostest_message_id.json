{
    "functionName": "test_message_id",
    "className": "TestCase",
    "fileName": "/IntegralDefense_&_ACE/lib_&_saq_&_modules_&_test_email.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "root = create_root_analysis(uuid=str(uuid.uuid4()), alert_type='mailbox')\nroot.initialize_storage()\nshutil.copy(os.path.join('test_data', 'emails',\n    'extra_message_id.email.rfc822'), os.path.join(root.storage_dir,\n    'email.rfc822'))\nfile_observable = root.add_observable(F_FILE, 'email.rfc822')\nfile_observable.add_directive(DIRECTIVE_ORIGINAL_EMAIL)\nroot.save()\nroot.schedule()\nengine = TestEngine()\nengine.enable_module('analysis_module_file_type', 'test_groups')\nengine.enable_module('analysis_module_email_analyzer', 'test_groups')\nengine.controlled_stop()\nengine.start()\nengine.wait()\nroot.load()\nfrom saq.modules.email import EmailAnalysis\nfile_observable = root.get_observable(file_observable.id)\nself.assertIsNotNone(file_observable)\nemail_analysis = file_observable.get_analysis(EmailAnalysis)\nself.assertIsNotNone(email_analysis)\nmessage_id = email_analysis.get_observables_by_type(F_MESSAGE_ID)\nself.assertTrue(isinstance(message_id, list) and len(message_id) > 0)\nmessage_id = message_id[0]\nself.assertEquals(message_id.value,\n    '<MW2PR16MB224997B938FB40AA00214DACA8590@MW2PR16MB2249.namprd16.prod.outlook.com>'\n    )\n"
}