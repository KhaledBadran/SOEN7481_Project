{
    "functionName": "helper_test_create_first_account",
    "className": "UITestCase",
    "fileName": "/AndreMiras_&_EtherollApp/src_&_etherollapp_&_tests_&_ui_&_test_etheroll_ui.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"Creates the first account.\"\"\"\ncontroller = app.root\naccount_utils = controller.account_utils\nscreen_manager = controller.screen_manager\nscreen_manager.current = 'switch_account_screen'\nadvance_frames_for_screen()\ndialogs = Dialog.dialogs\nself.assertEqual(len(dialogs), 1)\ndialog = dialogs[0]\nself.assertEqual(dialog.title, 'No account found')\ndialog.dismiss()\nswitch_account_screen = controller.switch_account_screen\ncreate_new_account = switch_account_screen.ids.create_new_account_id\nnew_password1_id = create_new_account.ids.new_password1_id\nnew_password2_id = create_new_account.ids.new_password2_id\ncreate_account_button_id = create_new_account.ids.create_account_button_id\nnew_password1_id.text = new_password2_id.text = 'password'\nthreads = threading.enumerate()\nself.assertEqual(len(threads), 2, threads[-1]._target)\nmain_thread = threads[0]\nself.assertEqual(type(main_thread), threading._MainThread)\nwith patch_fetch_update_balance() as m_fetch_update_balance:\n    create_account_button_id.dispatch('on_release')\n    threads = threading.enumerate()\n    self.assertEqual(len(threads), 3)\n    self.assertEqual(type(main_thread), threading._MainThread)\n    create_account_thread = threads[2]\n    self.assertTrue('function CreateNewAccount.create_account' in str(\n        create_account_thread._target))\n    create_account_thread.join()\nassert m_fetch_update_balance.call_args_list == [mock.call()]\nthreads = threading.enumerate()\nself.assertEqual(len(threads), 2)\nmain_thread = threads[0]\nself.assertEqual(type(main_thread), threading._MainThread)\nself.assertEqual(len(account_utils.get_account_list()), 1)\nadvance_frames_for_screen()\nself.assertEqual(controller.screen_manager.current, 'roll_screen')\nself.assertEqual(controller.current_account, account_utils.get_account_list\n    ()[0])\nself.join_threads()\ndialogs = Dialog.dialogs\nself.assertEqual(len(dialogs), 1)\ndialog = dialogs[0]\nself.assertEqual(dialog.title, 'Account created, redirecting...')\ndialog.dismiss()\nself.assertEqual(len(dialogs), 0)\n"
}