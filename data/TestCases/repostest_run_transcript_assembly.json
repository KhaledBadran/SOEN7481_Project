{
    "functionName": "test_run_transcript_assembly",
    "className": "TestsTranscriptAssembly",
    "fileName": "/Sung-Huan_&_ANNOgesic/tests_&_test_transcript.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "tr.stat_ta_tss = self.mock.mock_stat_ta_tss\ntr.stat_ta_gff = self.mock.mock_stat_ta_gff\ntr.longer_ta = self.mock.mock_longer_ta\ntr.fill_gap = self.mock.mock_fill_gap\ntr.combine = self.mock.mock_combine\npre_assembly = tr.detect_transcript\ntr.assembly = self.mock.mock_assembly\ntr.gen_table_transcript = self.mock.mock_gen_table_tran\ngen_file(os.path.join(self.frag, 'tmp/test1_forward.wig'), self.example.wig_f)\ngen_file(os.path.join(self.frag, 'tmp/test1_reverse.wig'), self.example.wig_r)\ngen_file(os.path.join(self.gffs, 'test.gff'), self.example.gff_file)\ngen_file(os.path.join(self.tsss, 'test_TSS.gff'), self.example.tss_file)\ngen_file(os.path.join(self.terms, 'test_term.gff'), self.example.term_file)\ngen_file('test_folder/output/test1_fragment', self.example.tran_file)\ngff_out = os.path.join(self.out, 'gffs')\ngen_file(os.path.join(gff_out, 'test_transcript_assembly_fragment.gff'),\n    self.example.tran_file)\ngen_file(os.path.join(gff_out, 'tmp_uni'), self.example.tran_file)\ngen_file(os.path.join(gff_out, 'tmp_overlap'), self.example.tran_file)\ngen_file(os.path.join(gff_out, 'final_test'), self.example.tran_file)\nargs = self.mock_args.mock()\nargs.out_folder = self.out\nargs.frag_wigs = self.frag\nargs.tex_wigs = None\nargs.flibs = 'flibs'\nargs.tlibs = 'tlibs'\nargs.gffs = self.gffs\nargs.terms = None\nargs.compare_tss = None\nargs.c_feature = None\nargs.fuzzy_term = 1\nargs.max_dist = 2000\nargs.modify = 'merge_overlap'\nlog = open(os.path.join(self.test_folder, 'test.log'), 'w')\nself.tran.run_transcript(args, log)\ntr.assembly = pre_assembly\n"
}