{
    "functionName": "test_create_storage_group_no_slo_no_compression_name_full_allocate",
    "className": "PyU4VProvisioningTest",
    "fileName": "/MichaelMcAleer_&_PyU4V/PyU4V_&_tests_&_unit_tests_&_test_pyu4v_provisioning.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Test create_storage_group no slo set.\"\"\"\nwith mock.patch.object(self.provisioning, 'create_resource') as mock_create:\n    self.provisioning.create_storage_group(self.data.srp, 'new-sg', self.\n        data.slo, 'None', do_disable_compression=True, vol_name=self.data.\n        device_id, allocate_full=True)\n    payload = {'srpId': self.data.srp, 'storageGroupId': 'new-sg',\n        'emulation': 'FBA', 'sloBasedStorageGroupParam': [{'sloId': self.\n        data.slo, 'workloadSelection': 'None', 'noCompression': 'true',\n        'allocate_capacity_for_each_vol': 'true',\n        'persist_preallocated_capacity_through_reclaim_or_copy': 'true',\n        'volumeAttributes': [{'num_of_vols': 0, 'volume_size': '0',\n        'capacityUnit': 'GB', 'volumeIdentifier': {'identifier_name': self.\n        data.device_id, 'volumeIdentifierChoice': 'identifier_name'}}]}]}\n    mock_create.assert_called_once_with(category='sloprovisioning',\n        resource_level='symmetrix', resource_level_id=self.data.array,\n        resource_type='storagegroup', payload=payload)\n"
}