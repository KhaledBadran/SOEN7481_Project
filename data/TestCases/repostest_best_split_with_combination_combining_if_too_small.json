{
    "functionName": "test_best_split_with_combination_combining_if_too_small",
    "className": null,
    "fileName": "/Rambatino_&_CHAID/tests_&_test_tree.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n    Test passing in a perfect split data, with a single catagory merges needed\n    \"\"\"\narr = np.array([1] * 5 + [2] * 10)\norig_arr = arr.copy()\nndarr = np.array([1, 2, 3] * 5 + [2, 2, 3] * 3 + [3, 2, 3] * 5 + [1, 2, 3] * 2\n    ).reshape(15, 3)\norig_ndarr = ndarr.copy()\ntree = CHAID.Tree.from_numpy(ndarr, arr, min_child_node_size=5, alpha_merge\n    =0.055)\nsplit = tree.generate_best_split(tree.vectorised_array, tree.observed)\nassert list_ordered_equal(ndarr, orig_ndarr\n    ), 'Calling chaid should have no side affects for original numpy arrays'\nassert list_ordered_equal(arr, orig_arr\n    ), 'Calling chaid should have no side affects for original numpy arrays'\nassert split.column_id == 0, 'Identifies correct column to split on'\nassert list_unordered_equal(split.split_map, [[1], [2, 3]]\n    ), 'Correctly identifies categories'\nassert list_unordered_equal(split.surrogates, []\n    ), 'No surrogates should be generated'\nassert split.p < 0.055\n"
}