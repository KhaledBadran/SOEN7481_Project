{
    "functionName": "test_find_and_prior_sources",
    "className": null,
    "fileName": "/PaulHancock_&_Aegean/tests_&_test_source_finder.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Test find sources and prior sources\"\"\"\nlog = logging.getLogger('Aegean')\nsfinder = sf.SourceFinder(log=log)\nfilename = 'tests/test_files/synthetic_test.fits'\nnsrc = 98\nnisl = 97\nntot = nsrc + nisl\nfound = sfinder.find_sources_in_image(filename, cores=1, rms=0.5, bkg=0)\nif not len(found) == nsrc:\n    raise AssertionError('Found the wrong number of sources {0}'.format(len\n        (found)))\nfound = sfinder.find_sources_in_image(filename, cores=1, max_summits=0, rms\n    =0.5, bkg=0)\nif not len(found) == nsrc:\n    raise AssertionError('Found the wrong number of sources {0}'.format(len\n        (found)))\naux_files = sf.get_aux_files(filename)\nfound2 = sfinder.find_sources_in_image(filename, doislandflux=True, outfile\n    =open('dlme', 'w'), nonegative=False, rmsin=aux_files['rms'], bkgin=\n    aux_files['bkg'], mask=aux_files['mask'], cores=1, docov=False)\nif not len(found2) == ntot:\n    raise AssertionError('Found the wrong number of sources {0}'.format(len\n        (found2)))\nisle1 = found2[1]\nif not isle1.int_flux > 0:\n    raise AssertionError()\nif not isle1.max_angular_size > 0:\n    raise AssertionError()\nif not os.path.exists('dlme'):\n    raise AssertionError()\nos.remove('dlme')\ncores = 2\npriorized = sfinder.priorized_fit_islands(filename, catalogue=found,\n    doregroup=False, ratio=1.2, cores=cores, rmsin=aux_files['rms'], bkgin=\n    aux_files['bkg'], docov=False)\nif not len(priorized) == nsrc:\n    raise AssertionError('Found the wrong number of sources {0}'.format(len\n        (priorized)))\npriorized = sfinder.priorized_fit_islands(filename, catalogue=found,\n    doregroup=True, cores=1, rmsin=aux_files['rms'], bkgin=aux_files['bkg'],\n    outfile=open('dlme', 'w'), stage=1)\nif not len(priorized) == nsrc:\n    raise AssertionError('Found the wrong number of sources {0}'.format(len\n        (priorized)))\nif not len(sfinder.priorized_fit_islands(filename, catalogue=[])) == 0:\n    raise AssertionError()\nif not os.path.exists('dlme'):\n    raise AssertionError('Failed to creat outputfile')\nos.remove('dlme')\n"
}