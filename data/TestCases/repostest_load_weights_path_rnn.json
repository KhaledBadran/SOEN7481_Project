{
    "functionName": "test_load_weights_path_rnn",
    "className": null,
    "fileName": "/dbehrlich_&_PsychRNN/test_&_backend_&_test_rnn.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "params = get_params()\npd1 = PerceptualDiscrimination(dt=params['dt'], tau=params['tau'], T=2000,\n    N_batch=params['N_batch'])\ngen1 = pd1.batch_generator()\nmocker.patch.object(RNN, 'forward_pass')\nRNN.forward_pass.return_value = tf.fill([params['N_batch'], params[\n    'N_steps'], params['N_out']], float('nan')), tf.fill([params['N_batch'],\n    params['N_steps'], params['N_rec']], float('nan'))\nrnn = RNN(params)\nrnn.build()\ntrain_params = {}\ntrain_params['save_weights_path'] = str(tmpdir.dirpath('save_weights.npz'))\ntrain_params['verbosity'] = False\nassert not tmpdir.dirpath('save_weights.npz').check(exists=1)\nrnn.train(gen1, train_params)\nassert rnn.is_initialized is True\nout, _ = capfd.readouterr()\nprint(out)\nassert out == ''\nassert tmpdir.dirpath('save_weights.npz').check(exists=1)\nrnn.destruct()\nparams['load_weights_path'] = 'nonexistent'\nwith pytest.raises(EnvironmentError) as excinfo:\n    rnn = RNN(params)\nassert 'No such file' in str(excinfo.value)\nrnn.destruct()\nparams['load_weights_path'] = str(tmpdir.dirpath('save_weights.npz'))\nrnn = RNN(params)\ntmpdir.dirpath('save_weights.npz').remove()\npatch.object(RNN, '__abstractmethods__', set())"
}