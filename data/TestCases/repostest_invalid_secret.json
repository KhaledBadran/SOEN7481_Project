{
    "functionName": "test_invalid_secret",
    "className": "TestGetResponsePayload",
    "fileName": "/OpenKMIP_&_PyKMIP/kmip_&_tests_&_unit_&_core_&_messages_&_payloads_&_test_get.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Test that a TypeError is raised when an invalid value is used to set\n        the secret of a GetResponsePayload struct.\n        \"\"\"\nkwargs = {'secret': 0}\nself.assertRaisesRegex(TypeError,\n    'Secret must be one of the following structs: Certificate, OpaqueObject, PrivateKey, PublicKey, SecretData, SplitKey, SymmetricKey, Template'\n    , payloads.GetResponsePayload, **kwargs)\nargs = payloads.GetResponsePayload(), 'secret', 0\nself.assertRaisesRegex(TypeError,\n    'Secret must be one of the following structs: Certificate, OpaqueObject, PrivateKey, PublicKey, SecretData, SplitKey, SymmetricKey, Template'\n    , setattr, *args)\n"
}