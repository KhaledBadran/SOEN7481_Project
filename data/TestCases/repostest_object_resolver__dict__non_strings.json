{
    "functionName": "test_object_resolver__dict__non_strings",
    "className": null,
    "fileName": "/fabioz_&_PyDev.Debugger/tests_python_&_test_resolvers.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "from _pydevd_bundle.pydevd_resolver import DefaultResolver\ndefault_resolver = DefaultResolver()\nclass MyObject(object):\n\n    def __init__(self):\n        self.__dict__[1, 2] = 3, 4\nobj = MyObject()\ndictionary = clear_contents_dictionary(default_resolver.get_dictionary(obj))\nif IS_PY2:\n    assert 'attribute name must be string' in dictionary.pop('(1, 2)')\n    assert dictionary == {}\nelse:\n    assert dictionary == {'(1, 2)': (3, 4)}\ncontents_debug_adapter_protocol = clear_contents_debug_adapter_protocol(\n    default_resolver.get_contents_debug_adapter_protocol(obj))\nif IS_PY2:\n    assert len(contents_debug_adapter_protocol) == 1\n    entry = contents_debug_adapter_protocol[0]\n    assert entry[0] == '(1, 2)'\n    assert 'attribute name must be string' in entry[1]\n    assert entry[2] == '.(1, 2)'\nelse:\n    assert contents_debug_adapter_protocol == [('(1, 2)', (3, 4),\n        '.__dict__[(1, 2)]')]\n"
}