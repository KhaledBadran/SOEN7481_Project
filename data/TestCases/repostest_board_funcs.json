{
    "functionName": "test_board_funcs",
    "className": "TestExecutor",
    "fileName": "/anselmrothe_&_EIG/test_&_test_executor.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "question = Parser.parse('(== (color 1-1) Blue)')\nexecutor = Executor(question)\nself.assertTrue(executor.execute(self.hypothesis1))\nself.assertFalse(executor.execute(self.empty_hypothesis))\nquestion = Parser.parse('(== (orient Red) (orient Blue))')\nexecutor = Executor(question)\nself.assertFalse(executor.execute(self.hypothesis1))\nself.assertTrue(executor.execute(self.hypothesis2))\nquestion = Parser.parse('(touch Blue Red)')\nexecutor = Executor(question)\nself.assertTrue(executor.execute(self.hypothesis1))\nself.assertTrue(executor.execute(self.hypothesis2))\nself.assertFalse(executor.execute(self.hypothesis3))\nquestion = Parser.parse('(== (size Blue) 3)')\nexecutor = Executor(question)\nself.assertTrue(executor.execute(self.hypothesis1))\nself.assertFalse(executor.execute(self.hypothesis3))\nquestion = Parser.parse('(bottomright (coloredTiles Red))')\nexecutor = Executor(question)\nself.assertEqual(executor.execute(self.hypothesis1), (0, 2))\nself.assertEqual(executor.execute(self.hypothesis3), (2, 2))\n"
}