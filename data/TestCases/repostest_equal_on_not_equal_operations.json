{
    "functionName": "test_equal_on_not_equal_operations",
    "className": "TestQueryResponsePayload",
    "fileName": "/OpenKMIP_&_PyKMIP/kmip_&_tests_&_unit_&_core_&_messages_&_payloads_&_test_query.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Test that the equality operator returns False when comparing two\n        QueryResponsePayload structures with different operations fields.\n        \"\"\"\na = payloads.QueryResponsePayload(operations=[enums.Operation.CREATE, enums\n    .Operation.CREATE_KEY_PAIR, enums.Operation.REGISTER, enums.Operation.\n    REKEY, enums.Operation.CERTIFY, enums.Operation.RECERTIFY, enums.\n    Operation.LOCATE, enums.Operation.CHECK, enums.Operation.GET, enums.\n    Operation.GET_ATTRIBUTES, enums.Operation.GET_ATTRIBUTE_LIST, enums.\n    Operation.ADD_ATTRIBUTE, enums.Operation.MODIFY_ATTRIBUTE, enums.\n    Operation.DELETE_ATTRIBUTE, enums.Operation.OBTAIN_LEASE, enums.\n    Operation.GET_USAGE_ALLOCATION, enums.Operation.ACTIVATE, enums.\n    Operation.REVOKE, enums.Operation.DESTROY, enums.Operation.ARCHIVE,\n    enums.Operation.RECOVER, enums.Operation.QUERY, enums.Operation.CANCEL,\n    enums.Operation.POLL, enums.Operation.REKEY_KEY_PAIR, enums.Operation.\n    DISCOVER_VERSIONS])\nb = payloads.QueryResponsePayload(operations=[enums.Operation.CREATE, enums\n    .Operation.CREATE_KEY_PAIR, enums.Operation.REGISTER, enums.Operation.\n    REKEY, enums.Operation.CERTIFY, enums.Operation.RECERTIFY, enums.\n    Operation.LOCATE, enums.Operation.CHECK, enums.Operation.GET, enums.\n    Operation.GET_ATTRIBUTES, enums.Operation.GET_ATTRIBUTE_LIST, enums.\n    Operation.ADD_ATTRIBUTE])\nself.assertFalse(a == b)\nself.assertFalse(b == a)\n"
}