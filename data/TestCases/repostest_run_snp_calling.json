{
    "functionName": "test_run_snp_calling",
    "className": "TestSNPCalling",
    "fileName": "/Sung-Huan_&_ANNOgesic/tests_&_test_snp.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "self.snp._get_header = self.mock.mock_get_header\nself.snp._run_bam = self.mock.mock_run_bam\nself.snp._run_sub = self.mock.mock_run_sub\nself.snp._run_tools = self.mock.mock_run_tools\nself.snp._transcript_snp = self.mock.mock_transcript_snp\ngen_file(os.path.join(self.fasta, 'test.fa'),\n    \"\"\">AAA|BBB|CCC|DDD|EEE\nAATTAATTGGCC\"\"\")\ngen_file(os.path.join(self.test_folder, 'header'), self.example.bam)\ngen_file(os.path.join(self.test_folder, 'whole_reads.bam'), 'test')\ngen_file(os.path.join(self.test_folder, 'whole_reads_sorted.bam'), 'test')\ngen_file(os.path.join(self.test_folder, 'tmp_bcf'), 'test')\ngen_file(os.path.join(self.fasta, 'all.fa.fai'), 'test')\nargs = self.mock_args.mock()\nargs.types = 'reference'\nargs.program = ['with_BAQ']\nargs.bams = ['a1:' + os.path.join(self.test_folder, 'frag_bams'), 'a2:' +\n    os.path.join(self.test_folder, 'tex_bams')]\nargs.frag_bams = os.path.join(self.test_folder, 'frag_bams')\nargs.normal_bams = os.path.join(self.test_folder, 'tex_bams')\nos.mkdir(args.normal_bams)\nos.mkdir(args.frag_bams)\ngen_file(os.path.join(args.normal_bams, 'tex.bam'), 'test')\ngen_file(os.path.join(args.normal_bams, 'notex.bam'), 'test')\ngen_file(os.path.join(args.frag_bams, 'farg.bam'), 'test')\nargs.samtools_path = 'test'\nlog = open(os.path.join(self.test_folder, 'test.log'), 'w')\nself.snp.run_snp_calling(args, log)\n"
}