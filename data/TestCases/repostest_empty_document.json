{
    "functionName": "test_empty_document",
    "className": "InsertTest",
    "fileName": "/AntoineToubhans_&_MongoTs/test_&_insert_test.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "empty_document = insert.build_empty_document(timestamp)\nself.assertEqual(empty_document['count'], 0)\nself.assertEqual(empty_document['sum'], 0)\nself.assertEqual(empty_document['sum2'], 0)\nself.assertEqual(empty_document['max'], -np.infty)\nself.assertEqual(empty_document['min'], np.infty)\nself.assertEqual(len(empty_document['months']), 12)\nself.assertEqual(year_timestamp, empty_document['datetime'])\nfor month_index, month in enumerate(empty_document['months']):\n    self.assertEqual(month['count'], 0)\n    self.assertEqual(month['sum'], 0)\n    self.assertEqual(month['sum2'], 0)\n    self.assertEqual(month['max'], -np.infty)\n    self.assertEqual(month['min'], np.infty)\n    self.assertEqual(len(month['days']), month_day_count[month_index])\n    for day in month['days']:\n        self.assertEqual(day['count'], 0)\n        self.assertEqual(day['sum'], 0)\n        self.assertEqual(day['sum2'], 0)\n        self.assertEqual(day['max'], -np.infty)\n        self.assertEqual(day['min'], np.infty)\n        self.assertEqual(len(day['hours']), 24)\ndata_provider(empty_document_data)"
}