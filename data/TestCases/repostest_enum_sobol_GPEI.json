{
    "functionName": "test_enum_sobol_GPEI",
    "className": "ModelRegistryTest",
    "fileName": "/facebook_&_Ax/ax_&_modelbridge_&_tests_&_test_registry.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Tests Sobol and GPEI instantiation through the Models enum.\"\"\"\nexp = get_branin_experiment()\nsobol = Models.SOBOL(search_space=exp.search_space)\nself.assertIsInstance(sobol, RandomModelBridge)\nfor _ in range(5):\n    sobol_run = sobol.gen(n=1)\n    self.assertEqual(sobol_run._model_key, 'Sobol')\n    exp.new_batch_trial().add_generator_run(sobol_run).run()\nexp.optimization_config = get_branin_optimization_config()\ngpei = Models.GPEI(experiment=exp, data=exp.fetch_data())\nself.assertIsInstance(gpei, TorchModelBridge)\nself.assertEqual(gpei._model_key, 'GPEI')\nbotorch_defaults = 'ax.models.torch.botorch_defaults'\nself.assertEqual(gpei._model_kwargs, {'acqf_constructor': {\n    'is_callable_as_path': True, 'value': f'{botorch_defaults}.get_NEI'},\n    'acqf_optimizer': {'is_callable_as_path': True, 'value':\n    f'{botorch_defaults}.scipy_optimizer'}, 'model_constructor': {\n    'is_callable_as_path': True, 'value':\n    f'{botorch_defaults}.get_and_fit_model'}, 'model_predictor': {\n    'is_callable_as_path': True, 'value':\n    'ax.models.torch.utils.predict_from_model'}, 'best_point_recommender':\n    {'is_callable_as_path': True, 'value':\n    f'{botorch_defaults}.recommend_best_observed_point'}, 'refit_on_cv': \n    False, 'refit_on_update': True, 'warm_start_refitting': True})\nself.assertEqual(gpei._bridge_kwargs, {'transform_configs': None,\n    'torch_dtype': torch_float64, 'torch_device': torch_device(type='cpu'),\n    'status_quo_name': None, 'status_quo_features': None,\n    'optimization_config': None, 'transforms': Cont_X_trans + Y_trans,\n    'fit_out_of_design': False, 'default_model_gen_options': None})\ngpei = Models.GPEI(experiment=exp, data=exp.fetch_data(), search_space=exp.\n    search_space)\nself.assertIsInstance(gpei, TorchModelBridge)\n"
}