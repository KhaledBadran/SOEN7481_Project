{
    "functionName": "test_save_load_recordings",
    "className": "TestGenerators",
    "fileName": "/alejoe91_&_MEArec/MEArec_&_tests_&_test_generators.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "recgen_loaded = mr.load_recordings(self.test_dir + '/recordings.h5',\n    return_h5_objects=False, verbose=True)\nrecgen_loaded_f = mr.load_recordings(self.test_dir + '/recordings.h5',\n    return_h5_objects=False, verbose=True)\nrecgen_loaded_r = mr.load_recordings(self.test_dir + '/recordings.h5', load\n    =['recordings'], return_h5_objects=True, verbose=True)\nassert np.allclose(recgen_loaded.templates, self.recgen.templates)\nassert np.allclose(recgen_loaded.recordings, self.recgen.recordings)\nassert np.allclose(recgen_loaded.spike_traces, self.recgen.spike_traces)\nassert np.allclose(recgen_loaded.voltage_peaks, self.recgen.voltage_peaks)\nassert np.allclose(recgen_loaded.channel_positions, self.recgen.\n    channel_positions)\nassert np.allclose(recgen_loaded.timestamps.magnitude, self.recgen.\n    timestamps.magnitude)\nassert np.allclose(recgen_loaded.recordings, np.array(recgen_loaded_f.\n    recordings))\nassert np.allclose(recgen_loaded.recordings, np.array(recgen_loaded_r.\n    recordings))\n"
}