{
    "functionName": "testAssessModelFit",
    "className": "CrossValidationTest",
    "fileName": "/facebook_&_Ax/ax_&_modelbridge_&_tests_&_test_cross_validation.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "result = []\nfor i, obs in enumerate(self.training_data):\n    result.append(CVResult(observed=obs, predicted=self.observation_data[i]))\ndiag = compute_diagnostics(result=result)\nfor v in diag.values():\n    self.assertEqual(set(v.keys()), {'a', 'b'})\nself.assertAlmostEqual(diag['Fisher exact test p']['a'], 0.1)\nself.assertAlmostEqual(diag['Fisher exact test p']['b'], 0.166666666)\ngood_fit_metrics, bad_fit_metrics = assess_model_fit(diag,\n    significance_level=0.05)\nself.assertTrue('a' in bad_fit_metrics)\nself.assertTrue('b' in bad_fit_metrics)\ngood_fit_metrics, bad_fit_metrics = assess_model_fit(diag,\n    significance_level=0.15)\nself.assertTrue('a' in good_fit_metrics)\nself.assertTrue('b' in bad_fit_metrics)\ngood_fit_metrics, bad_fit_metrics = assess_model_fit(diag,\n    significance_level=0.2)\nself.assertTrue('a' in good_fit_metrics)\nself.assertTrue('b' in good_fit_metrics)\n"
}