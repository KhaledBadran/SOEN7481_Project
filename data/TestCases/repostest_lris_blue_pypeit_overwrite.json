{
    "functionName": "test_lris_blue_pypeit_overwrite",
    "className": null,
    "fileName": "/pypeit_&_PypeIt/pypeit_&_tests_&_test_metadata.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "f = os.path.join(os.environ['PYPEIT_DEV'],\n    'pypeit_files/keck_lris_blue_long_400_3400_d560.pypeit')\nassert os.path.isfile(f), 'Could not find pypeit file.'\ncfg_lines, data_files, frametype, usrdata, setups = parse_pypeit_file(f,\n    file_check=False)\nfor i in range(len(data_files)):\n    path_list = data_files[i].split('/')\n    for j, p in enumerate(path_list):\n        if p == 'RAW_DATA':\n            break\n    data_files[i] = os.path.join(os.environ['PYPEIT_DEV'], '/'.join(\n        path_list[j:]))\nspectrograph = load_spectrograph('keck_lris_blue')\npar = spectrograph.default_pypeit_par()\nfitstbl = PypeItMetaData(spectrograph, par, files=data_files)\nfitstbl_usr = PypeItMetaData(spectrograph, par, files=data_files, usrdata=\n    usrdata)\nassert fitstbl['target'][0] == 'unknown', 'Grating name changed in file header'\nassert fitstbl_usr['target'][0\n    ] == 'test', 'Grating name changed in pypeit file'\nassert fitstbl['target'][0] != fitstbl_usr['target'][0\n    ], 'Fits header value and input pypeit file value expected to be different.'\ndev_suite_required"
}