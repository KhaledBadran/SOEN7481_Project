{
    "functionName": "test_object_events",
    "className": null,
    "fileName": "/AO-StreetArt_&_PyAesel/test_&_test_event.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "print('Testing Object API')\nprint('Creating base scene')\nscn = AeselScene()\nscn.name = 'test'\nscn.region = 'US-MD'\nscn.latitude = 100.0\nscn.longitude = 100.0\nscn.tags = []\nscn.devices = []\nscn_crt_resp = None\ntry:\n    scn_crt_resp = transaction_client.create_scene('objEventScene', scn)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(scn_crt_resp)\nprint('Create Object')\nobj = AeselObject()\nobj.name = 'testObject'\nobj.scene = 'objEventScene'\nobj.type = 'mesh'\nobj.subtype = 'cube'\nobj_action = AeselAction()\nobj_action.name = 'testObjAction'\nobj_action.description = 'this is an Object Action'\nobj_frame_initial = AeselObjectFrame()\nobj_frame_initial.frame = 1\nobj_frame_initial.transform = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,\n    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]\nfor i in range(0, 3):\n    handle = AeselGraphHandle()\n    handle.left_type = 'test'\n    handle.left_x = 10.0 + i\n    handle.left_y = 10.2 + i\n    handle.right_type = 'test2'\n    handle.right_x = 10.1 + i\n    handle.right_y = 10.3 + i\n    obj_frame_initial.translation_handle.append(handle)\nfor i in range(0, 4):\n    handle = AeselGraphHandle()\n    handle.left_type = 'test'\n    handle.left_x = 10.0 + i\n    handle.left_y = 10.2 + i\n    handle.right_type = 'test2'\n    handle.right_x = 10.1 + i\n    handle.right_y = 10.3 + i\n    obj_frame_initial.rotation_handle.append(handle)\nfor i in range(0, 3):\n    handle = AeselGraphHandle()\n    handle.left_type = 'test'\n    handle.left_x = 10.0 + i\n    handle.left_y = 10.2 + i\n    handle.right_type = 'test2'\n    handle.right_x = 10.1 + i\n    handle.right_y = 10.3 + i\n    obj_frame_initial.scale_handle.append(handle)\nobj_action.keyframes = [obj_frame_initial]\nobj.actions = [obj_action]\nobj_crt_resp = None\ntry:\n    obj_crt_resp = transaction_client.create_object('objEventScene', obj)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(obj_crt_resp)\nassert len(obj_crt_resp['objects']) > 0\nassert len(obj_crt_resp['objects'][0]['key']) > 0\nobj_key = obj_crt_resp['objects'][0]['key']\nprint('Send Object Event')\nevt_obj = AeselObject()\nevt_obj.key = obj_key\nevt_obj.scene = 'objEventScene'\nevt_obj.transform = [2.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 2.0,\n    0.0, 0.0, 0.0, 0.0, 2.0]\nevent_client.send_object_update(evt_obj)\ntime.sleep(1)\nprint('Check object event')\nobj_get_resp = None\ntry:\n    obj_get_resp = transaction_client.get_object('objEventScene', obj_key)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(obj_get_resp)\nassert len(obj_get_resp['objects']) > 0\nassert abs(obj_get_resp['objects'][0]['transform'][0] - 2.0 < 0.001)\nprint('Send Object Frame Event')\nevt_obj = AeselObject()\nevt_obj.key = obj_key\nevt_obj_action = AeselAction()\nevt_obj_action.name = 'testObjAction'\nevt_obj_frame = AeselObjectFrame()\nevt_obj_frame.frame = 1\nevt_obj_frame.transform = [2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0,\n    2.0, 2.0, 2.0, 2.0, 2.0, 2.0]\nfor i in range(0, 3):\n    handle = AeselGraphHandle()\n    handle.left_type = 'test'\n    handle.left_x = 10.0 + i\n    handle.left_y = 10.2 + i\n    handle.right_type = 'test2'\n    handle.right_x = 10.1 + i\n    handle.right_y = 10.3 + i\n    evt_obj_frame.translation_handle.append(handle)\nfor i in range(0, 4):\n    handle = AeselGraphHandle()\n    handle.left_type = 'test'\n    handle.left_x = 10.0 + i\n    handle.left_y = 10.2 + i\n    handle.right_type = 'test2'\n    handle.right_x = 10.1 + i\n    handle.right_y = 10.3 + i\n    evt_obj_frame.rotation_handle.append(handle)\nfor i in range(0, 3):\n    handle = AeselGraphHandle()\n    handle.left_type = 'test'\n    handle.left_x = 10.0 + i\n    handle.left_y = 10.2 + i\n    handle.right_type = 'test2'\n    handle.right_x = 10.1 + i\n    handle.right_y = 10.3 + i\n    evt_obj_frame.scale_handle.append(handle)\nevt_obj_action.keyframes = [evt_obj_frame]\nevt_obj.actions = [evt_obj_action]\nevent_client.send_object_frame_update(evt_obj)\ntime.sleep(1)\nprint('Check object frame event')\nobj_get_resp2 = None\ntry:\n    obj_get_resp2 = transaction_client.get_object('objEventScene', obj_key)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(obj_get_resp2)\nassert len(obj_get_resp2['objects']) > 0\nassert len(obj_get_resp2['objects'][0]['actions']) > 0\nassert len(obj_get_resp2['objects'][0]['actions'][0]['keyframes']) > 0\nassert abs(obj_get_resp2['objects'][0]['actions'][0]['keyframes'][0][\n    'transform'][0] - 2.0 < 0.001)\nprint('Delete Object')\ntry:\n    transaction_client.delete_object('objTestScene', obj_key)\nexcept Exception as e:\n    print(e)\n    assert False\n"
}