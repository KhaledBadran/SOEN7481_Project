{
    "functionName": "testBadConstruction",
    "className": "SearchSpaceTest",
    "fileName": "/facebook_&_Ax/ax_&_core_&_tests_&_test_search_space.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "with self.assertRaises(ValueError):\n    p1 = self.parameters + [self.parameters[0]]\n    SearchSpace(parameters=p1, parameter_constraints=[])\nwith self.assertRaises(ValueError):\n    SearchSpace(parameters=self.parameters, parameter_constraints=[\n        OrderConstraint(lower_parameter=self.a, upper_parameter=self.g)])\nwith self.assertRaises(ValueError):\n    SearchSpace(parameters=self.parameters, parameter_constraints=[\n        ParameterConstraint(constraint_dict={'g': 1}, bound=0)])\nwith self.assertRaises(ValueError):\n    SearchSpace(parameters=self.parameters, parameter_constraints=[\n        OrderConstraint(lower_parameter=self.a, upper_parameter=self.d)])\nwith self.assertRaises(ValueError):\n    SearchSpace(parameters=self.parameters, parameter_constraints=[\n        OrderConstraint(lower_parameter=self.a, upper_parameter=self.e)])\nwith self.assertRaises(ValueError):\n    SearchSpace(parameters=self.parameters, parameter_constraints=[\n        OrderConstraint(lower_parameter=self.a, upper_parameter=self.f)])\nwith self.assertRaises(ValueError):\n    wrong_a = self.a.clone()\n    wrong_a.update_range(upper=10)\n    SearchSpace(parameters=self.parameters, parameter_constraints=[\n        OrderConstraint(lower_parameter=wrong_a, upper_parameter=self.b)])\n"
}