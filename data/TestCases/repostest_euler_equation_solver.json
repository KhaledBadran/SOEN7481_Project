{
    "functionName": "test_euler_equation_solver",
    "className": null,
    "fileName": "/open-source-economics_&_OG-USA/ogusa_&_tests_&_test_SS.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "input_tuple = utils.safe_read_pickle(os.path.join(CUR_PATH, 'test_io_data',\n    'euler_eqn_solver_inputs.pkl'))\nguesses, params = input_tuple\np = Specifications(client=dask_client, num_workers=NUM_WORKERS)\n(r, w, TR, factor, j, p.J, p.S, p.beta, p.sigma, p.ltilde, p.g_y, p.g_n_ss,\n    tau_payroll, retire, p.mean_income_data, h_wealth, p_wealth, m_wealth,\n    p.b_ellipse, p.upsilon, j, p.chi_b, p.chi_n, tau_bq, p.rho, lambdas, p.\n    omega_SS, p.e, p.analytical_mtrs, etr_params, mtrx_params, mtry_params\n    ) = params\np.eta = (p.omega_SS.reshape(p.S, 1) * p.lambdas.reshape(1, p.J)).reshape(1,\n    p.S, p.J)\np.tau_bq = np.ones(p.T + p.S) * 0.0\np.tau_payroll = np.ones(p.T + p.S) * tau_payroll\np.h_wealth = np.ones(p.T + p.S) * h_wealth\np.p_wealth = np.ones(p.T + p.S) * p_wealth\np.m_wealth = np.ones(p.T + p.S) * m_wealth\np.retire = (np.ones(p.T + p.S) * retire).astype(int)\np.etr_params = np.transpose(etr_params.reshape(p.S, 1, etr_params.shape[-1]\n    ), (1, 0, 2))\np.mtrx_params = np.transpose(mtrx_params.reshape(p.S, 1, mtrx_params.shape[\n    -1]), (1, 0, 2))\np.mtry_params = np.transpose(mtry_params.reshape(p.S, 1, mtry_params.shape[\n    -1]), (1, 0, 2))\np.tax_func_type = 'DEP'\np.lambdas = lambdas.reshape(p.J, 1)\nb_splus1 = np.array(guesses[:p.S]).reshape(p.S, 1) + 0.005\nBQ = aggregates.get_BQ(r, b_splus1, j, p, 'SS', False)\nbq = household.get_bq(BQ, j, p, 'SS')\ntr = household.get_tr(TR, j, p, 'SS')\nargs = r, w, bq, tr, factor, j, p\ntest_list = SS.euler_equation_solver(guesses, *args)\nexpected_list = np.array([-3.62741663, -6.30068841, -6.76592886, -\n    6.97731223, -7.05777777, -6.5730544, -7.11553046, -7.30569622, -\n    7.45808107, -7.89984062, -8.11466111, -8.28230086, -8.79253862, -\n    8.86994311, -9.31299476, -9.80834199, -9.97333771, -10.8349979, -\n    11.3199826, -12.289093, -13.1550471, -14.2753713, -15.5721098, -\n    17.381149, -18.8856303, -20.9570569, -23.05595, -25.2127149, -\n    27.6119605, -30.3141128, -33.0900203, -36.279973, -39.1169706, -\n    42.4246421, -45.5740527, -49.2914871, -53.0682805, -57.0043846, -\n    60.6075991, -64.5251018, -68.6128365, -73.5896515, -79.2634608, -\n    83.4733231, -92.980239, -101.179788, -110.437881, -120.569527, -\n    131.569973, -143.633399, -157.534056, -173.24461, -190.066728, -\n    207.980863, -227.589046, -250.24167, -276.314755, -304.930986, -\n    336.196973, -370.907934, -410.966644, -456.684022, -506.945218, -\n    561.838645, -622.617808, -690.840503, -767.825713, -854.436805, -\n    951.106365, -1057.80305, -1174.35473, -1300.45062, -1435.71221, -\n    1579.71603, -1732.04264, -1884.30524, -2034.03679, -2178.61987, -\n    2315.32884, -8006.54731, -0.0521487172, -0.28023417, 0.493894552, \n    0.311884938, 0.655799607, 0.562182419, 0.386074983, 0.343741491, \n    0.422461089, 0.363707951, 0.49315001, 0.472813688, 0.407390308, \n    0.494974186, 0.469900128, 0.437562389, 0.567370182, 0.488965362, \n    0.640728461, 0.614619979, 0.497173823, 0.619549666, 0.651193557, \n    0.448906118, 0.793091492, 0.651249363, 0.656307713, 1.12948552, \n    0.950018058, 0.67961303, 0.951359123, 0.631059147, 0.797896887, \n    0.844620817, 0.743683837, 1.56693187, 0.275630011, 0.532956891, \n    1.57110727, 1.2267461, 0.463932928, 1.47225464, 1.16948107, 1.07965795,\n    -0.320557791, -1.17064127, -0.784880649, -0.760851182, -1.61415945, -\n    0.830363975, -1.68459409, -1.49260581, -1.84257084, -1.72143079, -\n    1.43131579, -1.63719219, -1.43874851, -1.57207905, -1.72909159, -\n    1.98778122, -1.80843826, -2.12828312, -2.24768762, -2.36961877, -\n    2.49117258, -2.59914065, -2.82309085, -2.93613362, -3.34446991, -\n    3.45445086, -3.7496214, -3.78113417, -4.556438, -4.86929016, -\n    5.08657898, -5.22054177, -5.54606515, -5.78478304, -5.93652041, -\n    6.11519786])\nassert np.allclose(np.array(test_list), np.array(expected_list))\n"
}