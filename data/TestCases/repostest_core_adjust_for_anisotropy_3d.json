{
    "functionName": "test_core_adjust_for_anisotropy_3d",
    "className": null,
    "fileName": "/bsmurphy_&_PyKrige/tests_&_test_core.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "X = np.array([[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 1.0]]).T\nX_adj = core._adjust_for_anisotropy(X, [0.0, 0.0, 0.0], [2.0, 2.0], [90.0, \n    0.0, 0.0])\nassert_allclose(X_adj[:, (0)], np.array([1.0, 0.0, 0.0]), **allclose_pars)\nassert_allclose(X_adj[:, (1)], np.array([0.0, 0.0, 2.0]), **allclose_pars)\nassert_allclose(X_adj[:, (2)], np.array([0.0, -2.0, 0.0]), **allclose_pars)\nX_adj = core._adjust_for_anisotropy(X, [0.0, 0.0, 0.0], [2.0, 2.0], [0.0, \n    90.0, 0.0])\nassert_allclose(X_adj[:, (0)], np.array([0.0, 0.0, -1.0]), **allclose_pars)\nassert_allclose(X_adj[:, (1)], np.array([0.0, 2.0, 0.0]), **allclose_pars)\nassert_allclose(X_adj[:, (2)], np.array([2.0, 0.0, 0.0]), **allclose_pars)\nX_adj = core._adjust_for_anisotropy(X, [0.0, 0.0, 0.0], [2.0, 2.0], [0.0, \n    0.0, 90.0])\nassert_allclose(X_adj[:, (0)], np.array([0.0, 1.0, 0.0]), **allclose_pars)\nassert_allclose(X_adj[:, (1)], np.array([-2.0, 0.0, 0.0]), **allclose_pars)\nassert_allclose(X_adj[:, (2)], np.array([0.0, 0.0, 2.0]), **allclose_pars)\n"
}