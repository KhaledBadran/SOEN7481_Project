{
    "functionName": "test_alert_dispositioned",
    "className": "TestCase",
    "fileName": "/IntegralDefense_&_ACE/lib_&_saq_&_modules_&_test_alerts.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "from saq.database import Alert, User, Workload, set_dispositions\nsaq.CONFIG['engine']['alert_disposition_check_frequency'] = '1'\nroot = create_root_analysis(analysis_mode='test_single')\nroot.initialize_storage()\nobservable = root.add_observable(F_TEST, 'test_detection')\nobservable_pause = root.add_observable(F_TEST, 'pause_3')\nroot.save()\nroot.schedule()\nengine = TestEngine(pool_size_limit=1, local_analysis_modes=['test_single',\n    ANALYSIS_MODE_CORRELATION])\nengine.enable_alerting()\nengine.enable_module('analysis_module_basic_test', ['test_single',\n    ANALYSIS_MODE_CORRELATION])\nengine.enable_module('analysis_module_low_priority', ANALYSIS_MODE_CORRELATION)\nengine.enable_module('analysis_module_pause', ANALYSIS_MODE_CORRELATION)\nengine.start()\nwait_for_log_count('processing This is only a test. mode correlation', 1, 10)\nset_dispositions([root.uuid], DISPOSITION_FALSE_POSITIVE, saq.db.query(User\n    ).first().id)\nwait_for_log_count('detected disposition of alert', 1)\nengine.controlled_stop()\nengine.wait()\nsaq.db.close()\nalert = saq.db.query(Alert).filter(Alert.uuid == root.uuid).one()\nself.assertIsNotNone(alert)\nalert.load()\nobservable_pause = alert.get_observable(observable_pause.id)\nself.assertIsNotNone(observable_pause)\nlow_pri_analysis = observable_pause.get_analysis('LowPriorityAnalysis')\nself.assertIsNone(low_pri_analysis)\nself.assertTrue(alert.analysis_mode, ANALYSIS_MODE_DISPOSITIONED)\nsaq.db.close()\nself.assertIsNotNone(saq.db.query(Workload).filter(Workload.uuid == alert.\n    uuid, Workload.analysis_mode == ANALYSIS_MODE_DISPOSITIONED).first())\nalert = saq.db.query(Alert).filter(Alert.uuid == root.uuid).one()\nself.assertIsNotNone(alert)\nalert.load()\nalert.schedule()\nengine = TestEngine(pool_size_limit=1, local_analysis_modes=[\n    ANALYSIS_MODE_CORRELATION])\nengine.enable_alerting()\nengine.enable_module('analysis_module_basic_test', ['test_single',\n    ANALYSIS_MODE_CORRELATION])\nengine.enable_module('analysis_module_low_priority', ANALYSIS_MODE_CORRELATION)\nengine.enable_module('analysis_module_pause', ANALYSIS_MODE_CORRELATION)\nengine.controlled_stop()\nengine.start()\nengine.wait()\nwait_for_log_count('skipping analysis of dispositioned alert', 1)\nsaq.db.close()\nalert = saq.db.query(Alert).filter(Alert.uuid == root.uuid).one()\nself.assertIsNotNone(alert)\nalert.load()\nobservable_pause = alert.get_observable(observable_pause.id)\nself.assertIsNotNone(observable_pause)\nlow_pri_analysis = observable_pause.get_analysis('LowPriorityAnalysis')\nself.assertIsNone(low_pri_analysis)\n"
}