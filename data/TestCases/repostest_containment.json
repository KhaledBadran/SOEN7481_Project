{
    "functionName": "test_containment",
    "className": null,
    "fileName": "/Macquarie-MEG-Research_&_BIDSHandler/bidshandler_&_tests_&_test_load.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "with tempfile.TemporaryDirectory() as tmp:\n    shutil.copytree(TESTPATH2, op.join(tmp, 'BIDSTEST2'))\n    src_bt = BIDSTree(TESTPATH1)\n    dst_bt = BIDSTree(op.join(tmp, 'BIDSTEST2'))\n    proj = src_bt.project('test1')\n    subj = proj.subject('1')\n    sess = subj.session('1')\n    scan = sess.scan(task='resting', run='1')\n    assert subj in dst_bt.project('test1')\n    assert subj in dst_bt\n    assert sess in dst_bt.project('test1').subject('1')\n    assert sess in dst_bt.project('test1')\n    assert sess in dst_bt\n    assert scan in dst_bt.project('test1').subject(1).session(1)\n    assert scan in dst_bt.project('test1').subject(1)\n    assert scan in dst_bt.project('test1')\n    assert scan in dst_bt\n    assert scan.scan_type == 'meg'\n    sess2 = src_bt.project('test2').subject('3').session('1')\n    assert sess2.scan(task='resting', run='1').emptyroom is not None\n    assert sess.date == date(year=2018, month=10, day=26)\n    with pytest.raises(Exception, match='Multiple'):\n        sess.scan(run='1')\n    assert len(sess.scan(run='1', return_all=True)) == 2\n    assert sess.scan(task='rest') is not None\n    with pytest.raises(TypeError):\n        assert 'cats' in src_bt\n    with pytest.raises(TypeError):\n        assert dst_bt in src_bt\n    with pytest.raises(TypeError):\n        assert dst_bt in proj\n    with pytest.raises(TypeError):\n        assert dst_bt in subj\n    with pytest.raises(TypeError):\n        assert dst_bt in sess\n    assert scan.coordsystem_json == op.normpath(op.join(testpath,\n        'BIDSTEST1/test1/sub-1/ses-1/meg/sub-1_ses-1_coordsystem.json'))\n    assert scan.events_tsv == op.normpath(op.join(testpath,\n        'BIDSTEST1/test1/sub-1/ses-1/meg/sub-1_ses-1_task-resting_run-1_events.tsv'\n        ))\n    assert scan.channels_tsv == op.normpath(op.join(testpath,\n        'BIDSTEST1/test1/sub-1/ses-1/meg/sub-1_ses-1_task-resting_run-1_channels.tsv'\n        ))\n    with pytest.raises(NoProjectError):\n        proj = src_bt.project('5')\n    with pytest.raises(NoSubjectError):\n        sess = proj.subject('5')\n    with pytest.raises(NoSessionError):\n        sess = subj.session('5')\n    with pytest.raises(NoScanError):\n        scan = sess.scan(task='fake')\n    assert len(dst_bt['test1'].contained_files()) == 19\n    with pytest.raises(AttributeError):\n        subj.projects\n    with pytest.raises(AttributeError):\n        sess.subjects\n    with pytest.raises(AttributeError):\n        scan.sessions\n"
}