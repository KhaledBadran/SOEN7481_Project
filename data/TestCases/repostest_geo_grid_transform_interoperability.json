{
    "functionName": "test_geo_grid_transform_interoperability",
    "className": "TestConvert",
    "fileName": "/GeoscienceAustralia_&_GeodePy/geodepy_&_tests_&_test_convert.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "abs_path = os.path.abspath(os.path.dirname(__file__))\ntest_geo_coords = np.genfromtxt(os.path.join(abs_path,\n    'resources/Test_Conversion_Geo.csv'), delimiter=',', dtype='S4,f8,f8',\n    names=['site', 'lat', 'lon'])\ntest_grid_coords = np.genfromtxt(os.path.join(abs_path,\n    'resources/Test_Conversion_Grid.csv'), delimiter=',', dtype=\n    'S4,i4,f8,f8', names=['site', 'zone', 'east', 'north'])\ngeoed_grid = np.array(list(grid2geo(*x) for x in test_grid_coords[['zone',\n    'east', 'north']]))\nnp.testing.assert_almost_equal(geoed_grid[:, :2], hp2dec_v(np.array(\n    test_geo_coords[['lat', 'lon']].tolist())), decimal=8)\ngridded_geo = np.stack(geo2grid(*x) for x in hp2dec_v(np.array(\n    test_geo_coords[['lat', 'lon']].tolist())))\nnp.testing.assert_almost_equal(gridded_geo[:, 2:4].astype(float), np.array(\n    test_grid_coords[['east', 'north']].tolist()), decimal=3)\n"
}