{
    "functionName": "conv1d_mc1",
    "className": null,
    "fileName": "/Lasagne_&_Lasagne/lasagne_&_theano_extensions_&_conv.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"\n    using conv2d with height == 1\n    \"\"\"\nif image_shape is None:\n    image_shape_mc1 = None\nelse:\n    image_shape_mc1 = image_shape[0], image_shape[1], image_shape[2], 1\nif filter_shape is None:\n    filter_shape_mc1 = None\nelse:\n    filter_shape_mc1 = filter_shape[0], filter_shape[1], filter_shape[2], 1\nif isinstance(border_mode, tuple):\n    border_mode, = border_mode\nif isinstance(border_mode, int_types):\n    border_mode = border_mode, 0\ninput_mc1 = input.dimshuffle(0, 1, 2, 'x')\nfilters_mc1 = filters.dimshuffle(0, 1, 2, 'x')\nextra_kwargs = {'num_groups': num_groups} if num_groups > 1 else {}\nconved = T.nnet.conv2d(input_mc1, filters_mc1, image_shape_mc1,\n    filter_shape_mc1, subsample=(subsample[0], 1), border_mode=border_mode,\n    filter_flip=filter_flip, **extra_kwargs)\nreturn conved[:, :, :, (0)]\n"
}