{
    "functionName": "test_compare_tss",
    "className": "TestsTranscriptAssembly",
    "fileName": "/Sung-Huan_&_ANNOgesic/tests_&_test_transcript.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "tr.stat_ta_tss = self.mock.mock_stat_ta_tss\nself.tran.multiparser = self.mock_parser\ngen_file(os.path.join(self.gffs, 'test_TSS.gff'), self.example.gff_file)\ngen_file(os.path.join(self.gffs, 'tmp/test_TSS.gff'), self.example.gff_file)\ngen_file(os.path.join(self.out_gff, 'test_transcript.gff'), self.example.\n    tran_file)\ngff_out = os.path.join(self.out, 'gffs')\ngen_file(os.path.join(gff_out, 'tmp_ta_tss'), self.example.tran_file)\ngen_file(os.path.join(gff_out, 'tmp_tss_ta'), self.example.gff_file)\nargs = self.mock_args.mock()\nargs.out_folder = self.out\nargs.trans = self.trans\nargs.compare_tss = self.gffs\nargs.fuzzy = 2\nlog = open(os.path.join(self.test_folder, 'test.log'), 'w')\nself.tran._compare_tss(['test'], args, log)\ndatas = import_data(os.path.join(self.gffs, 'test_TSS.gff'))\nself.assertEqual('\\n'.join(datas), '##gff-version 3\\n' + self.example.gff_file)\ndatas = import_data(os.path.join(self.out_gff, 'test_transcript.gff'))\nself.assertEqual('\\n'.join(datas), '##gff-version 3\\n' + self.example.tran_file\n    )\n"
}