{
    "functionName": "test__no_columns_specified_so_uses_full_serial_overscan",
    "className": "TestSerialTrailsFromFrame",
    "fileName": "/Jammy2211_&_PyAutoCTI/test_&_unit_&_charge_injection_&_test_ci_frame.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "pattern = ci_pattern.CIPatternUniform(normalization=1.0, regions=[(0, 3, 1,\n    4), (0, 3, 4, 7)])\nimage = np.array([[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0],\n    [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0], [0.0, 1.0, \n    2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0]])\nci_geometry = ci_frame.FrameGeometry(serial_overscan=ci_frame.Region((0, 1,\n    0, 4)), serial_prescan=ci_frame.Region((0, 1, 0, 1)), parallel_overscan\n    =ci_frame.Region((0, 1, 0, 1)), corner=(0, 0))\nframe = ci_frame.ChInj(frame_geometry=ci_geometry, ci_pattern=pattern)\ntrails = frame.serial_trails_arrays_from_frame(image)\nassert (trails[0] == np.array([[4.0, 5.0, 6.0, 7.0], [4.0, 5.0, 6.0, 7.0],\n    [4.0, 5.0, 6.0, 7.0]])).all()\nassert (trails[1] == np.array([[7.0, 8.0, 9.0, 10.0], [7.0, 8.0, 9.0, 10.0],\n    [7.0, 8.0, 9.0, 10.0]])).all()\nstacked_trails = frame.serial_trails_stacked_array_from_frame(image)\nassert (stacked_trails == np.array([[5.5, 6.5, 7.5, 8.5], [5.5, 6.5, 7.5, \n    8.5], [5.5, 6.5, 7.5, 8.5]])).all()\ntrails_line = frame.serial_trails_line_binned_over_rows_from_frame(image)\nassert (trails_line == np.array([5.5, 6.5, 7.5, 8.5])).all()\n"
}