{
    "functionName": "flatten_recursive",
    "className": "BertModelTest",
    "fileName": "/kpi6research_&_Bert-as-a-Library/BertLibrary_&_bert_&_modeling_test.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Flattens (potentially nested) a tuple/dictionary/list to a list.\"\"\"\noutput = []\nif isinstance(item, list):\n    output.extend(item)\nelif isinstance(item, tuple):\n    output.extend(list(item))\nelif isinstance(item, dict):\n    for _, v in six.iteritems(item):\n        output.append(v)\nelse:\n    return [item]\nflat_output = []\nfor x in output:\n    flat_output.extend(cls.flatten_recursive(x))\nreturn flat_output\nclassmethod"
}