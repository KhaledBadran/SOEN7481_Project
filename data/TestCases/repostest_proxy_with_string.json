{
    "functionName": "test_proxy_with_string",
    "className": "TestValueProxy",
    "fileName": "/dnephin_&_PyStaticConfiguration/tests_&_proxy_test.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "validator = mock.Mock(return_value='one%s')\nvalue_proxy = proxy.ValueProxy(validator, self.value_cache, 'something')\nassert_equal(value_proxy, 'one%s')\nassert value_proxy < 'two'\nassert value_proxy > 'ab'\nassert os.path.join(value_proxy, 'a') == os.path.join('one%s', 'a')\nassert_equal(value_proxy + '!', 'one%s!')\nassert_equal(value_proxy % '!', 'one!')\nassert_equal(repr(value_proxy), \"'one%s'\")\nassert_equal(str(value_proxy), 'one%s')\nassert_equal(hash(value_proxy), hash('one%s'))\nassert bool(value_proxy)\n"
}