{
    "functionName": "test_halomod",
    "className": null,
    "fileName": "/LSSTDESC_&_CCL/benchmarks_&_test_halomod.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "Omega_c = [0.25, 0.2265, 0.2685]\nOmega_b = [0.05, 0.0455, 0.049]\nh = [0.7, 0.704, 0.6711]\nsigma8 = [0.8, 0.81, 0.834]\nn_s = [0.96, 0.967, 0.9624]\ncosmo = ccl.Cosmology(Omega_c=Omega_c[model], Omega_b=Omega_b[model], h=h[\n    model], sigma8=sigma8[model], n_s=n_s[model], Neff=0, m_nu=0, Omega_k=0,\n    transfer_function='eisenstein_hu', matter_power_spectrum='linear')\ndata_z0 = np.loadtxt('./benchmarks/data/pk_hm_c%d_z0.txt' % (model + 1))\ndata_z1 = np.loadtxt('./benchmarks/data/pk_hm_c%d_z1.txt' % (model + 1))\nmass_def = ccl.halos.MassDef('vir', 'matter')\nhmf = ccl.halos.MassFuncSheth99(cosmo, mass_def=mass_def, mass_def_strict=\n    False, use_delta_c_fit=True)\nhbf = ccl.halos.HaloBiasSheth99(cosmo, mass_def=mass_def, mass_def_strict=False\n    )\ncM = ccl.halos.ConcentrationDuffy08(mdef=mass_def)\nprf = ccl.halos.HaloProfileNFW(cM)\nhmc = ccl.halos.HMCalculator(cosmo, hmf, hbf, mass_def)\nz = 0.0\nk = data_z0[:, (0)] * cosmo['h']\npk = data_z0[:, (-1)] / cosmo['h'] ** 3\npk_ccl = ccl.halos.halomod_power_spectrum(cosmo, hmc, k, 1.0 / (1 + z), prf,\n    normprof1=True)\ntol = pk * HALOMOD_TOLERANCE\nerr = np.abs(pk_ccl - pk)\nassert np.all(err <= tol)\nz = 1.0\nk = data_z1[:, (0)] * cosmo['h']\npk = data_z1[:, (-1)] / cosmo['h'] ** 3\npk_ccl = ccl.halos.halomod_power_spectrum(cosmo, hmc, k, 1.0 / (1 + z), prf,\n    normprof1=True)\ntol = pk * HALOMOD_TOLERANCE\nerr = np.abs(pk_ccl - pk)\nassert np.all(err <= tol)\npytest.mark.parametrize('model', list(range(3)))"
}