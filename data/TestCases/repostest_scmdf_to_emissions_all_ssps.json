{
    "functionName": "test_scmdf_to_emissions_all_ssps",
    "className": null,
    "fileName": "/OMS-NetZero_&_FAIR/tests_&_integration_&_test_scmdf.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "res = scmdf_to_emissions(scen_model_scmdfs, startyear=startyear, endyear=\n    endyear)\nassert not np.isnan(res).any()\nnpt.assert_allclose(res[:, (0)], range(startyear, endyear + 1))\nfor yr in [startyear, 1900, 1950, 2014, 2015, 2020, 2050, 2100,\n    scen_model_scmdfs['year'].max()]:\n    yr = int(yr)\n    row_year = yr - startyear\n    for var, idx in (('|CO2|MAGICC Fossil and Industrial', 1), (\n        '|CO2|MAGICC AFOLU', 2), ('|N2O', 4), ('|Sulfur', 5), ('|NOx', 8),\n        ('|CH4', 3), ('|SF6', 23), ('|CH3Cl', 39)):\n        _, fair_unit, fair_context = _get_fair_col_unit_context(var)\n        if idx > 23 or yr < 2015:\n            checker = SSP245_EMMS\n        else:\n            checker = scen_model_scmdfs\n        raw_val = checker.filter(variable='*{}'.format(var), year=yr,\n            region='World').convert_unit(fair_unit, context=fair_context\n            ).values.squeeze()\n        assert raw_val.shape != (0, 0)\n        assert not np.isnan(res[row_year, idx])\n        npt.assert_allclose(res[row_year, idx], raw_val)\npytest.mark.parametrize('startyear,endyear', ((1765, 2100), (1765, 2150), (\n    1850, 2150), (1850, 2100)))"
}