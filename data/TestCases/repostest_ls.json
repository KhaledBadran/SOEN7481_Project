{
    "functionName": "test_ls",
    "className": "testRestrictivenessLatticeOfStatus",
    "fileName": "/benjimor_&_CaLi/tests_&_test_deontic_lattice.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Test if Restrictiveness lattice of status is well instanciated.\"\"\"\nDL1 = RestrictivenessLatticeOfStatus(Graph().parse(data=dl1_rdf, format='ttl'))\nDL2 = RestrictivenessLatticeOfStatus(Graph().parse(data=dl2_rdf, format='ttl'))\nself.assertCountEqual([Undefined, Permission, Prohibition, Duty], DL1.\n    restrictiveness[Undefined])\nself.assertCountEqual([Permission, Prohibition, Duty], DL1.restrictiveness[\n    Permission])\nself.assertCountEqual([Prohibition, Duty], DL1.restrictiveness[Prohibition])\nself.assertCountEqual([Duty], DL1.restrictiveness[Duty])\nself.assertCountEqual([Permission, Prohibition, Duty], DL2.restrictiveness[\n    Permission])\nself.assertCountEqual([Prohibition, Duty], DL2.restrictiveness[Prohibition])\nself.assertCountEqual([Duty], DL2.restrictiveness[Duty])\n"
}