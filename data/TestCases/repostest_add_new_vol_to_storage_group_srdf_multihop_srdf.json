{
    "functionName": "test_add_new_vol_to_storage_group_srdf_multihop_srdf",
    "className": "PyU4VProvisioningTest",
    "fileName": "/MichaelMcAleer_&_PyU4V/PyU4V_&_tests_&_unit_tests_&_test_pyu4v_provisioning.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Test adding new volume to replicated storage group.\"\"\"\nremote_array = '000197800124'\nremote_array2 = '000197800125'\nnum_of_volumes = 1\nvolume_size = 10\npayload = {'editStorageGroupActionParam': {'expandStorageGroupParam': {\n    'addVolumeParam': {'emulation': 'FBA', 'create_new_volumes': False,\n    'volumeAttributes': [{'num_of_vols': 1, 'volume_size': 10,\n    'capacityUnit': 'GB'}], 'remoteSymmSGInfoParam': {\n    'remote_symmetrix_1_id': remote_array, 'remote_symmetrix_1_sgs': [\n    'PU-mystoragegroup-SG'], 'remote_symmetrix_2_id': remote_array2,\n    'remote_symmetrix_2_sgs': ['PU-mystoragegroup-SG']}}}}}\nwith mock.patch.object(self.provisioning, 'modify_storage_group') as mock_mod:\n    self.provisioning.add_new_volume_to_storage_group(storage_group_id=self\n        .data.storagegroup_name, num_vols=num_of_volumes, vol_size=\n        volume_size, cap_unit='GB', remote_array_1_id=self.data.\n        remote_array, remote_array_1_sgs=self.data.storagegroup_name,\n        remote_array_2_id=self.data.remote_array2, remote_array_2_sgs=self.\n        data.storagegroup_name)\n    mock_mod.assert_called_once_with(self.data.storagegroup_name, payload)\n"
}