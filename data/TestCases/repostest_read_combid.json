{
    "functionName": "test_read_combid",
    "className": null,
    "fileName": "/pypeit_&_PypeIt/pypeit_&_tests_&_test_metadata.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "setup_dir = data_path('setup_files')\nif os.path.isdir(setup_dir):\n    shutil.rmtree(setup_dir)\nconfig_dir = data_path('shane_kast_blue_A')\nif os.path.isdir(config_dir):\n    shutil.rmtree(config_dir)\ndroot = data_path('b')\npargs = setup.parser(['-r', droot, '-s', 'shane_kast_blue', '-c=all', '-b',\n    '--extension=fits.gz', '--output_path={:s}'.format(data_path(''))])\nsetup.main(pargs)\nshutil.rmtree(setup_dir)\npypeit_file = os.path.join(config_dir, 'shane_kast_blue_A.pypeit')\ncfg_lines, data_files, frametype, usrdata, setups = parse_pypeit_file(\n    pypeit_file)\nspectrograph = None\nfor l in cfg_lines:\n    if 'spectrograph' in l:\n        spectrograph = load_spectrograph(l.split(' ')[-1])\n        break\nassert spectrograph is not None, 'Did not appropriately read spectrograph'\npmd = PypeItMetaData(spectrograph, spectrograph.default_pypeit_par(), files\n    =data_files, usrdata=usrdata, strict=False)\nindx = pmd['filename'] == 'b27.fits.gz'\nassert pmd['comb_id'][indx] == [1], 'Incorrect combination group ID'\nassert pmd['comb_id'][~indx] == [-1], 'Incorrect combination group ID'\nshutil.rmtree(config_dir)\n"
}