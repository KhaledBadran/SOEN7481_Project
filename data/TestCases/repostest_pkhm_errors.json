{
    "functionName": "test_pkhm_errors",
    "className": null,
    "fileName": "/LSSTDESC_&_CCL/pyccl_&_tests_&_test_pkhm.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "with pytest.raises(NotImplementedError):\n    ccl.halos.HMCalculator(COSMO, HMF, HBF, mass_def=M200,\n        integration_method_M='Sampson')\nwith pytest.raises(TypeError):\n    ccl.halos.HMCalculator(COSMO, None, HBF, mass_def=M200)\nwith pytest.raises(TypeError):\n    ccl.halos.HMCalculator(COSMO, HMF, None, mass_def=M200)\nhmc = ccl.halos.HMCalculator(COSMO, HMF, HBF, mass_def=M200)\nwith pytest.raises(TypeError):\n    ccl.halos.halomod_mean_profile_1pt(COSMO, hmc, KK, AA, None)\nwith pytest.raises(TypeError):\n    ccl.halos.halomod_bias_1pt(COSMO, hmc, KK, AA, None)\nwith pytest.raises(TypeError):\n    ccl.halos.halomod_power_spectrum(COSMO, hmc, KK, AA, None)\nwith pytest.raises(TypeError):\n    ccl.halos.halomod_power_spectrum(COSMO, hmc, KK, AA, P1, prof2=KK)\nwith pytest.raises(TypeError):\n    ccl.halos.halomod_power_spectrum(COSMO, hmc, KK, AA, P1, prof_2pt=KK)\nwith pytest.raises(TypeError):\n    ccl.halos.halomod_power_spectrum(COSMO, hmc, KK, AA, P1, p_of_k_a=KK)\n"
}