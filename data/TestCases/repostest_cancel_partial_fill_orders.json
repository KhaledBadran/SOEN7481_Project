{
    "functionName": "test_cancel_partial_fill_orders",
    "className": "TestBasicOrders",
    "fileName": "/gavincyi_&_LightMatchingEngine/tests_&_unit_&_test_basic_orders.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "me = lme.LightMatchingEngine()\nbuy1_order, trades = me.add_order(TestBasicOrders.instmt, TestBasicOrders.\n    price + 0.1, TestBasicOrders.lot_size, lme.Side.BUY)\nself.assertEqual(0, len(trades))\nself.check_order_book(me, TestBasicOrders.instmt, 1, 0)\nself.check_order(buy1_order, 1, TestBasicOrders.instmt, TestBasicOrders.\n    price + 0.1, TestBasicOrders.lot_size, lme.Side.BUY, 0, TestBasicOrders\n    .lot_size)\nbuy2_order, trades = me.add_order(TestBasicOrders.instmt, TestBasicOrders.\n    price, 2 * TestBasicOrders.lot_size, lme.Side.BUY)\nself.assertEqual(0, len(trades))\nself.check_order_book(me, TestBasicOrders.instmt, 2, 0)\nself.check_order(buy2_order, 2, TestBasicOrders.instmt, TestBasicOrders.\n    price, 2 * TestBasicOrders.lot_size, lme.Side.BUY, 0, 2 *\n    TestBasicOrders.lot_size)\nsell_order, trades = me.add_order(TestBasicOrders.instmt, TestBasicOrders.\n    price, 2 * TestBasicOrders.lot_size, lme.Side.SELL)\nself.check_order_book(me, TestBasicOrders.instmt, 1, 0)\nself.assertEqual(4, len(trades))\nself.check_order(buy1_order, 1, TestBasicOrders.instmt, TestBasicOrders.\n    price + 0.1, TestBasicOrders.lot_size, lme.Side.BUY, TestBasicOrders.\n    lot_size, 0)\nself.check_order(buy2_order, 2, TestBasicOrders.instmt, TestBasicOrders.\n    price, 2 * TestBasicOrders.lot_size, lme.Side.BUY, TestBasicOrders.\n    lot_size, TestBasicOrders.lot_size)\nself.check_order(sell_order, 3, TestBasicOrders.instmt, TestBasicOrders.\n    price, 2 * TestBasicOrders.lot_size, lme.Side.SELL, 2 * TestBasicOrders\n    .lot_size, 0)\nself.check_trade(trades[0], sell_order.order_id, sell_order.instmt, \n    TestBasicOrders.price + 0.1, TestBasicOrders.lot_size, sell_order.side, 1)\nself.check_trade(trades[1], buy1_order.order_id, buy1_order.instmt, \n    TestBasicOrders.price + 0.1, TestBasicOrders.lot_size, buy1_order.side, 2)\nself.check_trade(trades[2], sell_order.order_id, sell_order.instmt,\n    TestBasicOrders.price, TestBasicOrders.lot_size, sell_order.side, 3)\nself.check_trade(trades[3], buy2_order.order_id, buy1_order.instmt,\n    TestBasicOrders.price, TestBasicOrders.lot_size, buy2_order.side, 4)\ndel_order = me.cancel_order(buy2_order.order_id, TestBasicOrders.instmt)\nself.check_order_book(me, TestBasicOrders.instmt, 0, 0)\nself.check_deleted_order(buy2_order, del_order)\n"
}