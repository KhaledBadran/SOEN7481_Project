{
    "functionName": "test_Shap",
    "className": "TestShapExplainer",
    "fileName": "/IBM_&_AIX360/tests_&_shap_&_test_shap.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "np.random.seed(1)\nX_train, X_test, Y_train, Y_test = train_test_split(*shap.datasets.iris(),\n    test_size=0.2, random_state=0)\nknn = sklearn.neighbors.KNeighborsClassifier()\nknn.fit(X_train, Y_train)\nv = 100 * np.sum(knn.predict(X_test) == Y_test) / len(Y_test)\nprint('Accuracy = {0}%'.format(v))\nshapexplainer = KernelExplainer(knn.predict_proba, X_train)\nshap_values = shapexplainer.explain_instance(X_test.iloc[(0), :])\nprint('knn X_test iloc_0')\nprint(shap_values)\nprint(shapexplainer.explainer.expected_value[0])\nprint(shap_values[0])\nshap_values = shapexplainer.explain_instance(X_test)\nprint('knn X_test')\nprint(shap_values)\nprint(shapexplainer.explainer.expected_value[0])\nprint(shap_values[0])\nsvc_linear = sklearn.svm.SVC(kernel='linear', probability=True)\nsvc_linear.fit(X_train, Y_train)\nv = 100 * np.sum(svc_linear.predict(X_test) == Y_test) / len(Y_test)\nprint('Accuracy = {0}%'.format(v))\nshapexplainer = KernelExplainer(svc_linear.predict_proba, X_train)\nshap_values = shapexplainer.explain_instance(X_test)\nprint('svc X_test')\nprint(shap_values)\nprint(shapexplainer.explainer.expected_value[0])\nprint(shap_values[0])\nnp.random.seed(1)\nX, y = shap.datasets.adult()\nX_train, X_valid, y_train, y_valid = sklearn.model_selection.train_test_split(X\n    , y, test_size=0.2, random_state=7)\nknn = sklearn.neighbors.KNeighborsClassifier()\nknn.fit(X_train, y_train)\nf = lambda x: knn.predict_proba(x)[:, (1)]\nmed = X_train.median().values.reshape((1, X_train.shape[1]))\nshapexplainer = KernelExplainer(f, med)\nshap_values_single = shapexplainer.explain_instance(X.iloc[(0), :],\n    nsamples=1000)\nprint('Shap Tabular Example')\nprint(shapexplainer.explainer.expected_value)\nprint(shap_values_single)\nprint('Invoked Shap KernelExplainer')\n"
}