{
    "functionName": "test_activation",
    "className": "TestActivations",
    "fileName": "/oujago_&_NumpyDL/tests_&_test_activaton.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "input = np.arange(24).reshape((4, 6))\nnpdl_act = activations.get(activation)\nif activation == 'sigmoid':\n    f_res = npdl_act.forward(input)\n    assert 0.0 <= np.all(f_res) <= 1.0\n    assert npdl_act.derivative().shape == input.shape\nelif activation == 'tanh':\n    f_res = npdl_act.forward(input)\n    assert -1.0 <= np.all(f_res) <= 1.0\n    assert npdl_act.derivative().shape == input.shape\nelif activation == 'relu':\n    f_res = npdl_act.forward(input)\n    assert np.all(f_res) >= 0.0\n    assert npdl_act.derivative().shape == input.shape\n    assert np.all(npdl_act.derivative()) <= 1.0\nelif activation == 'linear':\n    f_res = npdl_act.forward(input)\n    assert np.allclose(f_res, input)\n    assert npdl_act.derivative().shape == input.shape\n    assert np.all(npdl_act.derivative()) == 1.0\nelif activation == 'softmax':\n    f_res = npdl_act.forward(input)\n    assert 0.0 <= np.all(f_res) <= 1.0\n    assert npdl_act.derivative().shape == input.shape\n    assert np.all(npdl_act.derivative()) == 1.0\nelif activation == 'elliot':\n    f_res = npdl_act.forward(input)\n    assert f_res.shape == input.shape\n    assert npdl_act.derivative().shape == input.shape\nelif activation == 'SymmetricElliot':\n    f_res = npdl_act.forward(input)\n    assert f_res.shape == input.shape\n    assert npdl_act.derivative().shape == input.shape\nelif activation == 'SoftPlus':\n    f_res = npdl_act.forward(input)\n    assert f_res.shape == input.shape\n    assert npdl_act.derivative().shape == input.shape\nelif activation == 'SoftSign':\n    f_res = npdl_act.forward(input)\n    assert f_res.shape == input.shape\n    assert npdl_act.derivative().shape == input.shape\npytest.mark.parametrize('activation', ['sigmoid', 'tanh', 'relu', 'linear',\n    'softmax', 'elliot', 'SymmetricElliot', 'SoftPlus', 'SoftSign'])"
}