{
    "functionName": "test_to_dict_flat_not_interleaved_categorized_by_data_element",
    "className": "DictTest",
    "fileName": "/pmeal_&_OpenPNM/tests_&_unit_&_io_&_DictTest.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "D = Dict.to_dict(network=self.net, phases=[self.phase_1, self.phase_2],\n    flatten=True, interleave=False, categorize_by=['data', 'element'])\nassert set(D.keys()) == set([i.name for i in self.net.project])\nd = set(['pore', 'throat'])\nassert d.issubset(D['net_01']['labels'].keys())\nassert d.issubset(D['net_01']['properties'].keys())\nassert d.issubset(D['geo_01']['labels'].keys())\nassert d.issubset(D['geo_01']['properties'].keys())\nassert d.issubset(D['geo_02']['labels'].keys())\nassert d.issubset(D['geo_02']['properties'].keys())\nassert d.issubset(D['phase_01']['labels'].keys())\nassert d.issubset(D['phase_01']['properties'].keys())\nassert d.issubset(D['phase_02']['labels'].keys())\nassert d.issubset(D['phase_02']['properties'].keys())\nassert d.issubset(D['phys_01']['labels'].keys())\nassert d.issubset(D['phys_01']['properties'].keys())\nassert d.issubset(D['phys_02']['labels'].keys())\nassert d.issubset(D['phys_02']['properties'].keys())\nassert d.issubset(D['phys_03']['labels'].keys())\nassert d.issubset(D['phys_03']['properties'].keys())\nassert d.issubset(D['phys_04']['labels'].keys())\nassert d.issubset(D['phys_04']['properties'].keys())\n"
}