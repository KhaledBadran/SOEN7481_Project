{
    "functionName": "test_get_validity_string_parsable",
    "className": "FlaskEasyJWTTest",
    "fileName": "/BMeu_&_Flask-EasyJWT/tests_&_flask_easyjwt_test.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n            Test getting the validity if it is configured as a string that can be parsed to an integer.\n\n            Expected Result: The token's validity as defined in the configuration. No warning is issued.\n        \"\"\"\nself.app.config['EASYJWT_TOKEN_VALIDITY'] = str(self.validity * 60)\nvalidity = FlaskEasyJWT.get_validity()\nself.assertEqual(timedelta(seconds=int(self.app.config[\n    'EASYJWT_TOKEN_VALIDITY'])), validity)\nmock_warn.assert_not_called()\npatch('flask_easyjwt.flask_easyjwt.warn')"
}