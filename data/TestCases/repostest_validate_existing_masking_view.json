{
    "functionName": "test_validate_existing_masking_view",
    "className": "TestMigrate",
    "fileName": "/MichaelMcAleer_&_PyU4V/PyU4V_&_tests_&_unit_tests_&_test_migrate.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Test for validate_existing_masking_view.\"\"\"\nnew_masking_view_details = self.utils.get_masking_view(self.data.smis_mv_1)\nelement_dict = self.utils.compile_new_element_names(self.data.smis_mv_1,\n    self.data.m_portgroup, self.data.m_initiatorgroup, self.data.smis_sg_1)\nself.assertTrue(self.utils.validate_existing_masking_view(\n    new_masking_view_details, self.data.m_portgroup, self.data.m_host_name,\n    element_dict))\nmock.patch.object(provisioning.ProvisioningFunctions,\n    'is_child_storage_group_in_parent_storage_group', return_value=True)mock.patch.object(migrate_utils.MigrateUtils, 'get_storage_group',\n    return_value=pcd.CommonData.m_storagegroup)mock.patch.object(provisioning.ProvisioningFunctions, 'get_masking_view',\n    return_value=pcd.CommonData.m_maskingview)"
}