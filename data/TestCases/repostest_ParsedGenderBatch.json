{
    "functionName": "test_ParsedGenderBatch",
    "className": null,
    "fileName": "/JosephPallipadan_&_Namsor-API-Wrapper-Python/namsorclient_&_tests_&_test_request_objects.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "tester = namsorclient.ParsedGenderBatch()\nassert tester.response_type == namsorclient.GenderResponse\nnames = []\nfor id in range(10):\n    name = str(faker_obj.name()).split(' ')\n    while len(name) < 3:\n        name = str(faker_obj.name()).split(' ')\n    name = [name[0], name[2], 'Dr.', 'The First', name[1], id]\n    names.append(name)\n    tester.addItem(name[0], name[1], name[2], name[3], name[4], name[5])\n    assert isinstance(tester.items[-1], namsorclient.ParsedGenderBatch.\n        ParsedGenderBatchItem)\n    assert tester.items[-1].first_name == name[0]\n    assert tester.items[-1].last_name == name[1]\n    assert tester.items[-1].prefix_or_title == name[2]\n    assert tester.items[-1].suffix == name[3]\n    assert tester.items[-1].middle_name == name[4]\n    assert tester.items[-1].ID == name[5]\nfor name, item in zip(names, tester.batch_item_converter()):\n    keys = ['id', 'firstName', 'lastName', 'prefixOrTitle', 'suffix',\n        'middleName']\n    assert all([(key in item) for key in keys])\n    assert item['firstName'] == name[0]\n    assert item['lastName'] == name[1]\n    assert item['prefixOrTitle'] == name[2]\n    assert item['suffix'] == name[3]\n    assert item['middleName'] == name[4]\n    assert item['id'] == name[5]\n"
}