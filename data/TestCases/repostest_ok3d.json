{
    "functionName": "test_ok3d",
    "className": null,
    "fileName": "/bsmurphy_&_PyKrige/tests_&_test_core.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "data, (ok_test_answer, gridx_ref, gridy_ref), _ = validation_ref\nk3d = OrdinaryKriging3D(data[:, (0)], data[:, (1)], np.zeros(data[:, (1)].\n    shape), data[:, (2)], variogram_model='exponential',\n    variogram_parameters=[500.0, 3000.0, 0.0])\nwith pytest.raises(ValueError):\n    OrdinaryKriging3D(data[:, (0)], data[:, (1)], np.zeros(data[:, (1)].\n        shape), data[:, (2)], variogram_model='exponential',\n        variogram_parameters=[500.0, 3000.0, 0.0], exact_values='blurg')\nok3d_non_exact = OrdinaryKriging3D(data[:, (0)], data[:, (1)], np.zeros(\n    data[:, (1)].shape), data[:, (2)], variogram_model='exponential',\n    variogram_parameters=[500.0, 3000.0, 0.0], exact_values=False)\nk, ss = k3d.execute('grid', gridx_ref, gridy_ref, np.array([0.0]), backend=\n    'vectorized')\nassert_allclose(np.squeeze(k), ok_test_answer)\nk, ss = k3d.execute('grid', gridx_ref, gridy_ref, np.array([0.0]), backend=\n    'loop')\nassert_allclose(np.squeeze(k), ok_test_answer)\ndata = np.genfromtxt(os.path.join(BASE_DIR, 'test_data', 'test3d_data.txt'),\n    skip_header=1)\nans = np.genfromtxt(os.path.join(BASE_DIR, 'test_data', 'test3d_answer.txt'))\nans_z = ans[:, (0)].reshape((10, 10, 10))\nans_ss = ans[:, (1)].reshape((10, 10, 10))\nk3d = OrdinaryKriging3D(data[:, (0)], data[:, (1)], data[:, (2)], data[:, (\n    3)], variogram_model='linear', variogram_parameters=[1.0, 0.1])\nk, ss = k3d.execute('grid', np.arange(10.0), np.arange(10.0), np.arange(\n    10.0), backend='vectorized')\nassert_allclose(k, ans_z, rtol=0.001, atol=1e-08)\nassert_allclose(ss, ans_ss, rtol=0.001, atol=1e-08)\nk3d = OrdinaryKriging3D(data[:, (0)], data[:, (1)], data[:, (2)], data[:, (\n    3)], variogram_model='linear', variogram_parameters=[1.0, 0.1])\nk, ss = k3d.execute('grid', np.arange(10.0), np.arange(10.0), np.arange(\n    10.0), backend='loop')\nassert_allclose(k, ans_z, rtol=0.001, atol=1e-08)\nassert_allclose(ss, ans_ss, rtol=0.001, atol=1e-08)\n"
}