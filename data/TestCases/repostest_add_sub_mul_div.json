{
    "functionName": "test_add_sub_mul_div",
    "className": "RationalFunction",
    "fileName": "/mgely_&_PyRatFun/tests_&_test_all.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "v = core.Polynomial([1, 1])\nu1 = core.Polynomial([3, 5, 1])\nu2 = core.Polynomial([1.0j - 1, 3.2e-14, 1])\nself.assertEqual(core.RationalFunction(u1, v) + core.RationalFunction(u2, v\n    ), core.RationalFunction(u1 + u2, v))\nself.assertEqual(core.RationalFunction(u1, v) - core.RationalFunction(u2, v\n    ), core.RationalFunction(u1 - u2, v))\nself.assertEqual(core.RationalFunction(u1, v) * core.RationalFunction(u2, v\n    ), core.RationalFunction(u1 * u2, v * v))\nself.assertEqual(core.RationalFunction(u1, v) / core.RationalFunction(u2, v\n    ), core.RationalFunction(u1, u2))\nu1, v1 = [1, 1], [2, 1]\nu2, v2 = [7, 1], [11, 1]\nu3, v3 = [25, 21, 2], [22, 13, 1]\nself.assertEqual(core.RationalFunction(u1, v1) + core.RationalFunction(u2,\n    v2), core.RationalFunction(u3, v3))\nu3, v3 = [-3, 3], [22, 13, 1]\nself.assertEqual(core.RationalFunction(u1, v1) - core.RationalFunction(u2,\n    v2), core.RationalFunction(u3, v3))\nu3, v3 = [7, 8, 1], [22, 13, 1]\nself.assertEqual(core.RationalFunction(u1, v1) * core.RationalFunction(u2,\n    v2), core.RationalFunction(u3, v3))\nu3, v3 = [11, 12, 1], [14, 9, 1]\nself.assertEqual(core.RationalFunction(u1, v1) / core.RationalFunction(u2,\n    v2), core.RationalFunction(u3, v3))\n"
}