{
    "functionName": "_get_fiber_slice",
    "className": "DelaunayGeometry",
    "fileName": "/pmeal_&_OpenPNM/openpnm_&_materials_&_VoronoiFibers.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"\n        Plot an image of a slice through the fiber image\n        plane contains percentage values of the length of the image in each\n        axis\n\n        Parameters\n        ----------\n        plane : array_like\n        List of 3 values, [x,y,z], 2 must be zero and the other must be between\n        zero and one representing the fraction of the domain to slice along\n        the non-zero axis\n\n        index : array_like\n        similar to plane but instead of the fraction an index of the image is\n        used\n        \"\"\"\nif hasattr(self, '_fiber_image') is False:\n    logger.warning('This method only works when a fiber image exists')\n    return None\nif plane is None and index is None:\n    logger.warning('Please provide a plane array or index array')\n    return None\nif plane is not None:\n    if 'array' not in plane.__class__.__name__:\n        plane = np.asarray(plane)\n    if np.sum(plane == 0) != 2:\n        logger.warning('Plane argument must have two zero valued ' +\n            'elements to produce a planar slice')\n        return None\n    t = np.asarray(np.shape(self._fiber_image))\n    s = np.around(plane * t).astype(int)\n    s[s >= self._fiber_image.shape] -= 1\nelif index is not None:\n    if 'array' not in index.__class__.__name__:\n        index = np.asarray(index)\n    if np.sum(index == 0) != 2:\n        logger.warning('Index argument must have two zero valued ' +\n            'elements to produce a planar slice')\n        return None\n    if 'int' not in str(index.dtype):\n        index = np.around(index).astype(int)\n    s = index\nif s[0] != 0:\n    slice_image = self._fiber_image[(s[0]), :, :]\nelif s[1] != 0:\n    slice_image = self._fiber_image[:, (s[1]), :]\nelse:\n    slice_image = self._fiber_image[:, :, (s[2])]\nreturn slice_image\n"
}