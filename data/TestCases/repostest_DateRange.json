{
    "functionName": "test_DateRange",
    "className": null,
    "fileName": "/hdoupe_&_ParamTools/paramtools_&_tests_&_test_validate.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "drange = DateRange('2019-01-01', '2019-01-10', step={'days': 1})\nexp = [datetime.date(2019, 1, i) for i in range(1, 10 + 1)]\nassert drange.grid() == exp\ndrange = DateRange('2019-01-01', '2019-01-10')\nexp = [datetime.date(2019, 1, i) for i in range(1, 10 + 1)]\nassert drange.grid() == exp\ndrange = DateRange('2019-01-01', '2019-01-10', step={'days': 3})\nexp = [datetime.date(2019, 1, i) for i in range(1, 10 + 1, 3)]\nassert drange.grid() == exp\ndranges = [DateRange('2019-01-01', '2019-01-10', step={'days': 1}),\n    DateRange(min_vo=[{'value': '2019-01-01'}], max_vo=[{'value':\n    '2019-01-10'}], step={'days': 1})]\nfor drange in dranges:\n    assert drange(datetime.date(2019, 1, 2))\n    assert drange({'value': datetime.date(2019, 1, 2)}, is_value_object=True)\n    with pytest.raises(ValidationError):\n        drange(datetime.date(2020, 1, 2))\n    with pytest.raises(ValidationError):\n        drange({'value': datetime.date(2020, 1, 2)}, is_value_object=True)\n"
}