{
    "functionName": "test_automl_with_kfold",
    "className": null,
    "fileName": "/Neuraxio_&_Neuraxle/testing_&_metaopt_&_test_automl.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "hp_repository = HyperparamsJSONRepository(cache_folder=str(tmpdir))\nauto_ml = AutoML(pipeline=Pipeline([MultiplyByN(2).set_hyperparams_space(\n    HyperparameterSpace({'multiply_by': FixedHyperparameter(2)})),\n    NumpyReshape(new_shape=(-1, 1)), linear_model.LinearRegression()]),\n    validation_splitter=ValidationSplitter(0.2), hyperparams_optimizer=\n    RandomSearchHyperparameterSelectionStrategy(), scoring_callback=\n    ScoringCallback(mean_squared_error, higher_score_is_better=False),\n    callbacks=[MetricCallback('mse', metric_function=mean_squared_error,\n    higher_score_is_better=False)], n_trials=1, epochs=10, refit_trial=True,\n    print_func=print, hyperparams_repository=hp_repository)\ndata_inputs = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\nexpected_outputs = data_inputs * 4\nauto_ml.fit(data_inputs=data_inputs, expected_outputs=expected_outputs)\np = auto_ml.get_best_model()\noutputs = p.transform(data_inputs)\nmse = mean_squared_error(expected_outputs, outputs)\nassert mse < 1000\n"
}