{
    "functionName": "test_remove_triangle_with_index",
    "className": "TestTexture",
    "fileName": "/fechbmaster_&_3DNIRmapper/tests_&_test_texture.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "expected_visible_vertices = np.array([[1, 1, -1], [-1, 1, 1], [1, 1, 1]])\nexpected_uv_coords = np.array([[0.31770833, 0.17592593], [0.68229167, \n    0.82407407], [0.31770833, 0.82407407]])\nexpected_vis_vert_indices = np.array([[0, 7, 4]])\nexpected_normal_indices = np.array([[0, 7, 4]])\nexpected_uv_indices = np.array([0, 1, 2])\nexpected_counts = [667]\nexpected_vis_triangle_ids = [5]\nexpected_dup_triangle_ids = []\nself.texture.remove_triangle_with_index(11)\ntry:\n    np.testing.assert_equal(self.texture.visible_vertices,\n        expected_visible_vertices)\n    np.testing.assert_equal(self.texture.verts_indices,\n        expected_vis_vert_indices)\n    np.testing.assert_equal(self.texture.normal_indices,\n        expected_normal_indices)\n    np.testing.assert_equal(self.texture.uv_coords, expected_uv_coords)\n    np.testing.assert_equal(self.texture.uv_indices, expected_uv_indices)\n    np.testing.assert_equal(self.texture.counts, expected_counts)\n    np.testing.assert_equal(self.texture.vis_triangle_indices,\n        expected_vis_triangle_ids)\n    np.testing.assert_equal(self.texture.duplicate_triangle_indices,\n        expected_dup_triangle_ids)\n    res = True\nexcept AssertionError as err:\n    res = False\n    print(err)\nself.assertTrue(res)\n"
}