{
    "functionName": "__test_set_op",
    "className": "RedisSetTestCase",
    "fileName": "/wo1fsea_&_PyEasyRPC/tests_&_test_redis_collections_&_test_set.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "s0.clear()\ns1.clear()\ns0.update(data0)\ns1.update(data1)\nself.assertEqual(s0.difference(s1), data0.difference(data1))\nself.assertEqual(s0.intersection(s1), data0.intersection(data1))\nself.assertEqual(s0.symmetric_difference(s1), data0.symmetric_difference(data1)\n    )\nself.assertEqual(s0.isdisjoint(s1), data0.isdisjoint(data1))\nself.assertEqual(s0.issubset(s1), data0.issubset(data1))\nself.assertEqual(s0.issuperset(s1), data0.issuperset(data1))\nself.assertEqual(s0 == s1, data0 == data1)\nself.assertEqual(s0 != s1, data0 != data1)\nself.assertEqual(s0 >= s1, data0 >= data1)\nself.assertEqual(s0 > s1, data0 > data1)\nself.assertEqual(s0 <= s1, data0 <= data1)\nself.assertEqual(s0 < s1, data0 < data1)\nself.assertEqual(s0 - s1, data0 - data1)\nself.assertEqual(s0 & s1, data0 & data1)\nself.assertEqual(s0 | s1, data0 | data1)\nself.assertEqual(s0 ^ s1, data0 ^ data1)\ns0.clear()\ns0.update(data0)\ns0.difference_update(s1)\nself.assertEqual(s0, data0.difference(data1))\ns0.clear()\ns0.update(data0)\ns0.intersection_update(s1)\nself.assertEqual(s0, data0.intersection(data1))\ns0.clear()\ns0.update(data0)\ns0.symmetric_difference_update(s1)\nself.assertEqual(s0, data0.symmetric_difference(data1))\ns0.clear()\ns0.update(data0)\ns0 -= s1\nself.assertEqual(s0, data0 - data1)\ns0.clear()\ns0.update(data0)\ns0 &= s1\nself.assertEqual(s0, data0 & data1)\ns0.clear()\ns0.update(data0)\ns0 |= s1\nself.assertEqual(s0, data0 | data1)\ns0.clear()\ns0.update(data0)\ns0 ^= s1\nself.assertEqual(s0, data0 ^ data1)\ns0.clear()\ns1.clear()\n"
}