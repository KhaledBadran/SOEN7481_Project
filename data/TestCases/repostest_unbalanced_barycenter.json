{
    "functionName": "test_unbalanced_barycenter",
    "className": null,
    "fileName": "/PythonOT_&_POT/test_&_test_unbalanced.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "n = 100\nrng = np.random.RandomState(42)\nx = rng.randn(n, 2)\nA = rng.rand(n, 2)\nA = A * np.array([1, 2])[(None), :]\nM = ot.dist(x, x)\nepsilon = 1.0\nreg_m = 1.0\nq, log = barycenter_unbalanced(A, M, reg=epsilon, reg_m=reg_m, method=\n    method, log=True)\nfi = reg_m / (reg_m + epsilon)\nlogA = np.log(A + 1e-16)\nlogq = np.log(q + 1e-16)[:, (None)]\nlogKtu = logsumexp(log['logu'][:, (None), :] - M[:, :, (None)] / epsilon,\n    axis=0)\nlogKv = logsumexp(log['logv'][(None), :] - M[:, :, (None)] / epsilon, axis=1)\nv_final = fi * (logq - logKtu)\nu_final = fi * (logA - logKv)\nnp.testing.assert_allclose(u_final, log['logu'], atol=1e-05)\nnp.testing.assert_allclose(v_final, log['logv'], atol=1e-05)\npytest.mark.parametrize('method', ['sinkhorn', 'sinkhorn_stabilized'])"
}