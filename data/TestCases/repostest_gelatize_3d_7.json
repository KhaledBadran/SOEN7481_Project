{
    "functionName": "test_gelatize_3d_7",
    "className": null,
    "fileName": "/ratnania_&_GeLaTo/gelato_&_tests_&_test_gelatize_3d.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "domain = Domain('Omega', dim=DIM)\nV = ScalarFunctionSpace('V', domain)\nu, v = elements_of(V, names='u,v')\nnx, ny, nz = symbols('nx ny nz', integer=True)\npx, py, pz = symbols('px py pz', integer=True)\ntx, ty, tz = symbols('tx ty tz')\nbx = Constant('bx')\nby = Constant('by')\nbz = Constant('bz')\nb = Tuple(bx, by, bz)\nexpected = -bx * I * Advection(px, tx) * Mass(py, ty) * Mass(pz, tz) / (ny * nz\n    ) - by * I * Advection(py, ty) * Mass(px, tx) * Mass(pz, tz) / (nx * nz\n    ) - bz * I * Advection(pz, tz) * Mass(px, tx) * Mass(py, ty) / (nx * ny)\nexpr = dot(b, grad(v)) * u\nexpr = BilinearForm((u, v), integral(domain, expr))\nassert gelatize(expr) == expected\n"
}