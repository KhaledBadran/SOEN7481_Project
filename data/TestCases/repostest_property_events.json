{
    "functionName": "test_property_events",
    "className": null,
    "fileName": "/AO-StreetArt_&_PyAesel/test_&_test_event.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "print('Testing Property API')\nprint('Creating base scene')\nscn = AeselScene()\nscn.name = 'test'\nscn.region = 'US-MD'\nscn.latitude = 100.0\nscn.longitude = 100.0\nscn.tags = []\nscn.devices = []\nscn_crt_resp = None\ntry:\n    scn_crt_resp = transaction_client.create_scene('propEventScene', scn)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(scn_crt_resp)\nprint('Create Property')\nprop = AeselProperty()\nprop.name = 'testProperty'\nprop.scene = 'propEventScene'\nprop.values.append(100.0)\nprop_action = AeselAction()\nprop_action.name = 'testPropAction'\nprop_action.description = 'this is a Property Action'\nprop_frame_initial = AeselPropertyFrame()\nprop_frame_initial.frame = 1\npfi_value = AeselPropertyValue()\npfi_value.value = 100.0\npfi_value.left_type = 'test'\npfi_value.left_x = 10.0\npfi_value.left_y = 10.2\npfi_value.right_type = 'test2'\npfi_value.right_x = 10.1\npfi_value.right_y = 10.3\nprop_frame_initial.values = [pfi_value]\nprop_action.keyframes = [prop_frame_initial]\nprop.actions = [prop_action]\nprop_crt_resp = None\ntry:\n    prop_crt_resp = transaction_client.create_property('propTestScene', prop)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(prop_crt_resp)\nassert len(prop_crt_resp['properties']) > 0\nassert len(prop_crt_resp['properties'][0]['key']) > 0\nprop_key = prop_crt_resp['properties'][0]['key']\nprint('Send Property Event')\nevt_prop = AeselProperty()\nevt_prop.key = prop_key\nevt_prop.name = 'testPropAction'\nevt_prop.scene = 'propEventScene'\nevt_prop.values.append(110.0)\nevent_client.send_property_update(evt_prop)\ntime.sleep(1)\nprint('Check Property')\nprop_get_resp = None\ntry:\n    prop_get_resp = transaction_client.get_property('propEventScene', prop_key)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(prop_get_resp)\nassert len(prop_get_resp['properties']) > 0\nassert abs(prop_get_resp['properties'][0]['values'][0] - 110.0) < 0.001\nprint('Send Property Frame Event')\nevt_prop2 = AeselProperty()\nevt_prop2.key = prop_key\nevt_action = AeselAction()\nevt_action.name = 'testPropAction'\nevt_frame = AeselPropertyFrame()\nevt_frame.frame = 1\nevt_value = AeselPropertyValue()\nevt_value.value = 103.0\nevt_value.left_type = 'test2'\nevt_value.left_x = 15.0\nevt_value.left_y = 16.2\nevt_value.right_type = 'test3'\nevt_value.right_x = 17.1\nevt_value.right_y = 18.3\nevt_frame.values = [evt_value]\nevt_action.keyframes = [evt_frame]\nevt_prop2.actions = [evt_action]\nevent_client.send_property_frame_update(evt_prop2)\ntime.sleep(1)\nprint('Check Property')\nprop_get_resp2 = None\ntry:\n    prop_get_resp2 = transaction_client.get_property('propEventScene', prop_key\n        )\nexcept Exception as e:\n    print(e)\n    assert False\nprint(prop_get_resp2)\nassert len(prop_get_resp2['properties']) > 0\nassert len(prop_get_resp2['properties'][0]['actions']) > 0\nassert len(prop_get_resp2['properties'][0]['actions'][0]['keyframes']) > 0\nassert len(prop_get_resp2['properties'][0]['actions'][0]['keyframes'][0][\n    'values']) > 0\nassert abs(prop_get_resp2['properties'][0]['actions'][0]['keyframes'][0][\n    'values'][0]['value'] - 103.0) < 0.001\nprint('Delete Property')\ntry:\n    transaction_client.delete_property('propTestScene', prop_key)\nexcept Exception as e:\n    print(e)\n    assert False\n"
}