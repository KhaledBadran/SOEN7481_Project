{
    "functionName": "test_generate_eline_list2",
    "className": null,
    "fileName": "/NSLS-II_&_PyXRF/pyxrf_&_core_&_tests_&_test_xrf_utils.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n    ``generate_eline_list``: explicitely select eline categories\n    \"\"\"\nassert generate_eline_list(elements, incident_energy=incident_energy, lines\n    =lines) == elines, 'Emission line list is generated incorrectly'\npytest.mark.parametrize('elements, incident_energy, lines, elines', [(['Fe',\n    'W', 'Ta'], 12.0, ('K', 'L', 'M'), ['Fe_K', 'W_L', 'W_M', 'Ta_L',\n    'Ta_M']), (['Fe', 'W', 'Ta'], 12.0, ('K',), ['Fe_K']), (['Fe', 'W',\n    'Ta'], 12.0, ('L',), ['W_L', 'Ta_L']), (['Fe', 'W', 'Ta'], 12.0, ('M',),\n    ['W_M', 'Ta_M']), (['Fe', 'W', 'Ta'], 12.0, ('K', 'L'), ['Fe_K', 'W_L',\n    'Ta_L']), (['Fe', 'W', 'Ta'], 12.0, ('K', 'M'), ['Fe_K', 'W_M', 'Ta_M']\n    ), (['Fe', 'W', 'Ta'], 12.0, ('L', 'M'), ['W_L', 'W_M', 'Ta_L', 'Ta_M'])])"
}