{
    "functionName": "test_uk_functional_drift",
    "className": null,
    "fileName": "/bsmurphy_&_PyKrige/tests_&_test_core.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "data, (gridx, gridy, gridx_2), mask_ref = sample_data_2d\nwell = np.array([[1.1, 1.1, -1.0]])\nfunc_x = lambda x, y: x\nfunc_y = lambda x, y: y\ndef func_well(x, y):\n    return -well[0, 2] * np.log(np.sqrt((x - well[0, 0]) ** 2.0 + (y - well\n        [0, 1]) ** 2.0))\nwith pytest.raises(ValueError):\n    UniversalKriging(data[:, (0)], data[:, (1)], data[:, (2)],\n        variogram_model='linear', drift_terms=['functional'])\nwith pytest.raises(TypeError):\n    UniversalKriging(data[:, (0)], data[:, (1)], data[:, (2)],\n        variogram_model='linear', drift_terms=['functional'],\n        functional_drift=func_x)\nuk_func = UniversalKriging(data[:, (0)], data[:, (1)], data[:, (2)],\n    variogram_model='linear', drift_terms=['functional'], functional_drift=\n    [func_x, func_y])\nz_func, ss_func = uk_func.execute('grid', gridx, gridy)\nuk_lin = UniversalKriging(data[:, (0)], data[:, (1)], data[:, (2)],\n    variogram_model='linear', drift_terms=['regional_linear'])\nz_lin, ss_lin = uk_lin.execute('grid', gridx, gridy)\nassert_allclose(z_func, z_lin)\nassert_allclose(ss_func, ss_lin)\nuk_func = UniversalKriging(data[:, (0)], data[:, (1)], data[:, (2)],\n    variogram_model='linear', drift_terms=['functional'], functional_drift=\n    [func_well])\nz_func, ss_func = uk_func.execute('grid', gridx, gridy)\nuk_lin = UniversalKriging(data[:, (0)], data[:, (1)], data[:, (2)],\n    variogram_model='linear', drift_terms=['point_log'], point_drift=well)\nz_lin, ss_lin = uk_lin.execute('grid', gridx, gridy)\nassert_allclose(z_func, z_lin)\nassert_allclose(ss_func, ss_lin)\nuk_func = UniversalKriging(data[:, (0)], data[:, (1)], data[:, (2)],\n    variogram_model='linear', drift_terms=['functional'], functional_drift=\n    [func_x, func_y, func_well])\nz_func, ss_func = uk_func.execute('grid', gridx, gridy)\nuk_lin = UniversalKriging(data[:, (0)], data[:, (1)], data[:, (2)],\n    variogram_model='linear', drift_terms=['regional_linear', 'point_log'],\n    point_drift=well)\nz_lin, ss_lin = uk_lin.execute('grid', gridx, gridy)\nassert_allclose(z_func, z_lin)\nassert_allclose(ss_func, ss_lin)\n"
}