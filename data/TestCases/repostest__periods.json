{
    "functionName": "test__periods",
    "className": "TestRecurrence",
    "fileName": "/kuzmoyev_&_Google-Calendar-Simple-API/tests_&_test_recurrence.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "def assert_periods_equal(ps, rperiods):\n    self.assertEqual(p(ps), 'VALUE=PERIOD:' + rperiods)\nassert_periods_equal((15 / Jun / 2020, 17 / Jul / 2020),\n    '20200615T000000Z/20200717T000000Z')\nassert_periods_equal((15 / Jun / 2020, Duration(w=2, d=1)),\n    '20200615T000000Z/P2W1D')\nassert_periods_equal((15 / Jun / 2020, Duration(w=2, d=1, m=10)),\n    '20200615T000000Z/P2W1DT10M')\nassert_periods_equal((15 / Jun / 2020, Duration(w=2, d=1, h=11, m=10, s=22)\n    ), '20200615T000000Z/P2W1DT11H10M22S')\nassert_periods_equal([((15 / Jun / 2020)[21:10], (17 / Jul / 2020)[22:12])],\n    '20200615T211000Z/20200717T221200Z')\nassert_periods_equal([((15 / Jun / 2020)[21:10], (17 / Jul / 2020)[22:12])],\n    '20200615T211000Z/20200717T221200Z')\nassert_periods_equal([((15 / Jun / 2020)[21:10], (17 / Jul / 2020)[22:12]),\n    ((15 / Jun / 2020)[21:10], Duration(w=2, d=1, m=10))],\n    '20200615T211000Z/20200717T221200Z,20200615T211000Z/P2W1DT10M')\nperiods = partial(Recurrence.periods, timezone=TEST_TIMEZONE)\nexclude_periods = partial(Recurrence.exclude_periods, timezone=TEST_TIMEZONE)\nself.assertEqual(periods((20 / Jul / 2020, 22 / Jul / 2020)),\n    'RDATE;VALUE=PERIOD:20200720T000000Z/20200722T000000Z')\nself.assertEqual(periods([(20 / Jul / 2020, 22 / Jul / 2020), (25 / Jul / \n    2020, Duration(w=2, d=1))]),\n    'RDATE;VALUE=PERIOD:20200720T000000Z/20200722T000000Z,20200725T000000Z/P2W1D'\n    )\nself.assertEqual(periods(((20 / Jul / 2020)[20:11], (22 / Jul / 2020)[20:12\n    ])), 'RDATE;VALUE=PERIOD:20200720T201100Z/20200722T201200Z')\nself.assertEqual(periods([((20 / Jul / 2020)[20:11], (22 / Jul / 2020)[20:\n    12]), ((25 / Jul / 2020)[20:11], Duration(w=2, d=1))]),\n    'RDATE;VALUE=PERIOD:20200720T201100Z/20200722T201200Z,20200725T201100Z/P2W1D'\n    )\nself.assertEqual(exclude_periods((20 / Jul / 2020, 22 / Jul / 2020)),\n    'EXDATE;VALUE=PERIOD:20200720T000000Z/20200722T000000Z')\nself.assertEqual(exclude_periods([(20 / Jul / 2020, 22 / Jul / 2020), (25 /\n    Jul / 2020, Duration(w=2, d=1))]),\n    'EXDATE;VALUE=PERIOD:20200720T000000Z/20200722T000000Z,20200725T000000Z/P2W1D'\n    )\nself.assertEqual(exclude_periods(((20 / Jul / 2020)[20:11], (22 / Jul / \n    2020)[20:12])), 'EXDATE;VALUE=PERIOD:20200720T201100Z/20200722T201200Z')\nself.assertEqual(exclude_periods([((20 / Jul / 2020)[20:11], (22 / Jul / \n    2020)[20:12]), ((25 / Jul / 2020)[20:11], Duration(w=2, d=1))]),\n    'EXDATE;VALUE=PERIOD:20200720T201100Z/20200722T201200Z,20200725T201100Z/P2W1D'\n    )\n"
}