{
    "functionName": "test_cosmology_repr",
    "className": null,
    "fileName": "/LSSTDESC_&_CCL/pyccl_&_tests_&_test_cosmology.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Check that we can make a Cosmology object from its repr.\"\"\"\nimport pyccl\ncosmo = ccl.Cosmology(Omega_c=0.25, Omega_b=0.05, h=0.7, A_s=2.1e-09, n_s=\n    0.96, m_nu=[0.02, 0.1, 0.05], m_nu_type='list', z_mg=[0.0, 1.0], df_mg=\n    [0.01, 0.0])\ncosmo2 = eval(str(cosmo))\nassert_(ccl.comoving_radial_distance(cosmo, 0.5) == ccl.\n    comoving_radial_distance(cosmo2, 0.5))\ncosmo3 = eval(repr(cosmo))\nassert_(ccl.comoving_radial_distance(cosmo, 0.5) == ccl.\n    comoving_radial_distance(cosmo3, 0.5))\ncosmo = ccl.Cosmology(Omega_c=0.25, Omega_b=0.05, h=0.7, A_s=2.1e-09, n_s=\n    0.96, m_nu=np.array([0.02, 0.1, 0.05]), m_nu_type='list', z_mg=np.array\n    ([0.0, 1.0]), df_mg=np.array([0.01, 0.0]))\ncosmo2 = eval(str(cosmo))\nassert_(ccl.comoving_radial_distance(cosmo, 0.5) == ccl.\n    comoving_radial_distance(cosmo2, 0.5))\ncosmo3 = eval(repr(cosmo))\nassert_(ccl.comoving_radial_distance(cosmo, 0.5) == ccl.\n    comoving_radial_distance(cosmo3, 0.5))\n"
}