{
    "functionName": "test_search_filenames",
    "className": null,
    "fileName": "/FreeDiscovery_&_FreeDiscovery/freediscovery_&_engine_&_tests_&_test_vectorizer.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "cache_dir = check_cache()\nfe = FeatureVectorizer(cache_dir=cache_dir, mode='w')\nuuid = fe.setup(use_hashing=use_hashing)\nfe.ingest(data_dir, file_pattern='.*\\\\d.txt')\nassert fe.db_ is not None\nfor low, high, step in [(0, 1, 1), (0, 4, 1), (3, 1, -1)]:\n    idx_slice = list(range(low, high, step))\n    filenames_slice = [fe.filenames_[idx] for idx in idx_slice]\n    idx0 = fe.db_._search_filenames(filenames_slice)\n    assert_equal(idx0, idx_slice)\n    assert_equal(filenames_slice, fe[idx0])\nwith pytest.raises(NotFound):\n    fe.db_._search_filenames(['DOES_NOT_EXIST.txt'])\nif not use_hashing:\n    n_top_words = 5\n    terms = fe.query_features([2, 3, 5], n_top_words=n_top_words)\n    assert len(terms) == n_top_words\nfe.list_datasets()\npytest.mark.parametrize('use_hashing,', [True, False])"
}