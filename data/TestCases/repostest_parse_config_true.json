{
    "functionName": "test_parse_config_true",
    "className": null,
    "fileName": "/alex-ber_&_AlexBerUtils/tests_&_utils_&_init_app_conf_test.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "logger.info(f'{request._pyfuncitem.name}()')\nexpdd = {'general': {'profiles': ['dev'], 'log': {'version': 1,\n    'disable_existing_loggers': False, 'formatters': {'brief': {'format':\n    '%(message)s'}, 'detail': '%(message)s'}, 'root': {'level': 'INFO'}},\n    'config': {'file': None}, 'whiteListSysOverride': ['general', 'app'],\n    'listEnsure': []}, 'app': {'host_name': 'yahoo.com', 'news': 'cnn.com',\n    'portal': 'reddit.com', 'white_list': ['gamma', 'alpha', 'betha'],\n    'alt_white_list': [100, 10.0]}}\npck = '.'.join(['tests_data', __package__, 'initappconf'])\nwith path(pck, 'config.yml') as full_path:\n    expdd['general']['config']['file'] = str(full_path)\n    argsv = (\n        f'--general.config.file={full_path} --app.portal=reddit.com --general.profiles=dev '\n        .split())\n    dd = parse_config(None, argsv)\n    del dd['general']['log']['handlers']\n    del dd['general']['log']['root']['handlers']\n    pytest.assume(expdd == dd)\npytest.mark.yml"
}