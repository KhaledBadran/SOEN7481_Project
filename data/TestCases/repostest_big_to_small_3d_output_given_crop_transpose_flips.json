{
    "functionName": "test_big_to_small_3d_output_given_crop_transpose_flips",
    "className": null,
    "fileName": "/CCampJr_&_CRIkit2/crikit_&_data_&_tests_&_test_mosaic_hdf.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n    3D big dataset, divied up into small chunks -- WITH CROPPING, TRANSPOSING\n    AND FLIPPING H & V\n\n    Note: This test does not assert anything, but rather just ensures the methods\n    can run without raising errors\n    \"\"\"\norig_data_np = np.random.randn(40, 10, 3)\nfilename_in = 'test_h5mosaic_in.h5'\ndset_in_prefix = 'dset_'\nfid_in = h5py.File(filename_in, 'w')\nm_unit_size = 10\nn_unit_size = 5\nm_ct = orig_data_np.shape[0] // m_unit_size\nn_ct = orig_data_np.shape[1] // n_unit_size\nct = 0\nfor ni in range(n_ct):\n    for mi in range(m_ct):\n        temp = orig_data_np[mi * m_unit_size:(mi + 1) * m_unit_size, ni *\n            n_unit_size:(ni + 1) * n_unit_size, :]\n        fid_in.create_dataset(dset_in_prefix + '{}'.format(ct), shape=temp.\n            shape, data=temp)\n        ct += 1\nfid_in.close()\nfid_in = h5py.File(filename_in, 'r')\nmos = Mosaic()\nmos.parameters['StartR'] = 1\nmos.parameters['EndR'] = -1\nmos.parameters['StartC'] = 1\nmos.parameters['EndC'] = -1\nmos.parameters['Transpose'] = True\nmos.parameters['FlipVertical'] = True\nmos.parameters['FlipHorizontally'] = True\nct = 0\nfor ni in range(n_ct):\n    for mi in range(m_ct):\n        mos.append(fid_in[dset_in_prefix + '{}'.format(ct)])\n        ct += 1\nfilename_out = 'test_h5mosaic_out.h5'\ndset_out_name = 'dset'\nfid_out = h5py.File(filename_out, 'w')\nfid_out.create_dataset(dset_out_name, shape=mos.mosaic_shape((m_ct, n_ct)),\n    dtype=orig_data_np.dtype)\nmos.parameters['Order'] = 'R'\nmos.mosaicfull((m_ct, n_ct), out=fid_out[dset_out_name])\nfid_in.close()\nfid_out.close()\ntime.sleep(1)\ntry:\n    os.remove(filename_in)\nexcept:\n    print('Could not delete {}'.format(filename_in))\ntime.sleep(1)\ntry:\n    os.remove(filename_out)\nexcept:\n    print('Could not delete {}'.format(filename_out))\n"
}