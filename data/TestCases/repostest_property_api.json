{
    "functionName": "test_property_api",
    "className": null,
    "fileName": "/AO-StreetArt_&_PyAesel/test_&_test_transaction.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "print('Testing Property API')\nprint('Create base scene')\nscn = AeselScene()\nscn.name = 'testPropScene'\nscn.region = 'US-MD'\nscn.latitude = 100.0\nscn.longitude = 100.0\nscn.tags = []\nscn.devices = []\nscn_crt_resp = None\ntry:\n    scn_crt_resp = transaction_client.create_scene('propTestScene', scn)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(scn_crt_resp)\nprint('Create Property')\nprop = AeselProperty()\nprop.name = 'testProperty'\nprop.scene = 'propTestScene'\nprop.frame = 0\nprop.values.append(100.0)\nprop_crt_resp = None\ntry:\n    prop_crt_resp = transaction_client.create_property('propTestScene', prop)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(prop_crt_resp)\nassert len(prop_crt_resp['properties']) > 0\nassert len(prop_crt_resp['properties'][0]['key']) > 0\nprop_key = prop_crt_resp['properties'][0]['key']\nprint('Get Property')\nprop_get_resp = None\ntry:\n    prop_get_resp = transaction_client.get_property('propTestScene', prop_key)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(prop_get_resp)\nassert len(prop_get_resp['properties']) > 0\nprint('Update Property')\nprop_upd = AeselProperty()\nprop_upd.name = 'testProperty2'\nprop_upd_resp = None\ntry:\n    prop_upd_resp = transaction_client.update_property('propTestScene',\n        prop_key, prop_upd)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(prop_upd_resp)\nprint('Query Properties')\nprop_query = AeselProperty()\nprop_query.name = 'testProperty2'\nprop_query_resp = None\ntry:\n    prop_query_resp = transaction_client.property_query('propTestScene',\n        prop_query)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(prop_query_resp)\nassert len(prop_query_resp['properties']) > 0\nprint('Add Property Action')\nprop_action = AeselAction()\nprop_action.name = 'testPropAction'\nprop_action.description = 'this is a Property Action'\nprop_frame_initial = AeselPropertyFrame()\nprop_frame_initial.frame = 1\npfi_value = AeselPropertyValue()\npfi_value.value = 100.0\npfi_value.left_type = 'test'\npfi_value.left_x = 10.0\npfi_value.left_y = 10.2\npfi_value.right_type = 'test2'\npfi_value.right_x = 10.1\npfi_value.right_y = 10.3\nprop_frame_initial.values = [pfi_value]\nprop_action.keyframes = [prop_frame_initial]\ntry:\n    prop_action_add_resp = transaction_client.create_property_action(\n        'propTestScene', prop_key, prop_action)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(prop_action_add_resp)\nassert prop_action_add_resp['err_code'] == 100\nprint('Update Property Action')\nprop_action2 = AeselAction()\nprop_action2.name = 'testPropAction'\nprop_action2.description = 'this is an updated Property Action'\ntry:\n    prop_action_upd_resp = transaction_client.update_property_action(\n        'propTestScene', prop_key, prop_action2)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(prop_action_upd_resp)\nassert prop_action_upd_resp['err_code'] == 100\nprint('Add Property Frame to Action')\nprop_frame2 = AeselPropertyFrame()\nprop_frame2.frame = 10\npfi2_value = AeselPropertyValue()\npfi2_value.value = 100.0\npfi2_value.left_type = 'test3'\npfi2_value.left_x = 10.0\npfi2_value.left_y = 10.2\npfi2_value.right_type = 'test22'\npfi2_value.right_x = 10.1\npfi2_value.right_y = 10.3\nprop_frame2.values = [pfi2_value]\ntry:\n    prop_frame_add_resp = transaction_client.create_property_frame(\n        'propTestScene', prop_key, 'testPropAction', prop_frame2)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(prop_frame_add_resp)\nassert prop_frame_add_resp['err_code'] == 100\nprint('Update Property Frame')\nprop_frame3 = AeselPropertyFrame()\nprop_frame3.frame = 10\npfi3_value = AeselPropertyValue()\npfi3_value.value = 110.0\npfi3_value.left_type = 'test4'\npfi3_value.left_x = 10.1\npfi3_value.left_y = 10.4\npfi3_value.right_type = 'test32'\npfi3_value.right_x = 12.1\npfi3_value.right_y = 13.3\nprop_frame3.values = [pfi3_value]\ntry:\n    prop_frame_upd_resp = transaction_client.update_property_frame(\n        'propTestScene', prop_key, 'testPropAction', prop_frame3)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(prop_frame_upd_resp)\nassert prop_frame_upd_resp['err_code'] == 100\ntry:\n    prop_frame_del_resp = transaction_client.delete_property_frame(\n        'propTestScene', prop_key, 'testPropAction', 10)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(prop_frame_upd_resp)\nassert prop_frame_upd_resp['err_code'] == 100\nprint('Delete Property Action')\ntry:\n    prop_action_del_resp = transaction_client.delete_property_action(\n        'propTestScene', prop_key, 'testPropAction')\nexcept Exception as e:\n    print(e)\n    assert False\nprint(prop_action_del_resp)\nassert prop_action_del_resp['err_code'] == 100\nprint('Delete Property')\ntry:\n    transaction_client.delete_property('propTestScene', prop_key)\nexcept Exception as e:\n    print(e)\n    assert False\n"
}