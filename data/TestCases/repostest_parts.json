{
    "functionName": "test_parts",
    "className": null,
    "fileName": "/abassel_&_Flask-DSwagger/tests_&_test_doc_string.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "data = \"\"\"\n                \"/user/{id}\":   # Must start with forward slash\n                    get:\n\n                        summary: \"Endpoint to return information about a single user\"\n\n                        description: \"List information about user of a given id\"\n\n                        tags: [\"userbyid\"]\n\n                        operationId: \"get_user_by_id\"\n\n                        produces:\n                            - \"application/json\"\n\n                        parameters:\n                        - name: id\n                          in: path\n                          description: \"id of site in the database\"\n                          required: true\n                          type: \"string\"\n\n                        responses:\n                          \"200\":\n                            description: \"Success response\"\n                            schema:\n                              $ref: \"#/definitions/User\"\n                          default:\n                            description: \"unexpected error\"\n                            schema:\n                              $ref: \"#/definitions/ErrorModel\"\n            \"\"\"\nswagger = fds.api_swagger_register(None)\njson_result = swagger.__startStructure__('1.0.0', 'MyAPI',\n    'Unit testing the API', '/api/')\nassert json_result['basePath'] == '/api/'\nassert json_result['info']['version'] == '1.0.0'\nassert json_result['info']['title'] == 'MyAPI'\nassert json_result['info']['description'] == 'Unit testing the API'\ndata = swagger.__extractEndPoints__(app, '/api/', [])\nassert len(data) == 1\nassert list(data[0][1].keys()) == ['/user/{id}']\nswagger.__processDocString__(data, json_result)\nassert list(json_result['paths'].keys()) == ['/user/{id}']\nswagger.__extractModels__(db_models={'User': User}, json_result=json_result)\nassert list(json_result['definitions'].keys()) == ['User']\nassert json_result['definitions']['User']['type'] == 'object'\nassert json_result['definitions']['User']['properties']['email']['type'\n    ] == 'string'\nassert json_result['definitions']['User']['properties']['first_name']['type'\n    ] == 'string'\nassert json_result['definitions']['User']['properties']['last_name']['type'\n    ] == 'string'\n"
}