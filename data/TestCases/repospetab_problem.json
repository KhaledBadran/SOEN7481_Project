{
    "functionName": "petab_problem",
    "className": null,
    "fileName": "/PEtab-dev_&_PEtab/tests_&_test_petab.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"Test petab problem.\"\"\"\ndocument, model = minimal_sbml_model\np = model.createParameter()\np.setId('fixedParameter1')\np.setName('FixedParameter1')\np = model.createParameter()\np.setId('observable_1')\np.setName('Observable 1')\nwith tempfile.NamedTemporaryFile(mode='w', delete=False) as fh:\n    sbml_file_name = fh.name\n    fh.write(libsbml.writeSBMLToString(document))\nmeasurement_df = pd.DataFrame(data={OBSERVABLE_ID: ['obs1', 'obs2'],\n    OBSERVABLE_PARAMETERS: ['', 'p1;p2'], NOISE_PARAMETERS: ['p3;p4', 'p5']})\nwith tempfile.NamedTemporaryFile(mode='w', delete=False) as fh:\n    measurement_file_name = fh.name\n    measurement_df.to_csv(fh, sep='\\t', index=False)\ncondition_df = pd.DataFrame(data={CONDITION_ID: ['condition1', 'condition2'\n    ], CONDITION_NAME: ['', 'Condition 2'], 'fixedParameter1': [1.0, 2.0]})\ncondition_df.set_index(CONDITION_ID, inplace=True)\nwith tempfile.NamedTemporaryFile(mode='w', delete=False) as fh:\n    condition_file_name = fh.name\n    condition_df.to_csv(fh, sep='\\t', index=True)\nparameter_df = pd.DataFrame(data={PARAMETER_ID: ['dynamicParameter1',\n    'dynamicParameter2'], PARAMETER_NAME: ['', '...']})\nwith tempfile.NamedTemporaryFile(mode='w', delete=False) as fh:\n    parameter_file_name = fh.name\n    parameter_df.to_csv(fh, sep='\\t', index=False)\nobservable_df = pd.DataFrame(data={OBSERVABLE_ID: ['observable_1'],\n    OBSERVABLE_NAME: ['julius'], OBSERVABLE_FORMULA: ['observable_1'],\n    NOISE_FORMULA: [1]})\nwith tempfile.NamedTemporaryFile(mode='w', delete=False) as fh:\n    observable_file_name = fh.name\n    observable_df.to_csv(fh, sep='\\t', index=False)\nproblem = petab.Problem.from_files(sbml_file=sbml_file_name,\n    measurement_file=measurement_file_name, condition_file=\n    condition_file_name, parameter_file=parameter_file_name,\n    observable_files=observable_file_name)\nreturn problem\npytest.fixture"
}