{
    "functionName": "test_sobol_GPEI_strategy_batches",
    "className": "TestGenerationStrategy",
    "fileName": "/facebook_&_Ax/ax_&_modelbridge_&_tests_&_test_generation_strategy.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "mock_GPEI_gen = self.mock_torch_model_bridge.return_value.gen\nmock_GPEI_gen.return_value = GeneratorRun(arms=[Arm(parameters={'x1': 1,\n    'x2': 2}), Arm(parameters={'x1': 3, 'x2': 4})])\nexp = get_branin_experiment()\nsobol_GPEI_generation_strategy = GenerationStrategy(name='Sobol+GPEI',\n    steps=[GenerationStep(model=Models.SOBOL, num_trials=1), GenerationStep\n    (model=Models.GPEI, num_trials=6)])\nself.assertEqual(sobol_GPEI_generation_strategy.name, 'Sobol+GPEI')\nself.assertEqual(sobol_GPEI_generation_strategy.model_transitions, [1])\ngr = sobol_GPEI_generation_strategy.gen(exp, n=2)\nexp.new_batch_trial(generator_run=gr).run()\nfor i in range(1, 8):\n    if i == 7:\n        with self.assertRaises(GenerationStrategyCompleted):\n            g = sobol_GPEI_generation_strategy.gen(exp, n=2)\n    else:\n        g = sobol_GPEI_generation_strategy.gen(exp, n=2)\n    exp.new_batch_trial(generator_run=g).run()\nself.assertIsInstance(sobol_GPEI_generation_strategy.model, TorchModelBridge)\n"
}