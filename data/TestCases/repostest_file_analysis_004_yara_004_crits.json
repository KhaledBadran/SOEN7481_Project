{
    "functionName": "test_file_analysis_004_yara_004_crits",
    "className": "TestCase",
    "fileName": "/IntegralDefense_&_ACE/lib_&_saq_&_modules_&_test_file_analysis.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "self.initialize_yss()\nroot = create_root_analysis(uuid=str(uuid.uuid4()))\nroot.initialize_storage()\nshutil.copy('test_data/scan_targets/crits', root.storage_dir)\n_file = root.add_observable(F_FILE, 'crits')\nroot.save()\nroot.schedule()\nengine = TestEngine()\nengine.enable_module('analysis_module_yara_scanner_v3_4', 'test_groups')\nengine.controlled_stop()\nengine.start()\nengine.wait()\nself.assertEquals(log_count('with yss (matches found: True)'), 1)\nroot.load()\n_file = root.get_observable(_file.id)\nfrom saq.modules.file_analysis import YaraScanResults_v3_4\nanalysis = _file.get_analysis(YaraScanResults_v3_4)\nself.assertTrue(analysis)\nself.assertTrue(_file.has_directive(DIRECTIVE_SANDBOX))\nyara_rule = analysis.get_observables_by_type(F_YARA_RULE)\nself.assertEquals(len(yara_rule), 1)\nyara_rule = yara_rule[0]\nself.assertTrue(yara_rule.detections)\ncrits_id = analysis.get_observables_by_type(F_INDICATOR)\nself.assertEquals(len(crits_id), 1)\n"
}