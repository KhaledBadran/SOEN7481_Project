{
    "functionName": "test_optimize_tss",
    "className": "TestOptimizeTSS",
    "fileName": "/Sung-Huan_&_ANNOgesic/tests_&_test_optimize.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "opt.Helper = Mock_helper\nopt.Multiparser = Mock_multiparser\nopt.optimization = Mock_func().mock_optimization\ngen_file(os.path.join(self.gffs, 'tmp', 'test.gff'), 'test')\ngen_file(os.path.join(self.fastas, 'tmp', 'test.fa'), 'test')\nargs = self.mock_args.mock()\nargs.fastas = self.fastas\nargs.gffs = self.gffs\nargs.wigs = self.wigs\nargs.tsspredator_path = 'test'\nargs.manuals = self.manuals\ngen_file(os.path.join(self.manuals, 'tmp', 'test.gff'), 'test')\nargs.output_folder = self.test_folder\nargs.project_strain = 'test'\nargs.height = 9\nargs.height_reduction = 9\nargs.factor = 9\nargs.factor_reduction = 9\nargs.base_height = 9\nargs.enrichment = 9\nargs.processing = 9\nargs.utr = 200\nargs.libs = 'test'\nargs.replicate_name = 'test'\nargs.cluster = 2\nargs.strain_lengths = {'test': 100}\nargs.cores = 4\nargs.program = 'TSS'\nargs.replicate = 2\nargs.steps = 2000\nlog = open(os.path.join(self.test_folder, 'test.log'), 'w')\nopt.optimize_tss(args, log)\nself.assertTrue(os.path.exists(os.path.join(self.test_folder, 'test.csv')))\nlog.close()\n"
}