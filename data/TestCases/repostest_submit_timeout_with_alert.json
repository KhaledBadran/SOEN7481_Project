{
    "functionName": "test_submit_timeout_with_alert",
    "className": "TestCase",
    "fileName": "/IntegralDefense_&_ACE/lib_&_saq_&_modules_&_test_cloudphish.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "saq.CONFIG['analysis_module_cloudphish']['frequency'] = '1'\nsaq.CONFIG['analysis_module_cloudphish']['query_timeout'] = '1'\nsaq.CONFIG['analysis_mode_analysis']['cleanup'] = 'no'\nself.start_api_server()\nroot = create_root_analysis(analysis_mode=ANALYSIS_MODE_ANALYSIS)\nroot.initialize_storage()\nurl = root.add_observable(F_URL, TEST_URL)\nurl.add_directive(DIRECTIVE_CRAWL)\nroot.save()\nroot.schedule()\nengine = TestEngine(analysis_pools={}, local_analysis_modes=[\n    ANALYSIS_MODE_ANALYSIS, ANALYSIS_MODE_CLOUDPHISH,\n    ANALYSIS_MODE_CORRELATION])\nengine.enable_alerting()\nengine.enable_module('analysis_module_cloudphish', ANALYSIS_MODE_ANALYSIS)\nengine.enable_module('analysis_module_cloudphish_request_analyzer',\n    ANALYSIS_MODE_CLOUDPHISH)\nengine.enable_module('analysis_module_crawlphish', ANALYSIS_MODE_CLOUDPHISH)\nengine.enable_module('analysis_module_forced_detection',\n    ANALYSIS_MODE_CLOUDPHISH)\nengine.enable_module('analysis_module_cloudphish_delayed_test',\n    ANALYSIS_MODE_CLOUDPHISH)\nengine.start()\nwait_for_log_count('has timed out', 1, 10)\nengine.controlled_stop()\nengine.wait()\nroot = RootAnalysis(storage_dir=root.storage_dir)\nroot.load()\nurl = root.get_observable(url.id)\nself.assertIsNotNone(url)\nfrom saq.modules.cloudphish import CloudphishAnalysis\ncloudphish_analysis = url.get_analysis(CloudphishAnalysis)\nself.assertIsNotNone(cloudphish_analysis)\nself.assertEquals(cloudphish_analysis.result, SCAN_RESULT_ERROR)\nc.execute('SELECT COUNT(*) FROM alerts')\nself.assertEquals(c.fetchone()[0], 1)\nuse_db"
}