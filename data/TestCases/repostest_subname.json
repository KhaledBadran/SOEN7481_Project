{
    "functionName": "test_subname",
    "className": "TestNameMethods",
    "fileName": "/named-data_&_PyNDN2/tests_&_unit_tests_&_test_name_methods.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "name = Name('/edu/cmu/andrew/user/3498478')\nsubName1 = name.getSubName(0)\nself.assertEqual(subName1, name,\n    'Subname from first component does not match original name')\nsubName2 = name.getSubName(3)\nself.assertEqual(subName2, Name('/user/3498478'))\nsubName3 = name.getSubName(1, 3)\nself.assertEqual(subName3, Name('/cmu/andrew/user'))\nsubName4 = name.getSubName(0, 100)\nself.assertEqual(name, subName4,\n    'Subname with more components than original should stop at end of original name'\n    )\nsubName5 = name.getSubName(7, 2)\nself.assertEqual(Name(), subName5,\n    'Subname beginning after end of name should be empty')\nsubName6 = name.getSubName(-1, 7)\nself.assertEqual(subName6, Name('/3498478'),\n    'Negative subname with more components than original should stop at end of original name'\n    )\nsubName7 = name.getSubName(-5, 5)\nself.assertEqual(subName7, name,\n    'Subname from (-length) should match original name')\n"
}