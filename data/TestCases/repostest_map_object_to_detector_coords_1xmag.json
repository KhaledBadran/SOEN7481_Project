{
    "functionName": "test_map_object_to_detector_coords_1xmag",
    "className": "TestMap_object_to_detector_coords",
    "fileName": "/PolymerGuy_&_AXITOM/axitom_&_tests_&_test_map_object_to_detector_coords.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        When the detector and object are located at the same distance from the source,\n        the magnification should be 1x and the coordinates should be identical.\n        \"\"\"\ntol = 1e-06\nconfig = Config(n_pixels_u=20, n_pixels_v=20, detector_size_u=200.0,\n    detector_size_v=200.0, source_to_detector_dist=10000000000.0,\n    source_to_object_dist=10000000000.0)\nxs, ys = np.meshgrid(config.object_xs, config.object_ys)\nzs = config.object_zs\ndetector_a, detector_b = map_object_to_detector_coords(xs, ys, zs, config)\ncorr_us = config.n_pixels_u * (config.detector_us - config.detector_us[0]\n    ) / config.detector_size_u\ncorr_vs = config.n_pixels_v * (config.detector_vs - config.detector_vs[0]\n    ) / config.detector_size_v\nxs_error = np.abs(detector_a[:, :] - corr_us[:, (np.newaxis)])\nys_error = np.abs(detector_b[:, :, :].transpose() - corr_vs[:, (np.newaxis),\n    (np.newaxis)])\nif np.max(xs_error) > tol or np.max(ys_error) > tol:\n    print('Largest error: ', xs_error.max())\n    print('at positions: ', np.argmax(xs_error))\n    print('Largest error: ', ys_error.max())\n    print('at positions: ', np.argmax(ys_error))\n    self.fail()\n"
}