{
    "functionName": "test_unitary_decompose_IYZ",
    "className": "Test_conjugated_kernel",
    "fileName": "/QE-Lab_&_OpenQL/tests_&_test_unitary.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "self.setUpClass()\nnum_qubits = 1\np = ql.Program('test_unitary_IYZ', platform, num_qubits)\nk = ql.Kernel('akernel', platform, num_qubits)\nu = ql.Unitary('X', [complex(0.0, 0.0), complex(1.0, 0.0), complex(1.0, 0.0\n    ), complex(0.0, 0.0)])\nu.decompose()\nk.gate(u, [0])\nu = ql.Unitary('Y', [complex(0.0, 0.0), complex(0.0, -1.0), complex(0.0, \n    1.0), complex(0.0, 0.0)])\nu.decompose()\nk.gate(u, [0])\nu = ql.Unitary('Z', [complex(1.0, 0.0), complex(0.0, 0.0), complex(0.0, 0.0\n    ), complex(-1.0, 0.0)])\nu.decompose()\nk.gate('hadamard', [0])\nk.gate(u, [0])\np.add_kernel(k)\np.compile()\nqx.set(os.path.join(output_dir, p.name + '_initialqasmwriter_out.qasm'))\nqx.execute()\nc0 = qx.get_state()\nself.assertAlmostEqual(0.5, helper_regex(c0)[0], 5)\nself.assertAlmostEqual(0.5, helper_regex(c0)[1], 5)\n"
}