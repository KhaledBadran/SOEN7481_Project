{
    "functionName": "filter_analytic_scalar_likelihood",
    "className": null,
    "fileName": "/GPflow_&_GPflow/tests_&_gpflow_&_likelihoods_&_test_likelihoods.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "assert method_name in ('_variational_expectations', '_predict_log_density',\n    '_predict_mean_and_var')\ndef is_analytic(likelihood):\n    assert not isinstance(likelihood, MonteCarloLikelihood)\n    assert isinstance(likelihood, ScalarLikelihood)\n    quadrature_fallback = getattr(ScalarLikelihood, method_name)\n    actual_method = getattr(likelihood.__class__, method_name)\n    return actual_method is not quadrature_fallback\nreturn [l for l in scalar_likelihood_setups if is_analytic(get_likelihood(l))]\n"
}