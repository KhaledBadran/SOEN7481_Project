{
    "functionName": "test_attr_alter",
    "className": null,
    "fileName": "/CCampJr_&_LazyHDF5/lazy5_&_tests_&_test_alter.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\" Try altering an attribute with the same or different type of value\"\"\"\nfilename, fid = hdf_dataset\ndset_obj = fid['base']\nattr_obj = dset_obj.attrs\norig_key = 'Attribute_new'\nnew_val = 'Test2'\nassert attr_obj.get(orig_key) is None\nalter_attr(dset_obj, orig_key, new_val)\nassert attr_obj[orig_key] == new_val\norig_key = 'Attribute_new2'\nnew_val = 'Test2'\nassert attr_obj.get(orig_key) is None\nwith pytest.raises(TypeError):\n    alter_attr([], orig_key, new_val, file=fid)\nalter_attr(dset_obj, orig_key, new_val, file=fid)\nassert attr_obj[orig_key] == new_val\norig_key = 'Attribute_new3'\nnew_val = 'Test3'\nwith pytest.raises(TypeError):\n    alter_attr(dset_obj, orig_key, new_val, file=filename)\nalter_attr('base', orig_key, new_val, file=filename)\nassert attr_obj[orig_key] == new_val\norig_key = 'Attribute_new4'\nnew_val = 'Test2'\nwith pytest.raises(KeyError):\n    alter_attr(dset_obj, orig_key, new_val, must_exist=True)\norig_key = 'Attribute_str'\norig_val = attr_obj[orig_key]\nnew_val = 'Test2'\nalter_attr(dset_obj, orig_key, new_val)\nassert orig_val != attr_obj[orig_key]\nassert attr_obj[orig_key] == new_val\norig_key = 'Attribute_bytes'\norig_val = attr_obj[orig_key]\nnew_val = b'Test2'\nalter_attr(dset_obj, orig_key, new_val)\nassert orig_val != attr_obj[orig_key]\nassert attr_obj[orig_key] == new_val\norig_key = 'Attribute_np_bytes'\norig_val = attr_obj[orig_key]\nnew_val = np.bytes_('Test2')\nalter_attr(dset_obj, orig_key, new_val)\nassert orig_val != attr_obj[orig_key]\nassert attr_obj[orig_key] == new_val\norig_key = 'Attribute_int'\norig_val = attr_obj[orig_key]\nnew_val = 2\nalter_attr(dset_obj, orig_key, new_val)\nassert orig_val != attr_obj[orig_key]\nassert attr_obj[orig_key] == new_val\norig_key = 'Attribute_float'\norig_val = attr_obj[orig_key]\nnew_val = 2.2\nalter_attr(dset_obj, orig_key, new_val)\nassert orig_val != attr_obj[orig_key]\nassert attr_obj[orig_key] == new_val\norig_key = 'Attribute_np_1d'\norig_val = attr_obj[orig_key]\nnew_val = np.array([4, 5, 6])\nalter_attr(dset_obj, orig_key, new_val)\nassert np.allclose(attr_obj[orig_key], new_val)\norig_key = 'Attribute_np_2d'\norig_val = attr_obj[orig_key]\nnew_val = np.array([[7, 8, 9], [10, 11, 12]])\nalter_attr(dset_obj, orig_key, new_val)\nassert np.allclose(attr_obj[orig_key], new_val)\norig_key = 'Attribute_str'\norig_val = attr_obj[orig_key]\nnew_val = 1\nalter_attr(dset_obj, orig_key, new_val)\nassert orig_val != attr_obj[orig_key]\nassert attr_obj[orig_key] == new_val\norig_key = 'Attribute_bytes'\norig_val = attr_obj[orig_key]\nnew_val = 'Test2'\nalter_attr(dset_obj, orig_key, new_val)\nassert orig_val != attr_obj[orig_key]\nassert attr_obj[orig_key] == new_val\norig_key = 'Attribute_np_bytes'\norig_val = attr_obj[orig_key]\nnew_val = 'Test2'\nalter_attr(dset_obj, orig_key, new_val)\nassert orig_val != attr_obj[orig_key]\nassert attr_obj[orig_key] == new_val\norig_key = 'Attribute_int'\norig_val = attr_obj[orig_key]\nnew_val = True\nalter_attr(dset_obj, orig_key, new_val)\nassert orig_val != attr_obj[orig_key]\nassert attr_obj[orig_key] == new_val\norig_key = 'Attribute_float'\norig_val = attr_obj[orig_key]\nnew_val = 2\nalter_attr(dset_obj, orig_key, new_val)\nassert orig_val != attr_obj[orig_key]\nassert attr_obj[orig_key] == new_val\norig_key = 'Attribute_np_1d'\norig_val = attr_obj[orig_key]\nnew_val = np.array([4.1, 5.1, 6.1])\nalter_attr(dset_obj, orig_key, new_val)\nassert not np.allclose(orig_val, attr_obj[orig_key])\nassert np.allclose(attr_obj[orig_key], new_val)\norig_key = 'Attribute_np_2d'\norig_val = attr_obj[orig_key]\nnew_val = np.array([[7, 8.1, 9], [10, 11, 12.1]])\nalter_attr(dset_obj, orig_key, new_val)\nassert not np.allclose(orig_val, attr_obj[orig_key])\nassert np.allclose(attr_obj[orig_key], new_val)\norig_key = 'Attribute_int'\nnew_val = 3\nwith pytest.raises(TypeError):\n    alter_attr('base', orig_key, new_val)\n"
}