{
    "functionName": "test_time_series_models_create",
    "className": "TimeSeriesModelsTests",
    "fileName": "/bigfishgames_&_GameBenchAPI-PyClient/tests_&_test_unit_&_test_models_&_test_dataframes_&_test_time_series_&_test_time_series_models.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Ensures each of the classes can be created.\"\"\"\nwith patch(\n    f'{DATAFRAMES_PATH}.time_series.time_series_models.AbstractTimeSeriesModel.get_data'\n    ), patch(f'{ABSTRACT_TIME_SERIES}.TimeSeriesMediator'), patch(\n    f'{ABSTRACT_TIME_SERIES}.Authenticator'):\n    with self.subTest():\n        battery = Battery()\n        self.assertEqual('/battery', battery.request_parameters['metric'])\n    with self.subTest():\n        core_frequency = CpuCoreFrequency()\n        self.assertEqual('/corefreq', core_frequency.request_parameters[\n            'metric'])\n    with self.subTest():\n        cpu = Cpu()\n        self.assertEqual('/cpu', cpu.request_parameters['metric'])\n    with self.subTest():\n        energy = Energy()\n        self.assertEqual('/energy', energy.request_parameters['metric'])\n    with self.subTest():\n        fps = Fps()\n        self.assertEqual('/fps', fps.request_parameters['metric'])\n    with self.subTest():\n        gpu_img = GpuImg()\n        self.assertEqual('/gpu/img', gpu_img.request_parameters['metric'])\n    with self.subTest():\n        gpu = Gpu()\n        self.assertEqual('/gpu/other', gpu.request_parameters['metric'])\n    with self.subTest():\n        janks = Janks()\n        self.assertEqual('/janks', janks.request_parameters['metric'])\n    with self.subTest():\n        memory = Memory()\n        self.assertEqual('/memory', memory.request_parameters['metric'])\n    with self.subTest():\n        network = Network()\n        self.assertEqual('/network', network.request_parameters['metric'])\n    with self.subTest():\n        power = Power()\n        self.assertEqual('/power', power.request_parameters['metric'])\n"
}