{
    "functionName": "checkDumpToFile",
    "className": null,
    "fileName": "/bakwc_&_PySyncObj/test_syncobj.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "dumpFiles = [getNextDumpFile(), getNextDumpFile()]\nremoveFiles(dumpFiles)\nrandom.seed(42)\na = [getNextAddr(), getNextAddr()]\no1 = TestObj(a[0], [a[1]], TEST_TYPE.COMPACTION_2, dumpFile=dumpFiles[0],\n    useFork=useFork)\no2 = TestObj(a[1], [a[0]], TEST_TYPE.COMPACTION_2, dumpFile=dumpFiles[1],\n    useFork=useFork)\nobjs = [o1, o2]\ndoTicks(objs, 10, stopFunc=lambda : o1._isReady() and o2._isReady())\nassert o1._getLeader().address in a\nassert o1._getLeader() == o2._getLeader()\no1.addValue(150)\no2.addValue(200)\ndoTicks(objs, 10, stopFunc=lambda : o1.getCounter() == 350 and o2.\n    getCounter() == 350)\nassert o1.getCounter() == 350\nassert o2.getCounter() == 350\no1._forceLogCompaction()\no2._forceLogCompaction()\ndoTicks(objs, 1.5)\no1._destroy()\no2._destroy()\na = [getNextAddr(), getNextAddr()]\no1 = TestObj(a[0], [a[1]], TEST_TYPE.COMPACTION_2, dumpFile=dumpFiles[0],\n    useFork=useFork)\no2 = TestObj(a[1], [a[0]], TEST_TYPE.COMPACTION_2, dumpFile=dumpFiles[1],\n    useFork=useFork)\nobjs = [o1, o2]\ndoTicks(objs, 10, stopFunc=lambda : o1._isReady() and o2._isReady())\nassert o1._isReady()\nassert o2._isReady()\nassert o1._getLeader().address in a\nassert o1._getLeader() == o2._getLeader()\nassert o1.getCounter() == 350\nassert o2.getCounter() == 350\no1._destroy()\no2._destroy()\nremoveFiles(dumpFiles)\n"
}