{
    "functionName": "test_config_override",
    "className": null,
    "fileName": "/F-I-D-O_&_Future-Config/python_&_fconfig_&_test_&_resolver_test.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "config = common.load_test_config_file('complete', 'complete_override')\nassert 'string replaced' == config['string']\nassert 'composed string replaced' == config['composed_string']\nassert 654321 == config['integer']\nassert 3.14 == config['float']\nassert 'object' in config\nassert isinstance(config['object'], ConfigDataObject)\nobject = config['object']\nassert 'tset' == object['string']\nassert 9 == object['integer']\nassert 1.23 == object['float']\nassert 'array' in config\nassert isinstance(config['array'], ConfigDataObject)\narray = config['array']\nassert 5 == array[0]\nassert 'array_of_objects' in config\nassert isinstance(config['array_of_objects'], ConfigDataObject)\narrayOfObjects = config['array_of_objects']\nassert 0 in arrayOfObjects\nassert isinstance(arrayOfObjects[0], ConfigDataObject)\nobjectInArray = arrayOfObjects[0]\nassert 571 == objectInArray['start']\nassert 672 == objectInArray['end']\nassert 1 in arrayOfObjects\nassert isinstance(arrayOfObjects[1], ConfigDataObject)\nobjectInArray2 = arrayOfObjects[1]\nassert 572 == objectInArray2['start']\nassert 673 == objectInArray2['end']\nassert 'object_with_composed' in config\nassert isinstance(config['object_with_composed'], ConfigDataObject)\nobjectWithComposedVariables = config['object_with_composed']\nassert 'string replaced that is composed' == objectWithComposedVariables[\n    'string']\nassert 'double composed string replaced' == objectWithComposedVariables[\n    'double_composed_string']\nassert 'string replaced that is composed within object replaced' == objectWithComposedVariables[\n    'inner_composition']\nassert 'object_hierarchy' in config\nassert isinstance(config['object_hierarchy'], ConfigDataObject)\nobjectHierarchy = config['object_hierarchy']\nassert 'inner_object' in objectHierarchy\nassert isinstance(objectHierarchy['inner_object'], ConfigDataObject)\ninnerObject = objectHierarchy['inner_object']\nassert 'array_of_objects' in objectHierarchy\nassert isinstance(objectHierarchy['array_of_objects'], ConfigDataObject)\ninnerArrayOfObjects = objectHierarchy['array_of_objects']\nassert 1 in innerArrayOfObjects\nassert isinstance(innerArrayOfObjects[1], ConfigDataObject)\nanimal = innerArrayOfObjects[1]\nassert 'inner_inner_object' in innerObject\nassert isinstance(innerObject['inner_inner_object'], ConfigDataObject)\ninnerInnerObject = innerObject['inner_inner_object']\nassert 'array' in innerInnerObject\nassert isinstance(innerInnerObject['array'], ConfigDataObject)\ninnerInnerObjectArray = innerInnerObject['array']\nassert 'another_string' == objectHierarchy['another_string']\nassert 987654 == innerObject['integer']\nassert 'string replaced is funny to compose' == innerObject['composed']\nassert True == innerObject['boolean']\nassert 'chicken' == animal['animal']\nassert 2 == animal['legs']\nassert 1.23456 == innerInnerObject['float']\nassert 'string replaced is funny to compose multiple times' == innerInnerObject[\n    'composed']\nassert 3 == innerInnerObjectArray[0]\nassert 2 == innerInnerObjectArray[1]\nassert 1 == innerInnerObjectArray[2]\n"
}