{
    "functionName": "test_stream_user_local",
    "className": null,
    "fileName": "/halcy_&_Mastodon.py/tests_&_test_streaming.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "patch_streaming()\nuser = api2.account_verify_credentials()\napi2.account_unfollow(user)\nupdates = []\nnotifications = []\nlistener = CallbackStreamListener(local_update_handler=lambda x: updates.\n    append(x))\nposted = []\ndef do_activities():\n    time.sleep(5)\n    posted.append(api.status_post(\"it's cool guy\"))\n    time.sleep(10)\n    streaming_close()\nt = threading.Thread(args=(), target=do_activities)\nt.start()\nstream = None\ntry:\n    stream = api.stream_user(listener, run_async=True)\n    time.sleep(20)\nfinally:\n    if stream != None:\n        stream.close()\nassert len(updates) == 1\nassert updates[0].id == posted[0].id\nt.join()\npytest.mark.vcr(match_on=['path'])"
}