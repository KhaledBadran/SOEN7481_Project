{
    "functionName": "test_unsqueeze",
    "className": "TestUnsqueeze",
    "fileName": "/intel-analytics_&_Bigdl/pyspark_&_test_&_bigdl_&_onnx_&_test_onnx_ops.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "axis = 0\ninput_shape = [3, 4, 5]\noutput_shape = [1, 3, 4, 5]\ninput_x = np.random.random([3, 4, 5])\nX = onnx.helper.make_tensor_value_info('X', onnx.TensorProto.FLOAT, input_shape\n    )\nY = onnx.helper.make_tensor_value_info('Y', onnx.TensorProto.FLOAT,\n    output_shape)\nunsqueeze_node = onnx.helper.make_node(op_type='Unsqueeze', inputs=['X'],\n    outputs=['Y'], axes=[axis])\nonnx_graph = onnx.helper.make_graph(nodes=[unsqueeze_node], name=\n    'test-unsqueeze', inputs=[X], outputs=[Y])\nonnx_model = onnx.helper.make_model(onnx_graph, producer_name='ONNX')\nonnx.checker.check_model(onnx_model)\nbigdl_model = Unsqueeze(pos=axis, num_input_dims=len(input_shape))\nexpected_out = bigdl_model.forward(input_x)\nloaded_model = load_model_proto(onnx_model)\nloaded_out = loaded_model.forward(input_x)\nassert np.array_equal(expected_out, loaded_out)\n"
}