{
    "functionName": "test_crlf",
    "className": "LexerTest",
    "fileName": "/whiteclover_&_Choco/test_&_test_lexer.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "template = util.read_file(self._file_path('crlf.html'))\nnodes = Lexer(template).parse()\nself._compare(nodes, TemplateNode({}, [Text('<html>\\r\\n\\r\\n', (1, 1)),\n    PageTag('page', {'args': \"\"\"a=['foo',\n                'bar']\"\"\"}, (3, 1\n    ), []), Text('\\r\\n\\r\\nlike the name says.\\r\\n\\r\\n', (4, 26)),\n    ControlLine('for', 'for x in [1,2,3]:', False, (8, 1)), Text('        ',\n    (9, 1)), Expression('x', [], (9, 9)), ControlLine('for', 'endfor', True,\n    (10, 1)), Text('\\r\\n', (11, 1)), Expression(\n    \"\"\"trumpeter == 'Miles' and trumpeter or \\\\\n      'Dizzy'\"\"\", [], (12, \n    1)), Text('\\r\\n\\r\\n', (13, 15)), DefTag('def', {'name': 'hi()'}, (15, 1\n    ), [Text('\\r\\n    hi!\\r\\n', (15, 19))]), Text('\\r\\n\\r\\n</html>\\r\\n', (\n    17, 8))]))\nassert flatten_result(Template(template).render()\n    ) == '<html> like the name says. 1 2 3 Dizzy </html>'\n"
}