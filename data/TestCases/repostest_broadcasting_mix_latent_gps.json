{
    "functionName": "test_broadcasting_mix_latent_gps",
    "className": null,
    "fileName": "/GPflow_&_GPflow/tests_&_gpflow_&_conditionals_&_test_broadcasted_conditionals.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "S, N = 7, 20\nP, L = 10, 5\nW = np.random.randn(P, L)\ng_mu = np.random.randn(S, N, L)\ng_sqrt_diag = np.tril(np.random.randn(S * L, N, N), -1)\ng_sqrt_diag = np.reshape(g_sqrt_diag, [L, S, N, N])\ng_var_diag = g_sqrt_diag @ np.transpose(g_sqrt_diag, [0, 1, 3, 2])\ng_var = np.zeros([S, N, L, N, L])\nfor l in range(L):\n    g_var[:, :, (l), :, (l)] = g_var_diag[(l), :, :, :]\nf_mu_ref = g_mu @ W.T\ng_var_tmp = np.transpose(g_var, [0, 1, 3, 2, 4])\nf_var_ref = W @ g_var_tmp @ W.T\nf_var_ref = np.transpose(f_var_ref, [0, 1, 3, 2, 4])\nif not full_cov:\n    g_var_diag = np.array([g_var_diag[:, :, (n), (n)] for n in range(N)])\n    g_var_diag = np.transpose(g_var_diag, [2, 0, 1])\nf_mu, f_var = mix_latent_gp(tf.convert_to_tensor(W), tf.convert_to_tensor(\n    g_mu), tf.convert_to_tensor(g_var_diag), full_cov, full_output_cov)\nif not full_output_cov and not full_cov:\n    f_var_ref = np.array([f_var_ref[:, :, (p), :, (p)] for p in range(P)])\n    f_var_ref = np.array([f_var_ref[:, :, (n), (n)] for n in range(N)])\n    f_var_ref = np.transpose(f_var_ref, [2, 0, 1])\nelif not full_output_cov and full_cov:\n    f_var_ref = np.array([f_var_ref[:, :, (p), :, (p)] for p in range(P)])\n    f_var_ref = np.transpose(f_var_ref, [1, 0, 2, 3])\nelif full_output_cov and not full_cov:\n    f_var_ref = np.array([f_var_ref[:, (n), :, (n), :] for n in range(N)])\n    f_var_ref = np.transpose(f_var_ref, [1, 0, 2, 3])\nelse:\n    pass\nassert_allclose(f_mu_ref, f_mu)\nassert_allclose(f_var_ref, f_var)\npytest.mark.parametrize('full_cov', [True, False])pytest.mark.parametrize('full_output_cov', [True, False])"
}