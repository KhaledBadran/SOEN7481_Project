{
    "functionName": "test_tuple_resolver",
    "className": null,
    "fileName": "/fabioz_&_PyDev.Debugger/tests_python_&_test_resolvers.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "from _pydevd_bundle.pydevd_resolver import TupleResolver\ntuple_resolver = TupleResolver()\nfmt = {'hex': True}\nlst = tuple(range(11))\ncontents_debug_adapter_protocol = clear_contents_debug_adapter_protocol(\n    tuple_resolver.get_contents_debug_adapter_protocol(lst))\nlen_entry = contents_debug_adapter_protocol.pop(-1)\nassert contents_debug_adapter_protocol == [('00', 0, '[0]'), ('01', 1,\n    '[1]'), ('02', 2, '[2]'), ('03', 3, '[3]'), ('04', 4, '[4]'), ('05', 5,\n    '[5]'), ('06', 6, '[6]'), ('07', 7, '[7]'), ('08', 8, '[8]'), ('09', 9,\n    '[9]'), ('10', 10, '[10]')]\ncheck_len_entry(len_entry, (GENERATED_LEN_ATTR_NAME, 11))\nassert clear_contents_dictionary(tuple_resolver.get_dictionary(lst)) == {'00':\n    0, '01': 1, '02': 2, '03': 3, '04': 4, '05': 5, '06': 6, '07': 7, '08':\n    8, '09': 9, '10': 10, GENERATED_LEN_ATTR_NAME: 11}\nlst = tuple(range(17))\ncontents_debug_adapter_protocol = clear_contents_debug_adapter_protocol(\n    tuple_resolver.get_contents_debug_adapter_protocol(lst, fmt=fmt))\nlen_entry = contents_debug_adapter_protocol.pop(-1)\nassert contents_debug_adapter_protocol == [('0x00', 0, '[0]'), ('0x01', 1,\n    '[1]'), ('0x02', 2, '[2]'), ('0x03', 3, '[3]'), ('0x04', 4, '[4]'), (\n    '0x05', 5, '[5]'), ('0x06', 6, '[6]'), ('0x07', 7, '[7]'), ('0x08', 8,\n    '[8]'), ('0x09', 9, '[9]'), ('0x0a', 10, '[10]'), ('0x0b', 11, '[11]'),\n    ('0x0c', 12, '[12]'), ('0x0d', 13, '[13]'), ('0x0e', 14, '[14]'), (\n    '0x0f', 15, '[15]'), ('0x10', 16, '[16]')]\ncheck_len_entry(len_entry, (GENERATED_LEN_ATTR_NAME, 17))\nassert clear_contents_dictionary(tuple_resolver.get_dictionary(lst, fmt=fmt)\n    ) == {'0x00': 0, '0x01': 1, '0x02': 2, '0x03': 3, '0x04': 4, '0x05': 5,\n    '0x06': 6, '0x07': 7, '0x08': 8, '0x09': 9, '0x0a': 10, '0x0b': 11,\n    '0x0c': 12, '0x0d': 13, '0x0e': 14, '0x0f': 15, '0x10': 16,\n    GENERATED_LEN_ATTR_NAME: 17}\nlst = tuple(range(10))\ncontents_debug_adapter_protocol = clear_contents_debug_adapter_protocol(\n    tuple_resolver.get_contents_debug_adapter_protocol(lst))\nlen_entry = contents_debug_adapter_protocol.pop(-1)\nassert contents_debug_adapter_protocol == [('0', 0, '[0]'), ('1', 1, '[1]'),\n    ('2', 2, '[2]'), ('3', 3, '[3]'), ('4', 4, '[4]'), ('5', 5, '[5]'), (\n    '6', 6, '[6]'), ('7', 7, '[7]'), ('8', 8, '[8]'), ('9', 9, '[9]')]\ncheck_len_entry(len_entry, (GENERATED_LEN_ATTR_NAME, 10))\nassert clear_contents_dictionary(tuple_resolver.get_dictionary(lst)) == {'0':\n    0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9':\n    9, GENERATED_LEN_ATTR_NAME: 10}\ncontents_debug_adapter_protocol = clear_contents_debug_adapter_protocol(\n    tuple_resolver.get_contents_debug_adapter_protocol(lst, fmt=fmt))\nlen_entry = contents_debug_adapter_protocol.pop(-1)\nassert contents_debug_adapter_protocol == [('0x0', 0, '[0]'), ('0x1', 1,\n    '[1]'), ('0x2', 2, '[2]'), ('0x3', 3, '[3]'), ('0x4', 4, '[4]'), ('0x5',\n    5, '[5]'), ('0x6', 6, '[6]'), ('0x7', 7, '[7]'), ('0x8', 8, '[8]'), (\n    '0x9', 9, '[9]')]\ncheck_len_entry(len_entry, (GENERATED_LEN_ATTR_NAME, 10))\nassert clear_contents_dictionary(tuple_resolver.get_dictionary(lst, fmt=fmt)\n    ) == {'0x0': 0, '0x1': 1, '0x2': 2, '0x3': 3, '0x4': 4, '0x5': 5, '0x6':\n    6, '0x7': 7, '0x8': 8, '0x9': 9, GENERATED_LEN_ATTR_NAME: 10}\n"
}