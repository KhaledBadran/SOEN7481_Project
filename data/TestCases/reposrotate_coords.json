{
    "functionName": "rotate_coords",
    "className": null,
    "fileName": "/pmeal_&_OpenPNM/openpnm_&_topotools_&_topotools.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"\n    Rotates coordinates a given amount about each axis\n\n    Parameters\n    ----------\n    network : OpenPNM Network object\n        The network whose pore coordinates should be transformed\n    a : scalar\n        The amount in degrees to rotate about the x-axis\n    b : scalar\n        The amount in degrees to rotate about the y-axis\n    c : scalar\n        The amount in degrees to rotate about the z-axis\n    R : array_like\n        Rotation matrix.  Must be a 3-by-3 matrix since pore coordinates are\n        always in 3D.  If this is given then the other individual arguments\n        are ignored.\n\n    See Also\n    --------\n    rotate_coords\n\n    Notes\n    -----\n    It is possible to rotate about anyof the three axes by specifying ``a``,\n    ``b``, and/or ``c``.  In this case each rotation is applied in sequence.\n\n    \"\"\"\nif R is None:\n    if a:\n        R = np.array([[1, 0, 0], [0, np.cos(np.deg2rad(a)), -np.sin(np.\n            deg2rad(a))], [0, np.sin(np.deg2rad(a)), np.cos(np.deg2rad(a))]])\n        network['pore.coords'] = np.tensordot(network['pore.coords'], R,\n            axes=(1, 1))\n    if b:\n        R = np.array([[np.cos(np.deg2rad(b)), 0, -np.sin(np.deg2rad(b))], [\n            0, 1, 0], [np.sin(np.deg2rad(b)), 0, np.cos(np.deg2rad(b))]])\n        network['pore.coords'] = np.tensordot(network['pore.coords'], R,\n            axes=(1, 1))\n    if c:\n        R = np.array([[np.cos(np.deg2rad(c)), -np.sin(np.deg2rad(c)), 0], [\n            np.sin(np.deg2rad(c)), np.cos(np.deg2rad(c)), 0], [0, 0, 1]])\n        network['pore.coords'] = np.tensordot(network['pore.coords'], R,\n            axes=(1, 1))\nelse:\n    network['pore.coords'] = np.tensordot(network['pore.coords'], R, axes=(\n        1, 1))\n"
}