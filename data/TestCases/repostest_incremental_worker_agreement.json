{
    "functionName": "test_incremental_worker_agreement",
    "className": "TestAgreementClosed",
    "fileName": "/CrowdTruth_&_CrowdTruth-core/test_&_test_metrics.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "for w in range(4, 11):\n    test_config = self.test_conf_const.__class__\n    data, config = crowdtruth.load(file=TEST_FILE_PREF + str(w - 2) + 'vs' +\n        str(w - 1) + 'work_agr.csv', config=test_config())\n    results = crowdtruth.run(data, config)\n    for x in range(2, w):\n        if x != w - 1:\n            self.assertAlmostEqual(results['workers']['wqs'].at['W1'],\n                results['workers']['wqs'].at['W' + str(x)])\n        self.assertAlmostEqual(results['workers']['wqs'].at['W' + str(w)],\n            results['workers']['wqs'].at['W' + str(w + x - 1)])\n    self.assertGreater(results['workers']['wqs'].at['W1'], results[\n        'workers']['wqs'].at['W' + str(w - 1)])\n    self.assertGreater(results['workers']['wqs'].at['W' + str(w)], results[\n        'workers']['wqs'].at['W' + str(2 * w - 1)])\n    self.assertGreater(results['workers']['wqs'].at['W' + str(w)], results[\n        'workers']['wqs'].at['W1'])\n    self.assertLess(results['units']['uqs'].at[1], results['units']['uqs'].\n        at[2])\n    self.assertLess(results['units']['uqs'].at[1], results['units']['uqs'].\n        at[3])\n    self.assertLess(results['units']['uqs'].at[2], results['units']['uqs'].\n        at[3])\n    if not config.open_ended_task:\n        self.assertLess(results['annotations']['aqs'].at['A'], results[\n            'annotations']['aqs'].at['C'])\n        self.assertLess(results['annotations']['aqs'].at['B'], results[\n            'annotations']['aqs'].at['A'])\n        self.assertLess(results['annotations']['aqs'].at['D'], results[\n            'annotations']['aqs'].at['C'])\n        self.assertLess(results['annotations']['aqs'].at['A'], results[\n            'annotations']['aqs'].at['E'])\n        self.assertLess(results['annotations']['aqs'].at['C'], results[\n            'annotations']['aqs'].at['E'])\n"
}