{
    "functionName": "test_ChordParsing",
    "className": null,
    "fileName": "/P-bibs_&_ChordalPy/tests_&_test_StringChordParser.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "assert StringChordParser.parse_chord('C:maj').get_spelling() == Chord.Chord('C'\n    , [(1, 0), (3, 4), (5, 7)], '').get_spelling()\nassert StringChordParser.parse_chord('Eb:min7(*7,9)').get_spelling(\n    ) == Chord.Chord('Eb', [(1, 0), (3, 3), (5, 7), (9, 14)], '').get_spelling(\n    )\nassert StringChordParser.parse_chord('C:sus2/G').get_spelling() == Chord.Chord(\n    'C', [(1, 0), (2, 2), (5, 7)], 'G').get_spelling()\nassert StringChordParser.parse_chord('E:7').get_spelling() == Chord.Chord('E',\n    [(1, 0), (3, 4), (5, 7), (7, 10)], '').get_spelling()\nassert StringChordParser.parse_chord('A:maj').get_spelling() == Chord.Chord('A'\n    , [(1, 0), (3, 4), (5, 7)], '').get_spelling()\nassert StringChordParser.parse_chord('F#:min').get_spelling() == Chord.Chord(\n    'F#', [(1, 0), (3, 3), (5, 7)], '').get_spelling()\nassert StringChordParser.parse_chord('C:dim7').get_spelling() == Chord.Chord(\n    'C', [(1, 0), (3, 3), (5, 6), (7, 9)], '').get_spelling()\nassert StringChordParser.parse_chord('B:dim').get_spelling() == Chord.Chord('B'\n    , [(1, 0), (3, 3), (5, 6)], '').get_spelling()\nassert StringChordParser.parse_chord('Cb:maj').get_spelling() == Chord.Chord(\n    'Cb', [(1, 0), (3, 4), (5, 7)], '').get_spelling()\n"
}