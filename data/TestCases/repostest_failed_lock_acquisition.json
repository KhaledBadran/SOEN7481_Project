{
    "functionName": "test_failed_lock_acquisition",
    "className": null,
    "fileName": "/seung-lab_&_PyChunkedGraph/pychunkedgraph_&_tests_&_test_root_lock.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Ensure that LockingError is raised when lock acquisition failed\"\"\"\nfake_operation_id = big_uint64()\nfake_locked_root_ids = np.array((big_uint64(), big_uint64()))\ncg = mocker.MagicMock()\ncg.get_unique_operation_id = mocker.MagicMock(return_value=fake_operation_id)\ncg.lock_root_loop = mocker.MagicMock(return_value=(False,\n    fake_locked_root_ids), side_effect=None)\nwith pytest.raises(cg_exceptions.LockingError):\n    with RootLock(cg, fake_locked_root_ids):\n        pass\n"
}