{
    "functionName": "test_whitelisting_001_mail_to",
    "className": "TestCase",
    "fileName": "/IntegralDefense_&_ACE/lib_&_saq_&_modules_&_test_email.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "import saq\nwhitelist_path = os.path.join(saq.TEMP_DIR, 'brotex.whitelist')\nsaq.CONFIG['analysis_module_email_analyzer']['whitelist_path'] = whitelist_path\nif os.path.exists(whitelist_path):\n    os.remove(whitelist_path)\nwith open(whitelist_path, 'w') as fp:\n    fp.write('smtp_to:lulu.zingzing@company.com')\nroot = create_root_analysis(uuid=str(uuid.uuid4()), alert_type='mailbox')\nroot.initialize_storage()\nshutil.copy(os.path.join('test_data', 'emails',\n    'o365_journaled.email.rfc822'), os.path.join(root.storage_dir,\n    'email.rfc822'))\nfile_observable = root.add_observable(F_FILE, 'email.rfc822')\nfile_observable.add_directive(DIRECTIVE_ORIGINAL_EMAIL)\nroot.save()\nroot.schedule()\nengine = TestEngine()\nengine.enable_module('analysis_module_file_type', 'test_groups')\nengine.enable_module('analysis_module_email_analyzer', 'test_groups')\nengine.controlled_stop()\nengine.start()\nengine.wait()\nroot.load()\nfrom saq.modules.email import EmailAnalysis\nfile_observable = root.get_observable(file_observable.id)\nself.assertIsNotNone(file_observable)\nemail_analysis = file_observable.get_analysis(EmailAnalysis)\nself.assertFalse(email_analysis)\n"
}