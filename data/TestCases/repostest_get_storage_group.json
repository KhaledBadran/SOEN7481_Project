{
    "functionName": "test_get_storage_group",
    "className": "CITestProvisioning",
    "fileName": "/MichaelMcAleer_&_PyU4V/PyU4V_&_tests_&_ci_tests_&_test_pyu4v_ci_provisioning.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Test get_storage_group.\"\"\"\nstorage_group_name = self.create_empty_storage_group()\nref_storage_group_details = self.provisioning.get_storage_group(\n    storage_group_name)\nstorage_group_details = self.provisioning.get_storage_group(storage_group_name)\nself._validate_storage_group_details(storage_group_name, storage_group_details)\nself.assertEqual(storage_group_name, storage_group_details[constants.\n    STORAGE_GROUP_ID_CAMEL])\nself.assertEqual(ref_storage_group_details[constants.SLO],\n    storage_group_details[constants.SLO])\nself.assertEqual(ref_storage_group_details[constants.SERVICE_LEVEL],\n    storage_group_details[constants.SERVICE_LEVEL])\nself.assertEqual(ref_storage_group_details[constants.BASE_SLO_NAME],\n    storage_group_details[constants.BASE_SLO_NAME])\nself.assertEqual(ref_storage_group_details[constants.SRP],\n    storage_group_details[constants.SRP])\nself.assertEqual(ref_storage_group_details[constants.SLO_COMPLIANCE],\n    storage_group_details[constants.SLO_COMPLIANCE])\nself.assertEqual(ref_storage_group_details[constants.NUM_OF_VOLS],\n    storage_group_details[constants.NUM_OF_VOLS])\nself.assertEqual(ref_storage_group_details[constants.NUM_OF_CHILD_SGS],\n    storage_group_details[constants.NUM_OF_CHILD_SGS])\nself.assertEqual(ref_storage_group_details[constants.NUM_OF_PARENT_SGS],\n    storage_group_details[constants.NUM_OF_PARENT_SGS])\nself.assertEqual(ref_storage_group_details[constants.NUM_OF_MASKING_VIEWS],\n    storage_group_details[constants.NUM_OF_MASKING_VIEWS])\nself.assertEqual(ref_storage_group_details[constants.NUM_OF_SNAPSHOTS],\n    storage_group_details[constants.NUM_OF_SNAPSHOTS])\nself.assertEqual(ref_storage_group_details[constants.CAP_GB],\n    storage_group_details[constants.CAP_GB])\nself.assertEqual(ref_storage_group_details[constants.DEVICE_EMULATION],\n    storage_group_details[constants.DEVICE_EMULATION])\nself.assertEqual(ref_storage_group_details[constants.TYPE],\n    storage_group_details[constants.TYPE])\nself.assertEqual(ref_storage_group_details[constants.UNPROTECTED],\n    storage_group_details[constants.UNPROTECTED])\nself.assertEqual(ref_storage_group_details[constants.COMPRESSION],\n    storage_group_details[constants.COMPRESSION])\n"
}