{
    "functionName": "test_connected_target_span",
    "className": "TestDependencyTokens",
    "fileName": "/apmoore1_&_Bella/tests_&_test_dependency_tokens.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Tests DependencyToken().get_n_relations function\n        \"\"\"\nconnected_words = [('this', 'CONNECTED'), ('nothing', 'CURRENT'), ('is',\n    'CONNECTED'), ('an', 'CONNECTED'), ('example', 'CONNECTED')]\nrelations = {(1): ['test', 'anything'], (2): ['something', 'another'], (3):\n    ['you', 'the'], (4): ['last', 'pass']}\ntoken = 'nothing'\nvalid_con_text = 'this nothing is an example'\nvalid_targ_span = 5, 12\ndep_token = DependencyToken(token, relations, connected_words)\ntest_con_text, test_targ_span = dep_token.connected_target_span()\nself.assertEqual(valid_con_text, test_con_text, msg=\n    'Connected words should be {} and not {}'.format(valid_con_text,\n    test_con_text))\nself.assertEqual(valid_targ_span, test_targ_span, msg=\n    'target span should be {} and not {}'.format(valid_targ_span,\n    test_targ_span))\nconnected_words = [('nothing', 'CURRENT'), ('this', 'CONNECTED'), ('is',\n    'CONNECTED'), ('an', 'CONNECTED'), ('example', 'CONNECTED')]\nvalid_con_text = 'nothing this is an example'\nvalid_targ_span = 0, 7\ndep_token = DependencyToken(token, relations, connected_words)\ntest_con_text, test_targ_span = dep_token.connected_target_span()\nself.assertEqual(valid_con_text, test_con_text, msg=\n    'Connected words should be {} and not {}'.format(valid_con_text,\n    test_con_text))\nself.assertEqual(valid_targ_span, test_targ_span, msg=\n    'target span should be {} and not {}'.format(valid_targ_span,\n    test_targ_span))\nconnected_words = [('example', 'CONNECTED'), ('this', 'CONNECTED'), ('is',\n    'CONNECTED'), ('an', 'CONNECTED'), ('nothing', 'CURRENT')]\nvalid_con_text = 'example this is an nothing'\nvalid_targ_span = 19, 26\ndep_token = DependencyToken(token, relations, connected_words)\ntest_con_text, test_targ_span = dep_token.connected_target_span()\nself.assertEqual(valid_con_text, test_con_text, msg=\n    'Connected words should be {} and not {}'.format(valid_con_text,\n    test_con_text))\nself.assertEqual(valid_targ_span, test_targ_span, msg=\n    'target span should be {} and not {}'.format(valid_targ_span,\n    test_targ_span))\nconnected_words = [(' example', 'CONNECTED'), ('this', 'CONNECTED'), ('is',\n    'CONNECTED'), ('an', 'CONNECTED'), ('nothing', 'CURRENT')]\nvalid_con_text = 'example this is an nothing'\nvalid_targ_span = 19, 26\ndep_token = DependencyToken(token, relations, connected_words)\nwith self.assertRaises(ValueError, msg=\n    'As the connected words have whitespace padding that should not exist'):\n    dep_token.connected_target_span()\n"
}