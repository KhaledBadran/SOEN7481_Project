{
    "functionName": "test_reversible_preprocessing_wrapper",
    "className": null,
    "fileName": "/Neuraxio_&_Neuraxle/testing_&_steps_&_test_reversible_preprocessing_wrapper.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "processed_outputs = test_case.execute()\ntest_case.assert_expected_processed_outputs(processed_outputs)\ntest_case.assert_callback_data_is_as_expected()\npytest.mark.parametrize('test_case', [NeuraxleTestCase(pipeline=Pipeline([\n    ReversiblePreprocessingWrapper(preprocessing_step=CallbackWrapper(\n    MultiplyByN(2), tape_transform_preprocessing, tape_fit_postprocessing,\n    tape_inverse_transform_preprocessing), postprocessing_step=\n    CallbackWrapper(AddN(10), tape_transform_postprocessing,\n    tape_fit_postprocessing))]), callbacks=[tape_transform_preprocessing,\n    tape_fit_preprocessing, tape_transform_postprocessing,\n    tape_fit_postprocessing, tape_inverse_transform_preprocessing],\n    expected_callbacks_data=[[DATA_INPUTS], [], [DATA_INPUTS * 2], [], [\n    DATA_INPUTS * 2 + 10]], data_inputs=DATA_INPUTS,\n    expected_processed_outputs=EXPECTED_PROCESSED_OUTPUTS, execution_mode=\n    ExecutionMode.TRANSFORM), NeuraxleTestCase(pipeline=Pipeline([\n    ReversiblePreprocessingWrapper(preprocessing_step=CallbackWrapper(\n    MultiplyByN(2), tape_transform_preprocessing, tape_fit_preprocessing,\n    tape_inverse_transform_preprocessing), postprocessing_step=\n    CallbackWrapper(AddN(10), tape_transform_postprocessing,\n    tape_fit_postprocessing))]), callbacks=[tape_transform_preprocessing,\n    tape_fit_preprocessing, tape_transform_postprocessing,\n    tape_fit_postprocessing, tape_inverse_transform_preprocessing],\n    expected_callbacks_data=[[DATA_INPUTS], [(DATA_INPUTS, EXPECTED_OUTPUTS\n    )], [DATA_INPUTS * 2], [(DATA_INPUTS * 2, EXPECTED_OUTPUTS)], [\n    DATA_INPUTS * 2 + 10]], data_inputs=DATA_INPUTS, expected_outputs=\n    EXPECTED_OUTPUTS, expected_processed_outputs=EXPECTED_PROCESSED_OUTPUTS,\n    execution_mode=ExecutionMode.FIT_TRANSFORM), NeuraxleTestCase(pipeline=\n    Pipeline([ReversiblePreprocessingWrapper(preprocessing_step=\n    CallbackWrapper(MultiplyByN(2), tape_transform_preprocessing,\n    tape_fit_preprocessing, tape_inverse_transform_preprocessing),\n    postprocessing_step=CallbackWrapper(AddN(10),\n    tape_transform_postprocessing, tape_fit_postprocessing))]), callbacks=[\n    tape_transform_preprocessing, tape_fit_preprocessing,\n    tape_transform_postprocessing, tape_fit_postprocessing,\n    tape_inverse_transform_preprocessing], expected_callbacks_data=[[\n    DATA_INPUTS], [(DATA_INPUTS, EXPECTED_OUTPUTS)], [], [(DATA_INPUTS * 2,\n    EXPECTED_OUTPUTS)], []], data_inputs=DATA_INPUTS, expected_outputs=\n    EXPECTED_OUTPUTS, execution_mode=ExecutionMode.FIT)])"
}