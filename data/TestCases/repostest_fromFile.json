{
    "functionName": "test_fromFile",
    "className": "Test_ConfigParser",
    "fileName": "/Kieran-Bacon_&_Better/PackageTests_&_test_configparser.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "config = ConfigParser().read(os.path.join(RESOURCES, 'example.ini'))\nexpected_result = {'Simple Values': {'key': 'value', 'spaces in keys':\n    'allowed', 'spaces in values': 'allowed as well',\n    'spaces around the delimiter': 'obviously', 'you can also use':\n    'to delimit keys from values'}, 'All Values Are Strings': {\n    'values like this': '1000000', 'or this': '3.14159265359',\n    'are they treated as numbers?': 'no',\n    'integers, floats and booleans are held as': 'strings',\n    'can use the API to get converted values directly': 'true'},\n    'Multiline Values': {'chorus':\n    \"\"\"I'm a lumberjack, and I'm okay\nI sleep all night and I work all day\"\"\"\n    }, 'No Values': {'key_without_value': True, 'empty string value here':\n    ''}, 'You can use comments': {'Sections Can Be Indented': {\n    'can_values_be_as_well': 'True', 'does_that_mean_anything_special':\n    'False', 'purpose': 'formatting for readability', 'multiline_values':\n    \"\"\"are\nhandled just fine as\nlong as they are indented\ndeeper than the first line\nof a value\"\"\"\n    }}}\nself.assertEqual(config, expected_result)\n"
}