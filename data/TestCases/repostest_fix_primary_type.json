{
    "functionName": "test_fix_primary_type",
    "className": "TestCheckOrphan",
    "fileName": "/Sung-Huan_&_ANNOgesic/tests_&_test_check_orphan.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "tss_dict = [{'seq_id': 'aaa', 'source': 'Refseq', 'feature': 'TSS', 'start':\n    2, 'end': 2, 'phase': '.', 'strand': '+', 'score': '.'}, {'seq_id':\n    'aaa', 'source': 'Refseq', 'feature': 'TSS', 'start': 3, 'end': 3,\n    'phase': '.', 'strand': '+', 'score': '.'}, {'seq_id': 'aaa', 'source':\n    'Refseq', 'feature': 'TSS', 'start': 4, 'end': 4, 'phase': '.',\n    'strand': '+', 'score': '.'}]\nattributes = [{'type': 'Primary', 'ID': 'tss0', 'Name': 'TSS:2_+',\n    'UTR_length': 'Primary_10', 'associated_gene': 'AAA_00001'}, {'type':\n    'Primary&Internal', 'ID': 'tss1', 'Name': 'TSS:3_+', 'UTR_length':\n    'Primary_20&Internal_NA', 'associated_gene': 'AAA_00001&AAA_00005'}, {\n    'type': 'Primary&Primary', 'ID': 'tss2', 'Name': 'TSS:4_+',\n    'UTR_length': 'Primary_40&Primary_60', 'associated_gene':\n    'AAA_00001&AAA_00004'}]\ntsss = []\nfor index in range(0, 3):\n    tsss.append(Create_generator(tss_dict[index], attributes[index], 'gff'))\nnew_tsss = co.fix_primary_type(tsss, self.example.wigs_f, self.example.wigs_r)\nutrs = []\nfor tss in new_tsss:\n    utrs.append(tss.attributes['UTR_length'])\nself.assertEqual(set(utrs), set(['Internal_NA&Secondary_20', 'Primary_60',\n    'Primary_10']))\n"
}