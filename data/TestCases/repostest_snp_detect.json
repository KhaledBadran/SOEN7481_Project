{
    "functionName": "test_snp_detect",
    "className": "TestTranscripSNP",
    "fileName": "/Sung-Huan_&_ANNOgesic/tests_&_test_transcript_SNP.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "depth_file = os.path.join(self.test_folder, 'depth')\ngen_file(depth_file, self.example.depth_file)\nfasta_file = os.path.join(self.test_folder, 'NC_007795.1.fa')\ngen_file(fasta_file, self.example.fasta_final)\nsnp_file = os.path.join(self.test_folder, 'NC_007795.1.snp')\ngen_file(snp_file, self.example.snp_final)\nout_seq = os.path.join(self.test_folder, 'seq')\nout_snp = os.path.join(self.test_folder, 'snp')\nstat_file = os.path.join(self.test_folder, 'stat')\nargs = self.mock_args.mock()\nargs.depth = 5\nargs.fraction = 0.3\nargs.quality = 5\nargs.depth_s = 'n_10'\nargs.depth_b = 'a_2'\nargs.dp4_sum = 'n_10'\nargs.dp4_frac = 0.5\nargs.idv = 'n_10'\nargs.imf = 0.5\nargs.filters = ['VDB_s0.1']\nargs.min_sample = 2\nts.snp_detect(fasta_file, snp_file, depth_file, out_snp, out_seq, 2,\n    stat_file, args, 2)\nself.assertTrue(os.path.exists(os.path.join(self.test_folder,\n    'seq_NC_007795.1_1_1.fa')))\nself.assertTrue(os.path.exists(os.path.join(self.test_folder,\n    'seq_NC_007795.1_1_2.fa')))\nself.assertTrue(os.path.exists(os.path.join(self.test_folder,\n    'seq_NC_007795.1_2_1.fa')))\nself.assertTrue(os.path.exists(os.path.join(self.test_folder,\n    'snp_seq_reference.csv')))\nself.assertTrue(os.path.exists(os.path.join(self.test_folder, 'snp_best.vcf')))\nself.assertTrue(os.path.exists(os.path.join(self.test_folder,\n    'snp_NC_007795.1_SNP_QUAL_best.png')))\nself.assertTrue(os.path.exists(os.path.join(self.test_folder,\n    'snp_NC_007795.1_SNP_QUAL_raw.png')))\n"
}