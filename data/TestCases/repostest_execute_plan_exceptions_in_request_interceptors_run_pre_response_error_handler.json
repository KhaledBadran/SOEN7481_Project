{
    "functionName": "test_execute_plan_exceptions_in_request_interceptors_run_pre_response_error_handler",
    "className": "TestPlanExecutor",
    "fileName": "/cbefus_&_Eynnyd/tests_&_plan_execution_&_test_plan_executor.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "class CustomException(Exception):\n    pass\ndef fake_interceptor(original_request):\n    raise CustomException('Just a test')\ndef error_handler(thrown_error, request):\n    return ResponseBuilder().set_status(HTTPStatus.SERVICE_UNAVAILABLE).build()\nexception_handlers = ErrorHandlersBuilder().add_pre_response_error_handler(\n    CustomException, error_handler).build()\nplan_executor = PlanExecutor(exception_handlers)\nplan = ExecutionPlan([fake_interceptor], 'some handler', [], {})\nresponse = plan_executor.execute_plan(plan, 'original test request')\nself.assertEqual(HTTPStatus.SERVICE_UNAVAILABLE.value, response.status.code)\n"
}