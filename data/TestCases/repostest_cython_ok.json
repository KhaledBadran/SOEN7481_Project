{
    "functionName": "test_cython_ok",
    "className": null,
    "fileName": "/bsmurphy_&_PyKrige/tests_&_test_core.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "data, (gridx, gridy, _), mask_ref = sample_data_2d\nok = OrdinaryKriging(data[:, (0)], data[:, (1)], data[:, (2)])\nok_non_exact = OrdinaryKriging(data[:, (0)], data[:, (1)], data[:, (2)],\n    exact_values=False)\nz1, ss1 = ok.execute('grid', gridx, gridy, backend='loop')\nz2, ss2 = ok.execute('grid', gridx, gridy, backend='C')\nassert_allclose(z1, z2)\nassert_allclose(ss1, ss2)\nz1, ss1 = ok_non_exact.execute('grid', gridx, gridy, backend='loop')\nz2, ss2 = ok_non_exact.execute('grid', gridx, gridy, backend='C')\nassert_allclose(z1, z2)\nassert_allclose(ss1, ss2)\nclosest_points = 4\nz1, ss1 = ok.execute('grid', gridx, gridy, backend='loop', n_closest_points\n    =closest_points)\nz2, ss2 = ok.execute('grid', gridx, gridy, backend='C', n_closest_points=\n    closest_points)\nassert_allclose(z1, z2)\nassert_allclose(ss1, ss2)\nz1, ss1 = ok_non_exact.execute('grid', gridx, gridy, backend='loop',\n    n_closest_points=closest_points)\nz2, ss2 = ok_non_exact.execute('grid', gridx, gridy, backend='C',\n    n_closest_points=closest_points)\nassert_allclose(z1, z2)\nassert_allclose(ss1, ss2)\n"
}