{
    "functionName": "test_to_dict_not_flat_not_interleaved_cat_by_element_data",
    "className": "DictTest",
    "fileName": "/pmeal_&_OpenPNM/tests_&_unit_&_io_&_DictTest.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "D = Dict.to_dict(network=self.net, phases=[self.phase_1, self.phase_2],\n    flatten=False, interleave=False, categorize_by=['element', 'data'])\na = set(['network', 'phase', 'physics', 'geometry'])\nb = set(['net_01', 'phase_01', 'phase_02'])\nc = set(['labels', 'properties'])\nd = set(['pore', 'throat'])\nassert b == set(D.keys())\nassert set(['geo_01', 'geo_02']).issubset(D['net_01'].keys())\nassert set(['phys_01', 'phys_02']).issubset(D['phase_01'].keys())\nassert set(['phys_03', 'phys_04']).issubset(D['phase_02'].keys())\nassert d.issubset(D['net_01']['properties'].keys())\nassert d.issubset(D['net_01']['labels'].keys())\nassert d.issubset(D['phase_01']['properties'].keys())\nassert d.issubset(D['phase_01']['labels'].keys())\nassert d.issubset(D['phase_02']['properties'].keys())\nassert d.issubset(D['phase_02']['labels'].keys())\nassert d.issubset(D['net_01']['geo_01']['properties'].keys())\nassert d.issubset(D['net_01']['geo_01']['labels'].keys())\nassert d.issubset(D['net_01']['geo_02']['properties'].keys())\nassert d.issubset(D['net_01']['geo_02']['labels'].keys())\nassert d.issubset(D['phase_01']['phys_01']['properties'].keys())\nassert d.issubset(D['phase_01']['phys_01']['labels'].keys())\nassert d.issubset(D['phase_01']['phys_02']['properties'].keys())\nassert d.issubset(D['phase_01']['phys_02']['labels'].keys())\nassert d.issubset(D['phase_02']['phys_03']['properties'].keys())\nassert d.issubset(D['phase_02']['phys_03']['labels'].keys())\nassert d.issubset(D['phase_02']['phys_04']['properties'].keys())\nassert d.issubset(D['phase_02']['phys_04']['labels'].keys())\n"
}