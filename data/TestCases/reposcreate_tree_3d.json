{
    "functionName": "create_tree_3d",
    "className": "TestRTree",
    "fileName": "/oberbichler_&_ANurbs/tests_&_TestRTree.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "data = [[(-28, -35, -20), (-17, -27, -7)], [(-53, -55, 59), (-49, -47, 79)],\n    [(22, -19, 55), (35, -4, 58)], [(18, -82, 8), (37, -70, 12)], [(20, -8,\n    -22), (36, -6, -2)], [(-25, -7, 18), (-17, 6, 36)], [(-8, -49, 40), (4,\n    -39, 48)], [(-50, -54, 9), (-48, -36, 11)], [(-57, -26, 31), (-46, -20,\n    32)], [(-67, 5, -12), (-47, 10, -2)], [(13, -34, -38), (24, -34, -28)],\n    [(-32, -69, -19), (-13, -57, -15)], [(-21, 1, -27), (-1, 9, -22)], [(18,\n    -82, 54), (18, -63, 56)], [(19, -12, 26), (24, 5, 37)], [(-56, 2, 59),\n    (-47, 18, 60)], [(-14, -69, 9), (-6, -54, 11)], [(-13, -18, 6), (-2, -4,\n    7)], [(-12, -65, 59), (-3, -55, 70)], [(21, -55, -5), (37, -54, 10)], [\n    (-67, -37, -5), (-50, -26, 1)], [(21, -29, 19), (27, -26, 32)], [(-47, \n    -55, 35), (-40, -55, 42)], [(9, -27, 44), (18, -10, 47)], [(39, -32, -\n    38), (55, -12, -22)], [(39, -47, 33), (52, -45, 49)], [(1, -69, 26), (7,\n    -68, 31)], [(-44, 5, 6), (-27, 7, 19)], [(0, -70, -16), (16, -65, -10)],\n    [(15, -16, -20), (23, -16, -12)], [(-49, -73, -30), (-32, -65, -23)], [\n    (-26, -10, -28), (-7, 0, -28)], [(-39, -4, 5), (-23, -4, 21)], [(-6, -\n    60, -12), (12, -43, 4)], [(-29, -15, 42), (-23, -7, 60)], [(32, 9, -24),\n    (46, 25, -7)], [(5, 6, -4), (12, 7, 2)], [(40, -59, 2), (50, -56, 18)],\n    [(-26, -35, 4), (-19, -21, 23)], [(4, -48, 26), (20, -42, 37)], [(-50, \n    -38, -1), (-32, -26, 2)], [(19, -30, -4), (28, -28, 9)], [(-59, -6, -2),\n    (-50, 7, 2)], [(-17, -17, 39), (-17, -12, 48)], [(28, 5, 37), (46, 5, \n    56)], [(3, -25, 21), (5, -22, 28)], [(-28, -50, -27), (-9, -44, -19)],\n    [(-42, -53, -14), (-42, -53, -13)], [(-38, -37, 44), (-32, -35, 46)], [\n    (0, 3, 21), (1, 8, 31)], [(31, -68, 38), (37, -58, 53)], [(-18, -57, 60\n    ), (-13, -40, 61)], [(-28, -26, -12), (-11, -14, -11)], [(-50, -26, -34\n    ), (-34, -10, -26)], [(-29, -69, 21), (-25, -57, 41)], [(-6, -55, -9),\n    (-3, -47, 10)], [(16, -72, -29), (33, -60, -22)], [(-34, -66, 40), (-31,\n    -55, 55)], [(22, -22, 16), (38, -10, 23)], [(-17, -19, 52), (-9, -3, 69\n    )], [(20, -6, 10), (26, 1, 17)], [(15, -8, -30), (30, 0, -29)], [(-34, \n    3, 51), (-28, 6, 63)], [(-49, -39, 25), (-48, -25, 38)], [(-58, -34, -\n    28), (-41, -17, -11)], [(-10, -46, 4), (1, -36, 13)], [(17, -54, 59), (\n    34, -46, 66)], [(-17, -61, 27), (2, -56, 35)], [(-41, -73, -10), (-28, \n    -67, -10)], [(-47, -39, 55), (-46, -27, 69)], [(-16, 6, -23), (-12, 10,\n    -10)], [(28, -29, 37), (46, -21, 40)], [(30, -6, 36), (32, 14, 38)], [(\n    11, -47, 47), (17, -31, 49)], [(-12, -53, 38), (6, -46, 47)], [(18, 10,\n    43), (30, 17, 44)], [(-45, -15, 23), (-28, -5, 26)], [(-15, 7, 17), (-2,\n    22, 35)], [(15, -38, -16), (26, -34, -13)], [(-46, -13, 59), (-40, -11,\n    70)], [(35, -14, 6), (47, 2, 10)], [(25, -32, -26), (38, -12, -12)], [(\n    7, -9, 59), (10, 7, 64)], [(7, -52, 25), (12, -42, 41)], [(-29, -28, 48\n    ), (-11, -18, 51)], [(-44, -28, -9), (-36, -17, 5)], [(-3, -45, 59), (\n    13, -43, 78)], [(-45, -60, 6), (-33, -56, 10)], [(-49, -48, -1), (-47, \n    -39, 15)], [(-31, -70, -47), (-15, -51, -29)], [(-24, -49, -11), (-13, \n    -41, -6)], [(17, -8, -26), (27, 1, -14)], [(24, -66, 24), (30, -55, 35)\n    ], [(10, -53, -41), (14, -43, -26)], [(-4, -60, 17), (-2, -40, 19)], [(\n    -55, -53, -47), (-42, -37, -29)], [(-26, -52, -47), (-9, -33, -28)], [(\n    17, 9, 1), (26, 28, 11)], [(34, -40, 13), (37, -39, 19)], [(-25, -79, -\n    7), (-12, -68, 2)]]\nindex = an.RTree3D(len(data))\nfor box_a, box_b in data:\n    index.add(box_a, box_b)\nindex.finish()\nreturn index\nstaticmethod"
}