{
    "functionName": "test_extend_categorical",
    "className": "TestExtend",
    "fileName": "/hdoupe_&_ParamTools/paramtools_&_tests_&_test_parameters.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "array_first_defaults = {'schema': array_first_defaults['schema'],\n    'int_dense_array_param': array_first_defaults['int_dense_array_param']}\nnew_vos = []\nfor vo in array_first_defaults['int_dense_array_param']['value']:\n    if vo['label0'] == 'one':\n        vo.update({'value': vo['value'] - 18})\n        new_vos.append(vo)\narray_first_defaults['int_dense_array_param']['value'] = new_vos\nclass AFParams(Parameters):\n    defaults = array_first_defaults\n    label_to_extend = 'label0'\n    array_first = True\nparams = AFParams()\nassert params.int_dense_array_param.tolist()\nexp = [{'label0': 'one', 'label1': 0, 'label2': 0, 'value': 1}, {'label0':\n    'one', 'label1': 0, 'label2': 1, 'value': 2}, {'label0': 'one',\n    'label1': 0, 'label2': 2, 'value': 3}, {'label0': 'one', 'label1': 1,\n    'label2': 0, 'value': 4}, {'label0': 'one', 'label1': 1, 'label2': 1,\n    'value': 5}, {'label0': 'one', 'label1': 1, 'label2': 2, 'value': 6}, {\n    'label0': 'one', 'label1': 2, 'label2': 0, 'value': 7}, {'label0':\n    'one', 'label1': 2, 'label2': 1, 'value': 8}, {'label0': 'one',\n    'label1': 2, 'label2': 2, 'value': 9}, {'label0': 'one', 'label1': 3,\n    'label2': 0, 'value': 10}, {'label0': 'one', 'label1': 3, 'label2': 1,\n    'value': 11}, {'label0': 'one', 'label1': 3, 'label2': 2, 'value': 12},\n    {'label0': 'one', 'label1': 4, 'label2': 0, 'value': 13}, {'label0':\n    'one', 'label1': 4, 'label2': 1, 'value': 14}, {'label0': 'one',\n    'label1': 4, 'label2': 2, 'value': 15}, {'label0': 'one', 'label1': 5,\n    'label2': 0, 'value': 16}, {'label0': 'one', 'label1': 5, 'label2': 1,\n    'value': 17}, {'label0': 'one', 'label1': 5, 'label2': 2, 'value': 18}]\nassert params.from_array('int_dense_array_param', label0='one') == exp\nfor val in params._data['int_dense_array_param']['value']:\n    if val['label0'] == 'zero':\n        assert val['_auto'] is True\n    else:\n        assert '_auto' not in val\n"
}