{
    "functionName": "test_acquisition",
    "className": "TestMLNEB",
    "fileName": "/SUNCAT-Center_&_CatLearn/test_&_test_mlneb.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\" Here we test the acquisition functions\"\"\"\nprint('Checking acquisition function 1 using 6 images...')\nneb_catlearn = MLNEB(start='initial_optimized.traj', end=\n    'final_optimized.traj', n_images=6, ase_calc=ase_calculator, restart=False)\nneb_catlearn.run(fmax=0.05, trajectory='ML-NEB.traj', max_step=0.2,\n    acquisition='acq_1')\nself.assertEqual(neb_catlearn.iter, 16)\nmax_unc = np.max(neb_catlearn.uncertainty_path)\nunc_test = 0.0028\nnp.testing.assert_array_almost_equal(max_unc, unc_test, decimal=4)\nprint('Checking acquisition function 2 using 6 images...')\nneb_catlearn = MLNEB(start='initial_optimized.traj', end=\n    'final_optimized.traj', n_images=6, ase_calc=ase_calculator, restart=False)\nneb_catlearn.run(fmax=0.05, trajectory='ML-NEB.traj', max_step=0.2,\n    acquisition='acq_2')\nself.assertEqual(neb_catlearn.iter, 13)\nmax_unc = np.max(neb_catlearn.uncertainty_path)\nunc_test = 0.0128\nnp.testing.assert_array_almost_equal(max_unc, unc_test, decimal=4)\nprint('Checking acquisition function 3 using 6 images...')\nneb_catlearn = MLNEB(start='initial_optimized.traj', end=\n    'final_optimized.traj', n_images=6, ase_calc=ase_calculator, restart=False)\nneb_catlearn.run(fmax=0.05, trajectory='ML-NEB.traj', max_step=0.2,\n    acquisition='acq_3')\nself.assertEqual(neb_catlearn.iter, 14)\nmax_unc = np.max(neb_catlearn.uncertainty_path)\nunc_test = 0.0036\nnp.testing.assert_array_almost_equal(max_unc, unc_test, decimal=4)\nprint('Checking acquisition function 4 using 6 images...')\nneb_catlearn = MLNEB(start='initial_optimized.traj', end=\n    'final_optimized.traj', n_images=6, ase_calc=ase_calculator, restart=False)\nneb_catlearn.run(fmax=0.05, trajectory='ML-NEB.traj', max_step=0.2,\n    acquisition='acq_4')\nself.assertEqual(neb_catlearn.iter, 16)\nmax_unc = np.max(neb_catlearn.uncertainty_path)\nunc_test = 0.0028\nnp.testing.assert_array_almost_equal(max_unc, unc_test, decimal=4)\nprint('Checking acquisition function 5 using 6 images...')\nneb_catlearn = MLNEB(start='initial_optimized.traj', end=\n    'final_optimized.traj', n_images=6, ase_calc=ase_calculator, restart=False)\nneb_catlearn.run(fmax=0.05, trajectory='ML-NEB.traj', max_step=0.2,\n    acquisition='acq_5')\nself.assertEqual(neb_catlearn.iter, 13)\nmax_unc = np.max(neb_catlearn.uncertainty_path)\nunc_test = 0.0128\nnp.testing.assert_array_almost_equal(max_unc, unc_test, decimal=4)\n"
}