{
    "functionName": "test_h5save_analysis",
    "className": "TestH5IO",
    "fileName": "/PyTTAmaster_&_PyTTa/tests_&_test_h5io.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Analysis hdf5 save test.\n        \"\"\"\nanType = 'RT'\nanType2 = 'mixed'\nnthOct = 3\nnthOct2 = 1\nminBand = 60\nminBand2 = 70\nmaxBand = 20000\nmaxBand2 = 16000\ndata = [2.0226, 1.7139, 1.4615, 1.7127, 1.089, 1.5395, 1.2965, 1.9011, \n    1.9835, 2.1028, 2.1225, 1.903, 1.9064, 2.0137, 1.8834, 1.6736, 1.522, \n    1.5677, 1.6691, 1.4698, 1.2754, 0.9378, 0.6863, 0.4889, 0.3776, 0.3113]\ndata2 = [2.0226, 1.7127, 1.2965, 2.1028, 1.9064, 1.6736, 1.6691, 0.9378, 0.3776\n    ]\nerror = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \n    1, 1, 1, 1]\nerrorLabel = 'errinho'\nerror2 = [1, 1, 1, 1, 1, 1, 1, 1, 1]\nerrorLabel2 = 'erroncio'\ndataLabel = 'etiquetismo'\ndataLabel2 = 'etiquetasso'\ncomment = 'Testaaano carai'\ncomment2 = 'Testano memo'\nan = pytta.Analysis(anType=anType, nthOct=nthOct, minBand=minBand, maxBand=\n    maxBand, data=data, error=error, errorLabel=errorLabel, dataLabel=\n    dataLabel, comment=comment)\nan2 = pytta.Analysis(anType=anType2, nthOct=nthOct2, minBand=minBand2,\n    maxBand=maxBand2, data=data2, error=error2, errorLabel=errorLabel2,\n    dataLabel=dataLabel2, comment=comment2)\nsavedlst = [an, an2]\npytta.save(self.filename, an, an2)\na = pytta.load(self.filename)\nloadedlst = [a[pyttaobj] for pyttaobj in a]\nfor idx, pobj in enumerate(loadedlst):\n    self.assertEqual(pobj.anType, savedlst[idx].anType)\n    self.assertEqual(pobj.nthOct, savedlst[idx].nthOct)\n    self.assertEqual(pobj.minBand, savedlst[idx].minBand)\n    self.assertEqual(pobj.maxBand, savedlst[idx].maxBand)\n    self.assertEqual(pobj.dataLabel, savedlst[idx].dataLabel)\n    self.assertEqual(pobj.errorLabel, savedlst[idx].errorLabel)\n    self.assertEqual(pobj.comment, savedlst[idx].comment)\n    self.assertEqual(pobj.data.tolist(), savedlst[idx].data.tolist())\n    self.assertEqual(pobj.error.tolist(), savedlst[idx].error.tolist())\n"
}