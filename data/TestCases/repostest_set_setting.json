{
    "functionName": "test_set_setting",
    "className": "TestKmipServerConfig",
    "fileName": "/OpenKMIP_&_PyKMIP/kmip_&_tests_&_unit_&_services_&_server_&_test_config.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Test that the right errors are raised and methods are called when\n        setting individual settings.\n        \"\"\"\nc = config.KmipServerConfig()\nc._set_auth_suite = mock.MagicMock()\nc._set_ca_path = mock.MagicMock()\nc._set_certificate_path = mock.MagicMock()\nc._set_hostname = mock.MagicMock()\nc._set_key_path = mock.MagicMock()\nc._set_port = mock.MagicMock()\nc._set_policy_path = mock.MagicMock()\nc._set_enable_tls_client_auth = mock.MagicMock()\nc._set_tls_cipher_suites = mock.MagicMock()\nc._set_logging_level = mock.MagicMock()\nc._set_database_path = mock.MagicMock()\nargs = 'invalid', None\nregex = \"Setting 'invalid' is not supported.\"\nself.assertRaisesRegex(exceptions.ConfigurationError, regex, c.set_setting,\n    *args)\nc.set_setting('hostname', '127.0.0.1')\nc._set_hostname.assert_called_once_with('127.0.0.1')\nc.set_setting('port', 5696)\nc._set_port.assert_called_once_with(5696)\nc.set_setting('certificate_path', '/etc/pykmip/certs/server.crt')\nc._set_certificate_path.assert_called_once_with('/etc/pykmip/certs/server.crt')\nc.set_setting('key_path', '/etc/pykmip/certs/server.key')\nc._set_key_path.assert_called_once_with('/etc/pykmip/certs/server.key')\nc.set_setting('ca_path', '/etc/pykmip/certs/ca.crt')\nc._set_ca_path.assert_called_once_with('/etc/pykmip/certs/ca.crt')\nc.set_setting('auth_suite', 'Basic')\nc._set_auth_suite.assert_called_once_with('Basic')\nc.set_setting('policy_path', '/etc/pykmip/policies')\nc._set_policy_path.assert_called_once_with('/etc/pykmip/policies')\nc.set_setting('enable_tls_client_auth', False)\nc._set_enable_tls_client_auth.assert_called_once_with(False)\nc.set_setting('tls_cipher_suites', [])\nc._set_tls_cipher_suites.assert_called_once_with([])\nc.set_setting('logging_level', 'WARNING')\nc._set_logging_level.assert_called_once_with('WARNING')\nc.set_setting('database_path', '/var/pykmip/pykmip.db')\nc._set_database_path.assert_called_once_with('/var/pykmip/pykmip.db')\n"
}