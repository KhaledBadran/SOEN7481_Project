{
    "functionName": "test_ArithmeticLogicUnit",
    "className": "TestArithmeticLogicUnit",
    "fileName": "/jamesjiang52_&_Bitwise/tests_&_processor_&_test_ArithmeticLogicUnit.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "a_bus = bw.wire.Bus16()\nb_bus = bw.wire.Bus16()\nfunction_select_bus = bw.wire.Bus4()\noverflow = bw.wire.Wire()\ncarry_out = bw.wire.Wire()\noutput_bus = bw.wire.Bus16()\na = bw.processor.ArithmeticLogicUnit(a_bus, b_bus, function_select_bus,\n    overflow, carry_out, output_bus)\na_bus.wire_values = 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1\nb_bus.wire_values = 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1\nfunction_select_bus.wire_values = 0, 0, 0, 0\nassert output_bus.wire_values == (0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1,\n    1, 1)\nfunction_select_bus.wire_values = 0, 0, 0, 1\nassert output_bus.wire_values == (1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0,\n    0, 0)\nfunction_select_bus.wire_values = 0, 0, 1, 0\nassert output_bus.wire_values == (0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,\n    0, 1)\nfunction_select_bus.wire_values = 0, 0, 1, 1\nassert output_bus.wire_values == (1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,\n    1, 0)\nfunction_select_bus.wire_values = 0, 1, 0, 0\nassert output_bus.wire_values == (0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1,\n    0, 1)\nfunction_select_bus.wire_values = 0, 1, 0, 1\nassert output_bus.wire_values == (1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0,\n    1, 0)\nfunction_select_bus.wire_values = 0, 1, 1, 0\nassert output_bus.wire_values == (0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1,\n    1, 1)\nfunction_select_bus.wire_values = 0, 1, 1, 1\nassert output_bus.wire_values == (1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0,\n    0, 0)\nfunction_select_bus.wire_values = 1, 0, 0, 0\nassert output_bus.wire_values == (0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0,\n    1, 0)\nfunction_select_bus.wire_values = 1, 0, 0, 1\nassert output_bus.wire_values == (1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1,\n    0, 1)\nfunction_select_bus.wire_values = 1, 0, 1, 0\nassert output_bus.wire_values == (0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1,\n    0, 0)\nassert carry_out.value == 0\nfunction_select_bus.wire_values = 1, 0, 1, 1\nassert output_bus.wire_values == (1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0,\n    1, 1)\nfunction_select_bus.wire_values = 1, 1, 0, 0\nassert output_bus.wire_values == (1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0,\n    1, 0)\nassert overflow.value == 0\nfunction_select_bus.wire_values = 1, 1, 0, 1\nassert output_bus.wire_values == (0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1,\n    0, 1)\nfunction_select_bus.wire_values = 1, 1, 1, 0\nassert output_bus.wire_values == (0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0)\nfunction_select_bus.wire_values = 1, 1, 1, 1\nassert output_bus.wire_values == (1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n    1, 1)\nprint(a.__doc__)\nprint(a)\na(a_bus=(0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1), b_bus=(0, 1, 0, 1,\n    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1), function_select_bus=(1, 0, 1, 0),\n    overflow=None, carry_out=None, output_bus=None)\nassert output_bus.wire_values == (0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1,\n    0, 0)\nassert carry_out.value == 0\n"
}