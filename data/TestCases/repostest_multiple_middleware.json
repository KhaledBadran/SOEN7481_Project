{
    "functionName": "test_multiple_middleware",
    "className": null,
    "fileName": "/RobertoPrevato_&_BlackSheep/tests_&_client_&_test_middlewares.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "fake_pools = FakePools([Response(200, None, TextContent('Hello, World!'))])\nsteps = []\nasync def middleware_one(request, next_handler):\n    steps.append(1)\n    response = await next_handler(request)\n    steps.append(2)\n    return response\nasync def middleware_two(request, next_handler):\n    steps.append(3)\n    response = await next_handler(request)\n    steps.append(4)\n    return response\nasync def middleware_three(request, next_handler):\n    steps.append(5)\n    response = await next_handler(request)\n    steps.append(6)\n    return response\nasync with ClientSession(base_url=b'http://localhost:8080', pools=\n    fake_pools, middlewares=[middleware_one, middleware_two, middleware_three]\n    ) as client:\n    response = await client.get(b'/')\n    assert steps == [1, 3, 5, 6, 4, 2]\n    assert response.status == 200\n    text = await response.text()\n    assert text == 'Hello, World!'\npytest.mark.asyncio"
}