{
    "functionName": "test_cli",
    "className": "TestGenerators",
    "fileName": "/alejoe91_&_MEArec/MEArec_&_tests_&_test_generators.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "default_config, mearec_home = mr.get_default_config()\nrunner = CliRunner()\nresult = runner.invoke(cli, ['--help'])\nassert result.exit_code == 0\nresult = runner.invoke(cli, ['default-config'])\nassert result.exit_code == 0\nresult = runner.invoke(cli, ['available-probes'])\nassert result.exit_code == 0\nresult = runner.invoke(cli, ['gen-templates', '-n', '2', '--no-parallel',\n    '--recompile', '-r', '3drot', '-nc', '2', '-ov', '20', '-s', '1',\n    '-mind', '10', '-maxd', '100', '-drst', '10', '-v'])\nassert result.exit_code == 0\nresult = runner.invoke(cli, ['gen-recordings', '-t', self.test_dir +\n    '/templates.h5', '-ne', '2', '-ni', '1', '-fe', '5', '-fi', '15', '-se',\n    '1', '-si', '1', '-mr', '0.2', '-rp', '2', '-p', 'poisson', '-md', '1',\n    '-mina', '10', '-maxa', '1000', '--fs', '32000', '-sr', '0', '-sj', '1',\n    '-nl', '10', '-m', 'none', '-chd', '0', '-nseed', '10', '-hd', '30',\n    '-cn', '-cp', '500', '-cq', '1', '-rnf', '1', '-stseed', '100',\n    '-tseed', '10', '--filter', '-fc', '500', '-fo', '3', '--overlap',\n    '-ot', '0.8', '--extract-wf', '-angt', '15', '-drvel', '10', '-tsd',\n    '1', '-v'])\nprint(result.output)\nassert result.exit_code == 0\nresult = runner.invoke(cli, ['set-templates-params', '.'])\nassert result.exit_code == 0\nresult = runner.invoke(cli, ['set-templates-params', default_config[\n    'templates_params']])\nassert result.exit_code == 0\nresult = runner.invoke(cli, ['set-recordings-params', '.'])\nassert result.exit_code == 0\nresult = runner.invoke(cli, ['set-recordings-params', default_config[\n    'recordings_params']])\nassert result.exit_code == 0\nresult = runner.invoke(cli, ['set-cell-models-folder', './cell_models'])\nassert result.exit_code == 0\nresult = runner.invoke(cli, ['set-cell-models-folder', default_config[\n    'cell_models_folder']])\nassert result.exit_code == 0\nresult = runner.invoke(cli, ['set-templates-folder', '.'])\nassert result.exit_code == 0\nresult = runner.invoke(cli, ['set-recordings-folder', '.'])\nassert result.exit_code == 0\nresult = runner.invoke(cli, ['set-templates-folder', './templates', '--create']\n    )\nassert result.exit_code == 0\nresult = runner.invoke(cli, ['set-recordings-folder', './recordings',\n    '--create'])\nassert result.exit_code == 0\nresult = runner.invoke(cli, ['set-templates-folder', default_config[\n    'templates_folder']])\nassert result.exit_code == 0\nresult = runner.invoke(cli, ['set-recordings-folder', default_config[\n    'recordings_folder']])\nassert result.exit_code == 0\n"
}