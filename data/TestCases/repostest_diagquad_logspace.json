{
    "functionName": "test_diagquad_logspace",
    "className": null,
    "fileName": "/GPflow_&_GPflow/tests_&_gpflow_&_quadrature_&_test_quadrature.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "alpha = 2.5\nnum_gauss_hermite_points = 25\nquad = quadrature.ndiagquad(lambda *X: X[0] + alpha * X[1],\n    num_gauss_hermite_points, [mu1, mu2], [var1, var2], logspace=True)\nexpected = mu1 + var1 / 2 + alpha * mu2 + alpha ** 2 * var2 / 2\nassert_allclose(quad, expected)\npytest.mark.parametrize('mu1', [np.array([1.0, 1.3])])pytest.mark.parametrize('var1', [np.array([3.0, 3.5])])pytest.mark.parametrize('mu2', [np.array([-2.0, 0.3])])pytest.mark.parametrize('var2', [np.array([4.0, 4.2])])"
}