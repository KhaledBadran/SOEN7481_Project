{
    "functionName": "test_artificial_volume_profile",
    "className": "TestPressureRiseProfile",
    "fileName": "/kyleniemeyer_&_PyTeCK/pyteck_&_tests_&_test_simulation.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        \"\"\"\ninit_temp = 300.0\ninit_pressure = 1.0 * ct.one_atm\npressure_rise = 0.05\nend_time = 10.0\nvelocity_profile = simulation.PressureRiseProfile('air.xml', init_temp,\n    init_pressure, 'N2:1.0', pressure_rise, end_time)\n[times, pressures] = simulation.sample_rising_pressure(end_time,\n    init_pressure, 2000.0, pressure_rise)\ngas = ct.Solution('air.xml')\ngas.TPX = init_temp, init_pressure, 'N2:1.0'\ninit_entropy = gas.entropy_mass\nvelocities = np.zeros(pressures.size)\ndvolumes = np.zeros(pressures.size)\nfor i in range(pressures.size):\n    gas.SP = init_entropy, pressures[i]\n    gamma = gas.cp / gas.cv\n    velocities[i] = velocity_profile(times[i])\n    dvolumes[i] = -1.0 / gamma * pressure_rise * (pressures[i] / init_pressure\n        ) ** (-1.0 / gamma - 1.0)\nassert np.allclose(velocities, dvolumes, rtol=0.001)\n"
}