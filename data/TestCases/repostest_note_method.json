{
    "functionName": "test_note_method",
    "className": "TestIntervalClass",
    "fileName": "/ScottMorse_&_PyMusician/pymusician_&_test_&_test_interval.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "A5 = pm.Note('A', 5)\nB2 = pm.Note('B', 2)\nBb3 = pm.Note('Bb', 3)\nAs4 = pm.Note('A#', 4)\nG5 = pm.Note('G', 5)\nGb2 = pm.Note('Gb', 2)\nE6 = pm.Note('E', 6)\nDbb2 = pm.Note('Dbb', 2)\nDss3 = pm.Note('D##', 3)\nintvl1 = pm.Interval('p1')\nintvl2 = pm.Interval('a1')\nintvl3 = pm.Interval('m2')\nintvl4 = pm.Interval('M2')\nintvl5 = pm.Interval('M3')\nintvl6 = pm.Interval('P4')\nintvl7 = pm.Interval('D5')\nintvl8 = pm.Interval('D5', 1)\nintvl9 = pm.Interval('p1', 2)\nintvl10 = pm.Interval('A5')\nintvl11 = pm.Interval('M7')\nintvl12 = pm.Interval('d7')\nintvl13 = pm.Interval('a3')\nintvl14 = pm.Interval('a..4')\nintvl15 = pm.Interval('d...5', 2)\nintvl16 = pm.Interval('d.2')\nintvl17 = pm.Interval('m3', 1)\nintvl18 = pm.Interval('m3', 2)\nintvl19 = pm.Interval('M7', 1)\nintvl20 = pm.Interval('M7', 3)\nintvl21 = pm.Interval('p1', 1)\nself.assertEqual((A5 + intvl1).name, 'A')\nself.assertEqual((A5 + intvl2).name, 'A#')\nself.assertEqual((B2 + intvl19).name, 'A#')\nself.assertEqual((B2 + intvl19).octave, 4)\nself.assertEqual((E6 + intvl15).name, 'Bbbbb')\nself.assertEqual((Dss3 + intvl16).name, 'Eb')\nself.assertEqual((G5 + intvl20).name, 'F#')\nself.assertEqual((G5 + intvl20).octave, 9)\nself.assertEqual((A5 - intvl1).name, 'A')\nself.assertEqual((A5 - intvl2).name, 'Ab')\nself.assertEqual((B2 - intvl19).name, 'C')\nself.assertEqual((B2 - intvl19).octave, 1)\nself.assertEqual((E6 - intvl15).name, 'A####')\nself.assertEqual((Dss3 - intvl16).name, 'C#####')\nself.assertEqual((G5 - intvl20).name, 'Ab')\nself.assertEqual((G5 - intvl20).octave, 1)\n"
}