{
    "functionName": "test__output_all_arrays",
    "className": "TestLoadCIData",
    "fileName": "/Jammy2211_&_PyAutoCTI/test_&_unit_&_charge_injection_&_test_ci_data.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "data = ci_data.ci_data_from_fits(frame_geometry=MockGeometry(), ci_pattern=\n    MockPattern(), image_path=test_data_dir + '3x3_ones.fits', image_hdu=0,\n    noise_map_path=test_data_dir + '3x3_twos.fits', noise_map_hdu=0,\n    ci_pre_cti_path=test_data_dir + '3x3_threes.fits', ci_pre_cti_hdu=0,\n    cosmic_ray_image_path=test_data_dir + '3x3_fours.fits',\n    cosmic_ray_image_hdu=0)\noutput_data_dir = '{}/../test_files/array/output_test/'.format(os.path.\n    dirname(os.path.realpath(__file__)))\nif os.path.exists(output_data_dir):\n    shutil.rmtree(output_data_dir)\nos.makedirs(output_data_dir)\nci_data.output_ci_data_to_fits(ci_data=data, image_path=output_data_dir +\n    'image.fits', noise_map_path=output_data_dir + 'noise_map.fits',\n    ci_pre_cti_path=output_data_dir + 'ci_pre_cti.fits',\n    cosmic_ray_image_path=output_data_dir + 'cosmic_ray_image.fits')\ndata = ci_data.ci_data_from_fits(frame_geometry=MockGeometry(), ci_pattern=\n    MockPattern(), image_path=output_data_dir + 'image.fits', image_hdu=0,\n    noise_map_path=output_data_dir + 'noise_map.fits', noise_map_hdu=0,\n    ci_pre_cti_path=output_data_dir + 'ci_pre_cti.fits', ci_pre_cti_hdu=0,\n    cosmic_ray_image_path=output_data_dir + 'cosmic_ray_image.fits',\n    cosmic_ray_image_hdu=0)\nassert (data.image == np.ones((3, 3))).all()\nassert (data.noise_map == 2.0 * np.ones((3, 3))).all()\nassert (data.ci_pre_cti == 3.0 * np.ones((3, 3))).all()\nassert (data.cosmic_ray_image == 4.0 * np.ones((3, 3))).all()\n"
}