{
    "functionName": "to_dict",
    "className": "MRZ",
    "fileName": "/konstantint_&_PassportEye/passporteye_&_mrz_&_text.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"Converts this object to an (ordered) dictionary of field-value pairs.\n\n        >>> m = MRZ(['IDAUT10000999<6<<<<<<<<<<<<<<<', '7109094F1112315AUT<<<<<<<<<<<6', 'MUSTERFRAU<<ISOLDE<<<<<<<<<<<<']).to_dict()\n        >>> assert m['type'] == 'ID' and m['country'] == 'AUT' and m['number'] == '10000999<'\n        >>> assert m['valid_number'] and m['valid_date_of_birth'] and m['valid_expiration_date'] and not m['valid_composite']\n        \"\"\"\nresult = OrderedDict()\nresult['mrz_type'] = self.mrz_type\nresult['valid_score'] = self.valid_score\nif self.mrz_type is not None:\n    result['type'] = self.type\n    result['country'] = self.country\n    result['number'] = self.number\n    result['date_of_birth'] = self.date_of_birth\n    result['expiration_date'] = self.expiration_date\n    result['nationality'] = self.nationality\n    result['sex'] = self.sex\n    result['names'] = self.names\n    result['surname'] = self.surname\n    if self.mrz_type == 'TD1':\n        result['optional1'] = self.optional1\n        result['optional2'] = self.optional2\n    elif self.mrz_type in ['TD2', 'MRVA', 'MRVB']:\n        result['optional1'] = self.optional1\n    else:\n        result['personal_number'] = self.personal_number\n    result['check_number'] = self.check_number\n    result['check_date_of_birth'] = self.check_date_of_birth\n    result['check_expiration_date'] = self.check_expiration_date\n    if self.mrz_type not in ['MRVA', 'MRVB']:\n        result['check_composite'] = self.check_composite\n    if self.mrz_type == 'TD3':\n        result['check_personal_number'] = self.check_personal_number\n    result['valid_number'] = self.valid_check_digits[0]\n    result['valid_date_of_birth'] = self.valid_check_digits[1]\n    result['valid_expiration_date'] = self.valid_check_digits[2]\n    if self.mrz_type not in ['MRVA', 'MRVB']:\n        result['valid_composite'] = self.valid_check_digits[3]\n    if self.mrz_type == 'TD3':\n        result['valid_personal_number'] = self.valid_check_digits[4]\n    if 'method' in self.aux:\n        result['method'] = self.aux['method']\nreturn result\n"
}