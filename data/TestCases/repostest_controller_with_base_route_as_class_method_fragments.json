{
    "functionName": "test_controller_with_base_route_as_class_method_fragments",
    "className": null,
    "fileName": "/RobertoPrevato_&_BlackSheep/tests_&_test_controllers.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "app = FakeApplication()\napp.controllers_router = RoutesRegistry()\nget = app.controllers_router.get\nclass Api(Controller):\n\n    @classmethod\n    def route(cls):\n        return '/api/' + cls.__name__.lower()\nclass Home(Api):\n\n    def greet(self):\n        return 'Hello World'\n\n    @get()\n    async def index(self, request: Request):\n        assert isinstance(self, Home)\n        return text(self.greet())\nclass Health(Api):\n\n    @get()\n    def alive(self):\n        return text('Good')\napp.setup_controllers()\nawait app(get_example_scope('GET', '/api/home'), MockReceive(), MockSend())\nassert app.response.status == 200\nbody = await app.response.text()\nassert body == 'Hello World'\nfor value in {'/api/Health', '/api/health'}:\n    await app(get_example_scope('GET', value), MockReceive(), MockSend())\n    assert app.response.status == 200\n    body = await app.response.text()\n    assert body == 'Good'\npytest.mark.asyncio"
}