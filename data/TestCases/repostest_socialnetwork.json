{
    "functionName": "test_socialnetwork",
    "className": "test_SocialNetwork",
    "fileName": "/stephenhky_&_GraphFlow/test_&_test_socialnetworks.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "nodes = ['Stephen', 'John', 'Mary', 'Joshua', 'Abigail', 'Andrew', 'Jacob',\n    'Melanie', 'Shirley', 'Zoe', 'Wallace', 'Susan', 'Urban']\nedges = [('Stephen', 'Jacob', 1), ('Jacob', 'Stephen', 1), ('Stephen',\n    'Abigail', 1), ('Abigail', 'Stephen', 1), ('Stephen', 'Andrew', 1), (\n    'Andrew', 'Stephen', 1), ('Andrew', 'Abigail', 1), ('Abigail', 'Andrew',\n    1), ('John', 'Stephen', 1), ('Andrew', 'John', 0.4), ('John', 'Andrew',\n    0.6), ('Abigail', 'John', 1), ('John', 'Abigail', 1), ('John', 'Mary', \n    1), ('Mary', 'John', 0.9), ('John', 'Joshua', 1), ('Joshua', 'John', 1),\n    ('John', 'Jacob', 1), ('Jacob', 'John', 1), ('Abigail', 'Jacob', 1), (\n    'Jacob', 'Abigail', 1), ('Jacob', 'Andrew', 1), ('Andrew', 'Jacob', 1),\n    ('Shirley', 'Stephen', 1), ('Stephen', 'Shirley', 1), ('Melanie',\n    'Stephen', 1), ('Stephen', 'Melanie', 1), ('Melanie', 'Shirley', 1), (\n    'Shirley', 'Urban', 0.2), ('Urban', 'Shirley', 0.21), ('Susan',\n    'Shirley', 1), ('Shirley', 'Susan', 1), ('Shirley', 'Zoe', 1), ('Zoe',\n    'Shirley', 1), ('Shirley', 'Wallace', 1), ('Wallace', 'Shirley', 1), (\n    'Zoe', 'Wallace', 1)]\nwn1 = SocialNetworkSimVoltage(nodes=nodes, edges=edges,\n    precalculated_distance=True)\nTHIS_DIR = os.path.dirname(os.path.abspath(__file__))\ntestresults = pd.read_csv(os.path.join(THIS_DIR, 'socialnetworkranks.csv'),\n    header=None, names=['name1', 'name2', 'resistance'], dtype={'name1':\n    str, 'name2': str, 'resistance': np.float})\nfor _, row in testresults.iterrows():\n    name1 = row['name1']\n    name2 = row['name2']\n    resistance = row['resistance']\n    self.assertAlmostEqual(wn1.getResistance(name1, name2), resistance,\n        places=3)\n    print('%s\\t%s : %.4f passed.' % (name1, name2, resistance))\n"
}