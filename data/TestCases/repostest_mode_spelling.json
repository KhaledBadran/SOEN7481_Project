{
    "functionName": "test_mode_spelling",
    "className": "TestModeClass",
    "fileName": "/ScottMorse_&_PyMusician/pymusician_&_test_&_test_mode.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "Amaj = pm.Mode('A', 'major')\nself.assertEqual(Amaj.name, 'A major')\nself.assertEqual(Amaj.spelling[0].name, 'A')\nself.assertEqual(Amaj.spelling[1].name, 'B')\nself.assertEqual(Amaj.spelling[2].name, 'C#')\nself.assertEqual(Amaj.spelling[3].name, 'D')\nself.assertEqual(Amaj.spelling[4].name, 'E')\nself.assertEqual(Amaj.spelling[5].name, 'F#')\nself.assertEqual(Amaj.spelling[6].name, 'G#')\nGmm = pm.Mode('G', 'melodic minor')\nself.assertEqual(Gmm.spelling[0].name, 'G')\nself.assertEqual(Gmm.spelling[1].name, 'A')\nself.assertEqual(Gmm.spelling[2].name, 'Bb')\nself.assertEqual(Gmm.spelling[3].name, 'C')\nself.assertEqual(Gmm.spelling[4].name, 'D')\nself.assertEqual(Gmm.spelling[5].name, 'E')\nself.assertEqual(Gmm.spelling[6].name, 'F#')\nEhm = pm.Mode('E', 'harmonic minor')\nself.assertEqual(Ehm.spelling[0].name, 'E')\nself.assertEqual(Ehm.spelling[1].name, 'F#')\nself.assertEqual(Ehm.spelling[2].name, 'G')\nself.assertEqual(Ehm.spelling[3].name, 'A')\nself.assertEqual(Ehm.spelling[4].name, 'B')\nself.assertEqual(Ehm.spelling[5].name, 'C')\nself.assertEqual(Ehm.spelling[6].name, 'D#')\nEspent = pm.Mode('E#', 'major pentatonic')\nself.assertEqual(Espent.spelling[0].name, 'E#')\nself.assertEqual(Espent.spelling[1].name, 'F##')\nself.assertEqual(Espent.spelling[2].name, 'G##')\nself.assertEqual(Espent.spelling[3].name, 'B#')\nself.assertEqual(Espent.spelling[4].name, 'C##')\nBlydom = pm.Mode('B', 'lydian dominant')\nself.assertEqual(Blydom.spelling[0].name, 'B')\nself.assertEqual(Blydom.spelling[1].name, 'C#')\nself.assertEqual(Blydom.spelling[2].name, 'D#')\nself.assertEqual(Blydom.spelling[3].name, 'E#')\nself.assertEqual(Blydom.spelling[4].name, 'F#')\nself.assertEqual(Blydom.spelling[5].name, 'G#')\nself.assertEqual(Blydom.spelling[6].name, 'A')\nCaug = pm.Mode('C', 'augmented')\nself.assertEqual(Caug.spelling[0].name, 'C')\nself.assertEqual(Caug.spelling[1].name, 'D#')\nself.assertEqual(Caug.spelling[2].name, 'E')\nself.assertEqual(Caug.spelling[3].name, 'G')\nself.assertEqual(Caug.spelling[4].name, 'G#')\nself.assertEqual(Caug.spelling[5].name, 'B')\nDsmin = pm.Mode('D#', 'minor')\nself.assertEqual(Dsmin.spelling[0].name, 'D#')\nself.assertEqual(Dsmin.spelling[1].name, 'E#')\nself.assertEqual(Dsmin.spelling[2].name, 'F#')\nself.assertEqual(Dsmin.spelling[3].name, 'G#')\nself.assertEqual(Dsmin.spelling[4].name, 'A#')\nself.assertEqual(Dsmin.spelling[5].name, 'B')\nself.assertEqual(Dsmin.spelling[6].name, 'C#')\nEloc = pm.Mode('E', 'locrian')\nself.assertEqual(Eloc.spelling[0].name, 'E')\nself.assertEqual(Eloc.spelling[1].name, 'F')\nself.assertEqual(Eloc.spelling[2].name, 'G')\nself.assertEqual(Eloc.spelling[3].name, 'A')\nself.assertEqual(Eloc.spelling[4].name, 'Bb')\nself.assertEqual(Eloc.spelling[5].name, 'C')\nself.assertEqual(Eloc.spelling[6].name, 'D')\nFbblues = pm.Mode('Fb', 'blues')\nself.assertEqual(Fbblues.spelling[0].name, 'Fb')\nself.assertEqual(Fbblues.spelling[1].name, 'Abb')\nself.assertEqual(Fbblues.spelling[2].name, 'Bbb')\nself.assertEqual(Fbblues.spelling[3].name, 'Bb')\nself.assertEqual(Fbblues.spelling[4].name, 'Cb')\nself.assertEqual(Fbblues.spelling[5].name, 'Ebb')\n"
}