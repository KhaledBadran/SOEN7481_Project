{
    "functionName": "test__parallel_serial_phase__if_trap_lifetime_not_ascending__raises_exception",
    "className": "TestPhase",
    "fileName": "/Jammy2211_&_PyAutoCTI/test_&_unit_&_pipeline_&_test_phase.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "phase = ph.ParallelSerialPhase(phase_name='test_phase', optimizer_class=NLO)\nanalysis = phase.make_analysis(ci_datas=[ci_data], cti_settings=cti_settings)\nparallel_species_0 = arctic_params.Species(trap_density=0.0, trap_lifetime=1.0)\nparallel_species_1 = arctic_params.Species(trap_density=0.0, trap_lifetime=2.0)\nserial_species_0 = arctic_params.Species(trap_density=0.0, trap_lifetime=1.0)\nserial_species_1 = arctic_params.Species(trap_density=0.0, trap_lifetime=2.0)\ncti_params = arctic_params.ArcticParams(parallel_species=[\n    parallel_species_0, parallel_species_1], serial_species=[\n    serial_species_0, serial_species_1])\nanalysis.check_trap_lifetimes_are_ascending(cti_params=cti_params)\nparallel_species_0 = arctic_params.Species(trap_density=0.0, trap_lifetime=1.0)\nparallel_species_1 = arctic_params.Species(trap_density=0.0, trap_lifetime=2.0)\nparallel_species_2 = arctic_params.Species(trap_density=0.0, trap_lifetime=3.0)\nserial_species_0 = arctic_params.Species(trap_density=0.0, trap_lifetime=1.0)\nserial_species_1 = arctic_params.Species(trap_density=0.0, trap_lifetime=2.0)\nserial_species_2 = arctic_params.Species(trap_density=0.0, trap_lifetime=3.0)\ncti_params = arctic_params.ArcticParams(parallel_species=[\n    parallel_species_0, parallel_species_1, parallel_species_2],\n    serial_species=[serial_species_0, serial_species_1, serial_species_2])\nanalysis.check_trap_lifetimes_are_ascending(cti_params=cti_params)\nparallel_species_0 = arctic_params.Species(trap_density=0.0, trap_lifetime=2.0)\nparallel_species_1 = arctic_params.Species(trap_density=0.0, trap_lifetime=1.0)\nserial_species_0 = arctic_params.Species(trap_density=0.0, trap_lifetime=1.0)\nserial_species_1 = arctic_params.Species(trap_density=0.0, trap_lifetime=2.0)\ncti_params = arctic_params.ArcticParams(parallel_species=[\n    parallel_species_0, parallel_species_1], serial_species=[\n    serial_species_0, serial_species_1])\nwith pytest.raises(exc.PriorException):\n    analysis.check_trap_lifetimes_are_ascending(cti_params=cti_params)\nparallel_species_0 = arctic_params.Species(trap_density=0.0, trap_lifetime=1.0)\nparallel_species_1 = arctic_params.Species(trap_density=0.0, trap_lifetime=2.0)\nserial_species_0 = arctic_params.Species(trap_density=0.0, trap_lifetime=2.0)\nserial_species_1 = arctic_params.Species(trap_density=0.0, trap_lifetime=1.0)\ncti_params = arctic_params.ArcticParams(parallel_species=[\n    parallel_species_0, parallel_species_1], serial_species=[\n    serial_species_0, serial_species_1])\nwith pytest.raises(exc.PriorException):\n    analysis.check_trap_lifetimes_are_ascending(cti_params=cti_params)\n"
}