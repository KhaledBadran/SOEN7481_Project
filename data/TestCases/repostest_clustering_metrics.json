{
    "functionName": "test_clustering_metrics",
    "className": null,
    "fileName": "/FreeDiscovery_&_FreeDiscovery/freediscovery_&_server_&_tests_&_test_metrics.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "metrics = list(metrics)\nurl = V01 + '/metrics/clustering'\nlabels_true = [0, 0, 1, 2]\nlabels_pred = [0, 0, 1, 1]\npars = {'labels_true': labels_true, 'labels_pred': labels_pred, 'metrics':\n    metrics}\ndata = app.post_check(url, json=pars)\nassert sorted(data.keys()) == sorted(metrics)\nif 'adjusted_rand' in metrics:\n    assert_almost_equal(data['adjusted_rand'], 0.5714, decimal=4)\nif 'adjusted_mutual_info' in metrics:\n    assert_almost_equal(data['adjusted_mutual_info'], 0.4)\nif 'v_measure' in metrics:\n    assert_almost_equal(data['v_measure'], 0.8)\npytest.mark.parametrize('metrics', itertools.combinations(['adjusted_rand',\n    'adjusted_mutual_info', 'v_measure'], 2))"
}