{
    "functionName": "generateCAMEAXML",
    "className": "Instrument",
    "fileName": "/jakob-lass_&_MJOLNIR/MJOLNIR_&_Geometry_&_Instrument.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"Generate CAMEA XML file to be used as instrument file.\n\n        Args:\n\n            - fileName: Name of file to be saved (required)\n\n        \"\"\"\nang_1 = np.zeros((7,))\nang_2 = np.zeros((6,))\nang_1[6] = -3.3\nang_1[5] = -2.2\nang_1[4] = -1.1\nang_1[3] = 0\nang_1[2] = 1.1\nang_1[1] = 2.2\nang_1[0] = 3.3\nang_2[5] = -2.75\nang_2[4] = -1.65\nang_2[3] = -0.55\nang_2[2] = 0.55\nang_2[1] = 1.65\nang_2[0] = 2.75\nz_an = np.zeros((8,))\nz_an[0] = 0.93\nz_an[1] = 0.9939\nz_an[2] = 1.0569\nz_an[3] = 1.1195\nz_an[4] = 1.1827\nz_an[5] = 1.2456\nz_an[6] = 1.3098\nz_an[7] = 1.3747\nH1 = 0.7\nH2 = 0.71\ndet_cen = 1.2\nwedges = 8\noffset = 0.0\nstring = \"\"\"<?xml version='1.0'?>\n<Instrument Initialized='False' Author='Jakob Lass' Date ='16/03/18' position='0.0,0.0,0.0'>\n\"\"\"\nfor W in (-np.arange(wedges)):\n    string += \"\\t<Wedge position='0.0,0.0,0.0' concept='ManyToMany'>\\n\"\n    Anaposx = -np.sin((W * 8.0 + offset) * np.pi / 180) * z_an\n    Anaposy = np.cos((W * 8.0 + offset) * np.pi / 180) * z_an\n    for i in range(len(z_an)):\n        XX = Anaposx[i] / (np.sqrt(2) * z_an[i])\n        YY = Anaposy[i] / (np.sqrt(2) * z_an[i])\n        string += \"\\t\\t<FlatAnalyser position='\" + str(Anaposx[i]) + ',' + str(Anaposy[i]) + \",0.0' direction='\" + str(YY) + ',' + str(XX) + \"\"\",0.0' d_spacing='3.354' mosaicity='60' width='0.05' height='0.1'></FlatAnalyser>\n\"\"\"\n    detx_1 = -np.sin((ang_1 + W * 8.0 + offset) * np.pi / 180) * det_cen\n    detz_1 = np.cos((ang_1 + W * 8.0 + offset) * np.pi / 180) * det_cen\n    detx_2 = -np.sin((ang_2 + W * 8.0 + offset) * np.pi / 180) * det_cen\n    detz_2 = np.cos((ang_2 + W * 8.0 + offset) * np.pi / 180) * det_cen\n    for i in range(7):\n        string += \"\\t\\t<TubeDetector1D position='\" + str(detx_1[i]) + ',' + str(detz_1[i]) + ',' + str(H2 if np.mod(W, 2) else H1) + \"' direction='\" + str(detx_1[i]) + ',' + str(detz_1[i]) + \"\"\",0.0' pixels='1024' length='1' diameter='0.02' split='0,189, 298, 404, 510, 618, 726, 837,1024'></TubeDetector1D>\n\"\"\"\n        if i < 6:\n            string += \"\\t\\t<TubeDetector1D position='\" + str(detx_2[i]) + ',' + str(detz_2[i]) + ',' + str(H1 if np.mod(W, 2) else H2) + \"' direction='\" + str(detx_2[i]) + ',' + str(detz_2[i]) + \"\"\",0.0' pixels='1024' length='1' diameter='0.02' split='0,189, 298, 404, 510, 618, 726, 837,1024'></TubeDetector1D>\n\"\"\"\n    string += '\\t</Wedge>\\n'\nstring += '</Instrument>'\nif fileName.split('.')[-1] != 'xml':\n    fileName += '.xml'\nwith open(fileName, 'w') as f:\n    f.write(string)\n"
}