{
    "functionName": "test_matching_tests",
    "className": "RunfilesTest",
    "fileName": "/fabioz_&_PyDev.Debugger/tests_runfiles_&_test_runfiles.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "self._setup_scenario(self.file_dir, None, ['StillYetAnotherSampleTest'])\nfiltered_tests = self.MyTestRunner.filter_tests(self.all_tests)\nself.assertEqual(1, self.count_suite(filtered_tests))\nself._setup_scenario(self.file_dir, None, ['SampleTest.test_xxxxxx1'])\nfiltered_tests = self.MyTestRunner.filter_tests(self.all_tests)\nself.assertEqual(1, self.count_suite(filtered_tests))\nself._setup_scenario(self.file_dir, None, ['SampleTest'])\nfiltered_tests = self.MyTestRunner.filter_tests(self.all_tests)\nself.assertEqual(8, self.count_suite(filtered_tests))\nself._setup_scenario(self.file_dir, None, ['AnotherSampleTest.todo_not_tested']\n    )\nfiltered_tests = self.MyTestRunner.filter_tests(self.all_tests)\nself.assertEqual(1, self.count_suite(filtered_tests))\nself._setup_scenario(self.file_dir, None, ['StillYetAnotherSampleTest',\n    'SampleTest.test_xxxxxx1'])\nfiltered_tests = self.MyTestRunner.filter_tests(self.all_tests)\nself.assertEqual(2, self.count_suite(filtered_tests))\nself._setup_scenario(self.file_dir, None, exclude_tests=['*'])\nfiltered_tests = self.MyTestRunner.filter_tests(self.all_tests)\nself.assertEqual(self.count_suite(filtered_tests), 0)\nself._setup_scenario(self.file_dir, None, exclude_tests=['*a*'])\nfiltered_tests = self.MyTestRunner.filter_tests(self.all_tests)\nself.assertEqual(self.count_suite(filtered_tests), 6)\nself.assertEqual(set(self.MyTestRunner.list_test_names(filtered_tests)),\n    set(['test_1', 'test_2', 'test_xxxxxx1', 'test_xxxxxx2', 'test_xxxxxx3',\n    'test_xxxxxx4']))\nself._setup_scenario(self.file_dir, None, exclude_tests=['*a*', '*x*'])\nfiltered_tests = self.MyTestRunner.filter_tests(self.all_tests)\nself.assertEqual(self.count_suite(filtered_tests), 2)\nself.assertEqual(set(self.MyTestRunner.list_test_names(filtered_tests)),\n    set(['test_1', 'test_2']))\nself._setup_scenario(self.file_dir, None, exclude_files=['simple_test.py'])\nfiltered_tests = self.MyTestRunner.filter_tests(self.all_tests)\nnames = self.MyTestRunner.list_test_names(filtered_tests)\nself.assertTrue('test_xxxxxx1' not in names, 'Found: %s' % (names,))\nself.assertEqual(set(['test_abc', 'test_non_unique_name',\n    'test_non_unique_name', 'test_asdf2', 'test_i_am_a_unique_test_name',\n    'test_non_unique_name', 'test_blank']), set(names))\nself._setup_scenario(self.file_dir, None, include_files=['simple3_test.py'])\nfiltered_tests = self.MyTestRunner.filter_tests(self.all_tests)\nnames = self.MyTestRunner.list_test_names(filtered_tests)\nself.assertTrue('test_xxxxxx1' not in names, 'Found: %s' % (names,))\nself.assertEqual(set(['test_non_unique_name']), set(names))\n"
}