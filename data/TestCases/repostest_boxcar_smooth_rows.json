{
    "functionName": "test_boxcar_smooth_rows",
    "className": null,
    "fileName": "/pypeit_&_PypeIt/pypeit_&_tests_&_test_utils.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "nrows = 31\nncols = 11\nnave = 11\nimg = np.zeros((nrows, ncols), dtype=float)\nimg[nrows // 2 - 3:nrows // 2 + 4, :] = 1.0\nimg[(0), :] = 1.0\nimg[(-1), :] = 1.0\ngpm = np.ones(img.shape, dtype=float)\ngpm[(nrows // 2), :] = 0.0\nsmimg = utils.boxcar_smooth_rows(img, nave)\nsmmimg = utils.boxcar_smooth_rows(img, nave, wgt=gpm)\n_img = np.zeros((nrows + 2 * nave, ncols), dtype=float)\n_img[nave:nrows + nave, :] = img\n_img[:nave, :] = img[(0), (None), :]\n_img[nrows + nave:, :] = img[(-1), (None), :]\n_gpm = np.zeros((nrows + 2 * nave, ncols), dtype=float)\n_gpm[nave:nrows + nave, :] = gpm\n_gpm[:nave, :] = gpm[(0), (None), :]\n_gpm[nrows + nave:, :] = gpm[(-1), (None), :]\n_wimg = _gpm * _img\nleft = np.arange(nrows + nave)\nright = np.arange(nrows + nave) + nave\npix = np.arange(nrows + 2 * nave)\navg = (pix[:, (None)] >= left[(None), :]) & (pix[:, (None)] < right[(None), :])\n_smimg = np.zeros(img.shape, dtype=float)\n_smmimg = np.zeros(img.shape, dtype=float)\nfor j in range(ncols):\n    m = np.sum(avg * _img[:, (None), (j)], axis=0) / nave\n    _smimg[:, (j)] = m[nave // 2 + 1:-nave // 2 + 1]\n    m = np.sum(avg * _wimg[:, (None), (j)], axis=0) / np.sum(avg * _gpm[:,\n        (None), (j)], axis=0)\n    _smmimg[:, (j)] = m[nave // 2 + 1:-nave // 2 + 1]\nassert np.allclose(smimg, _smimg\n    ), 'Difference with brute-force approach unmasked.'\nassert np.allclose(smmimg, _smmimg\n    ), 'Difference with brute-force approach masked.'\n"
}