{
    "functionName": "test_ok3d_uk3d_and_backends_produce_same_results",
    "className": null,
    "fileName": "/bsmurphy_&_PyKrige/tests_&_test_core.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "data, _, (uk_test_answer, gridx_ref, gridy_ref) = validation_ref\nok3d = OrdinaryKriging3D(data[:, (0)], data[:, (1)], np.zeros(data[:, (1)].\n    shape), data[:, (2)], variogram_model='exponential',\n    variogram_parameters=[500.0, 3000.0, 0.0])\nok_v, oss_v = ok3d.execute('grid', gridx_ref, gridy_ref, np.array([0.0]),\n    backend='vectorized')\nok_l, oss_l = ok3d.execute('grid', gridx_ref, gridy_ref, np.array([0.0]),\n    backend='loop')\nuk3d = UniversalKriging3D(data[:, (0)], data[:, (1)], np.zeros(data[:, (1)]\n    .shape), data[:, (2)], variogram_model='exponential',\n    variogram_parameters=[500.0, 3000.0, 0.0])\nuk_v, uss_v = uk3d.execute('grid', gridx_ref, gridy_ref, np.array([0.0]),\n    backend='vectorized')\nassert_allclose(uk_v, ok_v)\nuk_l, uss_l = uk3d.execute('grid', gridx_ref, gridy_ref, np.array([0.0]),\n    backend='loop')\nassert_allclose(uk_l, ok_l)\nassert_allclose(uk_l, uk_v)\nassert_allclose(uss_l, uss_v)\ndata = np.genfromtxt(os.path.join(BASE_DIR, 'test_data', 'test3d_data.txt'),\n    skip_header=1)\nok3d = OrdinaryKriging3D(data[:, (0)], data[:, (1)], data[:, (2)], data[:,\n    (3)], variogram_model='linear', variogram_parameters=[1.0, 0.1])\nok_v, oss_v = ok3d.execute('grid', np.arange(10.0), np.arange(10.0), np.\n    arange(10.0), backend='vectorized')\nok_l, oss_l = ok3d.execute('grid', np.arange(10.0), np.arange(10.0), np.\n    arange(10.0), backend='loop')\nuk3d = UniversalKriging3D(data[:, (0)], data[:, (1)], data[:, (2)], data[:,\n    (3)], variogram_model='linear', variogram_parameters=[1.0, 0.1])\nuk_v, uss_v = uk3d.execute('grid', np.arange(10.0), np.arange(10.0), np.\n    arange(10.0), backend='vectorized')\nassert_allclose(uk_v, ok_v)\nassert_allclose(uss_v, oss_v)\nuk_l, uss_l = uk3d.execute('grid', np.arange(10.0), np.arange(10.0), np.\n    arange(10.0), backend='loop')\nassert_allclose(uk_l, ok_l)\nassert_allclose(uss_l, oss_l)\nassert_allclose(uk_l, uk_v)\nassert_allclose(uss_l, uss_v)\n"
}