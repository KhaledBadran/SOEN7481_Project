{
    "functionName": "test_make_folder",
    "className": "TestFolder",
    "fileName": "/Keeper-Security_&_Commander/unit-tests_&_test_command_folder.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "params = get_synced_params()\ncmd = folder.FolderMakeCommand()\ndef is_user_folder(rq):\n    self.assertEqual(rq['command'], 'folder_add')\n    self.assertEqual(rq['folder_type'], 'user_folder')\ndef is_shared_folder(rq):\n    self.assertEqual(rq['command'], 'folder_add')\n    self.assertEqual(rq['folder_type'], 'shared_folder')\ndef is_shared_folder_folder(rq):\n    self.assertEqual(rq['command'], 'folder_add')\n    self.assertEqual(rq['folder_type'], 'shared_folder_folder')\nKeeperApiHelper.communicate_expect([is_user_folder])\ncmd.execute(params, user_folder=True, folder='New Folder')\nKeeperApiHelper.communicate_expect([is_shared_folder])\ncmd.execute(params, shared_folder=True, folder='New Shared Folder')\nwith mock.patch('keepercommander.commands.folder.user_choice') as mock_choice:\n    mock_choice.return_value = 'n'\n    KeeperApiHelper.communicate_expect([is_user_folder])\n    cmd.execute(params, folder='New Folder')\n    self.assertTrue(KeeperApiHelper.is_expect_empty())\n    mock_choice.return_value = 'y'\n    KeeperApiHelper.communicate_expect([is_shared_folder])\n    cmd.execute(params, folder='New Shared Folder')\n    self.assertTrue(KeeperApiHelper.is_expect_empty())\n    with mock.patch('builtins.input') as mock_input:\n        mock_choice.return_value = 'n'\n        mock_input.return_value = 'New Personal Folder'\n        KeeperApiHelper.communicate_expect([is_user_folder])\n        cmd.execute(params)\n        self.assertTrue(KeeperApiHelper.is_expect_empty())\nshared_folder = next(iter([x for x in params.folder_cache.values() if x.\n    type == 'shared_folder']))\nwith self.assertRaises(CommandError):\n    cmd.execute(params, folder=shared_folder.name)\nparams.current_folder = shared_folder.uid\nKeeperApiHelper.communicate_expect([is_shared_folder_folder])\ncmd.execute(params, folder='New SubFolder')\nself.assertTrue(KeeperApiHelper.is_expect_empty())\n"
}