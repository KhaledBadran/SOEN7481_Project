{
    "functionName": "test_modify_attribute_kmip_2_0_with_multivalued_no_attr_match",
    "className": "TestKmipEngine",
    "fileName": "/OpenKMIP_&_PyKMIP/kmip_&_tests_&_unit_&_services_&_server_&_test_engine.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Test that a KmipError is raised when attempting to modify an\n        non-existent attribute value.\n        \"\"\"\ne = engine.KmipEngine()\ne._protocol_version = contents.ProtocolVersion(2, 0)\ne._attribute_policy._version = e._protocol_version\ne._data_store = self.engine\ne._data_store_session_factory = self.session_factory\ne._data_session = e._data_store_session_factory()\ne._is_allowed_by_operation_policy = mock.Mock(return_value=True)\ne._logger = mock.MagicMock()\nsecret = pie_objects.SymmetricKey(enums.CryptographicAlgorithm.AES, 0, b'')\ne._data_session.add(secret)\ne._data_session.commit()\ne._data_session = e._data_store_session_factory()\nargs = payloads.ModifyAttributeRequestPayload(unique_identifier='1',\n    current_attribute=objects.CurrentAttribute(attribute=attributes.Name(\n    name_value=attributes.Name.NameValue('Invalid Key'))), new_attribute=\n    objects.NewAttribute(attribute=attributes.Name(name_value=attributes.\n    Name.NameValue('Modified Name')))),\nself.assertRaisesRegex(exceptions.KmipError,\n    'The specified current attribute could not be found on the managed object.'\n    , e._process_modify_attribute, *args)\n"
}