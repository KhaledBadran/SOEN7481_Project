{
    "functionName": "test__times",
    "className": "TestRecurrence",
    "fileName": "/kuzmoyev_&_Google-Calendar-Simple-API/tests_&_test_recurrence.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "def assert_times_equal(dts, rtimes):\n    self.assertEqual(t(dts), 'TZID={}:'.format(TEST_TIMEZONE) + rtimes)\nassert_times_equal((15 / Jun / 2020)[10:30], '20200615T103000')\nassert_times_equal([(15 / Jun / 2020)[10:30]], '20200615T103000')\nassert_times_equal([(15 / Jun / 2020)[10:30], (17 / Jul / 2020)[23:45]],\n    '20200615T103000,20200717T234500')\nassert_times_equal([(15 / Jun / 2020)[10:30], 17 / Jul / 2020],\n    '20200615T103000,20200717T000000')\nself.assertEqual(Recurrence.times((20 / Jul / 2020)[10:30], timezone=\n    TEST_TIMEZONE), 'RDATE;TZID=Asia/Shanghai:20200720T103000')\nself.assertEqual(Recurrence.times([(20 / Jul / 2020)[10:30], (21 / Jul / \n    2020)[11:30]], timezone=TEST_TIMEZONE),\n    'RDATE;TZID=Asia/Shanghai:20200720T103000,20200721T113000')\nself.assertEqual(Recurrence.exclude_times((20 / Jul / 2020)[10:35],\n    timezone=TEST_TIMEZONE), 'EXDATE;TZID=Asia/Shanghai:20200720T103500')\nself.assertEqual(Recurrence.exclude_times([(20 / Jul / 2020)[10:35], (21 /\n    Jul / 2020)[11:35]], timezone=TEST_TIMEZONE),\n    'EXDATE;TZID=Asia/Shanghai:20200720T103500,20200721T113500')\n"
}