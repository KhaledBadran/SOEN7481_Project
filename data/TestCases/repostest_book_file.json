{
    "functionName": "test_book_file",
    "className": "TestBook",
    "fileName": "/pyexcel_&_Flask-Excel/tests_&_test_database_io.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "data = {'category': [['id', 'name'], [1, 'News'], [2, 'Sports']], 'post': [\n    ['id', 'title', 'body', 'pub_date', 'category'], [1, 'Title A',\n    'formal', datetime(2015, 1, 20, 23, 28, 29), 'News'], [2, 'Title B',\n    'informal', datetime(2015, 1, 20, 23, 28, 30), 'Sports']]}\nfor upload_file_type in ['xls']:\n    with app.app_context():\n        db.drop_all()\n        db.create_all()\n    print('Uploading %s' % upload_file_type)\n    file_name = 'test.%s' % upload_file_type\n    io = pe.save_book_as(bookdict=data, dest_file_type=upload_file_type)\n    response = self.app.post('/upload/all', buffered=True, data={'file': (\n        io, file_name)}, content_type='multipart/form-data')\n    ret = pe.get_book_dict(file_type='xls', file_content=response.data)\n    self.assertEqual(data['category'], ret['category'])\n    sheet = pe.Sheet(data['post'], name_columns_by_row=0)\n    sheet.column.format('pub_date', lambda d: d.isoformat())\n    sheet2 = pe.Sheet(ret['post'], name_columns_by_row=0)\n    for key in sheet.colnames:\n        if key == 'category':\n            continue\n        assert sheet.column[key] == sheet2.column[key]\n    assert sheet2.column['category_id'] == [1, 2]\n"
}