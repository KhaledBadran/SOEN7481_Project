{
    "functionName": "create_test_cases",
    "className": null,
    "fileName": "/Neuraxio_&_Neuraxle/testing_&_test_pipeline_hashing.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "one_step_with_empty_hyperparameters = ResumablePipelineTestCase(tape=\n    TapeCallbackFunction(), steps=[create_callback_step('a', {}), (\n    'checkpoint', SomeCheckpointStep())], di=np.array([1, 2]), eo=np.array(\n    [1, 2]), expected_tape=['a'], expected_rehashed_ids=['0', '1'])\nsteps_with_empty_hyperparameters = ResumablePipelineTestCase(tape=\n    TapeCallbackFunction(), steps=[create_callback_step('a', {}),\n    create_callback_step('b', {}), ('checkpoint', SomeCheckpointStep())],\n    di=np.array([1, 2]), eo=np.array([1, 2]), expected_tape=['a', 'b'],\n    expected_rehashed_ids=['0', '1'])\nsteps_with_empty_hyperparameters_sub_pipeline = ResumablePipelineTestCase(tape\n    =TapeCallbackFunction(), steps=[create_callback_step('a', {}),\n    create_callback_step('b', {}), Pipeline([create_callback_step('c', {}),\n    create_callback_step('d', {}), ('checkpoint', SomeCheckpointStep())])],\n    di=np.array([1, 2]), eo=np.array([1, 2]), expected_tape=['a', 'b'],\n    expected_rehashed_ids=['0', '1'])\none_step_with_hyperparameters = ResumablePipelineTestCase(tape=\n    TapeCallbackFunction(), steps=[create_callback_step('a', {\n    'a__learning_rate': 1}), ('checkpoint', SomeCheckpointStep())], di=np.\n    array([1, 2]), eo=np.array([1, 2]), expected_tape=['a'],\n    expected_rehashed_ids=['0,1', '1,1'])\nsteps_with_hyperparameters = ResumablePipelineTestCase(tape=\n    TapeCallbackFunction(), steps=[create_callback_step('a', {\n    'a__learning_rate': 1}), create_callback_step('b', {'b__learning_rate':\n    2}), ('checkpoint', SomeCheckpointStep())], di=np.array([1, 2]), eo=np.\n    array([1, 2]), expected_tape=['a', 'b'], expected_rehashed_ids=['0,1,2',\n    '1,1,2'])\nsteps_with_hyperparameters_sub_pipeline = ResumablePipelineTestCase(tape=\n    TapeCallbackFunction(), steps=[create_callback_step('a', {\n    'a__learning_rate': 1}), create_callback_step('b', {'b__learning_rate':\n    2}), Pipeline([create_callback_step('c', {'c__learning_rate': 3}),\n    create_callback_step('d', {'d__learning_rate': 4}), ('checkpoint',\n    SomeCheckpointStep())])], di=np.array([1, 2]), eo=np.array([1, 2]),\n    expected_tape=['a', 'b'], expected_rehashed_ids=['0,1,2,3,4', '1,1,2,3,4'])\none_step_with_nested_hyperparameters = ResumablePipelineTestCase(tape=\n    TapeCallbackFunction(), steps=[create_callback_step('a', {'a': {\n    'learning_rate': 1}}), ('checkpoint', SomeCheckpointStep())], di=np.\n    array([1, 2]), eo=np.array([1, 2]), expected_tape=['a'],\n    expected_rehashed_ids=['0,1', '1,1'])\nsteps_with_nested_hyperparameters = ResumablePipelineTestCase(tape=\n    TapeCallbackFunction(), steps=[create_callback_step('a', {'a': {\n    'learning_rate': 1}}), create_callback_step('b', {'b': {'learning_rate':\n    2}}), ('checkpoint', SomeCheckpointStep())], di=np.array([1, 2]), eo=np\n    .array([1, 2]), expected_tape=['a', 'b'], expected_rehashed_ids=[\n    '0,1,2', '1,1,2'])\nsteps_with_nested_hyperparameters_sub_pipeline = ResumablePipelineTestCase(tape\n    =TapeCallbackFunction(), steps=[create_callback_step('a', {'a': {\n    'learning_rate': 1}}), create_callback_step('b', {'b': {'learning_rate':\n    2}}), Pipeline([create_callback_step('c', {'c': {'learning_rate': 3}}),\n    create_callback_step('d', {'d': {'learning_rate': 4}}), ('checkpoint',\n    SomeCheckpointStep())])], di=np.array([1, 2]), eo=np.array([1, 2]),\n    expected_tape=['a', 'b'], expected_rehashed_ids=['0,1,2,3,4', '1,1,2,3,4'])\nreturn [one_step_with_empty_hyperparameters,\n    steps_with_empty_hyperparameters,\n    steps_with_empty_hyperparameters_sub_pipeline,\n    one_step_with_hyperparameters, steps_with_hyperparameters,\n    steps_with_hyperparameters_sub_pipeline,\n    one_step_with_nested_hyperparameters, steps_with_nested_hyperparameters,\n    steps_with_nested_hyperparameters_sub_pipeline]\n"
}