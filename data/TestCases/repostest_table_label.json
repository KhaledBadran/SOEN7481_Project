{
    "functionName": "test_table_label",
    "className": "TestSimple",
    "fileName": "/intel-analytics_&_Bigdl/pyspark_&_test_&_bigdl_&_test_simple_integration.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Test for table as label in Sample.\n        For test purpose only.\n        \"\"\"\ndef gen_rand_sample():\n    features1 = np.random.uniform(0, 1, 3)\n    features2 = np.random.uniform(0, 1, 3)\n    label = np.array((2 * (features1 + features2)).sum() + 0.4)\n    return Sample.from_ndarray([features1, features2], [label, label])\ntraining_data = self.sc.parallelize(range(0, 50)).map(lambda i:\n    gen_rand_sample())\nmodel_test = Sequential()\nbranches = ParallelTable()\nbranch1 = Sequential().add(Linear(3, 1)).add(Tanh())\nbranch2 = Sequential().add(Linear(3, 1)).add(ReLU())\nbranches.add(branch1).add(branch2)\nmodel_test.add(branches)\noptimizer = Optimizer.create(model=model_test, training_set=training_data,\n    criterion=MarginRankingCriterion(), optim_method=SGD(), end_trigger=\n    MaxEpoch(5), batch_size=32)\noptimizer.optimize()\n"
}