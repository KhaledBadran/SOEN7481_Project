{
    "functionName": "test_project_api",
    "className": null,
    "fileName": "/AO-StreetArt_&_PyAesel/test_&_test_transaction.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "print('Testing Project API')\nprint('Create Project')\nproject = AeselProject()\nproject.name = 'test'\nproject.description = 'test description'\nproject.category = 'cat'\nproject.tags = ['demo']\ngroup = AeselSceneGroup()\ngroup.name = 'groupName'\ngroup.description = 'group description'\ngroup.category = 'cat2'\ngroup.scenes = ['1']\nproject.sceneGroups = [group]\nproject.assetCollectionIds = ['2']\nproj_crt_resp = None\ntry:\n    proj_crt_resp = transaction_client.create_project(project)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(proj_crt_resp)\nnew_key = proj_crt_resp['id']\nprint('Get Project')\nproj_get_resp = None\ntry:\n    proj_get_resp = transaction_client.get_project(new_key)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(proj_get_resp)\nprint('Update Project')\nproj_upd = AeselProject()\nproj_upd.category = 'cat3'\nproj_upd_resp = None\ntry:\n    proj_upd_resp = transaction_client.update_project(new_key, proj_upd)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(proj_upd_resp)\nprint('Query Projects')\nproj_query = AeselProject()\nproj_query.category = 'cat3'\nproj_query_resp = None\ntry:\n    proj_query_resp = transaction_client.project_query(proj_query)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(proj_query_resp)\nassert len(proj_query_resp) > 0\nprint('Add a new Scene Group')\nnew_scn_group = AeselSceneGroup()\nnew_scn_group.name = 'anotherTestGroup'\nnew_scn_group.description = 'this is a test group'\nnew_scn_group.category = 'test'\ntry:\n    transaction_client.add_scene_group(new_key, new_scn_group)\nexcept Exception as e:\n    print(e)\n    assert False\nprint('Update a Scene Group')\nnew_scn_group = AeselSceneGroup()\nnew_scn_group.description = 'a new test description'\nnew_scn_group.category = 'test2'\ntry:\n    transaction_client.update_scene_group(new_key, 'anotherTestGroup',\n        new_scn_group)\nexcept Exception as e:\n    print(e)\n    assert False\nprint('Add a Scene to a Scene Group')\ntry:\n    transaction_client.add_scene_to_scene_group(new_key, 'anotherTestGroup',\n        'testScene')\nexcept Exception as e:\n    print(e)\n    assert False\nprint('Remove a Scene from a Scene Group')\ntry:\n    transaction_client.remove_scene_from_scene_group(new_key,\n        'anotherTestGroup', 'testScene')\nexcept Exception as e:\n    print(e)\n    assert False\nprint('Remove a Scene Group')\ntry:\n    transaction_client.delete_scene_group(new_key, 'anotherTestGroup')\nexcept Exception as e:\n    print(e)\n    assert False\nprint('Delete Project')\nproj_del_resp = None\ntry:\n    proj_del_resp = transaction_client.delete_project(new_key)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(proj_del_resp)\n"
}