{
    "functionName": "test_float_value_int_arg",
    "className": null,
    "fileName": "/GIlunga_&_JSON-Configparser/tests_&_test_validations.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "if expected is not None:\n    assert expected == validations.validate_argument(value, typedef)\nelse:\n    with pytest.raises(TypeError):\n        validations.validate_argument(value, typedef)\npytest.mark.parametrize('value,typedef,expected', [(1.0, type_defaults.\n    TypeDefaultBounds('a', int), 1), (1.5, type_defaults.TypeDefaultBounds(\n    'b', int), None)])"
}