{
    "functionName": "test_reconstruct",
    "className": null,
    "fileName": "/apetri_&_LensTools/lenstools_&_tests_&_test_catalog.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "map_size = 3.5 * u.deg\nnpixel = 512\nsmooth = 0.1 * u.arcmin\nzbins = [(0.0, 0.5), (0.5, 0.7), (0.7, 0.9), (0.9, 1.2), (1.2, 3.0)]\npos_files = [os.path.join(dataExtern(), 'catalog', 'positions_bin{0}.fits'.\n    format(n)) for n in range(1, 6)]\nshear_files = [os.path.join(dataExtern(), 'catalog', '1-2',\n    'WLshear_positions_bin{0}_0001r.fits'.format(n)) for n in range(1, 6)]\nfig, ax = plt.subplots(2, 3, figsize=(24, 16))\nax = ax.reshape(6)\nfull_catalog = ShearCatalog.readall(shear_files, pos_files)\nfull_convergence = full_catalog.toMap(map_size=map_size, npixel=npixel,\n    smooth=smooth).convergence()\nfull_convergence.visualize(fig=fig, ax=ax[-1], colorbar=True, cbar_label=\n    '$\\\\kappa$')\nax[-1].set_title('All', fontsize=30)\ncatalog_rebinned = full_catalog.rebin(zbins)\nfor n, ct in enumerate(catalog_rebinned):\n    convergence = ct.toMap(map_size=map_size, npixel=npixel, smooth=smooth\n        ).convergence()\n    convergence.visualize(fig=fig, ax=ax[n], colorbar=True, cbar_label=\n        '$\\\\kappa$')\n    ax[n].set_title('$z\\\\in[{0:.1f},{1:.1f}]$'.format(*zbins[n]), fontsize=30)\nfig.tight_layout()\nfig.savefig('catalog_to_convergence.png')\n"
}