{
    "functionName": "test_initiate",
    "className": "TestOptimizeTSSpredator",
    "fileName": "/Sung-Huan_&_ANNOgesic/tests_&_test_optimize_TSSpredator.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "args = self.mock_args.mock()\nargs.height = 0.9\nargs.height_reduction = 0.8\nargs.factor = 0.9\nargs.factor_reduction = 0.8\nargs.base_height = 0.01\nargs.enrichment = 0.5\nargs.processing = 0.5\nmax_num, best_para, current_para, indexs = ot.initiate(args)\nself.assertDictEqual(max_num, {'re_factor': 0.8, 'processing': 0.5,\n    'enrichment': 0.5, 'height': 0.9, 'base_height': 0.01, 're_height': 0.8,\n    'factor': 0.9})\nself.assertDictEqual(best_para, {'re_factor': 0, 'processing': 0,\n    'enrichment': 0, 'height': 0, 'base_height': 0, 're_height': 0,\n    'factor': 0})\nself.assertDictEqual(current_para, {'re_factor': 0, 'processing': 0,\n    'enrichment': 0, 'height': 0, 'base_height': 0, 're_height': 0,\n    'factor': 0})\nself.assertDictEqual(indexs, {'step': 0, 'change': False, 'num': 0, 'first':\n    True, 'length': 0, 'exist': False, 'switch': 0, 'extend': False,\n    'count': 0})\n"
}