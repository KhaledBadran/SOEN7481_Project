{
    "functionName": "test_three_arms_diferent_variance",
    "className": "TestUCB1Tuned",
    "fileName": "/Yelp_&_MOE/moe_&_tests_&_bandit_&_ucb_&_ucb1_tuned_test.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Check that the three-arms cases with different variance (same average payoff) return the expected arm allocations. The highest variance wins.\"\"\"\nbandit = self.bandit_class(self.\n    three_arms_with_variance_no_unsampled_arm_test_case)\nassert bandit.allocate_arms() == {'arm1': 1.0, 'arm2': 0.0, 'arm3': 0.0}\n"
}