{
    "functionName": "wrapping_parameters",
    "className": null,
    "fileName": "/OpenKMIP_&_PyKMIP/kmip_&_tests_&_unit_&_services_&_server_&_crypto_&_test_engine.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "return request.param\npytest.fixture(scope='function', params=[{'key_material':\n    b'\\x00\\x11\"3DUfw\\x88\\x99\\xaa\\xbb\\xcc\\xdd\\xee\\xff', 'wrapping_method':\n    enums.WrappingMethod.ENCRYPT, 'key_wrap_algorithm': enums.\n    BlockCipherMode.NIST_KEY_WRAP, 'encryption_key':\n    b'\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x0c\\r\\x0e\\x0f',\n    'wrapped_data':\n    b'\\x1f\\xa6\\x8b\\n\\x81\\x12\\xb4G\\xae\\xf3K\\xd8\\xfbZ{\\x82\\x9d>\\x86#q\\xd2\\xcf\\xe5'\n    }, {'key_material': b'\\x00\\x11\"3DUfw\\x88\\x99\\xaa\\xbb\\xcc\\xdd\\xee\\xff',\n    'wrapping_method': enums.WrappingMethod.ENCRYPT, 'key_wrap_algorithm':\n    enums.BlockCipherMode.NIST_KEY_WRAP, 'encryption_key':\n    b'\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x0c\\r\\x0e\\x0f\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17'\n    , 'wrapped_data':\n    b'\\x96w\\x8b%\\xael\\xa45\\xf9+[\\x97\\xc0P\\xae\\xd2F\\x8a\\xb8\\xa1z\\xd8N]'}, {\n    'key_material': b'\\x00\\x11\"3DUfw\\x88\\x99\\xaa\\xbb\\xcc\\xdd\\xee\\xff',\n    'wrapping_method': enums.WrappingMethod.ENCRYPT, 'key_wrap_algorithm':\n    enums.BlockCipherMode.NIST_KEY_WRAP, 'encryption_key':\n    b'\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x0c\\r\\x0e\\x0f\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f'\n    , 'wrapped_data':\n    b'd\\xe8\\xc3\\xf9\\xce\\x0f[\\xa2c\\xe9wy\\x05\\x81\\x8a*\\x93\\xc8\\x19\\x1e}n\\x8a\\xe7'\n    }, {'key_material':\n    b'\\x00\\x11\"3DUfw\\x88\\x99\\xaa\\xbb\\xcc\\xdd\\xee\\xff\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07'\n    , 'wrapping_method': enums.WrappingMethod.ENCRYPT, 'key_wrap_algorithm':\n    enums.BlockCipherMode.NIST_KEY_WRAP, 'encryption_key':\n    b'\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x0c\\r\\x0e\\x0f\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17'\n    , 'wrapped_data':\n    b'\\x03\\x1d3&N\\x15\\xd32h\\xf2N\\xc2`t>\\xdc\\xe1\\xc6\\xc7\\xdd\\xeerZ\\x93k\\xa8\\x14\\x91\\\\gb\\xd2'\n    }, {'key_material':\n    b'\\x00\\x11\"3DUfw\\x88\\x99\\xaa\\xbb\\xcc\\xdd\\xee\\xff\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07'\n    , 'wrapping_method': enums.WrappingMethod.ENCRYPT, 'key_wrap_algorithm':\n    enums.BlockCipherMode.NIST_KEY_WRAP, 'encryption_key':\n    b'\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x0c\\r\\x0e\\x0f\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f'\n    , 'wrapped_data':\n    b'\\xa8\\xf9\\xbc\\x16\\x12\\xc6\\x8b?\\xf6\\xe6\\xf4\\xfb\\xe3\\x0eq\\xe4v\\x9c\\x8b\\x80\\xa3,\\xb8\\x95\\x8c\\xd5\\xd1}k%M\\xa1'\n    }, {'key_material':\n    b'\\x00\\x11\"3DUfw\\x88\\x99\\xaa\\xbb\\xcc\\xdd\\xee\\xff\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x0c\\r\\x0e\\x0f'\n    , 'wrapping_method': enums.WrappingMethod.ENCRYPT, 'key_wrap_algorithm':\n    enums.BlockCipherMode.NIST_KEY_WRAP, 'encryption_key':\n    b'\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\t\\n\\x0b\\x0c\\r\\x0e\\x0f\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f'\n    , 'wrapped_data':\n    b'(\\xc9\\xf4\\x04\\xc4\\xb8\\x10\\xf4\\xcb\\xcc\\xb3\\\\\\xfb\\x87\\xf8&?W\\x86\\xe2\\xd8\\x0e\\xd3&\\xcb\\xc7\\xf0\\xe7\\x1a\\x99\\xf4;\\xfb\\x98\\x8b\\x9bz\\x02\\xdd!'\n    }])"
}