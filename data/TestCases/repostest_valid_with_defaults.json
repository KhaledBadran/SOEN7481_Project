{
    "functionName": "test_valid_with_defaults",
    "className": null,
    "fileName": "/GIlunga_&_JSON-Configparser/tests_&_test_validations.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "value, typedef = value_typedef\nvalidations.validate_argument(value, typedef)\npytest.mark.parametrize('value_typedef', [(True, type_defaults.\n    TypeDefaultBounds('a', bool, has_default=True, default_value=True)), (\n    10, type_defaults.TypeDefaultBounds('a', int, has_default=True,\n    default_value=10)), (10.5, type_defaults.TypeDefaultBounds('a', float,\n    has_default=True, default_value=10.5)), ('abc', type_defaults.\n    TypeDefaultBounds('a', str, has_default=True, default_value='abc')), ([\n    1, 2], type_defaults.TypeDefaultBounds('a', List[int], has_default=True,\n    default_value=[1, 2])), ([1.5, 2.5], type_defaults.TypeDefaultBounds(\n    'a', List[float], has_default=True, default_value=[1.5, 2.5])), ([[1, 2\n    ], [1, 2]], type_defaults.TypeDefaultBounds('a', List[List[int]],\n    has_default=True, default_value=[[1, 2], [1, 2]])), ([True, False],\n    type_defaults.TypeDefaultBounds('a', List[bool], has_default=True,\n    default_value=[True, False])), (['ab', 'cd'], type_defaults.\n    TypeDefaultBounds('a', List[str], has_default=True, default_value=['a',\n    'b'])), ({'a': 1, 'b': 2}, type_defaults.TypeDefaultBounds('a', Dict[\n    str, int], has_default=True, default_value={'a': 1, 'b': 2})), ({'a': \n    1.5, 'b': 2.5}, type_defaults.TypeDefaultBounds('a', Dict[str, float],\n    has_default=True, default_value={'a': 1.5, 'b': 2.5})), ({'a': 'a', 'b':\n    'b'}, type_defaults.TypeDefaultBounds('a', Dict[str, str], has_default=\n    True, default_value={'a': 'a', 'b': 'b'})), ({'a': True, 'b': False},\n    type_defaults.TypeDefaultBounds('a', Dict[str, bool], has_default=True,\n    default_value={'a': True, 'b': False}))])"
}