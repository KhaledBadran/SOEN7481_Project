{
    "functionName": "test_has_method",
    "className": null,
    "fileName": "/alex-ber_&_AlexBerUtils/tests_&_utils_&_inspect_test.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "logger.info(f'{request._pyfuncitem.name}()')\nb = has_method(cls, method_name)\nassert exp_value == b\npytest.mark.parametrize('cls, method_name, exp_value', [(Example,\n    '__init__', True), (Example, 'foo1', True), (Example, 'method1', True),\n    (Example, 'method2', True), (Example, 'att1', True), (Example,\n    'att_get_only', True), (Example, '_set_only', True), (Example, 'set_x',\n    True), (Example, 'baz', True), (Example, '__init__', True), (Example,\n    'seed', True), (Example, 'this_is_method_is_not_here', False), (Derived,\n    '__init__', True), (SubDerived, 'set_x', True), (SubDerived,\n    'set_non_exists', False), (Derivitive, 'set_x', True), (Derivitive,\n    'cool', True), (Derivitive, 'set_non_exists', False)])"
}