{
    "functionName": "test_commands",
    "className": "TestEnterpriseCommands",
    "fileName": "/Keeper-Security_&_Commander/tests_&_test_enterprise_commands.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "params = TestEnterpriseCommands.params\nself.assertIsNotNone(params.enterprise)\ntest_user = params.config['user']\nnew_user = 'integration.user@keepersecurity.com'\nnew_team = 'Test Team'\nwith mock.patch('builtins.input', side_effect=KeyboardInterrupt()), mock.patch(\n    'builtins.print'):\n    cli.do_command(params, 'enterprise-info --verbose')\n    cli.do_command(params, 'enterprise-team --add \"{0}\"'.format(new_team))\n    cli.do_command(params,\n        'enterprise-team --restrict-edit=on --restrict-share=on --restrict-view=off \"{0}\"'\n        .format(new_team))\n    cli.do_command(params, 'enterprise-user --add --name=\"Test User\" {0}'.\n        format(new_user))\n    cli.do_command(params, 'enterprise-user --lock \"{0}\"'.format(test_user))\n    cli.do_command(params, 'enterprise-user --unlock \"{0}\"'.format(test_user))\n    cli.do_command(params, 'enterprise-team --add-user=\"{0}\" \"{1}\"'.format(\n        test_user, new_team))\n    cli.do_command(params, 'enterprise-team --remove-user=\"{0}\" \"{1}\"'.\n        format(test_user, new_team))\n    cli.do_command(params, 'enterprise-user --add-team=\"{0}\" \"{1}\"'.format(\n        new_team, test_user))\n    cli.do_command(params, 'enterprise-user --remove-team=\"{0}\" \"{1}\"'.\n        format(new_team, test_user))\n    role_id = None\n    managed_roles = set()\n    for mn in params.enterprise['managed_nodes']:\n        managed_roles.add(mn['role_id'])\n    for role in params.enterprise['roles']:\n        if role['role_id'] not in managed_roles:\n            role_id = role['role_id']\n            break\n    if role_id:\n        cli.do_command(params, 'enterprise-role --add-user=\"{0}\" \"{1}\"'.\n            format(new_user, role_id))\n"
}