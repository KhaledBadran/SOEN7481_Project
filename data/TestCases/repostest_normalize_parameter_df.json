{
    "functionName": "test_normalize_parameter_df",
    "className": null,
    "fileName": "/PEtab-dev_&_PEtab/tests_&_test_parameters.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Check parameters.normalize_parameter_df.\"\"\"\nparameter_df = pd.DataFrame({PARAMETER_ID: ['par0', 'par1', 'par2'],\n    PARAMETER_SCALE: [LOG10, LOG10, LIN], NOMINAL_VALUE: [0.01, 0.001, \n    0.0001], ESTIMATE: [1, 1, 0], LOWER_BOUND: [1e-05, 1e-06, 1e-07],\n    UPPER_BOUND: [100000.0, 1000000.0, 10000000.0]}).set_index(PARAMETER_ID)\nactual = petab.normalize_parameter_df(parameter_df)\nexpected = parameter_df.copy(deep=True)\nexpected[PARAMETER_NAME] = parameter_df.reset_index()[PARAMETER_ID]\nexpected[INITIALIZATION_PRIOR_TYPE] = [PARAMETER_SCALE_UNIFORM] * 3\nexpected[INITIALIZATION_PRIOR_PARAMETERS] = ['-5;5', '-6;6', '1e-7;1e7']\nexpected[OBJECTIVE_PRIOR_TYPE] = [PARAMETER_SCALE_UNIFORM] * 3\nexpected[OBJECTIVE_PRIOR_PARAMETERS] = ['-5;5', '-6;6', '1e-7;1e7']\nassert list(actual.index.values) == list(expected.index.values)\nfor col in PARAMETER_DF_COLS[1:]:\n    if col in [INITIALIZATION_PRIOR_PARAMETERS, OBJECTIVE_PRIOR_PARAMETERS]:\n        continue\n    assert ((actual[col] == expected[col]) | (actual[col].isnull() ==\n        expected[col].isnull())).all()\nfor col in [INITIALIZATION_PRIOR_PARAMETERS, OBJECTIVE_PRIOR_PARAMETERS]:\n    for (_, actual_row), (_, expected_row) in zip(actual.iterrows(),\n        expected.iterrows()):\n        actual_pars = tuple([float(val) for val in actual_row[col].split(';')])\n        expected_pars = tuple([float(val) for val in expected_row[col].\n            split(';')])\n        assert actual_pars == expected_pars\nactual2 = petab.normalize_parameter_df(actual)\nassert ((actual == actual2) | (actual.isnull() == actual2.isnull())).all().all(\n    )\npetab.check_parameter_df(actual)\n"
}