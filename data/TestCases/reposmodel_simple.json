{
    "functionName": "model_simple",
    "className": null,
    "fileName": "/PEtab-dev_&_PEtab/tests_&_test_calculate.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"Simple model.\"\"\"\nmeasurement_df = pd.DataFrame(data={OBSERVABLE_ID: ['obs_a', 'obs_a',\n    'obs_b', 'obs_b'], SIMULATION_CONDITION_ID: ['c0', 'c1', 'c0', 'c1'],\n    TIME: [0, 10, 0, 10], MEASUREMENT: [0, 1, 20, 22]})\nobservable_df = pd.DataFrame(data={OBSERVABLE_ID: ['obs_a', 'obs_b'],\n    OBSERVABLE_FORMULA: ['A', 'B'], NOISE_FORMULA: [2, 3]}).set_index([\n    OBSERVABLE_ID])\nparameter_df = pd.DataFrame(data={PARAMETER_ID: ['par1', 'par2'],\n    NOMINAL_VALUE: [3, 4]})\nsimulation_df = measurement_df.copy(deep=True).rename(columns={MEASUREMENT:\n    SIMULATION})\nsimulation_df[SIMULATION] = [2, 2, 19, 20]\nexpected_residuals = {(2 - 0) / 2, (2 - 1) / 2, (19 - 20) / 3, (20 - 22) / 3}\nexpected_residuals_nonorm = {2 - 0, 2 - 1, 19 - 20, 20 - 22}\nexpected_llh = -0.5 * (np.array(list(expected_residuals)) ** 2).sum(\n    ) - 0.5 * np.log(2 * np.pi * np.array([2, 2, 3, 3]) ** 2).sum()\nreturn measurement_df, observable_df, parameter_df, simulation_df, expected_residuals, expected_residuals_nonorm, expected_llh\n"
}