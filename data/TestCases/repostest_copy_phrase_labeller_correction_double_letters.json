{
    "functionName": "test_copy_phrase_labeller_correction_double_letters",
    "className": "TestTriggers",
    "fileName": "/BciPy_&_BciPy/bcipy_&_helpers_&_tests_&_test_triggers.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "copy_phrase = 'HELLO'\ntyped = 'HELP<LO'\nlabeller = LslCopyPhraseLabeller(copy_phrase, typed)\nself.assertEqual('calib', labeller.label(\n    \"['calibration_trigger', 2.30196808103]\"))\nself.assertEqual('fixation', labeller.label('+'))\nself.assertEqual('target', labeller.label('H'))\nself.assertEqual('nontarget', labeller.label('I'))\nself.assertEqual('fixation', labeller.label('+'))\nself.assertEqual('target', labeller.label('E'))\nself.assertEqual('nontarget', labeller.label('O'))\nself.assertEqual('fixation', labeller.label('+'))\nself.assertEqual('nontarget', labeller.label('O'))\nself.assertEqual('target', labeller.label('L'))\nself.assertEqual('fixation', labeller.label('+'))\nself.assertEqual('target', labeller.label('L'))\nself.assertEqual('nontarget', labeller.label('O'))\nself.assertEqual('fixation', labeller.label('+'))\nself.assertEqual('nontarget', labeller.label('O'))\nself.assertEqual('target', labeller.label('<'))\nself.assertEqual('fixation', labeller.label('+'))\nself.assertEqual('target', labeller.label('L'))\nself.assertEqual('nontarget', labeller.label('A'))\nself.assertEqual('fixation', labeller.label('+'))\nself.assertEqual('nontarget', labeller.label('A'))\nself.assertEqual('target', labeller.label('O'))\n"
}