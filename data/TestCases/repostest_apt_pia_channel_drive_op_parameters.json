{
    "functionName": "test_apt_pia_channel_drive_op_parameters",
    "className": null,
    "fileName": "/Galvant_&_InstrumentKit/instruments_&_tests_&_test_thorlabs_&_test_thorlabs_apt.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Test the drive op parameters for the APT Piezo Inertia Actuator.\n\n    Tested with KIM101 driver connected to PIM1 mirror mount.\n    \"\"\"\nwith expected_protocol(ik.thorlabs.APTPiezoInertiaActuator, [init_kim101[0],\n    ThorLabsPacket(message_id=ThorLabsCommands.PZMOT_REQ_PARAMS, param1=7,\n    param2=1, dest=80, source=1, data=None).pack(), ThorLabsPacket(\n    message_id=ThorLabsCommands.PZMOT_SET_PARAMS, param1=None, param2=None,\n    dest=80, source=1, data=struct.pack('<HHHll', 7, 1, 100, 1000, 10000)).\n    pack()], [init_kim101[1], ThorLabsPacket(message_id=ThorLabsCommands.\n    PZMOT_GET_PARAMS, dest=1, source=80, data=struct.pack('<HHHll', 7, 1, \n    90, 500, 5000)).pack()], sep='') as apt:\n    assert apt.channel[0].drive_op_parameters == [u.Quantity(90, u.V), u.\n        Quantity(500, 1 / u.s), u.Quantity(5000, 1 / u.s ** 2)]\n    apt.channel[0].drive_op_parameters = [u.Quantity(100, u.V), u.Quantity(\n        1000, 1 / u.s), u.Quantity(10000, 1 / u.s ** 2)]\n"
}