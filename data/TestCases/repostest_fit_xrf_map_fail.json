{
    "functionName": "test_fit_xrf_map_fail",
    "className": null,
    "fileName": "/NSLS-II_&_PyXRF/pyxrf_&_core_&_tests_&_test_map_processing.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Failing cases of `fit_xrf_map` (wrong input parameters)\"\"\"\ndataset_params = {'n_data_dimensions': (20, 20)}\nadd_pts_before, add_pts_after = 15, 10\nuse_snip = False\nft = _FitXRFMapTesting(dataset_params=dataset_params, use_snip=use_snip,\n    add_pts_before=add_pts_before, add_pts_after=add_pts_after)\nkwargs = {'data': ft.data_input, 'data_sel_indices': ft.data_sel_indices,\n    'matv': ft.spectra, 'snip_param': ft.snip_param, 'use_snip': use_snip,\n    'chunk_pixels': 10, 'n_chunks_min': 4, 'progress_bar': None, 'client': None\n    }\nkwargs.update(params)\nwith pytest.raises(except_type, match=err_msg):\n    fit_xrf_map(**kwargs)\npytest.mark.parametrize('params, except_type, err_msg', [({\n    'data_sel_indices': 50}, TypeError,\n    \"Parameter 'data_sel_indices' must be tuple or list\"), ({\n    'data_sel_indices': (3, 10, 5)}, TypeError,\n    \"Parameter 'data_sel_indices' must contain two elements\"), ({\n    'data_sel_indices': [3]}, TypeError,\n    \"Parameter 'data_sel_indices' must contain two elements\"), ({\n    'data_sel_indices': (-1, 10)}, ValueError,\n    \"Some of the indices in 'data_sel_indices' are negative\"), ({\n    'data_sel_indices': [0, -10]}, ValueError,\n    \"Some of the indices in 'data_sel_indices' are negative\"), ({\n    'data_sel_indices': [3, 3]}, ValueError,\n    \"Parameter 'data_sel_indices' must select at least 1 element\"), ({\n    'data_sel_indices': [3, 2]}, ValueError,\n    \"Parameter 'data_sel_indices' must select at least 1 element\"), ({\n    'matv': np.zeros(shape=(2, 3, 5))}, TypeError,\n    \"Parameter 'matv' must be 2D ndarray\"), ({'matv': np.zeros(shape=(50, 3\n    )), 'data_sel_indices': (5, 5 + 51)}, ValueError,\n    'The number of selected points .* is not equal'), ({'snip_param': [1, 2,\n    3]}, TypeError, \"Parameter 'snip_param' must be a dictionary\"), ({\n    'snip_param': {}, 'use_snip': True}, TypeError,\n    \"Parameter 'snip_param' must a dictionary with keys\"), ({'snip_param':\n    {'e_offset': 0, 'e_linear': 0.1, 'e_quadratic': 0}, 'use_snip': True},\n    TypeError, \"Parameter 'snip_param' must a dictionary with keys\"), ({\n    'data': np.zeros(shape=(10, 15, 100)), 'matv': np.zeros(shape=(50, 3)),\n    'data_sel_indices': (70, 70 + 50)}, ValueError,\n    'Selection indices .* are outside the allowed range')])"
}