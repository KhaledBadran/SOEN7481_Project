{
    "functionName": "test_13Node_CktElement",
    "className": null,
    "fileName": "/dss-extensions_&_OpenDSSDirect.py/tests_&_test_opendssdirect_no_ext_errors.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "assert dss.CktElement.AllPropertyNames() == [u'bus1', u'bus2', u'linecode',\n    u'length', u'phases', u'r1', u'x1', u'r0', u'x0', u'C1', u'C0',\n    u'rmatrix', u'xmatrix', u'cmatrix', u'Switch', u'Rg', u'Xg', u'rho',\n    u'geometry', u'units', u'spacing', u'wires', u'EarthModel', u'cncables',\n    u'tscables', u'B1', u'B0', u'Seasons', u'Ratings', u'normamps',\n    u'emergamps', u'faultrate', u'pctperm', u'repair', u'basefreq',\n    u'enabled', u'like']\nassert dss.CktElement.AllVariableNames() == []\nassert dss.CktElement.AllVariableValues() == [0.0]\nassert dss.CktElement.BusNames() == [u'671', u'692']\nassert dss.CktElement.Open(1, 0) is None\nassert dss.CktElement.IsOpen(1, 0)\nassert dss.CktElement.Close(1, 0) is None\nassert not dss.CktElement.IsOpen(1, 0)\nnp.testing.assert_array_almost_equal(dss.CktElement.CplxSeqCurrents(), [\n    66.53192583719891, 13.672570546468101, 141.96269129938753, -\n    15.550054378231998, 10.605415669810057, -71.1403384338611, -\n    66.53192583719891, -13.672570546468101, -141.96269129938753, \n    15.550054378231998, -10.605415669810057, 71.1403384338611], decimal=4)\nnp.testing.assert_array_almost_equal(dss.CktElement.CplxSeqVoltages(), [-\n    1.2443968584439062, -82.59116123402828, 2386.047643797686, -\n    162.49099543761832, -34.73053366599282, 23.996417025286178, -\n    1.244403511636449, -82.59116260128519, 2386.0476296014167, -\n    162.49099388261294, -34.730534726534245, 23.99642413931997], decimal=4)\nnp.testing.assert_array_almost_equal(dss.CktElement.Currents(), [\n    219.10003280639648, -73.017822265625, 38.39047050476074, -\n    56.740970611572266, -57.89472579956055, 170.77650451660156, -\n    219.10003280639648, 73.017822265625, -38.39047050476074, \n    56.740970611572266, 57.89472579956055, -170.77650451660156], decimal=4)\nnp.testing.assert_array_almost_equal(dss.CktElement.CurrentsMagAng(), [\n    230.9468050096784, -18.431295569374065, 68.50814529324387, -\n    55.91804381551418, 180.32308163492308, 108.72710746089945, \n    230.9468050096784, 161.56870442095442, 68.50814529324387, \n    124.08195617481427, 180.32308163492308, -71.27289252942901], decimal=4)\nassert dss.CktElement.DisplayName() == u'Line_671692'\nassert dss.CktElement.EmergAmps() == 600.0\nassert dss.CktElement.Enabled() == 1\nassert dss.CktElement.EnergyMeter() == u''\nfrom six import string_types\nassert isinstance(dss.CktElement.GUID(), string_types)\nassert dss.CktElement.HasSwitchControl() == 0\nassert dss.CktElement.HasVoltControl() == 0\nnp.testing.assert_almost_equal(dss.CktElement.Losses(), [\n    0.00905452249571681, -1.4551915228366852e-11], decimal=4)\nassert dss.CktElement.Name() == u'Line.671692'\nassert dss.CktElement.NodeOrder() == [1, 2, 3, 1, 2, 3]\nassert dss.CktElement.NormalAmps() == 400.0\nassert dss.CktElement.NumConductors() == 3\nassert dss.CktElement.NumControls() == 0\nassert dss.CktElement.NumPhases() == 3\nassert dss.CktElement.NumProperties() == 37\nassert dss.CktElement.NumTerminals() == 2\nassert dss.CktElement.OCPDevIndex() == 0\nassert dss.CktElement.OCPDevType() == 0\nnp.testing.assert_array_almost_equal(dss.CktElement.PhaseLosses(), [\n    5.3332970710471275e-06, 1.4551915228366852e-14, 4.693326191045344e-07, \n    0.0, 3.2518928055651486e-06, -2.9103830456733704e-14], decimal=4)\nnp.testing.assert_array_almost_equal(dss.CktElement.Powers(), [\n    531.0442078185483, 123.15729887953721, 68.33003035870593, -\n    156.93863010669907, 414.5328159611783, 52.80531186087565, -\n    531.0442024849057, -123.15729887953721, -68.33002988936931, \n    156.93863010669907, -414.53281270953687, -52.80531186087562], decimal=4)\nnp.testing.assert_array_almost_equal(dss.CktElement.Residuals(), [\n    203.766844870779, 11.612830692170245, 203.766844870779, -\n    168.38716929815823], decimal=4)\nnp.testing.assert_array_almost_equal(dss.CktElement.SeqCurrents(), [\n    67.92228162359304, 142.8117989247778, 71.92650828459385, \n    67.92228162359304, 142.8117989247778, 71.92650828459385], decimal=4)\nnp.testing.assert_array_almost_equal(dss.CktElement.SeqPowers(), [-\n    3.6360767939550196, -16.43380473058689, 1023.7694666913296, \n    42.10653475759665, -6.226334923023335, -6.648749825544208, \n    3.6360781779859073, 16.43380473058686, -1023.7694605727667, -\n    42.10653475759662, 6.226336475050096, 6.648749825544179], decimal=4)\nnp.testing.assert_array_almost_equal(dss.CktElement.SeqVoltages(), [\n    82.60053533438243, 2391.57410131294, 42.214191911916366, \n    82.60053680171639, 2391.5740870438235, 42.21419682837919], decimal=4)\nwith pt.raises(dss.DSSException):\n    dss.CktElement.Variablei(1)\nwith pt.raises(dss.DSSException):\n    dss.CktElement.Variablei(1, 10)\nwith pt.raises(dss.DSSException):\n    dss.CktElement.Variable('some invalid name')\nwith pt.raises(dss.DSSException):\n    dss.CktElement.Variable('some invalid name', 10)\nnp.testing.assert_array_almost_equal(dss.CktElement.Voltages(), [\n    2350.072713273249, -221.08573964636037, -1338.4057884569047, -\n    2109.79926873945, -1015.4001153916768, 2083.1115246837253, \n    2350.0726913632457, -221.08573234457813, -1338.4057922959519, -\n    2109.7992630653525, -1015.4001096022041, 2083.111507606075], decimal=4)\nnp.testing.assert_array_almost_equal(dss.CktElement.VoltagesMagAng(), [\n    2360.449250025611, -5.3743473971090765, 2498.5161614343156, -\n    122.39005677200043, 2317.4104122074677, 115.9866388766925, \n    2360.4492275280204, -5.3743472704625, 2498.516158699491, -\n    122.39005691604211, 2317.410394319708, 115.98663893302955], decimal=4)\nnp.testing.assert_array_almost_equal(dss.CktElement.YPrim(), [10000000.0, \n    0.0, 0.0, 0.0, 0.0, 0.0, -10000000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,\n    10000000.0, 0.0, 0.0, 0.0, 0.0, 0.0, -10000000.0, 0.0, 0.0, 0.0, 0.0, \n    0.0, 0.0, 0.0, 10000000.0, 0.0, 0.0, 0.0, 0.0, 0.0, -10000000.0, 0.0, -\n    10000000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10000000.0, 0.0, 0.0, 0.0, 0.0, \n    0.0, 0.0, 0.0, -10000000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10000000.0, 0.0, \n    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -10000000.0, 0.0, 0.0, 0.0, 0.0, 0.0, \n    10000000.0, 0.0], decimal=4)\ndss.run_command('New PVSystem.631')\ndss.Circuit.SetActiveElement('PVSystem.631')\nassert dss.CktElement.AllVariableNames() == [u'Irradiance', u'PanelkW',\n    u'P_TFactor', u'Efficiency', u'Vreg', u'Vavg (DRC)', u'volt-var',\n    u'volt-watt', u'DRC', u'VV_DRC', u'watt-pf', u'watt-var', u'kW_out_desired'\n    ]\nassert dss.CktElement.AllVariableValues() == [1.0, 500.0, 1.0, 1.0, 9999.0,\n    9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 9999.0, 500.0]\nassert dss.CktElement.Variablei(2) == 500.0\nassert dss.CktElement.Variable(u'PanelkW') == 500.0\n"
}