{
    "functionName": "test_read_only_essential_fields",
    "className": "TestValidationInformation",
    "fileName": "/OpenKMIP_&_PyKMIP/kmip_&_tests_&_unit_&_core_&_objects_&_test_objects.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Test that a ProfileInformation structure can be correctly read in\n        from a data stream even when missing all fields except the profile\n        name.\n        \"\"\"\nvalidation_information = objects.ValidationInformation()\nself.assertIsNone(validation_information.validation_authority_type)\nself.assertIsNone(validation_information.validation_authority_country)\nself.assertIsNone(validation_information.validation_authority_uri)\nself.assertIsNone(validation_information.validation_version_major)\nself.assertIsNone(validation_information.validation_version_minor)\nself.assertIsNone(validation_information.validation_type)\nself.assertIsNone(validation_information.validation_level)\nself.assertIsNone(validation_information.validation_certificate_identifier)\nself.assertIsNone(validation_information.validation_certificate_uri)\nself.assertIsNone(validation_information.validation_vendor_uri)\nself.assertIsNone(validation_information.validation_profiles)\nvalidation_information.read(self.only_essentials_encoding, kmip_version=\n    enums.KMIPVersion.KMIP_1_3)\nself.assertEqual(enums.ValidationAuthorityType.COMMON_CRITERIA,\n    validation_information.validation_authority_type)\nself.assertIsNone(validation_information.validation_authority_country)\nself.assertIsNone(validation_information.validation_authority_uri)\nself.assertEqual(1, validation_information.validation_version_major)\nself.assertIsNone(validation_information.validation_version_minor)\nself.assertEqual(enums.ValidationType.HYBRID, validation_information.\n    validation_type)\nself.assertEqual(5, validation_information.validation_level)\nself.assertIsNone(validation_information.validation_certificate_identifier)\nself.assertIsNone(validation_information.validation_certificate_uri)\nself.assertIsNone(validation_information.validation_vendor_uri)\nself.assertIsNone(validation_information.validation_profiles)\n"
}