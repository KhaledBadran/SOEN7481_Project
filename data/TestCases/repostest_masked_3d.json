{
    "functionName": "test_masked_3d",
    "className": "TestVariogramstructured",
    "fileName": "/GeoStat-Framework_&_GSTools/tests_&_test_variogram_structured.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "rng = np.random.RandomState(1479373475)\nfield = rng.rand(30, 30, 30)\nmask = np.zeros_like(field)\nfield_ma = np.ma.masked_array(field, mask=mask)\ngamma_x = variogram.vario_estimate_structured(field_ma, direction='x')\ngamma_y = variogram.vario_estimate_structured(field_ma, direction='y')\ngamma_z = variogram.vario_estimate_structured(field_ma, direction='z')\nvar = 1.0 / 12.0\nself.assertAlmostEqual(gamma_x[0], 0.0, places=2)\nself.assertAlmostEqual(gamma_x[len(gamma_x) // 2], var, places=2)\nself.assertAlmostEqual(gamma_x[-1], var, places=2)\nself.assertAlmostEqual(gamma_y[0], 0.0, places=2)\nself.assertAlmostEqual(gamma_y[len(gamma_y) // 2], var, places=2)\nself.assertAlmostEqual(gamma_y[-1], var, places=2)\nself.assertAlmostEqual(gamma_z[0], 0.0, places=2)\nself.assertAlmostEqual(gamma_z[len(gamma_y) // 2], var, places=2)\nself.assertAlmostEqual(gamma_z[-1], var, places=2)\nmask = np.zeros_like(field)\nmask[0, 0, 0] = 1\nfield = np.ma.masked_array(field, mask=mask)\ngamma_x = variogram.vario_estimate_structured(field_ma, direction='x')\ngamma_y = variogram.vario_estimate_structured(field_ma, direction='y')\ngamma_z = variogram.vario_estimate_structured(field_ma, direction='z')\nself.assertAlmostEqual(gamma_x[0], 0.0, places=2)\nself.assertAlmostEqual(gamma_y[0], 0.0, places=2)\nself.assertAlmostEqual(gamma_z[0], 0.0, places=2)\n"
}