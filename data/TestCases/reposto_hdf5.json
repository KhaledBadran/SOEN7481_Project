{
    "functionName": "to_hdf5",
    "className": "HDF5",
    "fileName": "/pmeal_&_OpenPNM/openpnm_&_io_&_HDF5.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"\n        Creates an HDF5 file containing data from the specified objects,\n        and categorized according to the given arguments.\n\n        Parameters\n        ----------\n        network : OpenPNM Network Object\n            The network containing the desired data\n\n        phases : list of OpenPNM Phase Objects (optional, default is none)\n            A list of phase objects whose data are to be included\n\n        element : string or list of strings\n            An indication of whether 'pore' and/or 'throat' data are desired.\n            The default is both.\n\n        interleave : boolean (default is ``True``)\n            When ``True`` (default) the data from all Geometry objects (and\n            Physics objects if ``phases`` are given) is interleaved into\n            a single array and stored as a network property (or Phase\n            property for Physics data). When ``False``, the data for each\n            object are stored under their own dictionary key, the structuring\n            of which depends on the value of the ``flatten`` argument.\n\n        flatten : boolean (default is ``True``)\n            When ``True``, all objects are accessible from the top level\n            of the dictionary.  When ``False`` objects are nested under their\n            parent object.  If ``interleave`` is ``True`` this argument is\n            ignored.\n\n        categorize_by : string or list of strings\n            Indicates how the dictionaries should be organized.  The list can\n            contain any, all or none of the following strings:\n\n            **'objects'** : If specified the dictionary keys will be stored\n            under a general level corresponding to their type (e.g.\n            'network/net_01/pore.all'). If  ``interleave`` is ``True`` then\n            only the only categories are *network* and *phase*, since\n            *geometry* and *physics* data get stored under their respective\n            *network* and *phase*.\n\n            **'data'** : If specified the data arrays are additionally\n            categorized by ``label`` and ``property`` to separate *boolean*\n            from *numeric* data.\n\n            **'elements'** : If specified the data arrays are additionally\n            categorized by ``pore`` and ``throat``, meaning that the propnames\n            are no longer prepended by a 'pore.' or 'throat.'\n\n        \"\"\"\nfrom h5py import File as hdfFile\nproject, network, phases = cls._parse_args(network=network, phases=phases)\nif filename == '':\n    filename = project.name\nfilename = cls._parse_filename(filename, ext='hdf')\ndct = Dict.to_dict(network=network, phases=phases, element=element,\n    interleave=interleave, flatten=flatten, categorize_by=categorize_by)\nd = FlatDict(dct, delimiter='/')\nf = hdfFile(filename, 'w')\nfor item in d.keys():\n    tempname = '_'.join(item.split('.'))\n    arr = d[item]\n    if d[item].dtype == 'O':\n        logger.warning(item + ' has dtype object, will not write to file')\n        del d[item]\n    elif 'U' in str(arr[0].dtype):\n        pass\n    else:\n        f.create_dataset(name='/' + tempname, shape=arr.shape, dtype=arr.\n            dtype, data=arr)\nreturn f\nclassmethod"
}