{
    "functionName": "test_get_group_key_without_regeneration",
    "className": "TestGroupManager",
    "fileName": "/named-data_&_PyNDN2/tests_&_integration_tests_&_test_group_manager.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "manager = GroupManager(Name('Alice'), Name('data_type'),\n    Sqlite3GroupManagerDb(self.groupKeyDatabaseFilePath), 1024, 1, self.\n    keyChain)\nself.setManager(manager)\ntimePoint1 = Schedule.fromIsoString('20150825T093000')\nresult = manager.getGroupKey(timePoint1)\nself.assertEqual(4, len(result))\ndata1 = result[0]\nself.assertEqual('/Alice/READ/data_type/E-KEY/20150825T090000/20150825T100000',\n    data1.getName().toUri())\ngroupEKey1 = EncryptKey(data1.getContent())\ndata = result[1]\nself.assertEqual(\n    '/Alice/READ/data_type/D-KEY/20150825T090000/20150825T100000/FOR/ndn/memberA/ksk-123'\n    , data.getName().toUri())\ndataBlob = self.certificate.wireEncode()\nmemberD = Data()\nmemberD.wireDecode(dataBlob)\nmemberD.setName(Name('/ndn/memberD/KEY/ksk-123/ID-CERT/123'))\nmanager.addMember('schedule1', memberD)\nresult2 = manager.getGroupKey(timePoint1, False)\nself.assertEqual(5, len(result2))\ndata2 = result2[0]\nself.assertEqual('/Alice/READ/data_type/E-KEY/20150825T090000/20150825T100000',\n    data2.getName().toUri())\ngroupEKey2 = EncryptKey(data2.getContent())\nself.assertTrue(groupEKey1.getKeyBits().equals(groupEKey2.getKeyBits()))\ndata2 = result2[1]\nself.assertEqual(\n    '/Alice/READ/data_type/D-KEY/20150825T090000/20150825T100000/FOR/ndn/memberA/ksk-123'\n    , data2.getName().toUri())\n"
}