{
    "functionName": "test_datapoints_composition_error",
    "className": "TestGetDatapoints",
    "fileName": "/pr-omethe-us_&_PyKED/pyked_&_tests_&_test_converters.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Test valid parsing of datapoints with improper unit error.\n        \"\"\"\nroot = etree.Element('experiment')\ndatagroup = etree.SubElement(root, 'dataGroup')\nprop = etree.SubElement(datagroup, 'property')\nprop.set('id', 'x1')\nprop.set('name', 'temperature')\nprop.set('units', 'K')\nprop = etree.SubElement(datagroup, 'property')\nprop.set('id', 'x2')\nprop.set('name', 'ignition delay')\nprop.set('units', 'us')\nprop = etree.SubElement(datagroup, 'property')\nprop.set('id', 'x3')\nprop.set('name', 'composition')\nprop.set('units', 'grams')\nspecieslink = etree.SubElement(prop, 'speciesLink')\nspecieslink.set('preferredKey', 'H2')\nspecieslink.set('InChI', '1S/H2/h1H')\ndatapoint = etree.SubElement(datagroup, 'dataPoint')\nx1 = etree.SubElement(datapoint, 'x1')\nx1.text = str(1000.0)\nx2 = etree.SubElement(datapoint, 'x2')\nx2.text = str(100.0)\nx3 = etree.SubElement(datapoint, 'x3')\nx3.text = str(10.0)\nwith pytest.raises(KeywordError) as excinfo:\n    get_datapoints(root)\nassert 'Error: composition units need to be one of: mole fraction, mass fraction, mole percent, percent, ppm, or ppb.' in str(\n    excinfo.value)\n"
}