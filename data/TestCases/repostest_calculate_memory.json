{
    "functionName": "test_calculate_memory",
    "className": null,
    "fileName": "/viebboy_&_PyGOP/test_&_utility_&_test_calculate_memory.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "model_path = os.path.join(tmpdir.dirname, 'test_model')\nif os.path.exists(model_path):\n    shutil.rmtree(model_path)\nos.mkdir(model_path)\nparams, train_states = utility.get_random_popmem_states()\nparams['tmp_dir'] = tmpdir.dirname\nparams['model_name'] = 'test_model'\nparams['search_computation'] = 'cpu', 1\nparams['memory_type'] = 'PCA'\ngop_utils.calculate_memory_block_standalone(params, train_states, utility.\n    get_generator, [INPUT_DIM, OUTPUT_DIM, BATCH_SIZE, STEPS], utility.\n    get_generator, [INPUT_DIM, OUTPUT_DIM, BATCH_SIZE, STEPS], utility.\n    get_generator, [INPUT_DIM, OUTPUT_DIM, BATCH_SIZE, STEPS])\nshutil.rmtree(model_path)\nos.mkdir(model_path)\nparams['memory_type'] = 'LDA'\ngop_utils.calculate_memory_block_standalone(params, train_states, utility.\n    get_generator, [INPUT_DIM, OUTPUT_DIM, BATCH_SIZE, STEPS], utility.\n    get_generator, [INPUT_DIM, OUTPUT_DIM, BATCH_SIZE, STEPS], utility.\n    get_generator, [INPUT_DIM, OUTPUT_DIM, BATCH_SIZE, STEPS])\nshutil.rmtree(model_path)\n"
}