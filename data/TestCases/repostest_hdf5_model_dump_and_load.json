{
    "functionName": "test_hdf5_model_dump_and_load",
    "className": null,
    "fileName": "/goeckslab_&_Galaxy-ML/galaxy_ml_&_tests_&_test_model_persist.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "print('Loading pickled test model...')\nstart_time = time.time()\nwith open(test_model, 'rb') as f:\n    model = pickle.load(f)\nend_time = time.time()\nprint('(%s s)' % str(end_time - start_time))\ntmp = tempfile.mktemp()\ntry:\n    print('\\nDumping model using pickle...')\n    start_time = time.time()\n    with open(tmp, 'wb') as f:\n        pickle.dump(model, f, protocol=0)\n    end_time = time.time()\n    print('(%s s)' % str(end_time - start_time))\n    print('File size: %s' % str(os.path.getsize(tmp)))\n    print('\\nDumping object to dict...')\n    start_time = time.time()\n    model_dict = model_persist.dumpc(model)\n    end_time = time.time()\n    print('(%s s)' % str(end_time - start_time))\nfinally:\n    os.remove(tmp)\ntmp = tempfile.mktemp()\ntry:\n    print('\\nDumping dict data to JSON file...')\n    start_time = time.time()\n    with open(tmp, 'w') as f:\n        json.dump(model_dict, f, sort_keys=True)\n    end_time = time.time()\n    print('(%s s)' % str(end_time - start_time))\n    print('File size: %s' % str(os.path.getsize(tmp)))\n    print('\\nLoading data from JSON file...')\n    start_time = time.time()\n    with open(tmp, 'r') as f:\n        new_dict = json.load(f)\n    end_time = time.time()\n    print('(%s s)' % str(end_time - start_time))\n    print('\\nRe-build the model object...')\n    start_time = time.time()\n    re_model = model_persist.loadc(model_dict)\n    end_time = time.time()\n    print('(%s s)' % str(end_time - start_time))\n    print('%r' % re_model)\nfinally:\n    os.remove(tmp)\ntmp = tempfile.mktemp()\ntry:\n    print('\\nDumping model using pickle hdf5...')\n    start_time = time.time()\n    model_persist.dump_model_to_h5(model, tmp)\n    end_time = time.time()\n    print('(%s s)' % str(end_time - start_time))\n    print('File size: %s' % str(os.path.getsize(tmp)))\n    print('\\nLoading hdf5 model...')\n    start_time = time.time()\n    model = model_persist.load_model_from_h5(tmp)\n    end_time = time.time()\n    print('(%s s)' % str(end_time - start_time))\nfinally:\n    os.remove(tmp)\n"
}