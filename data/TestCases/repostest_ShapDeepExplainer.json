{
    "functionName": "test_ShapDeepExplainer",
    "className": "TestShapExplainer",
    "fileName": "/IBM_&_AIX360/tests_&_shap_&_test_shap.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "batch_size = 128\nnum_classes = 10\nepochs = 2\nimg_rows, img_cols = 28, 28\n(x_train, y_train), (x_test, y_test) = mnist.load_data()\nif K.image_data_format() == 'channels_first':\n    x_train = x_train.reshape(x_train.shape[0], 1, img_rows, img_cols)\n    x_test = x_test.reshape(x_test.shape[0], 1, img_rows, img_cols)\n    input_shape = 1, img_rows, img_cols\nelse:\n    x_train = x_train.reshape(x_train.shape[0], img_rows, img_cols, 1)\n    x_test = x_test.reshape(x_test.shape[0], img_rows, img_cols, 1)\n    input_shape = img_rows, img_cols, 1\nx_train = x_train.astype('float32')\nx_test = x_test.astype('float32')\nx_train /= 255\nx_test /= 255\nprint('x_train shape:', x_train.shape)\nprint(x_train.shape[0], 'train samples')\nprint(x_test.shape[0], 'test samples')\ny_train = keras.utils.to_categorical(y_train, num_classes)\ny_test = keras.utils.to_categorical(y_test, num_classes)\nmodel = Sequential()\nmodel.add(Conv2D(32, kernel_size=(3, 3), activation='relu', input_shape=\n    input_shape))\nmodel.add(Conv2D(64, (3, 3), activation='relu'))\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\nmodel.add(Dropout(0.25))\nmodel.add(Flatten())\nmodel.add(Dense(128, activation='relu'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(num_classes, activation='softmax'))\nmodel.compile(loss=keras.losses.categorical_crossentropy, optimizer=keras.\n    optimizers.Adadelta(), metrics=['accuracy'])\nmodel.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, verbose=1,\n    validation_data=(x_test, y_test))\nscore = model.evaluate(x_test, y_test, verbose=0)\nprint('Test loss:', score[0])\nprint('Test accuracy:', score[1])\nbackground = x_train[np.random.choice(x_train.shape[0], 100, replace=False)]\ne = DeepExplainer(model, background)\nshap_values = e.explain_instance(x_test[1:5])\nprint('Invoked Shap DeepExplainer')\n"
}