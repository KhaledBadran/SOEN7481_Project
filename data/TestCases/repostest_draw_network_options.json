{
    "functionName": "test_draw_network_options",
    "className": null,
    "fileName": "/Silmathoron_&_NNGT/testing_&_test_plots.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "net = nngt.generation.erdos_renyi(nodes=100, avg_deg=10)\nnet.set_weights(np.random.randint(0, 20, net.edge_nb()))\nnplt.draw_network(net, ncolor='in-degree', nsize=3, esize=2, colorbar=True,\n    show=False)\nif nngt.get_config('backend') != 'nngt':\n    nplt.draw_network(net, ncolor='betweenness', nsize='total-degree',\n        decimate_connections=3, curved_edges=True, show=False)\nnplt.draw_network(net, ncolor='g', nshape='s', ecolor='b', restrict_targets\n    =[1, 2, 3], show=False)\nnplt.draw_network(net, restrict_nodes=list(range(10)), fast=True, show=False)\nnplt.draw_network(net, restrict_targets=[4, 5, 6, 7, 8], show=False)\nnplt.draw_network(net, restrict_sources=[4, 5, 6, 7, 8], show=False)\nimport matplotlib.pyplot as plt\nfig, ax = plt.subplots()\nnplt.draw_network(net, simple_nodes=True, ncolor='k', decimate_connections=\n    -1, axis=ax, show=False)\nnplt.draw_network(net, simple_nodes=True, ncolor='r', nsize=2,\n    restrict_nodes=list(range(10)), esize='weight', ecolor='b', fast=True,\n    axis=ax, show=False)\npytest.mark.mpi_skip"
}