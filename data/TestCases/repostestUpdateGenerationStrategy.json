{
    "functionName": "testUpdateGenerationStrategy",
    "className": "SQAStoreTest",
    "fileName": "/facebook_&_Ax/ax_&_storage_&_sqa_store_&_tests_&_test_sqa_store.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "generation_strategy = get_generation_strategy()\nsave_generation_strategy(generation_strategy=generation_strategy)\nexperiment = get_branin_experiment()\ngeneration_strategy = get_generation_strategy()\nsave_experiment(experiment)\nexperiment.new_trial(generator_run=generation_strategy.gen(experiment))\nsave_generation_strategy(generation_strategy=generation_strategy)\nloaded_generation_strategy = load_generation_strategy_by_experiment_name(\n    experiment_name=experiment.name)\nself.assertEqual(generation_strategy, loaded_generation_strategy)\nexperiment.new_trial(generator_run=generation_strategy.gen(experiment, data\n    =get_branin_data()))\nsave_generation_strategy(generation_strategy=generation_strategy)\nsave_experiment(experiment)\nloaded_generation_strategy = load_generation_strategy_by_experiment_name(\n    experiment_name=experiment.name)\ngeneration_strategy._seen_trial_indices_by_status[TrialStatus.CANDIDATE].add(1)\nself.assertEqual(generation_strategy, loaded_generation_strategy)\nexperiment.description = 'foobar'\nsave_experiment(experiment)\nloaded_generation_strategy = load_generation_strategy_by_experiment_name(\n    experiment_name=experiment.name)\nself.assertEqual(generation_strategy, loaded_generation_strategy)\nself.assertEqual(generation_strategy._experiment.description, experiment.\n    description)\nself.assertEqual(generation_strategy._experiment.description,\n    loaded_generation_strategy._experiment.description)\n"
}