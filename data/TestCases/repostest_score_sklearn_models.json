{
    "functionName": "test_score_sklearn_models",
    "className": null,
    "fileName": "/gelijergensen_&_PermutationImportance/test_&_test_sklearn_api.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "model = SVC(gamma='auto', probability=True)\nexpected = score_untrained_sklearn_model(model, accuracy_score)\nresult = model_scorer(model, train_model, predict_model, accuracy_score)\nfor key in expected.__dict__:\n    assert getattr(expected, key) == getattr(result, key)\nexpected = score_untrained_sklearn_model_with_probabilities(model,\n    accuracy_score)\nresult = model_scorer(model, train_model, predict_proba_model, accuracy_score)\nfor key in expected.__dict__:\n    assert getattr(expected, key) == getattr(result, key)\nexpected = score_trained_sklearn_model(model, accuracy_score)\nresult = model_scorer(model, get_model, predict_model, accuracy_score)\nfor key in expected.__dict__:\n    assert getattr(expected, key) == getattr(result, key)\nexpected = score_trained_sklearn_model_with_probabilities(model, accuracy_score\n    )\nresult = model_scorer(model, get_model, predict_proba_model, accuracy_score)\nfor key in expected.__dict__:\n    assert getattr(expected, key) == getattr(result, key)\n"
}