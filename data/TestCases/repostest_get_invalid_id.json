{
    "functionName": "test_get_invalid_id",
    "className": "TestGetResource",
    "fileName": "/fvalverd_&_AutoApi/tests_&_views_&_test_get.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "response = self.app.get('/%s/movies/a1' % self.api, headers=self.headers)\nself.assertEqual(response.status_code, 409)\nresponse_json = json.loads(response.data or '{}')\nself.assertDictContainsSubset({'message': u'Resource \"a1\" is invalid'},\n    response_json)\n"
}