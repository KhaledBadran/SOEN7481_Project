{
    "functionName": "test_Sample_CurratAxe",
    "className": null,
    "fileName": "/jakob-lass_&_MJOLNIR/MJOLNIR_&_Data_&_Sample.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "df = MJOLNIR.Data.DataFile.DataFile('Data/camea2018n000178.hdf')\nsample = df.sample\nEi = [5, 7, 9]\nEf = np.array([[4, 4, 4], [5, 5, 5]])\nBragg = [[1, 0, 0], [0, 1, 1]]\npos = sample.CurratAxe(Ei, Ef, Bragg)\nassert pos.shape == (len(Bragg), np.array(Ei).size, Ef.size, 3)\nassert np.all(np.isclose(pos[:, :, :, (2)], 0.0))\nPOS = np.array([[[[0.159337451, 0.696316473, 0.0], [0.159337451, \n    0.696316473, 0.0], [0.159337451, 0.696316473, 0.0], [-1.20179144e-08, \n    0.657512083, -0.0], [-1.20179144e-08, 0.657512083, -0.0], [-\n    1.20179144e-08, 0.657512083, -0.0]], [[0.435859084, 0.763659414, 0.0],\n    [0.435859084, 0.763659414, 0.0], [0.435859084, 0.763659414, 0.0], [\n    0.278156829, 0.717745441, 0.0], [0.278156829, 0.717745441, 0.0], [\n    0.278156829, 0.717745441, 0.0]], [[0.674964311, 0.821890116, 0.0], [\n    0.674964311, 0.821890116, 0.0], [0.674964311, 0.821890116, 0.0], [\n    0.518676001, 0.769828565, 0.0], [0.518676001, 0.769828565, 0.0], [\n    0.518676001, 0.769828565, 0.0]]], [[[1.11373538, 0.408688259, 0.0], [\n    1.11373538, 0.408688259, 0.0], [1.11373538, 0.408688259, 0.0], [\n    0.986285477, 0.511890634, 0.0], [0.986285477, 0.511890634, 0.0], [\n    0.986285477, 0.511890634, 0.0]], [[1.33491786, 0.229586062, 0.0], [\n    1.33491786, 0.229586062, 0.0], [1.33491786, 0.229586062, 0.0], [\n    1.19906946, 0.322887295, 0.0], [1.19906946, 0.322887295, 0.0], [\n    1.19906946, 0.322887295, 0.0]], [[1.52617192, 0.0747183562, 0.0], [\n    1.52617192, 0.0747183562, 0.0], [1.52617192, 0.0747183562, 0.0], [\n    1.38306144, 0.159458179, 0.0], [1.38306144, 0.159458179, 0.0], [\n    1.38306144, 0.159458179, 0.0]]]])\nassert np.all(np.isclose(pos, POS))\nPOSAnalyser = np.array([[[[0.160279692, 0.622804387, 0.0], [0.160279692, \n    0.622804387, 0.0], [0.160279692, 0.622804387, 0.0], [-1.20179144e-08, \n    0.657512083, -0.0], [-1.20179144e-08, 0.657512083, -0.0], [-\n    1.20179144e-08, 0.657512083, -0.0]], [[0.441363759, 0.577272258, 0.0],\n    [0.441363759, 0.577272258, 0.0], [0.441363759, 0.577272258, 0.0], [\n    0.280013947, 0.606605614, 0.0], [0.280013947, 0.606605614, 0.0], [\n    0.280013947, 0.606605614, 0.0]], [[0.685994178, 0.547926749, 0.0], [\n    0.685994178, 0.547926749, 0.0], [0.685994178, 0.547926749, 0.0], [\n    0.524052917, 0.573796337, 0.0], [0.524052917, 0.573796337, 0.0], [\n    0.524052917, 0.573796337, 0.0]]], [[[1.00477106, 0.348941284, 0.0], [\n    1.00477106, 0.348941284, 0.0], [1.00477106, 0.348941284, 0.0], [\n    0.986285477, 0.511890634, 0.0], [0.986285477, 0.511890634, 0.0], [\n    0.986285477, 0.511890634, 0.0]], [[1.06290681, 0.069884324, 0.0], [\n    1.06290681, 0.069884324, 0.0], [1.06290681, 0.069884324, 0.0], [\n    1.03489627, 0.23146903, 0.0], [1.03489627, 0.23146903, 0.0], [\n    1.03489627, 0.23146903, 0.0]], [[1.13033943, -0.167701473, 0.0], [\n    1.13033943, -0.167701473, 0.0], [1.13033943, -0.167701473, 0.0], [\n    1.09633291, -0.00727153902, 0.0], [1.09633291, -0.00727153902, 0.0], [\n    1.09633291, -0.00727153902, 0.0]]]])\nposAna = sample.CurratAxe(Ei, Ef, Bragg, spurionType='ANAlYser')\nassert np.all(np.isclose(posAna[:, :, :, (2)], 0.0))\nassert np.all(np.isclose(posAna, POSAnalyser))\nposMonoProjection = sample.CurratAxe(Ei, Ef, Bragg, spurionType=\n    'monoChrOmaTOR', Projection=True)\nposMonoHKL = sample.CurratAxe(Ei, Ef, Bragg, spurionType='monoChrOmaTOR',\n    HKL=True)\nassert posMonoProjection.shape == (len(Bragg), np.array(Ei).size, Ef.size, 2)\nassert posMonoHKL.shape == (len(Bragg), np.array(Ei).size, Ef.size, 3)\ntry:\n    sample.CurratAxe(Ei, Ef, Bragg, spurionType='WRONG!!')\n    assert False\nexcept AttributeError:\n    assert True\n"
}