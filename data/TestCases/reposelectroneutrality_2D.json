{
    "functionName": "electroneutrality_2D",
    "className": null,
    "fileName": "/pmeal_&_OpenPNM/openpnm_&_models_&_physics_&_ionic_conductance.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"\n    Calculate the ionic conductance of conduits in network (assuming\n    electroneutrality for charge conservation), where a conduit is\n    ( 1/2 pore - full throat - 1/2 pore ). See the notes section.\n\n    Parameters\n    ----------\n    target : OpenPNM Object\n        The object which this model is associated with. This controls the\n        length of the calculated array, and also provides access to other\n        necessary properties.\n\n    pore_diameter : string\n        Dictionary key of the pore diameter values\n\n    throat_diameter : string\n        Dictionary key of the throat diameter values\n\n    pore_diffusivity : string\n        Dictionary key of the pore diffusivity values\n\n    throat_diffusivity : string\n        Dictionary key of the throat diffusivity values\n\n    conduit_lengths : string\n        Dictionary key of the conduit length values\n\n    conduit_shape_factors : string\n        Dictionary key of the conduit DIFFUSION shape factor values\n\n    pore_volume : string\n        Dictionary key of the pore volume values\n\n    pore_temperature : string\n        Dictionary key of the pore temperature values\n\n    throat_temperature : string\n        Dictionary key of the throat temperature values\n\n    pore_valence : string\n       Dictionary key of the pore ionic species valence values\n\n    throat_valence : string\n       Dictionary key of the throat ionic species valence values\n\n    pore_concentration : string\n       Dictionary key of the pore ionic species concentration values\n\n    Returns\n    -------\n    g : ndarray\n        Array containing ionic conductance values for conduits in the\n        geometry attached to the given physics object.\n\n    Notes\n    -----\n    (1) This function requires that all the necessary phase properties already\n    be calculated.\n\n    (2) This function calculates the specified property for the *entire*\n    network then extracts the values for the appropriate throats at the end.\n\n    (3) This function assumes cylindrical throats with constant cross-section\n    area. Corrections for different shapes and variable cross-section area can\n    be imposed by passing the proper conduit_shape_factors argument.\n\n    (4) shape_factor depends on the physics of the problem, i.e. diffusion-like\n    processes and fluid flow need different shape factors.\n\n    \"\"\"\nreturn electroneutrality(target=target, pore_area=pore_diameter,\n    throat_area=throat_diameter, pore_diffusivity=pore_diffusivity,\n    throat_diffusivity=throat_diffusivity, conduit_lengths=conduit_lengths,\n    conduit_shape_factors=conduit_shape_factors, pore_volume=pore_volume,\n    pore_temperature=pore_temperature, throat_temperature=\n    throat_temperature, pore_valence=pore_valence, throat_valence=\n    throat_valence, pore_concentration=pore_concentration, ions=ions)\n"
}