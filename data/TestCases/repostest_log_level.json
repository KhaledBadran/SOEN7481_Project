{
    "functionName": "test_log_level",
    "className": "TestLogParameters",
    "fileName": "/mit-crpg_&_OpenMOC/tests_&_unit_tests_&_test_log_parameters.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "openmoc.set_log_level(openmoc.DEBUG)\nself.assertEqual(openmoc.get_log_level(), 0)\nopenmoc.set_log_level(openmoc.INFO)\nself.assertEqual(openmoc.get_log_level(), 1)\nopenmoc.set_log_level(openmoc.NORMAL)\nself.assertEqual(openmoc.get_log_level(), 3)\nopenmoc.set_log_level(openmoc.SEPARATOR)\nself.assertEqual(openmoc.get_log_level(), 5)\nopenmoc.set_log_level(openmoc.HEADER)\nself.assertEqual(openmoc.get_log_level(), 6)\nopenmoc.set_log_level(openmoc.TITLE)\nself.assertEqual(openmoc.get_log_level(), 7)\nopenmoc.set_log_level(openmoc.WARNING)\nself.assertEqual(openmoc.get_log_level(), 8)\nopenmoc.set_log_level(openmoc.CRITICAL)\nself.assertEqual(openmoc.get_log_level(), 10)\nopenmoc.set_log_level(openmoc.RESULT)\nself.assertEqual(openmoc.get_log_level(), 11)\nopenmoc.set_log_level(openmoc.UNITTEST)\nself.assertEqual(openmoc.get_log_level(), 12)\nopenmoc.set_log_level(openmoc.ERROR)\nself.assertEqual(openmoc.get_log_level(), 13)\nopenmoc.set_log_level('DEBUG')\nself.assertEqual(openmoc.get_log_level(), 0)\nopenmoc.set_log_level('INFO')\nself.assertEqual(openmoc.get_log_level(), 1)\nopenmoc.set_log_level('NORMAL')\nself.assertEqual(openmoc.get_log_level(), 3)\nopenmoc.set_log_level('SEPARATOR')\nself.assertEqual(openmoc.get_log_level(), 5)\nopenmoc.set_log_level('HEADER')\nself.assertEqual(openmoc.get_log_level(), 6)\nopenmoc.set_log_level('TITLE')\nself.assertEqual(openmoc.get_log_level(), 7)\nopenmoc.set_log_level('WARNING')\nself.assertEqual(openmoc.get_log_level(), 8)\nopenmoc.set_log_level('CRITICAL')\nself.assertEqual(openmoc.get_log_level(), 10)\nopenmoc.set_log_level('RESULT')\nself.assertEqual(openmoc.get_log_level(), 11)\nopenmoc.set_log_level('UNITTEST')\nself.assertEqual(openmoc.get_log_level(), 12)\nopenmoc.set_log_level('ERROR')\nself.assertEqual(openmoc.get_log_level(), 13)\nopenmoc.set_log_level(3)\nself.assertEqual(openmoc.get_log_level(), 3)\n"
}