{
    "functionName": "test_equal_on_not_equal_rng_parameters",
    "className": "TestQueryResponsePayload",
    "fileName": "/OpenKMIP_&_PyKMIP/kmip_&_tests_&_unit_&_core_&_messages_&_payloads_&_test_query.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Test that the equality operator returns False when comparing two\n        QueryResponsePayload structures with different RNG parameters\n        fields.\n        \"\"\"\na = payloads.QueryResponsePayload(rng_parameters=[objects.RNGParameters(\n    rng_algorithm=enums.RNGAlgorithm.FIPS186_2, cryptographic_algorithm=\n    enums.CryptographicAlgorithm.AES, cryptographic_length=256,\n    hashing_algorithm=enums.HashingAlgorithm.SHA_256, drbg_algorithm=enums.\n    DRBGAlgorithm.HASH, recommended_curve=enums.RecommendedCurve.P_192,\n    fips186_variation=enums.FIPS186Variation.GP_X_ORIGINAL,\n    prediction_resistance=True)])\nb = payloads.QueryResponsePayload(rng_parameters=[objects.RNGParameters(\n    rng_algorithm=enums.RNGAlgorithm.FIPS186_2, cryptographic_algorithm=\n    enums.CryptographicAlgorithm.AES, cryptographic_length=128,\n    hashing_algorithm=enums.HashingAlgorithm.SHA_256, drbg_algorithm=enums.\n    DRBGAlgorithm.HASH, recommended_curve=enums.RecommendedCurve.P_192,\n    fips186_variation=enums.FIPS186Variation.GP_X_ORIGINAL,\n    prediction_resistance=False)])\nself.assertFalse(a == b)\nself.assertFalse(b == a)\n"
}