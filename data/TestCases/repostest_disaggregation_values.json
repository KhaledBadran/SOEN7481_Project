{
    "functionName": "test_disaggregation_values",
    "className": null,
    "fileName": "/UW-Hydro_&_MetSim/metsim_&_tests_&_test_metsim.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Tests to make sure values are being generated correctly\"\"\"\nloc = data_locations['binary']\ndata_files = [os.path.join(loc, f) for f in os.listdir(loc)]\nout_vars = ['prec', 'temp', 'shortwave', 'longwave', 'vapor_pressure',\n    'wind', 'rel_humid', 'spec_humid', 'air_pressure']\nout_dir = tempfile.mkdtemp('results')\nparams = {'start': dates['binary'][0], 'stop': dates['binary'][1],\n    'forcing_fmt': 'binary', 'domain_fmt': 'netcdf', 'state_fmt': 'netcdf',\n    'domain': './metsim/data/stehekin.nc', 'state':\n    './metsim/data/state_vic.nc', 'forcing': data_files, 'method': 'mtclim',\n    'scheduler': 'threading', 'time_step': '60', 'out_dir': out_dir,\n    'out_state': os.path.join(out_dir, 'state.nc'), 'out_vars': {n: metsim.\n    metsim.available_outputs[n] for n in out_vars}, 'forcing_vars':\n    in_vars_section['binary'], 'domain_vars': domain_section['binary']}\nloc = 1, 4\ndef check_data(out, good, tol=0.03):\n    assert isinstance(out, pd.DataFrame)\n    for var in ms.params['out_vars'].keys():\n        h = max([good[var].max(), out[var].max()])\n        l = min([good[var].min(), out[var].min()])\n        nrmse = np.sqrt((good[var] - out[var]).pow(2).mean()) / (h - l)\n        print(var, nrmse)\n        assert nrmse < tol\nms = MetSim(params)\nms.run()\nds = ms.open_output()\nout = ds.isel(lat=loc[0], lon=loc[1]).to_dataframe()[out_vars]\ngood = pd.read_table('./metsim/data/validated_48.3125_-120.5625', names=\n    out_vars)\ngood.index = out.index\ncheck_data(out, good)\nds.close()\nparams['time_step'] = '180'\nms = MetSim(params)\nms.run()\nds = ms.open_output()\nout = ds.isel(lat=loc[0], lon=loc[1]).to_dataframe()[out_vars]\ngood = pd.read_table('./metsim/data/three_hourly_48.3125_-120.5625', names=\n    out_vars)\ngood.index = out.index\ncheck_data(out, good, tol=0.2)\nds.close()\n"
}