{
    "functionName": "testPropertyRW",
    "className": null,
    "fileName": "/named-data_&_PyNDN2/examples_&_test_getters_setters.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "if not hasattr(obj, p):\n    return False, type(obj).__name__, 'No attribute', p\ncapitalP = p[0].upper() + p[1:]\ntry:\n    getter = getattr(obj, 'get' + capitalP)\nexcept:\n    return False, type(obj).__name__, 'No getter .get' + capitalP\ntry:\n    setter = getattr(obj, 'set' + capitalP)\nexcept:\n    return False, type(obj).__name__, 'No setter .set' + capitalP\nif not onlyCheckPresence:\n    if len(vals) < 2:\n        raise RuntimeError(\n            'Need two values for vals in testPropertyRW, got fewer')\n    try:\n        v = vals[0]\n        setter(v)\n        v1 = getter()\n        v2 = getattr(obj, p)\n        if hasattr(v1, 'equals'):\n            if not v1.equals(v):\n                return False, type(obj\n                    ).__name__, 'Setter then getter failed using equals', p, v, v1\n            if not v2.equals(v):\n                return (False, type(obj).__name__,\n                    'Setter then property get failed using equals', p, v, v2)\n        else:\n            if v1 != v:\n                return False, type(obj\n                    ).__name__, 'Setter then getter failed', p, v, v1\n            if v2 != v:\n                return False, type(obj\n                    ).__name__, 'Setter then property get failed', p, v, v2\n        v = vals[1]\n        setattr(obj, p, v)\n        v1 = getter()\n        v2 = getattr(obj, p)\n        if hasattr(v1, 'equals'):\n            if not v1.equals(v):\n                return (False, type(obj).__name__,\n                    'Property set then getter failed using equals()', p, v, v1)\n            if not v2.equals(v):\n                return (False, type(obj).__name__,\n                    'Property set then property get failed using equals()',\n                    p, v, v2)\n        else:\n            if v1 != v:\n                return False, type(obj\n                    ).__name__, 'Property set then getter failed', p, v, v1\n            if v2 != v:\n                return False, type(obj\n                    ).__name__, 'Property set then property get failed', p, v, v2\n    except Exception as e:\n        return False, type(obj).__name__, 'Exception raised', e\nreturn True, type(obj).__name__, vals\n"
}