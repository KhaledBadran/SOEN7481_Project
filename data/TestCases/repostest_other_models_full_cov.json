{
    "functionName": "test_other_models_full_cov",
    "className": null,
    "fileName": "/GPflow_&_GPflow/tests_&_gpflow_&_models_&_test_model_predict.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "covar_shape = output_dim, Ntest, Ntest\nX, Y = rng.randn(N, input_dim), rng.randn(N, output_dim)\nZ = InducingPoints(rng.randn(M, input_dim))\nXtest = rng.randn(Ntest, input_dim)\nmodel_gp = model_setup.get_model(Z, num_latent_gps=output_dim, data=(X, Y))\nmu1, var = model_gp.predict_f(Xtest, full_cov=False)\nmu2, covar = model_gp.predict_f(Xtest, full_cov=True)\nassert np.allclose(mu1, mu2, atol=1e-10)\nassert covar.shape == covar_shape\nassert var.shape == (Ntest, output_dim)\nfor i in range(output_dim):\n    assert np.allclose(var[:, (i)], np.diag(covar[(i), :, :]))\npytest.mark.parametrize('model_setup', model_setups)pytest.mark.parametrize('input_dim', [3])pytest.mark.parametrize('output_dim', [2])pytest.mark.parametrize('N', [20])pytest.mark.parametrize('Ntest', [30])pytest.mark.parametrize('M', [5])"
}