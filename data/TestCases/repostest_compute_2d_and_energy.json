{
    "functionName": "test_compute_2d_and_energy",
    "className": "TestsRNADetection",
    "fileName": "/Sung-Huan_&_ANNOgesic/tests_&_test_srna.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "sr.extract_energy = self.mock.mock_extract_energy\nsr.change_format = self.mock.mock_change_format\nself.srna._run_replot = self.mock.mock_run_replot\nself.srna._convert_pdf = self.mock.mock_convert_pdf\nself.srna._run_mountain = self.mock.mock_run_mountain\nsec_path = os.path.join(self.out, 'figs')\nos.mkdir(sec_path)\nos.mkdir(os.path.join(sec_path, 'sec_plots'))\nos.mkdir(os.path.join(sec_path, 'dot_plots'))\nos.mkdir(os.path.join(sec_path, 'mountain_plots'))\ntmp_paths = {'dot': self.out, 'sec': self.fastas, 'tmp': self.tsss, 'main':\n    self.test_folder}\ngen_file(os.path.join(self.fastas, 'tmp/test.fa'), \"\"\">test\nAAATTTGGGCCC\"\"\")\ngen_file(os.path.join(self.out, 'tmp_basic_test'), self.example.srna_file)\ngen_file(os.path.join(self.out, 'tmp_energy_test'), 'test')\nlog = open(os.path.join(self.test_folder, 'test.log'), 'w')\nargs = self.mock_args.mock()\nargs.out_folder = self.out\nargs.fastas = self.fastas\nargs.rnafold = 'test'\nargs.relplot_pl = 'test'\nargs.mountain_pl = 'test'\nargs.mountain = True\nargs.ps2pdf14_path = 'test'\nself.srna._compute_2d_and_energy(args, ['test'], log)\ndatas = import_data(os.path.join(self.out, 'tmp_basic_test'))\nself.assertEqual('\\n'.join(datas), 'test')\n"
}