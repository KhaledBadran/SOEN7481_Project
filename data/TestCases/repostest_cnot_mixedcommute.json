{
    "functionName": "test_cnot_mixedcommute",
    "className": "Test_commutation",
    "fileName": "/QE-Lab_&_OpenQL/tests_&_test_commutation.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "config_fn = os.path.join(curdir, 'test_179.json')\nplatf = ql.Platform('starmon', config_fn)\nql.set_option('scheduler', 'ALAP')\nql.set_option('scheduler_post179', 'yes')\nql.set_option('scheduler_commute', 'yes')\nnqubits = 7\nk = ql.Kernel('aKernel', platf, nqubits)\nfor j in range(7):\n    k.gate('x', [j])\nk.gate('cnot', [0, 2])\nk.gate('cnot', [0, 3])\nk.gate('cnot', [1, 3])\nk.gate('cnot', [1, 4])\nk.gate('cnot', [2, 0])\nk.gate('cnot', [2, 5])\nk.gate('cnot', [3, 0])\nk.gate('cnot', [3, 1])\nk.gate('cnot', [3, 5])\nk.gate('cnot', [3, 6])\nk.gate('cnot', [4, 1])\nk.gate('cnot', [4, 6])\nk.gate('cnot', [5, 2])\nk.gate('cnot', [5, 3])\nk.gate('cnot', [6, 3])\nk.gate('cnot', [6, 4])\nfor j in range(7):\n    k.gate('x', [j])\nsweep_points = [2]\np = ql.Program('test_cnot_mixedcommute', platf, nqubits)\np.set_sweep_points(sweep_points)\np.add_kernel(k)\np.compile()\ngold_fn = rootDir + '/golden/' + p.name + '_scheduled.qasm'\nqasm_fn = os.path.join(output_dir, p.name + '_scheduledqasmwriter_out.qasm')\nself.assertTrue(file_compare(qasm_fn, gold_fn))\n"
}