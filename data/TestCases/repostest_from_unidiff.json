{
    "functionName": "test_from_unidiff",
    "className": "PatchTestCase",
    "fileName": "/squaresLab_&_BugZoo/test_&_test_patch.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "from_s = \"\"\"\n        diff --git a/file-two.txt b/file-two.txt\n        new file mode 100644\n        index 0000000..2990e5b\n        --- /dev/null\n        +++ b/file-two.txt\n        @@ -0,0 +1,2 @@\n        +This is file two.\n        +How do you do?\n        diff --git a/testfile.c b/testfile.c\n        index f50a1fc..60ed6ff 100644\n        --- a/testfile.c\n        +++ b/testfile.c\n        @@ -6,6 +6,8 @@\n         int testfun(int a, int b)\n           x = a + b;\n           x *= x;\n         \n        +  int z = 10000;\n        +\n           int y;\n           y = x * 2;\n        \"\"\"\nfrom_s = dedent(from_s)[1:-1]\nlines = from_s.split('\\n')\nexpected_s = '\\n'.join(lines[3:8] + lines[10:])\npatch = Patch.from_unidiff(from_s)\nself.assertEqual(str(patch), expected_s)\nfrom_s = \"\"\"\n        Index: src/joblist.c\n        ===================================================================\n        --- src/joblist.c\t(revision 1794)\n        +++ src/joblist.c\t(working copy)\n        @@ -7,7 +7,7 @@\n         \n         int joblist_append(server *srv, connection *con) {\n           if (con->in_joblist) return 0;\n        -  con->in_joblist = 1;\n        +  con->in_joblist = 10000;\n         \n           if (srv->joblist->size == 0) {\n             srv->joblist->size  = 16;\n        @@ -19,7 +19,7 @@\n         \n           srv->joblist->ptr[srv->joblist->used++] = con;\n         \n        -  return 0;\n        +  return 3300;\n         }\n         \n         void joblist_free(server *srv, connections *joblist) {\n        Index: tests/core-request.t\n        ===================================================================\n        --- tests/core-request.t\t(revision 2792)\n        +++ tests/core-request.t\t(working copy)\n        @@ -246,7 +246,7 @@\n         ok($tf->handle_http($t) == 0, 'Content-Type - image/jpeg');\n         \n         $t->{REQUEST}  = ( <<EOF\n        - GET /image.JPG HTTP/1.0\n        + GET /image.jpg HTTP/1.0\n         EOF\n         );\n         $t->{RESPONSE} = [ { 'HTTP-Protocol' => 'HTTP/1.0', 'HTTP-Status' => 200, 'Content-Type' => 'image/jpeg' } ];\n        \"\"\"\nfrom_s = dedent(from_s)[1:-1]\nlines = from_s.split('\\n')\nexpected_s = '\\n'.join(lines[2:22] + lines[24:])\npatch = Patch.from_unidiff(from_s)\nself.assertEqual(str(patch), expected_s)\n"
}