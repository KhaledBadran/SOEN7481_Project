{
    "functionName": "test_surface",
    "className": null,
    "fileName": "/nipy_&_PySurfer/surfer_&_tests_&_test_utils.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Test IO for Surface class\"\"\"\nextra, subj_dir = utils._get_extra()\nfor subjects_dir in [None, subj_dir]:\n    surface = utils.Surface('fsaverage', 'lh', 'inflated', subjects_dir=\n        subjects_dir)\n    surface.load_geometry()\n    surface.load_label('BA1' + extra)\n    surface.load_curvature()\n    xfm = np.eye(4)\n    xfm[:3, (-1)] += 2\n    x = surface.x\n    surface.apply_xfm(xfm)\n    x_ = surface.x\n    assert_allclose(x + 2, x_)\n    nn = _slow_compute_normals(surface.coords, surface.faces[:10000])\n    nn_fast = utils._compute_normals(surface.coords, surface.faces[:10000])\n    assert_allclose(nn, nn_fast)\n    assert 50 < np.linalg.norm(surface.coords, axis=-1).mean() < 100\nsurface = utils.Surface('fsaverage', 'lh', 'inflated', subjects_dir=\n    subj_dir, units='m')\nsurface.load_geometry()\nassert 0.05 < np.linalg.norm(surface.coords, axis=-1).mean() < 0.1\nutils.requires_fsaverage()"
}