{
    "functionName": "test_predict_proba_with_ds",
    "className": null,
    "fileName": "/Menelau_&_DESlib/deslib_&_tests_&_des_&_test_des_mi.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "query = np.array([-1, 1])\npool_classifiers = create_pool_classifiers + create_pool_classifiers\ndesmi_test = DESMI(pool_classifiers, DFP=True)\nDFP_mask = np.ones((1, 6))\nselected_indices = np.array([[0, 1, 5]])\ndesmi_test.estimate_competence = MagicMock(return_value=np.ones(6))\ndesmi_test.select = MagicMock(return_value=selected_indices)\ndesmi_test.n_classes = 2\nexpected = np.array([0.61, 0.39])\npredictions = []\nprobabilities = []\nfor clf in desmi_test.pool_classifiers:\n    predictions.append(clf.predict(query)[0])\n    probabilities.append(clf.predict_proba(query)[0])\nquery = np.atleast_2d(query)\npredictions = np.atleast_2d(predictions)\nprobabilities = np.array(probabilities)\nprobabilities = np.expand_dims(probabilities, axis=0)\npredicted_proba = desmi_test.predict_proba_with_ds(query, predictions,\n    probabilities, DFP_mask=DFP_mask)\nassert np.isclose(predicted_proba, expected, atol=0.01).all()\n"
}