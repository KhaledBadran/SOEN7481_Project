{
    "functionName": "run_out",
    "className": null,
    "fileName": "/PyAbel_&_PyAbel/abel_&_tests_&_test_rbasex.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"\n    Test some output shapes.\n    \"\"\"\nsigma = 5.0\nstep = int(6 * sigma)\nrmax = (2 + 2) * step\nsize = 2 * rmax + 1\nx = np.arange(float(size)) - rmax\ny = rmax - np.arange(float(size))[:, (None)]\nr = np.sqrt(x ** 2 + y ** 2)\nr[rmax, rmax] = np.inf\nc = y / r\nr[rmax, rmax] = 0\ndef peak(i):\n    n = i if odd else 2 * i\n    return c ** n * np.exp(-(r - (i + 1) * step) ** 2 / (2 * sigma ** 2))\nsrc = peak(0) + peak(1)\nabel = Transform(src, direction='forward', method='hansenlaw',\n    transform_options={'hold_order': 1}).transform\nparam = '-> odd = {}, '.format(odd)\nproj, _ = rbasex_transform(src, rmax=rmax - step, odd=odd, direction=\n    'forward', out='same')\nassert_allclose(proj, abel, rtol=0.005, atol=0.2, err_msg=param +\n    'rmax < MIN, out = same')\ncrop = slice(3 * step, -step // 2), slice(3 * step, -step)\nproj, _ = rbasex_transform(src[crop], origin=(step, step), odd=odd,\n    direction='forward', out='same')\nassert_allclose(proj, abel[crop], rtol=0.005, atol=0.2, err_msg=param +\n    'rmax = HOR < VER, out = same')\ncrop = slice(step, -3 * step), slice(3 * step, -step // 2)\nproj, _ = rbasex_transform(src[crop], origin=(3 * step, step), odd=odd,\n    direction='forward', out='same')\nassert_allclose(proj, abel[crop], rtol=0.0003, atol=0.3, err_msg=param +\n    'rmax = VER < HOR, out = same')\ncrop = slice(3 * step, -step // 2), slice(3 * step, -step)\nproj, _ = rbasex_transform(src[crop], origin=(step, step), rmax='MAX', odd=\n    odd, direction='forward', out='same')\nassert_allclose(proj, abel[crop], rtol=0.005, atol=0.2, err_msg=param +\n    'rmax = VER > HOR, out = same')\ncrop = slice(step, -3 * step), slice(3 * step, -step // 2)\nproj, _ = rbasex_transform(src[crop], origin=(3 * step, step), rmax='MAX',\n    odd=odd, direction='forward', out='same')\nassert_allclose(proj, abel[crop], rtol=0.0003, atol=0.3, err_msg=param +\n    'rmax = HOR > VER, out = same')\ncrop = slice(3 * step, -step), slice(3 * step, -step)\nproj, _ = rbasex_transform(src[crop], origin=(step, step), rmax=rmax, odd=\n    odd, direction='forward', out='full')\nassert_allclose(proj, abel, rtol=0.002, atol=0.3, err_msg=param +\n    'rmax = rmax, out = full')\n"
}