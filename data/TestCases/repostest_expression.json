{
    "functionName": "test_expression",
    "className": "LexerTest",
    "fileName": "/whiteclover_&_Choco/test_&_test_lexer.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "template = \"\"\"\n        this is some ${text} and this is ${textwith | escapes, moreescapes}\n        <%def name=\"hi()\">\n            give me ${foo()} and ${bar()}\n        </%def>\n        ${hi()}\n\"\"\"\nnodes = Lexer(template).parse()\nself._compare(nodes, TemplateNode({}, [Text(\"\"\"\n        this is some \"\"\", (\n    1, 1)), Expression('text', [], (2, 22)), Text(' and this is ', (2, 29)),\n    Expression('textwith ', ['escapes', 'moreescapes'], (2, 42)), Text(\n    '\\n        ', (2, 76)), DefTag('def', {'name': 'hi()'}, (3, 9), [Text(\n    \"\"\"\n            give me \"\"\", (3, 27)), Expression('foo()', [], (4, 21)),\n    Text(' and ', (4, 29)), Expression('bar()', [], (4, 34)), Text(\n    '\\n        ', (4, 42))]), Text('\\n        ', (5, 16)), Expression(\n    'hi()', [], (6, 9)), Text('\\n', (6, 16))]))\n"
}