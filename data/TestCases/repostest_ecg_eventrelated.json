{
    "functionName": "test_ecg_eventrelated",
    "className": null,
    "fileName": "/neuropsychology_&_NeuroKit/tests_&_tests_ecg.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "ecg, info = nk.ecg_process(nk.ecg_simulate(duration=20))\nepochs = nk.epochs_create(ecg, events=[5000, 10000, 15000], epochs_start=-\n    0.1, epochs_end=1.9)\necg_eventrelated = nk.ecg_eventrelated(epochs)\nassert np.alltrue(np.array(ecg_eventrelated['ECG_Rate_Min']) < np.array(\n    ecg_eventrelated['ECG_Rate_Mean']))\nassert np.alltrue(np.array(ecg_eventrelated['ECG_Rate_Mean']) < np.array(\n    ecg_eventrelated['ECG_Rate_Max']))\nassert len(ecg_eventrelated['Label']) == 3\nwith pytest.warns(nk.misc.NeuroKitWarning, match=\n    '.*does not have an `ECG_Phase_Artrial`.*'):\n    first_epoch_key = list(epochs.keys())[0]\n    first_epoch_copy = epochs[first_epoch_key].copy()\n    del first_epoch_copy['ECG_Phase_Atrial']\n    nk.ecg_eventrelated({**epochs, first_epoch_key: first_epoch_copy})\nwith pytest.warns(nk.misc.NeuroKitWarning, match=\n    '.*does not have an.*`ECG_Phase_Ventricular`'):\n    first_epoch_key = list(epochs.keys())[0]\n    first_epoch_copy = epochs[first_epoch_key].copy()\n    del first_epoch_copy['ECG_Phase_Ventricular']\n    nk.ecg_eventrelated({**epochs, first_epoch_key: first_epoch_copy})\nwith pytest.warns(nk.misc.NeuroKitWarning, match=\n    '.*does not have an `ECG_Quality`.*'):\n    first_epoch_key = list(epochs.keys())[0]\n    first_epoch_copy = epochs[first_epoch_key].copy()\n    del first_epoch_copy['ECG_Quality']\n    nk.ecg_eventrelated({**epochs, first_epoch_key: first_epoch_copy})\nwith pytest.warns(nk.misc.NeuroKitWarning, match=\n    '.*does not have an `ECG_Rate`.*'):\n    first_epoch_key = list(epochs.keys())[0]\n    first_epoch_copy = epochs[first_epoch_key].copy()\n    del first_epoch_copy['ECG_Rate']\n    nk.ecg_eventrelated({**epochs, first_epoch_key: first_epoch_copy})\nwith pytest.warns(nk.misc.NeuroKitWarning, match=\n    '.*duration of your epochs seems.*'):\n    first_epoch_key = list(epochs.keys())[0]\n    first_epoch_copy = epochs[first_epoch_key].copy()\n    first_epoch_copy.index = range(len(first_epoch_copy))\n    nk.ecg_eventrelated({**epochs, first_epoch_key: first_epoch_copy})\n"
}