{
    "functionName": "testGetResults",
    "className": null,
    "fileName": "/muma7490_&_PyDIAMONDS-Background/tests_&_test_Background.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "def testGetParameters():\n    dim = valueObject.model.dimension\n    assert len(valueObject.parameters) == dim\n    for i in range(0, dim - 1):\n        assert isinstance(valueObject.parameters[i], ndarray)\n        assert isinstance(valueObject.parameters[i], ndarray)\n        assert len(valueObject.parameters[i])\ndef testGenericProperty(property):\n    assert isinstance(property, ndarray)\n    assert len(property) > 1\ndef testGetEvidenceInformation():\n    assert isinstance(valueObject.evidenceInformation, dict)\n    assert valueObject.evidenceInformation[SkillingsLog] != 0\n    assert valueObject.evidenceInformation[SkillingsInformationGain] != 0\n    assert valueObject.evidenceInformation[SkillingsErrorLog] != 0\ndef testGetPosteriorProbabilty():\n    assert isinstance(valueObject.posteriorProbability, ndarray)\n    assert len(valueObject.posteriorProbability) > 1\ndef testGetParameterSummary():\n    assert isinstance(valueObject.parameterSummary, ndarray)\n    assert len(valueObject.parameterSummary) == 7\n    for i in range(0, len(valueObject.parameterSummary) - 1):\n        assert len(valueObject.parameterSummary[i]\n            ) == valueObject.model.dimension\ndef testGetMarginalDistributions():\n    \"\"\"\n            assert isinstance(valueObject.marginalDistributions,ndarray)\n            assert len(valueObject.marginalDistributions) == 2\n            \"\"\"\n    with pytest.raises(NotImplementedError):\n        valueObject.marginalDistributions\ntestGetParameters()\ntestGenericProperty(valueObject.logLikelihood)\ntestGenericProperty(valueObject.logWeights)\ntestGetEvidenceInformation()\ntestGetPosteriorProbabilty()\ntestGetParameterSummary()\ntestGetMarginalDistributions()\n"
}