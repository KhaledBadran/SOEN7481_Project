{
    "functionName": "get_isoclust_bruteforce",
    "className": null,
    "fileName": "/MetaSys-LISBP_&_IsoCor/isocor_&_tests_&_test_isotopic_cluster_HighRes.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"Return the isotopic cluster for a compound using a brute-force method.\n\n    This method is based on systematic computation of all isotopic species of the molecule.\n    It should be easier to understand than the optimized version but is much slower.\n    \"\"\"\ndef npermutations(v):\n    dem = 1\n    for x in set(v):\n        dem *= math.factorial(v.count(x))\n    return math.factorial(len(v)) / dem\nisotopic_cluster = {}\nelement_blocks = []\nelements_order = []\nfor element in formula:\n    n_isotopes = len(data_iso[element]['mass'])\n    iter_iso_combi = it.combinations_with_replacement(range(n_isotopes),\n        formula[element])\n    elements_order.append(element)\n    element_blocks.append(iter_iso_combi)\niter_isotopologues = it.product(*element_blocks)\nfor isotopologue in iter_isotopologues:\n    mass_by_block = []\n    for idx_element, combi_isotopes in enumerate(isotopologue):\n        element = elements_order[idx_element]\n        isotope_mass = [data_iso[element]['mass'][idx_iso] for idx_iso in\n            combi_isotopes]\n        mass_by_block.append(sum(isotope_mass))\n    mass_isotopologue = sum(mass_by_block)\n    n_isotopomers_by_block = []\n    listof_block_proba = []\n    for idx_element, combi_isotopes in enumerate(isotopologue):\n        n_isotopomers_by_block.append(npermutations(combi_isotopes))\n        element = elements_order[idx_element]\n        block_proba = np.prod([data_iso[element]['abundance'][idx_iso] for\n            idx_iso in combi_isotopes])\n        listof_block_proba.append(block_proba)\n    proba_isotopologue = np.prod(n_isotopomers_by_block) * np.prod(\n        listof_block_proba)\n    assert mass_isotopologue not in isotopic_cluster\n    isotopic_cluster[mass_isotopologue] = proba_isotopologue\nreturn isotopic_cluster\n"
}