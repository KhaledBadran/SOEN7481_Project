{
    "functionName": "test_next_hyperparam",
    "className": null,
    "fileName": "/Accenture_&_AmpliGraph/tests_&_ampligraph_&_evaluation_&_test_protocol.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "param_grid = {'batches_count': [50], 'epochs': [4000], 'k': [100, 200],\n    'eta': [5, 10, 15], 'loss': ['pairwise', 'nll'], 'loss_params': {\n    'margin': [2]}, 'embedding_model_params': {}, 'regularizer': ['LP',\n    None], 'regularizer_params': {'p': [1, 3], 'lambda': [0.0001, 1e-05]},\n    'optimizer': ['adagrad', 'adam'], 'optimizer_params': {'lr': [0.01, \n    0.001, 0.0001]}, 'verbose': [False], 'model_name': ['ComplEx']}\ncombinations = [i for i in _next_hyperparam(param_grid)]\nassert len(combinations) == 360\nassert len(set(frozenset(_flatten_nested_keys(i).items()) for i in\n    combinations)) == 360\nassert all(type(d) is dict for d in combinations)\nassert all(all(type(k) is str for k in d.keys()) for d in combinations)\n"
}