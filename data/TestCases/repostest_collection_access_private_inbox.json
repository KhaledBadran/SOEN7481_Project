{
    "functionName": "test_collection_access_private_inbox",
    "className": null,
    "fileName": "/EclecticIQ_&_OpenTAXII/tests_&_test_auth.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "url, headers = prepare_url_headers(version, https, 'johnny', 'johnny')\nrequest = prepare_inbox_message(version, dest_collection='collection-1',\n    blocks=[make_inbox_content(version)])\nresponse = client.post(INBOX_CLOSED['address'], data=request.to_xml(),\n    headers=headers, base_url=url)\nassert response.status_code == 200\nassert is_headers_valid(response.headers, version, https)\nmessage = as_tm(version).get_message_from_xml(response.data)\nassert message.message_type == 'Status_Message'\nif version == 11:\n    assert message.status_type == 'UNAUTHORIZED'\n    assert message.message == 'User can not write to collection collection-1'\nelse:\n    assert message.status_type == 'SUCCESS'\nrequest = prepare_inbox_message(version, dest_collection='collection-2',\n    blocks=[make_inbox_content(version)])\nresponse = client.post(INBOX_CLOSED['address'], data=request.to_xml(),\n    headers=headers, base_url=url)\nassert response.status_code == 200\nassert is_headers_valid(response.headers, version, https)\nmessage = as_tm(version).get_message_from_xml(response.data)\nassert message.message_type == 'Status_Message'\nassert message.status_type == 'SUCCESS'\nurl, headers = prepare_url_headers(version, https, 'wally', 'wally')\nrequest = prepare_inbox_message(version, dest_collection='collection-2',\n    blocks=[make_inbox_content(version)])\nresponse = client.post(INBOX_CLOSED['address'], data=request.to_xml(),\n    headers=headers, base_url=url)\nassert response.status_code == 200\nassert is_headers_valid(response.headers, version, https)\nmessage = as_tm(version).get_message_from_xml(response.data)\nassert message.message_type == 'Status_Message'\nassert message.status_type == 'SUCCESS'\npytest.mark.parametrize('https', [True, False])pytest.mark.parametrize('version', [11, 10])"
}