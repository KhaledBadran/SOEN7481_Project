{
    "functionName": "extractData",
    "className": null,
    "fileName": "/jakob-lass_&_MJOLNIR/MJOLNIR_&_Data_&_DataFile.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "if not isinstance(files, list):\n    files = [files]\nI = []\nNorm = []\nMonitor = []\na3 = []\na4 = []\na3Off = []\na4Off = []\nEi = []\ninstrumentCalibrationEf = []\ninstrumentCalibrationA4 = []\ninstrumentCalibrationEdges = []\nif files[0].type == 'nxs':\n    qx = []\n    qy = []\n    energy = []\n    H = []\n    K = []\n    L = []\nscanParameters = []\nscanParamValue = []\nscanParamUnit = []\nmask = []\nfor datafile in files:\n    I.append(datafile.I)\n    if datafile.type == 'nxs':\n        qx.append(datafile.qx)\n        qy.append(datafile.qy)\n        energy.append(datafile.energy)\n        Norm.append(datafile.Norm)\n        H.append(datafile.h)\n        K.append(datafile.k)\n        L.append(datafile.l)\n    mask.append(datafile.mask)\n    scanParameters.append(datafile.scanParameters)\n    scanParamValue.append(datafile.scanValues)\n    scanParamUnit.append(datafile.scanUnits)\n    Monitor.append(datafile.Monitor)\n    if np.array(datafile.A3Off).shape is ():\n        datafile.A3Off = 0.0\n    a3.append(datafile.A3 - datafile.A3Off)\n    a3Off.append(datafile.A3Off)\n    if np.array(datafile.A4Off).shape is ():\n        datafile.A4Off = [0.0]\n    a4.append(datafile.A4 - datafile.A4Off)\n    a4Off.append(datafile.A4Off)\n    Ei.append(datafile.Ei)\n    instrumentCalibrationEf.append(datafile.instrumentCalibrationEf)\n    instrumentCalibrationA4.append(datafile.instrumentCalibrationA4)\n    instrumentCalibrationEdges.append(datafile.instrumentCalibrationEdges)\nI = Marray(I)\nif files[0].type == 'nxs':\n    qx = Marray(qx)\n    qy = Marray(qy)\n    H = Marray(H)\n    K = Marray(K)\n    L = Marray(L)\n    energy = Marray(energy)\n    Norm = Marray(Norm)\nelse:\n    Norm = Marray(Norm)\nMonitor = Marray(Monitor)\na3 = Marray(a3)\na4 = Marray(a4)\na3Off = Marray(a3Off)\na4Off = Marray(a4Off)\ninstrumentCalibrationEf = np.array(instrumentCalibrationEf)\ninstrumentCalibrationA4 = np.array(instrumentCalibrationA4)\ninstrumentCalibrationEdges = np.array(instrumentCalibrationEdges)\nEi = Marray(Ei)\nif files[0].type == 'nxs':\n    return (I, qx, qy, energy, Norm, Monitor, a3, a3Off, a4, a4Off,\n        instrumentCalibrationEf, instrumentCalibrationA4,\n        instrumentCalibrationEdges, Ei, scanParameters, scanParamValue,\n        scanParamUnit, H, K, L, mask)\nelse:\n    return (I, Monitor, a3, a3Off, a4, a4Off, instrumentCalibrationEf,\n        instrumentCalibrationA4, instrumentCalibrationEdges, Ei,\n        scanParameters, scanParamValue, scanParamUnit, mask)\n"
}