{
    "functionName": "test_get_quote_rh_no_filter",
    "className": "TestGetQuoteRH",
    "fileName": "/EVEprosper_&_ProsperDatareader/tests_&_test_stocks.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"look at all possible summary keys\"\"\"\nno_filter = stocks.get_quote_rh(self.good_ticker, keys=None)\nassert isinstance(no_filter, pd.DataFrame)\nassert len(no_filter) == 1\nall_keys = ['adjusted_previous_close', 'ask_price', 'ask_size',\n    'average_volume', 'bid_price', 'bid_size', 'bloomberg_unique', 'ceo',\n    'country', 'current_price', 'day_trade_ratio', 'description',\n    'dividend_yield', 'fundamentals', 'has_traded', 'headquarters_city',\n    'headquarters_state', 'high', 'high_52_weeks', 'id', 'instrument',\n    'is_open', 'last_extended_hours_trade_price', 'last_trade_price',\n    'last_trade_price_source', 'list_date', 'low', 'low_52_weeks',\n    'maintenance_ratio', 'margin_initial_ratio', 'market', 'market_cap',\n    'min_tick_size', 'name', 'num_employees', 'open', 'pe_ratio',\n    'previous_close', 'previous_close_date', 'quote', 'simple_name',\n    'splits', 'state', 'symbol', 'tradeable', 'tradability',\n    'trading_halted', 'type', 'updated_at', 'url', 'volume', 'year_founded',\n    'change_pct', 'shares_outstanding', 'sector', 'average_volume_2_weeks',\n    'tradable_chain_id']\nassert set(list(no_filter.columns.values)) == set(all_keys)\n"
}