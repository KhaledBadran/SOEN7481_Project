{
    "functionName": "test_gen_recordings_bursting",
    "className": "TestGenerators",
    "fileName": "/alejoe91_&_MEArec/MEArec_&_tests_&_test_generators.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "print('Test recording generation - shape_mod')\nrates = [30, 50]\ntypes = ['E', 'I']\nnum_chan = self.num_chan\nn_neurons = len(rates)\nrec_params = mr.get_default_recordings_params()\nrec_params['spiketrains']['rates'] = rates\nrec_params['spiketrains']['types'] = types\nrec_params['spiketrains']['duration'] = 3\nn_jitter = 4\nrec_params['templates']['n_jitters'] = n_jitter\nrec_params['recordings']['modulation'] = 'electrode'\nrec_params['recordings']['bursting'] = True\nrec_params['recordings']['shape_mod'] = True\nrec_params['recordings']['sync_rate'] = 0.2\nrec_params['recordings']['overlap'] = True\nrec_params['recordings']['extract_waveforms'] = True\nrec_params['templates']['min_dist'] = 1\nrec_params['templates']['min_amp'] = 0\nrecgen_burst = mr.gen_recordings(params=rec_params, tempgen=self.tempgen,\n    verbose=False)\nrecgen_burst.extract_waveforms()\nassert recgen_burst.recordings.shape[0] == num_chan\nassert len(recgen_burst.spiketrains) == n_neurons\nassert recgen_burst.channel_positions.shape == (num_chan, 3)\nassert recgen_burst.templates.shape[:3] == (n_neurons, n_jitter, num_chan)\nassert recgen_burst.voltage_peaks.shape == (n_neurons, num_chan)\nassert len(recgen_burst.spike_traces) == n_neurons\ndel recgen_burst\nrec_params['recordings']['modulation'] = 'template'\nrec_params['recordings']['n_bursting'] = 2\nrecgen_burst = mr.gen_recordings(params=rec_params, tempgen=self.tempgen,\n    verbose=False)\nrecgen_burst.extract_waveforms()\nassert recgen_burst.recordings.shape[0] == num_chan\nassert len(recgen_burst.spiketrains) == n_neurons\nassert recgen_burst.channel_positions.shape == (num_chan, 3)\nassert recgen_burst.templates.shape[:3] == (n_neurons, n_jitter, num_chan)\nassert recgen_burst.voltage_peaks.shape == (n_neurons, num_chan)\nassert len(recgen_burst.spike_traces) == n_neurons\ndel recgen_burst\n"
}