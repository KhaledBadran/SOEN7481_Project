{
    "functionName": "test_get_attribute_list",
    "className": "TestProxyKmipClient",
    "fileName": "/OpenKMIP_&_PyKMIP/kmip_&_tests_&_unit_&_pie_&_test_client.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Test that the attribute names of a managed object can be retrieved\n        with proper input.\n        \"\"\"\nuid = 'b4faee10-aa2a-4446-8ad4-0881f3422959'\nattribute_names = ['Cryptographic Length', 'Cryptographic Algorithm',\n    'State', 'Digest', 'Lease Time', 'Initial Date', 'Unique Identifier',\n    'Name', 'Cryptographic Usage Mask', 'Object Type',\n    'Contact Information', 'Last Change Date']\nresult = results.GetAttributeListResult(contents.ResultStatus(enums.\n    ResultStatus.SUCCESS), uid=uid, names=attribute_names)\nwith ProxyKmipClient() as client:\n    client.proxy.get_attribute_list.return_value = result\n    result = client.get_attribute_list(uid)\n    client.proxy.get_attribute_list.assert_called_with(uid)\n    self.assertIsInstance(result, list)\n    six.assertCountEqual(self, attribute_names, result)\nmock.patch('kmip.pie.client.KMIPProxy', mock.MagicMock(spec_set=KMIPProxy))"
}