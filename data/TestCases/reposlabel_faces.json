{
    "functionName": "label_faces",
    "className": null,
    "fileName": "/pmeal_&_OpenPNM/openpnm_&_topotools_&_topotools.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"\n    Finds pores on the surface of the network and labels them according to\n    whether they are on the *top*, *bottom*, etc.  This function assumes the\n    network is cubic in shape (i.e. with six flat sides)\n\n    Parameters\n    ----------\n    network : OpenPNM Network object\n        The network to apply the labels\n\n    tol : scalar\n        The tolerance for defining what counts as a surface pore, which is\n        specifically meant for random networks.  All pores with ``tol`` of\n        the maximum or minimum along each axis are counts as pores.  The\n        default is 0.\n\n    label : string\n        An identifying label to isolate the pores on the faces of the network.\n        The default is 'surface'.  Surface pores can be found using\n        ``find_surface_pores``.\n\n    \"\"\"\nlabel = label.split('.', 1)[-1]\nif 'pore.' + label not in network.labels():\n    find_surface_pores(network, label=label)\nPsurf = network['pore.' + label]\ncrds = network['pore.coords']\nxmin, xmax = np.amin(crds[:, (0)]), np.amax(crds[:, (0)])\nxspan = xmax - xmin\nymin, ymax = np.amin(crds[:, (1)]), np.amax(crds[:, (1)])\nyspan = ymax - ymin\nzmin, zmax = np.amin(crds[:, (2)]), np.amax(crds[:, (2)])\nzspan = zmax - zmin\ndims = dimensionality(network)\nif dims[0]:\n    network['pore.front'] = (crds[:, (0)] <= xmin + tol * xspan) * Psurf\n    network['pore.back'] = (crds[:, (0)] >= xmax - tol * xspan) * Psurf\nif dims[1]:\n    network['pore.left'] = (crds[:, (1)] <= ymin + tol * yspan) * Psurf\n    network['pore.right'] = (crds[:, (1)] >= ymax - tol * yspan) * Psurf\nif dims[2]:\n    network['pore.top'] = (crds[:, (2)] >= zmax - tol * zspan) * Psurf\n    network['pore.bottom'] = (crds[:, (2)] <= zmin + tol * zspan) * Psurf\n"
}