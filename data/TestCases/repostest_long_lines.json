{
    "functionName": "test_long_lines",
    "className": "TestInsertCode",
    "fileName": "/fabioz_&_PyDev.Debugger/tests_python_&_test_bytecode_modification.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "self.original_stdout = sys.stdout\nsys.stdout = StringIO()\ntry:\n\n    def foo():\n        a = 1\n        b = (1 if a > 1 else 2 if a > 0 else 3 if a > 4 else 23 if a > 1 else\n            2 if a > 0 else 3 if a > 4 else 23 if a > 1 else 2 if a > 0 else\n            3 if a > 4 else 23 if a > 1 else 2 if a > 0 else 3 if a > 4 else\n            23 if a > 1 else 2 if a > 0 else 3 if a > 4 else 23 if a > 1 else\n            2 if a > 0 else 3 if a > 4 else 23 if a > 1 else 2 if a > 0 else\n            3 if a > 4 else 23 if a > 1 else 2 if a > 0 else 3 if a > 4 else\n            23 if a > 1 else 2 if a > 0 else 3 if a > 4 else 23 if a > 1 else\n            2 if a > 0 else 3 if a > 4 else 23)\n        c = (1 if b > 1 else 2 if b > 0 else 3 if a > 4 else 23 if a > 1 else\n            2 if a > 0 else 3 if a > 4 else 23 if a > 1 else 2 if a > 0 else\n            3 if a > 4 else 23 if a > 1 else 2 if a > 0 else 3 if a > 4 else\n            23 if a > 1 else 2 if a > 0 else 3 if a > 4 else 23 if a > 1 else\n            2 if a > 0 else 3 if a > 4 else 23 if a > 1 else 2 if a > 0 else\n            3 if a > 4 else 23 if a > 1 else 2 if a > 0 else 3 if a > 4 else\n            23 if a > 1 else 2 if a > 0 else 3 if a > 4 else 23 if a > 1 else\n            2 if a > 0 else 3 if a > 4 else 23)\n        d = (1 if c > 1 else 2 if c > 0 else 3 if a > 4 else 23 if a > 1 else\n            2 if a > 0 else 3 if a > 4 else 23 if a > 1 else 2 if a > 0 else\n            3 if a > 4 else 23 if a > 1 else 2 if a > 0 else 3 if a > 4 else\n            23 if a > 1 else 2 if a > 0 else 3 if a > 4 else 23 if a > 1 else\n            2 if a > 0 else 3 if a > 4 else 23 if a > 1 else 2 if a > 0 else\n            3 if a > 4 else 23 if a > 1 else 2 if a > 0 else 3 if a > 4 else\n            23 if a > 1 else 2 if a > 0 else 3 if a > 4 else 23 if a > 1 else\n            2 if a > 0 else 3 if a > 4 else 23)\n        e = d + 1\n        return e\n\n    def check_line_2():\n        a = 1\n        tracing()\n        b = (1 if a > 1 else 2 if a > 0 else 3 if a > 4 else 23 if a > 1 else\n            2 if a > 0 else 3 if a > 4 else 23 if a > 1 else 2 if a > 0 else\n            3 if a > 4 else 23 if a > 1 else 2 if a > 0 else 3 if a > 4 else\n            23 if a > 1 else 2 if a > 0 else 3 if a > 4 else 23 if a > 1 else\n            2 if a > 0 else 3 if a > 4 else 23 if a > 1 else 2 if a > 0 else\n            3 if a > 4 else 23 if a > 1 else 2 if a > 0 else 3 if a > 4 else\n            23 if a > 1 else 2 if a > 0 else 3 if a > 4 else 23 if a > 1 else\n            2 if a > 0 else 3 if a > 4 else 23)\n        c = (1 if b > 1 else 2 if b > 0 else 3 if a > 4 else 23 if a > 1 else\n            2 if a > 0 else 3 if a > 4 else 23 if a > 1 else 2 if a > 0 else\n            3 if a > 4 else 23 if a > 1 else 2 if a > 0 else 3 if a > 4 else\n            23 if a > 1 else 2 if a > 0 else 3 if a > 4 else 23 if a > 1 else\n            2 if a > 0 else 3 if a > 4 else 23 if a > 1 else 2 if a > 0 else\n            3 if a > 4 else 23 if a > 1 else 2 if a > 0 else 3 if a > 4 else\n            23 if a > 1 else 2 if a > 0 else 3 if a > 4 else 23 if a > 1 else\n            2 if a > 0 else 3 if a > 4 else 23)\n        d = (1 if c > 1 else 2 if c > 0 else 3 if a > 4 else 23 if a > 1 else\n            2 if a > 0 else 3 if a > 4 else 23 if a > 1 else 2 if a > 0 else\n            3 if a > 4 else 23 if a > 1 else 2 if a > 0 else 3 if a > 4 else\n            23 if a > 1 else 2 if a > 0 else 3 if a > 4 else 23 if a > 1 else\n            2 if a > 0 else 3 if a > 4 else 23 if a > 1 else 2 if a > 0 else\n            3 if a > 4 else 23 if a > 1 else 2 if a > 0 else 3 if a > 4 else\n            23 if a > 1 else 2 if a > 0 else 3 if a > 4 else 23 if a > 1 else\n            2 if a > 0 else 3 if a > 4 else 23)\n        e = d + 1\n        return e\n    self.check_insert_to_line_with_exec(foo, tracing, foo.__code__.\n        co_firstlineno + 2)\n    sys.stdout = self.original_stdout\n    self.check_insert_to_line_by_symbols(foo, call_tracing, foo.__code__.\n        co_firstlineno + 2, check_line_2.__code__)\nfinally:\n    sys.stdout = self.original_stdout\n"
}