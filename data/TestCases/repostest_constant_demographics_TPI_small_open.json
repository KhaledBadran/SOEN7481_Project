{
    "functionName": "test_constant_demographics_TPI_small_open",
    "className": null,
    "fileName": "/open-source-economics_&_OG-USA/ogusa_&_tests_&_test_basic.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n    This tests solves the model under the assumption of constant\n    demographics, a balanced budget, and tax functions that do not vary\n    over time, as well as with a small open economy assumption.\n    \"\"\"\nspec = Specifications(run_micro=False, output_base=OUTPUT_DIR, baseline_dir\n    =OUTPUT_DIR, test=False, time_path=True, baseline=True, iit_reform={},\n    guid='')\nog_spec = {'constant_demographics': True, 'budget_balance': True,\n    'zero_taxes': True, 'maxiter': 2, 'r_gov_shift': 0.0, 'zeta_D': [0.0, \n    0.0], 'zeta_K': [1.0], 'debt_ratio_ss': 1.0,\n    'initial_foreign_debt_ratio': 0.0, 'start_year': 2019, 'cit_rate': [0.0\n    ], 'PIA_rate_bkt_1': 0.0, 'PIA_rate_bkt_2': 0.0, 'PIA_rate_bkt_3': 0.0,\n    'eta': spec.omega_SS.reshape(spec.S, 1) * spec.lambdas.reshape(1, spec.J)}\nspec.update_specifications(og_spec)\nspec.get_tax_function_parameters(None, False, tax_func_path=TAX_FUNC_PATH)\nss_outputs = SS.run_SS(spec, None)\nutils.mkdirs(os.path.join(OUTPUT_DIR, 'SS'))\nss_dir = os.path.join(OUTPUT_DIR, 'SS', 'SS_vars.pkl')\nwith open(ss_dir, 'wb') as f:\n    pickle.dump(ss_outputs, f)\ntpi_output = TPI.run_TPI(spec, None)\nassert np.allclose(tpi_output['bmat_splus1'][:spec.T, :, :], ss_outputs[\n    'bssmat_splus1'])\npytest.mark.full_run"
}