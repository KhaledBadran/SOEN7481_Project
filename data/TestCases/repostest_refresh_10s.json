{
    "functionName": "test_refresh_10s",
    "className": "TestPolicyManagerV2",
    "fileName": "/named-data_&_PyNDN2/tests_&_integration_tests_&_test_policy_manager_v2.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "with open('policy_config/testData', 'r') as dataFile:\n    encodedData = dataFile.read()\n    data = Data()\n    dataBlob = Blob(b64decode(encodedData))\n    data.wireDecode(dataBlob)\nvr = doVerify(self.policyManager, data)\nself.assertTrue(vr.hasFurtherSteps,\n    'ConfigPolicyManager did not create ValidationRequest for unknown certificate'\n    )\nself.assertEqual(vr.successCount, 0,\n    'ConfigPolicyManager called success callback with pending ValidationRequest'\n    )\nself.assertEqual(vr.failureCount, 0,\n    'ConfigPolicyManager called failure callback with pending ValidationRequest'\n    )\ncert = CertificateV2()\ncertData = b64decode(CERT_DUMP)\ncert.wireDecode(Blob(certData, False))\nsigningInfo = SigningInfo()\nsigningInfo.setSigningIdentity(self.identityName)\nnow = Common.getNowMilliseconds()\nsigningInfo.setValidityPeriod(ValidityPeriod(now, now + 2 * 365 * 24 * 3600 *\n    1000.0))\nself.keyChain.sign(cert, signingInfo)\nencodedCert = b64encode(cert.wireEncode().toBytes())\nwith open(self.testCertFile, 'w') as certFile:\n    certFile.write(Blob(encodedCert, False).toRawStr())\nvr = doVerify(self.policyManager, data)\nself.assertTrue(vr.hasFurtherSteps,\n    'ConfigPolicyManager refresh occured sooner than specified')\nself.assertEqual(vr.successCount, 0,\n    'ConfigPolicyManager called success callback with pending ValidationRequest'\n    )\nself.assertEqual(vr.failureCount, 0,\n    'ConfigPolicyManager called failure callback with pending ValidationRequest'\n    )\ntime.sleep(6)\nvr = doVerify(self.policyManager, data)\nself.assertFalse(vr.hasFurtherSteps,\n    'ConfigPolicyManager did not refresh certificate store')\nself.assertEqual(vr.successCount, 1,\n    'Verification success called {} times instead of 1'.format(vr.successCount)\n    )\nself.assertEqual(vr.failureCount, 0,\n    'ConfigPolicyManager did not verify valid signed data')\n"
}