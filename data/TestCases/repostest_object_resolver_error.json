{
    "functionName": "test_object_resolver_error",
    "className": null,
    "fileName": "/fabioz_&_PyDev.Debugger/tests_python_&_test_resolvers.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "from _pydevd_bundle.pydevd_resolver import DefaultResolver\ndefault_resolver = DefaultResolver()\nclass MyObject(object):\n\n    def __init__(self):\n        self.a = 10\n\n    def __dir__(self):\n        return ['a', 'b']\n\n    def __getattribute__(self, attr_name):\n        if attr_name == 'b':\n            raise RuntimeError('unavailable')\n        return object.__getattribute__(self, attr_name)\nobj = MyObject()\ndictionary = default_resolver.get_dictionary(obj)\nb_value = dictionary.pop('b')\nassert dictionary == {'a': 10}\nassert \"raise RuntimeError('unavailable')\" in b_value\ncontents_debug_adapter_protocol = (default_resolver.\n    get_contents_debug_adapter_protocol(obj))\nb_value = contents_debug_adapter_protocol.pop(-1)\nassert contents_debug_adapter_protocol == [('a', 10, '.a')]\nassert b_value[0] == 'b'\nassert \"raise RuntimeError('unavailable')\" in b_value[1]\nassert b_value[2] == '.b'\n"
}