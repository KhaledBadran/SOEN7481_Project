{
    "functionName": "_fast_cross_3d",
    "className": null,
    "fileName": "/nipy_&_PySurfer/surfer_&_utils.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"Compute cross product between list of 3D vectors\n\n    Much faster than np.cross() when the number of cross products\n    becomes large (>500). This is because np.cross() methods become\n    less memory efficient at this stage.\n\n    Parameters\n    ----------\n    x : array\n        Input array 1.\n    y : array\n        Input array 2.\n\n    Returns\n    -------\n    z : array\n        Cross product of x and y.\n\n    Notes\n    -----\n    x and y must both be 2D row vectors. One must have length 1, or both\n    lengths must match.\n    \"\"\"\nassert x.ndim == 2\nassert y.ndim == 2\nassert x.shape[1] == 3\nassert y.shape[1] == 3\nassert (x.shape[0] == 1 or y.shape[0] == 1) or x.shape[0] == y.shape[0]\nif max([x.shape[0], y.shape[0]]) >= 500:\n    return np.c_[x[:, (1)] * y[:, (2)] - x[:, (2)] * y[:, (1)], x[:, (2)] *\n        y[:, (0)] - x[:, (0)] * y[:, (2)], x[:, (0)] * y[:, (1)] - x[:, (1)\n        ] * y[:, (0)]]\nelse:\n    return np.cross(x, y)\n"
}