{
    "functionName": "test_stress",
    "className": "TestSqlIdentityStorage",
    "fileName": "/named-data_&_PyNDN2/tests_&_integration_tests_&_test_identity_methods.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "identityName = Name('/TestSecPublicInfoSqlite3/Delete').appendVersion(int(\n    time.time()))\ncertName1 = self.keyChain.createIdentityAndCertificate(identityName)\nkeyName1 = IdentityCertificate.certificateNameToPublicKeyName(certName1)\nkeyName2 = self.keyChain.generateRSAKeyPairAsDefault(identityName)\ncert2 = self.identityManager.selfSign(keyName2)\ncertName2 = cert2.getName()\nself.identityManager.addCertificateAsDefault(cert2)\nkeyName3 = self.keyChain.generateRSAKeyPairAsDefault(identityName)\ncert3 = self.identityManager.selfSign(keyName3)\ncertName3 = cert3.getName()\nself.identityManager.addCertificateAsDefault(cert3)\ncert4 = self.identityManager.selfSign(keyName3)\nself.identityManager.addCertificateAsDefault(cert4)\ncertName4 = cert4.getName()\ncert5 = self.identityManager.selfSign(keyName3)\nself.identityManager.addCertificateAsDefault(cert5)\ncertName5 = cert5.getName()\nself.assertTrue(self.identityStorage.doesIdentityExist(identityName))\nself.assertTrue(self.identityStorage.doesKeyExist(keyName1))\nself.assertTrue(self.identityStorage.doesKeyExist(keyName2))\nself.assertTrue(self.identityStorage.doesKeyExist(keyName3))\nself.assertTrue(self.identityStorage.doesCertificateExist(certName1))\nself.assertTrue(self.identityStorage.doesCertificateExist(certName2))\nself.assertTrue(self.identityStorage.doesCertificateExist(certName3))\nself.assertTrue(self.identityStorage.doesCertificateExist(certName4))\nself.assertTrue(self.identityStorage.doesCertificateExist(certName5))\nself.identityStorage.deleteCertificateInfo(certName5)\nself.assertFalse(self.identityStorage.doesCertificateExist(certName5))\nself.assertTrue(self.identityStorage.doesCertificateExist(certName4))\nself.assertTrue(self.identityStorage.doesCertificateExist(certName3))\nself.assertTrue(self.identityStorage.doesKeyExist(keyName2))\nself.identityStorage.deletePublicKeyInfo(keyName3)\nself.assertFalse(self.identityStorage.doesCertificateExist(certName4))\nself.assertFalse(self.identityStorage.doesCertificateExist(certName3))\nself.assertFalse(self.identityStorage.doesKeyExist(keyName3))\nself.assertTrue(self.identityStorage.doesKeyExist(keyName2))\nself.assertTrue(self.identityStorage.doesKeyExist(keyName1))\nself.assertTrue(self.identityStorage.doesIdentityExist(identityName))\nself.keyChain.deleteIdentity(identityName)\nself.assertFalse(self.identityStorage.doesCertificateExist(certName2))\nself.assertFalse(self.identityStorage.doesKeyExist(keyName2))\nself.assertFalse(self.identityStorage.doesCertificateExist(certName1))\nself.assertFalse(self.identityStorage.doesKeyExist(keyName1))\nself.assertFalse(self.identityStorage.doesIdentityExist(identityName))\n"
}