{
    "functionName": "test_elk_logging",
    "className": "TestCase",
    "fileName": "/IntegralDefense_&_ACE/lib_&_saq_&_modules_&_test_email.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "elk_log_dir = os.path.join(saq.SAQ_HOME, saq.CONFIG['elk_logging'][\n    'elk_log_dir'])\nif os.path.isdir(elk_log_dir):\n    shutil.rmtree(elk_log_dir)\n    os.mkdir(elk_log_dir)\nroot = create_root_analysis(alert_type='mailbox')\nroot.initialize_storage()\nshutil.copy(os.path.join('test_data', 'emails',\n    'splunk_logging.email.rfc822'), os.path.join(root.storage_dir,\n    'email.rfc822'))\nfile_observable = root.add_observable(F_FILE, 'email.rfc822')\nfile_observable.add_directive(DIRECTIVE_ORIGINAL_EMAIL)\nroot.save()\nroot.schedule()\nengine = TestEngine()\nengine.enable_module('analysis_module_file_type', 'test_groups')\nengine.enable_module('analysis_module_email_analyzer', 'test_groups')\nengine.enable_module('analysis_module_email_logger', 'test_groups')\nengine.enable_module('analysis_module_url_extraction', 'test_groups')\nengine.controlled_stop()\nengine.start()\nengine.wait()\nwait_for_log_count('creating json logging directory ', 1, 5)\nentry = search_log('creating json logging directory ')\ntarget_dir = entry[0].getMessage()[len('creating json logging directory '):]\nelk_files = [os.path.join(target_dir, _) for _ in os.listdir(target_dir)]\nself.assertEquals(len(elk_files), 1)\nwith open(elk_files[0], 'r') as fp:\n    log_entry = json.load(fp)\nfor field in ['date', 'first_received', 'last_received', 'env_mail_from',\n    'env_rcpt_to', 'mail_from', 'mail_to', 'reply_to', 'cc', 'bcc',\n    'message_id', 'subject', 'path', 'size', 'user_agent', 'x_mailer',\n    'originating_ip', 'headers', 'attachment_count', 'attachment_sizes',\n    'attachment_types', 'attachment_names', 'attachment_hashes',\n    'thread_topic', 'thread_index', 'refereneces', 'x_sender']:\n    self.assertTrue(field in log_entry)\n"
}