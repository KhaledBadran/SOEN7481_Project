{
    "functionName": "test_offset_overflow",
    "className": "TestInsertCode",
    "fileName": "/fabioz_&_PyDev.Debugger/tests_python_&_test_bytecode_modification.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "self.original_stdout = sys.stdout\nsys.stdout = StringIO()\ntry:\n\n    def foo():\n        a = 1\n        b = 2\n        c = 3\n        a1 = 1 if a > 1 else 2\n        a2 = 1 if a > 1 else 2\n        a3 = 1 if a > 1 else 2\n        a4 = 1 if a > 1 else 2\n        a5 = 1 if a > 1 else 2\n        a6 = 1 if a > 1 else 2\n        a7 = 1 if a > 1 else 2\n        a8 = 1 if a > 1 else 2\n        a9 = 1 if a > 1 else 2\n        a10 = 1 if a > 1 else 2\n        a11 = 1 if a > 1 else 2\n        a12 = 1 if a > 1 else 2\n        a13 = 1 if a > 1 else 2\n        for i in range(1):\n            if a > 0:\n                print('111')\n            else:\n                print('222')\n        return b\n\n    def check_line_2():\n        a = 1\n        tracing()\n        b = 2\n        c = 3\n        a1 = 1 if a > 1 else 2\n        a2 = 1 if a > 1 else 2\n        a3 = 1 if a > 1 else 2\n        a4 = 1 if a > 1 else 2\n        a5 = 1 if a > 1 else 2\n        a6 = 1 if a > 1 else 2\n        a7 = 1 if a > 1 else 2\n        a8 = 1 if a > 1 else 2\n        a9 = 1 if a > 1 else 2\n        a10 = 1 if a > 1 else 2\n        a11 = 1 if a > 1 else 2\n        a12 = 1 if a > 1 else 2\n        a13 = 1 if a > 1 else 2\n        for i in range(1):\n            if a > 0:\n                print('111')\n            else:\n                print('222')\n        return b\n    self.check_insert_to_line_with_exec(foo, tracing, foo.__code__.\n        co_firstlineno + 2)\n    self.check_insert_to_line_by_symbols(foo, call_tracing, foo.__code__.\n        co_firstlineno + 2, check_line_2.__code__)\nfinally:\n    sys.stdout = self.original_stdout\n"
}