{
    "functionName": "test_lr_two_data_point",
    "className": "DiscreteMNLBinaryTests",
    "fileName": "/Mogeng_&_IOHMM/tests_&_test_DiscreteMNL.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "self.model = DiscreteMNL(solver='lbfgs', fit_intercept=True, est_stderr=\n    True, reg_method='l2', alpha=0.01, l1_ratio=0, tol=0.0001, max_iter=100,\n    coef=None, stderr=None, classes=None)\nself.model.fit(self.data_spector.exog[4:6, :], self.data_spector.endog[4:6,\n    ], sample_weight=0.5)\nself.assertEqual(self.model.coef.shape, (1, 4))\nnp.testing.assert_array_almost_equal(self.model.loglike_per_sample(self.\n    data_spector.exog[4:6, :], self.data_spector.endog[4:6,]), np.array([-\n    0.226, -0.289]), decimal=3)\nself.model = DiscreteMNL(solver='lbfgs', fit_intercept=True, est_stderr=\n    True, reg_method='l2', alpha=0, l1_ratio=0, tol=0.0001, max_iter=100,\n    coef=None, stderr=None, classes=None)\nself.model.fit(self.data_spector.exog[4:6, :], self.data_spector.endog[4:6,\n    ], sample_weight=0.5)\nself.assertEqual(self.model.coef.shape, (1, 4))\nnp.testing.assert_array_almost_equal(self.model.loglike_per_sample(self.\n    data_spector.exog[4:6, :], self.data_spector.endog[4:6,]), np.array([0,\n    0]), decimal=3)\nself.model = DiscreteMNL(solver='lbfgs', fit_intercept=True, est_stderr=\n    True, reg_method='l2', alpha=0, l1_ratio=0, tol=0.0001, max_iter=100,\n    coef=None, stderr=None, classes=None)\nself.model.fit(self.data_spector.exog[3:5, :], self.data_spector.endog[3:5,\n    ], sample_weight=0.5)\nself.assertEqual(self.model.coef.shape, (1, 4))\nnp.testing.assert_array_almost_equal(self.model.loglike_per_sample(self.\n    data_spector.exog[3:5, :], self.data_spector.endog[3:5,]), np.array([0,\n    0]), decimal=3)\nprint(self.model.classes, 'class')\nnp.testing.assert_array_almost_equal(self.model.loglike_per_sample(self.\n    data_spector.exog[3:5, :], np.array([0, 2])), np.array([0, -np.Infinity\n    ]), decimal=3)\n"
}