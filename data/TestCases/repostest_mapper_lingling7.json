{
    "functionName": "test_mapper_lingling7",
    "className": "Test_mapper",
    "fileName": "/QE-Lab_&_OpenQL/tests_&_test_mapper.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "v = 'lingling7'\nconfig = os.path.join(rootDir, 'test_mapper_s17.json')\nnum_qubits = 9\nprog_name = 'test_mapper_' + v\nkernel_name = 'kernel_' + v\nstarmon = ql.Platform('starmon', config)\nprog = ql.Program(prog_name, starmon, num_qubits, 0)\nk = ql.Kernel(kernel_name, starmon, num_qubits, 0)\nk.gate('prepz', [7])\nk.gate('prepz', [8])\nk.gate('x', [7])\nk.gate('ym90', [7])\nk.gate('ym90', [4])\nk.gate('cz', [7, 4])\nk.gate('ry90', [4])\nk.gate('ym90', [8])\nk.gate('cz', [0, 8])\nk.gate('ry90', [8])\nk.gate('ym90', [8])\nk.gate('cz', [7, 8])\nk.gate('ry90', [8])\nk.gate('ym90', [6])\nk.gate('cz', [7, 6])\nk.gate('ry90', [6])\nk.gate('ym90', [8])\nk.gate('cz', [2, 8])\nk.gate('ry90', [8])\nk.gate('ym90', [3])\nk.gate('cz', [7, 3])\nk.gate('ry90', [3])\nk.gate('ym90', [8])\nk.gate('cz', [4, 8])\nk.gate('ry90', [8])\nk.gate('ym90', [8])\nk.gate('cz', [7, 8])\nk.gate('ry90', [8])\nk.gate('ym90', [5])\nk.gate('cz', [7, 5])\nk.gate('ry90', [5])\nk.gate('ym90', [8])\nk.gate('cz', [6, 8])\nk.gate('ry90', [8])\nk.gate('x', [7])\nk.gate('ym90', [7])\nk.gate('measure', [7])\nk.gate('measure', [8])\nk.gate('prepz', [7])\nk.gate('prepz', [8])\nk.gate('x', [7])\nk.gate('ym90', [7])\nk.gate('ym90', [5])\nk.gate('cz', [7, 5])\nk.gate('ry90', [5])\nk.gate('ym90', [8])\nk.gate('cz', [1, 8])\nk.gate('ry90', [8])\nk.gate('ym90', [8])\nk.gate('cz', [7, 8])\nk.gate('ry90', [8])\nk.gate('ym90', [6])\nk.gate('cz', [7, 6])\nk.gate('ry90', [6])\nk.gate('ym90', [8])\nk.gate('cz', [2, 8])\nk.gate('ry90', [8])\nk.gate('ym90', [3])\nk.gate('cz', [7, 3])\nk.gate('ry90', [3])\nk.gate('ym90', [8])\nk.gate('cz', [5, 8])\nk.gate('ry90', [8])\nk.gate('ym90', [8])\nk.gate('cz', [7, 8])\nk.gate('ry90', [8])\nk.gate('ym90', [4])\nk.gate('cz', [7, 4])\nk.gate('ry90', [4])\nk.gate('ym90', [8])\nk.gate('cz', [6, 8])\nk.gate('ry90', [8])\nk.gate('x', [7])\nk.gate('ym90', [7])\nk.gate('measure', [7])\nk.gate('measure', [8])\nk.gate('prepz', [7])\nk.gate('prepz', [8])\nk.gate('x', [7])\nk.gate('ym90', [7])\nk.gate('ym90', [1])\nk.gate('cz', [7, 1])\nk.gate('ry90', [1])\nk.gate('ym90', [8])\nk.gate('cz', [2, 8])\nk.gate('ry90', [8])\nk.gate('ym90', [8])\nk.gate('cz', [7, 8])\nk.gate('ry90', [8])\nk.gate('ym90', [5])\nk.gate('cz', [7, 5])\nk.gate('ry90', [5])\nk.gate('ym90', [8])\nk.gate('cz', [6, 8])\nk.gate('ry90', [8])\nk.gate('ym90', [2])\nk.gate('cz', [7, 2])\nk.gate('ry90', [2])\nk.gate('ym90', [8])\nk.gate('cz', [0, 8])\nk.gate('ry90', [8])\nk.gate('ym90', [8])\nk.gate('cz', [7, 8])\nk.gate('ry90', [8])\nk.gate('ym90', [6])\nk.gate('cz', [7, 6])\nk.gate('ry90', [6])\nk.gate('ym90', [8])\nk.gate('cz', [4, 8])\nk.gate('ry90', [8])\nk.gate('x', [7])\nk.gate('ym90', [7])\nk.gate('measure', [7])\nk.gate('measure', [8])\nprog.add_kernel(k)\nprog.compile()\nGOLD_fn = os.path.join(rootDir, 'golden', prog.name + '.qisa')\nQISA_fn = os.path.join(output_dir, prog.name + '.qisa')\nassemble(QISA_fn)\nself.assertTrue(file_compare(QISA_fn, GOLD_fn))\n"
}