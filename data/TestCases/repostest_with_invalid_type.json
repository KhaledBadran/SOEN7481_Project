{
    "functionName": "test_with_invalid_type",
    "className": "TestType",
    "fileName": "/gJigsaw_&_KataBankOCR/parse_&_test_&_test_validators.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"confirm raises with expected message on invalid type\"\"\"\nmessage = '%s \"%s\" of unexpected type. Expected:%s. Found:%s.'\nmessage = message % (_name, value, expected_type, str(type(value)))\narguments = expected_type, value, _name\nerror = pytest.raises(TypeError, Validate.type, *arguments)\nassert message == error.value.message\npytest.mark.parametrize('expected_type, value', mismatched_type_value_pairs)"
}