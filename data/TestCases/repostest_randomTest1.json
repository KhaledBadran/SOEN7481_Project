{
    "functionName": "test_randomTest1",
    "className": null,
    "fileName": "/bakwc_&_PySyncObj/test_syncobj.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "journalFiles = [getNextJournalFile(), getNextJournalFile(),\n    getNextJournalFile()]\nremoveFiles(journalFiles)\nrandom.seed(12)\na = [getNextAddr(), getNextAddr(), getNextAddr()]\no1 = TestObj(a[0], [a[1], a[2]], TEST_TYPE.RAND_1, journalFile=journalFiles[0])\no2 = TestObj(a[1], [a[2], a[0]], TEST_TYPE.RAND_1, journalFile=journalFiles[1])\no3 = TestObj(a[2], [a[0], a[1]], TEST_TYPE.RAND_1, journalFile=journalFiles[2])\nobjs = [o1, o2, o3]\nst = time.time()\nwhile time.time() - st < 120.0:\n    doTicks(objs, random.random() * 0.3, interval=0.05)\n    assert _checkSameLeader(objs)\n    assert _checkSameLeader2(objs)\n    for i in xrange(0, random.randint(0, 2)):\n        random.choice(objs).addValue(random.randint(0, 10))\n    newObjs = list(objs)\n    newObjs.pop(random.randint(0, len(newObjs) - 1))\n    doTicks(newObjs, random.random() * 0.3, interval=0.05)\n    assert _checkSameLeader(objs)\n    assert _checkSameLeader2(objs)\n    for i in xrange(0, random.randint(0, 2)):\n        random.choice(objs).addValue(random.randint(0, 10))\nif not o1.getCounter() == o2.getCounter() == o3.getCounter():\n    print(time.time(), 'counters:', o1.getCounter(), o2.getCounter(), o3.\n        getCounter())\nst = time.time()\nwhile not o1.getCounter() == o2.getCounter() == o3.getCounter():\n    doTicks(objs, 2.0, interval=0.05)\n    if time.time() - st > 30:\n        break\nif not o1.getCounter() == o2.getCounter() == o3.getCounter():\n    o1._printStatus()\n    o2._printStatus()\n    o3._printStatus()\n    print('Logs same:', o1._SyncObj__raftLog == o2._SyncObj__raftLog == o3.\n        _SyncObj__raftLog)\n    print(time.time(), 'counters:', o1.getCounter(), o2.getCounter(), o3.\n        getCounter())\n    raise AssertionError('Values not equal')\ncounter = o1.getCounter()\no1._destroy()\no2._destroy()\no3._destroy()\ndel o1\ndel o2\ndel o3\ntime.sleep(0.1)\no1 = TestObj(a[0], [a[1], a[2]], TEST_TYPE.RAND_1, journalFile=journalFiles[0])\no2 = TestObj(a[1], [a[2], a[0]], TEST_TYPE.RAND_1, journalFile=journalFiles[1])\no3 = TestObj(a[2], [a[0], a[1]], TEST_TYPE.RAND_1, journalFile=journalFiles[2])\nobjs = [o1, o2, o3]\nst = time.time()\nwhile not o1.getCounter() == o2.getCounter() == o3.getCounter() == counter:\n    doTicks(objs, 2.0, interval=0.05)\n    if time.time() - st > 30:\n        break\nif not o1.getCounter() == o2.getCounter() == o3.getCounter() >= counter:\n    o1._printStatus()\n    o2._printStatus()\n    o3._printStatus()\n    print('Logs same:', o1._SyncObj__raftLog == o2._SyncObj__raftLog == o3.\n        _SyncObj__raftLog)\n    print(time.time(), 'counters:', o1.getCounter(), o2.getCounter(), o3.\n        getCounter(), counter)\n    raise AssertionError('Values not equal')\nremoveFiles(journalFiles)\n"
}