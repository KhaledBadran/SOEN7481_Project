{
    "functionName": "test_get_group_key",
    "className": "TestGroupManager",
    "fileName": "/named-data_&_PyNDN2/tests_&_integration_tests_&_test_group_manager.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "manager = GroupManager(Name('Alice'), Name('data_type'),\n    Sqlite3GroupManagerDb(self.groupKeyDatabaseFilePath), 1024, 1, self.\n    keyChain)\nself.setManager(manager)\ntimePoint1 = Schedule.fromIsoString('20150825T093000')\nresult = manager.getGroupKey(timePoint1)\nself.assertEqual(4, len(result))\ndata = result[0]\nself.assertEqual('/Alice/READ/data_type/E-KEY/20150825T090000/20150825T100000',\n    data.getName().toUri())\ngroupEKey = EncryptKey(data.getContent())\ndata = result[1]\nself.assertEqual(\n    '/Alice/READ/data_type/D-KEY/20150825T090000/20150825T100000/FOR/ndn/memberA/ksk-123'\n    , data.getName().toUri())\ndataContent = data.getContent()\nencryptedNonce = EncryptedContent()\nencryptedNonce.wireDecode(dataContent)\nself.assertEqual(0, encryptedNonce.getInitialVector().size())\nself.assertEqual(EncryptAlgorithmType.RsaOaep, encryptedNonce.\n    getAlgorithmType())\ndecryptParams = EncryptParams(EncryptAlgorithmType.RsaOaep)\nblobNonce = encryptedNonce.getPayload()\nnonce = RsaAlgorithm.decrypt(self.decryptKeyBlob, blobNonce, decryptParams)\npayloadContent = dataContent.buf()[encryptedNonce.wireEncode().size():]\nencryptedPayload = EncryptedContent()\nencryptedPayload.wireDecode(payloadContent)\nself.assertEqual(16, encryptedPayload.getInitialVector().size())\nself.assertEqual(EncryptAlgorithmType.AesCbc, encryptedPayload.\n    getAlgorithmType())\ndecryptParams.setAlgorithmType(EncryptAlgorithmType.AesCbc)\ndecryptParams.setInitialVector(encryptedPayload.getInitialVector())\nblobPayload = encryptedPayload.getPayload()\nlargePayload = AesAlgorithm.decrypt(nonce, blobPayload, decryptParams)\ngroupDKey = DecryptKey(largePayload)\nderivedGroupEKey = RsaAlgorithm.deriveEncryptKey(groupDKey.getKeyBits())\nself.assertTrue(groupEKey.getKeyBits().equals(derivedGroupEKey.getKeyBits()))\ndata = result[2]\nself.assertEqual(\n    '/Alice/READ/data_type/D-KEY/20150825T090000/20150825T100000/FOR/ndn/memberB/ksk-123'\n    , data.getName().toUri())\ndata = result[3]\nself.assertEqual(\n    '/Alice/READ/data_type/D-KEY/20150825T090000/20150825T100000/FOR/ndn/memberC/ksk-123'\n    , data.getName().toUri())\ntimePoint2 = Schedule.fromIsoString('20150826T083000')\nself.assertEqual(0, len(manager.getGroupKey(timePoint2)))\ntimePoint3 = Schedule.fromIsoString('20150827T023000')\nself.assertEqual(0, len(manager.getGroupKey(timePoint3)))\n"
}