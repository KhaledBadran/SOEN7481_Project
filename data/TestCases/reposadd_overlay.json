{
    "functionName": "add_overlay",
    "className": "_Hemisphere",
    "fileName": "/nipy_&_PySurfer/surfer_&_viz.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"Add an overlay to the overlay dict from a file or array\"\"\"\narray_id, mesh = self._add_scalar_data(old.mlab_data)\nif old.pos_lims is not None:\n    with warnings.catch_warnings(record=True):\n        pos_thresh = threshold_filter(mesh, low=old.pos_lims[0])\n        pos = mlab.pipeline.surface(pos_thresh, colormap='YlOrRd', figure=\n            self._f, vmin=old.pos_lims[1], vmax=old.pos_lims[2], reset_zoom\n            =False, **kwargs)\n        pos.actor.property.backface_culling = False\n        pos_bar = mlab.scalarbar(pos, nb_labels=5)\n    pos_bar.reverse_lut = True\n    pos_bar.scalar_bar_representation.position = 0.53, 0.01\n    pos_bar.scalar_bar_representation.position2 = 0.42, 0.09\n    pos_bar.label_text_property.color = self._fg_color\nelse:\n    pos = pos_bar = None\nif old.neg_lims is not None:\n    with warnings.catch_warnings(record=True):\n        neg_thresh = threshold_filter(mesh, up=old.neg_lims[0])\n        neg = mlab.pipeline.surface(neg_thresh, colormap='PuBu', figure=\n            self._f, vmin=old.neg_lims[1], vmax=old.neg_lims[2], reset_zoom\n            =False, **kwargs)\n        neg.actor.property.backface_culling = False\n        neg_bar = mlab.scalarbar(neg, nb_labels=5)\n    neg_bar.scalar_bar_representation.position = 0.05, 0.01\n    neg_bar.scalar_bar_representation.position2 = 0.42, 0.09\n    neg_bar.label_text_property.color = self._fg_color\nelse:\n    neg = neg_bar = None\nreturn OverlayDisplay(self, array_id, pos, pos_bar, neg, neg_bar)\n"
}