{
    "functionName": "test_run_pypeit_calib_only",
    "className": null,
    "fileName": "/pypeit_&_PypeIt/pypeit_&_tests_&_test_runpypeit.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "rawdir = os.path.join(os.environ['PYPEIT_DEV'], 'RAW_DATA',\n    'shane_kast_blue', '600_4310_d55')\nassert os.path.isdir(rawdir), 'Incorrect raw directory'\nall_files = {'arcs': ['b1.fits.gz'], 'flats': ['b11.fits.gz', 'b12.fits.gz',\n    'b13.fits.gz'], 'bias': ['b21.fits.gz', 'b22.fits.gz', 'b23.fits.gz']}\nall_masters = ['MasterArc_A_1_01.fits', 'MasterTiltimg_A_1_01.fits',\n    'MasterBias_A_1_01.fits', 'MasterTilts_A_1_01.fits',\n    'MasterEdges_A_1_01.fits.gz', 'MasterFlat_A_1_01.fits',\n    'MasterWaveCalib_A_1_01.json']\nfor ss, sub_files, masters in zip(range(3), [['arcs', 'flats', 'bias'], [\n    'arcs', 'bias'], ['flats', 'bias']], [all_masters, [\n    'MasterArc_A_1_01.fits', 'MasterTiltimg_A_1_01.fits'], [\n    'MasterEdges_A_1_01.fits.gz']]):\n    files = []\n    for sub_file in sub_files:\n        files += all_files[sub_file]\n    testrawdir = os.path.join(rawdir, 'TEST')\n    if os.path.isdir(testrawdir):\n        shutil.rmtree(testrawdir)\n    os.makedirs(testrawdir)\n    for f in files:\n        shutil.copy(os.path.join(rawdir, f), os.path.join(testrawdir, f))\n    outdir = os.path.join(os.getenv('PYPEIT_DEV'), 'REDUX_OUT_TEST')\n    if os.path.isdir(outdir):\n        shutil.rmtree(outdir)\n    sargs = setup.parser(['-r', testrawdir, '-s', 'shane_kast_blue',\n        '-c all', '-o', '--output_path', outdir])\n    setup.main(sargs)\n    configdir = os.path.join(outdir, 'shane_kast_blue_A')\n    pyp_file = os.path.join(configdir, 'shane_kast_blue_A.pypeit')\n    assert os.path.isfile(pyp_file), 'PypeIt file not written.'\n    pargs = run_pypeit.parser([pyp_file, '-c', '-r', configdir])\n    run_pypeit.main(pargs)\n    for master_file in masters:\n        assert os.path.isfile(os.path.join(configdir, 'Masters', master_file)\n            ), 'Master File {:s} missing!'.format(master_file)\n    shutil.rmtree(outdir)\n    shutil.rmtree(testrawdir)\ndev_suite_required"
}