{
    "functionName": "test_partial_passive_fill_for_all_qty",
    "className": null,
    "fileName": "/nabicht_&_Buttonwood/tests_&_test_MarketObjects_&_test_Orderbooks_&_test_orderlevelbook.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "ob = build_base_order_book()\nchain_aggressed_into = ob.best_priority_chain(ASK_SIDE)\nsecond_ask_back = ob.order_chains_at_price(ASK_SIDE, Price('34.52'))[1]\nvisible_qty = ob.visible_qty_at_price(ASK_SIDE, Price('34.52'))\nhidden_qty = ob.hidden_qty_at_price(ASK_SIDE, Price('34.52'))\nnum_orders = ob.num_orders_at_price(ASK_SIDE, Price('34.52'))\nbest_price = ob.best_price(ASK_SIDE)\nagg_new = NewOrderCommand(101, 1234002.123, 1008, 'user_z', MARKET,\n    BID_SIDE, FAR, Price('34.52'), 35)\npf = PartialFillReport(102, 1234002.123, 1002, 'user_b', MARKET, agg_new, \n    35, Price('34.52'), ASK_SIDE, 3333, 25)\nchain_aggressed_into.apply_partial_fill_report(pf)\nob.handle_partial_fill_report(pf, chain_aggressed_into)\nassert ob.visible_qty_at_price(ASK_SIDE, Price('34.52')) == visible_qty - 10\nassert hidden_qty - 25 == ob.hidden_qty_at_price(ASK_SIDE, Price('34.52'))\nassert ob.best_ask_price() == best_price == Price('34.52')\nassert num_orders - 1 == ob.num_orders_at_price(ASK_SIDE, Price('34.52'))\nassert ob.best_priority_chain(ASK_SIDE).chain_id() == second_ask_back.chain_id(\n    )\nchains = ob.order_chains_at_price(ASK_SIDE, Price('34.52'))\nfound = False\nfor chain in chains:\n    if chain.chain_id() == chain_aggressed_into.chain_id():\n        found = True\nassert not found\nbid_prices = ob.bid_prices()\nassert len(bid_prices) == 1\nassert bid_prices[0] == Price('34.50')\nassert ob.best_bid_price() == Price('34.50')\nassert ob.best_bid_level() == PriceLevel(Price('34.50'), 120, 0, 2)\n"
}