{
    "functionName": "test_usingqx_fullyentangled_3qubit",
    "className": "Test_conjugated_kernel",
    "fileName": "/QE-Lab_&_OpenQL/tests_&_test_unitary.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "self.setUpClass()\nnum_qubits = 3\np = ql.Program('test_usingqxfullentangled_3qubit', platform, num_qubits)\nk = ql.Kernel('akernel', platform, num_qubits)\nmatrix = [-0.671424156 + 0.20337111j, -0.0199816541 + 0.41660484j, -\n    0.154134851 + 0.1944923j, 0.301737845 - 0.27546267j, 0.0444627514 + \n    0.09208708j, 0.215969389 + 0.05602634j, -0.0434685756 - 0.18679037j, -\n    0.0106595244 - 0.09070964j, -0.297602383 + 0.04481956j, -0.202480684 - \n    0.38012451j, 0.0282743377 + 0.15314781j, -0.285687313 - 0.15726268j, -\n    0.000170730583 - 0.153385j, 0.229149718 + 0.30741448j, 0.210312109 + \n    0.49212858j, -0.359933779 - 0.0825481j, -0.253660227 + 0.17691007j, \n    0.313791732 + 0.27041001j, -0.202215264 - 0.11204691j, -0.0886804543 + \n    0.66976204j, 0.0733676579 - 0.13082467j, -0.0997863275 + 0.01447563j, -\n    0.0589120641 + 0.4293754j, 0.0327562664 + 0.03619316j, -0.113124674 - \n    0.00735472j, 0.0970967395 - 0.24582965j, -0.101309756 - 0.39478792j, \n    0.163747452 - 0.02575567j, -0.35582956 + 0.48277026j, 0.292508802 - \n    0.34856674j, -0.235490557 + 0.20291125j, -0.205196931 + 0.13496088j, \n    0.100349815 - 0.11576965j, 0.296991063 + 0.12974051j, -0.463456662 + \n    0.26944686j, -0.39503745 - 0.08454082j, -0.448111249 + 0.2913104j, -\n    0.0536978251 + 0.25408623j, 0.201534991 - 0.12684844j, 0.00637083728 + \n    0.10506858j, -0.322312837 - 0.15860928j, 0.15636535 - 0.10492928j, \n    0.340842166 + 0.16770422j, 0.0386154376 - 0.15216514j, -0.221887101 - \n    0.16990398j, -0.264609917 - 0.06773659j, -0.0276899134 + 0.12469262j, \n    0.253068805 + 0.65839736j, -0.147285402 + 0.02010648j, -0.102440846 - \n    0.36282662j, -0.407092321 + 0.18619875j, -0.151508597 + 0.08507565j, -\n    0.160692869 - 0.43953586j, 0.167488911 - 0.42784326j, -0.16806653 - \n    0.1864466j, 0.303353139 - 0.14152888j, -0.365022492 + 0.03013316j, \n    0.223190344 - 0.25817333j, 0.0815042751 - 0.23635981j, -0.136339839 + \n    0.07858377j, 0.0321627053 + 0.00460768j, -0.458271701 - 0.15103882j, \n    0.270920093 - 0.42767654j, -0.3774449 - 0.17163736j]\nu1 = ql.Unitary('testname', matrix)\nu1.decompose()\nk.hadamard(0)\nk.hadamard(1)\nk.hadamard(2)\nk.cnot(0, 1)\nk.cnot(0, 2)\nk.cnot(1, 2)\nk.gate(u1, [0, 1, 2])\np.add_kernel(k)\np.compile()\nqx.set(os.path.join(output_dir, p.name + '_initialqasmwriter_out.qasm'))\nqx.execute()\nc0 = qx.get_state()\nself.assertAlmostEqual(0.125 * helper_prob(matrix[0] + matrix[1] + matrix[2\n    ] + matrix[3] + matrix[4] + matrix[5] + matrix[6] + matrix[7]),\n    helper_regex(c0)[0], 5)\nself.assertAlmostEqual(0.125 * helper_prob(matrix[8] + matrix[9] + matrix[\n    10] + matrix[11] + matrix[12] + matrix[13] + matrix[14] + matrix[15]),\n    helper_regex(c0)[1], 5)\nself.assertAlmostEqual(0.125 * helper_prob(matrix[16] + matrix[17] + matrix\n    [18] + matrix[19] + matrix[20] + matrix[21] + matrix[22] + matrix[23]),\n    helper_regex(c0)[2], 5)\nself.assertAlmostEqual(0.125 * helper_prob(matrix[24] + matrix[25] + matrix\n    [26] + matrix[27] + matrix[28] + matrix[29] + matrix[30] + matrix[31]),\n    helper_regex(c0)[3], 5)\nself.assertAlmostEqual(0.125 * helper_prob(matrix[32] + matrix[33] + matrix\n    [34] + matrix[35] + matrix[36] + matrix[37] + matrix[38] + matrix[39]),\n    helper_regex(c0)[4], 5)\nself.assertAlmostEqual(0.125 * helper_prob(matrix[40] + matrix[41] + matrix\n    [42] + matrix[43] + matrix[44] + matrix[45] + matrix[46] + matrix[47]),\n    helper_regex(c0)[5], 5)\nself.assertAlmostEqual(0.125 * helper_prob(matrix[48] + matrix[49] + matrix\n    [50] + matrix[51] + matrix[52] + matrix[53] + matrix[54] + matrix[55]),\n    helper_regex(c0)[6], 5)\nself.assertAlmostEqual(0.125 * helper_prob(matrix[56] + matrix[57] + matrix\n    [58] + matrix[59] + matrix[60] + matrix[61] + matrix[62] + matrix[63]),\n    helper_regex(c0)[7], 5)\n"
}