{
    "functionName": "test_merge_bed",
    "className": "TestCircRNADetection",
    "fileName": "/Sung-Huan_&_ANNOgesic/tests_&_test_circRNA.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "fasta1 = os.path.join(self.fasta_folder, 'test1.fa')\nfasta2 = os.path.join(self.fasta_folder, 'test2.fa')\nheader1 = os.path.join(self.splice_folder, 'Staphylococcus_aureus_HG003')\nheader2 = os.path.join(self.splice_folder, 'aaa')\nheader3 = os.path.join(self.splice_folder, 'bbb')\nos.mkdir(header1)\nos.mkdir(header2)\nos.mkdir(header3)\nsplice1 = os.path.join(header1,\n    'Staphylococcus_aureus_HG003_a1_splicesites.bed')\nsplice2 = os.path.join(header2, 'aaa_a1_splicesites.bed')\nsplice3 = os.path.join(header3, 'bbb_a1_splicesites.bed')\ntran1 = os.path.join(header1,\n    'Staphylococcus_aureus_HG003_a1_transrealigned.bed')\ntran2 = os.path.join(header2, 'aaa_a1_transrealigned.bed')\ntran3 = os.path.join(header3, 'bbb_a1_transrealigned.bed')\ngen_file(fasta1, self.example.fasta_file)\ngen_file(fasta2, self.example.multi_fasta_file)\ngen_file(splice1, self.example.splice_file)\ngen_file(splice2, self.example.splice_file)\ngen_file(splice3, self.example.splice_file)\ngen_file(tran1, self.example.tran_file)\ngen_file(tran2, self.example.tran_file)\ngen_file(tran3, self.example.tran_file)\nprefixs = self.circ._merge_bed(self.fasta_folder, self.splice_folder, self.\n    out_folder)\nself.assertEqual(set(prefixs[1]), set(['test1', 'test2']))\nself.assertEqual(prefixs[0][0], '_a1_')\nself.assertTrue(os.path.exists(os.path.join(self.out_folder, 'test1',\n    'test1_a1_splicesites.bed')))\nself.assertTrue(os.path.exists(os.path.join(self.out_folder, 'test1',\n    'test1_a1_transrealigned.bed')))\nself.assertTrue(os.path.exists(os.path.join(self.out_folder, 'test2',\n    'test2_a1_splicesites.bed')))\nself.assertTrue(os.path.exists(os.path.join(self.out_folder, 'test2',\n    'test2_a1_transrealigned.bed')))\nself.assertTrue(os.path.exists(os.path.join(self.out_folder, 'test2',\n    'tmp_bbb_a1_splicesites.bed')))\nself.assertTrue(os.path.exists(os.path.join(self.out_folder, 'test2',\n    'tmp_aaa_a1_splicesites.bed')))\nself.assertTrue(os.path.exists(os.path.join(self.out_folder, 'test2',\n    'tmp_aaa_a1_transrealigned.bed')))\nself.assertTrue(os.path.exists(os.path.join(self.out_folder, 'test2',\n    'tmp_bbb_a1_transrealigned.bed')))\n"
}