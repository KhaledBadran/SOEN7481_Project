{
    "functionName": "test_keras_galaxy_model_callbacks",
    "className": null,
    "fileName": "/goeckslab_&_Galaxy-ML/galaxy_ml_&_tests_&_test_keras_galaxy.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "config = train_model.get_config()\ncbacks = [{'callback_selection': {'monitor': 'val_loss', 'min_delta': 0.001,\n    'callback_type': 'ReduceLROnPlateau', 'min_lr': 0.0, 'patience': 10,\n    'cooldown': 0, 'mode': 'auto', 'factor': 0.2}}, {'callback_selection':\n    {'callback_type': 'TerminateOnNaN'}}, {'callback_selection': {\n    'callback_type': 'CSVLogger', 'filename': './tests/log.cvs',\n    'separator': '\\t', 'append': True}}, {'callback_selection': {'baseline':\n    None, 'min_delta': 0.0, 'callback_type': 'EarlyStopping', 'patience': \n    10, 'mode': 'auto', 'restore_best_weights': True, 'monitor': 'val_loss'\n    }}, {'callback_selection': {'monitor': 'val_loss', 'save_best_only': \n    True, 'period': 1, 'save_weights_only': True, 'filepath':\n    './tests/weights.{epoch:02d}-{val_loss:.2f}.hdf5', 'callback_type':\n    'ModelCheckpoint', 'mode': 'auto'}}]\nestimator = KerasGClassifier(config, optimizer='adam', metrics=[],\n    batch_size=32, epochs=500, seed=42, callbacks=cbacks)\nscorer = SCORERS['accuracy']\ntrain, test = next(KFold(n_splits=5).split(X, y))\nnew_params = {'layers_0_Dense__config__kernel_initializer__config__seed': \n    42, 'layers_1_Dense__config__kernel_initializer__config__seed': 42}\nparameters = new_params\nfit_params = {'shuffle': False}\ngot1 = _fit_and_score(estimator, X, y, scorer, train, test, verbose=0,\n    parameters=parameters, fit_params=fit_params)\nprint(got1)\nassert 0.65 <= round(got1[0], 2) <= 0.7, got1\n"
}