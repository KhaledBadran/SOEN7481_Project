{
    "functionName": "test_gen_recordings_modulations",
    "className": "TestGenerators",
    "fileName": "/alejoe91_&_MEArec/MEArec_&_tests_&_test_generators.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "print('Test recording generation - modulation')\nne = 1\nni = 2\nfe = 30\nfi = 50\nnum_chan = self.num_chan\nn_neurons = ne + ni\nrec_params = mr.get_default_recordings_params()\nrec_params['spiketrains']['n_exc'] = ne\nrec_params['spiketrains']['n_inh'] = ni\nrec_params['spiketrains']['f_exc'] = fe\nrec_params['spiketrains']['f_inh'] = fi\nrec_params['spiketrains']['duration'] = 3\nn_jitter = [1, 5]\nmodulations = ['none', 'electrode', 'template']\nchunk_rec = [0, 2]\nrec_params['templates']['min_dist'] = 1\nbursting = [False, True]\nfor mod in modulations:\n    for b in bursting:\n        for j in n_jitter:\n            for ch in chunk_rec:\n                print('Modulation: modulation', mod, 'bursting', b,\n                    'jitter', j, 'chunk', ch)\n                rec_params['templates']['n_jitters'] = j\n                rec_params['recordings']['modulation'] = mod\n                rec_params['recordings']['bursting'] = b\n                rec_params['recordings']['chunk_duration'] = ch\n                if mod == 'electrode' and b is True and j == 5:\n                    rec_params['cell_types'] = None\n                recgen_mod = mr.gen_recordings(params=rec_params, tempgen=\n                    self.tempgen, verbose=False)\n                assert recgen_mod.recordings.shape[0] == num_chan\n                assert len(recgen_mod.spiketrains) == n_neurons\n                assert recgen_mod.channel_positions.shape == (num_chan, 3)\n                if j == 1:\n                    assert recgen_mod.templates.shape[:2] == (n_neurons,\n                        num_chan)\n                else:\n                    assert recgen_mod.templates.shape[:3] == (n_neurons, j,\n                        num_chan)\n                assert recgen_mod.voltage_peaks.shape == (n_neurons, num_chan)\n                assert len(recgen_mod.spike_traces) == n_neurons\n                del recgen_mod\n"
}