{
    "functionName": "_validate_srp_check_capacity",
    "className": "CITestProvisioning",
    "fileName": "/MichaelMcAleer_&_PyU4V/PyU4V_&_tests_&_ci_tests_&_test_pyu4v_ci_provisioning.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"Helper method for validating srp return details.\n\n        :param srp_details: srp details -- dict\n        \"\"\"\nsubscribed_allocated_tb = 'subscribed_allocated_tb'\nsubscribed_total_tb = 'subscribed_total_tb'\nsnapshot_modified_tb = 'snapshot_modified_tb'\nsnapshot_total_tb = 'snapshot_total_tb'\nusable_used_tb = 'usable_used_tb'\nusable_total_tb = 'usable_total_tb'\neffective_used_capacity_percent = 'effective_used_capacity_percent'\nsrp_capacity = srp_details[constants.SRP_CAPACITY]\nself.assertIsInstance(srp_capacity, dict)\nself.assertIn(subscribed_allocated_tb, srp_capacity)\nself.assertIn(subscribed_total_tb, srp_capacity)\nself.assertIn(snapshot_modified_tb, srp_capacity)\nself.assertIn(snapshot_total_tb, srp_capacity)\nself.assertIn(usable_used_tb, srp_capacity)\nself.assertIn(usable_total_tb, srp_capacity)\nself.assertIn(effective_used_capacity_percent, srp_capacity)\nself.assertIs(float, type(srp_capacity[subscribed_allocated_tb]))\nself.assertIsInstance(srp_capacity[subscribed_total_tb], float)\nself.assertIsInstance(srp_capacity[snapshot_modified_tb], float)\nself.assertIsInstance(srp_capacity[snapshot_total_tb], float)\nself.assertIsInstance(srp_capacity[usable_used_tb], float)\nself.assertIsInstance(srp_capacity[usable_total_tb], float)\nself.assertIs(int, type(srp_capacity[effective_used_capacity_percent]))\n"
}