{
    "functionName": "test_turn_single",
    "className": null,
    "fileName": "/poletaevvlad_&_CubeLang/test_&_test_parser.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "actions = list(parse_actions(text))\nassert len(actions) == 1\naction = actions[0]\nassert isinstance(action, Turn)\nassert action.indices == indices\nassert action.turns == turns\nassert action.type == type\nassert text == str(action)\npytest.mark.parametrize('text, type, indices, turns', [('F', TurningType.\n    SLICE, [1], 1), (\"F'\", TurningType.SLICE, [1], 3), ('B', TurningType.\n    SLICE, [-1], 3), (\"B'\", TurningType.SLICE, [-1], 1), ('R', TurningType.\n    VERTICAL, [-1], 1), (\"R'\", TurningType.VERTICAL, [-1], 3), ('L',\n    TurningType.VERTICAL, [1], 3), (\"L'\", TurningType.VERTICAL, [1], 1), (\n    'U', TurningType.HORIZONTAL, [1], 3), (\"U'\", TurningType.HORIZONTAL, [1\n    ], 1), ('D', TurningType.HORIZONTAL, [-1], 1), (\"D'\", TurningType.\n    HORIZONTAL, [-1], 3), ('L[2]', TurningType.VERTICAL, [2], 3), ('L[:2]',\n    TurningType.VERTICAL, [..., 2], 3), ('L2[1:2]', TurningType.VERTICAL, [\n    1, ..., 2], 2), ('L[2:]', TurningType.VERTICAL, [2, ...], 3), ('L[1,3]',\n    TurningType.VERTICAL, [1, 3], 3), (\"L'[1:2,3]\", TurningType.VERTICAL, [\n    1, ..., 2, 3], 1), ('L[1,2:3]', TurningType.VERTICAL, [1, 2, ..., 3], 3)])"
}