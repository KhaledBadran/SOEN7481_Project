{
    "functionName": "test_full_hessian",
    "className": "TestHyperGraph",
    "fileName": "/oberbichler_&_HyperGraph/tests_&_TestHyperGraph.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "graph = hg.HyperGraph()\nax, ay, az, bx, by, bz = graph.new_variables([1, 2, 3, 4, 5, 6])\na = np.array([ax, ay, az])\nb = np.array([bx, by, bz])\nresult = np.linalg.norm(np.cross(a, b))\ngraph.compute(result)\nh = graph.h(full=True)\nassert_array_almost_equal(np.triu(h), [[77 / (18 * np.sqrt(6)), -77 / (9 *\n    np.sqrt(6)), 77 / (18 * np.sqrt(6)), -8 * np.sqrt(2 / 3) / 9, 23 / (9 *\n    np.sqrt(6)), -17 * np.sqrt(2 / 3) / 9], [0, 77 * np.sqrt(2 / 3) / 9, -\n    77 / (9 * np.sqrt(6)), 41 / (9 * np.sqrt(6)), -32 * np.sqrt(2 / 3) / 9,\n    23 / (9 * np.sqrt(6))], [0, 0, 77 / (18 * np.sqrt(6)), np.sqrt(2 / 3) /\n    9, 41 / (9 * np.sqrt(6)), -8 * np.sqrt(2 / 3) / 9], [0, 0, 0, 7 / (9 *\n    np.sqrt(6)), -7 * np.sqrt(2 / 3) / 9, 7 / (9 * np.sqrt(6))], [0, 0, 0, \n    0, 14 * np.sqrt(2 / 3) / 9, -7 * np.sqrt(2 / 3) / 9], [0, 0, 0, 0, 0, 7 /\n    (9 * np.sqrt(6))]])\nassert_array_almost_equal(np.tril(h).T, np.triu(h))\n"
}