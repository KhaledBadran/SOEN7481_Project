{
    "functionName": "test_allxy",
    "className": "Test_single_qubit_seqs_CCL",
    "fileName": "/QE-Lab_&_OpenQL/tests_&_test_std_experiments_CCL.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "p = Program('AllXY', platf, 1)\nallXY = [['i', 'i'], ['rx180', 'rx180'], ['ry180', 'ry180'], ['rx180',\n    'ry180'], ['ry180', 'rx180'], ['rx90', 'i'], ['ry90', 'i'], ['rx90',\n    'ry90'], ['ry90', 'rx90'], ['rx90', 'ry180'], ['ry90', 'rx180'], [\n    'rx180', 'ry90'], ['ry180', 'rx90'], ['rx90', 'rx180'], ['rx180',\n    'rx90'], ['ry90', 'ry180'], ['ry180', 'ry90'], ['rx180', 'i'], ['ry180',\n    'i'], ['rx90', 'rx90'], ['ry90', 'ry90']]\np.set_sweep_points(np.arange(len(allXY), dtype=float))\nfor i, xy in enumerate(allXY):\n    k = Kernel('allXY' + str(i), platf, 1)\n    k.prepz(0)\n    k.gate(xy[0], [0])\n    k.gate(xy[1], [0])\n    k.measure(0)\n    p.add_kernel(k)\np.compile()\nQISA_fn = os.path.join(output_dir, p.name + '.qisa')\nassemble(QISA_fn)\n"
}