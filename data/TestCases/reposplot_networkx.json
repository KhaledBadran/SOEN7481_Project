{
    "functionName": "plot_networkx",
    "className": null,
    "fileName": "/pmeal_&_OpenPNM/openpnm_&_topotools_&_plottools.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"\n    Create a pretty 2d plot for 2d OpenPNM networks.\n\n    Parameters\n    ----------\n    network : OpenPNM Network object\n\n    plot_throats : boolean\n        Plots throats as well as pores, if True.\n\n    labels : list\n        List of OpenPNM labels\n\n    colors : list\n        List of corresponding colors to the given `labels`.\n\n    scale : float\n        Scale factor for size of pores.\n    \"\"\"\nfrom networkx import Graph, draw_networkx_nodes, draw_networkx_edges\nfrom matplotlib.collections import PathCollection\nimport matplotlib.pyplot as plt\nfrom openpnm.topotools import dimensionality\ndims = dimensionality(network)\nif dims.sum() > 2:\n    raise Exception('NetworkX plotting only works for 2D networks.')\ntemp = network['pore.coords'].T[dims].squeeze()\nif dims.sum() == 1:\n    x = temp\n    y = np.zeros_like(x)\nif dims.sum() == 2:\n    x, y = temp\nG = Graph()\npos = {network.Ps[i]: [x[i], y[i]] for i in range(network.Np)}\ntry:\n    node_size = scale * network['pore.diameter']\nexcept KeyError:\n    node_size = np.ones_like(x) * scale * 0.5\nif not np.isfinite(node_size).all():\n    raise Exception('nan/inf values found in network[\"pore.diameter\"]')\nnode_color = np.array(['k'] * len(network.Ps))\nif labels:\n    if type(labels) is not list:\n        labels = [labels]\n    if type(colors) is not list:\n        colors = [colors]\n    if len(labels) != len(colors):\n        raise Exception('len(colors) must be equal to len(labels)!')\n    for label, color in zip(labels, colors):\n        node_color[network.pores(label)] = color\nif ax is None:\n    fig, ax = plt.subplots()\nax.set_aspect('equal', adjustable='box')\noffset = node_size.max() * 0.25\nax.set_xlim((x.min() - offset, x.max() + offset))\nax.set_ylim((y.min() - offset, y.max() + offset))\nax.axis('off')\ntemp = [id(item) for item in ax.collections if type(item) == PathCollection]\ngplot = draw_networkx_nodes(G, ax=ax, pos=pos, nodelist=network.Ps.tolist(),\n    alpha=alpha, node_color='w', edgecolors=node_color, node_size=node_size)\nif plot_throats:\n    draw_networkx_edges(G, pos=pos, edge_color='k', alpha=alpha, edgelist=\n        network['throat.conns'].tolist(), ax=ax)\nspi = 2700\nfigwidth, figheight = ax.get_figure().get_size_inches()\nfigsize_ratio = figheight / figwidth\ndata_ratio = ax.get_data_ratio()\ncorr = min(figsize_ratio / data_ratio, 1)\nxrange = np.ptp(ax.get_xlim())\nmarkersize = np.atleast_1d((corr * figwidth) ** 2 / xrange ** 2 * node_size **\n    2 * spi)\nfor item in ax.collections:\n    if type(item) == PathCollection and id(item) not in temp:\n        item.set_sizes(markersize)\nreturn gplot\n"
}