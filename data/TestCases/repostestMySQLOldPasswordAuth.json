{
    "functionName": "testMySQLOldPasswordAuth",
    "className": "TestAuthentication",
    "fileName": "/anthill-utils_&_PyMySQL/pymysql_&_tests_&_test_connection.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "conn = self.connect()\nif self.mysql_server_is(conn, (5, 7, 0)):\n    pytest.skip(\"Old passwords aren't supported in 5.7\")\nif self.mysql_server_is(conn, (5, 6, 0)):\n    pytest.skip(\"Old passwords don't authenticate in 5.6\")\ndb = self.db.copy()\ndb['password'] = 'crummy p\\tassword'\nc = conn.cursor()\nif sys.version_info[0:2] >= (3, 2) and self.mysql_server_is(conn, (5, 6, 0)):\n    with self.assertWarns(pymysql.err.Warning) as cm:\n        c.execute(\"SELECT OLD_PASSWORD('%s')\" % db['password'])\nelse:\n    c.execute(\"SELECT OLD_PASSWORD('%s')\" % db['password'])\nv = c.fetchone()[0]\nself.assertEqual(v, '2a01785203b08770')\nc.execute('SELECT @@secure_auth')\nsecure_auth_setting = c.fetchone()[0]\nc.execute('set old_passwords=1')\nif sys.version_info[0:2] >= (3, 2) and self.mysql_server_is(conn, (5, 6, 0)):\n    with self.assertWarns(pymysql.err.Warning) as cm:\n        c.execute('set global secure_auth=0')\nelse:\n    c.execute('set global secure_auth=0')\nwith TempUser(c, 'old_pass_user@localhost', self.databases[0]['db'],\n    password=db['password']) as u:\n    cur = pymysql.connect(user='old_pass_user', **db).cursor()\n    cur.execute('SELECT VERSION()')\nc.execute('set global secure_auth=%r' % secure_auth_setting)\npytest.mark.skipif(not socket_auth, reason='connection to unix_socket required'\n    )pytest.mark.skipif(not mysql_old_password_found, reason=\n    'no mysql_old_password plugin')"
}