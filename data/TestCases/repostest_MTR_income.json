{
    "functionName": "test_MTR_income",
    "className": null,
    "fileName": "/open-source-economics_&_OG-USA/ogusa_&_tests_&_test_tax.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "r = 0.04\nw = 1.2\nb = np.array([0.4, 0.3, 0.5])\nn = np.array([0.8, 0.4, 0.7])\nfactor = 110000\ntest_mtr = tax.MTR_income(r, w, b, n, factor, mtr_capital, params.e,\n    etr_params, mtr_params, params)\nassert np.allclose(test_mtr, expected)\npytest.mark.parametrize('etr_params,mtr_params,params,mtr_capital,expected',\n    [(etr_params1, mtrx_params1, p1, False, np.array([0.801675428, \n    0.801647645, 0.801681744])), (etr_params2, mtry_params2, p2, True, np.\n    array([0.8027427, 0.80335305, 0.80197745])), (etr_params3, mtrx_params3,\n    p3, False, np.array([0.45239409, 0.73598958, 0.65126073])), (\n    etr_params4, mtrx_params4, p4, False, np.array([0.395999995, \n    0.395999983, 0.599999478])), (etr_params5, mtrx_params5, p5, False, np.\n    array([0.800001028, 0.800002432, 0.800000311])), (etr_params6,\n    mtrx_params6, p6, False, np.array([0.439999714, 0.709998696, \n    0.519999185]))], ids=['DEP, analytical mtr, labor income',\n    'DEP, analytical mtr, capital income', 'DEP, not analytical mtr', 'GS',\n    'DEP_totalinc, analytical mtr', 'DEP_totalinc, not analytical mtr'])"
}