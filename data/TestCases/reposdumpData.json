{
    "functionName": "dumpData",
    "className": null,
    "fileName": "/named-data_&_PyNDN2/tests_&_unit_tests_&_test_data_methods.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "result = []\nresult.append(dump('name:', data.getName().toUri()))\nif len(data.getContent()) > 0:\n    result.append(dump('content (raw):', str(data.getContent())))\n    result.append(dump('content (hex):', data.getContent().toHex()))\nelse:\n    result.append(dump('content: <empty>'))\nif not data.getMetaInfo().getType() == ContentType.BLOB:\n    result.append(dump('metaInfo.type:', 'LINK' if data.getMetaInfo().\n        getType() == ContentType.LINK else 'KEY' if data.getMetaInfo().\n        getType() == ContentType.KEY else 'unknown'))\nresult.append(dump('metaInfo.freshnessPeriod (milliseconds):', data.\n    getMetaInfo().getFreshnessPeriod() if data.getMetaInfo().\n    getFreshnessPeriod() >= 0 else '<none>'))\nresult.append(dump('metaInfo.finalBlockId:', data.getMetaInfo().\n    getFinalBlockId().toEscapedString() if len(data.getMetaInfo().\n    getFinalBlockId().getValue()) > 0 else '<none>'))\nsignature = data.getSignature()\nif isinstance(signature, Sha256WithRsaSignature):\n    result.append(dump('signature.signature:', '<none>' if len(signature.\n        getSignature()) == 0 else signature.getSignature().toHex()))\n    if signature.getKeyLocator().getType() is not None:\n        if signature.getKeyLocator().getType(\n            ) == KeyLocatorType.KEY_LOCATOR_DIGEST:\n            result.append(dump('signature.keyLocator: KeyLocatorDigest:',\n                signature.getKeyLocator().getKeyData().toHex()))\n        elif signature.getKeyLocator().getType() == KeyLocatorType.KEYNAME:\n            result.append(dump('signature.keyLocator: KeyName:', signature.\n                getKeyLocator().getKeyName().toUri()))\n        else:\n            result.append(dump(\n                'signature.keyLocator: <unrecognized KeyLocatorType'))\n    else:\n        result.append(dump('signature.keyLocator: <none>'))\nreturn result\n"
}