{
    "functionName": "test_possible_groups",
    "className": "TestOrdinalGroupingWithnan",
    "fileName": "/Rambatino_&_CHAID/tests_&_test_ordinal_column.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\" Ensure possible groups are only adjacent numbers  \"\"\"\nmetadata = self.col.metadata\ngroupings = [(metadata[x], metadata[y]) for x, y in self.col.\n    possible_groupings()]\npossible_groupings = [(1.0, 2.0), (2.0, 3.0), (3.0, 4.0), (4.0, 5.0), (1.0,\n    '<missing>'), (2.0, '<missing>'), (3.0, '<missing>'), (4.0, '<missing>'\n    ), (5.0, '<missing>'), (10.0, '<missing>')]\nassert list_unordered_equal(possible_groupings, groupings\n    ), 'With NaNs, before any groups are identified, possible grouping are incorrectly calculated.'\ngroups = list(self.col.groups())\ngroups = [[self.col.metadata[i] for i in group] for group in self.col.groups()]\nactual_groups = [[1.0], [2.0], [3.0], [4.0], [5.0], ['<missing>'], [10.0]]\nassert list_unordered_equal(actual_groups, groups\n    ), 'With NaNs, before any groups are identified, actual groupings are incorrectly reported'\n"
}