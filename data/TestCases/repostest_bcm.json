{
    "functionName": "test_bcm",
    "className": null,
    "fileName": "/LSSTDESC_&_CCL/benchmarks_&_test_bcm.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "cosmo = ccl.Cosmology(Omega_c=0.25, Omega_b=0.05, h=0.7, A_s=2.2e-09, n_s=\n    0.96, Neff=3.046, m_nu_type='normal', m_nu=0.0, Omega_g=0, Omega_k=0,\n    w0=-1, wa=0, bcm_log10Mc=14.0, baryons_power_spectrum='bcm')\ncosmo_nobar = ccl.Cosmology(Omega_c=0.25, Omega_b=0.05, h=0.7, A_s=2.2e-09,\n    n_s=0.96, Neff=3.046, m_nu_type='normal', m_nu=0.0, Omega_g=0, Omega_k=\n    0, w0=-1, wa=0)\ndata = np.loadtxt('./benchmarks/data/w_baryonspk_nl.dat')\ndata_nobar = np.loadtxt('./benchmarks/data/wo_baryonspk_nl.dat')\nk = data[:, (0)] * cosmo['h']\na = 1\nfbcm = ccl.bcm_model_fka(cosmo, k, a)\nerr = np.abs(data[:, (1)] / data_nobar[:, (1)] / fbcm - 1)\nassert np.allclose(err, 0, atol=BCM_TOLERANCE, rtol=0)\nratio = ccl.nonlin_matter_power(cosmo, k, a) / ccl.nonlin_matter_power(\n    cosmo_nobar, k, a)\nerr = np.abs(data[:, (1)] / data_nobar[:, (1)] / ratio - 1)\nassert np.allclose(err, 0, atol=BCM_TOLERANCE, rtol=0)\n"
}