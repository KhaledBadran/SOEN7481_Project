{
    "functionName": "sendtelemetry",
    "className": null,
    "fileName": "/FaradayRF_&_Faraday-Software/faraday_&_aprs.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"\n    Constructs an APRS telemetry string for each station and sends it to the socket\n\n    :param stations: List of dictionary organized station data\n    :param telemSequence: Telemetry sequence number from 0 to 999, incrementing\n    :param socket: APRS-IS server internet socket\n    :return: None\n    \"\"\"\nfor item in stations:\n    station = item[0]\n    sourceCallsign = station['SOURCECALLSIGN']\n    sourceID = station['SOURCEID']\n    destinationCallsign = station['DESTINATIONCALLSIGN']\n    destinationID = station['DESTINATIONID']\n    gpioValues = station['GPIOSTATE']\n    rfValues = station['RFSTATE']\n    qConstruct = aprsConfig.get('APRS', 'QCONSTRUCT')\n    destAddress = aprsConfig.get('APRS', 'DESTADDRESS')\n    ioSource = aprsConfig.get('APRS', 'IOSOURCE').upper()\n    if ioSource == 'GPIO':\n        ioList = bin(gpioValues)[2:].zfill(8)\n    elif ioSource == 'RF':\n        ioList = bin(rfValues)[2:].zfill(8)\n    node = sourceCallsign + '-' + str(sourceID)\n    destNode = destinationCallsign + '-' + str(destinationID)\n    if node != destNode:\n        telemetry = '{}>{},{},{}:T#{},{},{},{},{},{},{}\\r'.format(node,\n            destAddress, qConstruct, destNode, str(telemSequence).zfill(3),\n            str(station['ADC0'] / 16).zfill(3), str(station['ADC1'] / 16).\n            zfill(3), str(station['ADC3'] / 16).zfill(3), str(station[\n            'ADC6'] / 16).zfill(3), str(station['BOARDTEMP'] / 16).zfill(3),\n            ioList)\n        logger.debug(telemetry)\n        return sendAPRSPacket(socket, telemetry)\n    elif node == destNode:\n        telemetry = '{}>{}:T#{},{},{},{},{},{},{}\\r'.format(node,\n            destAddress, str(telemSequence).zfill(3), str(station['ADC0'] /\n            16).zfill(3), str(station['ADC1'] / 16).zfill(3), str(station[\n            'ADC3'] / 16).zfill(3), str(station['ADC6'] / 16).zfill(3), str\n            (station['BOARDTEMP'] / 16).zfill(3), ioList)\n        logger.debug(telemetry)\n        return sendAPRSPacket(socket, telemetry)\n    if telemSequence >= 999:\n        telemSequence = 0\n    else:\n        telemSequence += 1\n    return telemSequence\n"
}