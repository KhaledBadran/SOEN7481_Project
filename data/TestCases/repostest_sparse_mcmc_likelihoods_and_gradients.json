{
    "functionName": "test_sparse_mcmc_likelihoods_and_gradients",
    "className": null,
    "fileName": "/GPflow_&_GPflow/tests_&_gpflow_&_models_&_test_mcmc.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n    This test makes sure that when the inducing points are the same as the data\n    points, the sparse mcmc is the same as full mcmc\n    \"\"\"\nrng = np.random.RandomState(0)\nX, Y = rng.randn(10, 1), rng.randn(10, 1)\nv_vals = rng.randn(10, 1)\nlikelihood = gpflow.likelihoods.StudentT()\nmodel_1 = gpflow.models.GPMC(data=(X, Y), kernel=gpflow.kernels.Exponential\n    (), likelihood=likelihood)\nmodel_2 = gpflow.models.SGPMC(data=(X, Y), kernel=gpflow.kernels.\n    Exponential(), inducing_variable=X.copy(), likelihood=likelihood)\nmodel_1.V = tf.convert_to_tensor(v_vals, dtype=default_float())\nmodel_2.V = tf.convert_to_tensor(v_vals, dtype=default_float())\nmodel_1.kernel.lengthscales.assign(0.8)\nmodel_2.kernel.lengthscales.assign(0.8)\nmodel_1.kernel.variance.assign(4.2)\nmodel_2.kernel.variance.assign(4.2)\nassert_allclose(model_1.log_posterior_density(), model_2.\n    log_posterior_density(), rtol=1e-05, atol=1e-05)\n"
}