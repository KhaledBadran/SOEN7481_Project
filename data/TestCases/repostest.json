{
    "functionName": "test",
    "className": null,
    "fileName": "/jeongyoonlee_&_Kaggler/tests_&_test_classification_tree.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "data = np.random.randint(0, 1000, size=(N_OBS, N_FEATURE))\ny = np.random.randint(2, size=N_OBS)\ntrain = data[0:N_OBS // 2]\nytrain = y[0:N_OBS // 2]\ntest = data[N_OBS // 2:]\nytest = y[N_OBS // 2:]\nlearner = ClassificationTree(number_of_features=N_FEATURE)\nfor t, x in enumerate(tqdm(train)):\n    learner.update(x, ytrain[t])\ncorrect_num = 0\nfor t, x in enumerate(tqdm(test)):\n    y_pred = learner.predict(x)\n    if y_pred == ytest[t]:\n        correct_num += 1\nprint(correct_num)\n"
}