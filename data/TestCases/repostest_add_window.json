{
    "functionName": "test_add_window",
    "className": null,
    "fileName": "/SimLeek_&_CV_PubSubs/tests_&_window_&_test_subscriber_windows.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "sub_win.SubscriberWindows.FRAME_DICT = {}\nwith mock.patch.object(cv2, 'namedWindow'\n    ) as mock_named_window, mock.patch.object(cv2, 'setMouseCallback'\n    ) as mock_set_mouse, mock.patch(\n    'displayarray.window.subscriber_windows.WeakMethod', new_callable=mock.\n    MagicMock) as mock_weak:\n    weak_method = mock_weak.return_value = mock.MagicMock()\n    sw = sub_win.SubscriberWindows().add_window('second window')\n    mock_weak.assert_has_calls([mock.call(sw.handle_mouse), mock.call(sw.\n        handle_mouse)])\n    assert sw.window_names == ['displayarray', 'second window']\n    mock_named_window.assert_has_calls([mock.call(\n        'displayarray (press ESC to quit)'), mock.call(\n        'second window (press ESC to quit)')])\n    mock_set_mouse.assert_has_calls([mock.call(\n        'displayarray (press ESC to quit)', weak_method), mock.call(\n        'second window (press ESC to quit)', weak_method)])\n"
}