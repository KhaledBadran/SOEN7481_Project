{
    "functionName": "test_bigOvalTree",
    "className": null,
    "fileName": "/OpenSCAP_&_OVAL-visualization-as-graph/tests_&_test_graph.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "tree = OvalNode(node_id=1, node_type='operator', value='and', children=[\n    OvalNode(node_id=2, node_type='value', value='false'), OvalNode(node_id\n    =3, node_type='operator', value='xor', children=[OvalNode(node_id=4,\n    node_type='value', value='true'), OvalNode(node_id=5, node_type=\n    'operator', value='one', children=[OvalNode(node_id=6, node_type=\n    'value', value='noteval'), OvalNode(node_id=7, node_type='value', value\n    ='true'), OvalNode(node_id=8, node_type='value', value='notappl')]),\n    OvalNode(node_id=9, node_type='value', value='error')]), OvalNode(\n    node_id=10, node_type='operator', value='or', children=[OvalNode(\n    node_id=11, node_type='value', value='unknown'), OvalNode(node_id=12,\n    node_type='value', value='true')])])\ntest_data_src = 'test_data/bigOvalTree.json'\ndict_of_tree = tests.any_test_help.any_get_test_data_json(test_data_src)\ntests.any_test_help.any_test_treeEvaluation_with_tree(tree, 'false')\ntests.any_test_help.any_test_tree_to_dict_of_tree(tree, dict_of_tree)\ntests.any_test_help.find_any_node(tree, 5)\ntests.any_test_help.any_test_dict_to_tree(dict_of_tree)\n"
}