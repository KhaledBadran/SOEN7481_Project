{
    "functionName": "test_create_storage_group_migration_params",
    "className": "PyU4VMigrationTest",
    "fileName": "/MichaelMcAleer_&_PyU4V/PyU4V_&_tests_&_unit_tests_&_test_pyu4v_migration.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Test create_storage_group_migration.\"\"\"\nwith mock.patch.object(self.migration, 'create_resource') as mock_create:\n    ref_params = dict()\n    ref_params['otherArrayId'] = self.data.remote_array\n    ref_params['srpId'] = self.data.srp\n    ref_params['portGroupId'] = self.data.port_group_name_f\n    ref_params['noCompression'] = True\n    ref_params['preCopy'] = True\n    ref_params['validate'] = True\n    self.migration.create_storage_group_migration(storage_group_name=self.\n        data.storagegroup_name, target_array_id=self.data.remote_array,\n        srp_id=self.data.srp, port_group_id=self.data.port_group_name_f,\n        no_compression=True, pre_copy=True, validate=True)\n    mock_create.assert_called_once_with(category=constants.MIGRATION,\n        resource_level=constants.SYMMETRIX, resource_level_id=self.conn.\n        array_id, resource_type=constants.STORAGEGROUP, resource_type_id=\n        self.data.storagegroup_name, payload=ref_params)\n"
}