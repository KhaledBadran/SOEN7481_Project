{
    "functionName": "test_target_coll_subset_by_sent",
    "className": "TestTarget",
    "fileName": "/apmoore1_&_Bella/tests_&_test_data_types.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Test the subset_by_sentiment function of TargetCollection\n        \"\"\"\ntarget_example_0 = Target([(3, 5), (6, 8)], '1', 'Iphone',\n    'text with Iphone', 'pos', sentence_id='4')\ntarget_example_1 = Target([(1, 5)], '3', 'Iphone', 'text with Iphone',\n    'neg', sentence_id='4')\ntarget_example_2 = Target([(1, 2)], '2', 'Iphone', 'text with Iphone',\n    'neg', sentence_id='5')\ntarget_example_3 = Target([(1, 2)], '4', 'Iphone', 'text with Iphone',\n    'neg', sentence_id='5')\ntarget_example_4 = Target([(1, 2)], '5', 'Iphone', 'text with Iphone',\n    'pos', sentence_id='6')\ntarget_example_5 = Target([(1, 2)], '6', 'Iphone', 'text with Iphone',\n    'neu', sentence_id='6')\ntarget_example_6 = Target([(1, 2)], '7', 'Iphone', 'text with Iphone',\n    'neg', sentence_id='6')\ntarget_example_7 = Target([(1, 2)], '8', 'Iphone', 'text with Iphone',\n    'neg', sentence_id='7')\ntarget_example_8 = Target([(1, 2)], '9', 'Iphone', 'text with Iphone',\n    'neg', sentence_id='8')\ntarget_example_9 = Target([(1, 2)], '10', 'Iphone', 'text with Iphone',\n    'neg', sentence_id='8')\ntarget_example_10 = Target([(1, 2)], '11', 'Iphone', 'text with Iphone',\n    'pos', sentence_id='8')\nall_targets = [target_example_0, target_example_1, target_example_2,\n    target_example_3, target_example_4, target_example_5, target_example_6,\n    target_example_7, target_example_8, target_example_9, target_example_10]\ntarget_col = TargetCollection(all_targets)\ntest_col = target_col.subset_by_sentiment(2)\nvalid_col = TargetCollection([target_example_0, target_example_1,\n    target_example_8, target_example_9, target_example_10])\nself.assertEqual(valid_col, test_col, msg=\n    'Should only return these {} but has returned this {}'.format(valid_col,\n    test_col))\ntest_col = target_col.subset_by_sentiment(1)\nvalid_col = TargetCollection([target_example_7, target_example_2,\n    target_example_3])\nself.assertEqual(valid_col, test_col, msg=\n    'Should only return these {} but has returned this {}'.format(valid_col,\n    test_col))\ntest_col = target_col.subset_by_sentiment(3)\nvalid_col = TargetCollection([target_example_4, target_example_5,\n    target_example_6])\nself.assertEqual(valid_col, test_col, msg=\n    'Should only return these {} but has returned this {}'.format(valid_col,\n    test_col))\n"
}