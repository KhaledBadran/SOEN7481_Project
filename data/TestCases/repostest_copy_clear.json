{
    "functionName": "test_copy_clear",
    "className": "TestGraphClasses",
    "fileName": "/Silmathoron_&_NNGT/testing_&_test_graphclasses.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Test that the copied graph is indeed the same as the original, but that\n        all its properties are deep copies.\n        Then check that clear_edges() removes all edges and no nodes.\n        \"\"\"\nref_result = graph.node_nb(), graph.edge_nb(), graph.node_nb(), 0\ncopied = graph.copy()\nself.assertIsNot(copied, graph)\ncomputed_result = [copied.node_nb(), copied.edge_nb()]\ncopied.clear_all_edges()\ncomputed_result.extend((copied.node_nb(), copied.edge_nb()))\nself.assertEqual(ref_result, tuple(computed_result),\n    \"\"\"Copy test failed for graph {}:\nref = {} vs exp {}            \"\"\".\n    format(graph.name, ref_result, computed_result))\nforeach_graph"
}