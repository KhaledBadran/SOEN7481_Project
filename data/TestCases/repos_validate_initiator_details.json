{
    "functionName": "_validate_initiator_details",
    "className": "CITestProvisioning",
    "fileName": "/MichaelMcAleer_&_PyU4V/PyU4V_&_tests_&_ci_tests_&_test_pyu4v_ci_provisioning.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "\"\"\"Validate the return contents of initiator requests.\n\n        :param initiator_details: content of initiator -- dict\n        \"\"\"\nnum_of_host_groups = 'num_of_host_groups'\nnum_of_powerpath_hosts = 'num_of_powerpath_hosts'\nself.assertIsInstance(initiator_details, dict)\nself.assertIn(constants.INITIATOR_ID, initiator_details)\nself.assertIn(constants.SYMMETRIX_PORT_KEY, initiator_details)\nself.assertIn(constants.TYPE, initiator_details)\nself.assertIn(constants.LOGGED_IN, initiator_details)\nself.assertIn(constants.ON_FABRIC, initiator_details)\nself.assertIn(constants.NUM_OF_VOLS, initiator_details)\nself.assertIn(num_of_host_groups, initiator_details)\nself.assertIn(constants.NUM_OF_MASKING_VIEWS, initiator_details)\nself.assertIn(num_of_powerpath_hosts, initiator_details)\nself.assertIsInstance(initiator_details[constants.INITIATOR_ID], str)\nself.assertIsInstance(initiator_details[constants.SYMMETRIX_PORT_KEY], list)\nself.assertIsInstance(initiator_details[constants.TYPE], str)\nself.assertIsInstance(initiator_details[constants.LOGGED_IN], bool)\nself.assertIsInstance(initiator_details[constants.ON_FABRIC], bool)\nself.assertIsInstance(initiator_details[constants.NUM_OF_VOLS], int)\nself.assertIsInstance(initiator_details[num_of_host_groups], int)\nself.assertIsInstance(initiator_details[constants.NUM_OF_MASKING_VIEWS], int)\nself.assertIsInstance(initiator_details[num_of_powerpath_hosts], int)\nflags_in_effect = 'flags_in_effect'\nmasking_view = 'maskingview'\nport_flags_override = 'port_flags_override'\nfabric_name = 'fabric_name'\nfcid_lockdown = 'fcid_lockdown'\nif flags_in_effect in initiator_details:\n    self.assertIsInstance(initiator_details[flags_in_effect], str)\nif masking_view in initiator_details:\n    self.assertIsInstance(initiator_details[masking_view], list)\nif constants.HOST in initiator_details:\n    self.assertIsInstance(initiator_details[constants.HOST], str)\nif port_flags_override in initiator_details:\n    self.assertIsInstance(initiator_details[port_flags_override], bool)\nif fabric_name in initiator_details:\n    self.assertIsInstance(initiator_details[fabric_name], str)\nif constants.ALIAS in initiator_details:\n    self.assertIsInstance(initiator_details[constants.ALIAS], str)\nif constants.FCID in initiator_details:\n    self.assertIsInstance(initiator_details[constants.FCID], str)\nif fcid_lockdown in initiator_details:\n    self.assertIsInstance(initiator_details[fcid_lockdown], str)\n"
}