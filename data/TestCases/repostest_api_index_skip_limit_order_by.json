{
    "functionName": "test_api_index_skip_limit_order_by",
    "className": null,
    "fileName": "/mostafa_&_GRest/tests_&_test_extended_app.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "uid_list = []\nfor i in range(1, 11):\n    res = client.post('/users', data=json.dumps({'first_name': str(i),\n        'last_name': str(i + 1), 'phone_number': str(i * 2)}), headers={\n        'Content-Type': 'application/json'})\n    if 'uid' in res.json:\n        uid_list.append(res.json['uid'])\nassert len(uid_list) == 10\nres = client.get('/users', query_string={'skip': 11}, headers={\n    'Content-Type': 'application/json'})\nassert res.status_code == 422\nassert 'errors' in res.json\nres = client.get('/users', query_string={'skip': 1, 'limit': 1, 'order_by':\n    'first_name'}, headers={'Content-Type': 'application/json'})\nassert res.status_code == 200\nassert 'users' in res.json\nassert len(res.json['users']) == 1\nassert res.json['users'][0]['first_name'] == '10'\nassert res.json['users'][0]['last_name'] == '11'\nres = client.get('/users', query_string={'skip': 1, 'limit': 1, 'order_by':\n    '-first_name'}, headers={'Content-Type': 'application/json'})\nassert res.status_code == 200\nassert 'users' in res.json\nres = client.get('/users', query_string={'skip': 1, 'limit': 1, 'order_by':\n    'prop1'}, headers={'Content-Type': 'application/json'})\nassert res.status_code == 404\nassert 'errors' in res.json\nres = client.get('/users', query_string={'order_by': 'first_name'}, headers\n    ={'Accept': 'text/yaml'})\nassert res.status_code == 200\ndata = yaml.load(res.data)\nassert 'users' in data\nassert len(data['users']) == 10\nassert data['users'][0]['first_name'] == '1'\nassert data['users'][0]['last_name'] == '2'\nres = client.get('/users', query_string={'order_by': 'first_name'}, headers\n    ={'Accept': 'text/xml'})\nassert res.status_code == 200\ndata = ET.fromstring(res.data)\nassert len(data.findall('users')) == 1\nassert len([i for i in data.iter('item')]) == 10\nfor uid in uid_list:\n    res = client.delete('/users/' + uid)\n    assert res.status_code == 200\n    assert res.json == {'result': 'OK'}\n"
}