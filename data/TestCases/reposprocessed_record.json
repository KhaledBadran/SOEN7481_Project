{
    "functionName": "processed_record",
    "className": null,
    "fileName": "/Merck_&_DeepBGC/test_&_unit_&_output_&_test_unit_writers.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "comment_key = util.format_detector_meta_key(detector_label)\nrecord = SeqRecord(Seq('ACTGCTCGACTGATT', alphabet=generic_dna))\nrecord.annotations['structured_comment'] = collections.OrderedDict()\nrecord.annotations['structured_comment'][comment_key\n    ] = collections.OrderedDict(name=detector_name, label=detector_label,\n    score_threshold=score_threshold)\nrecord.features.append(SeqFeature(FeatureLocation(0, 2), type='CDS',\n    qualifiers={'locus_tag': ['A']}))\nrecord.features.append(SeqFeature(FeatureLocation(2, 5), type='CDS',\n    qualifiers={'locus_tag': ['B']}))\nrecord.features.append(SeqFeature(FeatureLocation(5, 8), type='CDS',\n    qualifiers={'locus_tag': ['C']}))\nscore_column = util.format_bgc_score_column(detector_name)\nqualifiers = {score_column: [0.4], 'db_xref': ['PF00001'], 'locus_tag': [\n    'A'], 'database': [PFAM_DB_VERSION]}\nrecord.features.append(SeqFeature(FeatureLocation(0, 2), type=util.\n    PFAM_FEATURE, qualifiers=qualifiers))\nqualifiers = {score_column: [0.7], 'db_xref': ['PF00002'], 'locus_tag': [\n    'B'], 'database': [PFAM_DB_VERSION]}\nrecord.features.append(SeqFeature(FeatureLocation(2, 5), type=util.\n    PFAM_FEATURE, qualifiers=qualifiers))\nqualifiers = {score_column: [0.6], 'db_xref': ['PF00003'], 'locus_tag': [\n    'C'], 'database': [PFAM_DB_VERSION]}\nrecord.features.append(SeqFeature(FeatureLocation(5, 8), type=util.\n    PFAM_FEATURE, qualifiers=qualifiers))\nqualifiers = {score_column: ['0.6'], 'detector': [detector_name],\n    'detector_label': [detector_label]}\nrecord.features.append(SeqFeature(FeatureLocation(0, 5), type='cluster',\n    qualifiers=qualifiers))\nqualifiers = {'detector': ['annotated'], 'detector_label': ['annotated']}\nrecord.features.append(SeqFeature(FeatureLocation(2, 8), type='cluster',\n    qualifiers=qualifiers))\nreturn record\npytest.fixture"
}