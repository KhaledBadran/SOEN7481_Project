{
    "functionName": "test_from_values",
    "className": "TestNoteClass",
    "fileName": "/ScottMorse_&_PyMusician/pymusician_&_test_&_test_note.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "C = pm.Note.from_values(0, 0)\nA = pm.Note.from_values(5, 9)\nBs = pm.Note.from_values(6, 0)\nFb = pm.Note.from_values(3, 4)\nGbb = pm.Note.from_values(4, 5)\nAsss = pm.Note.from_values(5, 0)\nself.assertEqual(C.name, 'C')\nself.assertEqual(A.name, 'A')\nself.assertEqual(Bs.name, 'B#')\nself.assertEqual(Fb.name, 'Fb')\nself.assertEqual(Gbb.name, 'Gbb')\nself.assertEqual(Asss.name, 'A###')\nself.assertEqual(pm.Note.from_values(0, 1).name, 'C#')\nself.assertEqual(pm.Note.from_values(0, 2).name, 'C##')\nself.assertEqual(pm.Note.from_values(0, 11).name, 'Cb')\nself.assertEqual(pm.Note.from_values(0, 10).name, 'Cbb')\nself.assertEqual(pm.Note.from_values(1, 2).name, 'D')\nself.assertEqual(pm.Note.from_values(1, 3).name, 'D#')\nself.assertEqual(pm.Note.from_values(1, 4).name, 'D##')\nself.assertEqual(pm.Note.from_values(1, 1).name, 'Db')\nself.assertEqual(pm.Note.from_values(1, 0).name, 'Dbb')\nself.assertEqual(pm.Note.from_values(2, 4).name, 'E')\nself.assertEqual(pm.Note.from_values(2, 5).name, 'E#')\nself.assertEqual(pm.Note.from_values(2, 6).name, 'E##')\nself.assertEqual(pm.Note.from_values(2, 3).name, 'Eb')\nself.assertEqual(pm.Note.from_values(2, 2).name, 'Ebb')\nself.assertEqual(pm.Note.from_values(3, 5).name, 'F')\nself.assertEqual(pm.Note.from_values(3, 6).name, 'F#')\nself.assertEqual(pm.Note.from_values(3, 7).name, 'F##')\nself.assertEqual(pm.Note.from_values(3, 4).name, 'Fb')\nself.assertEqual(pm.Note.from_values(3, 3).name, 'Fbb')\nself.assertEqual(pm.Note.from_values(4, 7).name, 'G')\nself.assertEqual(pm.Note.from_values(4, 8).name, 'G#')\nself.assertEqual(pm.Note.from_values(4, 9).name, 'G##')\nself.assertEqual(pm.Note.from_values(4, 6).name, 'Gb')\nself.assertEqual(pm.Note.from_values(4, 5).name, 'Gbb')\nself.assertEqual(pm.Note.from_values(5, 9).name, 'A')\nself.assertEqual(pm.Note.from_values(5, 10).name, 'A#')\nself.assertEqual(pm.Note.from_values(5, 11).name, 'A##')\nself.assertEqual(pm.Note.from_values(5, 8).name, 'Ab')\nself.assertEqual(pm.Note.from_values(5, 7).name, 'Abb')\nself.assertEqual(pm.Note.from_values(6, 11).name, 'B')\nself.assertEqual(pm.Note.from_values(6, 0).name, 'B#')\nself.assertEqual(pm.Note.from_values(6, 1).name, 'B##')\nself.assertEqual(pm.Note.from_values(6, 10).name, 'Bb')\nself.assertEqual(pm.Note.from_values(6, 9).name, 'Bbb')\n"
}