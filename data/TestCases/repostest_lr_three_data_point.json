{
    "functionName": "test_lr_three_data_point",
    "className": "DiscreteMNLMultinomialTests",
    "fileName": "/Mogeng_&_IOHMM/tests_&_test_DiscreteMNL.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "self.model = DiscreteMNL(solver='lbfgs', fit_intercept=True, est_stderr=\n    True, reg_method='l2', alpha=0.1, l1_ratio=0, tol=0.0001, max_iter=100,\n    coef=None, stderr=None, classes=None)\nself.model.fit(self.data_anes96.exog[6:9, :], self.data_anes96.endog[6:9,],\n    sample_weight=0.5)\nself.assertEqual(self.model.coef.shape, (3, 6))\nnp.testing.assert_array_almost_equal(self.model.loglike_per_sample(self.\n    data_anes96.exog[6:9, :], np.array([1, 4, 3])), np.array([-0.015, -\n    0.089, -0.095]), decimal=3)\nnp.testing.assert_array_almost_equal(self.model.loglike_per_sample(self.\n    data_anes96.exog[6:9, :], np.array([3, 1, 4])), np.array([-4.2, -5.046,\n    -2.827]), decimal=3)\nnp.testing.assert_array_almost_equal(self.model.loglike_per_sample(self.\n    data_anes96.exog[6:9, :], np.array([3, 0, 5])), np.array([-4.2, -np.\n    Infinity, -np.Infinity]), decimal=3)\n"
}