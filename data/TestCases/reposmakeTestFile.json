{
    "functionName": "makeTestFile",
    "className": null,
    "fileName": "/incf-nidash_&_PyNIDM/nidm_&_experiment_&_tools_&_tests_&_test_rest.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "global test_person_uuid, test_p2_subject_uuids\nnidm_project_name = params.get('NIDM_PROJECT_NAME', False\n    ) or 'Project_name_sample'\nnidm_project_identifier = params.get('NIDM_PROJECT_IDENTIFIER', False) or 9610\nnidm_project2_identifier = params.get('NIDM_PROJECT_IDENTIFIER', False) or 550\nnidm_project_description = params.get('NIDM_PROJECT_DESCRIPTION', False\n    ) or '1234356 Test investigation'\nproject_uuid = params.get('PROJECT_UUID', False) or '_proj1'\nproject_uuid2 = params.get('PROJECT2_UUID', False) or '_proj2'\nsession_uuid = params.get('SESSION_UUID', False) or '_ses1'\nsession_uuid2 = params.get('SESSION2_UUID', False) or '_ses2'\np1kwargs = {Constants.NIDM_PROJECT_NAME: nidm_project_name, Constants.\n    NIDM_PROJECT_IDENTIFIER: nidm_project_identifier, Constants.\n    NIDM_PROJECT_DESCRIPTION: nidm_project_description}\np2kwargs = {Constants.NIDM_PROJECT_NAME: nidm_project_name, Constants.\n    NIDM_PROJECT_IDENTIFIER: nidm_project2_identifier, Constants.\n    NIDM_PROJECT_DESCRIPTION: nidm_project_description}\nproject = Project(uuid=project_uuid, attributes=p1kwargs)\nsession = Session(uuid=session_uuid, project=project)\nacq = Acquisition(uuid='_acq1', session=session)\nacq2 = Acquisition(uuid='_acq2', session=session)\nacq3 = Acquisition(uuid='_acq2', session=session)\nperson = acq.add_person(attributes={Constants.NIDM_SUBJECTID: 'a1_9999'})\ntest_person_uuid = str(person.identifier).replace('niiri:', '')\nacq.add_qualified_association(person=person, role=Constants.NIDM_PARTICIPANT)\nperson2 = acq2.add_person(attributes={Constants.NIDM_SUBJECTID: 'a1_8888'})\nacq2.add_qualified_association(person=person2, role=Constants.NIDM_PARTICIPANT)\nperson3 = acq3.add_person(attributes={Constants.NIDM_SUBJECTID: 'a2_7777'})\nacq2.add_qualified_association(person=person3, role=Constants.NIDM_PARTICIPANT)\nproject2 = Project(uuid=project_uuid2, attributes=p2kwargs)\nsession2 = Session(uuid=session_uuid2, project=project2)\nacq4 = Acquisition(uuid='_acq3', session=session2)\nacq5 = Acquisition(uuid='_acq4', session=session2)\nperson4 = acq4.add_person(attributes={Constants.NIDM_SUBJECTID: 'a3_6666'})\nacq4.add_qualified_association(person=person4, role=Constants.NIDM_PARTICIPANT)\nperson5 = acq5.add_person(attributes={Constants.NIDM_SUBJECTID: 'a4_5555'})\nacq5.add_qualified_association(person=person5, role=Constants.NIDM_PARTICIPANT)\naddData(acq, {Constants.NIDM_AGE: 9, Constants.NIDM_HANDEDNESS: 'R',\n    Constants.NIDM_DIAGNOSIS: 'Anxiety'})\naddData(acq2, {Constants.NIDM_AGE: 8, Constants.NIDM_HANDEDNESS: 'L',\n    Constants.NIDM_DIAGNOSIS: 'ADHD'})\naddData(acq4, {Constants.NIDM_AGE: 7, Constants.NIDM_HANDEDNESS: 'A',\n    Constants.NIDM_DIAGNOSIS: 'Depression'})\naddData(acq5, {Constants.NIDM_AGE: 6, Constants.NIDM_HANDEDNESS: 'R',\n    Constants.NIDM_DIAGNOSIS: 'Depression'})\ntest_p2_subject_uuids.append(str(person4.identifier).replace('niiri:', ''))\ntest_p2_subject_uuids.append(str(person5.identifier).replace('niiri:', ''))\nwith open('a.ttl', 'w') as f:\n    f.write(project.graph.serialize(None, format='rdf', rdf_format='ttl'))\nwith open('b.ttl', 'w') as f:\n    f.write(project2.graph.serialize(None, format='rdf', rdf_format='ttl'))\ngraph = Graph()\nfor nidm_file in ('a.ttl', 'b.ttl'):\n    tmp = Graph()\n    graph = graph + tmp.parse(nidm_file, format=util.guess_format(nidm_file))\ngraph.serialize(filename, format='turtle')\nos.unlink('a.ttl')\nos.unlink('b.ttl')\nwith open(filename, 'r') as f:\n    x = f.read()\nwith open('./agent.ttl', 'w') as f:\n    f.write(x)\n"
}