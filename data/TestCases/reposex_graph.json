{
    "functionName": "ex_graph",
    "className": null,
    "fileName": "/seung-lab_&_PyChunkedGraph/pychunkedgraph_&_backend_&_cutting_test.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "w_n = 0.8\nw_c = 0.5\nw_l = 0.2\nw_h = 1.0\ninf = np.finfo(np.float32).max\nedgelist = [[1, 2, w_n], [1, 3, w_l], [4, 7, w_l], [6, 9, w_l], [2, 4, w_l],\n    [2, 5, w_l], [2, 3, w_n], [8, 9, w_c], [3, 5, w_l], [3, 6, w_c], [5, 6,\n    w_l], [7, 8, w_n], [7, 10, w_n], [8, 10, w_n], [8, 11, w_n], [9, 11,\n    w_n], [10, 12, w_n], [11, 12, w_n], [4, 5, inf]]\nedgelist = np.array(edgelist)\nedges = edgelist[:, :2].astype(np.int) - 1\nweights = edgelist[:, (2)].astype(np.float)\nn_nodes = 100000\nedges = np.unique(np.sort(np.random.randint(0, n_nodes, n_nodes * 5).\n    reshape(-1, 2), axis=1), axis=0)\nweights = np.random.rand(len(edges))\nif not len(np.unique(edges) == 12):\n    edges, weights = ex_graph()\nedges += 100\nreturn edges.astype(np.uint64), weights\n"
}