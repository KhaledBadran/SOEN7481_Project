{
    "functionName": "test_DataSet_1DcutE",
    "className": null,
    "fileName": "/jakob-lass_&_MJOLNIR/MJOLNIR_&_Data_&_DataSet.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "q = np.array([1.23, -1.25]).reshape(2, 1)\nwidth = 0.1\nEmin = 1.5\nEmax = 2.5\nplt.ioff()\nimport matplotlib\nmatplotlib.use('Agg')\nconvertFiles = ['Data/camea2018n000137.hdf']\nDatset = DataSet(dataFiles=convertFiles)\nDatset.convertDataFile(saveFile=True)\nDatset._getData()\nI, qx, qy, energy, Norm, Monitor = Datset.I.extractData(\n    ), Datset.qx.extractData(), Datset.qy.extractData(\n    ), Datset.energy.extractData(), Datset.Norm.extractData(\n    ), Datset.Monitor.extractData()\n[intensity, MonitorCount, Normalization, normcounts], [bins] = cut1DE(positions\n    =[qx, qy, energy], I=I, Norm=Norm, Monitor=Monitor, E1=Emin, E2=Emax, q\n    =q, width=width, minPixel=0.01)\nQ = Datset.convertToHKL(q.reshape(2))\nData, [bins] = Datset.cut1DE(E1=Emin, E2=Emax, q=Q, width=width, minPixel=0.01)\nassert np.min(bins) >= Emin - 0.01\nassert np.max(bins) <= Emax + 0.01\nassert len(bins) == len(intensity) + 1\nassert intensity.shape == MonitorCount.shape\nassert intensity.shape == Normalization.shape\nassert intensity.shape == normcounts.shape\nData, [bins] = Datset.cut1DE(E1=Emin, E2=Emax, q=q, width=width, minPixel=\n    0.01, rlu=False)\nData, [bins] = Datset.cut1DE(E1=Emin, E2=Emax, q=q, width=0.1, minPixel=\n    0.01, rlu=False, constantBins=True)\nassert np.all(np.isclose(np.diff(bins), 0.01))\nassert bins.min() >= Emin\nassert bins.max() <= Emax\ntry:\n    cut1DE(positions=[qx, qy, energy], I=I, Norm=Norm, Monitor=Monitor, E1=\n        500, E2=700, q=q, width=width, minPixel=0.01)\n    assert False\nexcept AttributeError:\n    assert True\ntry:\n    cut1DE(positions=[qx, qy, energy], I=I, Norm=Norm, Monitor=Monitor, E1=\n        5, E2=7, q=np.array([20.0, 0]).reshape(2, 1), width=width, minPixel\n        =0.01)\n    assert False\nexcept AttributeError:\n    assert True\nData, [bins] = Datset.cut1DE(E1=Emin, E2=Emax, q=q, width=0.1, minPixel=\n    0.01, rlu=False, constantBins=True)\nax, Data2, [bins2] = Datset.plotCut1DE(E1=Emin, E2=Emax, q=q, width=0.1,\n    minPixel=0.01, rlu=False, constantBins=True)\nassert Data.equals(Data2)\nassert np.all(np.isclose(bins, bins2))\nufitData = Datset.cut1DE(E1=Emin, E2=Emax, q=q, width=0.1, minPixel=0.01,\n    rlu=False, constantBins=True, ufit=True)\nax, ufitData2 = Datset.plotCut1DE(E1=Emin, E2=Emax, q=q, width=0.1,\n    minPixel=0.01, rlu=False, constantBins=True, ufit=True)\nfiles = ', '.join([x.replace('hdf', 'nxs').split('/')[-1] for x in\n    convertFiles])\nassert np.all([np.all(np.isclose(x, y, equal_nan=True)) for x, y in zip(\n    ufitData.fit_columns, ufitData2.fit_columns)])\nassert ufitData.meta == ufitData2.meta\nassert ufitData.meta['instrument'] == 'CAMEA'\nassert ufitData.meta['datafilename'] == files\n"
}