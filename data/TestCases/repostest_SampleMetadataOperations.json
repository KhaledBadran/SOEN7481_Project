{
    "functionName": "test_SampleMetadataOperations",
    "className": "SingleRequestTests",
    "fileName": "/kaltura_&_KalturaGeneratedAPIClientsPython/KalturaClient_&_tests_&_test_functional.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "metaDataFieldName = 'SubtitleFormat'\nfieldValue = 'VobSub'\nxsdFile = 'MetadataSchema.xsd'\npager = KalturaFilterPager()\nsearch = KalturaMediaEntryFilter()\nsearch.setOrderBy(KalturaMediaEntryOrderBy.CREATED_AT_ASC)\nsearch.setMediaTypeEqual(KalturaMediaType.VIDEO)\npager.setPageSize(10)\npager.setPageIndex(1)\nprint('List videos, get the first one...')\nentries = self.client.media.list(search, pager).objects\nprofile = KalturaMetadataProfile()\nprofile.setName('TestProfile %s' % (testString,))\nMetadataObjectType = KalturaMetadataObjectType.ENTRY\nprofile.setMetadataObjectType(MetadataObjectType)\nviewsData = ''\nxsdFh = getTestFile(xsdFile)\nnewProfile = self.client.metadata.metadataProfile.add(profile, xsdFh.read(),\n    viewsData)\nfilter = KalturaMetadataProfileFilter()\nmetadata = self.client.metadata.metadataProfile.list(filter, pager).objects\nname = entries[0].getName()\nid = entries[0].getId()\nif metadata[0].getXsd() is not None:\n    print('1. There are custom fields for video: {}, entryid: {}'.format(\n        name, id))\nelse:\n    print('1. There are no custom fields for video: {}, entryid: {}'.format\n        (name, id))\nprofile = KalturaMetadataProfile()\nprofile.setName('TestProfile %s' % (testString,))\nprofile.setMetadataObjectType(KalturaMetadataObjectType.ENTRY)\nviewsData = ''\nmetadataResult = self.client.metadata.metadataProfile.update(newProfile.id,\n    profile, xsdFh.read(), viewsData)\nself.assertIsNotNone(metadataResult.xsd)\nfilter2 = KalturaMetadataFilter()\nfilter2.setObjectIdEqual(entries[0].id)\nxmlData = '<metadata><SubtitleFormat>{}</SubtitleFormat></metadata>'.format(\n    fieldValue)\nmetadata2 = self.client.metadata.metadata.add(newProfile.id, profile.\n    metadataObjectType, entries[0].id, xmlData)\nself.assertIsNotNone(metadata2.xml)\nprint('3. Successfully added the custom data field for video: {}, entryid: {}'\n    .format(name, id))\nxmlStr = metadata2.xml\nprint('XML used: %s' % xmlStr)\nfilter3 = KalturaMetadataFilter()\nfilter3.setObjectIdEqual(entries[0].id)\nfilter3.setMetadataProfileIdEqual(newProfile.id)\nmetadataList = self.client.metadata.metadata.list(filter3).objects\nself.assertIsNotNone(metadataList[0].xml)\nprint('4. Current metadata for video: {}, entryid: {}'.format(name, id))\nxmlquoted = metadataList[0].xml\nprint('XML: {}'.format(xmlquoted))\nxml = metadataList[0].xml\npos = xml.find('<{metaDataFieldName}>{fieldValue}</{metaDataFieldName}>'.\n    format(metaDataFieldName=metaDataFieldName, fieldValue=fieldValue))\nassert pos >= 0\npattern = re.compile('<{metaDataFieldName}>([^<]+)</{metaDataFieldName}>'.\n    format(metaDataFieldName=metaDataFieldName))\nxml = pattern.sub('<{metaDataFieldName}>Ogg Writ</{metaDataFieldName}>'.\n    format(metaDataFieldName=metaDataFieldName), xml)\nrc = self.client.metadata.metadata.update(metadataList[0].id, xml)\nprint('5. Updated metadata for video: {}, entryid: {}'.format(name, id))\nxmlquoted = rc.xml\nprint('XML: {}'.format(xmlquoted))\n"
}