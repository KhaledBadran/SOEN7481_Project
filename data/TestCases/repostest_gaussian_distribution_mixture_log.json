{
    "functionName": "test_gaussian_distribution_mixture_log",
    "className": null,
    "fileName": "/Neuraxio_&_Neuraxle/testing_&_hyperparams_&_test_distributions.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "distribution_amplitudes = [1, 1, 1]\nmeans = [-2, 0, 2]\nstds = [1, 1, 1]\ndistribution_mins = [None for _ in range(len(means))]\ndistribution_max = [None for _ in range(len(means))]\nhd = DistributionMixture.build_gaussian_mixture(distribution_amplitudes,\n    means, stds, distribution_mins, distribution_max, use_logs=True)\nsamples = get_many_samples_for(hd)\nsamples_median = np.median(samples)\nassert 0.5 < samples_median < 1.5\nsamples_std = np.std(samples)\nassert 1 < samples_std < 4\nassert abs(hd.pdf(-2.0) - 0.0) < 1e-06\nassert abs(hd.pdf(1.0) - 0.24377901627294607) < 1e-06\nassert abs(hd.pdf(5.0) - 0.03902571107126729) < 1e-06\nassert abs(hd.cdf(-2.0) - 0.0) < 1e-06\nassert abs(hd.cdf(1.0) - 0.5) < 1e-06\nassert abs(hd.cdf(5.0) - 0.8720400927468334) < 1e-06\nassert hd.min() == 0\nassert hd.max() == np.inf\nassert abs(hd.mean() - 2.225189976999746) < 1e-06\nassert abs(hd.var() - 9.916017516376925) < 1e-06\nassert abs(hd.std() - 3.1489708662318434) < 1e-06\nassert abs(hd.mean() - np.mean(samples)) < 0.1\nassert abs(hd.var() - np.var(samples)) < 0.5\n"
}