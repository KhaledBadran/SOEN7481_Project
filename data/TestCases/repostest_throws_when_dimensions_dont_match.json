{
    "functionName": "test_throws_when_dimensions_dont_match",
    "className": null,
    "fileName": "/oberbichler_&_HyperJet/tests_&_test_hyperjet.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "with pytest.raises(RuntimeError) as ex:\n    hj.HyperJet(1, [1, 2], [[1, 2, 3], [4, 5, 6]])\nassert_equal('Invalid shape!', str(ex.value))\nwith pytest.raises(RuntimeError) as ex:\n    hj.HyperJet(1, [1, 2, 3], [[1, 2], [3, 4]])\nassert_equal('Invalid shape!', str(ex.value))\nlhs = hj.HyperJet(2, [1, 2])\nrhs = hj.HyperJet(3, [1, 2, 3])\nwith pytest.raises(RuntimeError) as ex:\n    lhs + rhs\nassert_equal('Caught an unknown exception!', str(ex.value))\nwith pytest.raises(RuntimeError) as ex:\n    lhs - rhs\nassert_equal('Caught an unknown exception!', str(ex.value))\nwith pytest.raises(RuntimeError) as ex:\n    lhs * rhs\nassert_equal('Caught an unknown exception!', str(ex.value))\nwith pytest.raises(RuntimeError) as ex:\n    lhs / rhs\nassert_equal('Caught an unknown exception!', str(ex.value))\nwith pytest.raises(RuntimeError) as ex:\n    lhs += rhs\nassert_equal('Caught an unknown exception!', str(ex.value))\nwith pytest.raises(RuntimeError) as ex:\n    lhs -= rhs\nassert_equal('Caught an unknown exception!', str(ex.value))\nwith pytest.raises(RuntimeError) as ex:\n    lhs *= rhs\nassert_equal('Caught an unknown exception!', str(ex.value))\nwith pytest.raises(RuntimeError) as ex:\n    lhs /= rhs\nassert_equal('Caught an unknown exception!', str(ex.value))\nwith pytest.raises(RuntimeError) as ex:\n    hj.HyperJet.atan2(lhs, rhs)\nassert_equal('Caught an unknown exception!', str(ex.value))\nwith pytest.raises(RuntimeError) as ex:\n    lhs == rhs\nassert_equal('Caught an unknown exception!', str(ex.value))\nwith pytest.raises(RuntimeError) as ex:\n    lhs != rhs\nassert_equal('Caught an unknown exception!', str(ex.value))\nwith pytest.raises(RuntimeError) as ex:\n    lhs < rhs\nassert_equal('Caught an unknown exception!', str(ex.value))\nwith pytest.raises(RuntimeError) as ex:\n    lhs > rhs\nassert_equal('Caught an unknown exception!', str(ex.value))\nwith pytest.raises(RuntimeError) as ex:\n    lhs <= rhs\nassert_equal('Caught an unknown exception!', str(ex.value))\nwith pytest.raises(RuntimeError) as ex:\n    lhs >= rhs\nassert_equal('Caught an unknown exception!', str(ex.value))\n"
}