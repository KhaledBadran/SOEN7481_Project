{
    "functionName": "test_pad_circular",
    "className": "TestMath",
    "fileName": "/tum-pbs_&_PhiFlow/tests_&_test_math.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "tf.InteractiveSession()\na = np.array([1, 2, 3, 4, 5])\na_ = pad(a, [[2, 3]], mode='circular')\nnp.testing.assert_equal(a_, [4, 5, 1, 2, 3, 4, 5, 1, 2, 3])\na = tf.constant(a)\na_ = pad(a, [[2, 3]], mode='circular').eval()\nnp.testing.assert_equal(a_, [4, 5, 1, 2, 3, 4, 5, 1, 2, 3])\nt = [[3, 1, 2, 3, 1], [6, 4, 5, 6, 4], [3, 1, 2, 3, 1]]\na = np.array([[1, 2, 3], [4, 5, 6]]).reshape([1, 2, 3, 1])\na_ = pad(a, [[0, 0], [0, 1], [1, 1], [0, 0]], mode='circular')\nnp.testing.assert_equal(a_.shape, [1, 3, 5, 1])\nnp.testing.assert_equal(a_.reshape([3, 5]), t)\na = tf.constant(a)\na_ = pad(a, [[0, 0], [0, 1], [1, 1], [0, 0]], mode='circular').eval()\nnp.testing.assert_equal(a_.shape, [1, 3, 5, 1])\nnp.testing.assert_equal(a_.reshape([3, 5]), t)\n"
}