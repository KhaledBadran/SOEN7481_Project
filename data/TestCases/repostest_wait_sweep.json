{
    "functionName": "test_wait_sweep",
    "className": "Test_wait",
    "fileName": "/QE-Lab_&_OpenQL/tests_&_test_wait.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "config_fn = os.path.join(curdir, 'hardware_config_cc_light.json')\nplatform = ql.Platform('seven_qubits_chip', config_fn)\nsweep_points = [1, 2]\nnum_qubits = 7\np = ql.Program('test_wait_sweep', platform, num_qubits)\np.set_sweep_points(sweep_points)\nqubit_idx = 0\nwaits = [20, 40, 60, 100, 200, 400, 800, 1000, 2000]\nfor kno, wait_nanoseconds in enumerate(waits):\n    k = ql.Kernel('kernel_' + str(kno), platform, num_qubits)\n    k.prepz(qubit_idx)\n    k.gate('rx90', [qubit_idx])\n    k.gate('wait', [qubit_idx], wait_nanoseconds)\n    k.gate('rx180', [qubit_idx])\n    k.gate('wait', [qubit_idx], wait_nanoseconds)\n    k.gate('rx90', [qubit_idx])\n    k.gate('wait', [qubit_idx], wait_nanoseconds)\n    k.gate('measure', [qubit_idx])\n    p.add_kernel(k)\np.compile()\nQISA_fn = os.path.join(output_dir, p.name + '.qisa')\ngold_fn = rootDir + '/golden/test_wait_sweep.qisa'\nself.assertTrue(file_compare(QISA_fn, gold_fn))\nunittest.skip"
}