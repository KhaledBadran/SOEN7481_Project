{
    "functionName": "test_storage_to_dataframe",
    "className": null,
    "fileName": "/dss-extensions_&_OpenDSSDirect.py/tests_&_test_opendssdirect_no_ext_errors.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "dss.Basic.LegacyModels(True)\nassert dss.Basic.LegacyModels()\nassert dss.utils.run_command('Redirect {}'.format(PATH_TO_DSS)\n    ) == '', 'Unable to find test data'\ndss.run_command('New Storage.631')\nexpected_dict = pd.DataFrame({'%Charge': {'Storage.631': '100'},\n    '%Discharge': {'Storage.631': '100'}, '%EffCharge': {'Storage.631':\n    '90'}, '%EffDischarge': {'Storage.631': '90'}, '%IdlingkW': {\n    'Storage.631': '1'}, '%Idlingkvar': {'Storage.631': '0'}, '%R': {\n    'Storage.631': '0'}, '%X': {'Storage.631': '50'}, '%reserve': {\n    'Storage.631': '20'}, '%stored': {'Storage.631': '100'}, 'Balanced': {\n    'Storage.631': 'No'}, 'ChargeTrigger': {'Storage.631': '0'},\n    'DischargeTrigger': {'Storage.631': '0'}, 'DispMode': {'Storage.631':\n    'default'}, 'DynaDLL': {'Storage.631': ''}, 'DynaData': {'Storage.631':\n    ()}, 'LimitCurrent': {'Storage.631': 'No'}, 'State': {'Storage.631':\n    'IDLING'}, 'TimeChargeTrig': {'Storage.631': '2'}, 'UserData': {\n    'Storage.631': ()}, 'UserModel': {'Storage.631': ''}, 'Vmaxpu': {\n    'Storage.631': '1.1'}, 'Vminpu': {'Storage.631': '0.9'}, 'basefreq': {\n    'Storage.631': '60'}, 'bus1': {'Storage.631': '631_1'}, 'class': {\n    'Storage.631': '1'}, 'conn': {'Storage.631': 'wye'}, 'daily': {\n    'Storage.631': ''}, 'debugtrace': {'Storage.631': 'NO'}, 'duty': {\n    'Storage.631': ''}, 'enabled': {'Storage.631': True}, 'kVA': {\n    'Storage.631': '25'}, 'kW': {'Storage.631': '0'}, 'kWhrated': {\n    'Storage.631': '50'}, 'kWhstored': {'Storage.631': '50'}, 'kWrated': {\n    'Storage.631': '25'}, 'kv': {'Storage.631': '12.47'}, 'kvar': {\n    'Storage.631': '0'}, 'like': {'Storage.631': ''}, 'model': {\n    'Storage.631': '1'}, 'pf': {'Storage.631': '1'}, 'phases': {\n    'Storage.631': '3'}, 'spectrum': {'Storage.631': ''}, 'yearly': {\n    'Storage.631': ''}}).to_dict()\nactual_dict = dss.utils.class_to_dataframe('Storage').to_dict()\nassert_dict_equal(actual_dict, expected_dict)\ndss.Basic.LegacyModels(False)\nassert not dss.Basic.LegacyModels()\nassert dss.utils.run_command('Redirect {}'.format(PATH_TO_DSS)\n    ) == '', 'Unable to find test data'\ndss.run_command('New Storage.631')\nexpected_dict = pd.DataFrame({'%Charge': {'Storage.631': '100'},\n    '%Discharge': {'Storage.631': '100'}, '%EffCharge': {'Storage.631':\n    '90'}, '%EffDischarge': {'Storage.631': '90'}, '%IdlingkW': {\n    'Storage.631': '1'}, '%Idlingkvar': {'Storage.631': ''}, '%R': {\n    'Storage.631': '0'}, '%X': {'Storage.631': '50'}, '%reserve': {\n    'Storage.631': '20'}, '%stored': {'Storage.631': '100'}, 'Balanced': {\n    'Storage.631': 'No'}, 'ChargeTrigger': {'Storage.631': '0'},\n    'DischargeTrigger': {'Storage.631': '0'}, 'DispMode': {'Storage.631':\n    'default'}, 'DynaDLL': {'Storage.631': ''}, 'DynaData': {'Storage.631':\n    ()}, 'LimitCurrent': {'Storage.631': 'No'}, 'State': {'Storage.631':\n    'IDLING'}, 'TimeChargeTrig': {'Storage.631': '2'}, 'UserData': {\n    'Storage.631': ()}, 'UserModel': {'Storage.631': ''}, 'Vmaxpu': {\n    'Storage.631': '1.1'}, 'Vminpu': {'Storage.631': '0.9'}, 'basefreq': {\n    'Storage.631': '60'}, 'bus1': {'Storage.631': '631_1'}, 'class': {\n    'Storage.631': '1'}, 'conn': {'Storage.631': 'wye'}, 'daily': {\n    'Storage.631': ''}, 'debugtrace': {'Storage.631': 'NO'}, 'duty': {\n    'Storage.631': ''}, 'enabled': {'Storage.631': True}, 'kVA': {\n    'Storage.631': '25'}, 'kW': {'Storage.631': '-0.25'}, 'kWhrated': {\n    'Storage.631': '50'}, 'kWhstored': {'Storage.631': '50'}, 'kWrated': {\n    'Storage.631': '25'}, 'kv': {'Storage.631': '12.47'}, 'kvar': {\n    'Storage.631': '0'}, 'like': {'Storage.631': ''}, 'model': {\n    'Storage.631': '1'}, 'pf': {'Storage.631': '1'}, 'phases': {\n    'Storage.631': '3'}, 'spectrum': {'Storage.631': ''}, 'yearly': {\n    'Storage.631': ''}, '%Cutin': {'Storage.631': '0'}, '%Cutout': {\n    'Storage.631': '0'}, '%PminNoVars': {'Storage.631': '-1'},\n    '%PminkvarMax': {'Storage.631': '-1'}, '%kWrated': {'Storage.631':\n    '100'}, 'EffCurve': {'Storage.631': ''}, 'PFPriority': {'Storage.631':\n    'NO'}, 'VarFollowInverter': {'Storage.631': 'No'}, 'WattPriority': {\n    'Storage.631': 'NO'}, 'kvarMax': {'Storage.631': '25'}, 'kvarMaxAbs': {\n    'Storage.631': '25'}}).to_dict()\nactual_dict = dss.utils.class_to_dataframe('Storage').to_dict()\nassert_dict_equal(actual_dict, expected_dict)\n"
}