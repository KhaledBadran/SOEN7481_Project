{
    "functionName": "test_server_slow_job",
    "className": null,
    "fileName": "/PRIArobotics_&_HedgehogServer/tests_&_test_server.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "async def handler_callback(server, ident, msg):\n\n    async def task(*, task_status=trio.TASK_STATUS_IGNORED):\n        task_status.started()\n        async with server.job():\n            await trio.sleep(0.3)\n    await server.add_task(task)\n    return ack.Acknowledgement()\nasync with conn_req(handler_dict={io.Action: handler_callback}) as socket:\n    await assertReplyReq(socket, io.Action(0, io.INPUT_FLOATING), ack.OK)\n    await trio.sleep(0.4)\nrecords = [record for record in caplog.records if record.levelno >= logging\n    .WARNING]\nassert len(records) == 2 and 'Long running job on server loop' in records[0\n    ].message and 'Long running job finished after 300.0 ms' in records[1\n    ].message\ncheck_caplog.expected.update(records)\npytest.mark.trio"
}