{
    "functionName": "test_krige",
    "className": null,
    "fileName": "/bsmurphy_&_PyKrige/tests_&_test_api.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "pytest.importorskip('sklearn')\nfrom sklearn.model_selection import GridSearchCV\nnp.random.seed(1)\nX = np.random.randint(0, 400, size=(20, 3)).astype(float)\ny = 5 * np.random.rand(20)\nfor m, v in _method_and_vergiogram():\n    param_dict = {'method': [m], 'variogram_model': [v]}\n    estimator = GridSearchCV(Krige(), param_dict, n_jobs=-1, pre_dispatch=\n        '2*n_jobs', verbose=False, return_train_score=True, cv=5)\n    if m in ['ordinary', 'universal']:\n        estimator.fit(X=X[:, :2], y=y)\n    else:\n        estimator.fit(X=X, y=y)\n    if hasattr(estimator, 'best_score_'):\n        if m in threed_krige:\n            assert estimator.best_score_ > -10.0\n        else:\n            assert estimator.best_score_ > -3.0\n    if hasattr(estimator, 'cv_results_'):\n        assert estimator.cv_results_['mean_train_score'] > 0\n"
}