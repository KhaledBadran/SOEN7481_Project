{
    "functionName": "test_m_min_orbitrap",
    "className": null,
    "fileName": "/MetaSys-LISBP_&_IsoCor/isocor_&_tests_&_test_m_min_orbitrap.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Calculation of the minimal *mass* difference (m_min) required to resolve two isotopic species\n    of a labeled chemical at different resolution (10000, 100000) & charge (1, 2) on an *Orbitrap*.\n    m_min calculated by IsoCor is compared to the expected value (provided in the fixture) and to the\n    theoretical value (equation provided in the code).\n    This is checked for correctors instantiated through the Factory or directly as HighResMetaboliteCorrector. \n    \"\"\"\ncharge = data['charge']\nmw = data['nC'] * float(data_iso['C']['mass'][0])\nmz = mw / charge\nm_min_th = 1.66 * (mw / charge) ** (3 / 2) / (data['resolution'] * math.\n    sqrt(400)) * charge\nmetabolite_hr = hrcor.HighResMetaboliteCorrector(data['formula'], '13C',\n    data_isotopes=data_iso, resolution=data['resolution'],\n    resolution_formula_code='orbitrap', derivative_formula=None,\n    mz_of_resolution=400, correct_NA_tracer=False, tracer_purity=[0.0, 1.0],\n    charge=charge)\nm_min_isocor_hr = float(metabolite_hr._correction_limit)\nmetabolite_factory = hrcor.MetaboliteCorrectorFactory(data['formula'],\n    '13C', data_isotopes=data_iso, resolution=data['resolution'],\n    resolution_formula_code='orbitrap', derivative_formula=None,\n    mz_of_resolution=400, correct_NA_tracer=False, tracer_purity=[0.0, 1.0],\n    charge=charge)\nm_min_isocor_factory = float(metabolite_factory._correction_limit)\nnp.testing.assert_allclose(m_min_isocor_hr, m_min_th, rtol=1e-07, atol=1e-07)\nnp.testing.assert_allclose(m_min_isocor_factory, m_min_th, rtol=1e-07, atol\n    =1e-07)\npytest.mark.parametrize('data', [{'formula': 'C20', 'nC': 20, 'resolution':\n    10000, 'charge': 1}, {'formula': 'C20', 'nC': 20, 'resolution': 100000,\n    'charge': 1}, {'formula': 'C20', 'nC': 20, 'resolution': 100000,\n    'charge': 2}])"
}