{
    "functionName": "test_splunk_logging",
    "className": "TestCase",
    "fileName": "/IntegralDefense_&_ACE/lib_&_saq_&_modules_&_test_email.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "splunk_log_dir = os.path.join(saq.DATA_DIR, saq.CONFIG['splunk_logging'][\n    'splunk_log_dir'], 'smtp')\nif os.path.isdir(splunk_log_dir):\n    shutil.rmtree(splunk_log_dir)\n    os.mkdir(splunk_log_dir)\nroot = create_root_analysis(alert_type='mailbox')\nroot.initialize_storage()\nshutil.copy(os.path.join('test_data', 'emails',\n    'splunk_logging.email.rfc822'), os.path.join(root.storage_dir,\n    'email.rfc822'))\nfile_observable = root.add_observable(F_FILE, 'email.rfc822')\nfile_observable.add_directive(DIRECTIVE_ORIGINAL_EMAIL)\nroot.save()\nroot.schedule()\nengine = TestEngine()\nengine.enable_module('analysis_module_file_type', 'test_groups')\nengine.enable_module('analysis_module_email_analyzer', 'test_groups')\nengine.enable_module('analysis_module_email_logger', 'test_groups')\nengine.enable_module('analysis_module_url_extraction', 'test_groups')\nengine.controlled_stop()\nengine.start()\nengine.wait()\nsplunk_files = os.listdir(splunk_log_dir)\nself.assertEquals(len(splunk_files), 3)\nsmtp_file = None\nurl_file = None\nfields_file = None\nfor _file in splunk_files:\n    if _file.startswith('smtp-'):\n        smtp_file = os.path.join(splunk_log_dir, _file)\n    elif _file.startswith('url-'):\n        url_file = os.path.join(splunk_log_dir, _file)\n    elif _file == 'fields':\n        fields_file = os.path.join(splunk_log_dir, _file)\nself.assertIsNotNone(smtp_file)\nself.assertIsNotNone(url_file)\nself.assertIsNotNone(fields_file)\nwith open(smtp_file, 'r') as fp:\n    smtp_logs = fp.read()\nwith open(url_file, 'r') as fp:\n    url_logs = fp.read()\nsmtp_logs = [_ for _ in smtp_logs.split('\\n') if _]\nurl_logs = [_ for _ in url_logs.split('\\n') if _]\nself.assertEquals(len(smtp_logs), 1)\nself.assertEquals(len(url_logs), 3)\nurl_fields = url_logs[0].split('\\x1e')\nself.assertEquals(len(url_fields), 3)\nsmtp_fields = smtp_logs[0].split('\\x1e')\nself.assertEquals(len(smtp_fields), 25)\nwith open(fields_file, 'r') as fp:\n    fields = fp.readline().strip()\nself.assertEquals(fields,\n    'date,attachment_count,attachment_hashes,attachment_names,attachment_sizes,attachment_types,bcc,cc,env_mail_from,env_rcpt_to,extracted_urls,first_received,headers,last_received,mail_from,mail_to,message_id,originating_ip,path,reply_to,size,subject,user_agent,archive_path,x_mailer'\n    )\n"
}