{
    "functionName": "test_conv_pad",
    "className": null,
    "fileName": "/Lasagne_&_Lasagne/lasagne_&_tests_&_test_theano_extensions.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "import lasagne.theano_extensions.conv\nconv = getattr(lasagne.theano_extensions.conv, impl)\nX = T.tensor3()\nW = T.tensor3()\ninput = lasagne.utils.floatX(np.ones((1, 1, 12)))\nkernel = lasagne.utils.floatX(np.random.uniform(-1, 1, (2, 1, 3)))\nconv_theano = conv(X, W, input.shape, kernel.shape, border_mode=pad).eval({\n    X: input, W: kernel})\npad = pad[0] if isinstance(pad, tuple) else pad\ninput = np.pad(input, [(0, 0), (0, 0), (pad, pad)], mode='constant')\nconv_np = conv1d(input, kernel)\nassert np.allclose(conv_theano, conv_np)\npytest.mark.parametrize('impl', ['conv1d_mc0', 'conv1d_mc1'])pytest.mark.parametrize('pad', [1, (2,)])"
}