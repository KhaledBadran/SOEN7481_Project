{
    "functionName": "test_generate_corruptions_for_eval",
    "className": null,
    "fileName": "/Accenture_&_AmpliGraph/tests_&_ampligraph_&_evaluation_&_test_protocol.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "X = np.array([['a', 'x', 'b'], ['c', 'x', 'd'], ['e', 'x', 'f'], ['b', 'y',\n    'h'], ['a', 'y', 'l']])\nrel_to_idx, ent_to_idx = create_mappings(X)\nX = to_idx(X, ent_to_idx=ent_to_idx, rel_to_idx=rel_to_idx)\nwith tf.Session() as sess:\n    all_ent = tf.constant(list(ent_to_idx.values()), dtype=tf.int64)\n    x = tf.constant(np.array([X[0]]), dtype=tf.int64)\n    x_n_actual = sess.run(generate_corruptions_for_eval(x, all_ent))\n    x_n_expected = np.array([[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 0, 3], [0,\n        0, 4], [0, 0, 5], [0, 0, 6], [0, 0, 7], [0, 0, 1], [1, 0, 1], [2, 0,\n        1], [3, 0, 1], [4, 0, 1], [5, 0, 1], [6, 0, 1], [7, 0, 1]])\nnp.testing.assert_array_equal(x_n_actual, x_n_expected)\n"
}