{
    "functionName": "_charge_conservation_eq_source_term",
    "className": "IonicConduction",
    "fileName": "/pmeal_&_OpenPNM/openpnm_&_algorithms_&_IonicConduction.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "phase = self.project.phases()[self.settings['phase']]\nPs = self['pore.all'] * np.isnan(self['pore.bc_value']) * np.isnan(self[\n    'pore.bc_rate'])\nmod = gst.charge_conservation\nphys = self.project.find_physics(phase=phase)\nphys[0].add_model(propname='pore.charge_conservation', model=mod, phase=\n    phase, p_alg=self, e_alg=e_alg, assumption=self.settings[\n    'charge_conservation'])\nself.set_source(propname='pore.charge_conservation', pores=Ps)\n"
}