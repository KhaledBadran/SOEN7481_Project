{
    "functionName": "test_write_kmip_1_2",
    "className": "TestQueryResponsePayload",
    "fileName": "/OpenKMIP_&_PyKMIP/kmip_&_tests_&_unit_&_core_&_messages_&_payloads_&_test_query.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"\n        Test that a QueryResponsePayload structure can be written to a data\n        stream with KMIP 1.2 features.\n        \"\"\"\npayload = payloads.QueryResponsePayload(operations=[enums.Operation.CREATE,\n    enums.Operation.CREATE_KEY_PAIR, enums.Operation.REGISTER, enums.\n    Operation.REKEY, enums.Operation.CERTIFY, enums.Operation.RECERTIFY,\n    enums.Operation.LOCATE, enums.Operation.CHECK, enums.Operation.GET,\n    enums.Operation.GET_ATTRIBUTES, enums.Operation.GET_ATTRIBUTE_LIST,\n    enums.Operation.ADD_ATTRIBUTE, enums.Operation.MODIFY_ATTRIBUTE, enums.\n    Operation.DELETE_ATTRIBUTE, enums.Operation.OBTAIN_LEASE, enums.\n    Operation.GET_USAGE_ALLOCATION, enums.Operation.ACTIVATE, enums.\n    Operation.REVOKE, enums.Operation.DESTROY, enums.Operation.ARCHIVE,\n    enums.Operation.RECOVER, enums.Operation.QUERY, enums.Operation.CANCEL,\n    enums.Operation.POLL, enums.Operation.REKEY_KEY_PAIR, enums.Operation.\n    DISCOVER_VERSIONS], object_types=[enums.ObjectType.CERTIFICATE, enums.\n    ObjectType.SYMMETRIC_KEY, enums.ObjectType.PUBLIC_KEY, enums.ObjectType\n    .PRIVATE_KEY, enums.ObjectType.TEMPLATE, enums.ObjectType.SECRET_DATA],\n    vendor_identification='IBM test server, not-TKLM 2.0.1.1 KMIP 2.0.0.1',\n    server_information=misc.ServerInformation(), application_namespaces=[\n    'Namespace 1', 'Namespace 2'], extension_information=[objects.\n    ExtensionInformation(extension_name=objects.ExtensionName(\n    'ACME LOCATION'), extension_tag=objects.ExtensionTag(5548545),\n    extension_type=objects.ExtensionType(7)), objects.ExtensionInformation(\n    extension_name=objects.ExtensionName('ACME ZIP CODE'), extension_tag=\n    objects.ExtensionTag(5548546), extension_type=objects.ExtensionType(2))\n    ], attestation_types=[enums.AttestationType.TPM_QUOTE, enums.\n    AttestationType.TCG_INTEGRITY_REPORT, enums.AttestationType.SAML_ASSERTION]\n    )\nbuffer = utils.BytearrayStream()\npayload.write(buffer, kmip_version=enums.KMIPVersion.KMIP_1_2)\nself.assertEqual(len(self.full_encoding_kmip_1_2), len(buffer))\nself.assertEqual(str(self.full_encoding_kmip_1_2), str(buffer))\n"
}