{
    "functionName": "test_parse_profiles",
    "className": null,
    "fileName": "/alex-ber_&_AlexBerUtils/tests_&_utils_&_init_app_conf_test.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "logger.info(f'{request._pyfuncitem.name}()')\nprofiles = create_default_parser()._parse_profiles(sys_d, default_d)\npytest.assume(exp_profiles == profiles)\npytest.mark.parametrize('exp_profiles, sys_d, default_d', [(['dev', 'local'\n    ], {'general.profiles': 'dev,local'}, {'general': {'profiles': ['dev']}\n    }), (['prod'], {'general.profiles': 'prod'}, {'general': {'profiles': [\n    'dev']}}), (['dev'], {}, {'general': {'profiles': ['dev']}}), (['prod'],\n    {'general.profiles': 'prod'}, {}), (['prod'], {'general.profiles':\n    'prod'}, {'general': {'profiles': None}}), (['prod'], {\n    'general.profiles': 'prod'}, {'general': {'profiles': ['']}}), ([None],\n    {'general.profiles': None}, {'general': {'profiles': ['dev']}}), ([''],\n    {'general.profiles': ''}, {'general': {'profiles': ['dev']}}), ([], {\n    'general.log': 'something'}, {'general': {'log': {'root': 'INFO'}}})])"
}