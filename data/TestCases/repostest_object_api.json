{
    "functionName": "test_object_api",
    "className": null,
    "fileName": "/AO-StreetArt_&_PyAesel/test_&_test_transaction.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "print('Testing Object API')\nprint('Create base scene')\nscn = AeselScene()\nscn.name = 'test'\nscn.region = 'US-MD'\nscn.latitude = 100.0\nscn.longitude = 100.0\nscn.tags = []\nscn.devices = []\nscn_crt_resp = None\ntry:\n    scn_crt_resp = transaction_client.create_scene('objTestScene', scn)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(scn_crt_resp)\nprint('Create Object')\nobj = AeselObject()\nobj.name = 'testObject'\nobj.scene = 'objTestScene'\nobj.type = 'mesh'\nobj.subtype = 'cube'\nobj.frame = 0\nobj.translation = [1, 1, 1]\nobj_crt_resp = None\ntry:\n    obj_crt_resp = transaction_client.create_object('objTestScene', obj)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(obj_crt_resp)\nassert len(obj_crt_resp['objects']) > 0\nassert len(obj_crt_resp['objects'][0]['key']) > 0\nobj_key = obj_crt_resp['objects'][0]['key']\nprint('Get Object')\nobj_get_resp = None\ntry:\n    obj_get_resp = transaction_client.get_object('objTestScene', obj_key)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(obj_get_resp)\nassert len(obj_get_resp['objects']) > 0\nprint('Update Object')\nobj_upd = AeselObject()\nobj_upd.name = 'testObject2'\nobj_upd.type = 'curve'\nobj_upd.subtype = 'circle'\nobj_upd_resp = None\ntry:\n    obj_upd_resp = transaction_client.update_object('objTestScene', obj_key,\n        obj_upd)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(obj_upd_resp)\nassert len(obj_upd_resp['objects']) > 0\nprint('Query Objects')\nobj_query = AeselObject()\nobj_query.name = 'testObject2'\nobj_query.frame = 0\nobj_query_resp = None\ntry:\n    obj_query_resp = transaction_client.object_query('objTestScene', obj_query)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(obj_query_resp)\nassert len(obj_query_resp['objects']) > 0\nprint('Add Object Action')\nobj_action = AeselAction()\nobj_action.name = 'testObjAction'\nobj_action.description = 'this is an Object Action'\nobj_frame_initial = AeselObjectFrame()\nobj_frame_initial.frame = 1\nobj_frame_initial.transform = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,\n    1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]\nfor i in range(0, 3):\n    handle = AeselGraphHandle()\n    handle.left_type = 'test'\n    handle.left_x = 10.0 + i\n    handle.left_y = 10.2 + i\n    handle.right_type = 'test2'\n    handle.right_x = 10.1 + i\n    handle.right_y = 10.3 + i\n    obj_frame_initial.translation_handle.append(handle)\nfor i in range(0, 4):\n    handle = AeselGraphHandle()\n    handle.left_type = 'test'\n    handle.left_x = 10.0 + i\n    handle.left_y = 10.2 + i\n    handle.right_type = 'test2'\n    handle.right_x = 10.1 + i\n    handle.right_y = 10.3 + i\n    obj_frame_initial.rotation_handle.append(handle)\nfor i in range(0, 3):\n    handle = AeselGraphHandle()\n    handle.left_type = 'test'\n    handle.left_x = 10.0 + i\n    handle.left_y = 10.2 + i\n    handle.right_type = 'test2'\n    handle.right_x = 10.1 + i\n    handle.right_y = 10.3 + i\n    obj_frame_initial.scale_handle.append(handle)\nobj_action.keyframes = [obj_frame_initial]\ntry:\n    obj_action_add_resp = transaction_client.create_object_action(\n        'objTestScene', obj_key, obj_action)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(obj_action_add_resp)\nassert obj_action_add_resp['err_code'] == 100\nprint('Update Object Action')\nobj_action2 = AeselAction()\nobj_action2.name = 'testObjAction'\nobj_action2.description = 'this is an updated Object Action'\ntry:\n    obj_action_upd_resp = transaction_client.update_object_action(\n        'objTestScene', obj_key, obj_action2)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(obj_action_upd_resp)\nassert obj_action_upd_resp['err_code'] == 100\nprint('Add Object Frame')\nobj_frame2 = AeselObjectFrame()\nobj_frame2.frame = 10\nobj_frame2.transform = [1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, \n    1.0, 1.0, 1.0, 1.0, 1.0, 1.0]\nfor i in range(0, 3):\n    handle = AeselGraphHandle()\n    handle.left_type = 'test2'\n    handle.left_x = 11.0 + i\n    handle.left_y = 11.2 + i\n    handle.right_type = 'test23'\n    handle.right_x = 12.1 + i\n    handle.right_y = 12.3 + i\n    obj_frame2.translation_handle.append(handle)\nfor i in range(0, 4):\n    handle = AeselGraphHandle()\n    handle.left_type = 'test4'\n    handle.left_x = 13.0 + i\n    handle.left_y = 13.2 + i\n    handle.right_type = 'test25'\n    handle.right_x = 14.1 + i\n    handle.right_y = 14.3 + i\n    obj_frame2.rotation_handle.append(handle)\nfor i in range(0, 3):\n    handle = AeselGraphHandle()\n    handle.left_type = 'test6'\n    handle.left_x = 15.0 + i\n    handle.left_y = 15.2 + i\n    handle.right_type = 'test27'\n    handle.right_x = 16.1 + i\n    handle.right_y = 16.3 + i\n    obj_frame2.scale_handle.append(handle)\ntry:\n    obj_frame_add_resp = transaction_client.create_object_frame('objTestScene',\n        obj_key, 'testObjAction', obj_frame2)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(obj_frame_add_resp)\nassert obj_frame_add_resp['err_code'] == 100\nprint('Update Object Frame')\nobj_frame3 = AeselObjectFrame()\nobj_frame3.frame = 10\nobj_frame3.transform = [1.0, 0.0, 1.0, 0.0, 2.0, 1.0, 0.0, 1.0, 1.0, 1.0, \n    1.0, 0.0, 2.0, 1.0, 1.0, 1.0]\nfor i in range(0, 3):\n    handle = AeselGraphHandle()\n    handle.left_type = 'test23'\n    handle.left_x = 12.0 + i\n    handle.left_y = 12.2 + i\n    handle.right_type = 'test234'\n    handle.right_x = 13.1 + i\n    handle.right_y = 13.3 + i\n    obj_frame3.translation_handle.append(handle)\nfor i in range(0, 4):\n    handle = AeselGraphHandle()\n    handle.left_type = 'test45'\n    handle.left_x = 14.0 + i\n    handle.left_y = 14.2 + i\n    handle.right_type = 'test256'\n    handle.right_x = 15.1 + i\n    handle.right_y = 15.3 + i\n    obj_frame3.rotation_handle.append(handle)\nfor i in range(0, 3):\n    handle = AeselGraphHandle()\n    handle.left_type = 'test67'\n    handle.left_x = 16.0 + i\n    handle.left_y = 16.2 + i\n    handle.right_type = 'test278'\n    handle.right_x = 17.1 + i\n    handle.right_y = 17.3 + i\n    obj_frame3.scale_handle.append(handle)\ntry:\n    obj_frame_upd_resp = transaction_client.update_object_frame('objTestScene',\n        obj_key, 'testObjAction', obj_frame3)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(obj_frame_upd_resp)\nassert obj_frame_upd_resp['err_code'] == 100\ntry:\n    obj_frame_del_resp = transaction_client.delete_object_frame('objTestScene',\n        obj_key, 'testObjAction', 10)\nexcept Exception as e:\n    print(e)\n    assert False\nprint(obj_frame_del_resp)\nassert obj_frame_del_resp['err_code'] == 100\nprint('Delete Object Action')\ntry:\n    obj_action_del_resp = transaction_client.delete_object_action(\n        'objTestScene', obj_key, 'testObjAction')\nexcept Exception as e:\n    print(e)\n    assert False\nprint(obj_action_del_resp)\nassert obj_action_del_resp['err_code'] == 100\nprint('Lock Object')\ntry:\n    transaction_client.lock_object('objTestScene', obj_key, 'testDevice')\nexcept Exception as e:\n    print(e)\n    assert False\nprint('Unlock Object')\ntry:\n    transaction_client.unlock_object('objTestScene', obj_key, 'testDevice')\nexcept Exception as e:\n    print(e)\n    assert False\nprint('Delete Object')\ntry:\n    transaction_client.delete_object('objTestScene', obj_key)\nexcept Exception as e:\n    print(e)\n    assert False\n"
}