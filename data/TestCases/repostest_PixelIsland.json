{
    "functionName": "test_PixelIsland",
    "className": null,
    "fileName": "/PaulHancock_&_Aegean/tests_&_test_models.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "\"\"\"Tests\"\"\"\npi = models.PixelIsland()\ntry:\n    pi.set_mask(np.ones((2, 2, 2)))\nexcept AssertionError:\n    pass\nelse:\n    raise AssertionError('set_mask should complain when given 3d data')\ndata = np.ones((2, 2))\npi.set_mask(data)\nif pi.mask is not data:\n    raise AssertionError('set_mask is not storing the mask properly')\ntry:\n    pi.calc_bounding_box(data, offsets=[0, 0, 0])\nexcept AssertionError:\n    pass\nelse:\n    raise AssertionError(\n        'calc_bounding_box should complain about mismatched offsets')\npi.calc_bounding_box(data, offsets=[0, 0])\nif not np.all(pi.bounding_box == [[0, 2], [0, 2]]):\n    raise AssertionError('bounding box not computed correctly')\ndata = np.zeros((5, 5))\ndata[2, 3] = 1\npi.calc_bounding_box(data, offsets=[0, 0])\nif not np.all(pi.bounding_box == [[2, 3], [3, 4]]):\n    raise AssertionError('bounding box not computed correctly')\n"
}