{
    "functionName": "parseJSONResponse",
    "className": "TestGecko",
    "fileName": "/browserium_&_Browserium/TestFunction_&_unittests_&_test_gecko.py",
    "projectName": "repos",
    "Label": false,
    "isTest": false,
    "Body": "linux_downloadURL_32 = None\nlinux_downloadURL_64 = None\nmac_downloadURL = None\nlinux_tagName_32 = None\nlinux_tagName_64 = None\nmac_tagName = None\nenv = {}\n_response = requests.get(self.parseJSONGecko())\nif _response.status_code == 200:\n    data = _response.json()\n    for ent in data['assets']:\n        if 'linux32.tar.gz' in ent['browser_download_url']:\n            linux_downloadURL_32 = ent['browser_download_url']\n            linux_tagName_32 = ent['name']\n        if 'linux64.tar.gz' in ent['browser_download_url']:\n            linux_downloadURL_64 = ent['browser_download_url']\n            linux_tagName_64 = ent['name']\n        if 'macos.tar.gz' in ent['browser_download_url']:\n            mac_downloadURL = ent['browser_download_url']\n            mac_tagName = ent['name']\nenv = {'linux_downloadURL_32': linux_downloadURL_32, 'linux_tagName_32':\n    linux_tagName_32, 'linux_downloadURL_64': linux_downloadURL_64,\n    'linux_tagName_64': linux_tagName_64, 'mac_downloadURL':\n    mac_downloadURL, 'mac_tagName': mac_tagName}\nreturn env\n"
}