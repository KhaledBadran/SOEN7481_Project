{
    "functionName": "test_files_write_read",
    "className": null,
    "fileName": "/YoSTEALTH_&_Liburing/test_&_file_test.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "fd = os.open(os.path.join(tmpdir, '1.txt'), os.O_RDWR | os.O_CREAT, 432)\nring = liburing.io_uring()\ncqes = liburing.io_uring_cqes(2)\none = bytearray(b'hello')\ntwo = bytearray(b'world')\nvec_one = liburing.iovec(one)\nvec_two = liburing.iovec(two)\ntry:\n    assert liburing.io_uring_queue_init(2, ring, 0) == 0\n    sqe = liburing.io_uring_get_sqe(ring)\n    liburing.io_uring_prep_write(sqe, fd, vec_one[0].iov_base, vec_one[0].\n        iov_len, 0)\n    sqe.user_data = 1\n    sqe = liburing.io_uring_get_sqe(ring)\n    liburing.io_uring_prep_writev(sqe, fd, vec_two, len(vec_two), 5)\n    sqe.user_data = 2\n    assert liburing.io_uring_submit(ring) == 2\n    assert liburing.io_uring_wait_cqes(ring, cqes, 2) == 0\n    cqe = cqes[0]\n    assert cqe.res == 5\n    assert cqe.user_data == 1\n    liburing.io_uring_cqe_seen(ring, cqe)\n    assert liburing.io_uring_wait_cqes(ring, cqes, 2) == 0\n    cqe = cqes[0]\n    assert cqe.res == 5\n    assert cqe.user_data == 2\n    liburing.io_uring_cqe_seen(ring, cqe)\n    sqe = liburing.io_uring_get_sqe(ring)\n    liburing.io_uring_prep_readv(sqe, fd, vec_one, len(vec_one), 5)\n    sqe.user_data = 3\n    assert liburing.io_uring_submit(ring) == 1\n    assert liburing.io_uring_wait_cqe(ring, cqes) == 0\n    cqe = cqes[0]\n    assert cqe.res == 5\n    assert cqe.user_data == 3\n    liburing.io_uring_cq_advance(ring, 1)\n    sqe = liburing.io_uring_get_sqe(ring)\n    liburing.io_uring_prep_read(sqe, fd, vec_two[0].iov_base, vec_two[0].\n        iov_len, 0)\n    sqe.user_data = 4\n    assert liburing.io_uring_submit(ring) == 1\n    assert liburing.io_uring_wait_cqe(ring, cqes) == 0\n    cqe = cqes[0]\n    assert cqe.res == 5\n    assert cqe.user_data == 4\n    liburing.io_uring_cq_advance(ring, 1)\n    assert one == b'world'\n    assert two == b'hello'\nfinally:\n    os.close(fd)\n    liburing.io_uring_queue_exit(ring)\n"
}