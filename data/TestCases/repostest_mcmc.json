{
    "functionName": "test_mcmc",
    "className": null,
    "fileName": "/jamesross2_&_Bayesian-HMM/tests_&_test_mcmc.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "base_sequence = list(range(5))\nsequences = [(base_sequence * 5) for _ in range(5)]\nhmm = bayesian_hmm.HDPHMM(sequences)\nhmm.initialise(k=20)\nresults = hmm.mcmc(n=100, burn_in=20)\nexpected_results_keys = ['state_count', 'loglikelihood',\n    'chain_loglikelihood', 'hyperparameters', 'beta_emission',\n    'beta_transition', 'parameters']\nexpected_hyperparameters_keys = ['alpha', 'gamma', 'alpha_emission',\n    'gamma_emission', 'kappa']\nassert len(results) == 7\nassert list(results.keys()) == expected_results_keys\nassert all(len(r) == 8 for r in results.values())\nassert all(type(r) == list for r in results.values())\nassert all(type(x) == int for x in results['state_count'])\nassert all(type(x) == numpy.float64 for k in ['loglikelihood',\n    'chain_loglikelihood'] for x in results[k])\nassert all(type(x) == dict for x in results['hyperparameters'])\nassert all(list(x.keys()) == expected_hyperparameters_keys for x in results\n    ['hyperparameters'])\nassert all(type(y) == float for x in results['hyperparameters'] for y in x.\n    values())\nassert all(y >= 0 for x in results['hyperparameters'] for y in x.values())\nassert all(type(x) == dict for x in results['beta_emission'])\nassert all(type(y) == float for x in results['beta_emission'] for y in x.\n    values())\nassert all(type(x) == dict for x in results['beta_transition'])\nassert all(type(y) == float for x in results['beta_transition'] for y in x.\n    values())\nassert all(type(x) == dict for x in results['parameters'])\nassert all(type(y) == dict for x in results['parameters'] for y in x.values())\nassert all(type(y) == str or y is None for x in results['parameters'] for y in\n    x['p_initial'])\nassert all(type(y) == dict for x in results['parameters'] for y in x[\n    'p_transition'].values())\nassert all(type(y) == dict for x in results['parameters'] for y in x[\n    'p_emission'].values())\n"
}