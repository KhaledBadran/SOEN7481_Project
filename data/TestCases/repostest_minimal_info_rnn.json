{
    "functionName": "test_minimal_info_rnn",
    "className": null,
    "fileName": "/dbehrlich_&_PsychRNN/test_&_backend_&_test_rnn.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "params = get_params()\ndel params['name']\nwith pytest.raises(KeyError) as excinfo:\n    RNN(params)\nassert 'name' in str(excinfo.value)\nparams = get_params()\ndel params['N_in']\nwith pytest.raises(KeyError) as excinfo:\n    RNN(params)\nassert 'N_in' in str(excinfo.value)\nparams = get_params()\ndel params['N_rec']\nwith pytest.raises(KeyError) as excinfo:\n    RNN(params)\nassert 'N_rec' in str(excinfo.value)\nparams = get_params()\ndel params['N_out']\nwith pytest.raises(KeyError) as excinfo:\n    RNN(params)\nassert 'N_out' in str(excinfo.value)\nparams = get_params()\ndel params['N_steps']\nwith pytest.raises(KeyError) as excinfo:\n    RNN(params)\nassert 'N_steps' in str(excinfo.value)\nparams = get_params()\ndel params['dt']\nwith pytest.raises(KeyError) as excinfo:\n    RNN(params)\nassert 'dt' in str(excinfo.value)\nparams = get_params()\ndel params['tau']\nwith pytest.raises(KeyError) as excinfo:\n    RNN(params)\nassert 'tau' in str(excinfo.value)\nparams = get_params()\ndel params['N_batch']\nwith pytest.raises(KeyError) as excinfo:\n    RNN(params)\nassert 'N_batch' in str(excinfo.value)\nparams = get_params()\nRNN(params)\npatch.object(RNN, '__abstractmethods__', set())"
}