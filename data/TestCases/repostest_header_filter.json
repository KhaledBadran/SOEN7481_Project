{
    "functionName": "test_header_filter",
    "className": null,
    "fileName": "/OvalMoney_&_Nephthys/tests_&_test_filters_&_test_requests.py",
    "projectName": "repos",
    "Label": false,
    "isTest": true,
    "Body": "head_filter = HeaderFilter(filters, req_type)\nhead_filter.filter(in_record)\nassert in_record.asdict() == out_record.asdict()\npytest.mark.parametrize('filters,req_type,in_record,out_record', [([\n    'X-Filter-me'], RequestType.REQUEST, req_rec_generator(request_headers=\n    [('X-Filter-Me', 'value1'), ('X-Not-Filter-Me', 'value2')],\n    response_headers=[('X-Filter-Me', 'value1'), ('X-Not-Filter-Me',\n    'value2')]), req_rec_generator(request_headers=[('X-Filter-Me',\n    HEADER_FILTERED), ('X-Not-Filter-Me', 'value2')], response_headers=[(\n    'X-Filter-Me', 'value1'), ('X-Not-Filter-Me', 'value2')])), ([\n    'X-Filter-Me'], RequestType.RESPONSE, req_rec_generator(request_headers\n    =[('X-Filter-Me', 'value1'), ('X-Not-Filter-Me', 'value2')],\n    response_headers=[('X-Filter-Me', 'value1'), ('X-Not-Filter-Me',\n    'value2')]), req_rec_generator(request_headers=[('X-Filter-Me',\n    'value1'), ('X-Not-Filter-Me', 'value2')], response_headers=[(\n    'X-Filter-Me', HEADER_FILTERED), ('X-Not-Filter-Me', 'value2')])), ([\n    'X-Filter-Me'], RequestType.ALL, req_rec_generator(request_headers=[(\n    'X-Filter-Me', 'value1'), ('X-Not-Filter-Me', 'value2')],\n    response_headers=[('X-Filter-Me', 'value1'), ('X-Not-Filter-Me',\n    'value2')]), req_rec_generator(request_headers=[('X-Filter-Me',\n    HEADER_FILTERED), ('X-Not-Filter-Me', 'value2')], response_headers=[(\n    'X-Filter-Me', HEADER_FILTERED), ('X-Not-Filter-Me', 'value2')])), ([\n    'X-Filter-Me'], RequestType.ALL, req_rec_generator(request_headers=[(\n    'X-Filter-Me', 'value1'), ('X-Not-Filter-Me', 'value2')]),\n    req_rec_generator(request_headers=[('X-Filter-Me', HEADER_FILTERED), (\n    'X-Not-Filter-Me', 'value2')])), ([], RequestType.ALL,\n    req_rec_generator(request_headers=[('X-Filter-Me', 'value1'), (\n    'X-Not-Filter-Me', 'value2')], response_headers=[('X-Filter-Me',\n    'value1'), ('X-Not-Filter-Me', 'value2')]), req_rec_generator(\n    request_headers=[('X-Filter-Me', 'value1'), ('X-Not-Filter-Me',\n    'value2')], response_headers=[('X-Filter-Me', 'value1'), (\n    'X-Not-Filter-Me', 'value2')])), (['X-Filter-Me'], RequestType.ALL,\n    rec_generator(), rec_generator())])"
}